/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/browser/index.ts");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/@tlaukkan/aframe-material-collection-ts/built/package.json":
/*!*********************************************************************************!*\
  !*** ./node_modules/@tlaukkan/aframe-material-collection-ts/built/package.json ***!
  \*********************************************************************************/
/*! exports provided: name, version, description, main, types, homepage, keywords, scripts, repository, bugs, devDependencies, author, license, dependencies, default */
/***/ (function(module) {

eval("module.exports = {\"name\":\"@tlaukkan/aframe-material-collection-ts\",\"version\":\"0.5.17\",\"description\":\"Material UI based primitives and components for use in your aframe projects.\",\"main\":\"built/src/index.js\",\"types\":\"built/src/index.d.ts\",\"homepage\":\"https://github.com/shaneharris/aframe-material-collection\",\"keywords\":[\"AFRAME\",\"UI\",\"Material\"],\"scripts\":{\"start\":\"webpack-dev-server --mode development\",\"build\":\"webpack --mode production\",\"build:typescript\":\"tsc\",\"test\":\"karma start karma.config.js\",\"prepublishOnly\":\"npm run build && npm run build:typescript\"},\"repository\":{\"type\":\"git\",\"url\":\"git@github.com:shaneharris/aframe-material-collection.git\"},\"bugs\":{\"url\":\"https://github.com/shaneharris/aframe-material-collection/issues\"},\"devDependencies\":{\"@types/chai\":\"^4.1.6\",\"@types/es6-promise\":\"^3.3.0\",\"@types/mocha\":\"^5.2.5\",\"chai\":\"*\",\"uglifyjs-webpack-plugin\":\"^1.2.7\",\"karma\":\"^3.1.4\",\"karma-chai\":\"^0.1.0\",\"karma-chrome-launcher\":\"^2.2.0\",\"karma-firefox-launcher\":\"^1.1.0\",\"karma-ie-launcher\":\"^1.0.0\",\"karma-mocha\":\"^1.3.0\",\"karma-webpack\":\"^3.0.5\",\"mocha\":\"*\",\"ts-loader\":\"^5.2.1\",\"typescript\":\"^3.1.1\",\"webpack\":\"^4.16.1\",\"webpack-cli\":\"^3.1.0\",\"webpack-dev-server\":\"^3.1.14\"},\"author\":\"Shane Harris,Tommi Laukkanen\",\"license\":\"MIT\",\"dependencies\":{\"@tweenjs/tween.js\":\"^16.3.5\",\"@types/aframe\":\"^0.8.2\",\"@types/three\":\"^0.93.18\",\"@types/tweenjs\":\"^1.0.0\",\"aframe-typescript-boilerplate\":\"^0.0.4\",\"typeflex\":\"0.0.1\",\"worker-loader\":\"^2.0.0\"}};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9AdGxhdWtrYW4vYWZyYW1lLW1hdGVyaWFsLWNvbGxlY3Rpb24tdHMvYnVpbHQvcGFja2FnZS5qc29uLmpzIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@tlaukkan/aframe-material-collection-ts/built/package.json\n");

/***/ }),

/***/ "./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/Border.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/Border.js ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst built_1 = __webpack_require__(/*! aframe-typescript-boilerplate/built */ \"./node_modules/aframe-typescript-boilerplate/built/index.js\");\nconst three_1 = __webpack_require__(/*! three */ \"three\");\nconst UiElement_1 = __webpack_require__(/*! ./UiElement */ \"./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/UiElement.js\");\nclass Border extends UiElement_1.UiElement {\n    constructor(component, entity, data) {\n        super(component, entity, data);\n    }\n    init() {\n        let mesh = this.component.el.getObject3D('mesh');\n        let metadata = mesh.geometry.metadata;\n        let roundedRectShape = new three_1.Shape();\n        this.roundedRect(roundedRectShape, metadata.parameters.width, metadata.parameters.height, this.data.borderRadius, false);\n        this.roundedRect(roundedRectShape, metadata.parameters.width - this.data.borderWidth * 2, metadata.parameters.height - this.data.borderWidth * 2, this.data.borderRadius, true);\n        this.component.el.setObject3D('mesh', new three_1.Mesh(new three_1.ShapeGeometry(roundedRectShape, this.data.curveSegments), new three_1.MeshBasicMaterial({ color: this.data.color })));\n    }\n    tick(time, timeDelta) { }\n    roundedRect(ctx, width, height, radius, isHole) {\n        let x = -width / 2, y = -height / 2;\n        // Draw the Rounded rectangle shape centered in the object - from js shapes example.\n        let shapeCtx;\n        if (isHole) {\n            shapeCtx = ctx;\n            ctx = new three_1.Path();\n        }\n        ctx.moveTo(x, y + radius);\n        ctx.lineTo(x, y + height - radius);\n        ctx.quadraticCurveTo(x, y + height, x + radius, y + height);\n        ctx.lineTo(x + width - radius, y + height);\n        ctx.quadraticCurveTo(x + width, y + height, x + width, y + height - radius);\n        ctx.lineTo(x + width, y + radius);\n        ctx.quadraticCurveTo(x + width, y, x + width - radius, y);\n        ctx.lineTo(x + radius, y);\n        ctx.quadraticCurveTo(x, y, x, y + radius);\n        if (isHole) {\n            shapeCtx.holes.push(ctx);\n        }\n    }\n}\nBorder.DEFINITION = new built_1.ComponentControllerDefinition(\n/* Name */ \"ui-border\", \n/* Schema */ {\n    borderRadius: { type: 'number', default: 0.01 },\n    curveSegments: { type: 'int', default: 5 },\n    borderWidth: { type: 'number', default: 0.008 },\n    color: { default: \"#5f5f5f\" },\n    numberOfPoints: { type: 'int', default: 180 }\n}, \n/* Multiple */ false, \n/* Receive ticks */ false, \n/* Factory function */ (component, entity, data) => new Border(component, entity, data));\nexports.Border = Border;\n//# sourceMappingURL=Border.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHRsYXVra2FuL2FmcmFtZS1tYXRlcmlhbC1jb2xsZWN0aW9uLXRzL2J1aWx0L3NyYy9jb21wb25lbnRzL0JvcmRlci5qcz80NDQ1Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQThDLGNBQWM7QUFDNUQsZ0JBQWdCLG1CQUFPLENBQUMsd0dBQXFDO0FBQzdELGdCQUFnQixtQkFBTyxDQUFDLG9CQUFPO0FBQy9CLG9CQUFvQixtQkFBTyxDQUFDLDZHQUFhO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0tBQW9LLHlCQUF5QjtBQUM3TDtBQUNBLDJCQUEyQjtBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixnQ0FBZ0M7QUFDbkQsb0JBQW9CLDBCQUEwQjtBQUM5QyxrQkFBa0IsaUNBQWlDO0FBQ25ELFlBQVkscUJBQXFCO0FBQ2pDLHFCQUFxQjtBQUNyQixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9AdGxhdWtrYW4vYWZyYW1lLW1hdGVyaWFsLWNvbGxlY3Rpb24tdHMvYnVpbHQvc3JjL2NvbXBvbmVudHMvQm9yZGVyLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCBidWlsdF8xID0gcmVxdWlyZShcImFmcmFtZS10eXBlc2NyaXB0LWJvaWxlcnBsYXRlL2J1aWx0XCIpO1xuY29uc3QgdGhyZWVfMSA9IHJlcXVpcmUoXCJ0aHJlZVwiKTtcbmNvbnN0IFVpRWxlbWVudF8xID0gcmVxdWlyZShcIi4vVWlFbGVtZW50XCIpO1xuY2xhc3MgQm9yZGVyIGV4dGVuZHMgVWlFbGVtZW50XzEuVWlFbGVtZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihjb21wb25lbnQsIGVudGl0eSwgZGF0YSkge1xuICAgICAgICBzdXBlcihjb21wb25lbnQsIGVudGl0eSwgZGF0YSk7XG4gICAgfVxuICAgIGluaXQoKSB7XG4gICAgICAgIGxldCBtZXNoID0gdGhpcy5jb21wb25lbnQuZWwuZ2V0T2JqZWN0M0QoJ21lc2gnKTtcbiAgICAgICAgbGV0IG1ldGFkYXRhID0gbWVzaC5nZW9tZXRyeS5tZXRhZGF0YTtcbiAgICAgICAgbGV0IHJvdW5kZWRSZWN0U2hhcGUgPSBuZXcgdGhyZWVfMS5TaGFwZSgpO1xuICAgICAgICB0aGlzLnJvdW5kZWRSZWN0KHJvdW5kZWRSZWN0U2hhcGUsIG1ldGFkYXRhLnBhcmFtZXRlcnMud2lkdGgsIG1ldGFkYXRhLnBhcmFtZXRlcnMuaGVpZ2h0LCB0aGlzLmRhdGEuYm9yZGVyUmFkaXVzLCBmYWxzZSk7XG4gICAgICAgIHRoaXMucm91bmRlZFJlY3Qocm91bmRlZFJlY3RTaGFwZSwgbWV0YWRhdGEucGFyYW1ldGVycy53aWR0aCAtIHRoaXMuZGF0YS5ib3JkZXJXaWR0aCAqIDIsIG1ldGFkYXRhLnBhcmFtZXRlcnMuaGVpZ2h0IC0gdGhpcy5kYXRhLmJvcmRlcldpZHRoICogMiwgdGhpcy5kYXRhLmJvcmRlclJhZGl1cywgdHJ1ZSk7XG4gICAgICAgIHRoaXMuY29tcG9uZW50LmVsLnNldE9iamVjdDNEKCdtZXNoJywgbmV3IHRocmVlXzEuTWVzaChuZXcgdGhyZWVfMS5TaGFwZUdlb21ldHJ5KHJvdW5kZWRSZWN0U2hhcGUsIHRoaXMuZGF0YS5jdXJ2ZVNlZ21lbnRzKSwgbmV3IHRocmVlXzEuTWVzaEJhc2ljTWF0ZXJpYWwoeyBjb2xvcjogdGhpcy5kYXRhLmNvbG9yIH0pKSk7XG4gICAgfVxuICAgIHRpY2sodGltZSwgdGltZURlbHRhKSB7IH1cbiAgICByb3VuZGVkUmVjdChjdHgsIHdpZHRoLCBoZWlnaHQsIHJhZGl1cywgaXNIb2xlKSB7XG4gICAgICAgIGxldCB4ID0gLXdpZHRoIC8gMiwgeSA9IC1oZWlnaHQgLyAyO1xuICAgICAgICAvLyBEcmF3IHRoZSBSb3VuZGVkIHJlY3RhbmdsZSBzaGFwZSBjZW50ZXJlZCBpbiB0aGUgb2JqZWN0IC0gZnJvbSBqcyBzaGFwZXMgZXhhbXBsZS5cbiAgICAgICAgbGV0IHNoYXBlQ3R4O1xuICAgICAgICBpZiAoaXNIb2xlKSB7XG4gICAgICAgICAgICBzaGFwZUN0eCA9IGN0eDtcbiAgICAgICAgICAgIGN0eCA9IG5ldyB0aHJlZV8xLlBhdGgoKTtcbiAgICAgICAgfVxuICAgICAgICBjdHgubW92ZVRvKHgsIHkgKyByYWRpdXMpO1xuICAgICAgICBjdHgubGluZVRvKHgsIHkgKyBoZWlnaHQgLSByYWRpdXMpO1xuICAgICAgICBjdHgucXVhZHJhdGljQ3VydmVUbyh4LCB5ICsgaGVpZ2h0LCB4ICsgcmFkaXVzLCB5ICsgaGVpZ2h0KTtcbiAgICAgICAgY3R4LmxpbmVUbyh4ICsgd2lkdGggLSByYWRpdXMsIHkgKyBoZWlnaHQpO1xuICAgICAgICBjdHgucXVhZHJhdGljQ3VydmVUbyh4ICsgd2lkdGgsIHkgKyBoZWlnaHQsIHggKyB3aWR0aCwgeSArIGhlaWdodCAtIHJhZGl1cyk7XG4gICAgICAgIGN0eC5saW5lVG8oeCArIHdpZHRoLCB5ICsgcmFkaXVzKTtcbiAgICAgICAgY3R4LnF1YWRyYXRpY0N1cnZlVG8oeCArIHdpZHRoLCB5LCB4ICsgd2lkdGggLSByYWRpdXMsIHkpO1xuICAgICAgICBjdHgubGluZVRvKHggKyByYWRpdXMsIHkpO1xuICAgICAgICBjdHgucXVhZHJhdGljQ3VydmVUbyh4LCB5LCB4LCB5ICsgcmFkaXVzKTtcbiAgICAgICAgaWYgKGlzSG9sZSkge1xuICAgICAgICAgICAgc2hhcGVDdHguaG9sZXMucHVzaChjdHgpO1xuICAgICAgICB9XG4gICAgfVxufVxuQm9yZGVyLkRFRklOSVRJT04gPSBuZXcgYnVpbHRfMS5Db21wb25lbnRDb250cm9sbGVyRGVmaW5pdGlvbihcbi8qIE5hbWUgKi8gXCJ1aS1ib3JkZXJcIiwgXG4vKiBTY2hlbWEgKi8ge1xuICAgIGJvcmRlclJhZGl1czogeyB0eXBlOiAnbnVtYmVyJywgZGVmYXVsdDogMC4wMSB9LFxuICAgIGN1cnZlU2VnbWVudHM6IHsgdHlwZTogJ2ludCcsIGRlZmF1bHQ6IDUgfSxcbiAgICBib3JkZXJXaWR0aDogeyB0eXBlOiAnbnVtYmVyJywgZGVmYXVsdDogMC4wMDggfSxcbiAgICBjb2xvcjogeyBkZWZhdWx0OiBcIiM1ZjVmNWZcIiB9LFxuICAgIG51bWJlck9mUG9pbnRzOiB7IHR5cGU6ICdpbnQnLCBkZWZhdWx0OiAxODAgfVxufSwgXG4vKiBNdWx0aXBsZSAqLyBmYWxzZSwgXG4vKiBSZWNlaXZlIHRpY2tzICovIGZhbHNlLCBcbi8qIEZhY3RvcnkgZnVuY3Rpb24gKi8gKGNvbXBvbmVudCwgZW50aXR5LCBkYXRhKSA9PiBuZXcgQm9yZGVyKGNvbXBvbmVudCwgZW50aXR5LCBkYXRhKSk7XG5leHBvcnRzLkJvcmRlciA9IEJvcmRlcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUJvcmRlci5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/Border.js\n");

/***/ }),

/***/ "./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/Button.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/Button.js ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst built_1 = __webpack_require__(/*! aframe-typescript-boilerplate/built */ \"./node_modules/aframe-typescript-boilerplate/built/index.js\");\nconst UiElement_1 = __webpack_require__(/*! ./UiElement */ \"./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/UiElement.js\");\nclass Button extends UiElement_1.UiElement {\n    constructor(component, entity, data) {\n        super(component, entity, data);\n        this.defaultZ = 0;\n        this.is_clicked = false;\n    }\n    init() {\n        // Store the current button z value for animating mouse events\n        if (!this.entity.hasAttribute(\"color\")) {\n            this.entity.setAttribute(\"color\", this.colorTheme.secondary);\n        }\n        if (!this.entity.hasAttribute(\"font-color\")) {\n            this.entity.setAttribute(\"font-color\", this.colorTheme.secondaryOn);\n        }\n        this.defaultZ = this.component.el.object3D.position.z;\n        // register input events for interaction\n        if (!this.data.disabled) {\n            this.component.el.addEventListener('mouseenter', e => this.mouseEnter(e));\n            this.component.el.addEventListener('mousedown', e => this.mouseDown(e));\n            this.component.el.addEventListener('mouseup', e => this.mouseUp(e));\n            this.component.el.addEventListener('mouseleave', e => this.mouseLeave(e));\n        }\n    }\n    mouseEnter(e) {\n        const _this = this;\n        // Lift the button up for hover animation\n        this.tween(this.defaultZ, this.defaultZ + this.data.hoverHeight, function () {\n            _this.component.el.object3D.position.z = this.x;\n        }, function () {\n            _this.component.el.object3D.position.z = _this.defaultZ + _this.data.hoverHeight;\n        });\n        //this.ui.preventDefault(e)\n    }\n    ;\n    mouseLeave(e) {\n        // Ignore mouse leave event if the button was clicked - mouse up already resets to default state.\n        if (this.is_clicked) {\n            return this.is_clicked = false;\n        }\n        // Reset button state from hover\n        this.resetAnimation(this.defaultZ + this.data.hoverHeight);\n        //this.ui.preventDefault(e)\n    }\n    ;\n    mouseUp(e) {\n        this.is_clicked = true;\n        // Reset button state from pressed\n        this.resetAnimation(this.defaultZ + this.data.activeHeight);\n        this.ui.preventDefault(e);\n    }\n    ;\n    mouseDown(e) {\n        const _this = this;\n        // Press state animation from hovered\n        this.tween(this.defaultZ + this.data.hoverHeight, this.defaultZ + this.data.activeHeight, function () {\n            _this.component.el.object3D.position.z = this.x;\n        }, function () {\n            _this.component.el.object3D.position.z = _this.defaultZ + _this.data.activeHeight;\n        });\n        this.ui.preventDefault(e);\n    }\n    ;\n    resetAnimation(start_z) {\n        let _this = this;\n        this.tween(start_z, this.defaultZ, function () {\n            _this.component.el.object3D.position.z = this.x;\n        }, function () {\n            _this.component.el.object3D.position.z = _this.defaultZ;\n        });\n    }\n    ;\n    tween(from, to, callback, complete) {\n        let _this = this;\n        // Start changes\n        if (!this.data.preventUpdates)\n            this.ui.isChanging(this.component.el.sceneEl, this.component.el.object3D.uuid);\n        return new TWEEN.Tween({ x: from })\n            .to({ x: to }, this.data.duration)\n            .onUpdate(callback)\n            .onComplete(() => {\n            // Stop changes\n            if (!_this.data.preventUpdates)\n                this.ui.stoppedChanging(_this.component.el.object3D.uuid);\n            return complete.call(this);\n        })\n            .easing(TWEEN.Easing.Exponential.Out).start();\n    }\n}\nButton.DEFINITION = new built_1.ComponentControllerDefinition(\n/* Name */ \"ui-btn\", \n/* Schema */ {\n    duration: { type: 'int', default: 250 },\n    hoverHeight: { type: 'number', default: 0.01 },\n    activeHeight: { type: 'number', default: -0.001 },\n    disabled: { type: 'boolean', default: false },\n    preventUpdates: { type: 'boolean', default: false }\n}, \n/* Multiple */ false, \n/* Receive ticks */ false, \n/* Factory function */ (component, entity, data) => new Button(component, entity, data));\nexports.Button = Button;\n//# sourceMappingURL=Button.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHRsYXVra2FuL2FmcmFtZS1tYXRlcmlhbC1jb2xsZWN0aW9uLXRzL2J1aWx0L3NyYy9jb21wb25lbnRzL0J1dHRvbi5qcz9hZDJjIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQThDLGNBQWM7QUFDNUQsZ0JBQWdCLG1CQUFPLENBQUMsd0dBQXFDO0FBQzdELG9CQUFvQixtQkFBTyxDQUFDLDZHQUFhO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDLFVBQVU7QUFDMUMsaUJBQWlCLFFBQVE7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsNEJBQTRCO0FBQzNDLGtCQUFrQixnQ0FBZ0M7QUFDbEQsbUJBQW1CLGtDQUFrQztBQUNyRCxlQUFlLGtDQUFrQztBQUNqRCxxQkFBcUI7QUFDckIsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRsYXVra2FuL2FmcmFtZS1tYXRlcmlhbC1jb2xsZWN0aW9uLXRzL2J1aWx0L3NyYy9jb21wb25lbnRzL0J1dHRvbi5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgYnVpbHRfMSA9IHJlcXVpcmUoXCJhZnJhbWUtdHlwZXNjcmlwdC1ib2lsZXJwbGF0ZS9idWlsdFwiKTtcbmNvbnN0IFVpRWxlbWVudF8xID0gcmVxdWlyZShcIi4vVWlFbGVtZW50XCIpO1xuY2xhc3MgQnV0dG9uIGV4dGVuZHMgVWlFbGVtZW50XzEuVWlFbGVtZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihjb21wb25lbnQsIGVudGl0eSwgZGF0YSkge1xuICAgICAgICBzdXBlcihjb21wb25lbnQsIGVudGl0eSwgZGF0YSk7XG4gICAgICAgIHRoaXMuZGVmYXVsdFogPSAwO1xuICAgICAgICB0aGlzLmlzX2NsaWNrZWQgPSBmYWxzZTtcbiAgICB9XG4gICAgaW5pdCgpIHtcbiAgICAgICAgLy8gU3RvcmUgdGhlIGN1cnJlbnQgYnV0dG9uIHogdmFsdWUgZm9yIGFuaW1hdGluZyBtb3VzZSBldmVudHNcbiAgICAgICAgaWYgKCF0aGlzLmVudGl0eS5oYXNBdHRyaWJ1dGUoXCJjb2xvclwiKSkge1xuICAgICAgICAgICAgdGhpcy5lbnRpdHkuc2V0QXR0cmlidXRlKFwiY29sb3JcIiwgdGhpcy5jb2xvclRoZW1lLnNlY29uZGFyeSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCF0aGlzLmVudGl0eS5oYXNBdHRyaWJ1dGUoXCJmb250LWNvbG9yXCIpKSB7XG4gICAgICAgICAgICB0aGlzLmVudGl0eS5zZXRBdHRyaWJ1dGUoXCJmb250LWNvbG9yXCIsIHRoaXMuY29sb3JUaGVtZS5zZWNvbmRhcnlPbik7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5kZWZhdWx0WiA9IHRoaXMuY29tcG9uZW50LmVsLm9iamVjdDNELnBvc2l0aW9uLno7XG4gICAgICAgIC8vIHJlZ2lzdGVyIGlucHV0IGV2ZW50cyBmb3IgaW50ZXJhY3Rpb25cbiAgICAgICAgaWYgKCF0aGlzLmRhdGEuZGlzYWJsZWQpIHtcbiAgICAgICAgICAgIHRoaXMuY29tcG9uZW50LmVsLmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlZW50ZXInLCBlID0+IHRoaXMubW91c2VFbnRlcihlKSk7XG4gICAgICAgICAgICB0aGlzLmNvbXBvbmVudC5lbC5hZGRFdmVudExpc3RlbmVyKCdtb3VzZWRvd24nLCBlID0+IHRoaXMubW91c2VEb3duKGUpKTtcbiAgICAgICAgICAgIHRoaXMuY29tcG9uZW50LmVsLmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNldXAnLCBlID0+IHRoaXMubW91c2VVcChlKSk7XG4gICAgICAgICAgICB0aGlzLmNvbXBvbmVudC5lbC5hZGRFdmVudExpc3RlbmVyKCdtb3VzZWxlYXZlJywgZSA9PiB0aGlzLm1vdXNlTGVhdmUoZSkpO1xuICAgICAgICB9XG4gICAgfVxuICAgIG1vdXNlRW50ZXIoZSkge1xuICAgICAgICBjb25zdCBfdGhpcyA9IHRoaXM7XG4gICAgICAgIC8vIExpZnQgdGhlIGJ1dHRvbiB1cCBmb3IgaG92ZXIgYW5pbWF0aW9uXG4gICAgICAgIHRoaXMudHdlZW4odGhpcy5kZWZhdWx0WiwgdGhpcy5kZWZhdWx0WiArIHRoaXMuZGF0YS5ob3ZlckhlaWdodCwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgX3RoaXMuY29tcG9uZW50LmVsLm9iamVjdDNELnBvc2l0aW9uLnogPSB0aGlzLng7XG4gICAgICAgIH0sIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIF90aGlzLmNvbXBvbmVudC5lbC5vYmplY3QzRC5wb3NpdGlvbi56ID0gX3RoaXMuZGVmYXVsdFogKyBfdGhpcy5kYXRhLmhvdmVySGVpZ2h0O1xuICAgICAgICB9KTtcbiAgICAgICAgLy90aGlzLnVpLnByZXZlbnREZWZhdWx0KGUpXG4gICAgfVxuICAgIDtcbiAgICBtb3VzZUxlYXZlKGUpIHtcbiAgICAgICAgLy8gSWdub3JlIG1vdXNlIGxlYXZlIGV2ZW50IGlmIHRoZSBidXR0b24gd2FzIGNsaWNrZWQgLSBtb3VzZSB1cCBhbHJlYWR5IHJlc2V0cyB0byBkZWZhdWx0IHN0YXRlLlxuICAgICAgICBpZiAodGhpcy5pc19jbGlja2VkKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5pc19jbGlja2VkID0gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgICAgLy8gUmVzZXQgYnV0dG9uIHN0YXRlIGZyb20gaG92ZXJcbiAgICAgICAgdGhpcy5yZXNldEFuaW1hdGlvbih0aGlzLmRlZmF1bHRaICsgdGhpcy5kYXRhLmhvdmVySGVpZ2h0KTtcbiAgICAgICAgLy90aGlzLnVpLnByZXZlbnREZWZhdWx0KGUpXG4gICAgfVxuICAgIDtcbiAgICBtb3VzZVVwKGUpIHtcbiAgICAgICAgdGhpcy5pc19jbGlja2VkID0gdHJ1ZTtcbiAgICAgICAgLy8gUmVzZXQgYnV0dG9uIHN0YXRlIGZyb20gcHJlc3NlZFxuICAgICAgICB0aGlzLnJlc2V0QW5pbWF0aW9uKHRoaXMuZGVmYXVsdFogKyB0aGlzLmRhdGEuYWN0aXZlSGVpZ2h0KTtcbiAgICAgICAgdGhpcy51aS5wcmV2ZW50RGVmYXVsdChlKTtcbiAgICB9XG4gICAgO1xuICAgIG1vdXNlRG93bihlKSB7XG4gICAgICAgIGNvbnN0IF90aGlzID0gdGhpcztcbiAgICAgICAgLy8gUHJlc3Mgc3RhdGUgYW5pbWF0aW9uIGZyb20gaG92ZXJlZFxuICAgICAgICB0aGlzLnR3ZWVuKHRoaXMuZGVmYXVsdFogKyB0aGlzLmRhdGEuaG92ZXJIZWlnaHQsIHRoaXMuZGVmYXVsdFogKyB0aGlzLmRhdGEuYWN0aXZlSGVpZ2h0LCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBfdGhpcy5jb21wb25lbnQuZWwub2JqZWN0M0QucG9zaXRpb24ueiA9IHRoaXMueDtcbiAgICAgICAgfSwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgX3RoaXMuY29tcG9uZW50LmVsLm9iamVjdDNELnBvc2l0aW9uLnogPSBfdGhpcy5kZWZhdWx0WiArIF90aGlzLmRhdGEuYWN0aXZlSGVpZ2h0O1xuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy51aS5wcmV2ZW50RGVmYXVsdChlKTtcbiAgICB9XG4gICAgO1xuICAgIHJlc2V0QW5pbWF0aW9uKHN0YXJ0X3opIHtcbiAgICAgICAgbGV0IF90aGlzID0gdGhpcztcbiAgICAgICAgdGhpcy50d2VlbihzdGFydF96LCB0aGlzLmRlZmF1bHRaLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBfdGhpcy5jb21wb25lbnQuZWwub2JqZWN0M0QucG9zaXRpb24ueiA9IHRoaXMueDtcbiAgICAgICAgfSwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgX3RoaXMuY29tcG9uZW50LmVsLm9iamVjdDNELnBvc2l0aW9uLnogPSBfdGhpcy5kZWZhdWx0WjtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIDtcbiAgICB0d2Vlbihmcm9tLCB0bywgY2FsbGJhY2ssIGNvbXBsZXRlKSB7XG4gICAgICAgIGxldCBfdGhpcyA9IHRoaXM7XG4gICAgICAgIC8vIFN0YXJ0IGNoYW5nZXNcbiAgICAgICAgaWYgKCF0aGlzLmRhdGEucHJldmVudFVwZGF0ZXMpXG4gICAgICAgICAgICB0aGlzLnVpLmlzQ2hhbmdpbmcodGhpcy5jb21wb25lbnQuZWwuc2NlbmVFbCwgdGhpcy5jb21wb25lbnQuZWwub2JqZWN0M0QudXVpZCk7XG4gICAgICAgIHJldHVybiBuZXcgVFdFRU4uVHdlZW4oeyB4OiBmcm9tIH0pXG4gICAgICAgICAgICAudG8oeyB4OiB0byB9LCB0aGlzLmRhdGEuZHVyYXRpb24pXG4gICAgICAgICAgICAub25VcGRhdGUoY2FsbGJhY2spXG4gICAgICAgICAgICAub25Db21wbGV0ZSgoKSA9PiB7XG4gICAgICAgICAgICAvLyBTdG9wIGNoYW5nZXNcbiAgICAgICAgICAgIGlmICghX3RoaXMuZGF0YS5wcmV2ZW50VXBkYXRlcylcbiAgICAgICAgICAgICAgICB0aGlzLnVpLnN0b3BwZWRDaGFuZ2luZyhfdGhpcy5jb21wb25lbnQuZWwub2JqZWN0M0QudXVpZCk7XG4gICAgICAgICAgICByZXR1cm4gY29tcGxldGUuY2FsbCh0aGlzKTtcbiAgICAgICAgfSlcbiAgICAgICAgICAgIC5lYXNpbmcoVFdFRU4uRWFzaW5nLkV4cG9uZW50aWFsLk91dCkuc3RhcnQoKTtcbiAgICB9XG59XG5CdXR0b24uREVGSU5JVElPTiA9IG5ldyBidWlsdF8xLkNvbXBvbmVudENvbnRyb2xsZXJEZWZpbml0aW9uKFxuLyogTmFtZSAqLyBcInVpLWJ0blwiLCBcbi8qIFNjaGVtYSAqLyB7XG4gICAgZHVyYXRpb246IHsgdHlwZTogJ2ludCcsIGRlZmF1bHQ6IDI1MCB9LFxuICAgIGhvdmVySGVpZ2h0OiB7IHR5cGU6ICdudW1iZXInLCBkZWZhdWx0OiAwLjAxIH0sXG4gICAgYWN0aXZlSGVpZ2h0OiB7IHR5cGU6ICdudW1iZXInLCBkZWZhdWx0OiAtMC4wMDEgfSxcbiAgICBkaXNhYmxlZDogeyB0eXBlOiAnYm9vbGVhbicsIGRlZmF1bHQ6IGZhbHNlIH0sXG4gICAgcHJldmVudFVwZGF0ZXM6IHsgdHlwZTogJ2Jvb2xlYW4nLCBkZWZhdWx0OiBmYWxzZSB9XG59LCBcbi8qIE11bHRpcGxlICovIGZhbHNlLCBcbi8qIFJlY2VpdmUgdGlja3MgKi8gZmFsc2UsIFxuLyogRmFjdG9yeSBmdW5jdGlvbiAqLyAoY29tcG9uZW50LCBlbnRpdHksIGRhdGEpID0+IG5ldyBCdXR0b24oY29tcG9uZW50LCBlbnRpdHksIGRhdGEpKTtcbmV4cG9ydHMuQnV0dG9uID0gQnV0dG9uO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9QnV0dG9uLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/Button.js\n");

/***/ }),

/***/ "./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/Checkbox.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/Checkbox.js ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst built_1 = __webpack_require__(/*! aframe-typescript-boilerplate/built */ \"./node_modules/aframe-typescript-boilerplate/built/index.js\");\nconst UiElement_1 = __webpack_require__(/*! ./UiElement */ \"./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/UiElement.js\");\nclass Checkbox extends UiElement_1.UiElement {\n    constructor(component, entity, data) {\n        super(component, entity, data);\n        this.width = 0;\n        this.height = 0;\n        this.container = undefined;\n        this.topLine = undefined;\n        this.bottomLine = undefined;\n        this.leftLine = undefined;\n        this.rightLine = undefined;\n        this.clickHandler = () => { };\n    }\n    init() {\n        this.width = 0.15;\n        this.height = 0.15;\n        this.container = document.createElement('a-entity');\n        this.container.setAttribute('class', 'no-yoga-layout');\n        this.component.el.appendChild(this.container);\n        this.setupLines();\n        // Add backing element to make the whole object clickable.\n        let backing = document.createElement('a-plane');\n        backing.setAttribute('width', 0.105);\n        backing.setAttribute('height', 0.105);\n        backing.setAttribute('position', '0 0 -0.002');\n        backing.setAttribute('shader', 'flat');\n        backing.setAttribute('class', this.data.intersectableClass + ' no-yoga-layout');\n        backing.setAttribute('opacity', 0.0001);\n        backing.setAttribute('transparent', true);\n        this.component.el.appendChild(backing);\n        this.clickHandler = () => {\n            this.data.value = !this.data.value;\n            this.click();\n        };\n        // Setup initial state\n        this.setSelected();\n        this.setDisabled();\n        this.setTransform(1);\n    }\n    updateSchema() {\n        if (this.data) {\n            this.setDisabled();\n            if (this.data.disabled) {\n                if (this.data.value) {\n                    this.data.value = false;\n                    this.data.indeterminate = false;\n                    this.click();\n                }\n            }\n            else {\n                this.click();\n            }\n        }\n    }\n    ;\n    setTransform(x) {\n        // Adjust position and rotation based on the interpolated value x between 0 and 1.\n        // Used to offset the checkbox when in a checked state\n        if (this.data.value) {\n            this.container.setAttribute('rotation', { x: 0, y: 0, z: -45 * x });\n            this.container.setAttribute('position', { x: -0.025 * x, y: 0.05 * x, z: 0 });\n        }\n        else {\n            this.container.setAttribute('rotation', { x: 0, y: 0, z: -45 + (45 * x) });\n            this.container.setAttribute('position', { x: 0.025 - (0.025 * x), y: 0.05 - (0.05 * x), z: 0 });\n        }\n    }\n    ;\n    click() {\n        // Reset indeterminate state on click\n        this.data.indeterminate = false;\n        // Hide / Show left and top lines for checked state, or right line aswell for intermediate state.\n        this.setSelected();\n        // run animation\n        this.animateSelected();\n    }\n    ;\n    animateSelected() {\n        let _this = this;\n        // Start changes\n        this.ui.isChanging(this.component.el.sceneEl, this.component.el.object3D.uuid);\n        new TWEEN.Tween({ x: 0 })\n            .to({ x: 1 }, 200)\n            .onUpdate(function () {\n            _this.setTransform(this.x);\n        })\n            .onComplete(function () {\n            // Stop changes\n            _this.ui.stoppedChanging(_this.component.el.object3D.uuid);\n        })\n            .easing(TWEEN.Easing.Exponential.Out).start();\n    }\n    ;\n    setSelected() {\n        // Hide / Show lines that make up checkbox based on the current state.\n        if (this.data.value) {\n            this.topLine.setAttribute('scale', '0.000001 0.000001 0.000001');\n            this.leftLine.setAttribute('scale', '0.000001 0.000001 0.000001');\n            this.bottomLine.setAttribute('scale', '1 1 1');\n            this.rightLine.setAttribute('scale', '1 1 1');\n            this.bottomLine.setAttribute('position', '0.025 -0.05 0');\n            this.rightLine.setAttribute('position', '0.05 0 0');\n            this.bottomLine.setAttribute('rotation', '0 0 90');\n            this.bottomLine.setAttribute('height', 0.05);\n            this.bottomLine.setAttribute('color', this.colorTheme.secondary);\n            this.rightLine.setAttribute('color', this.colorTheme.secondary);\n        }\n        else if (this.data.indeterminate) {\n            this.topLine.setAttribute('scale', '0.000001 0.000001 0.000001');\n            this.leftLine.setAttribute('scale', '0.000001 0.000001 0.000001');\n            this.bottomLine.setAttribute('scale', '1 1 1');\n            this.rightLine.setAttribute('scale', '0.000001 0.000001 0.000001');\n            this.bottomLine.setAttribute('position', '0 0 0');\n            this.bottomLine.setAttribute('rotation', '0 0 90');\n            this.bottomLine.setAttribute('height', 0.1);\n            this.bottomLine.setAttribute('color', this.data.unselectedColor);\n            this.rightLine.setAttribute('color', this.data.unselectedColor);\n        }\n        else {\n            this.topLine.setAttribute('scale', '1 1 1');\n            this.leftLine.setAttribute('scale', '1 1 1');\n            this.bottomLine.setAttribute('scale', '1 1 1');\n            this.rightLine.setAttribute('scale', '1 1 1');\n            this.bottomLine.setAttribute('height', 0.1);\n            this.leftLine.setAttribute('position', '-0.05 0 0');\n            this.rightLine.setAttribute('position', '0.05 0 0');\n            this.topLine.setAttribute('position', '0 0.05 0');\n            this.bottomLine.setAttribute('position', '0 -0.05 0');\n            this.topLine.setAttribute('rotation', '0 0 90');\n            this.bottomLine.setAttribute('rotation', '0 0 90');\n            this.bottomLine.setAttribute('color', this.data.unselectedColor);\n            this.rightLine.setAttribute('color', this.data.unselectedColor);\n        }\n    }\n    ;\n    setupLines() {\n        // Add four lines to make a square wireframe\n        this.leftLine = this.line(true);\n        this.rightLine = this.line(true);\n        this.topLine = this.line(true);\n        this.bottomLine = this.line(true);\n        this.container.appendChild(this.topLine);\n        this.container.appendChild(this.leftLine);\n        this.container.appendChild(this.bottomLine);\n        this.container.appendChild(this.rightLine);\n    }\n    ;\n    setDisabled() {\n        // Check and set the disabled state of the checkbox - add / remove click handler.\n        if (this.data.disabled) {\n            this.component.el.removeEventListener('mousedown', this.clickHandler);\n            this.topLine.setAttribute('color', this.data.disabledColor);\n            this.leftLine.setAttribute('color', this.data.disabledColor);\n            this.rightLine.setAttribute('color', this.data.disabledColor);\n            this.bottomLine.setAttribute('color', this.data.disabledColor);\n        }\n        else {\n            this.component.el.addEventListener('mousedown', this.clickHandler);\n            this.topLine.setAttribute('color', this.data.unselectedColor);\n            this.leftLine.setAttribute('color', this.data.unselectedColor);\n            this.rightLine.setAttribute('color', this.data.value ? this.colorTheme.secondary : this.data.unselectedColor);\n            this.bottomLine.setAttribute('color', this.data.value ? this.colorTheme.secondary : this.data.unselectedColor);\n        }\n    }\n    ;\n    line(is_vertical) {\n        // Create horizontal/vertical line.\n        let line = document.createElement('a-plane');\n        line.setAttribute('width', is_vertical ? 0.01 : 0.105);\n        line.setAttribute('height', is_vertical ? 0.105 : 0.01);\n        line.setAttribute('class', 'no-yoga-layout');\n        line.setAttribute('shader', 'flat');\n        return line;\n    }\n}\nCheckbox.DEFINITION = new built_1.ComponentControllerDefinition(\n/* Name */ \"ui-checkbox\", \n/* Schema */ {\n    value: { type: 'boolean', default: false },\n    selectedColor: { default: '#009688' },\n    unselectedColor: { default: '#7f7f7f' },\n    disabledColor: { default: '#afafaf' },\n    indeterminate: { type: 'boolean', default: false },\n    disabled: { type: 'boolean', default: false },\n    intersectableClass: { default: 'intersectable' },\n    width: { type: 'number', default: 0.15 },\n    height: { type: 'number', default: 0.15 },\n}, \n/* Multiple */ false, \n/* Receive ticks */ false, \n/* Factory function */ (component, entity, data) => new Checkbox(component, entity, data));\nexports.Checkbox = Checkbox;\n//# sourceMappingURL=Checkbox.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/Checkbox.js\n");

/***/ }),

/***/ "./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/ColorPicker.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/ColorPicker.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst built_1 = __webpack_require__(/*! aframe-typescript-boilerplate/built */ \"./node_modules/aframe-typescript-boilerplate/built/index.js\");\nconst three_1 = __webpack_require__(/*! three */ \"three\");\nconst UiElement_1 = __webpack_require__(/*! ./UiElement */ \"./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/UiElement.js\");\nclass ColorPicker extends UiElement_1.UiElement {\n    constructor(component, entity, data) {\n        super(component, entity, data);\n        this.selectCallback = (hex) => { };\n        this.hexValue = undefined;\n        this.colorPreview = undefined;\n        this.colorWheel = undefined;\n        this.brightnessSlider = undefined;\n        this.hsv = undefined;\n        this.isMouseDown = false;\n    }\n    init() {\n        this.setupColorWheel();\n        this.setupBrightnessSlider();\n        this.setupColorPreview();\n        this.setupBacking();\n        this.setupEvents();\n        this.component.el.setAttribute('visible', false);\n        this.component.el.setAttribute('scale', '0.00001 0.00001 0.00001');\n        // Expose methods to open/close the color picker.\n        this.component.el.open = this.open.bind(this);\n        this.component.el.close = this.close.bind(this);\n    }\n    open() {\n        return new Promise(resolve => {\n            this.selectCallback = resolve;\n            this.component.el.setAttribute('visible', true);\n            this.tweenPickerScale(0.00001, 0.5);\n        });\n    }\n    ;\n    close() {\n        this.tweenPickerScale(0.5, 0.00001)\n            .then(() => this.component.el.setAttribute('visible', false));\n    }\n    ;\n    tweenPickerScale(from, to) {\n        this.ui.isChanging(this.component.el.sceneEl, this.component.el.object3D.uuid);\n        return new Promise(r => {\n            let _this = this;\n            new TWEEN.Tween({ x: from })\n                .to({ x: to }, 250)\n                .onUpdate(function () {\n                _this.component.el.setAttribute('scale', this.x + ' ' + this.x + ' ' + this.x);\n            })\n                .onComplete(() => {\n                this.ui.stoppedChanging(this.component.el.object3D.uuid);\n                r();\n            })\n                .easing(TWEEN.Easing.Exponential.Out).start();\n        });\n    }\n    ;\n    setupBacking() {\n        let circleBacking = document.createElement('a-circle');\n        circleBacking.className = 'no-yoga-layout';\n        circleBacking.setAttribute('position', '0 0 -0.001');\n        circleBacking.setAttribute('material', {\n            color: this.data.backingColor,\n            flatShading: true,\n            shader: 'flat',\n            fog: false,\n            side: 'double'\n        });\n        circleBacking.setAttribute('radius', 0.65);\n        circleBacking.setAttribute('theta-length', 180);\n        this.component.el.appendChild(circleBacking);\n        let planeBacking = document.createElement('a-plane');\n        planeBacking.setAttribute('position', '0 -0.375 -0.001');\n        planeBacking.className = 'no-yoga-layout';\n        planeBacking.setAttribute('material', {\n            color: this.data.backingColor,\n            flatShading: true,\n            shader: 'flat',\n            fog: false,\n            side: 'double'\n        });\n        planeBacking.setAttribute('width', 1.3);\n        planeBacking.setAttribute('height', 0.75);\n        this.component.el.appendChild(planeBacking);\n        let planeBackingBottom = document.createElement('a-plane');\n        planeBackingBottom.setAttribute('position', '0 -1.05 -0.001');\n        planeBackingBottom.className = 'no-yoga-layout';\n        planeBackingBottom.setAttribute('material', {\n            color: this.data.backingColorBottom,\n            flatShading: true,\n            shader: 'flat',\n            fog: false,\n            side: 'double'\n        });\n        planeBackingBottom.setAttribute('width', 1.3);\n        planeBackingBottom.setAttribute('height', 0.6);\n        this.component.el.appendChild(planeBackingBottom);\n        let buttonConfirm = document.createElement('a-ui-button');\n        buttonConfirm.setAttribute('position', '0.315 -1.17 0.001');\n        buttonConfirm.className = 'intersectable no-yoga-layout';\n        buttonConfirm.setAttribute('text-value', 'SAVE');\n        buttonConfirm.setAttribute('color', '#ffffff');\n        buttonConfirm.setAttribute('wrap-count', '9');\n        buttonConfirm.setAttribute('ripple-color', '#009688');\n        buttonConfirm.setAttribute('font-color', '#009688');\n        buttonConfirm.setAttribute('ripple-size', '0.5 0.18');\n        buttonConfirm.setAttribute('width', 0.5);\n        buttonConfirm.setAttribute('height', 0.18);\n        if (this.data.targetEl)\n            this.data.targetEl.addEventListener('mousedown', () => {\n                this.component.el.open();\n            });\n        this.component.el.appendChild(buttonConfirm);\n        buttonConfirm.addEventListener('mousedown', e => {\n            let hex = this.getHex();\n            this.component.el.emit('color-selected', hex);\n            this.component.el.close();\n            this.ui.preventDefault(e);\n            if (this.data.targetEl) {\n                this.data.targetEl.setAttribute('color', hex);\n            }\n            if (this.selectCallback && typeof this.selectCallback === \"function\") {\n                this.selectCallback(hex);\n            }\n        });\n        let buttonCancel = document.createElement('a-ui-button');\n        buttonCancel.setAttribute('position', '-0.315 -1.17 0.001');\n        buttonCancel.className = 'intersectable no-yoga-layout';\n        buttonCancel.setAttribute('text-value', 'CANCEL');\n        buttonCancel.setAttribute('color', '#ffffff');\n        buttonCancel.setAttribute('wrap-count', '9');\n        buttonCancel.setAttribute('ripple-color', '#ff9800');\n        buttonCancel.setAttribute('font-color', '#ff9800');\n        buttonCancel.setAttribute('ripple-size', '0.5 0.18');\n        buttonCancel.setAttribute('width', 0.5);\n        buttonCancel.setAttribute('height', 0.18);\n        this.component.el.appendChild(buttonCancel);\n        buttonCancel.addEventListener('mousedown', e => {\n            this.component.el.emit('color-cancelled');\n            this.component.el.close();\n            this.ui.preventDefault(e);\n        });\n        this.hexValue = document.createElement('a-text');\n        this.hexValue.setAttribute('value', '#ffffff');\n        this.hexValue.setAttribute('align', 'center');\n        this.hexValue.setAttribute('position', '0 -0.9 0.001');\n        this.hexValue.setAttribute('wrap-count', 15);\n        this.hexValue.setAttribute('width', 1.3);\n        this.component.el.appendChild(this.hexValue);\n    }\n    ;\n    setupColorPreview() {\n        this.colorPreview = document.createElement('a-circle');\n        this.colorPreview.setAttribute('position', '-0.45 -0.9 0');\n        this.colorPreview.setAttribute('material', {\n            color: '#ffffff',\n            flatShading: true,\n            transparent: true,\n            shader: 'flat',\n            fog: false,\n            side: 'double'\n        });\n        this.colorPreview.setAttribute('radius', 0.05);\n        this.component.el.appendChild(this.colorPreview);\n    }\n    ;\n    setupColorWheel() {\n        this.hsv = {\n            h: 0.0,\n            s: 0.0,\n            v: 1.0\n        };\n        this.colorWheel = document.createElement('a-circle');\n        this.colorWheel.setAttribute('material', {\n            color: '#ffffff',\n            flatShading: true,\n            transparent: true,\n            shader: 'flat',\n            fog: false,\n            side: 'double'\n        });\n        this.colorWheel.setAttribute('radius', 0.5);\n        this.component.el.appendChild(this.colorWheel);\n        this.colorWheel.className = 'intersectable no-yoga-layout';\n        this.colorWheel.addEventListener('loaded', () => {\n            let colorWheel = this.colorWheel.getObject3D('mesh');\n            let vertexShader = '\\n\\n      varying vec2 vUv;\\n      void main() {\\n        vUv = uv;\\n        vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\\n        gl_Position = projectionMatrix * mvPosition;\\n      }\\n    ';\n            let fragmentShader = '\\n      #define M_PI2 6.28318530718\\n      uniform float brightness;\\n      varying vec2 vUv;\\n      vec3 hsb2rgb(in vec3 c){\\n          vec3 rgb = clamp(abs(mod(c.x * 6.0 + vec3(0.0, 4.0, 2.0), 6.0) - 3.0) - 1.0, 0.0, 1.0 );\\n          rgb = rgb * rgb * (3.0 - 2.0 * rgb);\\n          return c.z * mix( vec3(1.0), rgb, c.y);\\n      }\\n\\n      void main() {\\n        vec2 toCenter = vec2(0.5) - vUv;\\n        float angle = atan(toCenter.y, toCenter.x);\\n        float radius = length(toCenter) * 2.0;\\n        vec3 color = hsb2rgb(vec3((angle / M_PI2) + 0.5, radius, brightness));\\n        gl_FragColor = vec4(color, 1.0);\\n      }\\n      ';\n            colorWheel.material = new three_1.ShaderMaterial({\n                uniforms: {\n                    brightness: {\n                        type: 'f',\n                        value: this.hsv.v\n                    }\n                },\n                vertexShader: vertexShader,\n                fragmentShader: fragmentShader\n            });\n            colorWheel.material.needsUpdate = true;\n        });\n    }\n    ;\n    setupBrightnessSlider() {\n        this.brightnessSlider = document.createElement('a-plane');\n        this.brightnessSlider.setAttribute('height', 0.1);\n        this.brightnessSlider.setAttribute('width', 0.8);\n        this.brightnessSlider.setAttribute('position', '0 -0.6 0');\n        this.brightnessSlider.className = 'intersectable no-yoga-layout';\n        this.component.el.appendChild(this.brightnessSlider);\n        this.brightnessSlider.addEventListener('loaded', () => {\n            let vertexShader = '\\n      varying vec2 vUv;\\n      void main(){\\n        vUv = uv;\\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position,1.0);\\n      }\\n    ';\n            let fragmentShader = '\\n      uniform vec3 color1;\\n      uniform vec3 color2;\\n      varying vec2 vUv;\\n\\n      void main(){\\n        vec4 c1 = vec4(color1, 1.0);\\n  \\t    vec4 c2 = vec4(color2, 1.0);\\n\\n        vec4 color = mix(c2, c1, smoothstep(0.0, 1.0, vUv.x));\\n        gl_FragColor = color;\\n      }\\n    ';\n            this.brightnessSlider.getObject3D('mesh').material = new three_1.ShaderMaterial({\n                uniforms: {\n                    color1: {\n                        type: 'c',\n                        value: new three_1.Color(0xFFFFFF)\n                    },\n                    color2: {\n                        type: 'c',\n                        value: new three_1.Color(0x000000)\n                    }\n                },\n                vertexShader: vertexShader,\n                fragmentShader: fragmentShader\n            });\n            this.brightnessSlider.getObject3D('mesh').material.needsUpdate = true;\n        });\n        let brightnessResetLeft = document.createElement('a-triangle');\n        brightnessResetLeft.setAttribute('vertex-a', '0 0.05 0');\n        brightnessResetLeft.setAttribute('vertex-b', '-0.05 -0.05 0');\n        brightnessResetLeft.setAttribute('vertex-c', '0.05 -0.05 0');\n        brightnessResetLeft.setAttribute('position', '-0.475 -0.6 0');\n        brightnessResetLeft.setAttribute('rotation', '0 0 90');\n        brightnessResetLeft.setAttribute('shader', 'flat');\n        brightnessResetLeft.setAttribute('color', '#009688');\n        brightnessResetLeft.setAttribute('ui-btn', '');\n        brightnessResetLeft.className = 'intersectable';\n        this.component.el.appendChild(brightnessResetLeft);\n        let brightnessResetRight = document.createElement('a-triangle');\n        brightnessResetRight.setAttribute('vertex-a', '0 0.05 0');\n        brightnessResetRight.setAttribute('vertex-b', '-0.05 -0.05 0');\n        brightnessResetRight.setAttribute('vertex-c', '0.05 -0.05 0');\n        brightnessResetRight.setAttribute('position', '0.475 -0.6 0');\n        brightnessResetRight.setAttribute('rotation', '0 0 -90');\n        brightnessResetRight.setAttribute('color', '#009688');\n        brightnessResetRight.setAttribute('shader', 'flat');\n        brightnessResetRight.setAttribute('ui-btn', '');\n        brightnessResetRight.className = 'intersectable';\n        this.component.el.appendChild(brightnessResetRight);\n        brightnessResetLeft.addEventListener('mousedown', () => {\n            this.ui.isChanging(this.component.el.sceneEl, this.component.el.object3D.uuid);\n            this.colorWheel.getObject3D('mesh').material.uniforms['brightness'].value = 0;\n            this.hsv.v = 0;\n            this.hsv.h = 0;\n            this.hsv.s = 0;\n            this.updateColor();\n            this.ui.stoppedChanging(this.component.el.object3D.uuid);\n        });\n        brightnessResetRight.addEventListener('mousedown', () => {\n            this.ui.isChanging(this.component.el.sceneEl, this.component.el.object3D.uuid);\n            this.colorWheel.getObject3D('mesh').material.uniforms['brightness'].value = 1;\n            this.hsv.v = 1;\n            this.hsv.h = 0;\n            this.hsv.s = 0;\n            this.updateColor();\n            this.ui.stoppedChanging(this.component.el.object3D.uuid);\n        });\n    }\n    ;\n    getHex() {\n        let rgb = this.hsvToRgb(this.hsv), color = 'rgb(' + rgb.r + ', ' + rgb.g + ', ' + rgb.b + ')';\n        return '#' + new three_1.Color(color).getHexString();\n    }\n    ;\n    updateColor() {\n        let hex = this.getHex();\n        this.colorPreview.setAttribute('color', hex);\n        this.hexValue.setAttribute('value', hex);\n    }\n    ;\n    setupEvents() {\n        this.colorWheel.addEventListener('mousedown', (e) => {\n            this.isMouseDown = true;\n            this.ui.preventDefault(e);\n        });\n        this.colorWheel.addEventListener('mouseup', (e) => {\n            console.log('mouseup on color picker');\n            this.isMouseDown = false;\n            this.ui.preventDefault(e);\n        });\n        this.colorWheel.addEventListener('ui-mousemove', (e) => {\n            if (!this.isMouseDown)\n                return;\n            this.ui.preventDefault(e);\n            this.ui.isChanging(this.component.el.sceneEl, this.component.el.object3D.uuid);\n            let colorWheel = this.colorWheel.getObject3D('mesh'), radius = 0.5, position = e.detail.intersection.point;\n            colorWheel.updateMatrixWorld(false);\n            colorWheel.worldToLocal(position);\n            //Determine Hue and Saturation value from polar co-ordinates\n            let polarPosition = {\n                r: Math.sqrt(position.x * position.x + position.y * position.y),\n                theta: Math.PI + Math.atan2(position.y, position.x)\n            };\n            let angle = (polarPosition.theta * (180 / Math.PI) + 180) % 360;\n            this.hsv.h = angle / 360;\n            this.hsv.s = polarPosition.r / radius;\n            this.updateColor();\n            this.ui.stoppedChanging(this.component.el.object3D.uuid);\n        });\n        this.brightnessSlider.addEventListener('mousedown', (e) => {\n            this.isMouseDown = true;\n            this.ui.preventDefault(e);\n        });\n        this.brightnessSlider.addEventListener('mouseup', (e) => {\n            this.isMouseDown = false;\n            this.ui.preventDefault(e);\n        });\n        this.brightnessSlider.addEventListener('ui-mousemove', (e) => {\n            this.ui.preventDefault(e);\n            this.ui.isChanging(this.component.el.sceneEl, this.component.el.object3D.uuid);\n            if (!this.isMouseDown)\n                return;\n            let brightnessSlider = this.brightnessSlider.getObject3D('mesh'), colorWheel = this.colorWheel.getObject3D('mesh'), position = e.detail.intersection.point;\n            brightnessSlider.updateMatrixWorld(false);\n            brightnessSlider.worldToLocal(position);\n            //Brightness is a value between 0 and 1. The parent plane is centre registered, hence offset\n            let cursorOffset = position.x + 0.4; //this.brightnessSliderHeight / 2;\n            let brightness = cursorOffset / 0.8; //this.brightnessSliderHeight;\n            //Update material brightness\n            colorWheel.material.uniforms['brightness'].value = brightness;\n            this.hsv.v = brightness;\n            this.updateColor();\n            this.ui.stoppedChanging(this.component.el.object3D.uuid);\n        });\n    }\n    ;\n    hsvToRgb(hsv) {\n        let r, g, b, i, f, p, q, t;\n        let h = three_1.Math.clamp(hsv.h, 0, 1);\n        let s = three_1.Math.clamp(hsv.s, 0, 1);\n        let v = hsv.v;\n        i = Math.floor(h * 6);\n        f = h * 6 - i;\n        p = v * (1 - s);\n        q = v * (1 - f * s);\n        t = v * (1 - (1 - f) * s);\n        switch (i % 6) {\n            case 0:\n                r = v;\n                g = t;\n                b = p;\n                break;\n            case 1:\n                r = q;\n                g = v;\n                b = p;\n                break;\n            case 2:\n                r = p;\n                g = v;\n                b = t;\n                break;\n            case 3:\n                r = p;\n                g = q;\n                b = v;\n                break;\n            case 4:\n                r = t;\n                g = p;\n                b = v;\n                break;\n            case 5:\n                r = v;\n                g = p;\n                b = q;\n                break;\n        }\n        return {\n            r: Math.round(r * 255),\n            g: Math.round(g * 255),\n            b: Math.round(b * 255)\n        };\n    }\n}\nColorPicker.DEFINITION = new built_1.ComponentControllerDefinition(\n/* Name */ \"ui-color-picker\", \n/* Schema */ {\n    backingColor: { default: \"#dfdfdf\" },\n    backingColorBottom: { default: \"#4db6ac\" },\n    targetEl: { type: 'selector' }\n}, \n/* Multiple */ false, \n/* Receive ticks */ false, \n/* Factory function */ (component, entity, data) => new ColorPicker(component, entity, data));\nexports.ColorPicker = ColorPicker;\n//# sourceMappingURL=ColorPicker.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/ColorPicker.js\n");

/***/ }),

/***/ "./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/CurvedPlane.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/CurvedPlane.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst built_1 = __webpack_require__(/*! aframe-typescript-boilerplate/built */ \"./node_modules/aframe-typescript-boilerplate/built/index.js\");\nconst three_1 = __webpack_require__(/*! three */ \"three\");\nconst UiElement_1 = __webpack_require__(/*! ./UiElement */ \"./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/UiElement.js\");\nclass CurvedPlane extends UiElement_1.UiElement {\n    constructor(component, entity, data) {\n        super(component, entity, data);\n    }\n    init() {\n        let mesh = this.component.el.getObject3D('mesh');\n        let width = this.component.el.getAttribute('width');\n        let height = this.component.el.getAttribute('height');\n        let browser_pane = new three_1.PlaneGeometry(width, height, 5, 1);\n        let curve = new three_1.CubicBezierCurve3(browser_pane.vertices[0], new three_1.Vector3(0.375 * width, 0, -this.data.depth * width), new three_1.Vector3(0.625 * width, 0, -this.data.depth * width), browser_pane.vertices[(browser_pane.vertices.length / 2) - 1]);\n        let planePoints = curve.getPoints(Math.abs(browser_pane.vertices.length / 2) - 1);\n        for (let edgeI = 1; edgeI < 3; edgeI++) {\n            for (let pointI = 0; pointI < planePoints.length; pointI++) {\n                browser_pane.vertices[(edgeI === 2 ? planePoints.length + pointI : pointI)].z = planePoints[pointI].z;\n            }\n        }\n        mesh.geometry = browser_pane;\n    }\n}\nCurvedPlane.DEFINITION = new built_1.ComponentControllerDefinition(\n/* Name */ \"ui-curved-plane\", \n/* Schema */ {\n    depth: { type: 'number', default: 0.03 }\n}, \n/* Multiple */ false, \n/* Receive ticks */ false, \n/* Factory function */ (component, entity, data) => new CurvedPlane(component, entity, data));\nexports.CurvedPlane = CurvedPlane;\n//# sourceMappingURL=CurvedPlane.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHRsYXVra2FuL2FmcmFtZS1tYXRlcmlhbC1jb2xsZWN0aW9uLXRzL2J1aWx0L3NyYy9jb21wb25lbnRzL0N1cnZlZFBsYW5lLmpzPzVmNWYiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBOEMsY0FBYztBQUM1RCxnQkFBZ0IsbUJBQU8sQ0FBQyx3R0FBcUM7QUFDN0QsZ0JBQWdCLG1CQUFPLENBQUMsb0JBQU87QUFDL0Isb0JBQW9CLG1CQUFPLENBQUMsNkdBQWE7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQixXQUFXO0FBQ3RDLGdDQUFnQyw2QkFBNkI7QUFDN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0B0bGF1a2thbi9hZnJhbWUtbWF0ZXJpYWwtY29sbGVjdGlvbi10cy9idWlsdC9zcmMvY29tcG9uZW50cy9DdXJ2ZWRQbGFuZS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgYnVpbHRfMSA9IHJlcXVpcmUoXCJhZnJhbWUtdHlwZXNjcmlwdC1ib2lsZXJwbGF0ZS9idWlsdFwiKTtcbmNvbnN0IHRocmVlXzEgPSByZXF1aXJlKFwidGhyZWVcIik7XG5jb25zdCBVaUVsZW1lbnRfMSA9IHJlcXVpcmUoXCIuL1VpRWxlbWVudFwiKTtcbmNsYXNzIEN1cnZlZFBsYW5lIGV4dGVuZHMgVWlFbGVtZW50XzEuVWlFbGVtZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihjb21wb25lbnQsIGVudGl0eSwgZGF0YSkge1xuICAgICAgICBzdXBlcihjb21wb25lbnQsIGVudGl0eSwgZGF0YSk7XG4gICAgfVxuICAgIGluaXQoKSB7XG4gICAgICAgIGxldCBtZXNoID0gdGhpcy5jb21wb25lbnQuZWwuZ2V0T2JqZWN0M0QoJ21lc2gnKTtcbiAgICAgICAgbGV0IHdpZHRoID0gdGhpcy5jb21wb25lbnQuZWwuZ2V0QXR0cmlidXRlKCd3aWR0aCcpO1xuICAgICAgICBsZXQgaGVpZ2h0ID0gdGhpcy5jb21wb25lbnQuZWwuZ2V0QXR0cmlidXRlKCdoZWlnaHQnKTtcbiAgICAgICAgbGV0IGJyb3dzZXJfcGFuZSA9IG5ldyB0aHJlZV8xLlBsYW5lR2VvbWV0cnkod2lkdGgsIGhlaWdodCwgNSwgMSk7XG4gICAgICAgIGxldCBjdXJ2ZSA9IG5ldyB0aHJlZV8xLkN1YmljQmV6aWVyQ3VydmUzKGJyb3dzZXJfcGFuZS52ZXJ0aWNlc1swXSwgbmV3IHRocmVlXzEuVmVjdG9yMygwLjM3NSAqIHdpZHRoLCAwLCAtdGhpcy5kYXRhLmRlcHRoICogd2lkdGgpLCBuZXcgdGhyZWVfMS5WZWN0b3IzKDAuNjI1ICogd2lkdGgsIDAsIC10aGlzLmRhdGEuZGVwdGggKiB3aWR0aCksIGJyb3dzZXJfcGFuZS52ZXJ0aWNlc1soYnJvd3Nlcl9wYW5lLnZlcnRpY2VzLmxlbmd0aCAvIDIpIC0gMV0pO1xuICAgICAgICBsZXQgcGxhbmVQb2ludHMgPSBjdXJ2ZS5nZXRQb2ludHMoTWF0aC5hYnMoYnJvd3Nlcl9wYW5lLnZlcnRpY2VzLmxlbmd0aCAvIDIpIC0gMSk7XG4gICAgICAgIGZvciAobGV0IGVkZ2VJID0gMTsgZWRnZUkgPCAzOyBlZGdlSSsrKSB7XG4gICAgICAgICAgICBmb3IgKGxldCBwb2ludEkgPSAwOyBwb2ludEkgPCBwbGFuZVBvaW50cy5sZW5ndGg7IHBvaW50SSsrKSB7XG4gICAgICAgICAgICAgICAgYnJvd3Nlcl9wYW5lLnZlcnRpY2VzWyhlZGdlSSA9PT0gMiA/IHBsYW5lUG9pbnRzLmxlbmd0aCArIHBvaW50SSA6IHBvaW50SSldLnogPSBwbGFuZVBvaW50c1twb2ludEldLno7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgbWVzaC5nZW9tZXRyeSA9IGJyb3dzZXJfcGFuZTtcbiAgICB9XG59XG5DdXJ2ZWRQbGFuZS5ERUZJTklUSU9OID0gbmV3IGJ1aWx0XzEuQ29tcG9uZW50Q29udHJvbGxlckRlZmluaXRpb24oXG4vKiBOYW1lICovIFwidWktY3VydmVkLXBsYW5lXCIsIFxuLyogU2NoZW1hICovIHtcbiAgICBkZXB0aDogeyB0eXBlOiAnbnVtYmVyJywgZGVmYXVsdDogMC4wMyB9XG59LCBcbi8qIE11bHRpcGxlICovIGZhbHNlLCBcbi8qIFJlY2VpdmUgdGlja3MgKi8gZmFsc2UsIFxuLyogRmFjdG9yeSBmdW5jdGlvbiAqLyAoY29tcG9uZW50LCBlbnRpdHksIGRhdGEpID0+IG5ldyBDdXJ2ZWRQbGFuZShjb21wb25lbnQsIGVudGl0eSwgZGF0YSkpO1xuZXhwb3J0cy5DdXJ2ZWRQbGFuZSA9IEN1cnZlZFBsYW5lO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Q3VydmVkUGxhbmUuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/CurvedPlane.js\n");

/***/ }),

/***/ "./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/DoubleClick.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/DoubleClick.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst built_1 = __webpack_require__(/*! aframe-typescript-boilerplate/built */ \"./node_modules/aframe-typescript-boilerplate/built/index.js\");\nconst UiElement_1 = __webpack_require__(/*! ./UiElement */ \"./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/UiElement.js\");\nclass DoubleClick extends UiElement_1.UiElement {\n    constructor(component, entity, data) {\n        super(component, entity, data);\n    }\n    init() {\n        let last_click = 0;\n        // Add click event for listening for two clicks within the specified timespan.\n        this.component.el.addEventListener('mousedown', (e) => {\n            let now = new Date().getTime();\n            if (now - last_click < this.data.timeout) {\n                this.component.el.emit('dblclick', e);\n                // Reset last click\n                last_click = 0;\n                e.preventDefault();\n            }\n            last_click = now;\n        });\n    }\n}\nDoubleClick.DEFINITION = new built_1.ComponentControllerDefinition(\n/* Name */ \"ui-double-click\", \n/* Schema */ {\n    timeout: { type: 'int', default: 200 }\n}, \n/* Multiple */ false, \n/* Receive ticks */ false, \n/* Factory function */ (component, entity, data) => new DoubleClick(component, entity, data));\nexports.DoubleClick = DoubleClick;\n//# sourceMappingURL=DoubleClick.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHRsYXVra2FuL2FmcmFtZS1tYXRlcmlhbC1jb2xsZWN0aW9uLXRzL2J1aWx0L3NyYy9jb21wb25lbnRzL0RvdWJsZUNsaWNrLmpzP2M3ODMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBOEMsY0FBYztBQUM1RCxnQkFBZ0IsbUJBQU8sQ0FBQyx3R0FBcUM7QUFDN0Qsb0JBQW9CLG1CQUFPLENBQUMsNkdBQWE7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZCxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9AdGxhdWtrYW4vYWZyYW1lLW1hdGVyaWFsLWNvbGxlY3Rpb24tdHMvYnVpbHQvc3JjL2NvbXBvbmVudHMvRG91YmxlQ2xpY2suanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IGJ1aWx0XzEgPSByZXF1aXJlKFwiYWZyYW1lLXR5cGVzY3JpcHQtYm9pbGVycGxhdGUvYnVpbHRcIik7XG5jb25zdCBVaUVsZW1lbnRfMSA9IHJlcXVpcmUoXCIuL1VpRWxlbWVudFwiKTtcbmNsYXNzIERvdWJsZUNsaWNrIGV4dGVuZHMgVWlFbGVtZW50XzEuVWlFbGVtZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihjb21wb25lbnQsIGVudGl0eSwgZGF0YSkge1xuICAgICAgICBzdXBlcihjb21wb25lbnQsIGVudGl0eSwgZGF0YSk7XG4gICAgfVxuICAgIGluaXQoKSB7XG4gICAgICAgIGxldCBsYXN0X2NsaWNrID0gMDtcbiAgICAgICAgLy8gQWRkIGNsaWNrIGV2ZW50IGZvciBsaXN0ZW5pbmcgZm9yIHR3byBjbGlja3Mgd2l0aGluIHRoZSBzcGVjaWZpZWQgdGltZXNwYW4uXG4gICAgICAgIHRoaXMuY29tcG9uZW50LmVsLmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlZG93bicsIChlKSA9PiB7XG4gICAgICAgICAgICBsZXQgbm93ID0gbmV3IERhdGUoKS5nZXRUaW1lKCk7XG4gICAgICAgICAgICBpZiAobm93IC0gbGFzdF9jbGljayA8IHRoaXMuZGF0YS50aW1lb3V0KSB7XG4gICAgICAgICAgICAgICAgdGhpcy5jb21wb25lbnQuZWwuZW1pdCgnZGJsY2xpY2snLCBlKTtcbiAgICAgICAgICAgICAgICAvLyBSZXNldCBsYXN0IGNsaWNrXG4gICAgICAgICAgICAgICAgbGFzdF9jbGljayA9IDA7XG4gICAgICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgbGFzdF9jbGljayA9IG5vdztcbiAgICAgICAgfSk7XG4gICAgfVxufVxuRG91YmxlQ2xpY2suREVGSU5JVElPTiA9IG5ldyBidWlsdF8xLkNvbXBvbmVudENvbnRyb2xsZXJEZWZpbml0aW9uKFxuLyogTmFtZSAqLyBcInVpLWRvdWJsZS1jbGlja1wiLCBcbi8qIFNjaGVtYSAqLyB7XG4gICAgdGltZW91dDogeyB0eXBlOiAnaW50JywgZGVmYXVsdDogMjAwIH1cbn0sIFxuLyogTXVsdGlwbGUgKi8gZmFsc2UsIFxuLyogUmVjZWl2ZSB0aWNrcyAqLyBmYWxzZSwgXG4vKiBGYWN0b3J5IGZ1bmN0aW9uICovIChjb21wb25lbnQsIGVudGl0eSwgZGF0YSkgPT4gbmV3IERvdWJsZUNsaWNrKGNvbXBvbmVudCwgZW50aXR5LCBkYXRhKSk7XG5leHBvcnRzLkRvdWJsZUNsaWNrID0gRG91YmxlQ2xpY2s7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1Eb3VibGVDbGljay5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/DoubleClick.js\n");

/***/ }),

/***/ "./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/Icon.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/Icon.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst built_1 = __webpack_require__(/*! aframe-typescript-boilerplate/built */ \"./node_modules/aframe-typescript-boilerplate/built/index.js\");\nconst UiElement_1 = __webpack_require__(/*! ./UiElement */ \"./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/UiElement.js\");\nclass Icon extends UiElement_1.UiElement {\n    constructor(component, entity, data) {\n        super(component, entity, data);\n        this.icon = undefined;\n    }\n    init() {\n        this.icon = document.createElement('a-entity');\n        this.icon.className = 'no-yoga-layout';\n        this.icon.setAttribute('geometry', 'primitive:plane; width: ' + this.data.size.x + '; height: ' + this.data.size.y + ';skipCache: true;');\n        this.icon.setAttribute('material', 'shader: flat; color:' + this.data.color + ';alpha-test:0.4; transparent:true;src:' + this.data.src);\n        if (this.data.spriteCoords) {\n            this.icon.setAttribute('sprite-sheet', 'coords:' + this.data.spriteCoords.x + ' ' + this.data.spriteCoords.y + ' ' + this.data.spriteCoords.z + ' ' + this.data.spriteCoords.w + ';shape:square');\n        }\n        this.icon.setAttribute('position', \"0 0 \" + this.data.zIndex);\n        this.component.el.appendChild(this.icon);\n    }\n}\nIcon.DEFINITION = new built_1.ComponentControllerDefinition(\n/* Name */ \"ui-icon\", \n/* Schema */ {\n    src: { default: 'icons/send_white_64dp.png' },\n    spriteCoords: { type: 'vec4' },\n    size: { type: 'vec2', default: { x: 0.1, y: 0.1 } },\n    zIndex: { type: 'number', default: 0.003 },\n    color: { default: '#fff' }\n}, \n/* Multiple */ false, \n/* Receive ticks */ false, \n/* Factory function */ (component, entity, data) => new Icon(component, entity, data));\nexports.Icon = Icon;\n//# sourceMappingURL=Icon.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHRsYXVra2FuL2FmcmFtZS1tYXRlcmlhbC1jb2xsZWN0aW9uLXRzL2J1aWx0L3NyYy9jb21wb25lbnRzL0ljb24uanM/Nzk4NyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE4QyxjQUFjO0FBQzVELGdCQUFnQixtQkFBTyxDQUFDLHdHQUFxQztBQUM3RCxvQkFBb0IsbUJBQU8sQ0FBQyw2R0FBYTtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNERBQTRELGlDQUFpQyxrQ0FBa0MsZ0JBQWdCO0FBQy9JLHlEQUF5RCwrQkFBK0IsZUFBZSxrQkFBa0I7QUFDekg7QUFDQSwrTEFBK0w7QUFDL0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVUsdUNBQXVDO0FBQ2pELG1CQUFtQixlQUFlO0FBQ2xDLFdBQVcseUJBQXlCLGlCQUFpQixFQUFFO0FBQ3ZELGFBQWEsaUNBQWlDO0FBQzlDLFlBQVk7QUFDWixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9AdGxhdWtrYW4vYWZyYW1lLW1hdGVyaWFsLWNvbGxlY3Rpb24tdHMvYnVpbHQvc3JjL2NvbXBvbmVudHMvSWNvbi5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgYnVpbHRfMSA9IHJlcXVpcmUoXCJhZnJhbWUtdHlwZXNjcmlwdC1ib2lsZXJwbGF0ZS9idWlsdFwiKTtcbmNvbnN0IFVpRWxlbWVudF8xID0gcmVxdWlyZShcIi4vVWlFbGVtZW50XCIpO1xuY2xhc3MgSWNvbiBleHRlbmRzIFVpRWxlbWVudF8xLlVpRWxlbWVudCB7XG4gICAgY29uc3RydWN0b3IoY29tcG9uZW50LCBlbnRpdHksIGRhdGEpIHtcbiAgICAgICAgc3VwZXIoY29tcG9uZW50LCBlbnRpdHksIGRhdGEpO1xuICAgICAgICB0aGlzLmljb24gPSB1bmRlZmluZWQ7XG4gICAgfVxuICAgIGluaXQoKSB7XG4gICAgICAgIHRoaXMuaWNvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2EtZW50aXR5Jyk7XG4gICAgICAgIHRoaXMuaWNvbi5jbGFzc05hbWUgPSAnbm8teW9nYS1sYXlvdXQnO1xuICAgICAgICB0aGlzLmljb24uc2V0QXR0cmlidXRlKCdnZW9tZXRyeScsICdwcmltaXRpdmU6cGxhbmU7IHdpZHRoOiAnICsgdGhpcy5kYXRhLnNpemUueCArICc7IGhlaWdodDogJyArIHRoaXMuZGF0YS5zaXplLnkgKyAnO3NraXBDYWNoZTogdHJ1ZTsnKTtcbiAgICAgICAgdGhpcy5pY29uLnNldEF0dHJpYnV0ZSgnbWF0ZXJpYWwnLCAnc2hhZGVyOiBmbGF0OyBjb2xvcjonICsgdGhpcy5kYXRhLmNvbG9yICsgJzthbHBoYS10ZXN0OjAuNDsgdHJhbnNwYXJlbnQ6dHJ1ZTtzcmM6JyArIHRoaXMuZGF0YS5zcmMpO1xuICAgICAgICBpZiAodGhpcy5kYXRhLnNwcml0ZUNvb3Jkcykge1xuICAgICAgICAgICAgdGhpcy5pY29uLnNldEF0dHJpYnV0ZSgnc3ByaXRlLXNoZWV0JywgJ2Nvb3JkczonICsgdGhpcy5kYXRhLnNwcml0ZUNvb3Jkcy54ICsgJyAnICsgdGhpcy5kYXRhLnNwcml0ZUNvb3Jkcy55ICsgJyAnICsgdGhpcy5kYXRhLnNwcml0ZUNvb3Jkcy56ICsgJyAnICsgdGhpcy5kYXRhLnNwcml0ZUNvb3Jkcy53ICsgJztzaGFwZTpzcXVhcmUnKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmljb24uc2V0QXR0cmlidXRlKCdwb3NpdGlvbicsIFwiMCAwIFwiICsgdGhpcy5kYXRhLnpJbmRleCk7XG4gICAgICAgIHRoaXMuY29tcG9uZW50LmVsLmFwcGVuZENoaWxkKHRoaXMuaWNvbik7XG4gICAgfVxufVxuSWNvbi5ERUZJTklUSU9OID0gbmV3IGJ1aWx0XzEuQ29tcG9uZW50Q29udHJvbGxlckRlZmluaXRpb24oXG4vKiBOYW1lICovIFwidWktaWNvblwiLCBcbi8qIFNjaGVtYSAqLyB7XG4gICAgc3JjOiB7IGRlZmF1bHQ6ICdpY29ucy9zZW5kX3doaXRlXzY0ZHAucG5nJyB9LFxuICAgIHNwcml0ZUNvb3JkczogeyB0eXBlOiAndmVjNCcgfSxcbiAgICBzaXplOiB7IHR5cGU6ICd2ZWMyJywgZGVmYXVsdDogeyB4OiAwLjEsIHk6IDAuMSB9IH0sXG4gICAgekluZGV4OiB7IHR5cGU6ICdudW1iZXInLCBkZWZhdWx0OiAwLjAwMyB9LFxuICAgIGNvbG9yOiB7IGRlZmF1bHQ6ICcjZmZmJyB9XG59LCBcbi8qIE11bHRpcGxlICovIGZhbHNlLCBcbi8qIFJlY2VpdmUgdGlja3MgKi8gZmFsc2UsIFxuLyogRmFjdG9yeSBmdW5jdGlvbiAqLyAoY29tcG9uZW50LCBlbnRpdHksIGRhdGEpID0+IG5ldyBJY29uKGNvbXBvbmVudCwgZW50aXR5LCBkYXRhKSk7XG5leHBvcnRzLkljb24gPSBJY29uO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9SWNvbi5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/Icon.js\n");

/***/ }),

/***/ "./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/InputText.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/InputText.js ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst built_1 = __webpack_require__(/*! aframe-typescript-boilerplate/built */ \"./node_modules/aframe-typescript-boilerplate/built/index.js\");\nconst three_1 = __webpack_require__(/*! three */ \"three\");\nconst UiElement_1 = __webpack_require__(/*! ./UiElement */ \"./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/UiElement.js\");\nclass InputText extends UiElement_1.UiElement {\n    constructor(component, entity, data) {\n        super(component, entity, data);\n        this.container = undefined;\n        this.backing = undefined;\n        this.underline = undefined;\n        this.selectionHighlight = undefined;\n        this.carret = undefined;\n        this.text = {};\n        this.alphabet = {};\n        this.startSelection = 0;\n        this.scrollOffset = 0;\n        this.scrollIndex = 0;\n        this.carretInterval = undefined;\n        this.shiftStartPos = undefined;\n        this.chars = new Array();\n        this.charsAllowed = new Array();\n        this.blurHandler = () => { };\n        this.isMoving = false;\n        this.isFocused = false;\n        this.mousemove = (e) => { };\n        this.keydown = (e) => { };\n        this.keySelectAll = () => { };\n        this.keyCut = () => { };\n        this.keyCopy = () => { };\n        this.keyPaste = () => { };\n        this.positions = new Array();\n        this.depends = ['text'];\n        this.content_clips = [\n            new three_1.Plane(new three_1.Vector3(-1, 0, 0), 0),\n            new three_1.Plane(new three_1.Vector3(1, 0, 0), 0)\n        ];\n    }\n    init() {\n        this.setupElements();\n        this.setupScrollClips();\n        this.text.addEventListener('textfontset', () => {\n            this.text.selectionStart = 0;\n            this.text.selectionLength = 0;\n            this.startSelection = 0;\n            this.scrollOffset = 0;\n            this.alphabet = {};\n            this.scrollIndex = 0;\n            let chars = this.data.value.split('');\n            this.chars = [];\n            this.charsAllowed = ['-', '_', '+', '=', '{', '}', '[', ']', ':', ';', '\\'', '@', '~', '#', '<', '>', ',', '.', '?', '/', '|', '\\\\', '`', '¬'];\n            for (let i = 0; i < chars.length; i++) {\n                this.chars.push({ char: chars[i] });\n            }\n            this.blurHandler = () => {\n                if (!this.component.el.sceneEl.defaultKeypressPrevented) {\n                    this.blur();\n                }\n                else {\n                    this.component.el.sceneEl.defaultKeypressPrevented = false;\n                }\n            };\n            this.isMoving = false;\n            this.mousemove = this.onMousemove.bind(this);\n            this.keydown = (e) => this.handleKeyboardEvent(e);\n            this.keySelectAll = () => this.selectAll();\n            this.keyCut = () => this.cutText();\n            this.keyCopy = () => this.copyText();\n            this.keyPaste = () => this.pasteText();\n            this.backing.addEventListener('mousedown', () => {\n                this.focus();\n            });\n            this.component.el.sceneEl.addEventListener('mouseup', () => {\n                this.backing.removeEventListener('ui-mousemove', this.mousemove);\n                this.isMoving = false;\n                this.setSelection(this.text.selectionStart, this.text.selectionLength);\n            });\n            this.component.el.setAttribute('visible', false);\n            this.setValue();\n            // this.ui.isChanging(this.component.el.sceneEl,this.text.object3D.uuid);\n            //TODO For some reason initial value is not shown if delay is not there.\n            setTimeout(() => {\n                this.setScrollClips();\n                this.component.el.setAttribute('visible', true);\n                //this.ui.stoppedChanging(this.text.object3D.uuid);\n            }, 500);\n        });\n        this.component.el.getValue = this.getValue.bind(this);\n        this.component.el.value = this.value.bind(this);\n        this.component.el.focus = this.focus.bind(this);\n    }\n    setupScrollClips() {\n        this.content_clips = [\n            new three_1.Plane(new three_1.Vector3(-1, 0, 0), 0),\n            new three_1.Plane(new three_1.Vector3(1, 0, 0), 0)\n        ];\n        //this.setScrollClips();\n    }\n    selectAll() {\n        this.text.selectionStart = 0;\n        this.text.selectionLength = this.chars.length;\n        this.setValue();\n    }\n    increaseWrap() {\n        let child = this.text.object3D.children[this.text.object3D.children.length - 1];\n        if (!child)\n            return;\n        if (child.geometry.layout && child.geometry.layout._linesTotal > 1) {\n            this.text.setAttribute('visible', false);\n            this.text.setAttribute('width', this.text.getAttribute('width') * 1.2);\n            this.text.setAttribute('wrap-pixels', this.text.getAttribute('width') * 500);\n            this.text.setAttribute('x-offset', ((this.text.getAttribute('width') - this.data.width) / 2));\n            setTimeout(() => this.increaseWrap());\n        }\n        else {\n            this.text.setAttribute('visible', true);\n        }\n    }\n    setScrollClips() {\n        //this.text.object3D.updateMatrixWorld();\n        //this.backing.object3D.parent.updateMatrixWorld();\n        this.content_clips[0].set(new three_1.Vector3(-1, 0, 0), (this.data.width / 2) + 0.005);\n        this.content_clips[1].set(new three_1.Vector3(1, 0, 0), (this.data.width / 2) + 0.005);\n        this.content_clips[0].applyMatrix4(this.backing.object3D.matrixWorld);\n        this.content_clips[1].applyMatrix4(this.backing.object3D.matrixWorld);\n        setTimeout(() => {\n            let child = this.text.object3D.children[this.text.object3D.children.length - 1];\n            if (child)\n                child.material.clippingPlanes = this.text._content_clips ? this.text._content_clips.concat(this.content_clips) : this.content_clips;\n        }, 0);\n        let selectionHeight = this.selectionHighlight.getObject3D('mesh');\n        if (selectionHeight) {\n            selectionHeight.material.clippingPlanes = this.text._content_clips ? this.text._content_clips.concat(this.content_clips) : this.content_clips;\n        }\n        let carret = this.carret.getObject3D('mesh');\n        if (carret) {\n            carret.material.clipShadows = true;\n            carret.material.needsUpdate = true;\n            carret.material.clippingPlanes = this.text._content_clips ? this.text._content_clips.concat(this.content_clips) : this.content_clips;\n        }\n    }\n    numberOnly(e, is_float) {\n        // Stolen from stack overflow.\n        if ([46, 8, 9, 27, 13, 110].indexOf(e.keyCode) !== -1 ||\n            // Allow: Ctrl/cmd+A\n            (e.keyCode === 65 && (e.ctrlKey === true || e.metaKey === true)) ||\n            // Allow: Ctrl/cmd+C\n            (e.keyCode === 67 && (e.ctrlKey === true || e.metaKey === true)) ||\n            // Allow: Ctrl/cmd+X\n            (e.keyCode === 88 && (e.ctrlKey === true || e.metaKey === true)) ||\n            // Allow: home, end, left, right\n            (e.keyCode >= 35 && e.keyCode <= 39)) {\n            // let it happen, don't do anything\n            return true;\n        }\n        // Regex to allow float/int input - float inpit allows \"0.\" for as you type numbers - need to remove on blur.\n        // TODO: Need to remove trailing dot on blur to make a valid number.\n        let output = this.getValue();\n        if (e) {\n            return ((is_float ? /^\\d*((\\.)|(\\.\\d+))?$/g : /^\\d*?$/g).test(output + e.key));\n        }\n    }\n    floatOnly(e) {\n        return this.numberOnly(e, true);\n    }\n    focus() {\n        if (this.isFocused)\n            return;\n        this.isFocused = true;\n        this.setupCarret();\n        this.setScrollClips();\n        setTimeout(() => {\n            this.setValue();\n            this.component.el.sceneEl.addEventListener('mousedown', this.blurHandler);\n            this.playPauseCamera('pause');\n        });\n        this.backing.addEventListener('ui-mousemove', this.mousemove);\n        window.addEventListener('keydown', this.keydown);\n        this.component.el.sceneEl.addEventListener('key-select', this.keySelectAll);\n        this.component.el.sceneEl.addEventListener('key-cut', this.keyCut);\n        this.component.el.sceneEl.addEventListener('key-copy', this.keyCopy);\n        this.component.el.sceneEl.addEventListener('key-paste', this.keyPaste);\n        this.underline.setAttribute('height', 0.008);\n        this.underline.setAttribute('color', this.colorTheme.secondary);\n    }\n    blur() {\n        if (this.chars.length && this.chars[this.chars.length - 1].char === '.' && this.data.type === \"number\") {\n            this.chars.pop();\n            this.setValue();\n        }\n        this.setSelection(0, 0);\n        setTimeout(() => {\n            clearInterval(this.carretInterval);\n            this.carret.object3D.visible = false;\n            this.isFocused = false;\n        });\n        this.component.el.sceneEl.removeEventListener('mousedown', this.blurHandler);\n        this.playPauseCamera('play');\n        window.removeEventListener('keydown', this.keydown);\n        this.component.el.sceneEl.removeEventListener('key-select', this.keySelectAll);\n        this.component.el.sceneEl.removeEventListener('key-cut', this.keyCut);\n        this.component.el.sceneEl.removeEventListener('key-copy', this.keyCopy);\n        this.component.el.sceneEl.removeEventListener('key-paste', this.keyPaste);\n        this.ui.stoppedChanging(this.text.object3D.uuid);\n        this.underline.setAttribute('height', 0.005);\n        this.underline.setAttribute('color', this.colorTheme.primary);\n    }\n    pasteText() {\n        navigator.clipboard.readText()\n            .then((text) => {\n            let chars = [this.text.selectionStart, this.text.selectionLength].concat(text.split('').map(char => ({ char: char })));\n            Array.prototype.splice.apply(this.chars, chars);\n            this.text.selectionStart = this.text.selectionStart + chars.length - 2;\n            this.text.selectionLength = 0;\n            this.setValue();\n        });\n    }\n    cutText() {\n        this.copyText();\n        this.chars.splice(this.text.selectionStart, this.text.selectionLength);\n        this.setValue();\n    }\n    copyText() {\n        let value = this.chars.slice(this.text.selectionStart, this.text.selectionStart + this.text.selectionLength).map((c) => c.char).join(\"\");\n        navigator.clipboard.writeText(value);\n    }\n    handleKeyboardEvent(e) {\n        if (e.keyCode === 13) {\n            this.component.el.emit('submit');\n        }\n        else if (e.keyCode === 9) {\n            if (this.data.tabNext) {\n                this.carret.getObject3D('mesh').material.opacity = 1;\n                this.blur();\n                setTimeout(() => this.data.tabNext.focus());\n            }\n        }\n        else if (e.keyCode === 88 && e.ctrlKey) { //CTRL + X\n            this.cutText();\n        }\n        else if (e.keyCode === 67 && e.ctrlKey) { //CTRL + C\n            this.copyText();\n        }\n        else if (e.keyCode === 86 && e.ctrlKey) { //CTRL + V\n            this.pasteText();\n        }\n        else if (e.keyCode === 65 && e.ctrlKey) { //CTRL + A\n            this.text.selectionStart = 0;\n            this.text.selectionLength = this.chars.length;\n            e.preventDefault();\n            e.stopPropagation();\n        }\n        else if (e.code.indexOf('Key') > -1 || e.code.indexOf('Digit') > -1 || this.charsAllowed.indexOf(e.key) > -1) {\n            let check = true;\n            switch (this.data.type) {\n                case \"number\":\n                    check = this.floatOnly(e);\n                    break;\n                case \"int\":\n                    console.log(this.numberOnly(e, false));\n                    check = this.numberOnly(e, false);\n                    break;\n            }\n            if (check) {\n                this.chars.splice(this.text.selectionStart, this.text.selectionLength, { char: e.key });\n                this.text.selectionStart++;\n                this.text.selectionLength = 0;\n            }\n            e.preventDefault();\n            e.stopPropagation();\n        }\n        else if (e.keyCode === 46) { // Delete\n            this.chars.splice(this.text.selectionStart, this.text.selectionLength || 1);\n            this.text.selectionStart = this.text.selectionStart > this.chars.length ? this.chars.length : this.text.selectionStart;\n            this.text.selectionLength = 0;\n            e.preventDefault();\n            e.stopPropagation();\n        }\n        else if (e.keyCode === 39) {\n            if (!e.shiftKey) {\n                if (this.text.selectionLength) {\n                    this.text.selectionStart += this.text.selectionLength;\n                }\n                else {\n                    this.text.selectionStart++;\n                }\n                this.text.selectionLength = 0;\n                if (this.text.selectionStart > this.chars.length)\n                    this.text.selectionStart = this.chars.length;\n                delete this.shiftStartPos;\n            }\n            else {\n                if (!this.shiftStartPos) {\n                    this.shiftStartPos = this.text.selectionStart;\n                }\n                if (this.text.selectionStart < this.shiftStartPos) {\n                    this.text.selectionStart++;\n                    this.text.selectionLength = Math.abs(this.shiftStartPos - this.text.selectionStart);\n                }\n                else {\n                    this.text.selectionLength++;\n                }\n            }\n            e.preventDefault();\n            e.stopPropagation();\n        }\n        else if (e.keyCode === 37) {\n            if (!e.shiftKey) {\n                if (!this.text.selectionLength) {\n                    this.text.selectionStart--;\n                }\n                this.text.selectionLength = 0;\n                if (this.text.selectionStart < 0)\n                    this.text.selectionStart = 0;\n                delete this.shiftStartPos;\n            }\n            else {\n                if (!this.shiftStartPos) {\n                    this.shiftStartPos = this.text.selectionStart;\n                }\n                if (this.text.selectionStart + this.text.selectionLength > this.shiftStartPos) {\n                    this.text.selectionLength--;\n                }\n                else {\n                    this.text.selectionStart--;\n                    this.text.selectionLength = Math.abs(this.shiftStartPos - this.text.selectionStart);\n                }\n            }\n            e.preventDefault();\n            e.stopPropagation();\n        }\n        else {\n            if (this.text.selectionLength) {\n                if (e.keyCode === 8) { // Backspace\n                    this.chars.splice(this.text.selectionStart, this.text.selectionLength);\n                    this.text.selectionLength = 0;\n                }\n            }\n            else {\n                if (e.keyCode === 8) { // Backspace\n                    if (this.text.selectionStart) {\n                        this.chars.splice(this.text.selectionStart - 1, this.text.selectionLength || 1);\n                        this.text.selectionStart = this.text.selectionStart - 1;\n                    }\n                }\n                else if (e.keyCode === 32) { // Space\n                    this.chars.splice(this.text.selectionStart, 0, { char: ' ' });\n                    this.text.selectionStart++;\n                }\n            }\n            e.preventDefault();\n            e.stopPropagation();\n        }\n        this.component.el.emit('ui-keypress', e);\n        this.setValue();\n        this.carret.getObject3D('mesh').material.opacity = 1;\n    }\n    setValue() {\n        this.setScrolledValue();\n        setTimeout(() => {\n            this.setCharacters();\n            this.setSelection(this.text.selectionStart, this.text.selectionLength);\n            this.increaseWrap();\n        });\n    }\n    setScrolledValue() {\n        let output = this.getValue();\n        this.text.setAttribute('value', output);\n        if (!this.chars.length) {\n            this.text.setAttribute('color', this.colorTheme.primary);\n            this.text.setAttribute('value', this.data.placeHolder);\n        }\n        else {\n            this.text.setAttribute('value', output);\n            this.text.setAttribute('color', this.colorTheme.primaryOn);\n        }\n    }\n    onMousemove(e) {\n        let currentSelection = this.getSelectionPosition(e);\n        if (!this.isMoving) {\n            this.isMoving = true;\n            this.startSelection = currentSelection;\n        }\n        let selection = this.getNearestGlyph(this.startSelection, currentSelection);\n        this.selectionHighlight.setAttribute('scale', (selection.end - selection.start) + ' 1 1');\n        this.selectionHighlight.setAttribute('position', (selection.start + ((selection.end - selection.start) / 2)) + ' 0 0.0005');\n        this.carret.setAttribute('position', selection.end + ' 0 0.001');\n    }\n    setupElements() {\n        this.container = document.createElement('a-entity');\n        this.container.setAttribute('position', new three_1.Vector3((this.data.width / 2), 0, 0));\n        this.text = document.createElement('a-text');\n        this.text.setAttribute('color', this.colorTheme.primary);\n        this.text.setAttribute('anchor', 'center');\n        this.text.setAttribute('align', 'left');\n        this.text.setAttribute('position', '0 0 0.003');\n        this.text.setAttribute('width', this.data.width);\n        this.text.setAttribute('wrap-pixels', this.data.width * 500);\n        this.text.className = 'no-yoga-layout';\n        this.text.setAttribute('height', this.data.height);\n        this.text.setAttribute('value', this.data.value);\n        this.container.appendChild(this.text);\n        this.selectionHighlight = document.createElement('a-box');\n        this.selectionHighlight.setAttribute('width', 1);\n        this.selectionHighlight.setAttribute('scale', '0 1 1');\n        this.selectionHighlight.setAttribute('height', 0.16);\n        this.selectionHighlight.setAttribute('depth', 0.00001);\n        this.selectionHighlight.setAttribute('transparent', true);\n        this.selectionHighlight.className = 'no-yoga-layout';\n        this.selectionHighlight.setAttribute('color', \"#aaaaaa\");\n        this.selectionHighlight.setAttribute('shader', 'flat');\n        this.selectionHighlight.setAttribute('opacity', 0.3);\n        this.selectionHighlight.setAttribute('position', '0 0 0.0005');\n        this.text.appendChild(this.selectionHighlight);\n        this.carret = document.createElement('a-box');\n        this.carret.setAttribute('width', 0.01);\n        this.carret.setAttribute('height', 0.12);\n        this.carret.setAttribute('depth', 0.1);\n        this.carret.setAttribute('visible', false);\n        //this.carret.setAttribute('transparent',true);\n        //this.carret.setAttribute('opacity',0);\n        this.carret.setAttribute('shader', 'flat');\n        this.carret.className = 'no-yoga-layout';\n        this.carret.setAttribute('color', this.colorTheme.primaryLight);\n        this.carret.setAttribute('position', -(this.data.width / 2) + ' 0 0.001');\n        this.text.appendChild(this.carret);\n        this.backing = document.createElement('a-box');\n        this.backing.className = 'intersectable no-yoga-layout text-backing';\n        this.backing.setAttribute('width', this.data.width + 0.1);\n        this.backing.setAttribute('height', this.data.height);\n        this.backing.setAttribute('depth', 0.00001);\n        this.backing.setAttribute('color', this.colorTheme.primaryDark);\n        this.backing.setAttribute('opacity', 0.5);\n        this.backing.setAttribute('transparent', true);\n        this.backing.setAttribute('shader', 'flat');\n        this.container.appendChild(this.backing);\n        this.underline = document.createElement('a-box');\n        this.underline.setAttribute('width', this.data.width);\n        this.underline.setAttribute('height', 0.005);\n        this.underline.setAttribute('depth', 0.00001);\n        this.underline.className = 'no-yoga-layout';\n        this.underline.setAttribute('shader', 'flat');\n        this.underline.setAttribute('color', this.colorTheme.primaryLight);\n        this.underline.setAttribute('position', '0 -0.072 0.001');\n        this.container.appendChild(this.underline);\n        this.component.el.appendChild(this.container);\n    }\n    setupCarret() {\n        //let material = ((this.carret.getObject3D('mesh') as Mesh).material as MeshLambertMaterial);\n        this.carretInterval = setInterval(() => {\n            this.carret.object3D.visible = this.carret.object3D.visible ? false : true;\n            this.ui.isChanging(this.component.el.sceneEl, this.text.object3D.uuid);\n        }, 350);\n    }\n    value(text) {\n        if (text || text === \"\") {\n            this.chars = text.split('').map(char => ({ char: char }));\n            this.text.selectionStart = this.chars.length;\n            this.setValue();\n            // set value\n        }\n        else {\n            return this.chars.map((c) => c.char).join('');\n        }\n    }\n    getValue() {\n        let output = '';\n        for (let i = 0; i < this.chars.length; i++) {\n            output += this.data.type === \"password\" ? '*' : this.chars[i].char;\n        }\n        return output;\n    }\n    getSelectionPosition(e) {\n        this.component.el.object3D.updateMatrixWorld(false);\n        return this.text.object3D.worldToLocal(e.detail.intersection.point.clone()).x;\n    }\n    playPauseCamera(method) {\n        if (method == 'pause') {\n            this.ui.onFocus();\n        }\n        else {\n            this.ui.onFocusOut();\n        }\n        let el = this.data.cameraEl;\n        if (el && el.components[this.data.lookControlsComponent]) {\n            el.components[this.data.lookControlsComponent][method]();\n        }\n        if (this.data.rigEl) {\n            el = this.data.rigEl;\n        }\n        if (el && el.components[this.data.wasdControlsComponent]) {\n            el.components[this.data.wasdControlsComponent][method]();\n        }\n    }\n    setCharacters() {\n        this.positions = new Array();\n        let child = this.text.object3D.children[this.text.object3D.children.length - 1];\n        if (!this.chars.length || !child)\n            return;\n        let glyphs = child.geometry.layout.glyphs;\n        let scale = child.scale.x;\n        let lastPosition = 0;\n        for (let i = 0; i < glyphs.length; i++) {\n            let glyph = glyphs[i];\n            if (!this.chars[i]) {\n                console.log(glyphs.length, this.chars.length);\n            }\n            let currentWidth = (this.chars[i].char === ' ' ? 20 : glyph.data.width);\n            let current = (((glyph.position[0] + currentWidth + glyph.position[1]) * scale) + 0.08);\n            if (i === 0) {\n                lastPosition = (((glyph.position[0] + glyph.position[1]) * scale) + 0.08);\n            }\n            if (!this.chars[i].id) {\n                this.chars[i].id = glyph.data.id;\n                this.chars[i].width = current - lastPosition;\n            }\n            this.chars[i].left = lastPosition;\n            lastPosition = current;\n        }\n    }\n    getNearestGlyph(startPosition, endPosition) {\n        let width = Number(this.text.getAttribute('width'));\n        let parentWidth = this.data.width;\n        if (endPosition < startPosition) {\n            let tempPosition = endPosition;\n            endPosition = startPosition;\n            startPosition = tempPosition;\n        }\n        if (startPosition < -parentWidth / 2) {\n            startPosition = -parentWidth / 2;\n        }\n        if (endPosition > width - parentWidth / 2) {\n            endPosition = width - parentWidth / 2;\n        }\n        let startDiff = Number.POSITIVE_INFINITY;\n        let endDiff = Number.POSITIVE_INFINITY;\n        let output = { start: 0, end: 0 };\n        if (this.chars.length) {\n            for (let i = 0; i <= this.chars.length; i++) {\n                let position = this.chars[i === this.chars.length ? i - 1 : i];\n                let currentPosition = (i === this.chars.length ? position.left + position.width : position.left) - (parentWidth) / 2;\n                if (Math.abs(startPosition - currentPosition) < startDiff) {\n                    startDiff = Math.abs(startPosition - currentPosition);\n                    output.start = currentPosition;\n                    this.text.selectionStart = i;\n                }\n                if (Math.abs(endPosition - currentPosition) < endDiff) {\n                    endDiff = Math.abs(endPosition - currentPosition);\n                    output.end = currentPosition;\n                    this.text.selectionLength = i - this.text.selectionStart;\n                }\n            }\n        }\n        return output;\n    }\n    setSelection(start, length) {\n        this.text.selectionStart = start;\n        this.text.selectionLength = length;\n        let right = 0, left = 0;\n        for (let i = 0; i < this.chars.length; i++) {\n            let position = this.chars[i];\n            if (i >= start && i < start + length + 1) {\n                let current = position.left;\n                if (i === start) {\n                    left = current;\n                }\n                right = current;\n            }\n        }\n        let end = this.chars.length ? this.chars[this.chars.length - 1].left + this.chars[this.chars.length - 1].width : 0;\n        if (start + length === this.chars.length) {\n            right = end;\n        }\n        if (start === this.chars.length) {\n            left = right = end;\n        }\n        let parentWidth = this.data.width;\n        this.selectionHighlight.setAttribute('scale', (right - left) + ' 1 1');\n        this.selectionHighlight.setAttribute('position', (left + ((right - left) / 2) - ((parentWidth) / 2)) + ' 0 0.0005');\n        let carretPosition = (right - ((parentWidth) / 2));\n        this.carret.setAttribute('position', carretPosition + ' 0 0.001');\n        if (carretPosition > (parentWidth / 2) - this.scrollOffset) {\n            this.scrollOffset = -(carretPosition - (parentWidth / 2));\n            this.text.setAttribute('position', this.scrollOffset + ' 0 0.003');\n        }\n        if ((carretPosition + parentWidth / 2) < -this.scrollOffset) {\n            this.scrollOffset += (-this.scrollOffset - (carretPosition + parentWidth / 2));\n            if (this.scrollOffset > 0)\n                this.scrollOffset = 0;\n            this.text.setAttribute('position', this.scrollOffset + ' 0 0.003');\n        }\n    }\n}\nInputText.DEFINITION = new built_1.ComponentControllerDefinition(\n/* Name */ \"ui-input-text\", \n/* Schema */ {\n    value: { default: '' },\n    disabled: { type: 'boolean', default: false },\n    type: { default: 'text' },\n    cameraEl: { type: 'selector' },\n    rigEl: { type: 'selector' },\n    tabNext: { type: 'selector' },\n    width: { type: 'number', default: 1 },\n    height: { type: 'number', default: 0.2 },\n    backgroundColor: { default: 'white' },\n    lookControlsComponent: { default: 'look-controls' },\n    wasdControlsComponent: { default: 'wasd-controls' },\n    placeHolder: { default: 'Text...' }\n}, \n/* Multiple */ false, \n/* Receive ticks */ false, \n/* Factory function */ (component, entity, data) => new InputText(component, entity, data));\nexports.InputText = InputText;\n//# sourceMappingURL=InputText.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/InputText.js\n");

/***/ }),

/***/ "./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/Modal.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/Modal.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst built_1 = __webpack_require__(/*! aframe-typescript-boilerplate/built */ \"./node_modules/aframe-typescript-boilerplate/built/index.js\");\nconst UiElement_1 = __webpack_require__(/*! ./UiElement */ \"./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/UiElement.js\");\nclass Modal extends UiElement_1.UiElement {\n    constructor(component, entity, data) {\n        super(component, entity, data);\n        this.modalPanel = undefined;\n        this.mainComponents = {};\n        this.modalComponents = {};\n        this.openModal = () => { };\n        this.modalTween = undefined;\n    }\n    init() {\n        if (this.data.modal && this.data.main) {\n            // Get the modal panel to be able to animate its scale on open/close.\n            this.modalPanel = document.querySelector(this.data.modal.getAttribute('ui-panel'));\n            this.mainComponents = this.data.main.components;\n            this.modalComponents = this.data.modal.components;\n            // Pause rendering of modal until opened.\n            if (this.modalComponents && this.modalComponents['ui']) {\n                this.modalComponents['ui'].pause();\n            }\n            // Setup close listeners for anything with the class close-modal.\n            let close_buttons = this.data.modal.querySelectorAll('.close-modal');\n            for (let i = 0; i < close_buttons.length; i++) {\n                let close_button = close_buttons[i];\n                close_button.addEventListener('mousedown', () => {\n                    this.close();\n                });\n            }\n            // Add click handler for opening the modal, pause the main render screen and play the modal renderer\n            this.openModal = this.open.bind(this);\n            this.component.el.addEventListener('mousedown', this.openModal);\n            this.data.main.modal = this;\n            // Expose methods to open/close the modal.\n            this.component.el.open = this.open.bind(this);\n            this.component.el.close = this.close.bind(this);\n        }\n    }\n    remove() {\n        this.component.el.removeEventListener('mousedown', this.openModal);\n    }\n    open() {\n        if (this.mainComponents && this.mainComponents['ui']) {\n            this.mainComponents['ui'].el.pauseRender();\n            this.tweenModalScale(0.0000001, 1);\n            this.modalComponents['ui'].play();\n        }\n    }\n    close() {\n        // Pause the modal rendering and play the main rendering again.\n        this.modalComponents['ui'].pause();\n        this.mainComponents['ui'].play();\n        this.mainComponents['ui'].el.playRender();\n        this.tweenModalScale(1, 0.0000001)\n            .then(() => {\n            this.component.el.sceneEl.emit('modal-closed');\n        });\n    }\n    tweenModalScale(from, to) {\n        return new Promise(r => {\n            let _this = this;\n            if (this.modalTween)\n                this.modalTween.stop();\n            this.modalTween = new TWEEN.Tween({ x: from })\n                .to({ x: to }, 250)\n                .onUpdate(function () {\n                if (_this.modalPanel)\n                    _this.modalPanel.setAttribute('scale', this.x + ' ' + this.x + ' ' + this.x);\n            })\n                .onComplete(r)\n                .easing(TWEEN.Easing.Exponential.Out).start();\n        });\n    }\n}\nModal.DEFINITION = new built_1.ComponentControllerDefinition(\n/* Name */ \"ui-modal\", \n/* Schema */ {\n    modal: { type: 'selector' },\n    main: { type: 'selector' }\n}, \n/* Multiple */ false, \n/* Receive ticks */ false, \n/* Factory function */ (component, entity, data) => new Modal(component, entity, data));\nexports.Modal = Modal;\n//# sourceMappingURL=Modal.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHRsYXVra2FuL2FmcmFtZS1tYXRlcmlhbC1jb2xsZWN0aW9uLXRzL2J1aWx0L3NyYy9jb21wb25lbnRzL01vZGFsLmpzP2JjYTIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBOEMsY0FBYztBQUM1RCxnQkFBZ0IsbUJBQU8sQ0FBQyx3R0FBcUM7QUFDN0Qsb0JBQW9CLG1CQUFPLENBQUMsNkdBQWE7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIsMEJBQTBCO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQ0FBK0MsVUFBVTtBQUN6RCxxQkFBcUIsUUFBUTtBQUM3QjtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxtQkFBbUI7QUFDL0IsV0FBVztBQUNYLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0B0bGF1a2thbi9hZnJhbWUtbWF0ZXJpYWwtY29sbGVjdGlvbi10cy9idWlsdC9zcmMvY29tcG9uZW50cy9Nb2RhbC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgYnVpbHRfMSA9IHJlcXVpcmUoXCJhZnJhbWUtdHlwZXNjcmlwdC1ib2lsZXJwbGF0ZS9idWlsdFwiKTtcbmNvbnN0IFVpRWxlbWVudF8xID0gcmVxdWlyZShcIi4vVWlFbGVtZW50XCIpO1xuY2xhc3MgTW9kYWwgZXh0ZW5kcyBVaUVsZW1lbnRfMS5VaUVsZW1lbnQge1xuICAgIGNvbnN0cnVjdG9yKGNvbXBvbmVudCwgZW50aXR5LCBkYXRhKSB7XG4gICAgICAgIHN1cGVyKGNvbXBvbmVudCwgZW50aXR5LCBkYXRhKTtcbiAgICAgICAgdGhpcy5tb2RhbFBhbmVsID0gdW5kZWZpbmVkO1xuICAgICAgICB0aGlzLm1haW5Db21wb25lbnRzID0ge307XG4gICAgICAgIHRoaXMubW9kYWxDb21wb25lbnRzID0ge307XG4gICAgICAgIHRoaXMub3Blbk1vZGFsID0gKCkgPT4geyB9O1xuICAgICAgICB0aGlzLm1vZGFsVHdlZW4gPSB1bmRlZmluZWQ7XG4gICAgfVxuICAgIGluaXQoKSB7XG4gICAgICAgIGlmICh0aGlzLmRhdGEubW9kYWwgJiYgdGhpcy5kYXRhLm1haW4pIHtcbiAgICAgICAgICAgIC8vIEdldCB0aGUgbW9kYWwgcGFuZWwgdG8gYmUgYWJsZSB0byBhbmltYXRlIGl0cyBzY2FsZSBvbiBvcGVuL2Nsb3NlLlxuICAgICAgICAgICAgdGhpcy5tb2RhbFBhbmVsID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0aGlzLmRhdGEubW9kYWwuZ2V0QXR0cmlidXRlKCd1aS1wYW5lbCcpKTtcbiAgICAgICAgICAgIHRoaXMubWFpbkNvbXBvbmVudHMgPSB0aGlzLmRhdGEubWFpbi5jb21wb25lbnRzO1xuICAgICAgICAgICAgdGhpcy5tb2RhbENvbXBvbmVudHMgPSB0aGlzLmRhdGEubW9kYWwuY29tcG9uZW50cztcbiAgICAgICAgICAgIC8vIFBhdXNlIHJlbmRlcmluZyBvZiBtb2RhbCB1bnRpbCBvcGVuZWQuXG4gICAgICAgICAgICBpZiAodGhpcy5tb2RhbENvbXBvbmVudHMgJiYgdGhpcy5tb2RhbENvbXBvbmVudHNbJ3VpJ10pIHtcbiAgICAgICAgICAgICAgICB0aGlzLm1vZGFsQ29tcG9uZW50c1sndWknXS5wYXVzZSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8gU2V0dXAgY2xvc2UgbGlzdGVuZXJzIGZvciBhbnl0aGluZyB3aXRoIHRoZSBjbGFzcyBjbG9zZS1tb2RhbC5cbiAgICAgICAgICAgIGxldCBjbG9zZV9idXR0b25zID0gdGhpcy5kYXRhLm1vZGFsLnF1ZXJ5U2VsZWN0b3JBbGwoJy5jbG9zZS1tb2RhbCcpO1xuICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBjbG9zZV9idXR0b25zLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgbGV0IGNsb3NlX2J1dHRvbiA9IGNsb3NlX2J1dHRvbnNbaV07XG4gICAgICAgICAgICAgICAgY2xvc2VfYnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlZG93bicsICgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5jbG9zZSgpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8gQWRkIGNsaWNrIGhhbmRsZXIgZm9yIG9wZW5pbmcgdGhlIG1vZGFsLCBwYXVzZSB0aGUgbWFpbiByZW5kZXIgc2NyZWVuIGFuZCBwbGF5IHRoZSBtb2RhbCByZW5kZXJlclxuICAgICAgICAgICAgdGhpcy5vcGVuTW9kYWwgPSB0aGlzLm9wZW4uYmluZCh0aGlzKTtcbiAgICAgICAgICAgIHRoaXMuY29tcG9uZW50LmVsLmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlZG93bicsIHRoaXMub3Blbk1vZGFsKTtcbiAgICAgICAgICAgIHRoaXMuZGF0YS5tYWluLm1vZGFsID0gdGhpcztcbiAgICAgICAgICAgIC8vIEV4cG9zZSBtZXRob2RzIHRvIG9wZW4vY2xvc2UgdGhlIG1vZGFsLlxuICAgICAgICAgICAgdGhpcy5jb21wb25lbnQuZWwub3BlbiA9IHRoaXMub3Blbi5iaW5kKHRoaXMpO1xuICAgICAgICAgICAgdGhpcy5jb21wb25lbnQuZWwuY2xvc2UgPSB0aGlzLmNsb3NlLmJpbmQodGhpcyk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmVtb3ZlKCkge1xuICAgICAgICB0aGlzLmNvbXBvbmVudC5lbC5yZW1vdmVFdmVudExpc3RlbmVyKCdtb3VzZWRvd24nLCB0aGlzLm9wZW5Nb2RhbCk7XG4gICAgfVxuICAgIG9wZW4oKSB7XG4gICAgICAgIGlmICh0aGlzLm1haW5Db21wb25lbnRzICYmIHRoaXMubWFpbkNvbXBvbmVudHNbJ3VpJ10pIHtcbiAgICAgICAgICAgIHRoaXMubWFpbkNvbXBvbmVudHNbJ3VpJ10uZWwucGF1c2VSZW5kZXIoKTtcbiAgICAgICAgICAgIHRoaXMudHdlZW5Nb2RhbFNjYWxlKDAuMDAwMDAwMSwgMSk7XG4gICAgICAgICAgICB0aGlzLm1vZGFsQ29tcG9uZW50c1sndWknXS5wbGF5KCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgY2xvc2UoKSB7XG4gICAgICAgIC8vIFBhdXNlIHRoZSBtb2RhbCByZW5kZXJpbmcgYW5kIHBsYXkgdGhlIG1haW4gcmVuZGVyaW5nIGFnYWluLlxuICAgICAgICB0aGlzLm1vZGFsQ29tcG9uZW50c1sndWknXS5wYXVzZSgpO1xuICAgICAgICB0aGlzLm1haW5Db21wb25lbnRzWyd1aSddLnBsYXkoKTtcbiAgICAgICAgdGhpcy5tYWluQ29tcG9uZW50c1sndWknXS5lbC5wbGF5UmVuZGVyKCk7XG4gICAgICAgIHRoaXMudHdlZW5Nb2RhbFNjYWxlKDEsIDAuMDAwMDAwMSlcbiAgICAgICAgICAgIC50aGVuKCgpID0+IHtcbiAgICAgICAgICAgIHRoaXMuY29tcG9uZW50LmVsLnNjZW5lRWwuZW1pdCgnbW9kYWwtY2xvc2VkJyk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICB0d2Vlbk1vZGFsU2NhbGUoZnJvbSwgdG8pIHtcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKHIgPT4ge1xuICAgICAgICAgICAgbGV0IF90aGlzID0gdGhpcztcbiAgICAgICAgICAgIGlmICh0aGlzLm1vZGFsVHdlZW4pXG4gICAgICAgICAgICAgICAgdGhpcy5tb2RhbFR3ZWVuLnN0b3AoKTtcbiAgICAgICAgICAgIHRoaXMubW9kYWxUd2VlbiA9IG5ldyBUV0VFTi5Ud2Vlbih7IHg6IGZyb20gfSlcbiAgICAgICAgICAgICAgICAudG8oeyB4OiB0byB9LCAyNTApXG4gICAgICAgICAgICAgICAgLm9uVXBkYXRlKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICBpZiAoX3RoaXMubW9kYWxQYW5lbClcbiAgICAgICAgICAgICAgICAgICAgX3RoaXMubW9kYWxQYW5lbC5zZXRBdHRyaWJ1dGUoJ3NjYWxlJywgdGhpcy54ICsgJyAnICsgdGhpcy54ICsgJyAnICsgdGhpcy54KTtcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgLm9uQ29tcGxldGUocilcbiAgICAgICAgICAgICAgICAuZWFzaW5nKFRXRUVOLkVhc2luZy5FeHBvbmVudGlhbC5PdXQpLnN0YXJ0KCk7XG4gICAgICAgIH0pO1xuICAgIH1cbn1cbk1vZGFsLkRFRklOSVRJT04gPSBuZXcgYnVpbHRfMS5Db21wb25lbnRDb250cm9sbGVyRGVmaW5pdGlvbihcbi8qIE5hbWUgKi8gXCJ1aS1tb2RhbFwiLCBcbi8qIFNjaGVtYSAqLyB7XG4gICAgbW9kYWw6IHsgdHlwZTogJ3NlbGVjdG9yJyB9LFxuICAgIG1haW46IHsgdHlwZTogJ3NlbGVjdG9yJyB9XG59LCBcbi8qIE11bHRpcGxlICovIGZhbHNlLCBcbi8qIFJlY2VpdmUgdGlja3MgKi8gZmFsc2UsIFxuLyogRmFjdG9yeSBmdW5jdGlvbiAqLyAoY29tcG9uZW50LCBlbnRpdHksIGRhdGEpID0+IG5ldyBNb2RhbChjb21wb25lbnQsIGVudGl0eSwgZGF0YSkpO1xuZXhwb3J0cy5Nb2RhbCA9IE1vZGFsO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9TW9kYWwuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/Modal.js\n");

/***/ }),

/***/ "./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/MouseShim.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/MouseShim.js ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst built_1 = __webpack_require__(/*! aframe-typescript-boilerplate/built */ \"./node_modules/aframe-typescript-boilerplate/built/index.js\");\nconst UiElement_1 = __webpack_require__(/*! ./UiElement */ \"./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/UiElement.js\");\nclass MouseShim extends UiElement_1.UiElement {\n    constructor(component, entity, data) {\n        super(component, entity, data);\n        this.onmousewheele = (e) => { };\n        this.lastMouseMoveTime = 0;\n    }\n    init() {\n        if (!this.component.el.components.raycaster) {\n            throw 'ui-mouse-move component needs the raycaster component to be added.';\n        }\n        // Add support for mouse wheel\n        this.onmousewheele = this.onMouseWheel.bind(this);\n        this.component.el.sceneEl.raycaster = this.component.el.components.raycaster;\n    }\n    pause() {\n        this.component.el.sceneEl.renderer.domElement.removeEventListener('wheel', this.onmousewheele, false);\n    }\n    play() {\n        this.component.el.sceneEl.renderer.domElement.addEventListener('wheel', this.onmousewheele, false);\n    }\n    tick(time, timeDelta) {\n        if (new Date().getTime() - this.lastMouseMoveTime < (1000 / this.data.fps))\n            return;\n        this.emitMouseEvent('ui-mousemove', new MouseEvent('ui-mousemove'));\n        this.lastMouseMoveTime = new Date().getTime();\n    }\n    onMouseWheel(e) {\n        this.emitMouseEvent('ui-mousewheel', e);\n    }\n    emitMouseEvent(eventType, event) {\n        if (this.component.el.sceneEl.cursorPoint && this.component.el.components.raycaster.intersections.length && this.component.el.sceneEl.renderer.vr.enabled) {\n            this.component.el.sceneEl.cursorPoint.position.copy(this.component.el.components.raycaster.intersections[0].point);\n            this.component.el.sceneEl.cursorPoint.scale.set(1, 1, 1);\n        }\n        else {\n            if (this.component.el.sceneEl.cursorPoint && !this.component.el.sceneEl.hasSceneCursor) {\n                this.component.el.sceneEl.cursorPoint.scale.set(0.00001, 0.00001, 0.00001);\n            }\n        }\n        // Get current intersections from raycaster component.\n        this.component.el.components.raycaster.intersections.forEach((intersection) => {\n            if (intersection.object.el) {\n                // Emit custom mouse move event ont he intersected element.\n                intersection.object.el.emit(eventType, { cursorEl: this.component.el, intersection: intersection, evt: event });\n            }\n        });\n    }\n}\nMouseShim.DEFINITION = new built_1.ComponentControllerDefinition(\n/* Name */ \"ui-mouse-shim\", \n/* Schema */ {\n    fps: { type: 'number', default: 45 }\n}, \n/* Multiple */ false, \n/* Receive ticks */ true, \n/* Factory function */ (component, entity, data) => new MouseShim(component, entity, data));\nexports.MouseShim = MouseShim;\n//# sourceMappingURL=MouseShim.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHRsYXVra2FuL2FmcmFtZS1tYXRlcmlhbC1jb2xsZWN0aW9uLXRzL2J1aWx0L3NyYy9jb21wb25lbnRzL01vdXNlU2hpbS5qcz8wZDRjIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQThDLGNBQWM7QUFDNUQsZ0JBQWdCLG1CQUFPLENBQUMsd0dBQXFDO0FBQzdELG9CQUFvQixtQkFBTyxDQUFDLDZHQUFhO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBLHFDQUFxQztBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3REFBd0Qsc0VBQXNFO0FBQzlIO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1YsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRsYXVra2FuL2FmcmFtZS1tYXRlcmlhbC1jb2xsZWN0aW9uLXRzL2J1aWx0L3NyYy9jb21wb25lbnRzL01vdXNlU2hpbS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgYnVpbHRfMSA9IHJlcXVpcmUoXCJhZnJhbWUtdHlwZXNjcmlwdC1ib2lsZXJwbGF0ZS9idWlsdFwiKTtcbmNvbnN0IFVpRWxlbWVudF8xID0gcmVxdWlyZShcIi4vVWlFbGVtZW50XCIpO1xuY2xhc3MgTW91c2VTaGltIGV4dGVuZHMgVWlFbGVtZW50XzEuVWlFbGVtZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihjb21wb25lbnQsIGVudGl0eSwgZGF0YSkge1xuICAgICAgICBzdXBlcihjb21wb25lbnQsIGVudGl0eSwgZGF0YSk7XG4gICAgICAgIHRoaXMub25tb3VzZXdoZWVsZSA9IChlKSA9PiB7IH07XG4gICAgICAgIHRoaXMubGFzdE1vdXNlTW92ZVRpbWUgPSAwO1xuICAgIH1cbiAgICBpbml0KCkge1xuICAgICAgICBpZiAoIXRoaXMuY29tcG9uZW50LmVsLmNvbXBvbmVudHMucmF5Y2FzdGVyKSB7XG4gICAgICAgICAgICB0aHJvdyAndWktbW91c2UtbW92ZSBjb21wb25lbnQgbmVlZHMgdGhlIHJheWNhc3RlciBjb21wb25lbnQgdG8gYmUgYWRkZWQuJztcbiAgICAgICAgfVxuICAgICAgICAvLyBBZGQgc3VwcG9ydCBmb3IgbW91c2Ugd2hlZWxcbiAgICAgICAgdGhpcy5vbm1vdXNld2hlZWxlID0gdGhpcy5vbk1vdXNlV2hlZWwuYmluZCh0aGlzKTtcbiAgICAgICAgdGhpcy5jb21wb25lbnQuZWwuc2NlbmVFbC5yYXljYXN0ZXIgPSB0aGlzLmNvbXBvbmVudC5lbC5jb21wb25lbnRzLnJheWNhc3RlcjtcbiAgICB9XG4gICAgcGF1c2UoKSB7XG4gICAgICAgIHRoaXMuY29tcG9uZW50LmVsLnNjZW5lRWwucmVuZGVyZXIuZG9tRWxlbWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCd3aGVlbCcsIHRoaXMub25tb3VzZXdoZWVsZSwgZmFsc2UpO1xuICAgIH1cbiAgICBwbGF5KCkge1xuICAgICAgICB0aGlzLmNvbXBvbmVudC5lbC5zY2VuZUVsLnJlbmRlcmVyLmRvbUVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignd2hlZWwnLCB0aGlzLm9ubW91c2V3aGVlbGUsIGZhbHNlKTtcbiAgICB9XG4gICAgdGljayh0aW1lLCB0aW1lRGVsdGEpIHtcbiAgICAgICAgaWYgKG5ldyBEYXRlKCkuZ2V0VGltZSgpIC0gdGhpcy5sYXN0TW91c2VNb3ZlVGltZSA8ICgxMDAwIC8gdGhpcy5kYXRhLmZwcykpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIHRoaXMuZW1pdE1vdXNlRXZlbnQoJ3VpLW1vdXNlbW92ZScsIG5ldyBNb3VzZUV2ZW50KCd1aS1tb3VzZW1vdmUnKSk7XG4gICAgICAgIHRoaXMubGFzdE1vdXNlTW92ZVRpbWUgPSBuZXcgRGF0ZSgpLmdldFRpbWUoKTtcbiAgICB9XG4gICAgb25Nb3VzZVdoZWVsKGUpIHtcbiAgICAgICAgdGhpcy5lbWl0TW91c2VFdmVudCgndWktbW91c2V3aGVlbCcsIGUpO1xuICAgIH1cbiAgICBlbWl0TW91c2VFdmVudChldmVudFR5cGUsIGV2ZW50KSB7XG4gICAgICAgIGlmICh0aGlzLmNvbXBvbmVudC5lbC5zY2VuZUVsLmN1cnNvclBvaW50ICYmIHRoaXMuY29tcG9uZW50LmVsLmNvbXBvbmVudHMucmF5Y2FzdGVyLmludGVyc2VjdGlvbnMubGVuZ3RoICYmIHRoaXMuY29tcG9uZW50LmVsLnNjZW5lRWwucmVuZGVyZXIudnIuZW5hYmxlZCkge1xuICAgICAgICAgICAgdGhpcy5jb21wb25lbnQuZWwuc2NlbmVFbC5jdXJzb3JQb2ludC5wb3NpdGlvbi5jb3B5KHRoaXMuY29tcG9uZW50LmVsLmNvbXBvbmVudHMucmF5Y2FzdGVyLmludGVyc2VjdGlvbnNbMF0ucG9pbnQpO1xuICAgICAgICAgICAgdGhpcy5jb21wb25lbnQuZWwuc2NlbmVFbC5jdXJzb3JQb2ludC5zY2FsZS5zZXQoMSwgMSwgMSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBpZiAodGhpcy5jb21wb25lbnQuZWwuc2NlbmVFbC5jdXJzb3JQb2ludCAmJiAhdGhpcy5jb21wb25lbnQuZWwuc2NlbmVFbC5oYXNTY2VuZUN1cnNvcikge1xuICAgICAgICAgICAgICAgIHRoaXMuY29tcG9uZW50LmVsLnNjZW5lRWwuY3Vyc29yUG9pbnQuc2NhbGUuc2V0KDAuMDAwMDEsIDAuMDAwMDEsIDAuMDAwMDEpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIC8vIEdldCBjdXJyZW50IGludGVyc2VjdGlvbnMgZnJvbSByYXljYXN0ZXIgY29tcG9uZW50LlxuICAgICAgICB0aGlzLmNvbXBvbmVudC5lbC5jb21wb25lbnRzLnJheWNhc3Rlci5pbnRlcnNlY3Rpb25zLmZvckVhY2goKGludGVyc2VjdGlvbikgPT4ge1xuICAgICAgICAgICAgaWYgKGludGVyc2VjdGlvbi5vYmplY3QuZWwpIHtcbiAgICAgICAgICAgICAgICAvLyBFbWl0IGN1c3RvbSBtb3VzZSBtb3ZlIGV2ZW50IG9udCBoZSBpbnRlcnNlY3RlZCBlbGVtZW50LlxuICAgICAgICAgICAgICAgIGludGVyc2VjdGlvbi5vYmplY3QuZWwuZW1pdChldmVudFR5cGUsIHsgY3Vyc29yRWw6IHRoaXMuY29tcG9uZW50LmVsLCBpbnRlcnNlY3Rpb246IGludGVyc2VjdGlvbiwgZXZ0OiBldmVudCB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxufVxuTW91c2VTaGltLkRFRklOSVRJT04gPSBuZXcgYnVpbHRfMS5Db21wb25lbnRDb250cm9sbGVyRGVmaW5pdGlvbihcbi8qIE5hbWUgKi8gXCJ1aS1tb3VzZS1zaGltXCIsIFxuLyogU2NoZW1hICovIHtcbiAgICBmcHM6IHsgdHlwZTogJ251bWJlcicsIGRlZmF1bHQ6IDQ1IH1cbn0sIFxuLyogTXVsdGlwbGUgKi8gZmFsc2UsIFxuLyogUmVjZWl2ZSB0aWNrcyAqLyB0cnVlLCBcbi8qIEZhY3RvcnkgZnVuY3Rpb24gKi8gKGNvbXBvbmVudCwgZW50aXR5LCBkYXRhKSA9PiBuZXcgTW91c2VTaGltKGNvbXBvbmVudCwgZW50aXR5LCBkYXRhKSk7XG5leHBvcnRzLk1vdXNlU2hpbSA9IE1vdXNlU2hpbTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPU1vdXNlU2hpbS5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/MouseShim.js\n");

/***/ }),

/***/ "./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/NumberComponent.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/NumberComponent.js ***!
  \******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst built_1 = __webpack_require__(/*! aframe-typescript-boilerplate/built */ \"./node_modules/aframe-typescript-boilerplate/built/index.js\");\nconst UiElement_1 = __webpack_require__(/*! ./UiElement */ \"./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/UiElement.js\");\nclass NumberComponent extends UiElement_1.UiElement {\n    constructor(component, entity, data) {\n        super(component, entity, data);\n    }\n    init() {\n        let numberText = document.createElement('a-plane');\n        numberText.setAttribute('width', \"0.55\");\n        numberText.setAttribute('height', \"0.2\");\n        numberText.className = 'no-yoga-layout';\n        numberText.setAttribute('color', \"#212121\");\n        numberText.setAttribute('text', \"value:\" + this.data.value.toFixed(3) + \";color:#212121;wrapCount:12;align:center\");\n        numberText.setAttribute('ui-border', \"borderRadius:0.1;borderWidth:0.008\");\n        let upButton = document.createElement('a-ui-fab-button-small');\n        upButton.setAttribute('scale', '0.75 0.75 0.75');\n        upButton.className = 'no-yoga-layout ' + this.data.intersectableClass;\n        upButton.setAttribute('color', '#009688');\n        upButton.setAttribute('position', '0.33 0.055 0.001');\n        upButton.setAttribute('color', '#009688');\n        upButton.setAttribute('icon-color', '#fff');\n        upButton.setAttribute('ripple-color', '#009688');\n        upButton.setAttribute('src', 'https://cdn.theexpanse.app/images/icons/baseline_keyboard_arrow_up_white_18dp.png');\n        upButton.addEventListener('click', () => {\n            this.data.value += this.data.increment;\n            numberText.setAttribute('text', \"value:\" + (this.data.value).toFixed(3) + \";color:#212121;wrapCount:12;align:center\");\n            this.component.el.emit('change', this.data.value);\n        });\n        let downButton = document.createElement('a-ui-fab-button-small');\n        downButton.setAttribute('scale', '0.75 0.75 0.75');\n        downButton.className = 'no-yoga-layout ' + this.data.intersectableClass;\n        downButton.setAttribute('color', '#009688');\n        downButton.setAttribute('position', '0.33 -0.055 0.001');\n        downButton.setAttribute('color', '#009688');\n        downButton.setAttribute('icon-color', '#fff');\n        downButton.setAttribute('ripple-color', '#009688');\n        downButton.setAttribute('src', 'https://cdn.theexpanse.app/images/icons/down_arrow.png');\n        downButton.addEventListener('click', () => {\n            this.data.value -= this.data.increment;\n            numberText.setAttribute('text', \"value:\" + (this.data.value).toFixed(3) + \";color:#212121;wrapCount:12;align:center\");\n            this.component.el.emit('change', this.data.value);\n        });\n        numberText.appendChild(upButton);\n        numberText.appendChild(downButton);\n        this.component.el.appendChild(numberText);\n    }\n}\nNumberComponent.DEFINITION = new built_1.ComponentControllerDefinition(\n/* Name */ \"ui-number\", \n/* Schema */ {\n    value: { type: 'number', default: 0 },\n    increment: { type: 'number', default: 0.001 },\n    width: { type: 'number', default: 0.65 },\n    height: { type: 'number', default: 0.2 },\n    intersectableClass: { default: 'intersectable' },\n}, \n/* Multiple */ false, \n/* Receive ticks */ false, \n/* Factory function */ (component, entity, data) => new NumberComponent(component, entity, data));\nexports.NumberComponent = NumberComponent;\n//# sourceMappingURL=NumberComponent.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHRsYXVra2FuL2FmcmFtZS1tYXRlcmlhbC1jb2xsZWN0aW9uLXRzL2J1aWx0L3NyYy9jb21wb25lbnRzL051bWJlckNvbXBvbmVudC5qcz82YzNlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQThDLGNBQWM7QUFDNUQsZ0JBQWdCLG1CQUFPLENBQUMsd0dBQXFDO0FBQzdELG9CQUFvQixtQkFBTyxDQUFDLDZHQUFhO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0ZBQWtGLGNBQWMsYUFBYTtBQUM3RywrREFBK0Q7QUFDL0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdGQUF3RixjQUFjLGFBQWE7QUFDbkg7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdGQUF3RixjQUFjLGFBQWE7QUFDbkg7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksNkJBQTZCO0FBQ3pDLGdCQUFnQixpQ0FBaUM7QUFDakQsWUFBWSxnQ0FBZ0M7QUFDNUMsYUFBYSwrQkFBK0I7QUFDNUMseUJBQXlCLDJCQUEyQjtBQUNwRCxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9AdGxhdWtrYW4vYWZyYW1lLW1hdGVyaWFsLWNvbGxlY3Rpb24tdHMvYnVpbHQvc3JjL2NvbXBvbmVudHMvTnVtYmVyQ29tcG9uZW50LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCBidWlsdF8xID0gcmVxdWlyZShcImFmcmFtZS10eXBlc2NyaXB0LWJvaWxlcnBsYXRlL2J1aWx0XCIpO1xuY29uc3QgVWlFbGVtZW50XzEgPSByZXF1aXJlKFwiLi9VaUVsZW1lbnRcIik7XG5jbGFzcyBOdW1iZXJDb21wb25lbnQgZXh0ZW5kcyBVaUVsZW1lbnRfMS5VaUVsZW1lbnQge1xuICAgIGNvbnN0cnVjdG9yKGNvbXBvbmVudCwgZW50aXR5LCBkYXRhKSB7XG4gICAgICAgIHN1cGVyKGNvbXBvbmVudCwgZW50aXR5LCBkYXRhKTtcbiAgICB9XG4gICAgaW5pdCgpIHtcbiAgICAgICAgbGV0IG51bWJlclRleHQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdhLXBsYW5lJyk7XG4gICAgICAgIG51bWJlclRleHQuc2V0QXR0cmlidXRlKCd3aWR0aCcsIFwiMC41NVwiKTtcbiAgICAgICAgbnVtYmVyVGV4dC5zZXRBdHRyaWJ1dGUoJ2hlaWdodCcsIFwiMC4yXCIpO1xuICAgICAgICBudW1iZXJUZXh0LmNsYXNzTmFtZSA9ICduby15b2dhLWxheW91dCc7XG4gICAgICAgIG51bWJlclRleHQuc2V0QXR0cmlidXRlKCdjb2xvcicsIFwiIzIxMjEyMVwiKTtcbiAgICAgICAgbnVtYmVyVGV4dC5zZXRBdHRyaWJ1dGUoJ3RleHQnLCBcInZhbHVlOlwiICsgdGhpcy5kYXRhLnZhbHVlLnRvRml4ZWQoMykgKyBcIjtjb2xvcjojMjEyMTIxO3dyYXBDb3VudDoxMjthbGlnbjpjZW50ZXJcIik7XG4gICAgICAgIG51bWJlclRleHQuc2V0QXR0cmlidXRlKCd1aS1ib3JkZXInLCBcImJvcmRlclJhZGl1czowLjE7Ym9yZGVyV2lkdGg6MC4wMDhcIik7XG4gICAgICAgIGxldCB1cEJ1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2EtdWktZmFiLWJ1dHRvbi1zbWFsbCcpO1xuICAgICAgICB1cEJ1dHRvbi5zZXRBdHRyaWJ1dGUoJ3NjYWxlJywgJzAuNzUgMC43NSAwLjc1Jyk7XG4gICAgICAgIHVwQnV0dG9uLmNsYXNzTmFtZSA9ICduby15b2dhLWxheW91dCAnICsgdGhpcy5kYXRhLmludGVyc2VjdGFibGVDbGFzcztcbiAgICAgICAgdXBCdXR0b24uc2V0QXR0cmlidXRlKCdjb2xvcicsICcjMDA5Njg4Jyk7XG4gICAgICAgIHVwQnV0dG9uLnNldEF0dHJpYnV0ZSgncG9zaXRpb24nLCAnMC4zMyAwLjA1NSAwLjAwMScpO1xuICAgICAgICB1cEJ1dHRvbi5zZXRBdHRyaWJ1dGUoJ2NvbG9yJywgJyMwMDk2ODgnKTtcbiAgICAgICAgdXBCdXR0b24uc2V0QXR0cmlidXRlKCdpY29uLWNvbG9yJywgJyNmZmYnKTtcbiAgICAgICAgdXBCdXR0b24uc2V0QXR0cmlidXRlKCdyaXBwbGUtY29sb3InLCAnIzAwOTY4OCcpO1xuICAgICAgICB1cEJ1dHRvbi5zZXRBdHRyaWJ1dGUoJ3NyYycsICdodHRwczovL2Nkbi50aGVleHBhbnNlLmFwcC9pbWFnZXMvaWNvbnMvYmFzZWxpbmVfa2V5Ym9hcmRfYXJyb3dfdXBfd2hpdGVfMThkcC5wbmcnKTtcbiAgICAgICAgdXBCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gICAgICAgICAgICB0aGlzLmRhdGEudmFsdWUgKz0gdGhpcy5kYXRhLmluY3JlbWVudDtcbiAgICAgICAgICAgIG51bWJlclRleHQuc2V0QXR0cmlidXRlKCd0ZXh0JywgXCJ2YWx1ZTpcIiArICh0aGlzLmRhdGEudmFsdWUpLnRvRml4ZWQoMykgKyBcIjtjb2xvcjojMjEyMTIxO3dyYXBDb3VudDoxMjthbGlnbjpjZW50ZXJcIik7XG4gICAgICAgICAgICB0aGlzLmNvbXBvbmVudC5lbC5lbWl0KCdjaGFuZ2UnLCB0aGlzLmRhdGEudmFsdWUpO1xuICAgICAgICB9KTtcbiAgICAgICAgbGV0IGRvd25CdXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdhLXVpLWZhYi1idXR0b24tc21hbGwnKTtcbiAgICAgICAgZG93bkJ1dHRvbi5zZXRBdHRyaWJ1dGUoJ3NjYWxlJywgJzAuNzUgMC43NSAwLjc1Jyk7XG4gICAgICAgIGRvd25CdXR0b24uY2xhc3NOYW1lID0gJ25vLXlvZ2EtbGF5b3V0ICcgKyB0aGlzLmRhdGEuaW50ZXJzZWN0YWJsZUNsYXNzO1xuICAgICAgICBkb3duQnV0dG9uLnNldEF0dHJpYnV0ZSgnY29sb3InLCAnIzAwOTY4OCcpO1xuICAgICAgICBkb3duQnV0dG9uLnNldEF0dHJpYnV0ZSgncG9zaXRpb24nLCAnMC4zMyAtMC4wNTUgMC4wMDEnKTtcbiAgICAgICAgZG93bkJ1dHRvbi5zZXRBdHRyaWJ1dGUoJ2NvbG9yJywgJyMwMDk2ODgnKTtcbiAgICAgICAgZG93bkJ1dHRvbi5zZXRBdHRyaWJ1dGUoJ2ljb24tY29sb3InLCAnI2ZmZicpO1xuICAgICAgICBkb3duQnV0dG9uLnNldEF0dHJpYnV0ZSgncmlwcGxlLWNvbG9yJywgJyMwMDk2ODgnKTtcbiAgICAgICAgZG93bkJ1dHRvbi5zZXRBdHRyaWJ1dGUoJ3NyYycsICdodHRwczovL2Nkbi50aGVleHBhbnNlLmFwcC9pbWFnZXMvaWNvbnMvZG93bl9hcnJvdy5wbmcnKTtcbiAgICAgICAgZG93bkJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICAgICAgICAgIHRoaXMuZGF0YS52YWx1ZSAtPSB0aGlzLmRhdGEuaW5jcmVtZW50O1xuICAgICAgICAgICAgbnVtYmVyVGV4dC5zZXRBdHRyaWJ1dGUoJ3RleHQnLCBcInZhbHVlOlwiICsgKHRoaXMuZGF0YS52YWx1ZSkudG9GaXhlZCgzKSArIFwiO2NvbG9yOiMyMTIxMjE7d3JhcENvdW50OjEyO2FsaWduOmNlbnRlclwiKTtcbiAgICAgICAgICAgIHRoaXMuY29tcG9uZW50LmVsLmVtaXQoJ2NoYW5nZScsIHRoaXMuZGF0YS52YWx1ZSk7XG4gICAgICAgIH0pO1xuICAgICAgICBudW1iZXJUZXh0LmFwcGVuZENoaWxkKHVwQnV0dG9uKTtcbiAgICAgICAgbnVtYmVyVGV4dC5hcHBlbmRDaGlsZChkb3duQnV0dG9uKTtcbiAgICAgICAgdGhpcy5jb21wb25lbnQuZWwuYXBwZW5kQ2hpbGQobnVtYmVyVGV4dCk7XG4gICAgfVxufVxuTnVtYmVyQ29tcG9uZW50LkRFRklOSVRJT04gPSBuZXcgYnVpbHRfMS5Db21wb25lbnRDb250cm9sbGVyRGVmaW5pdGlvbihcbi8qIE5hbWUgKi8gXCJ1aS1udW1iZXJcIiwgXG4vKiBTY2hlbWEgKi8ge1xuICAgIHZhbHVlOiB7IHR5cGU6ICdudW1iZXInLCBkZWZhdWx0OiAwIH0sXG4gICAgaW5jcmVtZW50OiB7IHR5cGU6ICdudW1iZXInLCBkZWZhdWx0OiAwLjAwMSB9LFxuICAgIHdpZHRoOiB7IHR5cGU6ICdudW1iZXInLCBkZWZhdWx0OiAwLjY1IH0sXG4gICAgaGVpZ2h0OiB7IHR5cGU6ICdudW1iZXInLCBkZWZhdWx0OiAwLjIgfSxcbiAgICBpbnRlcnNlY3RhYmxlQ2xhc3M6IHsgZGVmYXVsdDogJ2ludGVyc2VjdGFibGUnIH0sXG59LCBcbi8qIE11bHRpcGxlICovIGZhbHNlLCBcbi8qIFJlY2VpdmUgdGlja3MgKi8gZmFsc2UsIFxuLyogRmFjdG9yeSBmdW5jdGlvbiAqLyAoY29tcG9uZW50LCBlbnRpdHksIGRhdGEpID0+IG5ldyBOdW1iZXJDb21wb25lbnQoY29tcG9uZW50LCBlbnRpdHksIGRhdGEpKTtcbmV4cG9ydHMuTnVtYmVyQ29tcG9uZW50ID0gTnVtYmVyQ29tcG9uZW50O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9TnVtYmVyQ29tcG9uZW50LmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/NumberComponent.js\n");

/***/ }),

/***/ "./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/Radio.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/Radio.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst built_1 = __webpack_require__(/*! aframe-typescript-boilerplate/built */ \"./node_modules/aframe-typescript-boilerplate/built/index.js\");\nconst three_1 = __webpack_require__(/*! three */ \"three\");\nconst UiElement_1 = __webpack_require__(/*! ./UiElement */ \"./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/UiElement.js\");\nclass Radio extends UiElement_1.UiElement {\n    constructor(component, entity, data) {\n        super(component, entity, data);\n        this.width = 0;\n        this.height = 0;\n        this.filled_circle = undefined;\n        this.isRippling = false;\n        this.isSelecting = false;\n    }\n    init() {\n        this.width = 0.15;\n        this.height = 0.15;\n        // Create center circle for checked state.\n        this.component.el.addEventListener('loaded', () => {\n            let handle = `\n            <a-circle radius=\"` + this.data.selectedRadius + `\" color=\"` + (this.data.disabled ? this.data.disabledColor : this.colorTheme.secondary) + `\" \n            position=\"0 0 0\" scale=\"0 0 0\" shader=\"flat\" class=\"no-yoga-layout\" segments=\"10\"></a-circle>`;\n            this.component.el.insertAdjacentHTML('beforeend', handle);\n            this.filled_circle = this.component.el.lastChild;\n            this.component.el.components.material.material.color = new three_1.Color(this.data.disabled ? this.data.disabledColor : this.data.unselectedColor);\n            // Create backing for getting click events.\n            let backing = `\n            <a-circle radius=\"` + this.data.selectedRadius + `\" segments=\"10\"  position=\"0 0 -0.002\" opacity=\"0.0001\" transparent=\"true\" \n            shader=\"flat\" class=\"` + this.data.intersectableClass + ` no-yoga-layout\"></a-circle>`;\n            this.component.el.insertAdjacentHTML('beforeend', backing);\n            // Set this if it is checked.\n            if (this.data.selected) {\n                this.filled_circle.addEventListener('loaded', () => {\n                    this.click();\n                });\n            }\n            // TODO: need to add play/pause methods for registering/unregistering events.\n            if (!this.data.disabled) {\n                this.component.el.addEventListener('mousedown', (e) => this.click(e));\n            }\n        });\n    }\n    deselect() {\n        // Deselect this radio with a scale animation on the circle.\n        this.component.el.setAttribute('selected', false);\n        let _this = this;\n        // Start changes\n        this.ui.isChanging(this.component.el.sceneEl, this.component.el.object3D.uuid);\n        new TWEEN.Tween({ x: 1 })\n            .to({ x: 0.000001 }, 200)\n            .onUpdate(function () {\n            _this.filled_circle.object3D.scale.set(this.x, this.x, this.x);\n        })\n            .onComplete(() => {\n            // Stop changes\n            this.ui.stoppedChanging(_this.component.el.object3D.uuid);\n            this.isRippling = false;\n        })\n            .easing(TWEEN.Easing.Exponential.Out).start();\n    }\n    click() {\n        // Get all other radio siblings and reset their state if they are selected.\n        [].slice.call(this.component.el.parentNode.querySelectorAll('a-ring,a-ui-radio')).filter(el => el !== this.component.el).forEach((ring) => {\n            if (ring.components['ui-radio'] && ring.getAttribute('selected') === \"true\") {\n                ring.components['ui-radio'].controller.deselect();\n            }\n        });\n        // Emit the current selected value\n        this.component.el.emit('ui-radio-changed', this.data.value);\n        // Set this radio's selected state.\n        this.component.el.setAttribute('selected', true);\n        // Throttle animations.\n        if (this.isSelecting)\n            return;\n        this.isSelecting = true;\n        let _this = this;\n        // Start changes\n        this.ui.isChanging(this.component.el.sceneEl, this.filled_circle.object3D.uuid);\n        new TWEEN.Tween({ x: 0.000001 })\n            .to({ x: 1 }, 250)\n            .onUpdate(function () {\n            _this.filled_circle.object3D.scale.set(this.x, this.x, this.x);\n        })\n            .onComplete(() => {\n            // Stop changes\n            this.ui.stoppedChanging(this.filled_circle.object3D.uuid);\n            this.isSelecting = false;\n        })\n            .easing(TWEEN.Easing.Exponential.Out).start();\n    }\n}\nRadio.DEFINITION = new built_1.ComponentControllerDefinition(\n/* Name */ \"ui-radio\", \n/* Schema */ {\n    value: { default: '' },\n    selected: { type: 'boolean', default: false },\n    selectedColor: { default: '#009688' },\n    selectedRadius: { type: 'number', default: 0.045 },\n    unselectedColor: { default: '#5f5f5f' },\n    disabledColor: { default: '#afafaf' },\n    disabled: { type: 'boolean', default: false },\n    intersectableClass: { default: 'intersectable' },\n    width: { type: 'number', default: 0.15 },\n    height: { type: 'number', default: 0.15 },\n}, \n/* Multiple */ false, \n/* Receive ticks */ false, \n/* Factory function */ (component, entity, data) => new Radio(component, entity, data));\nexports.Radio = Radio;\n//# sourceMappingURL=Radio.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/Radio.js\n");

/***/ }),

/***/ "./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/Ripple.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/Ripple.js ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst built_1 = __webpack_require__(/*! aframe-typescript-boilerplate/built */ \"./node_modules/aframe-typescript-boilerplate/built/index.js\");\nconst three_1 = __webpack_require__(/*! three */ \"three\");\nconst UiElement_1 = __webpack_require__(/*! ./UiElement */ \"./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/UiElement.js\");\nclass Ripple extends UiElement_1.UiElement {\n    constructor(component, entity, data) {\n        super(component, entity, data);\n        this.rippleGeometry = undefined;\n        this.ripple = undefined;\n        this.content_clips = new Array();\n        this.isRippling = false;\n    }\n    init() {\n        // Setup circle geometry for ripple effect\n        this.rippleGeometry = new three_1.CircleGeometry(Math.max(this.data.size.x, this.data.size.y), this.data.segments);\n        this.ripple = new three_1.Mesh(this.rippleGeometry.clone(), new three_1.MeshBasicMaterial({ color: this.data.color, transparent: true, opacity: 0.4, alphaTest: 0.1 }));\n        this.ripple.scale.set(0.00001, 0.00001, 0.00001);\n        this.component.el.object3D.add(this.ripple);\n        this.component.el.addEventListener('mousedown', this.click.bind(this));\n        this.ripple.position.set(0, 0, this.data.zIndex);\n        // Set clipping planes if clamping to square\n        if (this.data.clampToSquare) {\n            this.content_clips = [\n                new three_1.Plane(new three_1.Vector3(0, 1, 0), (this.data.size.y / 2)),\n                new three_1.Plane(new three_1.Vector3(0, -1, 0), (this.data.size.y / 2)),\n                new three_1.Plane(new three_1.Vector3(-1, 0, 0), (this.data.size.x / 2)),\n                new three_1.Plane(new three_1.Vector3(1, 0, 0), (this.data.size.x / 2))\n            ];\n        }\n    }\n    click(e) {\n        if (this.isRippling) {\n            // Throttle clicks.\n            return e.preventDefault();\n        }\n        this.isRippling = true;\n        // Set clipping planes if clamping to square\n        if (this.data.clampToSquare) {\n            this.setRippleClips();\n        }\n        // Animate the size of the circle ripple from the center of the entity.\n        this.tweenSize(this.ripple.geometry);\n        // Fade the circle out as it ripples.\n        this.tweenOpacity(this.ripple.material);\n    }\n    setRippleClips() {\n        // update content clips world positions from this current element.\n        this.content_clips[0].set(new three_1.Vector3(0, 1, 0), (this.data.size.y / 2));\n        this.content_clips[1].set(new three_1.Vector3(0, -1, 0), (this.data.size.y / 2));\n        this.content_clips[2].set(new three_1.Vector3(-1, 0, 0), (this.data.size.x / 2));\n        this.content_clips[3].set(new three_1.Vector3(1, 0, 0), (this.data.size.x / 2));\n        //this.component.el.sceneEl.object3D.updateMatrixWorld();\n        this.content_clips[0].applyMatrix4(this.component.el.object3D.matrixWorld);\n        this.content_clips[1].applyMatrix4(this.component.el.object3D.matrixWorld);\n        this.content_clips[2].applyMatrix4(this.component.el.object3D.matrixWorld);\n        this.content_clips[3].applyMatrix4(this.component.el.object3D.matrixWorld);\n        this.ripple.material.clippingPlanes = this.component.el._content_clips ? this.component.el._content_clips.concat(this.content_clips) : this.content_clips;\n        this.ripple.material.clipShadows = true;\n        this.ripple.material.needsUpdate = true;\n    }\n    tweenSize(geometry) {\n        let _this = this;\n        // Start changes\n        this.ui.isChanging(this.component.el.sceneEl, _this.ripple.uuid);\n        new TWEEN.Tween({ x: 0.00001 })\n            .to({ x: 1 }, this.data.duration)\n            .onUpdate(function () {\n            _this.ripple.scale.set(this.x, this.x, this.x);\n        })\n            .onComplete(() => {\n            _this.ripple.scale.set(0.00001, 0.00001, 0.00001);\n            // Reset throttle flag.\n            this.isRippling = false;\n            // Stop changes\n            this.ui.stoppedChanging(_this.ripple.uuid);\n        })\n            .easing(TWEEN.Easing.Exponential.Out).start();\n    }\n    tweenOpacity(material) {\n        new TWEEN.Tween({ x: 0.4 })\n            .to({ x: 0 }, this.data.fadeDuration)\n            .delay(this.data.fadeDelay)\n            .onUpdate(function () {\n            material.opacity = this.x;\n        })\n            .onComplete(() => {\n            material.opacity = 0.4;\n        })\n            .easing(TWEEN.Easing.Exponential.Out).start();\n    }\n}\nRipple.DEFINITION = new built_1.ComponentControllerDefinition(\n/* Name */ \"ui-ripple\", \n/* Schema */ {\n    color: { default: '#fff' },\n    duration: { type: 'int', default: 1000 },\n    fadeDuration: { type: 'int', default: 750 },\n    fadeDelay: { type: 'int', default: 250 },\n    clampToSquare: { type: 'boolean', default: false },\n    size: { type: 'vec2', default: { x: 1, y: 1 } },\n    zIndex: { type: 'number', default: -0.001 },\n    segments: { type: 'int', default: 10 }\n}, \n/* Multiple */ false, \n/* Receive ticks */ false, \n/* Factory function */ (component, entity, data) => new Ripple(component, entity, data));\nexports.Ripple = Ripple;\n//# sourceMappingURL=Ripple.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/Ripple.js\n");

/***/ }),

/***/ "./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/Rounded.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/Rounded.js ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst built_1 = __webpack_require__(/*! aframe-typescript-boilerplate/built */ \"./node_modules/aframe-typescript-boilerplate/built/index.js\");\nconst three_1 = __webpack_require__(/*! three */ \"three\");\nconst UiElement_1 = __webpack_require__(/*! ./UiElement */ \"./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/UiElement.js\");\nclass Rounded extends UiElement_1.UiElement {\n    constructor(component, entity, data) {\n        super(component, entity, data);\n    }\n    init() {\n        let mesh = this.component.el.getObject3D('mesh');\n        let roundedRectShape = new three_1.Shape();\n        // Draw the Rounded rectangle shape centered in the object - from three.js shapes example.\n        (function roundedRect(ctx, x, y, width, height, radius) {\n            ctx.moveTo(x, y + radius);\n            ctx.lineTo(x, y + height - radius);\n            ctx.quadraticCurveTo(x, y + height, x + radius, y + height);\n            ctx.lineTo(x + width - radius, y + height);\n            ctx.quadraticCurveTo(x + width, y + height, x + width, y + height - radius);\n            ctx.lineTo(x + width, y + radius);\n            ctx.quadraticCurveTo(x + width, y, x + width - radius, y);\n            ctx.lineTo(x + radius, y);\n            ctx.quadraticCurveTo(x, y, x, y + radius);\n        })(roundedRectShape, -mesh.geometry.metadata.parameters.width / 2, -mesh.geometry.metadata.parameters.height / 2, mesh.geometry.metadata.parameters.width, mesh.geometry.metadata.parameters.height, this.data.borderRadius);\n        // Update the geometry.\n        mesh.geometry = new three_1.ShapeBufferGeometry(roundedRectShape, this.data.curveSegments);\n        // Emit rounded-loaded event once the geometry has been updated.\n        this.component.el.emit('rounded-loaded', null, false);\n    }\n}\nRounded.DEFINITION = new built_1.ComponentControllerDefinition(\n/* Name */ \"ui-rounded\", \n/* Schema */ {\n    borderRadius: { type: 'number', default: 0.01 },\n    curveSegments: { type: 'int', default: 5 },\n}, \n/* Multiple */ false, \n/* Receive ticks */ false, \n/* Factory function */ (component, entity, data) => new Rounded(component, entity, data));\nexports.Rounded = Rounded;\n//# sourceMappingURL=Rounded.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHRsYXVra2FuL2FmcmFtZS1tYXRlcmlhbC1jb2xsZWN0aW9uLXRzL2J1aWx0L3NyYy9jb21wb25lbnRzL1JvdW5kZWQuanM/MDNiMiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE4QyxjQUFjO0FBQzVELGdCQUFnQixtQkFBTyxDQUFDLHdHQUFxQztBQUM3RCxnQkFBZ0IsbUJBQU8sQ0FBQyxvQkFBTztBQUMvQixvQkFBb0IsbUJBQU8sQ0FBQyw2R0FBYTtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLGdDQUFnQztBQUNuRCxvQkFBb0IsMEJBQTBCO0FBQzlDLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0B0bGF1a2thbi9hZnJhbWUtbWF0ZXJpYWwtY29sbGVjdGlvbi10cy9idWlsdC9zcmMvY29tcG9uZW50cy9Sb3VuZGVkLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCBidWlsdF8xID0gcmVxdWlyZShcImFmcmFtZS10eXBlc2NyaXB0LWJvaWxlcnBsYXRlL2J1aWx0XCIpO1xuY29uc3QgdGhyZWVfMSA9IHJlcXVpcmUoXCJ0aHJlZVwiKTtcbmNvbnN0IFVpRWxlbWVudF8xID0gcmVxdWlyZShcIi4vVWlFbGVtZW50XCIpO1xuY2xhc3MgUm91bmRlZCBleHRlbmRzIFVpRWxlbWVudF8xLlVpRWxlbWVudCB7XG4gICAgY29uc3RydWN0b3IoY29tcG9uZW50LCBlbnRpdHksIGRhdGEpIHtcbiAgICAgICAgc3VwZXIoY29tcG9uZW50LCBlbnRpdHksIGRhdGEpO1xuICAgIH1cbiAgICBpbml0KCkge1xuICAgICAgICBsZXQgbWVzaCA9IHRoaXMuY29tcG9uZW50LmVsLmdldE9iamVjdDNEKCdtZXNoJyk7XG4gICAgICAgIGxldCByb3VuZGVkUmVjdFNoYXBlID0gbmV3IHRocmVlXzEuU2hhcGUoKTtcbiAgICAgICAgLy8gRHJhdyB0aGUgUm91bmRlZCByZWN0YW5nbGUgc2hhcGUgY2VudGVyZWQgaW4gdGhlIG9iamVjdCAtIGZyb20gdGhyZWUuanMgc2hhcGVzIGV4YW1wbGUuXG4gICAgICAgIChmdW5jdGlvbiByb3VuZGVkUmVjdChjdHgsIHgsIHksIHdpZHRoLCBoZWlnaHQsIHJhZGl1cykge1xuICAgICAgICAgICAgY3R4Lm1vdmVUbyh4LCB5ICsgcmFkaXVzKTtcbiAgICAgICAgICAgIGN0eC5saW5lVG8oeCwgeSArIGhlaWdodCAtIHJhZGl1cyk7XG4gICAgICAgICAgICBjdHgucXVhZHJhdGljQ3VydmVUbyh4LCB5ICsgaGVpZ2h0LCB4ICsgcmFkaXVzLCB5ICsgaGVpZ2h0KTtcbiAgICAgICAgICAgIGN0eC5saW5lVG8oeCArIHdpZHRoIC0gcmFkaXVzLCB5ICsgaGVpZ2h0KTtcbiAgICAgICAgICAgIGN0eC5xdWFkcmF0aWNDdXJ2ZVRvKHggKyB3aWR0aCwgeSArIGhlaWdodCwgeCArIHdpZHRoLCB5ICsgaGVpZ2h0IC0gcmFkaXVzKTtcbiAgICAgICAgICAgIGN0eC5saW5lVG8oeCArIHdpZHRoLCB5ICsgcmFkaXVzKTtcbiAgICAgICAgICAgIGN0eC5xdWFkcmF0aWNDdXJ2ZVRvKHggKyB3aWR0aCwgeSwgeCArIHdpZHRoIC0gcmFkaXVzLCB5KTtcbiAgICAgICAgICAgIGN0eC5saW5lVG8oeCArIHJhZGl1cywgeSk7XG4gICAgICAgICAgICBjdHgucXVhZHJhdGljQ3VydmVUbyh4LCB5LCB4LCB5ICsgcmFkaXVzKTtcbiAgICAgICAgfSkocm91bmRlZFJlY3RTaGFwZSwgLW1lc2guZ2VvbWV0cnkubWV0YWRhdGEucGFyYW1ldGVycy53aWR0aCAvIDIsIC1tZXNoLmdlb21ldHJ5Lm1ldGFkYXRhLnBhcmFtZXRlcnMuaGVpZ2h0IC8gMiwgbWVzaC5nZW9tZXRyeS5tZXRhZGF0YS5wYXJhbWV0ZXJzLndpZHRoLCBtZXNoLmdlb21ldHJ5Lm1ldGFkYXRhLnBhcmFtZXRlcnMuaGVpZ2h0LCB0aGlzLmRhdGEuYm9yZGVyUmFkaXVzKTtcbiAgICAgICAgLy8gVXBkYXRlIHRoZSBnZW9tZXRyeS5cbiAgICAgICAgbWVzaC5nZW9tZXRyeSA9IG5ldyB0aHJlZV8xLlNoYXBlQnVmZmVyR2VvbWV0cnkocm91bmRlZFJlY3RTaGFwZSwgdGhpcy5kYXRhLmN1cnZlU2VnbWVudHMpO1xuICAgICAgICAvLyBFbWl0IHJvdW5kZWQtbG9hZGVkIGV2ZW50IG9uY2UgdGhlIGdlb21ldHJ5IGhhcyBiZWVuIHVwZGF0ZWQuXG4gICAgICAgIHRoaXMuY29tcG9uZW50LmVsLmVtaXQoJ3JvdW5kZWQtbG9hZGVkJywgbnVsbCwgZmFsc2UpO1xuICAgIH1cbn1cblJvdW5kZWQuREVGSU5JVElPTiA9IG5ldyBidWlsdF8xLkNvbXBvbmVudENvbnRyb2xsZXJEZWZpbml0aW9uKFxuLyogTmFtZSAqLyBcInVpLXJvdW5kZWRcIiwgXG4vKiBTY2hlbWEgKi8ge1xuICAgIGJvcmRlclJhZGl1czogeyB0eXBlOiAnbnVtYmVyJywgZGVmYXVsdDogMC4wMSB9LFxuICAgIGN1cnZlU2VnbWVudHM6IHsgdHlwZTogJ2ludCcsIGRlZmF1bHQ6IDUgfSxcbn0sIFxuLyogTXVsdGlwbGUgKi8gZmFsc2UsIFxuLyogUmVjZWl2ZSB0aWNrcyAqLyBmYWxzZSwgXG4vKiBGYWN0b3J5IGZ1bmN0aW9uICovIChjb21wb25lbnQsIGVudGl0eSwgZGF0YSkgPT4gbmV3IFJvdW5kZWQoY29tcG9uZW50LCBlbnRpdHksIGRhdGEpKTtcbmV4cG9ydHMuUm91bmRlZCA9IFJvdW5kZWQ7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1Sb3VuZGVkLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/Rounded.js\n");

/***/ }),

/***/ "./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/ScrollPane.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/ScrollPane.js ***!
  \*************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst built_1 = __webpack_require__(/*! aframe-typescript-boilerplate/built */ \"./node_modules/aframe-typescript-boilerplate/built/index.js\");\nconst three_1 = __webpack_require__(/*! three */ \"three\");\nconst typeflex_1 = __webpack_require__(/*! typeflex */ \"./node_modules/typeflex/dist/Yoga.js\");\nconst yoga_worker_1 = __importDefault(__webpack_require__(/*! worker-loader?inline=true&name=yoga-worker.js!../workers/yoga-worker */ \"./node_modules/worker-loader/dist/cjs.js?inline=true&name=yoga-worker.js!./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/workers/yoga-worker.js\"));\nconst UiElement_1 = __webpack_require__(/*! ./UiElement */ \"./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/UiElement.js\");\nlet workerResolves = {};\nlet yogaWorker = new yoga_worker_1.default();\nyogaWorker.onmessage = event => {\n    if (workerResolves.hasOwnProperty(event.data.uuid)) {\n        workerResolves[event.data.uuid](event.data);\n    }\n};\nlet sendMessage = (type, properties, parentUuid, width) => {\n    return new Promise(resolve => {\n        let uuid = three_1.Math.generateUUID();\n        workerResolves[uuid] = resolve;\n        yogaWorker.postMessage({ type, properties, uuid, parentUuid, width });\n    });\n};\nclass ScrollPane extends UiElement_1.UiElement {\n    constructor(component, entity, data) {\n        super(component, entity, data);\n        this.container = undefined;\n        this.rail = undefined;\n        this.handle = undefined;\n        this.backgroundPanel = undefined;\n        this.content_clips = undefined;\n        this.scrollBarWidth = 0;\n        this.isDragging = false;\n        this.handlePos = 0;\n        this.currentUuid = '';\n        this.content_height = 0;\n        this.handleSize = 0;\n    }\n    init() {\n        // Setup scroll bar and panel backing.\n        this.setupElements();\n        // Grab content container.\n        this.container = this.component.el.querySelector('.container');\n        if (typeof this.container === 'undefined') {\n            throw 'ui-scroll-pane needs an entity inside it with the class \"container\" - <a-entity class=\"container\"></a-entity>';\n        }\n        // Setup scroll bar.\n        this.scrollBarWidth = this.rail.getAttribute('width');\n        this.container.setAttribute('position', (-this.data.width / 2) + ' ' + ((this.data.height / 2)) + ' 0');\n        this.rail.setAttribute('position', ((this.data.width / 2) + this.data.scrollPadding) + ' 0 ' + (this.data.scrollZOffset + 0.0002));\n        this.handle.setAttribute('position', ((this.data.width / 2) + this.data.scrollPadding) + ' 0 ' + (this.data.scrollZOffset + 0.0005));\n        this.component.el.sceneEl.renderer.localClippingEnabled = true;\n        // Setup content clips.\n        this.content_clips = [\n            new three_1.Plane(new three_1.Vector3(0, 1, 0), (this.data.height / 2)),\n            new three_1.Plane(new three_1.Vector3(0, -1, 0), (this.data.height / 2)),\n            new three_1.Plane(new three_1.Vector3(-1, 0, 0), (this.data.width / 2)),\n            new three_1.Plane(new three_1.Vector3(1, 0, 0), (this.data.width / 2))\n        ];\n        // Pause/play camera look controls\n        const playPauseCamera = (method) => {\n            if (method == 'pause') {\n                this.ui.onFocus();\n            }\n            else {\n                this.ui.onFocusOut();\n            }\n            if (this.data.cameraEl) {\n                let lookControls = this.data.cameraEl.components[this.data.lookControlsComponent];\n                if (lookControls) {\n                    lookControls[method]();\n                }\n            }\n        };\n        // Setup mouse move handler for scrolling and updating scroll handle.\n        const mousemove = (e) => this.mouseMove(e);\n        // Start scroll\n        this.handle.addEventListener('mousedown', (e) => {\n            // Pause look controls to allow scrolling\n            playPauseCamera('pause');\n            this.isDragging = true;\n            // Store the start point offset\n            this.handlePos = this.handle.object3D.worldToLocal(e.detail.intersection.point).y;\n            this.backgroundPanel.addEventListener('ui-mousemove', mousemove);\n            // Start changes\n            this.ui.isChanging(this.component.el.sceneEl, this.handle.object3D.uuid);\n            // Prevent default behaviour of event\n            this.ui.preventDefault(e);\n        });\n        // End scroll\n        const endScroll = (e) => {\n            if (this.isDragging) {\n                this.backgroundPanel.removeEventListener('ui-mousemove', mousemove);\n                // Play look controls once scrolling is finished\n                playPauseCamera('play');\n                this.isDragging = false;\n                // Stop changes\n                this.ui.stoppedChanging(this.handle.object3D.uuid);\n                // Prevent default behaviour of event\n                this.ui.preventDefault(e);\n            }\n        };\n        this.backgroundPanel.addEventListener('mouseup', endScroll);\n        this.backgroundPanel.addEventListener('mouseleave', endScroll);\n        // // Handle clicks on rail to scroll\n        this.rail.addEventListener('mousedown', (e) => {\n            this.ui.isChanging(this.component.el.sceneEl, this.handle.object3D.uuid);\n            // Pause look controls\n            this.isDragging = true;\n            // Reset handle pos to center of handle\n            this.handlePos = 0;\n            // Scroll immediately and register mouse move events.\n            this.scroll(this.rail.object3D.worldToLocal(e.detail.intersection.point).y);\n            this.backgroundPanel.addEventListener('ui-mousemove', mousemove);\n            // Prevent default behaviour of event\n            this.ui.preventDefault(e);\n        });\n        // Setup content clips after the scene is loaded to be able to access all entity materials\n        // update content clips world positions from this current element.\n        this.updateContent();\n        this.component.el.emit('scroll-pane-loaded');\n        this.setupMouseWheelScroll();\n        // Expose methods to the element to update/set the content of the scroll pane.\n        this.component.el.setContent = this.setContent.bind(this);\n        this.component.el.updateContent = this.updateContent.bind(this);\n        this.component.el.scroll = this.scroll.bind(this);\n    }\n    remove() {\n        this.setContent(\"\", true).catch(e => {\n            console.error(\"Error in ScrollPanel remove clearing content.\", e);\n        });\n    }\n    updateContentClips() {\n        this.component.el.sceneEl.object3D.updateMatrixWorld(false);\n        // update content clips world positions from this current element.\n        this.content_clips[0].set(new three_1.Vector3(0, 1, 0), (this.data.height / 2));\n        this.content_clips[1].set(new three_1.Vector3(0, -1, 0), (this.data.height / 2));\n        this.content_clips[2].set(new three_1.Vector3(-1, 0, 0), (this.data.width / 2));\n        this.content_clips[3].set(new three_1.Vector3(1, 0, 0), (this.data.width / 2));\n        const ui = this.entity.closest(\"a-ui\");\n        const uiWorldPosition = new three_1.Vector3();\n        ui.object3D.getWorldPosition(uiWorldPosition);\n        const ownWorldPosition = new three_1.Vector3();\n        this.entity.object3D.getWorldPosition(ownWorldPosition);\n        const ownUiSceneWorldPosition = new three_1.Vector3();\n        ownUiSceneWorldPosition.copy(ownWorldPosition).sub(uiWorldPosition);\n        const uiSceneWorldMatrix = new three_1.Matrix4();\n        const uiQuaternion = new three_1.Quaternion();\n        uiQuaternion.copy(ui.object3D.quaternion);\n        uiSceneWorldMatrix.makeRotationFromQuaternion(ui.object3D.getWorldQuaternion(uiQuaternion));\n        uiSceneWorldMatrix.setPosition(ownUiSceneWorldPosition);\n        this.content_clips[0].applyMatrix4(uiSceneWorldMatrix);\n        this.content_clips[1].applyMatrix4(uiSceneWorldMatrix);\n        this.content_clips[2].applyMatrix4(uiSceneWorldMatrix);\n        this.content_clips[3].applyMatrix4(uiSceneWorldMatrix);\n        //this.component.el.sceneEl.object3D.updateMatrixWorld();\n        /*this.content_clips[0].applyMatrix4(this.component.el.object3D.matrixWorld);\n        this.content_clips[1].applyMatrix4(this.component.el.object3D.matrixWorld);\n        this.content_clips[2].applyMatrix4(this.component.el.object3D.matrixWorld);\n        this.content_clips[3].applyMatrix4(this.component.el.object3D.matrixWorld);*/\n    }\n    setContent(body, noAutoReload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.container) {\n                // Remove all children in the container and all yoga nodes\n                while (this.container.firstChild) {\n                    let child = this.container.firstChild;\n                    if (child.object3D) {\n                        this.ui.clearObject(child.object3D);\n                    }\n                    this.container.removeChild(child);\n                    //(this.container as any).firstChild = null;\n                }\n                // Set the content in the scroll pane.\n                return new Promise(resolve => {\n                    let loadedWrapper = document.createElement('a-entity');\n                    loadedWrapper.setAttribute('visible', false);\n                    loadedWrapper.insertAdjacentHTML('afterbegin', body);\n                    loadedWrapper.addEventListener('loaded', e => {\n                        // Trigger an update to redraw scrollbars and fire change events.\n                        sendMessage('reset-layout', null, this.container.yoga_uuid, undefined)\n                            .then(() => __awaiter(this, void 0, void 0, function* () {\n                            loadedWrapper.setAttribute('visible', true);\n                            if (!noAutoReload) {\n                                return this.updateContent();\n                            }\n                        }))\n                            .then(() => resolve(loadedWrapper));\n                    });\n                    this.container.appendChild(loadedWrapper);\n                });\n            }\n        });\n    }\n    updateContent(should_not_scroll) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.updateContentClips();\n            this.currentUuid = three_1.Math.generateUUID();\n            this.ui.isChanging(this.component.el.sceneEl, this.currentUuid);\n            this.setChildClips();\n            yield this.initializeLayout(this.container);\n            yield this.initialiseYoga(this.container);\n            yield sendMessage('get-layout', null, this.container.yoga_uuid, undefined)\n                .then(layout => {\n                this.content_height = layout.data.content_height / 100;\n                //console.log(layout.data.content_height/100);\n                this.updateYoga(this.container, layout.data);\n                this.handleSize = three_1.Math.clamp((this.data.height / this.content_height), 0.1, 1);\n                this.handle.setAttribute('visible', this.handleSize !== 1);\n                this.rail.setAttribute('visible', this.handleSize !== 1);\n                this.rail.setAttribute('color', this.colorTheme.primaryDark);\n                this.rail.setAttribute(\"visible\", this.handleSize === 1 ? false : true);\n                this.handle.setAttribute('height', this.data.height * this.handleSize);\n                if (!should_not_scroll) {\n                    this.container.object3D.position.y = this.data.height / 2;\n                    this.handle.setAttribute('position', ((this.data.width / 2) + this.data.scrollPadding) + ' ' + (this.data.height - (this.data.height * this.handleSize)) / 2 + ' ' + (this.data.scrollZOffset + 0.0005));\n                }\n                setTimeout(() => this.ui.stoppedChanging(this.currentUuid), this.ui.maxChangePropagationTime);\n                //this.ui.stoppedChanging(this.currentUuid);\n            });\n        });\n    }\n    mouseMove(e) {\n        if (this.isDragging) {\n            let pos = this.rail.object3D.worldToLocal(e.detail.intersection.point);\n            this.scroll(pos.y - this.handlePos);\n        }\n    }\n    scroll(positionY) {\n        let min = (-this.data.height / 2) + (this.data.height * this.handleSize) / 2;\n        let max = (this.data.height / 2) - (this.data.height * this.handleSize) / 2;\n        // Set scroll position with start point offset.\n        let scroll_pos = three_1.Math.clamp(positionY, min, max);\n        let scroll_perc = this.handleSize === 1 ? 0 : 1 - ((scroll_pos - min) / (max - min));\n        this.container.object3D.position.y = ((this.content_height - this.data.height) * scroll_perc) + (this.data.height / 2);\n        this.handle.setAttribute('position', ((this.data.width / 2) + this.data.scrollPadding) + ' ' + scroll_pos + ' ' + (this.data.scrollZOffset + 0.0005));\n    }\n    setupMouseWheelScroll() {\n        this.backgroundPanel.addEventListener('ui-mousewheel', (e) => {\n            if (this.handleSize !== 1) {\n                // Start changes\n                this.ui.isChanging(this.component.el.sceneEl, this.component.el.object3D.uuid);\n                this.scroll(this.handle.getAttribute('position').y + (e.detail.evt.deltaY < 0 ? 0.1 : -0.1));\n                // Stop changes\n                this.ui.stoppedChanging(this.component.el.object3D.uuid);\n                this.ui.preventDefault(e);\n            }\n        });\n    }\n    setupElements() {\n        // Setup background with mouse input to catch mouse move events when not exactly over the scroll bar.\n        this.backgroundPanel = document.createElement('a-plane');\n        this.backgroundPanel.setAttribute('class', 'background ' + this.data.intersectableClass);\n        this.backgroundPanel.setAttribute('width', this.data.width + 1);\n        this.backgroundPanel.setAttribute('height', this.data.height + 1);\n        this.backgroundPanel.setAttribute('position', '0 0 -0.013');\n        this.backgroundPanel.setAttribute('opacity', 0.0001);\n        this.backgroundPanel.setAttribute('transparent', true);\n        this.component.el.appendChild(this.backgroundPanel);\n        // Add scroll bar rail.\n        this.rail = document.createElement('a-plane');\n        this.rail.setAttribute('class', 'rail ' + this.data.intersectableClass);\n        this.rail.setAttribute('width', 0.1);\n        this.rail.setAttribute('height', this.data.height + 0.02);\n        this.rail.setAttribute('shader', 'flat');\n        this.component.el.appendChild(this.rail);\n        // Add scroll bar handle.\n        this.handle = document.createElement('a-plane');\n        this.handle.setAttribute('class', 'handle ' + this.data.intersectableClass);\n        this.handle.setAttribute('width', 0.08);\n        this.handle.setAttribute('height', this.data.height);\n        this.handle.setAttribute('color', this.colorTheme.primaryLight);\n        this.handle.setAttribute('shader', 'flat');\n        //this.handle.setAttribute('ui-rounded','borderRadius:0.025');\n        this.component.el.appendChild(this.handle);\n    }\n    initializeLayout(entity) {\n        return __awaiter(this, void 0, void 0, function* () {\n            for (const key in entity.components) {\n                const uiElement = entity.components[key].controller;\n                if (uiElement && uiElement.initLayout) {\n                    yield uiElement.initLayout();\n                }\n            }\n            for (const child of entity.childNodes) {\n                yield this.initializeLayout(child);\n            }\n        });\n    }\n    initialiseYoga(entity) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Traverse the tree and setup Yoga layout nodes with default settings\n            // or settings specified in the elements yoga properties component.\n            entity = entity || this.container;\n            // Automatically detect the entity width / height by the element tagname.\n            let width = 0, height = 0;\n            let geo = entity.getAttribute('geometry');\n            switch (entity.tagName) {\n                case \"A-TEXT\":\n                case \"A-UI-TEXT\":\n                case \"A-TRIANGLE\":\n                case \"A-UI-TEXT-INPUT\":\n                case \"A-UI-NUMBER-INPUT\":\n                case \"A-UI-INT-INPUT\":\n                case \"A-UI-INPUT-TEXT\":\n                case \"A-UI-PASSWORD-INPUT\":\n                    width = entity.getAttribute('width');\n                    height = entity.getAttribute('height');\n                    break;\n                case \"A-UI-BUTTON\":\n                case \"A-PLANE\":\n                case \"A-ENTITY\":\n                    width = Number(geo ? geo.width : entity.getAttribute('width'));\n                    height = Number(geo ? geo.height : entity.getAttribute('height'));\n                    break;\n                case \"A-UI-FAB-BUTTON\":\n                case \"A-UI-FAB-BUTTON-SMALL\":\n                case \"A-CIRCLE\":\n                    width = Number(geo ? geo.radius * 2 : (entity.getAttribute('radius') || 0) * 2);\n                    height = width;\n                    break;\n                case \"A-RING\":\n                    width = Number(geo ? geo[\"radius-outer\"] * 2 : (entity.getAttribute('radius-outer') || 0) * 2);\n                    height = width;\n                    break;\n                case \"A-UI-SLIDER\":\n                case \"A-UI-NUMBER\":\n                case \"A-UI-SWITCH\":\n                case \"A-UI-CHECKBOX\":\n                case \"A-UI-RADIO\":\n                    let componentName = entity.tagName.substr(2).toLowerCase();\n                    width = entity.getAttribute(componentName).width;\n                    height = entity.getAttribute(componentName).height;\n                    break;\n            }\n            // width = Math.round(width);\n            // height = Math.round(height);\n            //parent.yoga_node = Node.create();\n            let ui_yoga = entity.getAttribute(\"ui-yoga\");\n            let properties = {};\n            if (ui_yoga && entity.getYogaProperties) {\n                properties = entity.getYogaProperties();\n            }\n            else {\n                properties.setJustifyContent = typeflex_1.JUSTIFY_FLEX_START;\n                properties.setFlexDirection = typeflex_1.FLEX_DIRECTION_ROW;\n                properties.setAlignContent = typeflex_1.ALIGN_AUTO;\n                properties.setFlexWrap = typeflex_1.WRAP_WRAP;\n                if (entity.parentElement && entity.parentElement.yoga_uuid) {\n                    // Default margin if none set;\n                    properties.setMarginRight = 5;\n                    properties.setMarginBottom = 5;\n                }\n                else {\n                    // Default root padding if none set;\n                    properties.setPadding = 2;\n                }\n            }\n            if (!properties.hasOwnProperty('setWidth')) {\n                properties.setWidth = width ? width * 100 : 'auto';\n            }\n            if (!properties.hasOwnProperty('setHeight')) {\n                properties.setHeight = height ? height * 100 : 'auto';\n            }\n            //this.setupYogaNode(parent.yoga_node,width ? width * 100 : 'auto',height ? height * 100 : 'auto',properties);\n            // if(parent.parentElement&&parent.parentElement.yoga_node){\n            //     parent.parentElement.yoga_node.insertChild(parent.yoga_node,parent.parentElement.yoga_node.getChildCount());\n            // }\n            let promise;\n            if (entity.parentElement && entity.parentElement.yoga_uuid) {\n                promise = sendMessage('add-node', properties, entity.parentElement.yoga_uuid, undefined);\n            }\n            else {\n                promise = sendMessage('add-node', properties, null, this.data.width * 100);\n            }\n            yield promise.then(resp => {\n                entity.yoga_uuid = resp.uuid;\n                let promises = new Array();\n                for (let i = 0; i < entity.childNodes.length; i++) {\n                    let child = entity.childNodes[i];\n                    if (child.nodeType === 1) {\n                        if (!child.classList.contains('no-yoga-layout')) {\n                            promises.push(this.initialiseYoga(child));\n                        }\n                    }\n                }\n                return Promise.all(promises);\n            });\n        });\n    }\n    updateYoga(parent, layout) {\n        // Update the entity positions from the Yoga layout.\n        for (let i = 0; i < parent.childNodes.length; i++) {\n            let child = parent.childNodes[i];\n            if (child.nodeType === 1) {\n                if (child.classList.contains('no-yoga-layout')) {\n                    return;\n                }\n                let position;\n                if (!layout[child.yoga_uuid]) {\n                    console.log(child, layout);\n                }\n                if (child.tagName === \"A-ENTITY\") {\n                    position = {\n                        x: (layout[child.yoga_uuid].left / 100),\n                        y: (layout[child.yoga_uuid].top / 100),\n                    };\n                }\n                else {\n                    position = {\n                        x: (layout[child.yoga_uuid].left / 100) + (layout[child.yoga_uuid].width / 200),\n                        y: (layout[child.yoga_uuid].top / 100) + (layout[child.yoga_uuid].height / 200),\n                    };\n                }\n                child.setAttribute('position', new three_1.Vector3(position.x, (-position.y), 0.0001));\n                /*if (child.object3D) {\n                    child.object3D.position.x = position.x;\n                    child.object3D.position.y = position.y;\n                    child.object3D.position.z = 0.0001;\n                } else {\n                    child.setAttribute('position',position.x+' '+(-position.y)+' 0.0001');\n                }*/\n            }\n            this.updateYoga(child, layout);\n        }\n    }\n    setChildClips(parent) {\n        // Traverse the entity tree inside the content container and add content clips to each material found.\n        parent = parent || this.container;\n        for (let i = 0; i < parent.childNodes.length; i++) {\n            let child = parent.childNodes[i];\n            //if (child.nodeType === 1) {\n            child._content_clips = this.content_clips;\n            let traverse = () => {\n                if (child.object3D) {\n                    child.object3D.traverse((object) => {\n                        if (object.material) {\n                            // Add shader chunks to be able to clip shader materials - needed for <a-text> entities.\n                            if (object.material.isRawShaderMaterial) {\n                                object.material.onBeforeCompile = function (shader) {\n                                    let vertexParts = shader.vertexShader.split('\\n');\n                                    let vertexMainIndex = vertexParts.indexOf('void main(void) {');\n                                    vertexParts.splice(vertexMainIndex, 0, '#include <clipping_planes_pars_vertex>');\n                                    vertexParts.splice(vertexMainIndex + 2, 0, '#include <begin_vertex>');\n                                    vertexParts.splice(vertexParts.length - 2, 0, '#include <project_vertex>');\n                                    vertexParts.splice(vertexParts.length - 2, 0, '#include <clipping_planes_vertex>');\n                                    shader.vertexShader = vertexParts.join('\\n');\n                                    let fragmentParts = shader.fragmentShader.split('\\n');\n                                    let fragmentMainIndex = fragmentParts.indexOf('void main() {');\n                                    fragmentParts.splice(fragmentMainIndex, 0, '#include <clipping_planes_pars_fragment>');\n                                    fragmentParts.splice(fragmentMainIndex + 2, 0, '#include <clipping_planes_fragment>');\n                                    shader.fragmentShader = fragmentParts.join('\\n');\n                                };\n                                object.material.clipping = true;\n                            }\n                            // Set the content clipping planes.\n                            object.material.clippingPlanes = this.content_clips;\n                            object.material.clipShadows = true;\n                            object.material.needsUpdate = true;\n                        }\n                    });\n                }\n            };\n            // Wait for next tick - exokit required this.\n            setTimeout(() => {\n                if (child.getAttribute) {\n                    let text = child.getAttribute('text');\n                    if (text) {\n                        // Wait for the font to load first.\n                        child.addEventListener('textfontset', () => {\n                            clearTimeout(this.fontRenderTimeout);\n                            this.fontRenderTimeout = setTimeout(() => this.ui.stoppedChanging(this.currentUuid), 500);\n                            traverse();\n                        });\n                    }\n                    else {\n                        traverse();\n                    }\n                }\n            }, 0);\n            // }\n            // Recurse\n            this.setChildClips(child);\n        }\n    }\n}\nScrollPane.DEFINITION = new built_1.ComponentControllerDefinition(\n/* Name */ \"ui-scroll-pane\", \n/* Schema */ {\n    height: { type: 'number', default: 1.2 },\n    width: { type: 'number', default: 2.9 },\n    scrollPadding: { type: 'number', default: 0.05 },\n    scrollZOffset: { type: 'number', default: 0 },\n    scrollHandleColor: { default: '#009688' },\n    intersectableClass: { default: 'intersectable' },\n    cameraEl: { type: 'selector' },\n    lookControlsComponent: { default: 'look-controls' },\n}, \n/* Multiple */ false, \n/* Receive ticks */ false, \n/* Factory function */ (component, entity, data) => new ScrollPane(component, entity, data));\nexports.ScrollPane = ScrollPane;\n//# sourceMappingURL=ScrollPane.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/ScrollPane.js\n");

/***/ }),

/***/ "./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/Slider.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/Slider.js ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst built_1 = __webpack_require__(/*! aframe-typescript-boilerplate/built */ \"./node_modules/aframe-typescript-boilerplate/built/index.js\");\nconst three_1 = __webpack_require__(/*! three */ \"three\");\nconst UiElement_1 = __webpack_require__(/*! ./UiElement */ \"./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/UiElement.js\");\nclass Slider extends UiElement_1.UiElement {\n    constructor(component, entity, data) {\n        super(component, entity, data);\n        this.scroll_perc = 0;\n        this.width = 0;\n        this.height = 0;\n        this.handlePos = 0;\n        this.backgroundPanel = undefined;\n        this.handleEl = undefined;\n        this.railEl = undefined;\n        this.progress = undefined;\n        this.isDragging = false;\n    }\n    init() {\n        this.scroll_perc = this.data.value;\n        this.width = this.data.width;\n        this.height = this.data.height;\n        // Setup background with mouse input to catch mouse move events when not exactly over the scroll bar.\n        this.backgroundPanel = document.createElement('a-plane');\n        this.backgroundPanel.setAttribute('class', 'no-yoga-layout background ' + this.data.intersectableClass);\n        this.backgroundPanel.setAttribute('width', this.data.width + 1);\n        this.backgroundPanel.setAttribute('height', this.data.height + 1);\n        this.backgroundPanel.setAttribute('position', '0 0 -0.02');\n        this.backgroundPanel.setAttribute('opacity', 0.0001); //\n        this.backgroundPanel.setAttribute('transparent', true);\n        this.component.el.appendChild(this.backgroundPanel);\n        // Setup handle circle entity.\n        this.handleEl = document.createElement('a-circle');\n        this.handleEl.setAttribute('radius', this.data.handleRadius);\n        this.handleEl.setAttribute('color', this.colorTheme.secondary);\n        this.handleEl.setAttribute('shader', 'flat');\n        this.handleEl.setAttribute('ui-ripple', 'size:0.1 0.1;color:#999;fadeDelay:300;duration:500');\n        this.handleEl.setAttribute('class', this.data.intersectableClass + ' no-yoga-layout');\n        this.handleEl.setAttribute('position', ((-(this.data.width) / 2) + this.data.handleRadius) + ' 0 ' + this.data.handleZIndex);\n        this.handleEl.setAttribute('segments', 10);\n        this.component.el.appendChild(this.handleEl);\n        // Setup rail entity.\n        this.railEl = document.createElement('a-plane');\n        this.railEl.setAttribute('width', (this.data.width - 0.1));\n        this.railEl.setAttribute('height', '0.05');\n        this.railEl.setAttribute('shader', 'flat');\n        this.railEl.setAttribute('ui-rounded', 'borderRadius:0.025');\n        this.railEl.setAttribute('color', this.colorTheme.primaryDark);\n        this.railEl.setAttribute('class', this.data.intersectableClass + ' no-yoga-layout');\n        this.component.el.appendChild(this.railEl);\n        // Wait for the rounded edge on the rail to load to clone the geometry for the\n        // selected progress bar part of the rail\n        this.railEl.addEventListener('rounded-loaded', () => {\n            this.getRailObject(this.railEl.object3D);\n            this.slide(this.scroll_perc, true);\n        });\n        // Pause/play camera look controls\n        const playPauseCamera = (method) => {\n            if (method == 'pause') {\n                this.ui.onFocus();\n            }\n            else {\n                this.ui.onFocusOut();\n            }\n            if (this.data.cameraEl) {\n                let lookControls = this.data.cameraEl.components[this.data.lookControlsComponent];\n                if (lookControls) {\n                    lookControls[method]();\n                }\n            }\n        };\n        // Setup mouse move handler for scrolling and updating scroll handle.\n        const mousemove = (e) => this.mouseMove(e);\n        // Start scroll\n        this.handleEl.addEventListener('mousedown', (e) => {\n            // Pause look controls to allow scrolling\n            playPauseCamera('pause');\n            this.isDragging = true;\n            // Store the start point offset\n            this.component.el.emit('slide-start', this.scroll_perc);\n            this.handlePos = this.handleEl.object3D.worldToLocal(e.detail.intersection ? e.detail.intersection.point : e.relatedTarget.object3D.position).x;\n            this.backgroundPanel.addEventListener('ui-mousemove', mousemove);\n            // Start changes\n            this.ui.isChanging(this.component.el.sceneEl, this.handleEl.object3D.uuid);\n            // Prevent default behaviour of event\n            this.ui.preventDefault(e);\n        });\n        // End scroll\n        const endScroll = (e) => {\n            if (this.isDragging) {\n                this.backgroundPanel.removeEventListener('ui-mousemove', mousemove);\n                // Play look controls once scrolling is finished\n                playPauseCamera('play');\n                this.isDragging = false;\n                // Stop changes\n                this.component.el.emit('slide-end', this.scroll_perc);\n                this.ui.stoppedChanging(this.handleEl.object3D.uuid);\n                // Prevent default behaviour of event\n                this.ui.preventDefault(e);\n            }\n        };\n        this.backgroundPanel.addEventListener('mouseup', endScroll);\n        this.backgroundPanel.addEventListener('mouseleave', endScroll);\n        // // Handle clicks on rail to scroll\n        this.railEl.addEventListener('mousedown', (e) => {\n            this.ui.isChanging(this.component.el.sceneEl, this.handleEl.object3D.uuid);\n            // Pause look controls\n            this.isDragging = true;\n            // Reset handle pos to center of handle\n            this.handlePos = 0;\n            // Scroll immediately and register mouse move events.\n            this.slide(this.railEl.object3D.worldToLocal(e.detail.intersection ? e.detail.intersection.point : e.relatedTarget.object3D.position).x);\n            this.backgroundPanel.addEventListener('ui-mousemove', mousemove);\n            this.component.el.emit('slide-end', this.scroll_perc);\n            // Prevent default behaviour of event\n            this.ui.preventDefault(e);\n        });\n        this.component.el.slide = this.slide.bind(this);\n        this.component.el.getValue = this.getValue.bind(this);\n        this.component.el.railEl = this.railEl;\n    }\n    getValue() {\n        return this.scroll_perc;\n    }\n    slide(positionX, isPerc) {\n        let min = (-(this.data.width) / 2) + this.data.handleRadius;\n        let max = ((this.data.width) / 2) - this.data.handleRadius;\n        // Set scroll position with start point offset.\n        let scroll_pos = isPerc ? (min + ((max - min) * positionX)) : three_1.Math.clamp(positionX, min, max);\n        this.scroll_perc = isPerc ? positionX : ((scroll_pos - min) / (max - min));\n        this.component.el.emit('slide', this.scroll_perc);\n        this.progress.scale.set(this.scroll_perc || 0.0001, 1, 1);\n        this.progress.position.set((-(this.data.width - this.data.handleRadius) / 2) + (this.scroll_perc * ((this.data.width - this.data.handleRadius) / 2)), 0, 0.0001);\n        this.handleEl.setAttribute('position', /*((this.data.width/2)+this.data.scrollPadding)+' '+*/ scroll_pos + ' 0 ' + (this.data.scrollZOffset + 0.0005));\n    }\n    mouseMove(e) {\n        if (this.isDragging) {\n            let pos = this.railEl.object3D.worldToLocal(e.detail.intersection.point);\n            this.slide(pos.x - this.handlePos + this.data.handleRadius);\n        }\n    }\n    getRailObject(object) {\n        // Get the rounded shape geomtery.\n        object.traverse(child => {\n            if (child.geometry && child.geometry.type === \"ShapeBufferGeometry\") {\n                this.progress = new three_1.Mesh(child.geometry.clone(), new three_1.MeshBasicMaterial({ color: this.colorTheme.secondaryDark }));\n                this.progress.position.set(-this.data.width / 2, 0, 0.0001);\n                this.progress.scale.set(0.00001, 1, 1);\n                this.component.el.object3D.add(this.progress);\n            }\n        });\n    }\n}\nSlider.DEFINITION = new built_1.ComponentControllerDefinition(\n/* Name */ \"ui-slider\", \n/* Schema */ {\n    value: { type: 'number', default: 0 },\n    disabled: { type: 'boolean', default: false },\n    progressColor: { default: '#4db6ac' },\n    handleColor: { default: '#009688' },\n    handleDisabledColor: { default: '#afafaf' },\n    railColor: { default: '#fff' },\n    handleZIndex: { type: 'number', default: 0.001 },\n    intersectableClass: { default: 'intersectable' },\n    width: { type: 'number', default: 0.5 },\n    height: { type: 'number', default: 0.1 },\n    lookControlsComponent: { default: 'look-controls' },\n    handleRadius: { type: 'number', default: 0.055 },\n    scrollZOffset: { type: 'number', default: 0 },\n    cameraEl: { type: 'selector' },\n}, \n/* Multiple */ false, \n/* Receive ticks */ false, \n/* Factory function */ (component, entity, data) => new Slider(component, entity, data));\nexports.Slider = Slider;\n//# sourceMappingURL=Slider.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/Slider.js\n");

/***/ }),

/***/ "./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/Switch.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/Switch.js ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst built_1 = __webpack_require__(/*! aframe-typescript-boilerplate/built */ \"./node_modules/aframe-typescript-boilerplate/built/index.js\");\nconst three_1 = __webpack_require__(/*! three */ \"three\");\nconst UiElement_1 = __webpack_require__(/*! ./UiElement */ \"./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/UiElement.js\");\nclass Switch extends UiElement_1.UiElement {\n    constructor(component, entity, data) {\n        super(component, entity, data);\n        this.width = 0;\n        this.height = 0;\n        this.handleEl = undefined;\n        this.railEl = undefined;\n        this.progress = undefined;\n        this.clickHandler = (e) => { };\n    }\n    init() {\n        this.width = 0.3;\n        this.height = 0.1;\n        // Setup handle circle entity.\n        let handle = `\n            <a-circle radius=\"0.055\" shader=\"flat\" segments=\"10\" color=\"` + this.data.handleColor + `\" \n            ui-ripple=\"size:0.1 0.1;color:#999;fadeDelay:300;duration:500\" class=\"` + this.data.intersectableClass + ` no-yoga-layout\"\n            position=\"-0.05 0 ` + this.data.handleZIndex + `\" segments=\"6\"></a-circle>`;\n        this.component.el.insertAdjacentHTML('beforeend', handle);\n        this.handleEl = this.component.el.lastChild;\n        // Setup rail entity.\n        let rail = `<a-plane width=\"0.15\" shader=\"flat\" height=\"0.05\" \n            ui-rounded=\"borderRadius:0.025\" class=\"` + this.data.intersectableClass + ` no-yoga-layout\"\n            color=\"` + this.colorTheme.primaryDark + `\" segments=\"6\"></a-plane>`;\n        this.component.el.insertAdjacentHTML('beforeend', rail);\n        this.railEl = this.component.el.lastChild;\n        // Wait for the rounded edge on the rail to load to clone the geometry for the\n        // selected progress bar part of the rail\n        this.railEl.addEventListener('rounded-loaded', () => {\n            this.getRailObject(this.railEl.object3D);\n            this.setDisabled();\n            this.click();\n        });\n        this.component.el.getValue = this.getValue.bind(this);\n        this.clickHandler = (e) => {\n            this.data.value = !this.data.value;\n            this.click();\n            // Prevent default behaviour of event\n            if (e.detail.preventDefault) {\n                e.detail.preventDefault();\n            }\n        };\n    }\n    updateSchema() {\n        if (this.data) {\n            if (this.data.disabled) {\n                if (this.data.value) {\n                    this.data.value = false;\n                    this.click();\n                }\n            }\n            else {\n                this.click();\n            }\n            this.setDisabled();\n        }\n    }\n    getValue() {\n        return this.data.value;\n    }\n    setDisabled() {\n        // Add / Remove click handlers based on disabled state.\n        if (this.data.disabled) {\n            this.handleEl.removeEventListener('mousedown', this.clickHandler);\n            this.handleEl.setAttribute('color', this.data.handleDisabledColor);\n        }\n        else {\n            this.handleEl.addEventListener('mousedown', this.clickHandler);\n            this.handleEl.setAttribute('color', this.colorTheme.secondary);\n        }\n    }\n    click() {\n        // Emit the current selected value\n        this.component.el.emit('ui-switch-changed', this.data.value);\n        // Animate the switch handle and the progress bar.\n        this.tweenHandle();\n        this.tweenProgress();\n    }\n    getRailObject(object) {\n        // Get the rounded shape geomtery.\n        object.traverse(child => {\n            if (child.geometry && child.geometry.type === \"ShapeBufferGeometry\") {\n                this.progress = new three_1.Mesh(child.geometry.clone(), new three_1.MeshBasicMaterial({ color: this.colorTheme.secondaryDark }));\n                this.progress.position.set(-0.075, 0, 0.001);\n                this.progress.scale.set(0.00001, 1, 1);\n                this.component.el.object3D.add(this.progress);\n            }\n        });\n    }\n    tweenProgress() {\n        if (this.progress) {\n            new TWEEN.Tween(this.progress.position)\n                .to(new three_1.Vector3(this.data.value ? 0 : -0.075, 0, 0.001), this.data.switchDuration)\n                .easing(TWEEN.Easing.Exponential.Out).start();\n            new TWEEN.Tween(this.progress.scale)\n                .to(new three_1.Vector3(this.data.value ? 1 : 0.00001, 1, 1), this.data.switchDuration)\n                .easing(TWEEN.Easing.Exponential.Out).start();\n        }\n    }\n    tweenHandle() {\n        if (this.handleEl) {\n            // Start changes\n            this.ui.isChanging(this.component.el.sceneEl, this.component.el.object3D.uuid);\n            new TWEEN.Tween(this.handleEl.object3D.position)\n                .to(new three_1.Vector3(this.data.value ? 0.05 : -0.05, 0, this.data.handleZIndex), this.data.switchDuration)\n                .onComplete(() => {\n                // Stop changes\n                this.ui.stoppedChanging(this.component.el.object3D.uuid);\n            })\n                .easing(TWEEN.Easing.Exponential.Out).start();\n        }\n    }\n}\nSwitch.DEFINITION = new built_1.ComponentControllerDefinition(\n/* Name */ \"ui-switch\", \n/* Schema */ {\n    value: { type: 'boolean', default: false },\n    disabled: { type: 'boolean', default: false },\n    progressColor: { default: '#4db6ac' },\n    handleColor: { default: '#009688' },\n    handleDisabledColor: { default: '#afafaf' },\n    railColor: { default: '#fff' },\n    switchDuration: { type: 'int', default: 350 },\n    handleZIndex: { type: 'number', default: 0.01 },\n    intersectableClass: { default: 'intersectable' },\n    width: { type: 'number', default: 0.3 },\n    height: { type: 'number', default: 0.1 },\n}, \n/* Multiple */ false, \n/* Receive ticks */ false, \n/* Factory Switch */ (component, entity, data) => new Switch(component, entity, data));\nexports.Switch = Switch;\n//# sourceMappingURL=Switch.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/Switch.js\n");

/***/ }),

/***/ "./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/Text.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/Text.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst built_1 = __webpack_require__(/*! aframe-typescript-boilerplate/built */ \"./node_modules/aframe-typescript-boilerplate/built/index.js\");\nconst UiElement_1 = __webpack_require__(/*! ./UiElement */ \"./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/UiElement.js\");\nclass Text extends UiElement_1.UiElement {\n    constructor(component, entity, data) {\n        super(component, entity, data);\n        this.wrapCount = 0;\n        this.layoutReady = false;\n        this.onLayoutReady = () => { };\n    }\n    init() {\n        this.entity.setAttribute(\"color\", this.colorTheme.surfaceOn);\n        this.wrapCount = 400 * this.getWidth() * 1 / this.data.fontSize;\n        this.entity.setAttribute(\"wrap-count\", this.wrapCount);\n        const fixedHeight = this.entity.hasAttribute(\"height\");\n        const fontLoaded = this.entity.components[\"text\"].currentFont;\n        if (fixedHeight) {\n            // Set layout ready as we have fixed height.\n            this.layoutReady = true;\n        }\n        else {\n            if (fontLoaded) {\n                // Calculated dynamic height immediately.\n                this.setDynamicHeight();\n            }\n            else {\n                // Delay until font loaded.\n                this.addEventListener(\"textfontset\", () => {\n                    this.setDynamicHeight();\n                });\n            }\n        }\n    }\n    initLayout() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                if (this.layoutReady) {\n                    resolve();\n                    return;\n                }\n                this.onLayoutReady = () => {\n                    resolve();\n                };\n            });\n        });\n    }\n    update(data, oldData) {\n        super.update(data, oldData);\n    }\n    tick(time, timeDelta) {\n        super.tick(time, timeDelta);\n    }\n    setDynamicHeight() {\n        const textComponent = this.entity.components[\"text\"];\n        const geometry = textComponent.geometry;\n        const layout = geometry.layout;\n        const widthFactor = this.entity.components[\"text\"].currentFont.widthFactor;\n        const wrapCount = this.wrapCount;\n        const textRenderWidth = ((0.5 + wrapCount) * widthFactor);\n        const textScale = this.getWidth() / textRenderWidth;\n        const height = textScale * (layout.height + layout.descender);\n        this.entity.setAttribute(\"height\", height);\n        //console.log(height);\n        this.layoutReady = true;\n        this.onLayoutReady();\n    }\n    getWidth() {\n        if (!this.entity.hasAttribute(\"width\")) {\n            const width = this.findWidth(this.entity);\n            this.entity.setAttribute(\"width\", width);\n        }\n        return parseFloat(this.entity.getAttributeNode(\"width\").value);\n    }\n    findWidth(element) {\n        if (!element.hasAttribute(\"width\")) {\n            return this.findWidth(element.parentElement);\n        }\n        else {\n            return parseFloat(element.getAttributeNode(\"width\").value);\n        }\n    }\n}\nText.DEFINITION = new built_1.ComponentControllerDefinition(\n/* Name */ \"ui-text\", \n/* Schema */ {\n    fontSize: { type: 'number', default: 10 },\n    width: { type: 'number', default: 1 },\n}, \n/* Multiple */ false, \n/* Receive ticks */ false, \n/* Factory function */ (component, entity, data) => new Text(component, entity, data));\nexports.Text = Text;\n//# sourceMappingURL=Text.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHRsYXVra2FuL2FmcmFtZS1tYXRlcmlhbC1jb2xsZWN0aW9uLXRzL2J1aWx0L3NyYy9jb21wb25lbnRzL1RleHQuanM/YWNjNyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSxtQ0FBbUMsTUFBTSw2QkFBNkIsRUFBRSxZQUFZLFdBQVcsRUFBRTtBQUNqRyxrQ0FBa0MsTUFBTSxpQ0FBaUMsRUFBRSxZQUFZLFdBQVcsRUFBRTtBQUNwRywrQkFBK0IsaUVBQWlFLHVCQUF1QixFQUFFLDRCQUE0QjtBQUNySjtBQUNBLEtBQUs7QUFDTDtBQUNBLDhDQUE4QyxjQUFjO0FBQzVELGdCQUFnQixtQkFBTyxDQUFDLHdHQUFxQztBQUM3RCxvQkFBb0IsbUJBQU8sQ0FBQyw2R0FBYTtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0NBQW9DO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSw4QkFBOEI7QUFDN0MsWUFBWSw2QkFBNkI7QUFDekMsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRsYXVra2FuL2FmcmFtZS1tYXRlcmlhbC1jb2xsZWN0aW9uLXRzL2J1aWx0L3NyYy9jb21wb25lbnRzL1RleHQuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2F3YWl0ZXIgPSAodGhpcyAmJiB0aGlzLl9fYXdhaXRlcikgfHwgZnVuY3Rpb24gKHRoaXNBcmcsIF9hcmd1bWVudHMsIFAsIGdlbmVyYXRvcikge1xuICAgIHJldHVybiBuZXcgKFAgfHwgKFAgPSBQcm9taXNlKSkoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgICBmdW5jdGlvbiBmdWxmaWxsZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3IubmV4dCh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHJlamVjdGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yW1widGhyb3dcIl0odmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiBzdGVwKHJlc3VsdCkgeyByZXN1bHQuZG9uZSA/IHJlc29sdmUocmVzdWx0LnZhbHVlKSA6IG5ldyBQKGZ1bmN0aW9uIChyZXNvbHZlKSB7IHJlc29sdmUocmVzdWx0LnZhbHVlKTsgfSkudGhlbihmdWxmaWxsZWQsIHJlamVjdGVkKTsgfVxuICAgICAgICBzdGVwKChnZW5lcmF0b3IgPSBnZW5lcmF0b3IuYXBwbHkodGhpc0FyZywgX2FyZ3VtZW50cyB8fCBbXSkpLm5leHQoKSk7XG4gICAgfSk7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgYnVpbHRfMSA9IHJlcXVpcmUoXCJhZnJhbWUtdHlwZXNjcmlwdC1ib2lsZXJwbGF0ZS9idWlsdFwiKTtcbmNvbnN0IFVpRWxlbWVudF8xID0gcmVxdWlyZShcIi4vVWlFbGVtZW50XCIpO1xuY2xhc3MgVGV4dCBleHRlbmRzIFVpRWxlbWVudF8xLlVpRWxlbWVudCB7XG4gICAgY29uc3RydWN0b3IoY29tcG9uZW50LCBlbnRpdHksIGRhdGEpIHtcbiAgICAgICAgc3VwZXIoY29tcG9uZW50LCBlbnRpdHksIGRhdGEpO1xuICAgICAgICB0aGlzLndyYXBDb3VudCA9IDA7XG4gICAgICAgIHRoaXMubGF5b3V0UmVhZHkgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5vbkxheW91dFJlYWR5ID0gKCkgPT4geyB9O1xuICAgIH1cbiAgICBpbml0KCkge1xuICAgICAgICB0aGlzLmVudGl0eS5zZXRBdHRyaWJ1dGUoXCJjb2xvclwiLCB0aGlzLmNvbG9yVGhlbWUuc3VyZmFjZU9uKTtcbiAgICAgICAgdGhpcy53cmFwQ291bnQgPSA0MDAgKiB0aGlzLmdldFdpZHRoKCkgKiAxIC8gdGhpcy5kYXRhLmZvbnRTaXplO1xuICAgICAgICB0aGlzLmVudGl0eS5zZXRBdHRyaWJ1dGUoXCJ3cmFwLWNvdW50XCIsIHRoaXMud3JhcENvdW50KTtcbiAgICAgICAgY29uc3QgZml4ZWRIZWlnaHQgPSB0aGlzLmVudGl0eS5oYXNBdHRyaWJ1dGUoXCJoZWlnaHRcIik7XG4gICAgICAgIGNvbnN0IGZvbnRMb2FkZWQgPSB0aGlzLmVudGl0eS5jb21wb25lbnRzW1widGV4dFwiXS5jdXJyZW50Rm9udDtcbiAgICAgICAgaWYgKGZpeGVkSGVpZ2h0KSB7XG4gICAgICAgICAgICAvLyBTZXQgbGF5b3V0IHJlYWR5IGFzIHdlIGhhdmUgZml4ZWQgaGVpZ2h0LlxuICAgICAgICAgICAgdGhpcy5sYXlvdXRSZWFkeSA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBpZiAoZm9udExvYWRlZCkge1xuICAgICAgICAgICAgICAgIC8vIENhbGN1bGF0ZWQgZHluYW1pYyBoZWlnaHQgaW1tZWRpYXRlbHkuXG4gICAgICAgICAgICAgICAgdGhpcy5zZXREeW5hbWljSGVpZ2h0KCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAvLyBEZWxheSB1bnRpbCBmb250IGxvYWRlZC5cbiAgICAgICAgICAgICAgICB0aGlzLmFkZEV2ZW50TGlzdGVuZXIoXCJ0ZXh0Zm9udHNldFwiLCAoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuc2V0RHluYW1pY0hlaWdodCgpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIGluaXRMYXlvdXQoKSB7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLmxheW91dFJlYWR5KSB7XG4gICAgICAgICAgICAgICAgICAgIHJlc29sdmUoKTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB0aGlzLm9uTGF5b3V0UmVhZHkgPSAoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHJlc29sdmUoKTtcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICB1cGRhdGUoZGF0YSwgb2xkRGF0YSkge1xuICAgICAgICBzdXBlci51cGRhdGUoZGF0YSwgb2xkRGF0YSk7XG4gICAgfVxuICAgIHRpY2sodGltZSwgdGltZURlbHRhKSB7XG4gICAgICAgIHN1cGVyLnRpY2sodGltZSwgdGltZURlbHRhKTtcbiAgICB9XG4gICAgc2V0RHluYW1pY0hlaWdodCgpIHtcbiAgICAgICAgY29uc3QgdGV4dENvbXBvbmVudCA9IHRoaXMuZW50aXR5LmNvbXBvbmVudHNbXCJ0ZXh0XCJdO1xuICAgICAgICBjb25zdCBnZW9tZXRyeSA9IHRleHRDb21wb25lbnQuZ2VvbWV0cnk7XG4gICAgICAgIGNvbnN0IGxheW91dCA9IGdlb21ldHJ5LmxheW91dDtcbiAgICAgICAgY29uc3Qgd2lkdGhGYWN0b3IgPSB0aGlzLmVudGl0eS5jb21wb25lbnRzW1widGV4dFwiXS5jdXJyZW50Rm9udC53aWR0aEZhY3RvcjtcbiAgICAgICAgY29uc3Qgd3JhcENvdW50ID0gdGhpcy53cmFwQ291bnQ7XG4gICAgICAgIGNvbnN0IHRleHRSZW5kZXJXaWR0aCA9ICgoMC41ICsgd3JhcENvdW50KSAqIHdpZHRoRmFjdG9yKTtcbiAgICAgICAgY29uc3QgdGV4dFNjYWxlID0gdGhpcy5nZXRXaWR0aCgpIC8gdGV4dFJlbmRlcldpZHRoO1xuICAgICAgICBjb25zdCBoZWlnaHQgPSB0ZXh0U2NhbGUgKiAobGF5b3V0LmhlaWdodCArIGxheW91dC5kZXNjZW5kZXIpO1xuICAgICAgICB0aGlzLmVudGl0eS5zZXRBdHRyaWJ1dGUoXCJoZWlnaHRcIiwgaGVpZ2h0KTtcbiAgICAgICAgLy9jb25zb2xlLmxvZyhoZWlnaHQpO1xuICAgICAgICB0aGlzLmxheW91dFJlYWR5ID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5vbkxheW91dFJlYWR5KCk7XG4gICAgfVxuICAgIGdldFdpZHRoKCkge1xuICAgICAgICBpZiAoIXRoaXMuZW50aXR5Lmhhc0F0dHJpYnV0ZShcIndpZHRoXCIpKSB7XG4gICAgICAgICAgICBjb25zdCB3aWR0aCA9IHRoaXMuZmluZFdpZHRoKHRoaXMuZW50aXR5KTtcbiAgICAgICAgICAgIHRoaXMuZW50aXR5LnNldEF0dHJpYnV0ZShcIndpZHRoXCIsIHdpZHRoKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcGFyc2VGbG9hdCh0aGlzLmVudGl0eS5nZXRBdHRyaWJ1dGVOb2RlKFwid2lkdGhcIikudmFsdWUpO1xuICAgIH1cbiAgICBmaW5kV2lkdGgoZWxlbWVudCkge1xuICAgICAgICBpZiAoIWVsZW1lbnQuaGFzQXR0cmlidXRlKFwid2lkdGhcIikpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmZpbmRXaWR0aChlbGVtZW50LnBhcmVudEVsZW1lbnQpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIHBhcnNlRmxvYXQoZWxlbWVudC5nZXRBdHRyaWJ1dGVOb2RlKFwid2lkdGhcIikudmFsdWUpO1xuICAgICAgICB9XG4gICAgfVxufVxuVGV4dC5ERUZJTklUSU9OID0gbmV3IGJ1aWx0XzEuQ29tcG9uZW50Q29udHJvbGxlckRlZmluaXRpb24oXG4vKiBOYW1lICovIFwidWktdGV4dFwiLCBcbi8qIFNjaGVtYSAqLyB7XG4gICAgZm9udFNpemU6IHsgdHlwZTogJ251bWJlcicsIGRlZmF1bHQ6IDEwIH0sXG4gICAgd2lkdGg6IHsgdHlwZTogJ251bWJlcicsIGRlZmF1bHQ6IDEgfSxcbn0sIFxuLyogTXVsdGlwbGUgKi8gZmFsc2UsIFxuLyogUmVjZWl2ZSB0aWNrcyAqLyBmYWxzZSwgXG4vKiBGYWN0b3J5IGZ1bmN0aW9uICovIChjb21wb25lbnQsIGVudGl0eSwgZGF0YSkgPT4gbmV3IFRleHQoY29tcG9uZW50LCBlbnRpdHksIGRhdGEpKTtcbmV4cG9ydHMuVGV4dCA9IFRleHQ7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1UZXh0LmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/Text.js\n");

/***/ }),

/***/ "./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/Toast.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/Toast.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst built_1 = __webpack_require__(/*! aframe-typescript-boilerplate/built */ \"./node_modules/aframe-typescript-boilerplate/built/index.js\");\nconst UiElement_1 = __webpack_require__(/*! ./UiElement */ \"./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/UiElement.js\");\nclass Toast extends UiElement_1.UiElement {\n    constructor(component, entity, data) {\n        super(component, entity, data);\n        this.originalPosition = undefined;\n        this.closeTween = undefined;\n    }\n    init() {\n        this.originalPosition = this.data.toastEl.getAttribute('position').clone();\n        this.component.el.addEventListener('mousedown', () => {\n            if (this.closeTween)\n                this.closeTween.stop();\n            this.ui.isChanging(this.component.el.sceneEl, this.data.toastEl.object3D.uuid);\n            this.data.toastEl.setAttribute('visible', true);\n            this.data.toastEl.setAttribute('text-value', this.ui.shorten(this.data.message, 85));\n            let _this = this;\n            new TWEEN.Tween({ x: this.originalPosition.x, y: this.originalPosition.y - 0.1, z: this.originalPosition.z })\n                .to(this.originalPosition, 350)\n                .onUpdate(function () {\n                _this.data.toastEl.setAttribute('position', this);\n            })\n                .onComplete(() => {\n                // Stop changes\n                this.closeTween = new TWEEN.Tween({ x: 0.8 })\n                    .delay(2000)\n                    .to({ x: 0.0001 }, 350)\n                    .onUpdate(function () {\n                    _this.data.toastEl.setAttribute('opacity', this.x);\n                })\n                    .onComplete(() => {\n                    this.data.toastEl.setAttribute('visible', false);\n                    this.ui.stoppedChanging(this.data.toastEl.object3D.uuid);\n                })\n                    .easing(TWEEN.Easing.Exponential.Out).start();\n            })\n                .easing(TWEEN.Easing.Exponential.Out).start();\n            new TWEEN.Tween({ x: 0.0001 })\n                .to({ x: 0.8 }, 350)\n                .onUpdate(function () {\n                _this.data.toastEl.setAttribute('opacity', this.x);\n            })\n                .easing(TWEEN.Easing.Exponential.Out).start();\n        });\n    }\n}\nToast.DEFINITION = new built_1.ComponentControllerDefinition(\n/* Name */ \"ui-toast\", \n/* Schema */ {\n    toastEl: { type: 'selector' },\n    message: { default: 'Hello from toast!' }\n}, \n/* Multiple */ false, \n/* Receive ticks */ false, \n/* Factory function */ (component, entity, data) => new Toast(component, entity, data));\nexports.Toast = Toast;\n//# sourceMappingURL=Toast.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHRsYXVra2FuL2FmcmFtZS1tYXRlcmlhbC1jb2xsZWN0aW9uLXRzL2J1aWx0L3NyYy9jb21wb25lbnRzL1RvYXN0LmpzPzEwMzkiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBOEMsY0FBYztBQUM1RCxnQkFBZ0IsbUJBQU8sQ0FBQyx3R0FBcUM7QUFDN0Qsb0JBQW9CLG1CQUFPLENBQUMsNkdBQWE7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLDJGQUEyRjtBQUN4SDtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBLG1EQUFtRCxTQUFTO0FBQzVEO0FBQ0EseUJBQXlCLFlBQVk7QUFDckM7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQSxhQUFhO0FBQ2I7QUFDQSw2QkFBNkIsWUFBWTtBQUN6QyxxQkFBcUIsU0FBUztBQUM5QjtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLG1CQUFtQjtBQUNqQyxjQUFjO0FBQ2QsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRsYXVra2FuL2FmcmFtZS1tYXRlcmlhbC1jb2xsZWN0aW9uLXRzL2J1aWx0L3NyYy9jb21wb25lbnRzL1RvYXN0LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCBidWlsdF8xID0gcmVxdWlyZShcImFmcmFtZS10eXBlc2NyaXB0LWJvaWxlcnBsYXRlL2J1aWx0XCIpO1xuY29uc3QgVWlFbGVtZW50XzEgPSByZXF1aXJlKFwiLi9VaUVsZW1lbnRcIik7XG5jbGFzcyBUb2FzdCBleHRlbmRzIFVpRWxlbWVudF8xLlVpRWxlbWVudCB7XG4gICAgY29uc3RydWN0b3IoY29tcG9uZW50LCBlbnRpdHksIGRhdGEpIHtcbiAgICAgICAgc3VwZXIoY29tcG9uZW50LCBlbnRpdHksIGRhdGEpO1xuICAgICAgICB0aGlzLm9yaWdpbmFsUG9zaXRpb24gPSB1bmRlZmluZWQ7XG4gICAgICAgIHRoaXMuY2xvc2VUd2VlbiA9IHVuZGVmaW5lZDtcbiAgICB9XG4gICAgaW5pdCgpIHtcbiAgICAgICAgdGhpcy5vcmlnaW5hbFBvc2l0aW9uID0gdGhpcy5kYXRhLnRvYXN0RWwuZ2V0QXR0cmlidXRlKCdwb3NpdGlvbicpLmNsb25lKCk7XG4gICAgICAgIHRoaXMuY29tcG9uZW50LmVsLmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlZG93bicsICgpID0+IHtcbiAgICAgICAgICAgIGlmICh0aGlzLmNsb3NlVHdlZW4pXG4gICAgICAgICAgICAgICAgdGhpcy5jbG9zZVR3ZWVuLnN0b3AoKTtcbiAgICAgICAgICAgIHRoaXMudWkuaXNDaGFuZ2luZyh0aGlzLmNvbXBvbmVudC5lbC5zY2VuZUVsLCB0aGlzLmRhdGEudG9hc3RFbC5vYmplY3QzRC51dWlkKTtcbiAgICAgICAgICAgIHRoaXMuZGF0YS50b2FzdEVsLnNldEF0dHJpYnV0ZSgndmlzaWJsZScsIHRydWUpO1xuICAgICAgICAgICAgdGhpcy5kYXRhLnRvYXN0RWwuc2V0QXR0cmlidXRlKCd0ZXh0LXZhbHVlJywgdGhpcy51aS5zaG9ydGVuKHRoaXMuZGF0YS5tZXNzYWdlLCA4NSkpO1xuICAgICAgICAgICAgbGV0IF90aGlzID0gdGhpcztcbiAgICAgICAgICAgIG5ldyBUV0VFTi5Ud2Vlbih7IHg6IHRoaXMub3JpZ2luYWxQb3NpdGlvbi54LCB5OiB0aGlzLm9yaWdpbmFsUG9zaXRpb24ueSAtIDAuMSwgejogdGhpcy5vcmlnaW5hbFBvc2l0aW9uLnogfSlcbiAgICAgICAgICAgICAgICAudG8odGhpcy5vcmlnaW5hbFBvc2l0aW9uLCAzNTApXG4gICAgICAgICAgICAgICAgLm9uVXBkYXRlKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICBfdGhpcy5kYXRhLnRvYXN0RWwuc2V0QXR0cmlidXRlKCdwb3NpdGlvbicsIHRoaXMpO1xuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAub25Db21wbGV0ZSgoKSA9PiB7XG4gICAgICAgICAgICAgICAgLy8gU3RvcCBjaGFuZ2VzXG4gICAgICAgICAgICAgICAgdGhpcy5jbG9zZVR3ZWVuID0gbmV3IFRXRUVOLlR3ZWVuKHsgeDogMC44IH0pXG4gICAgICAgICAgICAgICAgICAgIC5kZWxheSgyMDAwKVxuICAgICAgICAgICAgICAgICAgICAudG8oeyB4OiAwLjAwMDEgfSwgMzUwKVxuICAgICAgICAgICAgICAgICAgICAub25VcGRhdGUoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICBfdGhpcy5kYXRhLnRvYXN0RWwuc2V0QXR0cmlidXRlKCdvcGFjaXR5JywgdGhpcy54KTtcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICAub25Db21wbGV0ZSgoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZGF0YS50b2FzdEVsLnNldEF0dHJpYnV0ZSgndmlzaWJsZScsIGZhbHNlKTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy51aS5zdG9wcGVkQ2hhbmdpbmcodGhpcy5kYXRhLnRvYXN0RWwub2JqZWN0M0QudXVpZCk7XG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgLmVhc2luZyhUV0VFTi5FYXNpbmcuRXhwb25lbnRpYWwuT3V0KS5zdGFydCgpO1xuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAuZWFzaW5nKFRXRUVOLkVhc2luZy5FeHBvbmVudGlhbC5PdXQpLnN0YXJ0KCk7XG4gICAgICAgICAgICBuZXcgVFdFRU4uVHdlZW4oeyB4OiAwLjAwMDEgfSlcbiAgICAgICAgICAgICAgICAudG8oeyB4OiAwLjggfSwgMzUwKVxuICAgICAgICAgICAgICAgIC5vblVwZGF0ZShmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgX3RoaXMuZGF0YS50b2FzdEVsLnNldEF0dHJpYnV0ZSgnb3BhY2l0eScsIHRoaXMueCk7XG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgIC5lYXNpbmcoVFdFRU4uRWFzaW5nLkV4cG9uZW50aWFsLk91dCkuc3RhcnQoKTtcbiAgICAgICAgfSk7XG4gICAgfVxufVxuVG9hc3QuREVGSU5JVElPTiA9IG5ldyBidWlsdF8xLkNvbXBvbmVudENvbnRyb2xsZXJEZWZpbml0aW9uKFxuLyogTmFtZSAqLyBcInVpLXRvYXN0XCIsIFxuLyogU2NoZW1hICovIHtcbiAgICB0b2FzdEVsOiB7IHR5cGU6ICdzZWxlY3RvcicgfSxcbiAgICBtZXNzYWdlOiB7IGRlZmF1bHQ6ICdIZWxsbyBmcm9tIHRvYXN0IScgfVxufSwgXG4vKiBNdWx0aXBsZSAqLyBmYWxzZSwgXG4vKiBSZWNlaXZlIHRpY2tzICovIGZhbHNlLCBcbi8qIEZhY3RvcnkgZnVuY3Rpb24gKi8gKGNvbXBvbmVudCwgZW50aXR5LCBkYXRhKSA9PiBuZXcgVG9hc3QoY29tcG9uZW50LCBlbnRpdHksIGRhdGEpKTtcbmV4cG9ydHMuVG9hc3QgPSBUb2FzdDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVRvYXN0LmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/Toast.js\n");

/***/ }),

/***/ "./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/UI.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/UI.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst built_1 = __webpack_require__(/*! aframe-typescript-boilerplate/built */ \"./node_modules/aframe-typescript-boilerplate/built/index.js\");\nconst three_1 = __webpack_require__(/*! three */ \"three\");\nconst UiElement_1 = __webpack_require__(/*! ./UiElement */ \"./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/UiElement.js\");\nclass UI extends UiElement_1.UiElement {\n    constructor(component, entity, data) {\n        super(component, entity, data);\n        this.meshEl = undefined;\n        this.backdrop = undefined;\n        this.lookControlsEl = undefined;\n        this.camera = undefined;\n        this.renderTarget = undefined;\n        this.stoppedRendering = false;\n        this.isRendering = false;\n        this.raycaster = undefined;\n        this.helper = undefined;\n        this.lastRenderTime = 0;\n        this.isFrozen = false;\n        this.isReady = false;\n        this.lastMouseMoveTime = 0;\n        this.isAnimatingBackground = false;\n        this.click = e => { };\n        this.mousedown = e => { };\n        this.mouseup = e => { };\n        this.mousewheel = e => { };\n        this.mousemove = e => { };\n        this.lastMoveEvent = undefined;\n        this.prevIntersectionEls = undefined;\n        this.renderTween = undefined;\n        this.meshTextureSet = false;\n    }\n    init() {\n        //renderer = new WebGLRenderer( { antialias: true } );\n        this.setupBackDrop();\n        if (!this.data.uiPanel) {\n            this.meshEl = this.setupUIPanel();\n        }\n        else {\n            this.meshEl = this.data.uiPanel;\n        }\n        // Remove this object from the scene to be rendered separately.\n        this.component.el.object3D.parent.remove(this.component.el.object3D);\n        // Setup fixed camera nd render target.\n        this.camera = new three_1.OrthographicCamera(-this.data.renderSize.x / 2, this.data.renderSize.x / 2, this.data.renderSize.y / 2, -this.data.renderSize.y / 2, -2.2, 2.2);\n        this.camera.position.z = 1.1;\n        // Setup render target\n        this.renderTarget = new three_1.WebGLRenderTarget(this.data.renderResolution.x, this.data.renderResolution.y);\n        // Listen for change events to enable rendering.\n        this.stoppedRendering = false;\n        this.isRendering = true;\n        // Listen for change events to enable/disable rendering\n        this.component.el.sceneEl.addEventListener('ui-changing', () => {\n            //console.log(JSON.stringify(new Date()),'ui-changing');\n            this.stoppedRendering = false;\n            this.isRendering = true;\n        });\n        this.component.el.sceneEl.addEventListener('ui-changing-stopped', () => {\n            //console.log(JSON.stringify(new Date()),'ui-changing-stopped');\n            this.isRendering = false;\n        });\n        // Setup raycaster for relaying mouse/keyboard events\n        this.raycaster = new three_1.Raycaster();\n        this.raycaster.far = 10;\n        this.helper = new three_1.Mesh(new three_1.SphereGeometry(0.01), new three_1.MeshBasicMaterial({ color: '#ff0000' }));\n        // Add cursor helper to object\n        if (this.data.debugRaycaster)\n            this.component.el.object3D.add(this.helper);\n        // Set last render time\n        this.lastRenderTime = 0;\n        this.isFrozen = false;\n        // Expose methods to the element to pause/play the renderer.\n        this.component.el.pauseRender = this.pauseRender.bind(this);\n        this.component.el.playRender = this.playRender.bind(this);\n        this.isReady = false;\n        setTimeout(() => {\n            this.isReady = true;\n            this.ui.isChanging(this.component.el.sceneEl, this.component.el.object3D.uuid);\n            setTimeout(() => {\n                this.ui.stoppedChanging(this.component.el.object3D.uuid);\n            }, this.ui.maxChangePropagationTime);\n        }, this.data.initDelay);\n    }\n    tick(time, timeDelta) {\n        if (!this.meshTextureSet) {\n            // Set the texture to the ui panel mesh.\n            this.meshEl.getObject3D('mesh').material.map = this.renderTarget.texture;\n            if (this.entity.sceneEl.renderer.gammaOutput) {\n                this.meshEl.getObject3D('mesh').material.map.encoding = three_1.sRGBEncoding;\n            }\n            else {\n                this.meshEl.getObject3D('mesh').material.map.encoding = three_1.LinearEncoding;\n            }\n            this.meshEl.getObject3D('mesh').material.transparent = true;\n            this.meshEl.getObject3D('mesh').material.opacity = this.data.panelOpacity;\n            this.meshEl.getObject3D('mesh').material.map.anisotropy = 16;\n            //((this.meshEl.getObject3D('mesh') as Mesh).material as any).map.minFilter = NearestMipMapLinearFilter;\n            // emit ready event for anythng wanting to use this texture.\n            this.meshEl.emit('texture-ready', this.renderTarget.texture);\n            this.meshTextureSet = true;\n        }\n        if (this.isFrozen || this.stoppedRendering || !this.isReady)\n            return;\n        if (time - this.lastRenderTime < (1000 / this.data.fps) && this.isRendering)\n            return;\n        this.component.el.object3D.traverse((child) => {\n            child.updateMatrixWorld();\n        });\n        let renderer = this.component.el.sceneEl.renderer;\n        let vrModeEnabled = renderer.vr.enabled;\n        renderer.vr.enabled = false;\n        let clearAlpha = renderer.getClearAlpha();\n        let clearColor = renderer.getClearColor();\n        renderer.setClearColor(this.colorTheme.background, 1);\n        renderer.render(this.component.el.object3D, this.camera, this.renderTarget);\n        renderer.setClearColor(clearColor);\n        renderer.setClearAlpha(clearAlpha);\n        renderer.vr.enabled = vrModeEnabled;\n        this.lastRenderTime = time;\n        if (!this.isRendering) {\n            this.stoppedRendering = true;\n        }\n    }\n    pause() {\n        this.meshEl.removeEventListener('mousedown', this.mousedown);\n        this.meshEl.removeEventListener('mouseup', this.mouseup);\n        this.meshEl.removeEventListener('click', this.click);\n        this.meshEl.removeEventListener('ui-mousemove', this.mousemove);\n        this.meshEl.removeEventListener('ui-mousewheel', this.mousewheel);\n    }\n    play() {\n        this.lastMouseMoveTime = 0;\n        // Register event listeners\n        // Mousedown and mouseup do not have the correct intersection point. Use last mouse move event if available instead.\n        // TODO: raise issue with aframe / submit PR;\n        this.click = (e) => this.mouseEvent('click', this.lastMoveEvent || e);\n        this.mousedown = (e) => this.mouseEvent('mousedown', this.lastMoveEvent || e);\n        this.mouseup = (e) => this.mouseEvent('mouseup', this.lastMoveEvent || e);\n        this.mousewheel = (e) => this.mouseEvent('ui-mousewheel', e.detail.evt);\n        this.mousemove = (e) => {\n            // Save mousemove event for mousedown/mouseup events.\n            this.lastMoveEvent = e;\n            this.mouseEvent('ui-mousemove', e);\n        };\n        this.meshEl.addEventListener('mousedown', this.mousedown);\n        this.meshEl.addEventListener('mouseup', this.mouseup);\n        this.meshEl.addEventListener('click', this.click);\n        this.meshEl.addEventListener('ui-mousemove', this.mousemove);\n        this.meshEl.addEventListener('ui-mousewheel', this.mousewheel);\n    }\n    pauseRender(time) {\n        return this.playRender(time, true);\n    }\n    playRender(time, isPaused) {\n        let _this = this;\n        return new Promise(resolve => {\n            if (_this.isFrozen === isPaused || _this.isAnimatingBackground)\n                return resolve();\n            _this.isAnimatingBackground = true;\n            if (!_this.isFrozen)\n                this.backdrop.setAttribute('scale', '1 1 1');\n            let fromScale = _this.isFrozen ? 0.9 : 0.000001;\n            let toScale = _this.isFrozen ? 0.000001 : 0.9;\n            let duration = _this.isFrozen ? time || 350 : time || 500;\n            if (_this.isFrozen) {\n                _this.isFrozen = isPaused;\n                _this.play();\n            }\n            this.ui.isChanging(_this.component.el.sceneEl, _this.backdrop.uuid);\n            if (_this.renderTween)\n                _this.renderTween.stop();\n            _this.renderTween = new TWEEN.Tween({ x: fromScale })\n                .to({ x: toScale }, duration)\n                .onUpdate(function () {\n                _this.backdrop.setAttribute('opacity', this.x);\n            })\n                .onComplete(() => {\n                _this.isFrozen = isPaused;\n                _this.isAnimatingBackground = false;\n                if (_this.isFrozen) {\n                    _this.pause();\n                }\n                else {\n                    this.backdrop.setAttribute('scale', '0.000001 0.000001 0.000001');\n                }\n                // Stop changes\n                this.ui.stoppedChanging(this.backdrop.uuid);\n                resolve();\n            })\n                .easing(TWEEN.Easing.Exponential.Out).start();\n        });\n    }\n    setupBackDrop() {\n        this.backdrop = document.createElement('a-plane');\n        this.backdrop.setAttribute('transparent', true);\n        this.backdrop.setAttribute('opacity', 0.000001);\n        this.backdrop.setAttribute('color', '#000');\n        this.backdrop.setAttribute('shader', 'flat');\n        this.backdrop.setAttribute('position', { x: 0, y: 0, z: -0.2 });\n        this.backdrop.setAttribute('width', 1);\n        this.backdrop.setAttribute('height', 1);\n        this.backdrop.setAttribute('scale', '0.000001 0.000001 0.000001');\n        this.component.el.appendChild(this.backdrop);\n    }\n    setupUIPanel() {\n        let uiPanel = document.createElement('a-plane');\n        uiPanel.setAttribute('side', 'double');\n        //uiPanel.setAttribute('color', '#ffffff');\n        //uiPanel.setAttribute('color', this.colorTheme.background);\n        uiPanel.setAttribute('shader', 'flat');\n        uiPanel.setAttribute('class', 'intersect');\n        uiPanel.setAttribute('position', this.data.panelPosition);\n        uiPanel.setAttribute('width', this.data.panelSize.x);\n        uiPanel.setAttribute('height', this.data.panelSize.y);\n        if (this.data.panelDepth) {\n            uiPanel.setAttribute('ui-curved-plane', 'depth: ' + this.data.panelDepth + ';');\n        }\n        this.component.el.parentElement.appendChild(uiPanel);\n        return uiPanel;\n    }\n    mouseEvent(type, e) {\n        let mouse = { x: 0, y: 0 };\n        if (e.detail && e.detail.intersection) {\n            let localPoint = this.meshEl.object3D.worldToLocal(e.detail.intersection.point.clone());\n            mouse = {\n                x: localPoint.x / this.meshEl.getAttribute('width') * 2,\n                y: localPoint.y / this.meshEl.getAttribute('height') * 2\n            };\n        }\n        if (type === 'ui-mousewheel' && (e.detail || (e.deltaX || e.deltaY))) {\n            mouse.deltaX = e.detail ? e.detail.deltaX : e.deltaX;\n            mouse.deltaY = e.detail ? e.detail.deltaY : e.deltaY;\n        }\n        if (type === 'mousedown' && this.lookControlsEl && this.lookControlsEl.components['look-controls']) {\n            this.lookControlsEl.components[this.data.lookControlsComponent].pause();\n        }\n        if (type === 'mouseup' && this.lookControlsEl && this.lookControlsEl.components['look-controls']) {\n            this.lookControlsEl.components[this.data.lookControlsComponent].play();\n        }\n        // if(type===\"mousedown\"){\n        //     console.log(\"mousedown on menu/editor\",mouse);\n        // }\n        this.raycastIntersections(e, mouse, type);\n    }\n    raycastIntersections(e, mouse, type) {\n        if (!this.camera || this.isFrozen || this.isAnimatingBackground)\n            return;\n        //console.log(mouse);\n        this.raycaster.setFromCamera(mouse, this.camera);\n        // this.helper.setDirection(this.raycaster.ray.direction);\n        let intersections = this.raycaster.intersectObjects(this.component.el.object3D.children, true);\n        this.prevIntersectionEls = this.prevIntersectionEls || [];\n        let intersectionEls = new Array();\n        if (intersections.length && this.data.debugRaycaster) {\n            let intersectionPoint = intersections[0].point;\n            if (intersections[0].object === this.helper && intersections.length > 1) {\n                intersectionPoint = intersections[1].point;\n            }\n            this.helper.position.copy(intersectionPoint);\n            this.helper.position.x -= 0.03;\n        }\n        let defaultPrevented = false;\n        for (let i = 0; i < intersections.length; i++) {\n            let intersection = intersections[i];\n            // Only emit events on objecst with an element attached\n            if (intersection.object.el && intersection.object.el.classList.contains(this.data.intersectableClass)) {\n                let currentEvent = { intersection: intersection, evt: e, preventDefault: () => { defaultPrevented = true; } };\n                // If this is the first time weve seen this element then emit the mouseenter event.\n                if (this.prevIntersectionEls.indexOf(intersection.object.el) === -1 && !defaultPrevented) {\n                    intersection.object.el.emit('mouseenter', currentEvent);\n                }\n                // Emit the mouse event received\n                if (!defaultPrevented || type === 'ui-mousewheel') {\n                    intersection.object.el.emit(type, currentEvent);\n                }\n                // Store the intersection on the element.\n                intersection.object.el.intersection = intersection;\n                // Add the current el to the list to check against previous intersection els.\n                intersectionEls.push(intersection.object.el);\n            }\n        }\n        // Find any intersections that have disappeared to emit the mouse leave event.\n        for (let i = 0; i < this.prevIntersectionEls.length; i++) {\n            let intersectionEl = this.prevIntersectionEls[i];\n            if (intersectionEls.indexOf(intersectionEl) === -1) {\n                intersectionEl.emit('mouseleave', { intersection: intersectionEl.intersection });\n            }\n        }\n        // Store the current intersected elements for the next iteration.\n        this.prevIntersectionEls = intersectionEls;\n    }\n}\nUI.DEFINITION = new built_1.ComponentControllerDefinition(\n/* Name */ \"ui\", \n/* Schema */ {\n    uiPanel: { type: 'selector' },\n    lookControlsEl: { type: 'selector' },\n    lookControlsComponent: { default: 'look-controls' },\n    panelPosition: { type: 'vec3', default: { x: 0, y: 0, z: 0 } },\n    panelSize: { type: 'vec2', default: { x: 6, y: 3 } },\n    panelDepth: { type: 'number', default: 0.03 },\n    panelColor: { default: '#ffffff' },\n    panelOpacity: { type: 'number', default: 1 },\n    renderSize: { type: 'vec2', default: { x: 4, y: 2 } },\n    renderResolution: { type: 'vec2', default: { x: 2048, y: 2048 } },\n    debugRaycaster: { type: 'boolean', default: false },\n    fps: { type: 'number', default: 45 },\n    intersectableClass: { default: 'intersectable' },\n    debug: { type: 'boolean', default: false },\n    initDelay: { type: 'int', default: 250 },\n}, \n/* Multiple */ false, \n/* Receive ticks */ true, \n/* Factory function */ (component, entity, data) => new UI(component, entity, data));\nexports.UI = UI;\n//# sourceMappingURL=UI.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/UI.js\n");

/***/ }),

/***/ "./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/UiElement.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/UiElement.js ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst AbstractComponentController_1 = __webpack_require__(/*! aframe-typescript-boilerplate/built/component/AbstractComponentController */ \"./node_modules/aframe-typescript-boilerplate/built/component/AbstractComponentController.js\");\nclass UiElement extends AbstractComponentController_1.AbstractComponentController {\n    constructor(component, entity, data) {\n        super(component, entity, data);\n        this.ui = undefined;\n        this.ui = this.getSystemController(\"material-ui\");\n        if (!this.ui) {\n            throw new Error(\"Material UI system not registered.\");\n        }\n    }\n    init() {\n    }\n    update(data, oldData) { }\n    remove() { }\n    pause() { }\n    play() { }\n    tick(time, timeDelta) { }\n    get colorTheme() {\n        return this.ui.getColorTheme();\n    }\n    initLayout() {\n        return __awaiter(this, void 0, void 0, function* () {\n        });\n    }\n}\nexports.UiElement = UiElement;\n//# sourceMappingURL=UiElement.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHRsYXVra2FuL2FmcmFtZS1tYXRlcmlhbC1jb2xsZWN0aW9uLXRzL2J1aWx0L3NyYy9jb21wb25lbnRzL1VpRWxlbWVudC5qcz9kMjU0Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBLG1DQUFtQyxNQUFNLDZCQUE2QixFQUFFLFlBQVksV0FBVyxFQUFFO0FBQ2pHLGtDQUFrQyxNQUFNLGlDQUFpQyxFQUFFLFlBQVksV0FBVyxFQUFFO0FBQ3BHLCtCQUErQixpRUFBaUUsdUJBQXVCLEVBQUUsNEJBQTRCO0FBQ3JKO0FBQ0EsS0FBSztBQUNMO0FBQ0EsOENBQThDLGNBQWM7QUFDNUQsc0NBQXNDLG1CQUFPLENBQUMsOEtBQTJFO0FBQ3pIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkI7QUFDM0IsY0FBYztBQUNkLGFBQWE7QUFDYixZQUFZO0FBQ1osMkJBQTJCO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRsYXVra2FuL2FmcmFtZS1tYXRlcmlhbC1jb2xsZWN0aW9uLXRzL2J1aWx0L3NyYy9jb21wb25lbnRzL1VpRWxlbWVudC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fYXdhaXRlciA9ICh0aGlzICYmIHRoaXMuX19hd2FpdGVyKSB8fCBmdW5jdGlvbiAodGhpc0FyZywgX2FyZ3VtZW50cywgUCwgZ2VuZXJhdG9yKSB7XG4gICAgcmV0dXJuIG5ldyAoUCB8fCAoUCA9IFByb21pc2UpKShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICAgIGZ1bmN0aW9uIGZ1bGZpbGxlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvci5uZXh0KHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gcmVqZWN0ZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3JbXCJ0aHJvd1wiXSh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHN0ZXAocmVzdWx0KSB7IHJlc3VsdC5kb25lID8gcmVzb2x2ZShyZXN1bHQudmFsdWUpIDogbmV3IFAoZnVuY3Rpb24gKHJlc29sdmUpIHsgcmVzb2x2ZShyZXN1bHQudmFsdWUpOyB9KS50aGVuKGZ1bGZpbGxlZCwgcmVqZWN0ZWQpOyB9XG4gICAgICAgIHN0ZXAoKGdlbmVyYXRvciA9IGdlbmVyYXRvci5hcHBseSh0aGlzQXJnLCBfYXJndW1lbnRzIHx8IFtdKSkubmV4dCgpKTtcbiAgICB9KTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCBBYnN0cmFjdENvbXBvbmVudENvbnRyb2xsZXJfMSA9IHJlcXVpcmUoXCJhZnJhbWUtdHlwZXNjcmlwdC1ib2lsZXJwbGF0ZS9idWlsdC9jb21wb25lbnQvQWJzdHJhY3RDb21wb25lbnRDb250cm9sbGVyXCIpO1xuY2xhc3MgVWlFbGVtZW50IGV4dGVuZHMgQWJzdHJhY3RDb21wb25lbnRDb250cm9sbGVyXzEuQWJzdHJhY3RDb21wb25lbnRDb250cm9sbGVyIHtcbiAgICBjb25zdHJ1Y3Rvcihjb21wb25lbnQsIGVudGl0eSwgZGF0YSkge1xuICAgICAgICBzdXBlcihjb21wb25lbnQsIGVudGl0eSwgZGF0YSk7XG4gICAgICAgIHRoaXMudWkgPSB1bmRlZmluZWQ7XG4gICAgICAgIHRoaXMudWkgPSB0aGlzLmdldFN5c3RlbUNvbnRyb2xsZXIoXCJtYXRlcmlhbC11aVwiKTtcbiAgICAgICAgaWYgKCF0aGlzLnVpKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJNYXRlcmlhbCBVSSBzeXN0ZW0gbm90IHJlZ2lzdGVyZWQuXCIpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGluaXQoKSB7XG4gICAgfVxuICAgIHVwZGF0ZShkYXRhLCBvbGREYXRhKSB7IH1cbiAgICByZW1vdmUoKSB7IH1cbiAgICBwYXVzZSgpIHsgfVxuICAgIHBsYXkoKSB7IH1cbiAgICB0aWNrKHRpbWUsIHRpbWVEZWx0YSkgeyB9XG4gICAgZ2V0IGNvbG9yVGhlbWUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnVpLmdldENvbG9yVGhlbWUoKTtcbiAgICB9XG4gICAgaW5pdExheW91dCgpIHtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgfSk7XG4gICAgfVxufVxuZXhwb3J0cy5VaUVsZW1lbnQgPSBVaUVsZW1lbnQ7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1VaUVsZW1lbnQuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/UiElement.js\n");

/***/ }),

/***/ "./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/Yoga.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/Yoga.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst built_1 = __webpack_require__(/*! aframe-typescript-boilerplate/built */ \"./node_modules/aframe-typescript-boilerplate/built/index.js\");\nconst typeflex_1 = __webpack_require__(/*! typeflex */ \"./node_modules/typeflex/dist/Yoga.js\");\nconst UiElement_1 = __webpack_require__(/*! ./UiElement */ \"./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/UiElement.js\");\nclass Yoga extends UiElement_1.UiElement {\n    constructor(component, entity, data) {\n        super(component, entity, data);\n        this.properties = [];\n        this.enums = {\n            align: {\n                //count:ALIGN_COUNT,\n                auto: typeflex_1.ALIGN_AUTO,\n                \"flex-start\": typeflex_1.ALIGN_FLEX_START,\n                center: typeflex_1.ALIGN_CENTER,\n                \"flex-end\": typeflex_1.ALIGN_FLEX_END,\n                stretch: typeflex_1.ALIGN_STRETCH,\n                baseline: typeflex_1.ALIGN_BASELINE,\n                \"space-between\": typeflex_1.ALIGN_SPACE_BETWEEN,\n                \"space-around\": typeflex_1.ALIGN_SPACE_AROUND,\n            },\n            dimension: {\n                //count:DIMENSION_COUNT,\n                width: typeflex_1.DIMENSION_WIDTH,\n                height: typeflex_1.DIMENSION_HEIGHT,\n            },\n            direction: {\n                //count:DIRECTION_COUNT,\n                inherit: typeflex_1.DIRECTION_INHERIT,\n                ltr: typeflex_1.DIRECTION_LTR,\n                rtl: typeflex_1.DIRECTION_RTL,\n            },\n            display: {\n                //count:DISPLAY_COUNT,\n                flex: typeflex_1.DISPLAY_FLEX,\n                none: typeflex_1.DISPLAY_NONE,\n            },\n            edge: {\n                //count:EDGE_COUNT,\n                left: typeflex_1.EDGE_LEFT,\n                top: typeflex_1.EDGE_TOP,\n                right: typeflex_1.EDGE_RIGHT,\n                bottom: typeflex_1.EDGE_BOTTOM,\n                start: typeflex_1.EDGE_START,\n                end: typeflex_1.EDGE_END,\n                horizontal: typeflex_1.EDGE_HORIZONTAL,\n                vertical: typeflex_1.EDGE_VERTICAL,\n                all: typeflex_1.EDGE_ALL,\n            },\n            experimental: {\n            //count:EXPERIMENTAL_FEATURE_COUNT,\n            //\"flex-basis\":EXPERIMENTAL_FEATURE_WEB_FLEX_BASIS,\n            },\n            flexDirection: {\n                //count:FLEX_DIRECTION_COUNT,\n                column: typeflex_1.FLEX_DIRECTION_COLUMN,\n                \"column-reverse\": typeflex_1.FLEX_DIRECTION_COLUMN_REVERSE,\n                row: typeflex_1.FLEX_DIRECTION_ROW,\n                reverse: typeflex_1.FLEX_DIRECTION_ROW_REVERSE,\n            },\n            justifyContent: {\n                //count:JUSTIFY_COUNT,\n                start: typeflex_1.JUSTIFY_FLEX_START,\n                center: typeflex_1.JUSTIFY_CENTER,\n                end: typeflex_1.JUSTIFY_FLEX_END,\n                between: typeflex_1.JUSTIFY_SPACE_BETWEEN,\n                around: typeflex_1.JUSTIFY_SPACE_AROUND,\n                evenly: typeflex_1.JUSTIFY_SPACE_EVENLY,\n            },\n            logLevel: {\n            //count:LOG_LEVEL_COUNT,\n            //error:LOG_LEVEL_ERROR,\n            //warn:LOG_LEVEL_WARN,\n            //info:LOG_LEVEL_INFO,\n            //debug:LOG_LEVEL_DEBUG,\n            //verbose:LOG_LEVEL_VERBOSE,\n            //fatal:LOG_LEVEL_FATAL,\n            },\n            measureMode: {\n                //count:MEASURE_MODE_COUNT,\n                undefined: typeflex_1.MEASURE_MODE_UNDEFINED,\n                exactly: typeflex_1.MEASURE_MODE_EXACTLY,\n                \"at-most\": typeflex_1.MEASURE_MODE_AT_MOST,\n            },\n            nodeType: {\n                //count:NODE_TYPE_COUNT,\n                default: typeflex_1.NODE_TYPE_DEFAULT,\n                text: typeflex_1.NODE_TYPE_TEXT,\n            },\n            overflow: {\n                //count:OVERFLOW_COUNT,\n                visible: typeflex_1.OVERFLOW_VISIBLE,\n                hidden: typeflex_1.OVERFLOW_HIDDEN,\n                scroll: typeflex_1.OVERFLOW_SCROLL,\n            },\n            positionType: {\n                //count:POSITION_TYPE_COUNT,\n                relative: typeflex_1.POSITION_TYPE_RELATIVE,\n                absolute: typeflex_1.POSITION_TYPE_ABSOLUTE,\n            },\n            printOptions: {\n            //count:PRINT_OPTIONS_COUNT,\n            //layout:PRINT_OPTIONS_LAYOUT,\n            //style:PRINT_OPTIONS_STYLE,\n            //children:PRINT_OPTIONS_CHILDREN,\n            },\n            unit: {\n                //count:UNIT_COUNT,\n                undefined: typeflex_1.UNIT_UNDEFINED,\n                point: typeflex_1.UNIT_POINT,\n                percent: typeflex_1.UNIT_PERCENT,\n                auto: typeflex_1.UNIT_AUTO,\n            },\n            flexWrap: {\n                //count:WRAP_COUNT,\n                \"no-wrap\": typeflex_1.WRAP_NO_WRAP,\n                wrap: typeflex_1.WRAP_WRAP,\n                \"wrap-reverse\": typeflex_1.WRAP_WRAP_REVERSE,\n            }\n        };\n    }\n    init() {\n        this.component.el.getYogaProperties = this.getProperties.bind(this);\n        this.setProperties();\n    }\n    /*updateSchema(){\n        this.setProperties();\n    }*/\n    setProperties() {\n        this.properties = this.properties || [];\n        this.properties.length = 0;\n        // Store the current valid yoga properties;\n        for (let name in this.data) {\n            if (this.data.hasOwnProperty(name) &&\n                this.data[name] !== 'default' && this.data[name]) {\n                let value = this.mapPropertyToEnum(name);\n                if (value)\n                    this.properties.push({ method: 'set' + name.charAt(0).toUpperCase() + name.substr(1), value: this.mapPropertyToEnum(name) });\n            }\n        }\n    }\n    getProperties() {\n        // Get the current yoga properties array as an object\n        let propertiesObj = {};\n        for (let i = 0; i < this.properties.length; i++) {\n            propertiesObj[this.properties[i].method] = this.properties[i];\n        }\n        return propertiesObj;\n    }\n    mapPropertyToEnum(name) {\n        // Get the yoga enum for the friendly name.\n        switch (true) {\n            case name.indexOf('align') > -1:\n                return this.enums.align[this.data[name]];\n            case name.indexOf('Edge') > -1:\n                return this.enums.edge[this.data[name]];\n            case name === 'flexDirection':\n            case name === 'flexWrap':\n            case name === 'positionType':\n            case name === 'overflow':\n            case name === 'display':\n            case name === 'justifyContent':\n                return this.enums[name][this.data[name]];\n            default:\n                return this.data[name];\n        }\n    }\n}\nYoga.DEFINITION = new built_1.ComponentControllerDefinition(\n/* Name */ \"ui-yoga\", \n/* Schema */ {\n    alignContent: { default: 'flex-start' },\n    alignItems: { default: 'auto' },\n    alignSelf: { default: 'auto' },\n    display: { default: 'default' },\n    flex: { type: 'number', default: 1 },\n    flexDirection: { default: 'row' },\n    flexWrap: { default: 'default' },\n    aspectRatio: { default: 'default' },\n    overflow: { default: 'default' },\n    justifyContent: { default: 'start' },\n    border: { type: 'int', default: 0 },\n    borderLeft: { type: 'int', default: 0 },\n    borderRight: { type: 'int', default: 0 },\n    borderTop: { type: 'int', default: 0 },\n    borderBottom: { type: 'int', default: 0 },\n    padding: { type: 'int', default: 0 },\n    paddingLeft: { type: 'int', default: 0 },\n    paddingRight: { type: 'int', default: 0 },\n    paddingTop: { type: 'int', default: 0 },\n    paddingBottom: { type: 'int', default: 0 },\n    margin: { type: 'int', default: 0 },\n    marginLeft: { type: 'int', default: 0 },\n    marginRight: { type: 'int', default: 0 },\n    marginTop: { type: 'int', default: 0 },\n    marginBottom: { type: 'int', default: 0 },\n    marginAuto: { type: 'boolean', default: false },\n    marginAutoLeft: { type: 'boolean', default: false },\n    marginAutoRight: { type: 'boolean', default: false },\n    marginAutoTop: { type: 'boolean', default: false },\n    marginAutoBottom: { type: 'boolean', default: false },\n    marginPercent: { type: 'number', default: 0 },\n    marginPercentLeft: { type: 'int', default: 0 },\n    marginPercentRight: { type: 'int', default: 0 },\n    marginPercentTop: { type: 'int', default: 0 },\n    marginPercentBottom: { type: 'int', default: 0 },\n    flexBasis: { default: 'default' },\n    flexBasisPercent: { type: 'number', default: 0 },\n    flexGrow: { type: 'number', default: 0 },\n    flexShrink: { type: 'number', default: 1 },\n    maxHeight: { default: 'default' },\n    minHeight: { default: 'default' },\n    maxWidth: { default: 'default' },\n    minWidth: { default: 'default' },\n    maxHeightPercent: { default: 'default' },\n    minHeightPercent: { default: 'default' },\n    maxWidthPercent: { default: 'default' },\n    minWidthPercent: { default: 'default' },\n    position: { default: 'default' },\n    positionLeft: { type: 'int', default: 0 },\n    positionRight: { type: 'int', default: 0 },\n    positionTop: { type: 'int', default: 0 },\n    positionBottom: { type: 'int', default: 0 },\n    positionPercent: { default: 'default' },\n    positionPercentLeft: { type: 'int', default: 0 },\n    positionPercentRight: { type: 'int', default: 0 },\n    positionPercentTop: { type: 'int', default: 0 },\n    positionPercentBottom: { type: 'int', default: 0 },\n    width: { default: 'default' },\n    height: { default: 'default' },\n    widthAuto: { type: 'boolean', default: false },\n    heightAuto: { type: 'boolean', default: false },\n    widthPercent: { default: 'default' },\n    heightPercent: { default: 'default' },\n}, \n/* Multiple */ false, \n/* Receive ticks */ false, \n/* Factory function */ (component, entity, data) => new Yoga(component, entity, data));\nexports.Yoga = Yoga;\n//# sourceMappingURL=Yoga.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/Yoga.js\n");

/***/ }),

/***/ "./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/primitives/button.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/primitives/button.js ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nconst aframe_1 = __importDefault(__webpack_require__(/*! aframe */ \"aframe\"));\nmodule.exports = aframe_1.default.registerPrimitive('a-ui-button', aframe_1.default.utils.extendDeep({}, aframe_1.default.primitives.getMeshMixin(), {\n    defaultComponents: {\n        geometry: {\n            primitive: 'plane',\n            width: 0.5,\n            height: 0.175\n        },\n        material: {\n            color: '#009688',\n            shader: 'flat',\n        },\n        \"ui-btn\": {},\n        \"ui-rounded\": { borderRadius: 0.0025 },\n        \"ui-ripple\": { size: { x: 0.5, y: 0.175 }, clampToSquare: true, zIndex: 0.001 },\n        text: {\n            font: 'roboto',\n            align: 'center',\n            zOffset: 0.002,\n            wrapCount: 10,\n            alphaTest: 0.4\n        }\n    },\n    mappings: {\n        height: 'geometry.height',\n        width: 'geometry.width',\n        color: 'material.color',\n        transparent: 'material.transparent',\n        \"font-color\": 'text.color',\n        \"ripple-color\": 'ui-ripple.color',\n        \"ripple-size\": 'ui-ripple.size',\n        \"ripple-z-index\": 'ui-ripple.zIndex',\n        \"text-value\": 'text.value',\n        \"wrap-count\": 'text.wrapCount',\n        \"border-radius\": \"ui-rounded.borderRadius\",\n        \"curve-segments\": \"ui-rounded.curveSegments\",\n        disabled: 'ui-btn.disabled',\n        \"hover-height\": 'ui-btn.hoverHeight',\n        \"active-height\": 'ui-btn.activeHeight',\n        \"prevent-updates\": 'ui-btn.preventUpdates'\n    }\n}));\n//# sourceMappingURL=button.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHRsYXVra2FuL2FmcmFtZS1tYXRlcmlhbC1jb2xsZWN0aW9uLXRzL2J1aWx0L3NyYy9wcmltaXRpdmVzL2J1dHRvbi5qcz9mNDZkIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw0Q0FBNEM7QUFDNUM7QUFDQSxpQ0FBaUMsbUJBQU8sQ0FBQyxzQkFBUTtBQUNqRCx1R0FBdUc7QUFDdkc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Qsb0JBQW9CO0FBQ3BCLHVCQUF1Qix1QkFBdUI7QUFDOUMsc0JBQXNCLFFBQVEsbUJBQW1CLHNDQUFzQztBQUN2RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRsYXVra2FuL2FmcmFtZS1tYXRlcmlhbC1jb2xsZWN0aW9uLXRzL2J1aWx0L3NyYy9wcmltaXRpdmVzL2J1dHRvbi5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuY29uc3QgYWZyYW1lXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcImFmcmFtZVwiKSk7XG5tb2R1bGUuZXhwb3J0cyA9IGFmcmFtZV8xLmRlZmF1bHQucmVnaXN0ZXJQcmltaXRpdmUoJ2EtdWktYnV0dG9uJywgYWZyYW1lXzEuZGVmYXVsdC51dGlscy5leHRlbmREZWVwKHt9LCBhZnJhbWVfMS5kZWZhdWx0LnByaW1pdGl2ZXMuZ2V0TWVzaE1peGluKCksIHtcbiAgICBkZWZhdWx0Q29tcG9uZW50czoge1xuICAgICAgICBnZW9tZXRyeToge1xuICAgICAgICAgICAgcHJpbWl0aXZlOiAncGxhbmUnLFxuICAgICAgICAgICAgd2lkdGg6IDAuNSxcbiAgICAgICAgICAgIGhlaWdodDogMC4xNzVcbiAgICAgICAgfSxcbiAgICAgICAgbWF0ZXJpYWw6IHtcbiAgICAgICAgICAgIGNvbG9yOiAnIzAwOTY4OCcsXG4gICAgICAgICAgICBzaGFkZXI6ICdmbGF0JyxcbiAgICAgICAgfSxcbiAgICAgICAgXCJ1aS1idG5cIjoge30sXG4gICAgICAgIFwidWktcm91bmRlZFwiOiB7IGJvcmRlclJhZGl1czogMC4wMDI1IH0sXG4gICAgICAgIFwidWktcmlwcGxlXCI6IHsgc2l6ZTogeyB4OiAwLjUsIHk6IDAuMTc1IH0sIGNsYW1wVG9TcXVhcmU6IHRydWUsIHpJbmRleDogMC4wMDEgfSxcbiAgICAgICAgdGV4dDoge1xuICAgICAgICAgICAgZm9udDogJ3JvYm90bycsXG4gICAgICAgICAgICBhbGlnbjogJ2NlbnRlcicsXG4gICAgICAgICAgICB6T2Zmc2V0OiAwLjAwMixcbiAgICAgICAgICAgIHdyYXBDb3VudDogMTAsXG4gICAgICAgICAgICBhbHBoYVRlc3Q6IDAuNFxuICAgICAgICB9XG4gICAgfSxcbiAgICBtYXBwaW5nczoge1xuICAgICAgICBoZWlnaHQ6ICdnZW9tZXRyeS5oZWlnaHQnLFxuICAgICAgICB3aWR0aDogJ2dlb21ldHJ5LndpZHRoJyxcbiAgICAgICAgY29sb3I6ICdtYXRlcmlhbC5jb2xvcicsXG4gICAgICAgIHRyYW5zcGFyZW50OiAnbWF0ZXJpYWwudHJhbnNwYXJlbnQnLFxuICAgICAgICBcImZvbnQtY29sb3JcIjogJ3RleHQuY29sb3InLFxuICAgICAgICBcInJpcHBsZS1jb2xvclwiOiAndWktcmlwcGxlLmNvbG9yJyxcbiAgICAgICAgXCJyaXBwbGUtc2l6ZVwiOiAndWktcmlwcGxlLnNpemUnLFxuICAgICAgICBcInJpcHBsZS16LWluZGV4XCI6ICd1aS1yaXBwbGUuekluZGV4JyxcbiAgICAgICAgXCJ0ZXh0LXZhbHVlXCI6ICd0ZXh0LnZhbHVlJyxcbiAgICAgICAgXCJ3cmFwLWNvdW50XCI6ICd0ZXh0LndyYXBDb3VudCcsXG4gICAgICAgIFwiYm9yZGVyLXJhZGl1c1wiOiBcInVpLXJvdW5kZWQuYm9yZGVyUmFkaXVzXCIsXG4gICAgICAgIFwiY3VydmUtc2VnbWVudHNcIjogXCJ1aS1yb3VuZGVkLmN1cnZlU2VnbWVudHNcIixcbiAgICAgICAgZGlzYWJsZWQ6ICd1aS1idG4uZGlzYWJsZWQnLFxuICAgICAgICBcImhvdmVyLWhlaWdodFwiOiAndWktYnRuLmhvdmVySGVpZ2h0JyxcbiAgICAgICAgXCJhY3RpdmUtaGVpZ2h0XCI6ICd1aS1idG4uYWN0aXZlSGVpZ2h0JyxcbiAgICAgICAgXCJwcmV2ZW50LXVwZGF0ZXNcIjogJ3VpLWJ0bi5wcmV2ZW50VXBkYXRlcydcbiAgICB9XG59KSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1idXR0b24uanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/primitives/button.js\n");

/***/ }),

/***/ "./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/primitives/checkbox.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/primitives/checkbox.js ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nconst aframe_1 = __importDefault(__webpack_require__(/*! aframe */ \"aframe\"));\nmodule.exports = aframe_1.default.registerPrimitive('a-ui-checkbox', aframe_1.default.utils.extendDeep({}, aframe_1.default.primitives.getMeshMixin(), {\n    defaultComponents: {\n        \"ui-checkbox\": {},\n        \"ui-ripple\": {\n            size: { x: 0.1, y: 0.1 },\n            zIndex: -0.001,\n            color: '#afafaf'\n        }\n    },\n    mappings: {\n        value: 'ui-checkbox.value',\n        disabled: 'ui-checkbox.disabled',\n        indeterminate: 'ui-checkbox.indeterminate'\n    }\n}));\n//# sourceMappingURL=checkbox.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHRsYXVra2FuL2FmcmFtZS1tYXRlcmlhbC1jb2xsZWN0aW9uLXRzL2J1aWx0L3NyYy9wcmltaXRpdmVzL2NoZWNrYm94LmpzPzlkY2QiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLDRDQUE0QztBQUM1QztBQUNBLGlDQUFpQyxtQkFBTyxDQUFDLHNCQUFRO0FBQ2pELHlHQUF5RztBQUN6RztBQUNBLHlCQUF5QjtBQUN6QjtBQUNBLG1CQUFtQixpQkFBaUI7QUFDcEM7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRsYXVra2FuL2FmcmFtZS1tYXRlcmlhbC1jb2xsZWN0aW9uLXRzL2J1aWx0L3NyYy9wcmltaXRpdmVzL2NoZWNrYm94LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcbn07XG5jb25zdCBhZnJhbWVfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiYWZyYW1lXCIpKTtcbm1vZHVsZS5leHBvcnRzID0gYWZyYW1lXzEuZGVmYXVsdC5yZWdpc3RlclByaW1pdGl2ZSgnYS11aS1jaGVja2JveCcsIGFmcmFtZV8xLmRlZmF1bHQudXRpbHMuZXh0ZW5kRGVlcCh7fSwgYWZyYW1lXzEuZGVmYXVsdC5wcmltaXRpdmVzLmdldE1lc2hNaXhpbigpLCB7XG4gICAgZGVmYXVsdENvbXBvbmVudHM6IHtcbiAgICAgICAgXCJ1aS1jaGVja2JveFwiOiB7fSxcbiAgICAgICAgXCJ1aS1yaXBwbGVcIjoge1xuICAgICAgICAgICAgc2l6ZTogeyB4OiAwLjEsIHk6IDAuMSB9LFxuICAgICAgICAgICAgekluZGV4OiAtMC4wMDEsXG4gICAgICAgICAgICBjb2xvcjogJyNhZmFmYWYnXG4gICAgICAgIH1cbiAgICB9LFxuICAgIG1hcHBpbmdzOiB7XG4gICAgICAgIHZhbHVlOiAndWktY2hlY2tib3gudmFsdWUnLFxuICAgICAgICBkaXNhYmxlZDogJ3VpLWNoZWNrYm94LmRpc2FibGVkJyxcbiAgICAgICAgaW5kZXRlcm1pbmF0ZTogJ3VpLWNoZWNrYm94LmluZGV0ZXJtaW5hdGUnXG4gICAgfVxufSkpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2hlY2tib3guanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/primitives/checkbox.js\n");

/***/ }),

/***/ "./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/primitives/fab_button.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/primitives/fab_button.js ***!
  \*************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nconst aframe_1 = __importDefault(__webpack_require__(/*! aframe */ \"aframe\"));\nmodule.exports = aframe_1.default.registerPrimitive('a-ui-fab-button', aframe_1.default.utils.extendDeep({}, aframe_1.default.primitives.getMeshMixin(), {\n    defaultComponents: {\n        geometry: {\n            primitive: 'circle',\n            radius: 0.1,\n            segments: 6\n        },\n        material: {\n            color: '#009688',\n            shader: 'flat',\n        },\n        \"ui-btn\": {},\n        \"ui-ripple\": { size: { x: 0.1, y: 0.1 }, zIndex: 0.002, fadeDelay: 300, duration: 500 },\n        \"ui-icon\": { size: { x: 0.105, y: 0.105 } }\n    },\n    mappings: {\n        radius: 'geometry.radius',\n        color: 'material.color',\n        \"icon-color\": 'ui-icon.color',\n        transparent: 'material.transparent',\n        src: 'ui-icon.src',\n        \"ripple-color\": 'ui-ripple.color',\n        \"ripple-size\": 'ui-ripple.size',\n        \"ripple-z-index\": 'ui-ripple.zIndex',\n        disabled: 'ui-btn.disabled',\n        coords: 'ui-icon.spriteCoords'\n    }\n}));\n//# sourceMappingURL=fab_button.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHRsYXVra2FuL2FmcmFtZS1tYXRlcmlhbC1jb2xsZWN0aW9uLXRzL2J1aWx0L3NyYy9wcmltaXRpdmVzL2ZhYl9idXR0b24uanM/ZTAzMiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsNENBQTRDO0FBQzVDO0FBQ0EsaUNBQWlDLG1CQUFPLENBQUMsc0JBQVE7QUFDakQsMkdBQTJHO0FBQzNHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULG9CQUFvQjtBQUNwQixzQkFBc0IsUUFBUSxpQkFBaUIsZ0RBQWdEO0FBQy9GLG9CQUFvQixRQUFRLHFCQUFxQjtBQUNqRCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0B0bGF1a2thbi9hZnJhbWUtbWF0ZXJpYWwtY29sbGVjdGlvbi10cy9idWlsdC9zcmMvcHJpbWl0aXZlcy9mYWJfYnV0dG9uLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcbn07XG5jb25zdCBhZnJhbWVfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiYWZyYW1lXCIpKTtcbm1vZHVsZS5leHBvcnRzID0gYWZyYW1lXzEuZGVmYXVsdC5yZWdpc3RlclByaW1pdGl2ZSgnYS11aS1mYWItYnV0dG9uJywgYWZyYW1lXzEuZGVmYXVsdC51dGlscy5leHRlbmREZWVwKHt9LCBhZnJhbWVfMS5kZWZhdWx0LnByaW1pdGl2ZXMuZ2V0TWVzaE1peGluKCksIHtcbiAgICBkZWZhdWx0Q29tcG9uZW50czoge1xuICAgICAgICBnZW9tZXRyeToge1xuICAgICAgICAgICAgcHJpbWl0aXZlOiAnY2lyY2xlJyxcbiAgICAgICAgICAgIHJhZGl1czogMC4xLFxuICAgICAgICAgICAgc2VnbWVudHM6IDZcbiAgICAgICAgfSxcbiAgICAgICAgbWF0ZXJpYWw6IHtcbiAgICAgICAgICAgIGNvbG9yOiAnIzAwOTY4OCcsXG4gICAgICAgICAgICBzaGFkZXI6ICdmbGF0JyxcbiAgICAgICAgfSxcbiAgICAgICAgXCJ1aS1idG5cIjoge30sXG4gICAgICAgIFwidWktcmlwcGxlXCI6IHsgc2l6ZTogeyB4OiAwLjEsIHk6IDAuMSB9LCB6SW5kZXg6IDAuMDAyLCBmYWRlRGVsYXk6IDMwMCwgZHVyYXRpb246IDUwMCB9LFxuICAgICAgICBcInVpLWljb25cIjogeyBzaXplOiB7IHg6IDAuMTA1LCB5OiAwLjEwNSB9IH1cbiAgICB9LFxuICAgIG1hcHBpbmdzOiB7XG4gICAgICAgIHJhZGl1czogJ2dlb21ldHJ5LnJhZGl1cycsXG4gICAgICAgIGNvbG9yOiAnbWF0ZXJpYWwuY29sb3InLFxuICAgICAgICBcImljb24tY29sb3JcIjogJ3VpLWljb24uY29sb3InLFxuICAgICAgICB0cmFuc3BhcmVudDogJ21hdGVyaWFsLnRyYW5zcGFyZW50JyxcbiAgICAgICAgc3JjOiAndWktaWNvbi5zcmMnLFxuICAgICAgICBcInJpcHBsZS1jb2xvclwiOiAndWktcmlwcGxlLmNvbG9yJyxcbiAgICAgICAgXCJyaXBwbGUtc2l6ZVwiOiAndWktcmlwcGxlLnNpemUnLFxuICAgICAgICBcInJpcHBsZS16LWluZGV4XCI6ICd1aS1yaXBwbGUuekluZGV4JyxcbiAgICAgICAgZGlzYWJsZWQ6ICd1aS1idG4uZGlzYWJsZWQnLFxuICAgICAgICBjb29yZHM6ICd1aS1pY29uLnNwcml0ZUNvb3JkcydcbiAgICB9XG59KSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1mYWJfYnV0dG9uLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/primitives/fab_button.js\n");

/***/ }),

/***/ "./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/primitives/input-text.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/primitives/input-text.js ***!
  \*************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nconst aframe_1 = __importDefault(__webpack_require__(/*! aframe */ \"aframe\"));\nmodule.exports = aframe_1.default.registerPrimitive('a-ui-input-text', aframe_1.default.utils.extendDeep({}, aframe_1.default.primitives.getMeshMixin(), {\n    defaultComponents: {\n        \"ui-input-text\": {\n            placeHolder: 'Text...',\n            width: 1,\n            height: 0.2,\n            value: ''\n        },\n        \"ui-double-click\": {}\n    },\n    mappings: {\n        width: \"ui-input-text.width\",\n        height: \"ui-input-text.height\",\n        type: \"ui-input-text.type\",\n        value: \"ui-input-text.value\",\n        \"background-color\": \"ui-input-text.backgroundColor\",\n        \"place-holder\": \"ui-input-text.placeHolder\",\n        \"camera-el\": \"ui-input-text.cameraEl\",\n        \"rig-el\": \"ui-input-text.rigEl\",\n        \"tab-next\": \"ui-input-text.tabNext\",\n        \"look-controls-component\": \"ui-input-text.lookControlsComponent\",\n        \"wasd-controls-component\": \"ui-input-text.wasdControlsComponent\",\n    }\n}));\n//# sourceMappingURL=input-text.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHRsYXVra2FuL2FmcmFtZS1tYXRlcmlhbC1jb2xsZWN0aW9uLXRzL2J1aWx0L3NyYy9wcmltaXRpdmVzL2lucHV0LXRleHQuanM/ODUzNCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsNENBQTRDO0FBQzVDO0FBQ0EsaUNBQWlDLG1CQUFPLENBQUMsc0JBQVE7QUFDakQsMkdBQTJHO0FBQzNHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9AdGxhdWtrYW4vYWZyYW1lLW1hdGVyaWFsLWNvbGxlY3Rpb24tdHMvYnVpbHQvc3JjL3ByaW1pdGl2ZXMvaW5wdXQtdGV4dC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuY29uc3QgYWZyYW1lXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcImFmcmFtZVwiKSk7XG5tb2R1bGUuZXhwb3J0cyA9IGFmcmFtZV8xLmRlZmF1bHQucmVnaXN0ZXJQcmltaXRpdmUoJ2EtdWktaW5wdXQtdGV4dCcsIGFmcmFtZV8xLmRlZmF1bHQudXRpbHMuZXh0ZW5kRGVlcCh7fSwgYWZyYW1lXzEuZGVmYXVsdC5wcmltaXRpdmVzLmdldE1lc2hNaXhpbigpLCB7XG4gICAgZGVmYXVsdENvbXBvbmVudHM6IHtcbiAgICAgICAgXCJ1aS1pbnB1dC10ZXh0XCI6IHtcbiAgICAgICAgICAgIHBsYWNlSG9sZGVyOiAnVGV4dC4uLicsXG4gICAgICAgICAgICB3aWR0aDogMSxcbiAgICAgICAgICAgIGhlaWdodDogMC4yLFxuICAgICAgICAgICAgdmFsdWU6ICcnXG4gICAgICAgIH0sXG4gICAgICAgIFwidWktZG91YmxlLWNsaWNrXCI6IHt9XG4gICAgfSxcbiAgICBtYXBwaW5nczoge1xuICAgICAgICB3aWR0aDogXCJ1aS1pbnB1dC10ZXh0LndpZHRoXCIsXG4gICAgICAgIGhlaWdodDogXCJ1aS1pbnB1dC10ZXh0LmhlaWdodFwiLFxuICAgICAgICB0eXBlOiBcInVpLWlucHV0LXRleHQudHlwZVwiLFxuICAgICAgICB2YWx1ZTogXCJ1aS1pbnB1dC10ZXh0LnZhbHVlXCIsXG4gICAgICAgIFwiYmFja2dyb3VuZC1jb2xvclwiOiBcInVpLWlucHV0LXRleHQuYmFja2dyb3VuZENvbG9yXCIsXG4gICAgICAgIFwicGxhY2UtaG9sZGVyXCI6IFwidWktaW5wdXQtdGV4dC5wbGFjZUhvbGRlclwiLFxuICAgICAgICBcImNhbWVyYS1lbFwiOiBcInVpLWlucHV0LXRleHQuY2FtZXJhRWxcIixcbiAgICAgICAgXCJyaWctZWxcIjogXCJ1aS1pbnB1dC10ZXh0LnJpZ0VsXCIsXG4gICAgICAgIFwidGFiLW5leHRcIjogXCJ1aS1pbnB1dC10ZXh0LnRhYk5leHRcIixcbiAgICAgICAgXCJsb29rLWNvbnRyb2xzLWNvbXBvbmVudFwiOiBcInVpLWlucHV0LXRleHQubG9va0NvbnRyb2xzQ29tcG9uZW50XCIsXG4gICAgICAgIFwid2FzZC1jb250cm9scy1jb21wb25lbnRcIjogXCJ1aS1pbnB1dC10ZXh0Lndhc2RDb250cm9sc0NvbXBvbmVudFwiLFxuICAgIH1cbn0pKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWlucHV0LXRleHQuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/primitives/input-text.js\n");

/***/ }),

/***/ "./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/primitives/int-input.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/primitives/int-input.js ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nconst aframe_1 = __importDefault(__webpack_require__(/*! aframe */ \"aframe\"));\nmodule.exports = aframe_1.default.registerPrimitive('a-ui-int-input', aframe_1.default.utils.extendDeep({}, aframe_1.default.primitives.getMeshMixin(), {\n    defaultComponents: {\n        \"ui-text\": {\n            type: 'int',\n            placeHolder: 'Whole Number...'\n        },\n        \"ui-double-click\": {}\n    },\n    mappings: {\n        width: \"ui-text.width\",\n        height: \"ui-text.height\",\n        value: \"ui-text.value\",\n        \"place-holder\": \"ui-text.placeHolder\"\n    }\n}));\n//# sourceMappingURL=int-input.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHRsYXVra2FuL2FmcmFtZS1tYXRlcmlhbC1jb2xsZWN0aW9uLXRzL2J1aWx0L3NyYy9wcmltaXRpdmVzL2ludC1pbnB1dC5qcz80ZmMxIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw0Q0FBNEM7QUFDNUM7QUFDQSxpQ0FBaUMsbUJBQU8sQ0FBQyxzQkFBUTtBQUNqRCwwR0FBMEc7QUFDMUc7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0B0bGF1a2thbi9hZnJhbWUtbWF0ZXJpYWwtY29sbGVjdGlvbi10cy9idWlsdC9zcmMvcHJpbWl0aXZlcy9pbnQtaW5wdXQuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbmNvbnN0IGFmcmFtZV8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCJhZnJhbWVcIikpO1xubW9kdWxlLmV4cG9ydHMgPSBhZnJhbWVfMS5kZWZhdWx0LnJlZ2lzdGVyUHJpbWl0aXZlKCdhLXVpLWludC1pbnB1dCcsIGFmcmFtZV8xLmRlZmF1bHQudXRpbHMuZXh0ZW5kRGVlcCh7fSwgYWZyYW1lXzEuZGVmYXVsdC5wcmltaXRpdmVzLmdldE1lc2hNaXhpbigpLCB7XG4gICAgZGVmYXVsdENvbXBvbmVudHM6IHtcbiAgICAgICAgXCJ1aS10ZXh0XCI6IHtcbiAgICAgICAgICAgIHR5cGU6ICdpbnQnLFxuICAgICAgICAgICAgcGxhY2VIb2xkZXI6ICdXaG9sZSBOdW1iZXIuLi4nXG4gICAgICAgIH0sXG4gICAgICAgIFwidWktZG91YmxlLWNsaWNrXCI6IHt9XG4gICAgfSxcbiAgICBtYXBwaW5nczoge1xuICAgICAgICB3aWR0aDogXCJ1aS10ZXh0LndpZHRoXCIsXG4gICAgICAgIGhlaWdodDogXCJ1aS10ZXh0LmhlaWdodFwiLFxuICAgICAgICB2YWx1ZTogXCJ1aS10ZXh0LnZhbHVlXCIsXG4gICAgICAgIFwicGxhY2UtaG9sZGVyXCI6IFwidWktdGV4dC5wbGFjZUhvbGRlclwiXG4gICAgfVxufSkpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW50LWlucHV0LmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/primitives/int-input.js\n");

/***/ }),

/***/ "./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/primitives/number-input.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/primitives/number-input.js ***!
  \***************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nconst aframe_1 = __importDefault(__webpack_require__(/*! aframe */ \"aframe\"));\nmodule.exports = aframe_1.default.registerPrimitive('a-ui-number-input', aframe_1.default.utils.extendDeep({}, aframe_1.default.primitives.getMeshMixin(), {\n    defaultComponents: {\n        \"ui-text\": {\n            type: 'number',\n            placeHolder: 'Number...'\n        },\n        \"ui-double-click\": {}\n    },\n    mappings: {\n        width: \"ui-text.width\",\n        height: \"ui-text.height\",\n        value: \"ui-text.value\",\n        \"place-holder\": \"ui-text.placeHolder\"\n    }\n}));\n//# sourceMappingURL=number-input.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHRsYXVra2FuL2FmcmFtZS1tYXRlcmlhbC1jb2xsZWN0aW9uLXRzL2J1aWx0L3NyYy9wcmltaXRpdmVzL251bWJlci1pbnB1dC5qcz9jNmI3Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw0Q0FBNEM7QUFDNUM7QUFDQSxpQ0FBaUMsbUJBQU8sQ0FBQyxzQkFBUTtBQUNqRCw2R0FBNkc7QUFDN0c7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0B0bGF1a2thbi9hZnJhbWUtbWF0ZXJpYWwtY29sbGVjdGlvbi10cy9idWlsdC9zcmMvcHJpbWl0aXZlcy9udW1iZXItaW5wdXQuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbmNvbnN0IGFmcmFtZV8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCJhZnJhbWVcIikpO1xubW9kdWxlLmV4cG9ydHMgPSBhZnJhbWVfMS5kZWZhdWx0LnJlZ2lzdGVyUHJpbWl0aXZlKCdhLXVpLW51bWJlci1pbnB1dCcsIGFmcmFtZV8xLmRlZmF1bHQudXRpbHMuZXh0ZW5kRGVlcCh7fSwgYWZyYW1lXzEuZGVmYXVsdC5wcmltaXRpdmVzLmdldE1lc2hNaXhpbigpLCB7XG4gICAgZGVmYXVsdENvbXBvbmVudHM6IHtcbiAgICAgICAgXCJ1aS10ZXh0XCI6IHtcbiAgICAgICAgICAgIHR5cGU6ICdudW1iZXInLFxuICAgICAgICAgICAgcGxhY2VIb2xkZXI6ICdOdW1iZXIuLi4nXG4gICAgICAgIH0sXG4gICAgICAgIFwidWktZG91YmxlLWNsaWNrXCI6IHt9XG4gICAgfSxcbiAgICBtYXBwaW5nczoge1xuICAgICAgICB3aWR0aDogXCJ1aS10ZXh0LndpZHRoXCIsXG4gICAgICAgIGhlaWdodDogXCJ1aS10ZXh0LmhlaWdodFwiLFxuICAgICAgICB2YWx1ZTogXCJ1aS10ZXh0LnZhbHVlXCIsXG4gICAgICAgIFwicGxhY2UtaG9sZGVyXCI6IFwidWktdGV4dC5wbGFjZUhvbGRlclwiXG4gICAgfVxufSkpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bnVtYmVyLWlucHV0LmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/primitives/number-input.js\n");

/***/ }),

/***/ "./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/primitives/number.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/primitives/number.js ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nconst aframe_1 = __importDefault(__webpack_require__(/*! aframe */ \"aframe\"));\nmodule.exports = aframe_1.default.registerPrimitive('a-ui-number', aframe_1.default.utils.extendDeep({}, aframe_1.default.primitives.getMeshMixin(), {\n    defaultComponents: {\n        \"ui-number\": {}\n    },\n    mappings: {}\n}));\n//# sourceMappingURL=number.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHRsYXVra2FuL2FmcmFtZS1tYXRlcmlhbC1jb2xsZWN0aW9uLXRzL2J1aWx0L3NyYy9wcmltaXRpdmVzL251bWJlci5qcz80ZTRkIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw0Q0FBNEM7QUFDNUM7QUFDQSxpQ0FBaUMsbUJBQU8sQ0FBQyxzQkFBUTtBQUNqRCx1R0FBdUc7QUFDdkc7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLENBQUM7QUFDRCIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9AdGxhdWtrYW4vYWZyYW1lLW1hdGVyaWFsLWNvbGxlY3Rpb24tdHMvYnVpbHQvc3JjL3ByaW1pdGl2ZXMvbnVtYmVyLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcbn07XG5jb25zdCBhZnJhbWVfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiYWZyYW1lXCIpKTtcbm1vZHVsZS5leHBvcnRzID0gYWZyYW1lXzEuZGVmYXVsdC5yZWdpc3RlclByaW1pdGl2ZSgnYS11aS1udW1iZXInLCBhZnJhbWVfMS5kZWZhdWx0LnV0aWxzLmV4dGVuZERlZXAoe30sIGFmcmFtZV8xLmRlZmF1bHQucHJpbWl0aXZlcy5nZXRNZXNoTWl4aW4oKSwge1xuICAgIGRlZmF1bHRDb21wb25lbnRzOiB7XG4gICAgICAgIFwidWktbnVtYmVyXCI6IHt9XG4gICAgfSxcbiAgICBtYXBwaW5nczoge31cbn0pKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW51bWJlci5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/primitives/number.js\n");

/***/ }),

/***/ "./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/primitives/password-input.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/primitives/password-input.js ***!
  \*****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nconst aframe_1 = __importDefault(__webpack_require__(/*! aframe */ \"aframe\"));\nmodule.exports = aframe_1.default.registerPrimitive('a-ui-password-input', aframe_1.default.utils.extendDeep({}, aframe_1.default.primitives.getMeshMixin(), {\n    defaultComponents: {\n        \"ui-text\": {\n            type: 'password',\n            placeHolder: ''\n        },\n        \"ui-double-click\": {}\n    },\n    mappings: {\n        width: \"ui-text.width\",\n        height: \"ui-text.height\",\n        value: \"ui-text.value\",\n        \"place-holder\": \"ui-text.placeHolder\"\n    }\n}));\n//# sourceMappingURL=password-input.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHRsYXVra2FuL2FmcmFtZS1tYXRlcmlhbC1jb2xsZWN0aW9uLXRzL2J1aWx0L3NyYy9wcmltaXRpdmVzL3Bhc3N3b3JkLWlucHV0LmpzP2RjZTAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLDRDQUE0QztBQUM1QztBQUNBLGlDQUFpQyxtQkFBTyxDQUFDLHNCQUFRO0FBQ2pELCtHQUErRztBQUMvRztBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRsYXVra2FuL2FmcmFtZS1tYXRlcmlhbC1jb2xsZWN0aW9uLXRzL2J1aWx0L3NyYy9wcmltaXRpdmVzL3Bhc3N3b3JkLWlucHV0LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcbn07XG5jb25zdCBhZnJhbWVfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiYWZyYW1lXCIpKTtcbm1vZHVsZS5leHBvcnRzID0gYWZyYW1lXzEuZGVmYXVsdC5yZWdpc3RlclByaW1pdGl2ZSgnYS11aS1wYXNzd29yZC1pbnB1dCcsIGFmcmFtZV8xLmRlZmF1bHQudXRpbHMuZXh0ZW5kRGVlcCh7fSwgYWZyYW1lXzEuZGVmYXVsdC5wcmltaXRpdmVzLmdldE1lc2hNaXhpbigpLCB7XG4gICAgZGVmYXVsdENvbXBvbmVudHM6IHtcbiAgICAgICAgXCJ1aS10ZXh0XCI6IHtcbiAgICAgICAgICAgIHR5cGU6ICdwYXNzd29yZCcsXG4gICAgICAgICAgICBwbGFjZUhvbGRlcjogJydcbiAgICAgICAgfSxcbiAgICAgICAgXCJ1aS1kb3VibGUtY2xpY2tcIjoge31cbiAgICB9LFxuICAgIG1hcHBpbmdzOiB7XG4gICAgICAgIHdpZHRoOiBcInVpLXRleHQud2lkdGhcIixcbiAgICAgICAgaGVpZ2h0OiBcInVpLXRleHQuaGVpZ2h0XCIsXG4gICAgICAgIHZhbHVlOiBcInVpLXRleHQudmFsdWVcIixcbiAgICAgICAgXCJwbGFjZS1ob2xkZXJcIjogXCJ1aS10ZXh0LnBsYWNlSG9sZGVyXCJcbiAgICB9XG59KSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wYXNzd29yZC1pbnB1dC5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/primitives/password-input.js\n");

/***/ }),

/***/ "./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/primitives/radio.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/primitives/radio.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nconst aframe_1 = __importDefault(__webpack_require__(/*! aframe */ \"aframe\"));\nmodule.exports = aframe_1.default.registerPrimitive('a-ui-radio', aframe_1.default.utils.extendDeep({}, aframe_1.default.primitives.getMeshMixin(), {\n    defaultComponents: {\n        \"ui-radio\": {},\n        \"geometry\": {\n            primitive: 'ring',\n            radiusInner: 0.0575,\n            radiusOuter: 0.0675,\n            segmentsTheta: 10\n        },\n        \"material\": {\n            shader: 'flat',\n            color: '#afafaf'\n        },\n        \"ui-ripple\": {\n            size: { x: 0.1, y: 0.1 },\n            zIndex: -0.001,\n            color: '#afafaf'\n        }\n    },\n    mappings: {\n        color: 'ui-radio.selectedColor',\n        value: 'ui-radio.value',\n        selected: 'ui-radio.selected',\n        disabled: 'ui-radio.disabled',\n    }\n}));\n//# sourceMappingURL=radio.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHRsYXVra2FuL2FmcmFtZS1tYXRlcmlhbC1jb2xsZWN0aW9uLXRzL2J1aWx0L3NyYy9wcmltaXRpdmVzL3JhZGlvLmpzP2E5ZWIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLDRDQUE0QztBQUM1QztBQUNBLGlDQUFpQyxtQkFBTyxDQUFDLHNCQUFRO0FBQ2pELHNHQUFzRztBQUN0RztBQUNBLHNCQUFzQjtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLG1CQUFtQixpQkFBaUI7QUFDcEM7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9AdGxhdWtrYW4vYWZyYW1lLW1hdGVyaWFsLWNvbGxlY3Rpb24tdHMvYnVpbHQvc3JjL3ByaW1pdGl2ZXMvcmFkaW8uanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbmNvbnN0IGFmcmFtZV8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCJhZnJhbWVcIikpO1xubW9kdWxlLmV4cG9ydHMgPSBhZnJhbWVfMS5kZWZhdWx0LnJlZ2lzdGVyUHJpbWl0aXZlKCdhLXVpLXJhZGlvJywgYWZyYW1lXzEuZGVmYXVsdC51dGlscy5leHRlbmREZWVwKHt9LCBhZnJhbWVfMS5kZWZhdWx0LnByaW1pdGl2ZXMuZ2V0TWVzaE1peGluKCksIHtcbiAgICBkZWZhdWx0Q29tcG9uZW50czoge1xuICAgICAgICBcInVpLXJhZGlvXCI6IHt9LFxuICAgICAgICBcImdlb21ldHJ5XCI6IHtcbiAgICAgICAgICAgIHByaW1pdGl2ZTogJ3JpbmcnLFxuICAgICAgICAgICAgcmFkaXVzSW5uZXI6IDAuMDU3NSxcbiAgICAgICAgICAgIHJhZGl1c091dGVyOiAwLjA2NzUsXG4gICAgICAgICAgICBzZWdtZW50c1RoZXRhOiAxMFxuICAgICAgICB9LFxuICAgICAgICBcIm1hdGVyaWFsXCI6IHtcbiAgICAgICAgICAgIHNoYWRlcjogJ2ZsYXQnLFxuICAgICAgICAgICAgY29sb3I6ICcjYWZhZmFmJ1xuICAgICAgICB9LFxuICAgICAgICBcInVpLXJpcHBsZVwiOiB7XG4gICAgICAgICAgICBzaXplOiB7IHg6IDAuMSwgeTogMC4xIH0sXG4gICAgICAgICAgICB6SW5kZXg6IC0wLjAwMSxcbiAgICAgICAgICAgIGNvbG9yOiAnI2FmYWZhZidcbiAgICAgICAgfVxuICAgIH0sXG4gICAgbWFwcGluZ3M6IHtcbiAgICAgICAgY29sb3I6ICd1aS1yYWRpby5zZWxlY3RlZENvbG9yJyxcbiAgICAgICAgdmFsdWU6ICd1aS1yYWRpby52YWx1ZScsXG4gICAgICAgIHNlbGVjdGVkOiAndWktcmFkaW8uc2VsZWN0ZWQnLFxuICAgICAgICBkaXNhYmxlZDogJ3VpLXJhZGlvLmRpc2FibGVkJyxcbiAgICB9XG59KSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1yYWRpby5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/primitives/radio.js\n");

/***/ }),

/***/ "./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/primitives/scroll-pane.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/primitives/scroll-pane.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nconst aframe_1 = __importDefault(__webpack_require__(/*! aframe */ \"aframe\"));\nmodule.exports = aframe_1.default.registerPrimitive('a-ui-scroll-pane', aframe_1.default.utils.extendDeep({}, aframe_1.default.primitives.getMeshMixin(), {\n    defaultComponents: {\n        \"ui-scroll-pane\": {}\n    },\n    mappings: {\n        width: \"ui-scroll-pane.width\",\n        height: \"ui-scroll-pane.height\",\n        \"scroll-z-offset\": \"ui-scroll-pane.scrollZOffset\",\n        \"handle-color\": \"ui-scroll-pane.scrollHandleColor\",\n        \"scroll-padding\": \"ui-scroll-pane.scrollPadding\",\n        \"look-controls-el\": \"ui-scroll-pane.cameraEl\",\n        \"look-controls-component\": \"ui-scroll-pane.lookControlsComponent\"\n    }\n}));\n//# sourceMappingURL=scroll-pane.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHRsYXVra2FuL2FmcmFtZS1tYXRlcmlhbC1jb2xsZWN0aW9uLXRzL2J1aWx0L3NyYy9wcmltaXRpdmVzL3Njcm9sbC1wYW5lLmpzP2U2OGMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLDRDQUE0QztBQUM1QztBQUNBLGlDQUFpQyxtQkFBTyxDQUFDLHNCQUFRO0FBQ2pELDRHQUE0RztBQUM1RztBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9AdGxhdWtrYW4vYWZyYW1lLW1hdGVyaWFsLWNvbGxlY3Rpb24tdHMvYnVpbHQvc3JjL3ByaW1pdGl2ZXMvc2Nyb2xsLXBhbmUuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbmNvbnN0IGFmcmFtZV8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCJhZnJhbWVcIikpO1xubW9kdWxlLmV4cG9ydHMgPSBhZnJhbWVfMS5kZWZhdWx0LnJlZ2lzdGVyUHJpbWl0aXZlKCdhLXVpLXNjcm9sbC1wYW5lJywgYWZyYW1lXzEuZGVmYXVsdC51dGlscy5leHRlbmREZWVwKHt9LCBhZnJhbWVfMS5kZWZhdWx0LnByaW1pdGl2ZXMuZ2V0TWVzaE1peGluKCksIHtcbiAgICBkZWZhdWx0Q29tcG9uZW50czoge1xuICAgICAgICBcInVpLXNjcm9sbC1wYW5lXCI6IHt9XG4gICAgfSxcbiAgICBtYXBwaW5nczoge1xuICAgICAgICB3aWR0aDogXCJ1aS1zY3JvbGwtcGFuZS53aWR0aFwiLFxuICAgICAgICBoZWlnaHQ6IFwidWktc2Nyb2xsLXBhbmUuaGVpZ2h0XCIsXG4gICAgICAgIFwic2Nyb2xsLXotb2Zmc2V0XCI6IFwidWktc2Nyb2xsLXBhbmUuc2Nyb2xsWk9mZnNldFwiLFxuICAgICAgICBcImhhbmRsZS1jb2xvclwiOiBcInVpLXNjcm9sbC1wYW5lLnNjcm9sbEhhbmRsZUNvbG9yXCIsXG4gICAgICAgIFwic2Nyb2xsLXBhZGRpbmdcIjogXCJ1aS1zY3JvbGwtcGFuZS5zY3JvbGxQYWRkaW5nXCIsXG4gICAgICAgIFwibG9vay1jb250cm9scy1lbFwiOiBcInVpLXNjcm9sbC1wYW5lLmNhbWVyYUVsXCIsXG4gICAgICAgIFwibG9vay1jb250cm9scy1jb21wb25lbnRcIjogXCJ1aS1zY3JvbGwtcGFuZS5sb29rQ29udHJvbHNDb21wb25lbnRcIlxuICAgIH1cbn0pKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNjcm9sbC1wYW5lLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/primitives/scroll-pane.js\n");

/***/ }),

/***/ "./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/primitives/slider.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/primitives/slider.js ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nconst aframe_1 = __importDefault(__webpack_require__(/*! aframe */ \"aframe\"));\nmodule.exports = aframe_1.default.registerPrimitive('a-ui-slider', aframe_1.default.utils.extendDeep({}, aframe_1.default.primitives.getMeshMixin(), {\n    defaultComponents: {\n        \"ui-slider\": {}\n    },\n    mappings: {\n        value: 'ui-slider.value',\n        disabled: 'ui-slider.disabled',\n        \"camera-el\": 'ui-slider.cameraEl'\n    }\n}));\n//# sourceMappingURL=slider.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHRsYXVra2FuL2FmcmFtZS1tYXRlcmlhbC1jb2xsZWN0aW9uLXRzL2J1aWx0L3NyYy9wcmltaXRpdmVzL3NsaWRlci5qcz81N2FlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw0Q0FBNEM7QUFDNUM7QUFDQSxpQ0FBaUMsbUJBQU8sQ0FBQyxzQkFBUTtBQUNqRCx1R0FBdUc7QUFDdkc7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0B0bGF1a2thbi9hZnJhbWUtbWF0ZXJpYWwtY29sbGVjdGlvbi10cy9idWlsdC9zcmMvcHJpbWl0aXZlcy9zbGlkZXIuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbmNvbnN0IGFmcmFtZV8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCJhZnJhbWVcIikpO1xubW9kdWxlLmV4cG9ydHMgPSBhZnJhbWVfMS5kZWZhdWx0LnJlZ2lzdGVyUHJpbWl0aXZlKCdhLXVpLXNsaWRlcicsIGFmcmFtZV8xLmRlZmF1bHQudXRpbHMuZXh0ZW5kRGVlcCh7fSwgYWZyYW1lXzEuZGVmYXVsdC5wcmltaXRpdmVzLmdldE1lc2hNaXhpbigpLCB7XG4gICAgZGVmYXVsdENvbXBvbmVudHM6IHtcbiAgICAgICAgXCJ1aS1zbGlkZXJcIjoge31cbiAgICB9LFxuICAgIG1hcHBpbmdzOiB7XG4gICAgICAgIHZhbHVlOiAndWktc2xpZGVyLnZhbHVlJyxcbiAgICAgICAgZGlzYWJsZWQ6ICd1aS1zbGlkZXIuZGlzYWJsZWQnLFxuICAgICAgICBcImNhbWVyYS1lbFwiOiAndWktc2xpZGVyLmNhbWVyYUVsJ1xuICAgIH1cbn0pKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNsaWRlci5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/primitives/slider.js\n");

/***/ }),

/***/ "./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/primitives/switch.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/primitives/switch.js ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nconst aframe_1 = __importDefault(__webpack_require__(/*! aframe */ \"aframe\"));\nmodule.exports = aframe_1.default.registerPrimitive('a-ui-switch', aframe_1.default.utils.extendDeep({}, aframe_1.default.primitives.getMeshMixin(), {\n    defaultComponents: {\n        \"ui-switch\": {}\n    },\n    mappings: {\n        value: 'ui-switch.value',\n        disabled: 'ui-switch.disabled',\n    }\n}));\n//# sourceMappingURL=switch.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHRsYXVra2FuL2FmcmFtZS1tYXRlcmlhbC1jb2xsZWN0aW9uLXRzL2J1aWx0L3NyYy9wcmltaXRpdmVzL3N3aXRjaC5qcz9lN2FjIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw0Q0FBNEM7QUFDNUM7QUFDQSxpQ0FBaUMsbUJBQU8sQ0FBQyxzQkFBUTtBQUNqRCx1R0FBdUc7QUFDdkc7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9AdGxhdWtrYW4vYWZyYW1lLW1hdGVyaWFsLWNvbGxlY3Rpb24tdHMvYnVpbHQvc3JjL3ByaW1pdGl2ZXMvc3dpdGNoLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcbn07XG5jb25zdCBhZnJhbWVfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiYWZyYW1lXCIpKTtcbm1vZHVsZS5leHBvcnRzID0gYWZyYW1lXzEuZGVmYXVsdC5yZWdpc3RlclByaW1pdGl2ZSgnYS11aS1zd2l0Y2gnLCBhZnJhbWVfMS5kZWZhdWx0LnV0aWxzLmV4dGVuZERlZXAoe30sIGFmcmFtZV8xLmRlZmF1bHQucHJpbWl0aXZlcy5nZXRNZXNoTWl4aW4oKSwge1xuICAgIGRlZmF1bHRDb21wb25lbnRzOiB7XG4gICAgICAgIFwidWktc3dpdGNoXCI6IHt9XG4gICAgfSxcbiAgICBtYXBwaW5nczoge1xuICAgICAgICB2YWx1ZTogJ3VpLXN3aXRjaC52YWx1ZScsXG4gICAgICAgIGRpc2FibGVkOiAndWktc3dpdGNoLmRpc2FibGVkJyxcbiAgICB9XG59KSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zd2l0Y2guanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/primitives/switch.js\n");

/***/ }),

/***/ "./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/primitives/text-input.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/primitives/text-input.js ***!
  \*************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nconst aframe_1 = __importDefault(__webpack_require__(/*! aframe */ \"aframe\"));\nmodule.exports = aframe_1.default.registerPrimitive('a-ui-text-input', aframe_1.default.utils.extendDeep({}, aframe_1.default.primitives.getMeshMixin(), {\n    defaultComponents: {\n        \"ui-text\": {\n            placeHolder: 'Text...'\n        },\n        \"ui-double-click\": {}\n    },\n    mappings: {\n        width: \"ui-text.width\",\n        height: \"ui-text.height\",\n        value: \"ui-text.value\",\n        \"place-holder\": \"ui-text.placeHolder\"\n    }\n}));\n//# sourceMappingURL=text-input.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHRsYXVra2FuL2FmcmFtZS1tYXRlcmlhbC1jb2xsZWN0aW9uLXRzL2J1aWx0L3NyYy9wcmltaXRpdmVzL3RleHQtaW5wdXQuanM/NjRlMyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsNENBQTRDO0FBQzVDO0FBQ0EsaUNBQWlDLG1CQUFPLENBQUMsc0JBQVE7QUFDakQsMkdBQTJHO0FBQzNHO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRsYXVra2FuL2FmcmFtZS1tYXRlcmlhbC1jb2xsZWN0aW9uLXRzL2J1aWx0L3NyYy9wcmltaXRpdmVzL3RleHQtaW5wdXQuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbmNvbnN0IGFmcmFtZV8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCJhZnJhbWVcIikpO1xubW9kdWxlLmV4cG9ydHMgPSBhZnJhbWVfMS5kZWZhdWx0LnJlZ2lzdGVyUHJpbWl0aXZlKCdhLXVpLXRleHQtaW5wdXQnLCBhZnJhbWVfMS5kZWZhdWx0LnV0aWxzLmV4dGVuZERlZXAoe30sIGFmcmFtZV8xLmRlZmF1bHQucHJpbWl0aXZlcy5nZXRNZXNoTWl4aW4oKSwge1xuICAgIGRlZmF1bHRDb21wb25lbnRzOiB7XG4gICAgICAgIFwidWktdGV4dFwiOiB7XG4gICAgICAgICAgICBwbGFjZUhvbGRlcjogJ1RleHQuLi4nXG4gICAgICAgIH0sXG4gICAgICAgIFwidWktZG91YmxlLWNsaWNrXCI6IHt9XG4gICAgfSxcbiAgICBtYXBwaW5nczoge1xuICAgICAgICB3aWR0aDogXCJ1aS10ZXh0LndpZHRoXCIsXG4gICAgICAgIGhlaWdodDogXCJ1aS10ZXh0LmhlaWdodFwiLFxuICAgICAgICB2YWx1ZTogXCJ1aS10ZXh0LnZhbHVlXCIsXG4gICAgICAgIFwicGxhY2UtaG9sZGVyXCI6IFwidWktdGV4dC5wbGFjZUhvbGRlclwiXG4gICAgfVxufSkpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dGV4dC1pbnB1dC5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/primitives/text-input.js\n");

/***/ }),

/***/ "./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/primitives/text.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/primitives/text.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nconst aframe_1 = __importDefault(__webpack_require__(/*! aframe */ \"aframe\"));\nmodule.exports = aframe_1.default.registerPrimitive('a-ui-text', aframe_1.default.utils.extendDeep({}, aframe_1.default.primitives.getMeshMixin(), {\n    defaultComponents: {\n        text: {},\n        \"ui-text\": {}\n    },\n    mappings: {\n        \"font-size\": \"ui-text.fontSize\",\n        \"align\": \"text.align\",\n        \"alpha-test\": \"text.alphaTest\",\n        \"anchor\": \"text.anchor\",\n        \"baseline\": \"text.baseline\",\n        \"color\": \"text.color\",\n        \"font\": \"text.font\",\n        \"font-image\": \"text.fontImage\",\n        \"height\": \"text.height\",\n        \"letter-spacing\": \"text.letterSpacing\",\n        \"line-height\": \"text.lineHeight\",\n        \"opacity\": \"text.opacity\",\n        \"shader\": \"text.shader\",\n        \"side\": \"text.side\",\n        \"tab-size\": \"text.tabSize\",\n        \"transparent\": \"text.transparent\",\n        \"value\": \"text.value\",\n        \"white-space\": \"text.whiteSpace\",\n        \"width\": \"text.width\",\n        \"wrap-count\": \"text.wrapCount\",\n        /*\"wrap-pixels\":\"text.wrapPixels\",*/\n        \"z-offset\": \"text.zOffset\"\n    }\n}));\n//# sourceMappingURL=text.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHRsYXVra2FuL2FmcmFtZS1tYXRlcmlhbC1jb2xsZWN0aW9uLXRzL2J1aWx0L3NyYy9wcmltaXRpdmVzL3RleHQuanM/MTA2NyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsNENBQTRDO0FBQzVDO0FBQ0EsaUNBQWlDLG1CQUFPLENBQUMsc0JBQVE7QUFDakQscUdBQXFHO0FBQ3JHO0FBQ0EsZ0JBQWdCO0FBQ2hCO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9AdGxhdWtrYW4vYWZyYW1lLW1hdGVyaWFsLWNvbGxlY3Rpb24tdHMvYnVpbHQvc3JjL3ByaW1pdGl2ZXMvdGV4dC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuY29uc3QgYWZyYW1lXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcImFmcmFtZVwiKSk7XG5tb2R1bGUuZXhwb3J0cyA9IGFmcmFtZV8xLmRlZmF1bHQucmVnaXN0ZXJQcmltaXRpdmUoJ2EtdWktdGV4dCcsIGFmcmFtZV8xLmRlZmF1bHQudXRpbHMuZXh0ZW5kRGVlcCh7fSwgYWZyYW1lXzEuZGVmYXVsdC5wcmltaXRpdmVzLmdldE1lc2hNaXhpbigpLCB7XG4gICAgZGVmYXVsdENvbXBvbmVudHM6IHtcbiAgICAgICAgdGV4dDoge30sXG4gICAgICAgIFwidWktdGV4dFwiOiB7fVxuICAgIH0sXG4gICAgbWFwcGluZ3M6IHtcbiAgICAgICAgXCJmb250LXNpemVcIjogXCJ1aS10ZXh0LmZvbnRTaXplXCIsXG4gICAgICAgIFwiYWxpZ25cIjogXCJ0ZXh0LmFsaWduXCIsXG4gICAgICAgIFwiYWxwaGEtdGVzdFwiOiBcInRleHQuYWxwaGFUZXN0XCIsXG4gICAgICAgIFwiYW5jaG9yXCI6IFwidGV4dC5hbmNob3JcIixcbiAgICAgICAgXCJiYXNlbGluZVwiOiBcInRleHQuYmFzZWxpbmVcIixcbiAgICAgICAgXCJjb2xvclwiOiBcInRleHQuY29sb3JcIixcbiAgICAgICAgXCJmb250XCI6IFwidGV4dC5mb250XCIsXG4gICAgICAgIFwiZm9udC1pbWFnZVwiOiBcInRleHQuZm9udEltYWdlXCIsXG4gICAgICAgIFwiaGVpZ2h0XCI6IFwidGV4dC5oZWlnaHRcIixcbiAgICAgICAgXCJsZXR0ZXItc3BhY2luZ1wiOiBcInRleHQubGV0dGVyU3BhY2luZ1wiLFxuICAgICAgICBcImxpbmUtaGVpZ2h0XCI6IFwidGV4dC5saW5lSGVpZ2h0XCIsXG4gICAgICAgIFwib3BhY2l0eVwiOiBcInRleHQub3BhY2l0eVwiLFxuICAgICAgICBcInNoYWRlclwiOiBcInRleHQuc2hhZGVyXCIsXG4gICAgICAgIFwic2lkZVwiOiBcInRleHQuc2lkZVwiLFxuICAgICAgICBcInRhYi1zaXplXCI6IFwidGV4dC50YWJTaXplXCIsXG4gICAgICAgIFwidHJhbnNwYXJlbnRcIjogXCJ0ZXh0LnRyYW5zcGFyZW50XCIsXG4gICAgICAgIFwidmFsdWVcIjogXCJ0ZXh0LnZhbHVlXCIsXG4gICAgICAgIFwid2hpdGUtc3BhY2VcIjogXCJ0ZXh0LndoaXRlU3BhY2VcIixcbiAgICAgICAgXCJ3aWR0aFwiOiBcInRleHQud2lkdGhcIixcbiAgICAgICAgXCJ3cmFwLWNvdW50XCI6IFwidGV4dC53cmFwQ291bnRcIixcbiAgICAgICAgLypcIndyYXAtcGl4ZWxzXCI6XCJ0ZXh0LndyYXBQaXhlbHNcIiwqL1xuICAgICAgICBcInotb2Zmc2V0XCI6IFwidGV4dC56T2Zmc2V0XCJcbiAgICB9XG59KSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD10ZXh0LmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/primitives/text.js\n");

/***/ }),

/***/ "./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/primitives/toast.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/primitives/toast.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nconst aframe_1 = __importDefault(__webpack_require__(/*! aframe */ \"aframe\"));\nmodule.exports = aframe_1.default.registerPrimitive('a-ui-toast', aframe_1.default.utils.extendDeep({}, aframe_1.default.primitives.getMeshMixin(), {\n    defaultComponents: {\n        geometry: {\n            primitive: 'plane',\n            width: 0.5,\n            height: 0.2\n        },\n        material: {\n            color: '#010e0f',\n            shader: 'flat',\n            transparent: true,\n            opacity: 0.8\n        },\n        \"ui-rounded\": { borderRadius: 0.01, curveSegments: 3 },\n        text: {\n            font: 'roboto',\n            value: 'Toast Message!',\n            align: 'center',\n            zOffset: 0.002,\n            wrapCount: 20,\n        }\n    },\n    mappings: {\n        height: 'geometry.height',\n        width: 'geometry.width',\n        color: 'material.color',\n        transparent: 'material.transparent',\n        \"font-color\": 'text.color',\n        \"text-value\": 'text.value',\n        \"wrap-count\": 'text.wrapCount',\n        \"border-radius\": \"ui-rounded.borderRadius\",\n        \"curve-segments\": \"ui-rounded.curveSegments\"\n    }\n}));\n//# sourceMappingURL=toast.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHRsYXVra2FuL2FmcmFtZS1tYXRlcmlhbC1jb2xsZWN0aW9uLXRzL2J1aWx0L3NyYy9wcmltaXRpdmVzL3RvYXN0LmpzPzkwOGMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLDRDQUE0QztBQUM1QztBQUNBLGlDQUFpQyxtQkFBTyxDQUFDLHNCQUFRO0FBQ2pELHNHQUFzRztBQUN0RztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsdUJBQXVCLHVDQUF1QztBQUM5RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0B0bGF1a2thbi9hZnJhbWUtbWF0ZXJpYWwtY29sbGVjdGlvbi10cy9idWlsdC9zcmMvcHJpbWl0aXZlcy90b2FzdC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuY29uc3QgYWZyYW1lXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcImFmcmFtZVwiKSk7XG5tb2R1bGUuZXhwb3J0cyA9IGFmcmFtZV8xLmRlZmF1bHQucmVnaXN0ZXJQcmltaXRpdmUoJ2EtdWktdG9hc3QnLCBhZnJhbWVfMS5kZWZhdWx0LnV0aWxzLmV4dGVuZERlZXAoe30sIGFmcmFtZV8xLmRlZmF1bHQucHJpbWl0aXZlcy5nZXRNZXNoTWl4aW4oKSwge1xuICAgIGRlZmF1bHRDb21wb25lbnRzOiB7XG4gICAgICAgIGdlb21ldHJ5OiB7XG4gICAgICAgICAgICBwcmltaXRpdmU6ICdwbGFuZScsXG4gICAgICAgICAgICB3aWR0aDogMC41LFxuICAgICAgICAgICAgaGVpZ2h0OiAwLjJcbiAgICAgICAgfSxcbiAgICAgICAgbWF0ZXJpYWw6IHtcbiAgICAgICAgICAgIGNvbG9yOiAnIzAxMGUwZicsXG4gICAgICAgICAgICBzaGFkZXI6ICdmbGF0JyxcbiAgICAgICAgICAgIHRyYW5zcGFyZW50OiB0cnVlLFxuICAgICAgICAgICAgb3BhY2l0eTogMC44XG4gICAgICAgIH0sXG4gICAgICAgIFwidWktcm91bmRlZFwiOiB7IGJvcmRlclJhZGl1czogMC4wMSwgY3VydmVTZWdtZW50czogMyB9LFxuICAgICAgICB0ZXh0OiB7XG4gICAgICAgICAgICBmb250OiAncm9ib3RvJyxcbiAgICAgICAgICAgIHZhbHVlOiAnVG9hc3QgTWVzc2FnZSEnLFxuICAgICAgICAgICAgYWxpZ246ICdjZW50ZXInLFxuICAgICAgICAgICAgek9mZnNldDogMC4wMDIsXG4gICAgICAgICAgICB3cmFwQ291bnQ6IDIwLFxuICAgICAgICB9XG4gICAgfSxcbiAgICBtYXBwaW5nczoge1xuICAgICAgICBoZWlnaHQ6ICdnZW9tZXRyeS5oZWlnaHQnLFxuICAgICAgICB3aWR0aDogJ2dlb21ldHJ5LndpZHRoJyxcbiAgICAgICAgY29sb3I6ICdtYXRlcmlhbC5jb2xvcicsXG4gICAgICAgIHRyYW5zcGFyZW50OiAnbWF0ZXJpYWwudHJhbnNwYXJlbnQnLFxuICAgICAgICBcImZvbnQtY29sb3JcIjogJ3RleHQuY29sb3InLFxuICAgICAgICBcInRleHQtdmFsdWVcIjogJ3RleHQudmFsdWUnLFxuICAgICAgICBcIndyYXAtY291bnRcIjogJ3RleHQud3JhcENvdW50JyxcbiAgICAgICAgXCJib3JkZXItcmFkaXVzXCI6IFwidWktcm91bmRlZC5ib3JkZXJSYWRpdXNcIixcbiAgICAgICAgXCJjdXJ2ZS1zZWdtZW50c1wiOiBcInVpLXJvdW5kZWQuY3VydmVTZWdtZW50c1wiXG4gICAgfVxufSkpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dG9hc3QuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/primitives/toast.js\n");

/***/ }),

/***/ "./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/primitives/ui.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/primitives/ui.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nconst aframe_1 = __importDefault(__webpack_require__(/*! aframe */ \"aframe\"));\nmodule.exports = aframe_1.default.registerPrimitive('a-ui', aframe_1.default.utils.extendDeep({}, aframe_1.default.primitives.getMeshMixin(), {\n    defaultComponents: {\n        \"ui\": {}\n    },\n    mappings: {\n        \"ui-panel\": \"ui.uiPanel\",\n        \"look-controls-el\": \"ui.lookControlsEl\",\n        \"look-controls-component\": \"ui.lookControlsComponent\",\n        \"panel-position\": \"ui.panelPosition\",\n        \"panel-size\": \"ui.panelSize\",\n        \"panel-depth\": \"ui.panelDepth\",\n        \"panel-color\": \"ui.panelColor\",\n        \"panel-opacity\": \"ui.panelOpacity\",\n        \"render-resolution\": \"ui.renderResolution\",\n        \"render-size\": \"ui.renderSize\",\n        \"debug-raycaster\": \"ui.debugRaycaster\",\n        \"fps\": \"ui.fps\",\n        \"intersectable-class\": \"ui.intersectableClass\",\n        \"render-debug\": \"ui.debug\",\n        \"init-delay\": \"ui.initDelay\"\n    }\n}));\n//# sourceMappingURL=ui.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHRsYXVra2FuL2FmcmFtZS1tYXRlcmlhbC1jb2xsZWN0aW9uLXRzL2J1aWx0L3NyYy9wcmltaXRpdmVzL3VpLmpzPzMxNWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLDRDQUE0QztBQUM1QztBQUNBLGlDQUFpQyxtQkFBTyxDQUFDLHNCQUFRO0FBQ2pELGdHQUFnRztBQUNoRztBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRsYXVra2FuL2FmcmFtZS1tYXRlcmlhbC1jb2xsZWN0aW9uLXRzL2J1aWx0L3NyYy9wcmltaXRpdmVzL3VpLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcbn07XG5jb25zdCBhZnJhbWVfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiYWZyYW1lXCIpKTtcbm1vZHVsZS5leHBvcnRzID0gYWZyYW1lXzEuZGVmYXVsdC5yZWdpc3RlclByaW1pdGl2ZSgnYS11aScsIGFmcmFtZV8xLmRlZmF1bHQudXRpbHMuZXh0ZW5kRGVlcCh7fSwgYWZyYW1lXzEuZGVmYXVsdC5wcmltaXRpdmVzLmdldE1lc2hNaXhpbigpLCB7XG4gICAgZGVmYXVsdENvbXBvbmVudHM6IHtcbiAgICAgICAgXCJ1aVwiOiB7fVxuICAgIH0sXG4gICAgbWFwcGluZ3M6IHtcbiAgICAgICAgXCJ1aS1wYW5lbFwiOiBcInVpLnVpUGFuZWxcIixcbiAgICAgICAgXCJsb29rLWNvbnRyb2xzLWVsXCI6IFwidWkubG9va0NvbnRyb2xzRWxcIixcbiAgICAgICAgXCJsb29rLWNvbnRyb2xzLWNvbXBvbmVudFwiOiBcInVpLmxvb2tDb250cm9sc0NvbXBvbmVudFwiLFxuICAgICAgICBcInBhbmVsLXBvc2l0aW9uXCI6IFwidWkucGFuZWxQb3NpdGlvblwiLFxuICAgICAgICBcInBhbmVsLXNpemVcIjogXCJ1aS5wYW5lbFNpemVcIixcbiAgICAgICAgXCJwYW5lbC1kZXB0aFwiOiBcInVpLnBhbmVsRGVwdGhcIixcbiAgICAgICAgXCJwYW5lbC1jb2xvclwiOiBcInVpLnBhbmVsQ29sb3JcIixcbiAgICAgICAgXCJwYW5lbC1vcGFjaXR5XCI6IFwidWkucGFuZWxPcGFjaXR5XCIsXG4gICAgICAgIFwicmVuZGVyLXJlc29sdXRpb25cIjogXCJ1aS5yZW5kZXJSZXNvbHV0aW9uXCIsXG4gICAgICAgIFwicmVuZGVyLXNpemVcIjogXCJ1aS5yZW5kZXJTaXplXCIsXG4gICAgICAgIFwiZGVidWctcmF5Y2FzdGVyXCI6IFwidWkuZGVidWdSYXljYXN0ZXJcIixcbiAgICAgICAgXCJmcHNcIjogXCJ1aS5mcHNcIixcbiAgICAgICAgXCJpbnRlcnNlY3RhYmxlLWNsYXNzXCI6IFwidWkuaW50ZXJzZWN0YWJsZUNsYXNzXCIsXG4gICAgICAgIFwicmVuZGVyLWRlYnVnXCI6IFwidWkuZGVidWdcIixcbiAgICAgICAgXCJpbml0LWRlbGF5XCI6IFwidWkuaW5pdERlbGF5XCJcbiAgICB9XG59KSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD11aS5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/primitives/ui.js\n");

/***/ }),

/***/ "./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/systems/MaterialUiSystem.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/systems/MaterialUiSystem.js ***!
  \****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst AbstractSystemController_1 = __webpack_require__(/*! aframe-typescript-boilerplate/built/system/AbstractSystemController */ \"./node_modules/aframe-typescript-boilerplate/built/system/AbstractSystemController.js\");\nconst built_1 = __webpack_require__(/*! aframe-typescript-boilerplate/built */ \"./node_modules/aframe-typescript-boilerplate/built/index.js\");\nconst DarkColorTheme_1 = __webpack_require__(/*! ../theme/DarkColorTheme */ \"./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/theme/DarkColorTheme.js\");\nclass MaterialUiSystem extends AbstractSystemController_1.AbstractSystemController {\n    constructor(system, scene, data) {\n        super(system, scene, data);\n        this.changes = {};\n        this.changing = false;\n        this.onFocus = () => { };\n        this.onFocusOut = () => { };\n        this.colorTheme = new DarkColorTheme_1.DarkColorTheme();\n        this.colorThemes = new Map();\n    }\n    init() {\n        console.log(\"material ui system init.\");\n    }\n    pause() {\n    }\n    play() {\n    }\n    tick(time, timeDelta) {\n        TWEEN.update();\n    }\n    isFirstOrLastChange() {\n        let empty = true;\n        for (let key in this.changes) {\n            empty = false;\n            break;\n        }\n        if (!this.changing && !empty) {\n            this.scene.emit('ui-changing');\n            this.changing = true;\n        }\n        else if (this.changing && empty) {\n            if (this.changing) {\n                this.scene.emit('ui-changing-stopped');\n                this.changing = false;\n            }\n        }\n    }\n    preventDefault(e) {\n        if (e.detail && e.detail.preventDefault && typeof e.detail.preventDefault === \"function\") {\n            e.detail.preventDefault();\n        }\n    }\n    shorten(string, length) {\n        return string.length > length ? string.substr(0, length) + \"...\" : string;\n    }\n    isChanging(scene, ref) {\n        let index = this.changes[ref];\n        if (!index) {\n            let now = new Date().getTime();\n            this.changes[ref] = { t: now, e: new Error().stack };\n            this.isFirstOrLastChange();\n        }\n        else {\n            this.changes[ref].t = new Date().getTime();\n        }\n    }\n    stoppedChanging(ref) {\n        delete this.changes[ref];\n        this.isFirstOrLastChange();\n    }\n    clearObject(object) {\n        object.traverse((child) => {\n            if (child.material) {\n                if (child.material.length) {\n                    for (let i = 0; i < child.material.length; i++) {\n                        if (child.material[i].map) {\n                            child.material[i].map.dispose();\n                        }\n                        child.material[i].dispose();\n                    }\n                }\n                else {\n                    if (child.material.map) {\n                        child.material.map.dispose();\n                    }\n                    child.material.dispose();\n                }\n            }\n            if (child.geometry) {\n                child.geometry.dispose();\n            }\n        });\n    }\n    registerColorTheme(colorTheme) {\n        this.colorThemes.set(colorTheme.name, colorTheme);\n    }\n    setColorTheme(colorThemeName) {\n        if (this.colorThemes.has(colorThemeName)) {\n            this.colorTheme = this.colorThemes.get(colorThemeName);\n        }\n    }\n    getColorTheme() {\n        return this.colorTheme;\n    }\n    /**\n     * Time to wait for UI changes to settle.\n     */\n    get maxChangePropagationTime() {\n        return 5000;\n    }\n}\nMaterialUiSystem.DEFINITION = new built_1.SystemControllerDefinition(\"material-ui\", {}, (system, scene, data) => new MaterialUiSystem(system, scene, data));\nexports.MaterialUiSystem = MaterialUiSystem;\n//# sourceMappingURL=MaterialUiSystem.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHRsYXVra2FuL2FmcmFtZS1tYXRlcmlhbC1jb2xsZWN0aW9uLXRzL2J1aWx0L3NyYy9zeXN0ZW1zL01hdGVyaWFsVWlTeXN0ZW0uanM/NGZiZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE4QyxjQUFjO0FBQzVELG1DQUFtQyxtQkFBTyxDQUFDLGtLQUFxRTtBQUNoSCxnQkFBZ0IsbUJBQU8sQ0FBQyx3R0FBcUM7QUFDN0QseUJBQXlCLG1CQUFPLENBQUMseUhBQXlCO0FBQzFEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEI7QUFDOUIsaUNBQWlDO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQztBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DLDJCQUEyQjtBQUM5RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNGQUFzRjtBQUN0RjtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0B0bGF1a2thbi9hZnJhbWUtbWF0ZXJpYWwtY29sbGVjdGlvbi10cy9idWlsdC9zcmMvc3lzdGVtcy9NYXRlcmlhbFVpU3lzdGVtLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCBBYnN0cmFjdFN5c3RlbUNvbnRyb2xsZXJfMSA9IHJlcXVpcmUoXCJhZnJhbWUtdHlwZXNjcmlwdC1ib2lsZXJwbGF0ZS9idWlsdC9zeXN0ZW0vQWJzdHJhY3RTeXN0ZW1Db250cm9sbGVyXCIpO1xuY29uc3QgYnVpbHRfMSA9IHJlcXVpcmUoXCJhZnJhbWUtdHlwZXNjcmlwdC1ib2lsZXJwbGF0ZS9idWlsdFwiKTtcbmNvbnN0IERhcmtDb2xvclRoZW1lXzEgPSByZXF1aXJlKFwiLi4vdGhlbWUvRGFya0NvbG9yVGhlbWVcIik7XG5jbGFzcyBNYXRlcmlhbFVpU3lzdGVtIGV4dGVuZHMgQWJzdHJhY3RTeXN0ZW1Db250cm9sbGVyXzEuQWJzdHJhY3RTeXN0ZW1Db250cm9sbGVyIHtcbiAgICBjb25zdHJ1Y3RvcihzeXN0ZW0sIHNjZW5lLCBkYXRhKSB7XG4gICAgICAgIHN1cGVyKHN5c3RlbSwgc2NlbmUsIGRhdGEpO1xuICAgICAgICB0aGlzLmNoYW5nZXMgPSB7fTtcbiAgICAgICAgdGhpcy5jaGFuZ2luZyA9IGZhbHNlO1xuICAgICAgICB0aGlzLm9uRm9jdXMgPSAoKSA9PiB7IH07XG4gICAgICAgIHRoaXMub25Gb2N1c091dCA9ICgpID0+IHsgfTtcbiAgICAgICAgdGhpcy5jb2xvclRoZW1lID0gbmV3IERhcmtDb2xvclRoZW1lXzEuRGFya0NvbG9yVGhlbWUoKTtcbiAgICAgICAgdGhpcy5jb2xvclRoZW1lcyA9IG5ldyBNYXAoKTtcbiAgICB9XG4gICAgaW5pdCgpIHtcbiAgICAgICAgY29uc29sZS5sb2coXCJtYXRlcmlhbCB1aSBzeXN0ZW0gaW5pdC5cIik7XG4gICAgfVxuICAgIHBhdXNlKCkge1xuICAgIH1cbiAgICBwbGF5KCkge1xuICAgIH1cbiAgICB0aWNrKHRpbWUsIHRpbWVEZWx0YSkge1xuICAgICAgICBUV0VFTi51cGRhdGUoKTtcbiAgICB9XG4gICAgaXNGaXJzdE9yTGFzdENoYW5nZSgpIHtcbiAgICAgICAgbGV0IGVtcHR5ID0gdHJ1ZTtcbiAgICAgICAgZm9yIChsZXQga2V5IGluIHRoaXMuY2hhbmdlcykge1xuICAgICAgICAgICAgZW1wdHkgPSBmYWxzZTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICAgIGlmICghdGhpcy5jaGFuZ2luZyAmJiAhZW1wdHkpIHtcbiAgICAgICAgICAgIHRoaXMuc2NlbmUuZW1pdCgndWktY2hhbmdpbmcnKTtcbiAgICAgICAgICAgIHRoaXMuY2hhbmdpbmcgPSB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHRoaXMuY2hhbmdpbmcgJiYgZW1wdHkpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLmNoYW5naW5nKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5zY2VuZS5lbWl0KCd1aS1jaGFuZ2luZy1zdG9wcGVkJyk7XG4gICAgICAgICAgICAgICAgdGhpcy5jaGFuZ2luZyA9IGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIHByZXZlbnREZWZhdWx0KGUpIHtcbiAgICAgICAgaWYgKGUuZGV0YWlsICYmIGUuZGV0YWlsLnByZXZlbnREZWZhdWx0ICYmIHR5cGVvZiBlLmRldGFpbC5wcmV2ZW50RGVmYXVsdCA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgICAgICBlLmRldGFpbC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHNob3J0ZW4oc3RyaW5nLCBsZW5ndGgpIHtcbiAgICAgICAgcmV0dXJuIHN0cmluZy5sZW5ndGggPiBsZW5ndGggPyBzdHJpbmcuc3Vic3RyKDAsIGxlbmd0aCkgKyBcIi4uLlwiIDogc3RyaW5nO1xuICAgIH1cbiAgICBpc0NoYW5naW5nKHNjZW5lLCByZWYpIHtcbiAgICAgICAgbGV0IGluZGV4ID0gdGhpcy5jaGFuZ2VzW3JlZl07XG4gICAgICAgIGlmICghaW5kZXgpIHtcbiAgICAgICAgICAgIGxldCBub3cgPSBuZXcgRGF0ZSgpLmdldFRpbWUoKTtcbiAgICAgICAgICAgIHRoaXMuY2hhbmdlc1tyZWZdID0geyB0OiBub3csIGU6IG5ldyBFcnJvcigpLnN0YWNrIH07XG4gICAgICAgICAgICB0aGlzLmlzRmlyc3RPckxhc3RDaGFuZ2UoKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuY2hhbmdlc1tyZWZdLnQgPSBuZXcgRGF0ZSgpLmdldFRpbWUoKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBzdG9wcGVkQ2hhbmdpbmcocmVmKSB7XG4gICAgICAgIGRlbGV0ZSB0aGlzLmNoYW5nZXNbcmVmXTtcbiAgICAgICAgdGhpcy5pc0ZpcnN0T3JMYXN0Q2hhbmdlKCk7XG4gICAgfVxuICAgIGNsZWFyT2JqZWN0KG9iamVjdCkge1xuICAgICAgICBvYmplY3QudHJhdmVyc2UoKGNoaWxkKSA9PiB7XG4gICAgICAgICAgICBpZiAoY2hpbGQubWF0ZXJpYWwpIHtcbiAgICAgICAgICAgICAgICBpZiAoY2hpbGQubWF0ZXJpYWwubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgY2hpbGQubWF0ZXJpYWwubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChjaGlsZC5tYXRlcmlhbFtpXS5tYXApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGlsZC5tYXRlcmlhbFtpXS5tYXAuZGlzcG9zZSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgY2hpbGQubWF0ZXJpYWxbaV0uZGlzcG9zZSgpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBpZiAoY2hpbGQubWF0ZXJpYWwubWFwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjaGlsZC5tYXRlcmlhbC5tYXAuZGlzcG9zZSgpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGNoaWxkLm1hdGVyaWFsLmRpc3Bvc2UoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoY2hpbGQuZ2VvbWV0cnkpIHtcbiAgICAgICAgICAgICAgICBjaGlsZC5nZW9tZXRyeS5kaXNwb3NlKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICByZWdpc3RlckNvbG9yVGhlbWUoY29sb3JUaGVtZSkge1xuICAgICAgICB0aGlzLmNvbG9yVGhlbWVzLnNldChjb2xvclRoZW1lLm5hbWUsIGNvbG9yVGhlbWUpO1xuICAgIH1cbiAgICBzZXRDb2xvclRoZW1lKGNvbG9yVGhlbWVOYW1lKSB7XG4gICAgICAgIGlmICh0aGlzLmNvbG9yVGhlbWVzLmhhcyhjb2xvclRoZW1lTmFtZSkpIHtcbiAgICAgICAgICAgIHRoaXMuY29sb3JUaGVtZSA9IHRoaXMuY29sb3JUaGVtZXMuZ2V0KGNvbG9yVGhlbWVOYW1lKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBnZXRDb2xvclRoZW1lKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5jb2xvclRoZW1lO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBUaW1lIHRvIHdhaXQgZm9yIFVJIGNoYW5nZXMgdG8gc2V0dGxlLlxuICAgICAqL1xuICAgIGdldCBtYXhDaGFuZ2VQcm9wYWdhdGlvblRpbWUoKSB7XG4gICAgICAgIHJldHVybiA1MDAwO1xuICAgIH1cbn1cbk1hdGVyaWFsVWlTeXN0ZW0uREVGSU5JVElPTiA9IG5ldyBidWlsdF8xLlN5c3RlbUNvbnRyb2xsZXJEZWZpbml0aW9uKFwibWF0ZXJpYWwtdWlcIiwge30sIChzeXN0ZW0sIHNjZW5lLCBkYXRhKSA9PiBuZXcgTWF0ZXJpYWxVaVN5c3RlbShzeXN0ZW0sIHNjZW5lLCBkYXRhKSk7XG5leHBvcnRzLk1hdGVyaWFsVWlTeXN0ZW0gPSBNYXRlcmlhbFVpU3lzdGVtO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9TWF0ZXJpYWxVaVN5c3RlbS5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/systems/MaterialUiSystem.js\n");

/***/ }),

/***/ "./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/theme/DarkColorTheme.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/theme/DarkColorTheme.js ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass DarkColorTheme {\n    constructor() {\n        this.name = \"dark\";\n        this.primary = \"#323232\";\n        this.primaryLight = \"#5b5b5b\";\n        this.primaryDark = \"#0a0a0a\";\n        this.primaryOn = \"#ffffff\";\n        this.secondary = \"#1976d2\";\n        this.secondaryLight = \"#63a4ff\";\n        this.secondaryDark = \"#004ba0\";\n        this.secondaryOn = \"#ffffff\";\n        this.error = \"#b00020\";\n        this.errorOn = \"#ffffff\";\n        this.surface = \"#323232\";\n        this.surfaceOn = \"#ffffff\";\n        this.background = \"#323232\";\n        this.backgroundOn = \"#ffffff\";\n    }\n}\nexports.DarkColorTheme = DarkColorTheme;\n//# sourceMappingURL=DarkColorTheme.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHRsYXVra2FuL2FmcmFtZS1tYXRlcmlhbC1jb2xsZWN0aW9uLXRzL2J1aWx0L3NyYy90aGVtZS9EYXJrQ29sb3JUaGVtZS5qcz84YWVjIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQThDLGNBQWM7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0B0bGF1a2thbi9hZnJhbWUtbWF0ZXJpYWwtY29sbGVjdGlvbi10cy9idWlsdC9zcmMvdGhlbWUvRGFya0NvbG9yVGhlbWUuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNsYXNzIERhcmtDb2xvclRoZW1lIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy5uYW1lID0gXCJkYXJrXCI7XG4gICAgICAgIHRoaXMucHJpbWFyeSA9IFwiIzMyMzIzMlwiO1xuICAgICAgICB0aGlzLnByaW1hcnlMaWdodCA9IFwiIzViNWI1YlwiO1xuICAgICAgICB0aGlzLnByaW1hcnlEYXJrID0gXCIjMGEwYTBhXCI7XG4gICAgICAgIHRoaXMucHJpbWFyeU9uID0gXCIjZmZmZmZmXCI7XG4gICAgICAgIHRoaXMuc2Vjb25kYXJ5ID0gXCIjMTk3NmQyXCI7XG4gICAgICAgIHRoaXMuc2Vjb25kYXJ5TGlnaHQgPSBcIiM2M2E0ZmZcIjtcbiAgICAgICAgdGhpcy5zZWNvbmRhcnlEYXJrID0gXCIjMDA0YmEwXCI7XG4gICAgICAgIHRoaXMuc2Vjb25kYXJ5T24gPSBcIiNmZmZmZmZcIjtcbiAgICAgICAgdGhpcy5lcnJvciA9IFwiI2IwMDAyMFwiO1xuICAgICAgICB0aGlzLmVycm9yT24gPSBcIiNmZmZmZmZcIjtcbiAgICAgICAgdGhpcy5zdXJmYWNlID0gXCIjMzIzMjMyXCI7XG4gICAgICAgIHRoaXMuc3VyZmFjZU9uID0gXCIjZmZmZmZmXCI7XG4gICAgICAgIHRoaXMuYmFja2dyb3VuZCA9IFwiIzMyMzIzMlwiO1xuICAgICAgICB0aGlzLmJhY2tncm91bmRPbiA9IFwiI2ZmZmZmZlwiO1xuICAgIH1cbn1cbmV4cG9ydHMuRGFya0NvbG9yVGhlbWUgPSBEYXJrQ29sb3JUaGVtZTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPURhcmtDb2xvclRoZW1lLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/theme/DarkColorTheme.js\n");

/***/ }),

/***/ "./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/ui.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/ui.js ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nwindow.TWEEN = __webpack_require__(/*! @tweenjs/tween.js */ \"./node_modules/@tweenjs/tween.js/src/Tween.js\");\n__webpack_require__(/*! ./primitives/button */ \"./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/primitives/button.js\");\n__webpack_require__(/*! ./primitives/fab_button */ \"./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/primitives/fab_button.js\");\n__webpack_require__(/*! ./primitives/switch */ \"./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/primitives/switch.js\");\n__webpack_require__(/*! ./primitives/slider */ \"./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/primitives/slider.js\");\n__webpack_require__(/*! ./primitives/number */ \"./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/primitives/number.js\");\n__webpack_require__(/*! ./primitives/toast */ \"./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/primitives/toast.js\");\n__webpack_require__(/*! ./primitives/checkbox */ \"./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/primitives/checkbox.js\");\n__webpack_require__(/*! ./primitives/radio */ \"./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/primitives/radio.js\");\n__webpack_require__(/*! ./primitives/input-text */ \"./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/primitives/input-text.js\");\n__webpack_require__(/*! ./primitives/text-input */ \"./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/primitives/text-input.js\");\n__webpack_require__(/*! ./primitives/number-input */ \"./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/primitives/number-input.js\");\n__webpack_require__(/*! ./primitives/int-input */ \"./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/primitives/int-input.js\");\n__webpack_require__(/*! ./primitives/password-input */ \"./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/primitives/password-input.js\");\n__webpack_require__(/*! ./primitives/scroll-pane */ \"./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/primitives/scroll-pane.js\");\n__webpack_require__(/*! ./primitives/ui */ \"./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/primitives/ui.js\");\n__webpack_require__(/*! ./primitives/text */ \"./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/primitives/text.js\");\nconst Package = __importStar(__webpack_require__(/*! ../package.json */ \"./node_modules/@tlaukkan/aframe-material-collection-ts/built/package.json\"));\nconst built_1 = __webpack_require__(/*! aframe-typescript-boilerplate/built */ \"./node_modules/aframe-typescript-boilerplate/built/index.js\");\nconst MaterialUiSystem_1 = __webpack_require__(/*! ./systems/MaterialUiSystem */ \"./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/systems/MaterialUiSystem.js\");\nconst Border_1 = __webpack_require__(/*! ./components/Border */ \"./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/Border.js\");\nconst Button_1 = __webpack_require__(/*! ./components/Button */ \"./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/Button.js\");\nconst Checkbox_1 = __webpack_require__(/*! ./components/Checkbox */ \"./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/Checkbox.js\");\nconst ColorPicker_1 = __webpack_require__(/*! ./components/ColorPicker */ \"./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/ColorPicker.js\");\nconst CurvedPlane_1 = __webpack_require__(/*! ./components/CurvedPlane */ \"./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/CurvedPlane.js\");\nconst DoubleClick_1 = __webpack_require__(/*! ./components/DoubleClick */ \"./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/DoubleClick.js\");\nconst Icon_1 = __webpack_require__(/*! ./components/Icon */ \"./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/Icon.js\");\nconst InputText_1 = __webpack_require__(/*! ./components/InputText */ \"./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/InputText.js\");\nconst Modal_1 = __webpack_require__(/*! ./components/Modal */ \"./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/Modal.js\");\nconst MouseShim_1 = __webpack_require__(/*! ./components/MouseShim */ \"./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/MouseShim.js\");\nconst NumberComponent_1 = __webpack_require__(/*! ./components/NumberComponent */ \"./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/NumberComponent.js\");\nconst Radio_1 = __webpack_require__(/*! ./components/Radio */ \"./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/Radio.js\");\nconst Ripple_1 = __webpack_require__(/*! ./components/Ripple */ \"./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/Ripple.js\");\nconst Rounded_1 = __webpack_require__(/*! ./components/Rounded */ \"./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/Rounded.js\");\nconst Slider_1 = __webpack_require__(/*! ./components/Slider */ \"./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/Slider.js\");\nconst Switch_1 = __webpack_require__(/*! ./components/Switch */ \"./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/Switch.js\");\nconst Text_1 = __webpack_require__(/*! ./components/Text */ \"./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/Text.js\");\nconst Toast_1 = __webpack_require__(/*! ./components/Toast */ \"./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/Toast.js\");\nconst Yoga_1 = __webpack_require__(/*! ./components/Yoga */ \"./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/Yoga.js\");\nconst UI_1 = __webpack_require__(/*! ./components/UI */ \"./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/UI.js\");\nconst ScrollPane_1 = __webpack_require__(/*! ./components/ScrollPane */ \"./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/components/ScrollPane.js\");\nfunction registerMaterialUiSystem() {\n    console.log('aframe-material-collection version ' + Package.version);\n    built_1.registerSystemController(MaterialUiSystem_1.MaterialUiSystem.DEFINITION);\n    built_1.registerComponentController(Border_1.Border.DEFINITION);\n    built_1.registerComponentController(Button_1.Button.DEFINITION);\n    built_1.registerComponentController(Checkbox_1.Checkbox.DEFINITION);\n    built_1.registerComponentController(ColorPicker_1.ColorPicker.DEFINITION);\n    built_1.registerComponentController(CurvedPlane_1.CurvedPlane.DEFINITION);\n    built_1.registerComponentController(DoubleClick_1.DoubleClick.DEFINITION);\n    built_1.registerComponentController(Icon_1.Icon.DEFINITION);\n    built_1.registerComponentController(InputText_1.InputText.DEFINITION);\n    built_1.registerComponentController(Modal_1.Modal.DEFINITION);\n    built_1.registerComponentController(MouseShim_1.MouseShim.DEFINITION);\n    built_1.registerComponentController(NumberComponent_1.NumberComponent.DEFINITION);\n    built_1.registerComponentController(Radio_1.Radio.DEFINITION);\n    built_1.registerComponentController(Ripple_1.Ripple.DEFINITION);\n    built_1.registerComponentController(Rounded_1.Rounded.DEFINITION);\n    built_1.registerComponentController(Slider_1.Slider.DEFINITION);\n    built_1.registerComponentController(Switch_1.Switch.DEFINITION);\n    built_1.registerComponentController(Text_1.Text.DEFINITION);\n    built_1.registerComponentController(Toast_1.Toast.DEFINITION);\n    built_1.registerComponentController(Yoga_1.Yoga.DEFINITION);\n    built_1.registerComponentController(UI_1.UI.DEFINITION);\n    built_1.registerComponentController(ScrollPane_1.ScrollPane.DEFINITION);\n}\nexports.registerMaterialUiSystem = registerMaterialUiSystem;\n//# sourceMappingURL=ui.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHRsYXVra2FuL2FmcmFtZS1tYXRlcmlhbC1jb2xsZWN0aW9uLXRzL2J1aWx0L3NyYy91aS5qcz81ZDI1Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEMsY0FBYztBQUM1RCxlQUFlLG1CQUFPLENBQUMsd0VBQW1CO0FBQzFDLG1CQUFPLENBQUMsa0hBQXFCO0FBQzdCLG1CQUFPLENBQUMsMEhBQXlCO0FBQ2pDLG1CQUFPLENBQUMsa0hBQXFCO0FBQzdCLG1CQUFPLENBQUMsa0hBQXFCO0FBQzdCLG1CQUFPLENBQUMsa0hBQXFCO0FBQzdCLG1CQUFPLENBQUMsZ0hBQW9CO0FBQzVCLG1CQUFPLENBQUMsc0hBQXVCO0FBQy9CLG1CQUFPLENBQUMsZ0hBQW9CO0FBQzVCLG1CQUFPLENBQUMsMEhBQXlCO0FBQ2pDLG1CQUFPLENBQUMsMEhBQXlCO0FBQ2pDLG1CQUFPLENBQUMsOEhBQTJCO0FBQ25DLG1CQUFPLENBQUMsd0hBQXdCO0FBQ2hDLG1CQUFPLENBQUMsa0lBQTZCO0FBQ3JDLG1CQUFPLENBQUMsNEhBQTBCO0FBQ2xDLG1CQUFPLENBQUMsMEdBQWlCO0FBQ3pCLG1CQUFPLENBQUMsOEdBQW1CO0FBQzNCLDZCQUE2QixtQkFBTyxDQUFDLGtHQUFpQjtBQUN0RCxnQkFBZ0IsbUJBQU8sQ0FBQyx3R0FBcUM7QUFDN0QsMkJBQTJCLG1CQUFPLENBQUMsZ0lBQTRCO0FBQy9ELGlCQUFpQixtQkFBTyxDQUFDLGtIQUFxQjtBQUM5QyxpQkFBaUIsbUJBQU8sQ0FBQyxrSEFBcUI7QUFDOUMsbUJBQW1CLG1CQUFPLENBQUMsc0hBQXVCO0FBQ2xELHNCQUFzQixtQkFBTyxDQUFDLDRIQUEwQjtBQUN4RCxzQkFBc0IsbUJBQU8sQ0FBQyw0SEFBMEI7QUFDeEQsc0JBQXNCLG1CQUFPLENBQUMsNEhBQTBCO0FBQ3hELGVBQWUsbUJBQU8sQ0FBQyw4R0FBbUI7QUFDMUMsb0JBQW9CLG1CQUFPLENBQUMsd0hBQXdCO0FBQ3BELGdCQUFnQixtQkFBTyxDQUFDLGdIQUFvQjtBQUM1QyxvQkFBb0IsbUJBQU8sQ0FBQyx3SEFBd0I7QUFDcEQsMEJBQTBCLG1CQUFPLENBQUMsb0lBQThCO0FBQ2hFLGdCQUFnQixtQkFBTyxDQUFDLGdIQUFvQjtBQUM1QyxpQkFBaUIsbUJBQU8sQ0FBQyxrSEFBcUI7QUFDOUMsa0JBQWtCLG1CQUFPLENBQUMsb0hBQXNCO0FBQ2hELGlCQUFpQixtQkFBTyxDQUFDLGtIQUFxQjtBQUM5QyxpQkFBaUIsbUJBQU8sQ0FBQyxrSEFBcUI7QUFDOUMsZUFBZSxtQkFBTyxDQUFDLDhHQUFtQjtBQUMxQyxnQkFBZ0IsbUJBQU8sQ0FBQyxnSEFBb0I7QUFDNUMsZUFBZSxtQkFBTyxDQUFDLDhHQUFtQjtBQUMxQyxhQUFhLG1CQUFPLENBQUMsMEdBQWlCO0FBQ3RDLHFCQUFxQixtQkFBTyxDQUFDLDBIQUF5QjtBQUN0RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRsYXVra2FuL2FmcmFtZS1tYXRlcmlhbC1jb2xsZWN0aW9uLXRzL2J1aWx0L3NyYy91aS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9faW1wb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnRTdGFyKSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgaWYgKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgcmV0dXJuIG1vZDtcbiAgICB2YXIgcmVzdWx0ID0ge307XG4gICAgaWYgKG1vZCAhPSBudWxsKSBmb3IgKHZhciBrIGluIG1vZCkgaWYgKE9iamVjdC5oYXNPd25Qcm9wZXJ0eS5jYWxsKG1vZCwgaykpIHJlc3VsdFtrXSA9IG1vZFtrXTtcbiAgICByZXN1bHRbXCJkZWZhdWx0XCJdID0gbW9kO1xuICAgIHJldHVybiByZXN1bHQ7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xud2luZG93LlRXRUVOID0gcmVxdWlyZSgnQHR3ZWVuanMvdHdlZW4uanMnKTtcbnJlcXVpcmUoXCIuL3ByaW1pdGl2ZXMvYnV0dG9uXCIpO1xucmVxdWlyZShcIi4vcHJpbWl0aXZlcy9mYWJfYnV0dG9uXCIpO1xucmVxdWlyZShcIi4vcHJpbWl0aXZlcy9zd2l0Y2hcIik7XG5yZXF1aXJlKFwiLi9wcmltaXRpdmVzL3NsaWRlclwiKTtcbnJlcXVpcmUoXCIuL3ByaW1pdGl2ZXMvbnVtYmVyXCIpO1xucmVxdWlyZShcIi4vcHJpbWl0aXZlcy90b2FzdFwiKTtcbnJlcXVpcmUoXCIuL3ByaW1pdGl2ZXMvY2hlY2tib3hcIik7XG5yZXF1aXJlKFwiLi9wcmltaXRpdmVzL3JhZGlvXCIpO1xucmVxdWlyZShcIi4vcHJpbWl0aXZlcy9pbnB1dC10ZXh0XCIpO1xucmVxdWlyZShcIi4vcHJpbWl0aXZlcy90ZXh0LWlucHV0XCIpO1xucmVxdWlyZShcIi4vcHJpbWl0aXZlcy9udW1iZXItaW5wdXRcIik7XG5yZXF1aXJlKFwiLi9wcmltaXRpdmVzL2ludC1pbnB1dFwiKTtcbnJlcXVpcmUoXCIuL3ByaW1pdGl2ZXMvcGFzc3dvcmQtaW5wdXRcIik7XG5yZXF1aXJlKFwiLi9wcmltaXRpdmVzL3Njcm9sbC1wYW5lXCIpO1xucmVxdWlyZShcIi4vcHJpbWl0aXZlcy91aVwiKTtcbnJlcXVpcmUoXCIuL3ByaW1pdGl2ZXMvdGV4dFwiKTtcbmNvbnN0IFBhY2thZ2UgPSBfX2ltcG9ydFN0YXIocmVxdWlyZShcIi4uL3BhY2thZ2UuanNvblwiKSk7XG5jb25zdCBidWlsdF8xID0gcmVxdWlyZShcImFmcmFtZS10eXBlc2NyaXB0LWJvaWxlcnBsYXRlL2J1aWx0XCIpO1xuY29uc3QgTWF0ZXJpYWxVaVN5c3RlbV8xID0gcmVxdWlyZShcIi4vc3lzdGVtcy9NYXRlcmlhbFVpU3lzdGVtXCIpO1xuY29uc3QgQm9yZGVyXzEgPSByZXF1aXJlKFwiLi9jb21wb25lbnRzL0JvcmRlclwiKTtcbmNvbnN0IEJ1dHRvbl8xID0gcmVxdWlyZShcIi4vY29tcG9uZW50cy9CdXR0b25cIik7XG5jb25zdCBDaGVja2JveF8xID0gcmVxdWlyZShcIi4vY29tcG9uZW50cy9DaGVja2JveFwiKTtcbmNvbnN0IENvbG9yUGlja2VyXzEgPSByZXF1aXJlKFwiLi9jb21wb25lbnRzL0NvbG9yUGlja2VyXCIpO1xuY29uc3QgQ3VydmVkUGxhbmVfMSA9IHJlcXVpcmUoXCIuL2NvbXBvbmVudHMvQ3VydmVkUGxhbmVcIik7XG5jb25zdCBEb3VibGVDbGlja18xID0gcmVxdWlyZShcIi4vY29tcG9uZW50cy9Eb3VibGVDbGlja1wiKTtcbmNvbnN0IEljb25fMSA9IHJlcXVpcmUoXCIuL2NvbXBvbmVudHMvSWNvblwiKTtcbmNvbnN0IElucHV0VGV4dF8xID0gcmVxdWlyZShcIi4vY29tcG9uZW50cy9JbnB1dFRleHRcIik7XG5jb25zdCBNb2RhbF8xID0gcmVxdWlyZShcIi4vY29tcG9uZW50cy9Nb2RhbFwiKTtcbmNvbnN0IE1vdXNlU2hpbV8xID0gcmVxdWlyZShcIi4vY29tcG9uZW50cy9Nb3VzZVNoaW1cIik7XG5jb25zdCBOdW1iZXJDb21wb25lbnRfMSA9IHJlcXVpcmUoXCIuL2NvbXBvbmVudHMvTnVtYmVyQ29tcG9uZW50XCIpO1xuY29uc3QgUmFkaW9fMSA9IHJlcXVpcmUoXCIuL2NvbXBvbmVudHMvUmFkaW9cIik7XG5jb25zdCBSaXBwbGVfMSA9IHJlcXVpcmUoXCIuL2NvbXBvbmVudHMvUmlwcGxlXCIpO1xuY29uc3QgUm91bmRlZF8xID0gcmVxdWlyZShcIi4vY29tcG9uZW50cy9Sb3VuZGVkXCIpO1xuY29uc3QgU2xpZGVyXzEgPSByZXF1aXJlKFwiLi9jb21wb25lbnRzL1NsaWRlclwiKTtcbmNvbnN0IFN3aXRjaF8xID0gcmVxdWlyZShcIi4vY29tcG9uZW50cy9Td2l0Y2hcIik7XG5jb25zdCBUZXh0XzEgPSByZXF1aXJlKFwiLi9jb21wb25lbnRzL1RleHRcIik7XG5jb25zdCBUb2FzdF8xID0gcmVxdWlyZShcIi4vY29tcG9uZW50cy9Ub2FzdFwiKTtcbmNvbnN0IFlvZ2FfMSA9IHJlcXVpcmUoXCIuL2NvbXBvbmVudHMvWW9nYVwiKTtcbmNvbnN0IFVJXzEgPSByZXF1aXJlKFwiLi9jb21wb25lbnRzL1VJXCIpO1xuY29uc3QgU2Nyb2xsUGFuZV8xID0gcmVxdWlyZShcIi4vY29tcG9uZW50cy9TY3JvbGxQYW5lXCIpO1xuZnVuY3Rpb24gcmVnaXN0ZXJNYXRlcmlhbFVpU3lzdGVtKCkge1xuICAgIGNvbnNvbGUubG9nKCdhZnJhbWUtbWF0ZXJpYWwtY29sbGVjdGlvbiB2ZXJzaW9uICcgKyBQYWNrYWdlLnZlcnNpb24pO1xuICAgIGJ1aWx0XzEucmVnaXN0ZXJTeXN0ZW1Db250cm9sbGVyKE1hdGVyaWFsVWlTeXN0ZW1fMS5NYXRlcmlhbFVpU3lzdGVtLkRFRklOSVRJT04pO1xuICAgIGJ1aWx0XzEucmVnaXN0ZXJDb21wb25lbnRDb250cm9sbGVyKEJvcmRlcl8xLkJvcmRlci5ERUZJTklUSU9OKTtcbiAgICBidWlsdF8xLnJlZ2lzdGVyQ29tcG9uZW50Q29udHJvbGxlcihCdXR0b25fMS5CdXR0b24uREVGSU5JVElPTik7XG4gICAgYnVpbHRfMS5yZWdpc3RlckNvbXBvbmVudENvbnRyb2xsZXIoQ2hlY2tib3hfMS5DaGVja2JveC5ERUZJTklUSU9OKTtcbiAgICBidWlsdF8xLnJlZ2lzdGVyQ29tcG9uZW50Q29udHJvbGxlcihDb2xvclBpY2tlcl8xLkNvbG9yUGlja2VyLkRFRklOSVRJT04pO1xuICAgIGJ1aWx0XzEucmVnaXN0ZXJDb21wb25lbnRDb250cm9sbGVyKEN1cnZlZFBsYW5lXzEuQ3VydmVkUGxhbmUuREVGSU5JVElPTik7XG4gICAgYnVpbHRfMS5yZWdpc3RlckNvbXBvbmVudENvbnRyb2xsZXIoRG91YmxlQ2xpY2tfMS5Eb3VibGVDbGljay5ERUZJTklUSU9OKTtcbiAgICBidWlsdF8xLnJlZ2lzdGVyQ29tcG9uZW50Q29udHJvbGxlcihJY29uXzEuSWNvbi5ERUZJTklUSU9OKTtcbiAgICBidWlsdF8xLnJlZ2lzdGVyQ29tcG9uZW50Q29udHJvbGxlcihJbnB1dFRleHRfMS5JbnB1dFRleHQuREVGSU5JVElPTik7XG4gICAgYnVpbHRfMS5yZWdpc3RlckNvbXBvbmVudENvbnRyb2xsZXIoTW9kYWxfMS5Nb2RhbC5ERUZJTklUSU9OKTtcbiAgICBidWlsdF8xLnJlZ2lzdGVyQ29tcG9uZW50Q29udHJvbGxlcihNb3VzZVNoaW1fMS5Nb3VzZVNoaW0uREVGSU5JVElPTik7XG4gICAgYnVpbHRfMS5yZWdpc3RlckNvbXBvbmVudENvbnRyb2xsZXIoTnVtYmVyQ29tcG9uZW50XzEuTnVtYmVyQ29tcG9uZW50LkRFRklOSVRJT04pO1xuICAgIGJ1aWx0XzEucmVnaXN0ZXJDb21wb25lbnRDb250cm9sbGVyKFJhZGlvXzEuUmFkaW8uREVGSU5JVElPTik7XG4gICAgYnVpbHRfMS5yZWdpc3RlckNvbXBvbmVudENvbnRyb2xsZXIoUmlwcGxlXzEuUmlwcGxlLkRFRklOSVRJT04pO1xuICAgIGJ1aWx0XzEucmVnaXN0ZXJDb21wb25lbnRDb250cm9sbGVyKFJvdW5kZWRfMS5Sb3VuZGVkLkRFRklOSVRJT04pO1xuICAgIGJ1aWx0XzEucmVnaXN0ZXJDb21wb25lbnRDb250cm9sbGVyKFNsaWRlcl8xLlNsaWRlci5ERUZJTklUSU9OKTtcbiAgICBidWlsdF8xLnJlZ2lzdGVyQ29tcG9uZW50Q29udHJvbGxlcihTd2l0Y2hfMS5Td2l0Y2guREVGSU5JVElPTik7XG4gICAgYnVpbHRfMS5yZWdpc3RlckNvbXBvbmVudENvbnRyb2xsZXIoVGV4dF8xLlRleHQuREVGSU5JVElPTik7XG4gICAgYnVpbHRfMS5yZWdpc3RlckNvbXBvbmVudENvbnRyb2xsZXIoVG9hc3RfMS5Ub2FzdC5ERUZJTklUSU9OKTtcbiAgICBidWlsdF8xLnJlZ2lzdGVyQ29tcG9uZW50Q29udHJvbGxlcihZb2dhXzEuWW9nYS5ERUZJTklUSU9OKTtcbiAgICBidWlsdF8xLnJlZ2lzdGVyQ29tcG9uZW50Q29udHJvbGxlcihVSV8xLlVJLkRFRklOSVRJT04pO1xuICAgIGJ1aWx0XzEucmVnaXN0ZXJDb21wb25lbnRDb250cm9sbGVyKFNjcm9sbFBhbmVfMS5TY3JvbGxQYW5lLkRFRklOSVRJT04pO1xufVxuZXhwb3J0cy5yZWdpc3Rlck1hdGVyaWFsVWlTeXN0ZW0gPSByZWdpc3Rlck1hdGVyaWFsVWlTeXN0ZW07XG4vLyMgc291cmNlTWFwcGluZ1VSTD11aS5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/ui.js\n");

/***/ }),

/***/ "./node_modules/@tweenjs/tween.js/src/Tween.js":
/*!*****************************************************!*\
  !*** ./node_modules/@tweenjs/tween.js/src/Tween.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(process) {var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * Tween.js - Licensed under the MIT license\n * https://github.com/tweenjs/tween.js\n * ----------------------------------------------\n *\n * See https://github.com/tweenjs/tween.js/graphs/contributors for the full list of contributors.\n * Thank you all, you're awesome!\n */\n\n\nvar _Group = function () {\n\tthis._tweens = {};\n\tthis._tweensAddedDuringUpdate = {};\n};\n\n_Group.prototype = {\n\tgetAll: function () {\n\n\t\treturn Object.keys(this._tweens).map(function (tweenId) {\n\t\t\treturn this._tweens[tweenId];\n\t\t}.bind(this));\n\n\t},\n\n\tremoveAll: function () {\n\n\t\tthis._tweens = {};\n\n\t},\n\n\tadd: function (tween) {\n\n\t\tthis._tweens[tween.getId()] = tween;\n\t\tthis._tweensAddedDuringUpdate[tween.getId()] = tween;\n\n\t},\n\n\tremove: function (tween) {\n\n\t\tdelete this._tweens[tween.getId()];\n\t\tdelete this._tweensAddedDuringUpdate[tween.getId()];\n\n\t},\n\n\tupdate: function (time, preserve) {\n\n\t\tvar tweenIds = Object.keys(this._tweens);\n\n\t\tif (tweenIds.length === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\ttime = time !== undefined ? time : TWEEN.now();\n\n\t\t// Tweens are updated in \"batches\". If you add a new tween during an update, then the\n\t\t// new tween will be updated in the next batch.\n\t\t// If you remove a tween during an update, it will normally still be updated. However,\n\t\t// if the removed tween was added during the current batch, then it will not be updated.\n\t\twhile (tweenIds.length > 0) {\n\t\t\tthis._tweensAddedDuringUpdate = {};\n\n\t\t\tfor (var i = 0; i < tweenIds.length; i++) {\n\n\t\t\t\tif (this._tweens[tweenIds[i]].update(time) === false) {\n\t\t\t\t\tthis._tweens[tweenIds[i]]._isPlaying = false;\n\n\t\t\t\t\tif (!preserve) {\n\t\t\t\t\t\tdelete this._tweens[tweenIds[i]];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttweenIds = Object.keys(this._tweensAddedDuringUpdate);\n\t\t}\n\n\t\treturn true;\n\n\t}\n};\n\nvar TWEEN = new _Group();\n\nTWEEN.Group = _Group;\nTWEEN._nextId = 0;\nTWEEN.nextId = function () {\n\treturn TWEEN._nextId++;\n};\n\n\n// Include a performance.now polyfill.\n// In node.js, use process.hrtime.\nif (typeof (window) === 'undefined' && typeof (process) !== 'undefined') {\n\tTWEEN.now = function () {\n\t\tvar time = process.hrtime();\n\n\t\t// Convert [seconds, nanoseconds] to milliseconds.\n\t\treturn time[0] * 1000 + time[1] / 1000000;\n\t};\n}\n// In a browser, use window.performance.now if it is available.\nelse if (typeof (window) !== 'undefined' &&\n         window.performance !== undefined &&\n\t\t window.performance.now !== undefined) {\n\t// This must be bound, because directly assigning this function\n\t// leads to an invocation exception in Chrome.\n\tTWEEN.now = window.performance.now.bind(window.performance);\n}\n// Use Date.now if it is available.\nelse if (Date.now !== undefined) {\n\tTWEEN.now = Date.now;\n}\n// Otherwise, use 'new Date().getTime()'.\nelse {\n\tTWEEN.now = function () {\n\t\treturn new Date().getTime();\n\t};\n}\n\n\nTWEEN.Tween = function (object, group) {\n\tthis._object = object;\n\tthis._valuesStart = {};\n\tthis._valuesEnd = {};\n\tthis._valuesStartRepeat = {};\n\tthis._duration = 1000;\n\tthis._repeat = 0;\n\tthis._repeatDelayTime = undefined;\n\tthis._yoyo = false;\n\tthis._isPlaying = false;\n\tthis._reversed = false;\n\tthis._delayTime = 0;\n\tthis._startTime = null;\n\tthis._easingFunction = TWEEN.Easing.Linear.None;\n\tthis._interpolationFunction = TWEEN.Interpolation.Linear;\n\tthis._chainedTweens = [];\n\tthis._onStartCallback = null;\n\tthis._onStartCallbackFired = false;\n\tthis._onUpdateCallback = null;\n\tthis._onCompleteCallback = null;\n\tthis._onStopCallback = null;\n\tthis._group = group || TWEEN;\n\tthis._id = TWEEN.nextId();\n\n};\n\nTWEEN.Tween.prototype = {\n\tgetId: function getId() {\n\t\treturn this._id;\n\t},\n\n\tisPlaying: function isPlaying() {\n\t\treturn this._isPlaying;\n\t},\n\n\tto: function to(properties, duration) {\n\n\t\tthis._valuesEnd = properties;\n\n\t\tif (duration !== undefined) {\n\t\t\tthis._duration = duration;\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tstart: function start(time) {\n\n\t\tthis._group.add(this);\n\n\t\tthis._isPlaying = true;\n\n\t\tthis._onStartCallbackFired = false;\n\n\t\tthis._startTime = time !== undefined ? time : TWEEN.now();\n\t\tthis._startTime += this._delayTime;\n\n\t\tfor (var property in this._valuesEnd) {\n\n\t\t\t// Check if an Array was provided as property value\n\t\t\tif (this._valuesEnd[property] instanceof Array) {\n\n\t\t\t\tif (this._valuesEnd[property].length === 0) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Create a local copy of the Array with the start value at the front\n\t\t\t\tthis._valuesEnd[property] = [this._object[property]].concat(this._valuesEnd[property]);\n\n\t\t\t}\n\n\t\t\t// If `to()` specifies a property that doesn't exist in the source object,\n\t\t\t// we should not set that property in the object\n\t\t\tif (this._object[property] === undefined) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Save the starting value.\n\t\t\tthis._valuesStart[property] = this._object[property];\n\n\t\t\tif ((this._valuesStart[property] instanceof Array) === false) {\n\t\t\t\tthis._valuesStart[property] *= 1.0; // Ensures we're using numbers, not strings\n\t\t\t}\n\n\t\t\tthis._valuesStartRepeat[property] = this._valuesStart[property] || 0;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tstop: function stop() {\n\n\t\tif (!this._isPlaying) {\n\t\t\treturn this;\n\t\t}\n\n\t\tthis._group.remove(this);\n\t\tthis._isPlaying = false;\n\n\t\tif (this._onStopCallback !== null) {\n\t\t\tthis._onStopCallback.call(this._object, this._object);\n\t\t}\n\n\t\tthis.stopChainedTweens();\n\t\treturn this;\n\n\t},\n\n\tend: function end() {\n\n\t\tthis.update(this._startTime + this._duration);\n\t\treturn this;\n\n\t},\n\n\tstopChainedTweens: function stopChainedTweens() {\n\n\t\tfor (var i = 0, numChainedTweens = this._chainedTweens.length; i < numChainedTweens; i++) {\n\t\t\tthis._chainedTweens[i].stop();\n\t\t}\n\n\t},\n\n\tdelay: function delay(amount) {\n\n\t\tthis._delayTime = amount;\n\t\treturn this;\n\n\t},\n\n\trepeat: function repeat(times) {\n\n\t\tthis._repeat = times;\n\t\treturn this;\n\n\t},\n\n\trepeatDelay: function repeatDelay(amount) {\n\n\t\tthis._repeatDelayTime = amount;\n\t\treturn this;\n\n\t},\n\n\tyoyo: function yoyo(yoyo) {\n\n\t\tthis._yoyo = yoyo;\n\t\treturn this;\n\n\t},\n\n\teasing: function easing(easing) {\n\n\t\tthis._easingFunction = easing;\n\t\treturn this;\n\n\t},\n\n\tinterpolation: function interpolation(interpolation) {\n\n\t\tthis._interpolationFunction = interpolation;\n\t\treturn this;\n\n\t},\n\n\tchain: function chain() {\n\n\t\tthis._chainedTweens = arguments;\n\t\treturn this;\n\n\t},\n\n\tonStart: function onStart(callback) {\n\n\t\tthis._onStartCallback = callback;\n\t\treturn this;\n\n\t},\n\n\tonUpdate: function onUpdate(callback) {\n\n\t\tthis._onUpdateCallback = callback;\n\t\treturn this;\n\n\t},\n\n\tonComplete: function onComplete(callback) {\n\n\t\tthis._onCompleteCallback = callback;\n\t\treturn this;\n\n\t},\n\n\tonStop: function onStop(callback) {\n\n\t\tthis._onStopCallback = callback;\n\t\treturn this;\n\n\t},\n\n\tupdate: function update(time) {\n\n\t\tvar property;\n\t\tvar elapsed;\n\t\tvar value;\n\n\t\tif (time < this._startTime) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (this._onStartCallbackFired === false) {\n\n\t\t\tif (this._onStartCallback !== null) {\n\t\t\t\tthis._onStartCallback.call(this._object, this._object);\n\t\t\t}\n\n\t\t\tthis._onStartCallbackFired = true;\n\t\t}\n\n\t\telapsed = (time - this._startTime) / this._duration;\n\t\telapsed = elapsed > 1 ? 1 : elapsed;\n\n\t\tvalue = this._easingFunction(elapsed);\n\n\t\tfor (property in this._valuesEnd) {\n\n\t\t\t// Don't update properties that do not exist in the source object\n\t\t\tif (this._valuesStart[property] === undefined) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar start = this._valuesStart[property] || 0;\n\t\t\tvar end = this._valuesEnd[property];\n\n\t\t\tif (end instanceof Array) {\n\n\t\t\t\tthis._object[property] = this._interpolationFunction(end, value);\n\n\t\t\t} else {\n\n\t\t\t\t// Parses relative end values with start as base (e.g.: +10, -3)\n\t\t\t\tif (typeof (end) === 'string') {\n\n\t\t\t\t\tif (end.charAt(0) === '+' || end.charAt(0) === '-') {\n\t\t\t\t\t\tend = start + parseFloat(end);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tend = parseFloat(end);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Protect against non numeric properties.\n\t\t\t\tif (typeof (end) === 'number') {\n\t\t\t\t\tthis._object[property] = start + (end - start) * value;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif (this._onUpdateCallback !== null) {\n\t\t\tthis._onUpdateCallback.call(this._object, value);\n\t\t}\n\n\t\tif (elapsed === 1) {\n\n\t\t\tif (this._repeat > 0) {\n\n\t\t\t\tif (isFinite(this._repeat)) {\n\t\t\t\t\tthis._repeat--;\n\t\t\t\t}\n\n\t\t\t\t// Reassign starting values, restart by making startTime = now\n\t\t\t\tfor (property in this._valuesStartRepeat) {\n\n\t\t\t\t\tif (typeof (this._valuesEnd[property]) === 'string') {\n\t\t\t\t\t\tthis._valuesStartRepeat[property] = this._valuesStartRepeat[property] + parseFloat(this._valuesEnd[property]);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this._yoyo) {\n\t\t\t\t\t\tvar tmp = this._valuesStartRepeat[property];\n\n\t\t\t\t\t\tthis._valuesStartRepeat[property] = this._valuesEnd[property];\n\t\t\t\t\t\tthis._valuesEnd[property] = tmp;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._valuesStart[property] = this._valuesStartRepeat[property];\n\n\t\t\t\t}\n\n\t\t\t\tif (this._yoyo) {\n\t\t\t\t\tthis._reversed = !this._reversed;\n\t\t\t\t}\n\n\t\t\t\tif (this._repeatDelayTime !== undefined) {\n\t\t\t\t\tthis._startTime = time + this._repeatDelayTime;\n\t\t\t\t} else {\n\t\t\t\t\tthis._startTime = time + this._delayTime;\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\n\t\t\t} else {\n\n\t\t\t\tif (this._onCompleteCallback !== null) {\n\n\t\t\t\t\tthis._onCompleteCallback.call(this._object, this._object);\n\t\t\t\t}\n\n\t\t\t\tfor (var i = 0, numChainedTweens = this._chainedTweens.length; i < numChainedTweens; i++) {\n\t\t\t\t\t// Make the chained tweens start exactly at the time they should,\n\t\t\t\t\t// even if the `update()` method was called way past the duration of the tween\n\t\t\t\t\tthis._chainedTweens[i].start(this._startTime + this._duration);\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n};\n\n\nTWEEN.Easing = {\n\n\tLinear: {\n\n\t\tNone: function (k) {\n\n\t\t\treturn k;\n\n\t\t}\n\n\t},\n\n\tQuadratic: {\n\n\t\tIn: function (k) {\n\n\t\t\treturn k * k;\n\n\t\t},\n\n\t\tOut: function (k) {\n\n\t\t\treturn k * (2 - k);\n\n\t\t},\n\n\t\tInOut: function (k) {\n\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn 0.5 * k * k;\n\t\t\t}\n\n\t\t\treturn - 0.5 * (--k * (k - 2) - 1);\n\n\t\t}\n\n\t},\n\n\tCubic: {\n\n\t\tIn: function (k) {\n\n\t\t\treturn k * k * k;\n\n\t\t},\n\n\t\tOut: function (k) {\n\n\t\t\treturn --k * k * k + 1;\n\n\t\t},\n\n\t\tInOut: function (k) {\n\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn 0.5 * k * k * k;\n\t\t\t}\n\n\t\t\treturn 0.5 * ((k -= 2) * k * k + 2);\n\n\t\t}\n\n\t},\n\n\tQuartic: {\n\n\t\tIn: function (k) {\n\n\t\t\treturn k * k * k * k;\n\n\t\t},\n\n\t\tOut: function (k) {\n\n\t\t\treturn 1 - (--k * k * k * k);\n\n\t\t},\n\n\t\tInOut: function (k) {\n\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn 0.5 * k * k * k * k;\n\t\t\t}\n\n\t\t\treturn - 0.5 * ((k -= 2) * k * k * k - 2);\n\n\t\t}\n\n\t},\n\n\tQuintic: {\n\n\t\tIn: function (k) {\n\n\t\t\treturn k * k * k * k * k;\n\n\t\t},\n\n\t\tOut: function (k) {\n\n\t\t\treturn --k * k * k * k * k + 1;\n\n\t\t},\n\n\t\tInOut: function (k) {\n\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn 0.5 * k * k * k * k * k;\n\t\t\t}\n\n\t\t\treturn 0.5 * ((k -= 2) * k * k * k * k + 2);\n\n\t\t}\n\n\t},\n\n\tSinusoidal: {\n\n\t\tIn: function (k) {\n\n\t\t\treturn 1 - Math.cos(k * Math.PI / 2);\n\n\t\t},\n\n\t\tOut: function (k) {\n\n\t\t\treturn Math.sin(k * Math.PI / 2);\n\n\t\t},\n\n\t\tInOut: function (k) {\n\n\t\t\treturn 0.5 * (1 - Math.cos(Math.PI * k));\n\n\t\t}\n\n\t},\n\n\tExponential: {\n\n\t\tIn: function (k) {\n\n\t\t\treturn k === 0 ? 0 : Math.pow(1024, k - 1);\n\n\t\t},\n\n\t\tOut: function (k) {\n\n\t\t\treturn k === 1 ? 1 : 1 - Math.pow(2, - 10 * k);\n\n\t\t},\n\n\t\tInOut: function (k) {\n\n\t\t\tif (k === 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tif (k === 1) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn 0.5 * Math.pow(1024, k - 1);\n\t\t\t}\n\n\t\t\treturn 0.5 * (- Math.pow(2, - 10 * (k - 1)) + 2);\n\n\t\t}\n\n\t},\n\n\tCircular: {\n\n\t\tIn: function (k) {\n\n\t\t\treturn 1 - Math.sqrt(1 - k * k);\n\n\t\t},\n\n\t\tOut: function (k) {\n\n\t\t\treturn Math.sqrt(1 - (--k * k));\n\n\t\t},\n\n\t\tInOut: function (k) {\n\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn - 0.5 * (Math.sqrt(1 - k * k) - 1);\n\t\t\t}\n\n\t\t\treturn 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n\n\t\t}\n\n\t},\n\n\tElastic: {\n\n\t\tIn: function (k) {\n\n\t\t\tif (k === 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tif (k === 1) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\treturn -Math.pow(2, 10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI);\n\n\t\t},\n\n\t\tOut: function (k) {\n\n\t\t\tif (k === 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tif (k === 1) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\treturn Math.pow(2, -10 * k) * Math.sin((k - 0.1) * 5 * Math.PI) + 1;\n\n\t\t},\n\n\t\tInOut: function (k) {\n\n\t\t\tif (k === 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tif (k === 1) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\tk *= 2;\n\n\t\t\tif (k < 1) {\n\t\t\t\treturn -0.5 * Math.pow(2, 10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI);\n\t\t\t}\n\n\t\t\treturn 0.5 * Math.pow(2, -10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI) + 1;\n\n\t\t}\n\n\t},\n\n\tBack: {\n\n\t\tIn: function (k) {\n\n\t\t\tvar s = 1.70158;\n\n\t\t\treturn k * k * ((s + 1) * k - s);\n\n\t\t},\n\n\t\tOut: function (k) {\n\n\t\t\tvar s = 1.70158;\n\n\t\t\treturn --k * k * ((s + 1) * k + s) + 1;\n\n\t\t},\n\n\t\tInOut: function (k) {\n\n\t\t\tvar s = 1.70158 * 1.525;\n\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn 0.5 * (k * k * ((s + 1) * k - s));\n\t\t\t}\n\n\t\t\treturn 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n\n\t\t}\n\n\t},\n\n\tBounce: {\n\n\t\tIn: function (k) {\n\n\t\t\treturn 1 - TWEEN.Easing.Bounce.Out(1 - k);\n\n\t\t},\n\n\t\tOut: function (k) {\n\n\t\t\tif (k < (1 / 2.75)) {\n\t\t\t\treturn 7.5625 * k * k;\n\t\t\t} else if (k < (2 / 2.75)) {\n\t\t\t\treturn 7.5625 * (k -= (1.5 / 2.75)) * k + 0.75;\n\t\t\t} else if (k < (2.5 / 2.75)) {\n\t\t\t\treturn 7.5625 * (k -= (2.25 / 2.75)) * k + 0.9375;\n\t\t\t} else {\n\t\t\t\treturn 7.5625 * (k -= (2.625 / 2.75)) * k + 0.984375;\n\t\t\t}\n\n\t\t},\n\n\t\tInOut: function (k) {\n\n\t\t\tif (k < 0.5) {\n\t\t\t\treturn TWEEN.Easing.Bounce.In(k * 2) * 0.5;\n\t\t\t}\n\n\t\t\treturn TWEEN.Easing.Bounce.Out(k * 2 - 1) * 0.5 + 0.5;\n\n\t\t}\n\n\t}\n\n};\n\nTWEEN.Interpolation = {\n\n\tLinear: function (v, k) {\n\n\t\tvar m = v.length - 1;\n\t\tvar f = m * k;\n\t\tvar i = Math.floor(f);\n\t\tvar fn = TWEEN.Interpolation.Utils.Linear;\n\n\t\tif (k < 0) {\n\t\t\treturn fn(v[0], v[1], f);\n\t\t}\n\n\t\tif (k > 1) {\n\t\t\treturn fn(v[m], v[m - 1], m - f);\n\t\t}\n\n\t\treturn fn(v[i], v[i + 1 > m ? m : i + 1], f - i);\n\n\t},\n\n\tBezier: function (v, k) {\n\n\t\tvar b = 0;\n\t\tvar n = v.length - 1;\n\t\tvar pw = Math.pow;\n\t\tvar bn = TWEEN.Interpolation.Utils.Bernstein;\n\n\t\tfor (var i = 0; i <= n; i++) {\n\t\t\tb += pw(1 - k, n - i) * pw(k, i) * v[i] * bn(n, i);\n\t\t}\n\n\t\treturn b;\n\n\t},\n\n\tCatmullRom: function (v, k) {\n\n\t\tvar m = v.length - 1;\n\t\tvar f = m * k;\n\t\tvar i = Math.floor(f);\n\t\tvar fn = TWEEN.Interpolation.Utils.CatmullRom;\n\n\t\tif (v[0] === v[m]) {\n\n\t\t\tif (k < 0) {\n\t\t\t\ti = Math.floor(f = m * (1 + k));\n\t\t\t}\n\n\t\t\treturn fn(v[(i - 1 + m) % m], v[i], v[(i + 1) % m], v[(i + 2) % m], f - i);\n\n\t\t} else {\n\n\t\t\tif (k < 0) {\n\t\t\t\treturn v[0] - (fn(v[0], v[0], v[1], v[1], -f) - v[0]);\n\t\t\t}\n\n\t\t\tif (k > 1) {\n\t\t\t\treturn v[m] - (fn(v[m], v[m], v[m - 1], v[m - 1], f - m) - v[m]);\n\t\t\t}\n\n\t\t\treturn fn(v[i ? i - 1 : 0], v[i], v[m < i + 1 ? m : i + 1], v[m < i + 2 ? m : i + 2], f - i);\n\n\t\t}\n\n\t},\n\n\tUtils: {\n\n\t\tLinear: function (p0, p1, t) {\n\n\t\t\treturn (p1 - p0) * t + p0;\n\n\t\t},\n\n\t\tBernstein: function (n, i) {\n\n\t\t\tvar fc = TWEEN.Interpolation.Utils.Factorial;\n\n\t\t\treturn fc(n) / fc(i) / fc(n - i);\n\n\t\t},\n\n\t\tFactorial: (function () {\n\n\t\t\tvar a = [1];\n\n\t\t\treturn function (n) {\n\n\t\t\t\tvar s = 1;\n\n\t\t\t\tif (a[n]) {\n\t\t\t\t\treturn a[n];\n\t\t\t\t}\n\n\t\t\t\tfor (var i = n; i > 1; i--) {\n\t\t\t\t\ts *= i;\n\t\t\t\t}\n\n\t\t\t\ta[n] = s;\n\t\t\t\treturn s;\n\n\t\t\t};\n\n\t\t})(),\n\n\t\tCatmullRom: function (p0, p1, p2, p3, t) {\n\n\t\t\tvar v0 = (p2 - p0) * 0.5;\n\t\t\tvar v1 = (p3 - p1) * 0.5;\n\t\t\tvar t2 = t * t;\n\t\t\tvar t3 = t * t2;\n\n\t\t\treturn (2 * p1 - 2 * p2 + v0 + v1) * t3 + (- 3 * p1 + 3 * p2 - 2 * v0 - v1) * t2 + v0 * t + p1;\n\n\t\t}\n\n\t}\n\n};\n\n// UMD (Universal Module Definition)\n(function (root) {\n\n\tif (true) {\n\n\t\t// AMD\n\t\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n\t\t\treturn TWEEN;\n\t\t}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\t} else {}\n\n})(this);\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../process/browser.js */ \"./node_modules/process/browser.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@tweenjs/tween.js/src/Tween.js\n");

/***/ }),

/***/ "./node_modules/aframe-typescript-boilerplate/built/component/AbstractComponentController.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/aframe-typescript-boilerplate/built/component/AbstractComponentController.js ***!
  \***************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Abstract base class for component implementations.\n */\nclass AbstractComponentController {\n    constructor(component, entity, data) {\n        this.componentName = component.name;\n        this.entity = entity;\n        this.scene = entity.sceneEl;\n        this.data = data;\n        this.component = component;\n    }\n    setData(data) {\n        this.data = data;\n    }\n    getSystemController(systemName) {\n        if (!this.entity.sceneEl) {\n            throw new Error(\"Scene is undefined.\");\n        }\n        const system = this.entity.sceneEl.systems[systemName];\n        if (!system) {\n            throw new Error(\"System is not registered to scene: \" + system);\n        }\n        return system.controller;\n    }\n    getComponentController(componentName) {\n        const component = this.entity.components[componentName];\n        if (!component) {\n            throw new Error(\"Component is not registered to entity: \" + componentName);\n        }\n        return component.controller;\n    }\n    addEventListener(type, listener) {\n        this.entity.addEventListener(type, ((e) => {\n            listener(e.detail);\n        }));\n    }\n    dispatchEvent(eventType, detail) {\n        this.entity.dispatchEvent(new CustomEvent(eventType, { detail: detail }));\n    }\n}\nexports.AbstractComponentController = AbstractComponentController;\n//# sourceMappingURL=AbstractComponentController.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYWZyYW1lLXR5cGVzY3JpcHQtYm9pbGVycGxhdGUvYnVpbHQvY29tcG9uZW50L0Fic3RyYWN0Q29tcG9uZW50Q29udHJvbGxlci5qcz85NTdkIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQThDLGNBQWM7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLDhEQUE4RCxpQkFBaUI7QUFDL0U7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYWZyYW1lLXR5cGVzY3JpcHQtYm9pbGVycGxhdGUvYnVpbHQvY29tcG9uZW50L0Fic3RyYWN0Q29tcG9uZW50Q29udHJvbGxlci5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLyoqXG4gKiBBYnN0cmFjdCBiYXNlIGNsYXNzIGZvciBjb21wb25lbnQgaW1wbGVtZW50YXRpb25zLlxuICovXG5jbGFzcyBBYnN0cmFjdENvbXBvbmVudENvbnRyb2xsZXIge1xuICAgIGNvbnN0cnVjdG9yKGNvbXBvbmVudCwgZW50aXR5LCBkYXRhKSB7XG4gICAgICAgIHRoaXMuY29tcG9uZW50TmFtZSA9IGNvbXBvbmVudC5uYW1lO1xuICAgICAgICB0aGlzLmVudGl0eSA9IGVudGl0eTtcbiAgICAgICAgdGhpcy5zY2VuZSA9IGVudGl0eS5zY2VuZUVsO1xuICAgICAgICB0aGlzLmRhdGEgPSBkYXRhO1xuICAgICAgICB0aGlzLmNvbXBvbmVudCA9IGNvbXBvbmVudDtcbiAgICB9XG4gICAgc2V0RGF0YShkYXRhKSB7XG4gICAgICAgIHRoaXMuZGF0YSA9IGRhdGE7XG4gICAgfVxuICAgIGdldFN5c3RlbUNvbnRyb2xsZXIoc3lzdGVtTmFtZSkge1xuICAgICAgICBpZiAoIXRoaXMuZW50aXR5LnNjZW5lRWwpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIlNjZW5lIGlzIHVuZGVmaW5lZC5cIik7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3Qgc3lzdGVtID0gdGhpcy5lbnRpdHkuc2NlbmVFbC5zeXN0ZW1zW3N5c3RlbU5hbWVdO1xuICAgICAgICBpZiAoIXN5c3RlbSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiU3lzdGVtIGlzIG5vdCByZWdpc3RlcmVkIHRvIHNjZW5lOiBcIiArIHN5c3RlbSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHN5c3RlbS5jb250cm9sbGVyO1xuICAgIH1cbiAgICBnZXRDb21wb25lbnRDb250cm9sbGVyKGNvbXBvbmVudE5hbWUpIHtcbiAgICAgICAgY29uc3QgY29tcG9uZW50ID0gdGhpcy5lbnRpdHkuY29tcG9uZW50c1tjb21wb25lbnROYW1lXTtcbiAgICAgICAgaWYgKCFjb21wb25lbnQpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkNvbXBvbmVudCBpcyBub3QgcmVnaXN0ZXJlZCB0byBlbnRpdHk6IFwiICsgY29tcG9uZW50TmFtZSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGNvbXBvbmVudC5jb250cm9sbGVyO1xuICAgIH1cbiAgICBhZGRFdmVudExpc3RlbmVyKHR5cGUsIGxpc3RlbmVyKSB7XG4gICAgICAgIHRoaXMuZW50aXR5LmFkZEV2ZW50TGlzdGVuZXIodHlwZSwgKChlKSA9PiB7XG4gICAgICAgICAgICBsaXN0ZW5lcihlLmRldGFpbCk7XG4gICAgICAgIH0pKTtcbiAgICB9XG4gICAgZGlzcGF0Y2hFdmVudChldmVudFR5cGUsIGRldGFpbCkge1xuICAgICAgICB0aGlzLmVudGl0eS5kaXNwYXRjaEV2ZW50KG5ldyBDdXN0b21FdmVudChldmVudFR5cGUsIHsgZGV0YWlsOiBkZXRhaWwgfSkpO1xuICAgIH1cbn1cbmV4cG9ydHMuQWJzdHJhY3RDb21wb25lbnRDb250cm9sbGVyID0gQWJzdHJhY3RDb21wb25lbnRDb250cm9sbGVyO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9QWJzdHJhY3RDb21wb25lbnRDb250cm9sbGVyLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/aframe-typescript-boilerplate/built/component/AbstractComponentController.js\n");

/***/ }),

/***/ "./node_modules/aframe-typescript-boilerplate/built/component/ComponentControllerDefinition.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/aframe-typescript-boilerplate/built/component/ComponentControllerDefinition.js ***!
  \*****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass ComponentControllerDefinition {\n    constructor(componentName, schema, multiple, tick, constructComponentController) {\n        this.features = [];\n        this.componentName = componentName;\n        this.schema = schema;\n        this.multiple = multiple;\n        this.tick = tick;\n        this.constructComponentController = constructComponentController;\n    }\n    add(feature) {\n        this.features.push(feature);\n        return this;\n    }\n}\nexports.ComponentControllerDefinition = ComponentControllerDefinition;\n//# sourceMappingURL=ComponentControllerDefinition.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYWZyYW1lLXR5cGVzY3JpcHQtYm9pbGVycGxhdGUvYnVpbHQvY29tcG9uZW50L0NvbXBvbmVudENvbnRyb2xsZXJEZWZpbml0aW9uLmpzP2M1ZTAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBOEMsY0FBYztBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9hZnJhbWUtdHlwZXNjcmlwdC1ib2lsZXJwbGF0ZS9idWlsdC9jb21wb25lbnQvQ29tcG9uZW50Q29udHJvbGxlckRlZmluaXRpb24uanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNsYXNzIENvbXBvbmVudENvbnRyb2xsZXJEZWZpbml0aW9uIHtcbiAgICBjb25zdHJ1Y3Rvcihjb21wb25lbnROYW1lLCBzY2hlbWEsIG11bHRpcGxlLCB0aWNrLCBjb25zdHJ1Y3RDb21wb25lbnRDb250cm9sbGVyKSB7XG4gICAgICAgIHRoaXMuZmVhdHVyZXMgPSBbXTtcbiAgICAgICAgdGhpcy5jb21wb25lbnROYW1lID0gY29tcG9uZW50TmFtZTtcbiAgICAgICAgdGhpcy5zY2hlbWEgPSBzY2hlbWE7XG4gICAgICAgIHRoaXMubXVsdGlwbGUgPSBtdWx0aXBsZTtcbiAgICAgICAgdGhpcy50aWNrID0gdGljaztcbiAgICAgICAgdGhpcy5jb25zdHJ1Y3RDb21wb25lbnRDb250cm9sbGVyID0gY29uc3RydWN0Q29tcG9uZW50Q29udHJvbGxlcjtcbiAgICB9XG4gICAgYWRkKGZlYXR1cmUpIHtcbiAgICAgICAgdGhpcy5mZWF0dXJlcy5wdXNoKGZlYXR1cmUpO1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG59XG5leHBvcnRzLkNvbXBvbmVudENvbnRyb2xsZXJEZWZpbml0aW9uID0gQ29tcG9uZW50Q29udHJvbGxlckRlZmluaXRpb247XG4vLyMgc291cmNlTWFwcGluZ1VSTD1Db21wb25lbnRDb250cm9sbGVyRGVmaW5pdGlvbi5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/aframe-typescript-boilerplate/built/component/ComponentControllerDefinition.js\n");

/***/ }),

/***/ "./node_modules/aframe-typescript-boilerplate/built/component/CompositeComponentController.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/aframe-typescript-boilerplate/built/component/CompositeComponentController.js ***!
  \****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst AbstractComponentController_1 = __webpack_require__(/*! ./AbstractComponentController */ \"./node_modules/aframe-typescript-boilerplate/built/component/AbstractComponentController.js\");\n/**\n * Enabled composing one component from many features which can encapsulate same functionality as components.\n */\nclass CompositeComponentController extends AbstractComponentController_1.AbstractComponentController {\n    constructor(component, entity, data) {\n        super(component, entity, data);\n        this.features = [];\n    }\n    init() {\n        this.features.forEach(controller => {\n            controller.init();\n        });\n    }\n    update(data, oldData) {\n        this.features.forEach(controller => {\n            controller.update(data, oldData);\n        });\n    }\n    remove() {\n        this.features.forEach(controller => {\n            controller.remove();\n        });\n    }\n    pause() {\n        this.features.forEach(controller => {\n            controller.pause();\n        });\n    }\n    play() {\n        this.features.forEach(controller => {\n            controller.play();\n        });\n    }\n    tick(time, timeDelta) {\n        this.features.forEach(controller => {\n            controller.tick(time, timeDelta);\n        });\n    }\n    addFeature(feature) {\n        this.features.push(feature);\n    }\n}\nexports.CompositeComponentController = CompositeComponentController;\n//# sourceMappingURL=CompositeComponentController.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYWZyYW1lLXR5cGVzY3JpcHQtYm9pbGVycGxhdGUvYnVpbHQvY29tcG9uZW50L0NvbXBvc2l0ZUNvbXBvbmVudENvbnRyb2xsZXIuanM/NTVmYyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE4QyxjQUFjO0FBQzVELHNDQUFzQyxtQkFBTyxDQUFDLGtJQUErQjtBQUM3RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL2FmcmFtZS10eXBlc2NyaXB0LWJvaWxlcnBsYXRlL2J1aWx0L2NvbXBvbmVudC9Db21wb3NpdGVDb21wb25lbnRDb250cm9sbGVyLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCBBYnN0cmFjdENvbXBvbmVudENvbnRyb2xsZXJfMSA9IHJlcXVpcmUoXCIuL0Fic3RyYWN0Q29tcG9uZW50Q29udHJvbGxlclwiKTtcbi8qKlxuICogRW5hYmxlZCBjb21wb3Npbmcgb25lIGNvbXBvbmVudCBmcm9tIG1hbnkgZmVhdHVyZXMgd2hpY2ggY2FuIGVuY2Fwc3VsYXRlIHNhbWUgZnVuY3Rpb25hbGl0eSBhcyBjb21wb25lbnRzLlxuICovXG5jbGFzcyBDb21wb3NpdGVDb21wb25lbnRDb250cm9sbGVyIGV4dGVuZHMgQWJzdHJhY3RDb21wb25lbnRDb250cm9sbGVyXzEuQWJzdHJhY3RDb21wb25lbnRDb250cm9sbGVyIHtcbiAgICBjb25zdHJ1Y3Rvcihjb21wb25lbnQsIGVudGl0eSwgZGF0YSkge1xuICAgICAgICBzdXBlcihjb21wb25lbnQsIGVudGl0eSwgZGF0YSk7XG4gICAgICAgIHRoaXMuZmVhdHVyZXMgPSBbXTtcbiAgICB9XG4gICAgaW5pdCgpIHtcbiAgICAgICAgdGhpcy5mZWF0dXJlcy5mb3JFYWNoKGNvbnRyb2xsZXIgPT4ge1xuICAgICAgICAgICAgY29udHJvbGxlci5pbml0KCk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICB1cGRhdGUoZGF0YSwgb2xkRGF0YSkge1xuICAgICAgICB0aGlzLmZlYXR1cmVzLmZvckVhY2goY29udHJvbGxlciA9PiB7XG4gICAgICAgICAgICBjb250cm9sbGVyLnVwZGF0ZShkYXRhLCBvbGREYXRhKTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHJlbW92ZSgpIHtcbiAgICAgICAgdGhpcy5mZWF0dXJlcy5mb3JFYWNoKGNvbnRyb2xsZXIgPT4ge1xuICAgICAgICAgICAgY29udHJvbGxlci5yZW1vdmUoKTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHBhdXNlKCkge1xuICAgICAgICB0aGlzLmZlYXR1cmVzLmZvckVhY2goY29udHJvbGxlciA9PiB7XG4gICAgICAgICAgICBjb250cm9sbGVyLnBhdXNlKCk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBwbGF5KCkge1xuICAgICAgICB0aGlzLmZlYXR1cmVzLmZvckVhY2goY29udHJvbGxlciA9PiB7XG4gICAgICAgICAgICBjb250cm9sbGVyLnBsYXkoKTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHRpY2sodGltZSwgdGltZURlbHRhKSB7XG4gICAgICAgIHRoaXMuZmVhdHVyZXMuZm9yRWFjaChjb250cm9sbGVyID0+IHtcbiAgICAgICAgICAgIGNvbnRyb2xsZXIudGljayh0aW1lLCB0aW1lRGVsdGEpO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgYWRkRmVhdHVyZShmZWF0dXJlKSB7XG4gICAgICAgIHRoaXMuZmVhdHVyZXMucHVzaChmZWF0dXJlKTtcbiAgICB9XG59XG5leHBvcnRzLkNvbXBvc2l0ZUNvbXBvbmVudENvbnRyb2xsZXIgPSBDb21wb3NpdGVDb21wb25lbnRDb250cm9sbGVyO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Q29tcG9zaXRlQ29tcG9uZW50Q29udHJvbGxlci5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/aframe-typescript-boilerplate/built/component/CompositeComponentController.js\n");

/***/ }),

/***/ "./node_modules/aframe-typescript-boilerplate/built/component/ExampleController.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/aframe-typescript-boilerplate/built/component/ExampleController.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst AbstractComponentController_1 = __webpack_require__(/*! ./AbstractComponentController */ \"./node_modules/aframe-typescript-boilerplate/built/component/AbstractComponentController.js\");\nconst ComponentControllerDefinition_1 = __webpack_require__(/*! ./ComponentControllerDefinition */ \"./node_modules/aframe-typescript-boilerplate/built/component/ComponentControllerDefinition.js\");\nclass ExampleController extends AbstractComponentController_1.AbstractComponentController {\n    constructor(component, entity, data) {\n        super(component, entity, data);\n    }\n    init() { }\n    update(data, oldData) { }\n    remove() { }\n    pause() { }\n    play() { }\n    tick(time, timeDelta) { }\n}\nExampleController.DEFINITION = new ComponentControllerDefinition_1.ComponentControllerDefinition(\n/* Name */ \"example\", \n/* Schema */ {}, \n/* Multiple */ false, \n/* Receive ticks */ false, \n/* Factory function */ (component, entity, data) => new ExampleController(component, entity, data));\nexports.ExampleController = ExampleController;\n//# sourceMappingURL=ExampleController.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYWZyYW1lLXR5cGVzY3JpcHQtYm9pbGVycGxhdGUvYnVpbHQvY29tcG9uZW50L0V4YW1wbGVDb250cm9sbGVyLmpzPzRmNDMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBOEMsY0FBYztBQUM1RCxzQ0FBc0MsbUJBQU8sQ0FBQyxrSUFBK0I7QUFDN0Usd0NBQXdDLG1CQUFPLENBQUMsc0lBQWlDO0FBQ2pGO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaLDJCQUEyQjtBQUMzQixjQUFjO0FBQ2QsYUFBYTtBQUNiLFlBQVk7QUFDWiwyQkFBMkI7QUFDM0I7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYWZyYW1lLXR5cGVzY3JpcHQtYm9pbGVycGxhdGUvYnVpbHQvY29tcG9uZW50L0V4YW1wbGVDb250cm9sbGVyLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCBBYnN0cmFjdENvbXBvbmVudENvbnRyb2xsZXJfMSA9IHJlcXVpcmUoXCIuL0Fic3RyYWN0Q29tcG9uZW50Q29udHJvbGxlclwiKTtcbmNvbnN0IENvbXBvbmVudENvbnRyb2xsZXJEZWZpbml0aW9uXzEgPSByZXF1aXJlKFwiLi9Db21wb25lbnRDb250cm9sbGVyRGVmaW5pdGlvblwiKTtcbmNsYXNzIEV4YW1wbGVDb250cm9sbGVyIGV4dGVuZHMgQWJzdHJhY3RDb21wb25lbnRDb250cm9sbGVyXzEuQWJzdHJhY3RDb21wb25lbnRDb250cm9sbGVyIHtcbiAgICBjb25zdHJ1Y3Rvcihjb21wb25lbnQsIGVudGl0eSwgZGF0YSkge1xuICAgICAgICBzdXBlcihjb21wb25lbnQsIGVudGl0eSwgZGF0YSk7XG4gICAgfVxuICAgIGluaXQoKSB7IH1cbiAgICB1cGRhdGUoZGF0YSwgb2xkRGF0YSkgeyB9XG4gICAgcmVtb3ZlKCkgeyB9XG4gICAgcGF1c2UoKSB7IH1cbiAgICBwbGF5KCkgeyB9XG4gICAgdGljayh0aW1lLCB0aW1lRGVsdGEpIHsgfVxufVxuRXhhbXBsZUNvbnRyb2xsZXIuREVGSU5JVElPTiA9IG5ldyBDb21wb25lbnRDb250cm9sbGVyRGVmaW5pdGlvbl8xLkNvbXBvbmVudENvbnRyb2xsZXJEZWZpbml0aW9uKFxuLyogTmFtZSAqLyBcImV4YW1wbGVcIiwgXG4vKiBTY2hlbWEgKi8ge30sIFxuLyogTXVsdGlwbGUgKi8gZmFsc2UsIFxuLyogUmVjZWl2ZSB0aWNrcyAqLyBmYWxzZSwgXG4vKiBGYWN0b3J5IGZ1bmN0aW9uICovIChjb21wb25lbnQsIGVudGl0eSwgZGF0YSkgPT4gbmV3IEV4YW1wbGVDb250cm9sbGVyKGNvbXBvbmVudCwgZW50aXR5LCBkYXRhKSk7XG5leHBvcnRzLkV4YW1wbGVDb250cm9sbGVyID0gRXhhbXBsZUNvbnRyb2xsZXI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1FeGFtcGxlQ29udHJvbGxlci5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/aframe-typescript-boilerplate/built/component/ExampleController.js\n");

/***/ }),

/***/ "./node_modules/aframe-typescript-boilerplate/built/feature/AbstractFeature.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/aframe-typescript-boilerplate/built/feature/AbstractFeature.js ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Features allows implementing component sub functionalities in smaller units and be reused in several systems or components.\n */\nclass AbstractFeature {\n    constructor(name, controller, entity) {\n        this.name = name;\n        this.entity = entity;\n        this.controller = controller;\n    }\n    addEventListener(type, listener) {\n        this.entity.addEventListener(type, ((e) => {\n            listener(e.detail);\n        }));\n    }\n    dispatchEvent(eventType, detail) {\n        this.entity.dispatchEvent(new CustomEvent(eventType, { detail: detail }));\n    }\n}\nexports.AbstractFeature = AbstractFeature;\n//# sourceMappingURL=AbstractFeature.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYWZyYW1lLXR5cGVzY3JpcHQtYm9pbGVycGxhdGUvYnVpbHQvZmVhdHVyZS9BYnN0cmFjdEZlYXR1cmUuanM/Y2Y3ZCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE4QyxjQUFjO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsOERBQThELGlCQUFpQjtBQUMvRTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9hZnJhbWUtdHlwZXNjcmlwdC1ib2lsZXJwbGF0ZS9idWlsdC9mZWF0dXJlL0Fic3RyYWN0RmVhdHVyZS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLyoqXG4gKiBGZWF0dXJlcyBhbGxvd3MgaW1wbGVtZW50aW5nIGNvbXBvbmVudCBzdWIgZnVuY3Rpb25hbGl0aWVzIGluIHNtYWxsZXIgdW5pdHMgYW5kIGJlIHJldXNlZCBpbiBzZXZlcmFsIHN5c3RlbXMgb3IgY29tcG9uZW50cy5cbiAqL1xuY2xhc3MgQWJzdHJhY3RGZWF0dXJlIHtcbiAgICBjb25zdHJ1Y3RvcihuYW1lLCBjb250cm9sbGVyLCBlbnRpdHkpIHtcbiAgICAgICAgdGhpcy5uYW1lID0gbmFtZTtcbiAgICAgICAgdGhpcy5lbnRpdHkgPSBlbnRpdHk7XG4gICAgICAgIHRoaXMuY29udHJvbGxlciA9IGNvbnRyb2xsZXI7XG4gICAgfVxuICAgIGFkZEV2ZW50TGlzdGVuZXIodHlwZSwgbGlzdGVuZXIpIHtcbiAgICAgICAgdGhpcy5lbnRpdHkuYWRkRXZlbnRMaXN0ZW5lcih0eXBlLCAoKGUpID0+IHtcbiAgICAgICAgICAgIGxpc3RlbmVyKGUuZGV0YWlsKTtcbiAgICAgICAgfSkpO1xuICAgIH1cbiAgICBkaXNwYXRjaEV2ZW50KGV2ZW50VHlwZSwgZGV0YWlsKSB7XG4gICAgICAgIHRoaXMuZW50aXR5LmRpc3BhdGNoRXZlbnQobmV3IEN1c3RvbUV2ZW50KGV2ZW50VHlwZSwgeyBkZXRhaWw6IGRldGFpbCB9KSk7XG4gICAgfVxufVxuZXhwb3J0cy5BYnN0cmFjdEZlYXR1cmUgPSBBYnN0cmFjdEZlYXR1cmU7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1BYnN0cmFjdEZlYXR1cmUuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/aframe-typescript-boilerplate/built/feature/AbstractFeature.js\n");

/***/ }),

/***/ "./node_modules/aframe-typescript-boilerplate/built/index.js":
/*!*******************************************************************!*\
  !*** ./node_modules/aframe-typescript-boilerplate/built/index.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar AbstractComponentController_1 = __webpack_require__(/*! ./component/AbstractComponentController */ \"./node_modules/aframe-typescript-boilerplate/built/component/AbstractComponentController.js\");\nexports.AbstractComponentController = AbstractComponentController_1.AbstractComponentController;\nvar ComponentControllerDefinition_1 = __webpack_require__(/*! ./component/ComponentControllerDefinition */ \"./node_modules/aframe-typescript-boilerplate/built/component/ComponentControllerDefinition.js\");\nexports.ComponentControllerDefinition = ComponentControllerDefinition_1.ComponentControllerDefinition;\nvar CompositeComponentController_1 = __webpack_require__(/*! ./component/CompositeComponentController */ \"./node_modules/aframe-typescript-boilerplate/built/component/CompositeComponentController.js\");\nexports.CompositeComponentController = CompositeComponentController_1.CompositeComponentController;\nvar ExampleController_1 = __webpack_require__(/*! ./component/ExampleController */ \"./node_modules/aframe-typescript-boilerplate/built/component/ExampleController.js\");\nexports.ExampleController = ExampleController_1.ExampleController;\nvar AbstractFeature_1 = __webpack_require__(/*! ./feature/AbstractFeature */ \"./node_modules/aframe-typescript-boilerplate/built/feature/AbstractFeature.js\");\nexports.AbstractFeature = AbstractFeature_1.AbstractFeature;\nvar AbstractSystemController_1 = __webpack_require__(/*! ./system/AbstractSystemController */ \"./node_modules/aframe-typescript-boilerplate/built/system/AbstractSystemController.js\");\nexports.AbstractSystemController = AbstractSystemController_1.AbstractSystemController;\nvar CompositeSystemController_1 = __webpack_require__(/*! ./system/CompositeSystemController */ \"./node_modules/aframe-typescript-boilerplate/built/system/CompositeSystemController.js\");\nexports.CompositeSystemController = CompositeSystemController_1.CompositeSystemController;\nvar ExampleSystemController_1 = __webpack_require__(/*! ./system/ExampleSystemController */ \"./node_modules/aframe-typescript-boilerplate/built/system/ExampleSystemController.js\");\nexports.ExampleSystemController = ExampleSystemController_1.ExampleSystemController;\nvar SystemControllerDefinition_1 = __webpack_require__(/*! ./system/SystemControllerDefinition */ \"./node_modules/aframe-typescript-boilerplate/built/system/SystemControllerDefinition.js\");\nexports.SystemControllerDefinition = SystemControllerDefinition_1.SystemControllerDefinition;\nfunction registerComponentController(definition) {\n    if (typeof AFRAME !== 'undefined') {\n        if (definition.tick) {\n            AFRAME.registerComponent(definition.componentName, {\n                schema: definition.schema,\n                multiple: definition.multiple,\n                init: function () {\n                    const controller = definition.constructComponentController(this, this.el, this.data);\n                    this.controller = controller;\n                    if (controller.addFeature) {\n                        const compositeController = controller;\n                        for (const feature of definition.features) {\n                            compositeController.addFeature(feature(compositeController, controller.entity));\n                        }\n                    }\n                    else {\n                        if (definition.features.length > 0) {\n                            throw new Error(\"Attempt to add features to non composite component controller: \" + definition.componentName);\n                        }\n                    }\n                    this.controller.init();\n                },\n                update: function (oldData) {\n                    this.controller.setData(this.data);\n                    this.controller.update(this.data, oldData);\n                },\n                remove: function () {\n                    this.controller.remove();\n                },\n                tick: function (time, timeDelta) {\n                    this.controller.tick(time, timeDelta);\n                },\n                pause: function () {\n                    this.controller.pause();\n                },\n                play: function () {\n                    this.controller.play();\n                }\n            });\n        }\n        else {\n            AFRAME.registerComponent(definition.componentName, {\n                schema: definition.schema,\n                multiple: definition.multiple,\n                init: function () {\n                    this.controller = definition.constructComponentController(this, this.el, this.data);\n                    this.controller.init();\n                },\n                update: function (oldData) {\n                    this.controller.setData(this.data);\n                    this.controller.update(this.data, oldData);\n                },\n                remove: function () {\n                    this.controller.remove();\n                },\n                pause: function () {\n                    this.controller.pause();\n                },\n                play: function () {\n                    this.controller.play();\n                }\n            });\n        }\n    }\n}\nexports.registerComponentController = registerComponentController;\nfunction createElement(html) {\n    const template = document.createElement('div');\n    template.innerHTML = html.trim();\n    return template.firstChild;\n}\nexports.createElement = createElement;\nfunction addEntityEventListener(entity, type, listener) {\n    entity.addEventListener(type, ((e) => {\n        listener(e.detail);\n    }));\n}\nexports.addEntityEventListener = addEntityEventListener;\nfunction addDocumentEventListener(type, listener) {\n    document.addEventListener(type, ((e) => {\n        listener(e.detail);\n    }));\n}\nexports.addDocumentEventListener = addDocumentEventListener;\nfunction getEntity(object) {\n    if (object.el) {\n        return object.el;\n    }\n    let parentObject = undefined;\n    object.traverseAncestors((a) => {\n        if (parentObject === undefined && a.el) {\n            parentObject = a;\n        }\n    });\n    if (parentObject) {\n        return parentObject.el;\n    }\n    return undefined;\n}\nexports.getEntity = getEntity;\nfunction registerSystemController(definition) {\n    if (typeof AFRAME !== 'undefined') {\n        AFRAME.registerSystem(definition.systemName, {\n            schema: definition.schema,\n            init: function () {\n                this.controller = definition.constructSystemController(this, this.el, this.data);\n                //console.log(definition.systemName + \" system init\");\n                this.controller.init();\n            },\n            tick: function (time, timeDelta) {\n                this.controller.tick(time, timeDelta);\n            },\n            pause: function () {\n                //console.log(definition.systemName + \" system pause\");\n                this.controller.pause();\n            },\n            play: function () {\n                //console.log(definition.systemName + \" system play\");\n                this.controller.play();\n            }\n        });\n    }\n}\nexports.registerSystemController = registerSystemController;\nfunction getSystemController(scene, systemName) {\n    if (!scene) {\n        throw new Error(\"Scene is undefined.\");\n    }\n    if (!scene.systems) {\n        throw new Error(\"Scene systems is undefined.\");\n    }\n    const system = scene.systems[systemName];\n    if (!system) {\n        throw new Error(\"System is not registered to scene: \" + system);\n    }\n    return system.controller;\n}\nexports.getSystemController = getSystemController;\nfunction getComponentController(entity, componentName) {\n    const component = entity.components[componentName];\n    if (!component) {\n        return undefined;\n    }\n    return component.controller;\n}\nexports.getComponentController = getComponentController;\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/aframe-typescript-boilerplate/built/index.js\n");

/***/ }),

/***/ "./node_modules/aframe-typescript-boilerplate/built/system/AbstractSystemController.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/aframe-typescript-boilerplate/built/system/AbstractSystemController.js ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Abstract base class for system controller implementations.\n */\nclass AbstractSystemController {\n    constructor(system, entity, data) {\n        this.systemName = system.name;\n        this.scene = entity;\n        this.data = data;\n        this.system = system;\n    }\n    getSystemController(systemName) {\n        const system = this.scene.systems[systemName];\n        if (!system) {\n            throw new Error(\"System is not registered to scene: \" + system);\n        }\n        return system.controller;\n    }\n}\nexports.AbstractSystemController = AbstractSystemController;\n//# sourceMappingURL=AbstractSystemController.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYWZyYW1lLXR5cGVzY3JpcHQtYm9pbGVycGxhdGUvYnVpbHQvc3lzdGVtL0Fic3RyYWN0U3lzdGVtQ29udHJvbGxlci5qcz80Mjg1Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQThDLGNBQWM7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9hZnJhbWUtdHlwZXNjcmlwdC1ib2lsZXJwbGF0ZS9idWlsdC9zeXN0ZW0vQWJzdHJhY3RTeXN0ZW1Db250cm9sbGVyLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vKipcbiAqIEFic3RyYWN0IGJhc2UgY2xhc3MgZm9yIHN5c3RlbSBjb250cm9sbGVyIGltcGxlbWVudGF0aW9ucy5cbiAqL1xuY2xhc3MgQWJzdHJhY3RTeXN0ZW1Db250cm9sbGVyIHtcbiAgICBjb25zdHJ1Y3RvcihzeXN0ZW0sIGVudGl0eSwgZGF0YSkge1xuICAgICAgICB0aGlzLnN5c3RlbU5hbWUgPSBzeXN0ZW0ubmFtZTtcbiAgICAgICAgdGhpcy5zY2VuZSA9IGVudGl0eTtcbiAgICAgICAgdGhpcy5kYXRhID0gZGF0YTtcbiAgICAgICAgdGhpcy5zeXN0ZW0gPSBzeXN0ZW07XG4gICAgfVxuICAgIGdldFN5c3RlbUNvbnRyb2xsZXIoc3lzdGVtTmFtZSkge1xuICAgICAgICBjb25zdCBzeXN0ZW0gPSB0aGlzLnNjZW5lLnN5c3RlbXNbc3lzdGVtTmFtZV07XG4gICAgICAgIGlmICghc3lzdGVtKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJTeXN0ZW0gaXMgbm90IHJlZ2lzdGVyZWQgdG8gc2NlbmU6IFwiICsgc3lzdGVtKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gc3lzdGVtLmNvbnRyb2xsZXI7XG4gICAgfVxufVxuZXhwb3J0cy5BYnN0cmFjdFN5c3RlbUNvbnRyb2xsZXIgPSBBYnN0cmFjdFN5c3RlbUNvbnRyb2xsZXI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1BYnN0cmFjdFN5c3RlbUNvbnRyb2xsZXIuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/aframe-typescript-boilerplate/built/system/AbstractSystemController.js\n");

/***/ }),

/***/ "./node_modules/aframe-typescript-boilerplate/built/system/CompositeSystemController.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/aframe-typescript-boilerplate/built/system/CompositeSystemController.js ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst AbstractSystemController_1 = __webpack_require__(/*! ./AbstractSystemController */ \"./node_modules/aframe-typescript-boilerplate/built/system/AbstractSystemController.js\");\n/**\n * Enabled composing one system from many features which can encapsulate same functionality as system.\n */\nclass CompositeSystemController extends AbstractSystemController_1.AbstractSystemController {\n    constructor(systemName, schema, multiple, system, scene, data) {\n        super(system, scene, data);\n        this.features = [];\n    }\n    init() {\n        //console.log(this.systemName + \" init: \" + JSON.stringify(this.data));\n        this.features.forEach(controller => {\n            controller.init();\n        });\n    }\n    pause() {\n        //console.log(this.systemName + \" pause\");\n        this.features.forEach(controller => {\n            controller.pause();\n        });\n    }\n    play() {\n        //console.log(this.systemName + \" play\");\n        this.features.forEach(controller => {\n            controller.play();\n        });\n    }\n    tick(time, timeDelta) {\n        this.features.forEach(controller => {\n            controller.tick(time, timeDelta);\n        });\n    }\n    addFeature(feature) {\n        this.features.push(feature);\n    }\n}\nexports.CompositeSystemController = CompositeSystemController;\n//# sourceMappingURL=CompositeSystemController.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYWZyYW1lLXR5cGVzY3JpcHQtYm9pbGVycGxhdGUvYnVpbHQvc3lzdGVtL0NvbXBvc2l0ZVN5c3RlbUNvbnRyb2xsZXIuanM/OWE5ZCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE4QyxjQUFjO0FBQzVELG1DQUFtQyxtQkFBTyxDQUFDLHlIQUE0QjtBQUN2RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL2FmcmFtZS10eXBlc2NyaXB0LWJvaWxlcnBsYXRlL2J1aWx0L3N5c3RlbS9Db21wb3NpdGVTeXN0ZW1Db250cm9sbGVyLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCBBYnN0cmFjdFN5c3RlbUNvbnRyb2xsZXJfMSA9IHJlcXVpcmUoXCIuL0Fic3RyYWN0U3lzdGVtQ29udHJvbGxlclwiKTtcbi8qKlxuICogRW5hYmxlZCBjb21wb3Npbmcgb25lIHN5c3RlbSBmcm9tIG1hbnkgZmVhdHVyZXMgd2hpY2ggY2FuIGVuY2Fwc3VsYXRlIHNhbWUgZnVuY3Rpb25hbGl0eSBhcyBzeXN0ZW0uXG4gKi9cbmNsYXNzIENvbXBvc2l0ZVN5c3RlbUNvbnRyb2xsZXIgZXh0ZW5kcyBBYnN0cmFjdFN5c3RlbUNvbnRyb2xsZXJfMS5BYnN0cmFjdFN5c3RlbUNvbnRyb2xsZXIge1xuICAgIGNvbnN0cnVjdG9yKHN5c3RlbU5hbWUsIHNjaGVtYSwgbXVsdGlwbGUsIHN5c3RlbSwgc2NlbmUsIGRhdGEpIHtcbiAgICAgICAgc3VwZXIoc3lzdGVtLCBzY2VuZSwgZGF0YSk7XG4gICAgICAgIHRoaXMuZmVhdHVyZXMgPSBbXTtcbiAgICB9XG4gICAgaW5pdCgpIHtcbiAgICAgICAgLy9jb25zb2xlLmxvZyh0aGlzLnN5c3RlbU5hbWUgKyBcIiBpbml0OiBcIiArIEpTT04uc3RyaW5naWZ5KHRoaXMuZGF0YSkpO1xuICAgICAgICB0aGlzLmZlYXR1cmVzLmZvckVhY2goY29udHJvbGxlciA9PiB7XG4gICAgICAgICAgICBjb250cm9sbGVyLmluaXQoKTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHBhdXNlKCkge1xuICAgICAgICAvL2NvbnNvbGUubG9nKHRoaXMuc3lzdGVtTmFtZSArIFwiIHBhdXNlXCIpO1xuICAgICAgICB0aGlzLmZlYXR1cmVzLmZvckVhY2goY29udHJvbGxlciA9PiB7XG4gICAgICAgICAgICBjb250cm9sbGVyLnBhdXNlKCk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBwbGF5KCkge1xuICAgICAgICAvL2NvbnNvbGUubG9nKHRoaXMuc3lzdGVtTmFtZSArIFwiIHBsYXlcIik7XG4gICAgICAgIHRoaXMuZmVhdHVyZXMuZm9yRWFjaChjb250cm9sbGVyID0+IHtcbiAgICAgICAgICAgIGNvbnRyb2xsZXIucGxheSgpO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgdGljayh0aW1lLCB0aW1lRGVsdGEpIHtcbiAgICAgICAgdGhpcy5mZWF0dXJlcy5mb3JFYWNoKGNvbnRyb2xsZXIgPT4ge1xuICAgICAgICAgICAgY29udHJvbGxlci50aWNrKHRpbWUsIHRpbWVEZWx0YSk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBhZGRGZWF0dXJlKGZlYXR1cmUpIHtcbiAgICAgICAgdGhpcy5mZWF0dXJlcy5wdXNoKGZlYXR1cmUpO1xuICAgIH1cbn1cbmV4cG9ydHMuQ29tcG9zaXRlU3lzdGVtQ29udHJvbGxlciA9IENvbXBvc2l0ZVN5c3RlbUNvbnRyb2xsZXI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1Db21wb3NpdGVTeXN0ZW1Db250cm9sbGVyLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/aframe-typescript-boilerplate/built/system/CompositeSystemController.js\n");

/***/ }),

/***/ "./node_modules/aframe-typescript-boilerplate/built/system/ExampleSystemController.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/aframe-typescript-boilerplate/built/system/ExampleSystemController.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst AbstractSystemController_1 = __webpack_require__(/*! ./AbstractSystemController */ \"./node_modules/aframe-typescript-boilerplate/built/system/AbstractSystemController.js\");\nconst SystemControllerDefinition_1 = __webpack_require__(/*! ./SystemControllerDefinition */ \"./node_modules/aframe-typescript-boilerplate/built/system/SystemControllerDefinition.js\");\nclass ExampleSystemController extends AbstractSystemController_1.AbstractSystemController {\n    constructor(system, scene, data) {\n        super(system, scene, data);\n    }\n    init() {\n    }\n    pause() {\n    }\n    play() {\n    }\n    tick(time, timeDelta) {\n    }\n}\nExampleSystemController.DEFINITION = new SystemControllerDefinition_1.SystemControllerDefinition(\"example\", {}, (system, scene, data) => new ExampleSystemController(system, scene, data));\nexports.ExampleSystemController = ExampleSystemController;\n//# sourceMappingURL=ExampleSystemController.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYWZyYW1lLXR5cGVzY3JpcHQtYm9pbGVycGxhdGUvYnVpbHQvc3lzdGVtL0V4YW1wbGVTeXN0ZW1Db250cm9sbGVyLmpzP2RlYTkiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBOEMsY0FBYztBQUM1RCxtQ0FBbUMsbUJBQU8sQ0FBQyx5SEFBNEI7QUFDdkUscUNBQXFDLG1CQUFPLENBQUMsNkhBQThCO0FBQzNFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEdBQThHO0FBQzlHO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYWZyYW1lLXR5cGVzY3JpcHQtYm9pbGVycGxhdGUvYnVpbHQvc3lzdGVtL0V4YW1wbGVTeXN0ZW1Db250cm9sbGVyLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCBBYnN0cmFjdFN5c3RlbUNvbnRyb2xsZXJfMSA9IHJlcXVpcmUoXCIuL0Fic3RyYWN0U3lzdGVtQ29udHJvbGxlclwiKTtcbmNvbnN0IFN5c3RlbUNvbnRyb2xsZXJEZWZpbml0aW9uXzEgPSByZXF1aXJlKFwiLi9TeXN0ZW1Db250cm9sbGVyRGVmaW5pdGlvblwiKTtcbmNsYXNzIEV4YW1wbGVTeXN0ZW1Db250cm9sbGVyIGV4dGVuZHMgQWJzdHJhY3RTeXN0ZW1Db250cm9sbGVyXzEuQWJzdHJhY3RTeXN0ZW1Db250cm9sbGVyIHtcbiAgICBjb25zdHJ1Y3RvcihzeXN0ZW0sIHNjZW5lLCBkYXRhKSB7XG4gICAgICAgIHN1cGVyKHN5c3RlbSwgc2NlbmUsIGRhdGEpO1xuICAgIH1cbiAgICBpbml0KCkge1xuICAgIH1cbiAgICBwYXVzZSgpIHtcbiAgICB9XG4gICAgcGxheSgpIHtcbiAgICB9XG4gICAgdGljayh0aW1lLCB0aW1lRGVsdGEpIHtcbiAgICB9XG59XG5FeGFtcGxlU3lzdGVtQ29udHJvbGxlci5ERUZJTklUSU9OID0gbmV3IFN5c3RlbUNvbnRyb2xsZXJEZWZpbml0aW9uXzEuU3lzdGVtQ29udHJvbGxlckRlZmluaXRpb24oXCJleGFtcGxlXCIsIHt9LCAoc3lzdGVtLCBzY2VuZSwgZGF0YSkgPT4gbmV3IEV4YW1wbGVTeXN0ZW1Db250cm9sbGVyKHN5c3RlbSwgc2NlbmUsIGRhdGEpKTtcbmV4cG9ydHMuRXhhbXBsZVN5c3RlbUNvbnRyb2xsZXIgPSBFeGFtcGxlU3lzdGVtQ29udHJvbGxlcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUV4YW1wbGVTeXN0ZW1Db250cm9sbGVyLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/aframe-typescript-boilerplate/built/system/ExampleSystemController.js\n");

/***/ }),

/***/ "./node_modules/aframe-typescript-boilerplate/built/system/SystemControllerDefinition.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/aframe-typescript-boilerplate/built/system/SystemControllerDefinition.js ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass SystemControllerDefinition {\n    constructor(systemName, schema, constructSystemController) {\n        this.systemName = systemName;\n        this.schema = schema;\n        this.constructSystemController = constructSystemController;\n    }\n}\nexports.SystemControllerDefinition = SystemControllerDefinition;\n//# sourceMappingURL=SystemControllerDefinition.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYWZyYW1lLXR5cGVzY3JpcHQtYm9pbGVycGxhdGUvYnVpbHQvc3lzdGVtL1N5c3RlbUNvbnRyb2xsZXJEZWZpbml0aW9uLmpzP2JlZmUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBOEMsY0FBYztBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYWZyYW1lLXR5cGVzY3JpcHQtYm9pbGVycGxhdGUvYnVpbHQvc3lzdGVtL1N5c3RlbUNvbnRyb2xsZXJEZWZpbml0aW9uLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jbGFzcyBTeXN0ZW1Db250cm9sbGVyRGVmaW5pdGlvbiB7XG4gICAgY29uc3RydWN0b3Ioc3lzdGVtTmFtZSwgc2NoZW1hLCBjb25zdHJ1Y3RTeXN0ZW1Db250cm9sbGVyKSB7XG4gICAgICAgIHRoaXMuc3lzdGVtTmFtZSA9IHN5c3RlbU5hbWU7XG4gICAgICAgIHRoaXMuc2NoZW1hID0gc2NoZW1hO1xuICAgICAgICB0aGlzLmNvbnN0cnVjdFN5c3RlbUNvbnRyb2xsZXIgPSBjb25zdHJ1Y3RTeXN0ZW1Db250cm9sbGVyO1xuICAgIH1cbn1cbmV4cG9ydHMuU3lzdGVtQ29udHJvbGxlckRlZmluaXRpb24gPSBTeXN0ZW1Db250cm9sbGVyRGVmaW5pdGlvbjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVN5c3RlbUNvbnRyb2xsZXJEZWZpbml0aW9uLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/aframe-typescript-boilerplate/built/system/SystemControllerDefinition.js\n");

/***/ }),

/***/ "./node_modules/base64-js/index.js":
/*!*****************************************!*\
  !*** ./node_modules/base64-js/index.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYmFzZTY0LWpzL2luZGV4LmpzPzFmYjUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQVk7O0FBRVo7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGtDQUFrQyxTQUFTO0FBQzNDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxpQkFBaUIsU0FBUztBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLFNBQVM7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSwwQ0FBMEMsVUFBVTtBQUNwRDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9iYXNlNjQtanMvaW5kZXguanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxuZXhwb3J0cy5ieXRlTGVuZ3RoID0gYnl0ZUxlbmd0aFxuZXhwb3J0cy50b0J5dGVBcnJheSA9IHRvQnl0ZUFycmF5XG5leHBvcnRzLmZyb21CeXRlQXJyYXkgPSBmcm9tQnl0ZUFycmF5XG5cbnZhciBsb29rdXAgPSBbXVxudmFyIHJldkxvb2t1cCA9IFtdXG52YXIgQXJyID0gdHlwZW9mIFVpbnQ4QXJyYXkgIT09ICd1bmRlZmluZWQnID8gVWludDhBcnJheSA6IEFycmF5XG5cbnZhciBjb2RlID0gJ0FCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXowMTIzNDU2Nzg5Ky8nXG5mb3IgKHZhciBpID0gMCwgbGVuID0gY29kZS5sZW5ndGg7IGkgPCBsZW47ICsraSkge1xuICBsb29rdXBbaV0gPSBjb2RlW2ldXG4gIHJldkxvb2t1cFtjb2RlLmNoYXJDb2RlQXQoaSldID0gaVxufVxuXG4vLyBTdXBwb3J0IGRlY29kaW5nIFVSTC1zYWZlIGJhc2U2NCBzdHJpbmdzLCBhcyBOb2RlLmpzIGRvZXMuXG4vLyBTZWU6IGh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL0Jhc2U2NCNVUkxfYXBwbGljYXRpb25zXG5yZXZMb29rdXBbJy0nLmNoYXJDb2RlQXQoMCldID0gNjJcbnJldkxvb2t1cFsnXycuY2hhckNvZGVBdCgwKV0gPSA2M1xuXG5mdW5jdGlvbiBnZXRMZW5zIChiNjQpIHtcbiAgdmFyIGxlbiA9IGI2NC5sZW5ndGhcblxuICBpZiAobGVuICUgNCA+IDApIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgc3RyaW5nLiBMZW5ndGggbXVzdCBiZSBhIG11bHRpcGxlIG9mIDQnKVxuICB9XG5cbiAgLy8gVHJpbSBvZmYgZXh0cmEgYnl0ZXMgYWZ0ZXIgcGxhY2Vob2xkZXIgYnl0ZXMgYXJlIGZvdW5kXG4gIC8vIFNlZTogaHR0cHM6Ly9naXRodWIuY29tL2JlYXRnYW1taXQvYmFzZTY0LWpzL2lzc3Vlcy80MlxuICB2YXIgdmFsaWRMZW4gPSBiNjQuaW5kZXhPZignPScpXG4gIGlmICh2YWxpZExlbiA9PT0gLTEpIHZhbGlkTGVuID0gbGVuXG5cbiAgdmFyIHBsYWNlSG9sZGVyc0xlbiA9IHZhbGlkTGVuID09PSBsZW5cbiAgICA/IDBcbiAgICA6IDQgLSAodmFsaWRMZW4gJSA0KVxuXG4gIHJldHVybiBbdmFsaWRMZW4sIHBsYWNlSG9sZGVyc0xlbl1cbn1cblxuLy8gYmFzZTY0IGlzIDQvMyArIHVwIHRvIHR3byBjaGFyYWN0ZXJzIG9mIHRoZSBvcmlnaW5hbCBkYXRhXG5mdW5jdGlvbiBieXRlTGVuZ3RoIChiNjQpIHtcbiAgdmFyIGxlbnMgPSBnZXRMZW5zKGI2NClcbiAgdmFyIHZhbGlkTGVuID0gbGVuc1swXVxuICB2YXIgcGxhY2VIb2xkZXJzTGVuID0gbGVuc1sxXVxuICByZXR1cm4gKCh2YWxpZExlbiArIHBsYWNlSG9sZGVyc0xlbikgKiAzIC8gNCkgLSBwbGFjZUhvbGRlcnNMZW5cbn1cblxuZnVuY3Rpb24gX2J5dGVMZW5ndGggKGI2NCwgdmFsaWRMZW4sIHBsYWNlSG9sZGVyc0xlbikge1xuICByZXR1cm4gKCh2YWxpZExlbiArIHBsYWNlSG9sZGVyc0xlbikgKiAzIC8gNCkgLSBwbGFjZUhvbGRlcnNMZW5cbn1cblxuZnVuY3Rpb24gdG9CeXRlQXJyYXkgKGI2NCkge1xuICB2YXIgdG1wXG4gIHZhciBsZW5zID0gZ2V0TGVucyhiNjQpXG4gIHZhciB2YWxpZExlbiA9IGxlbnNbMF1cbiAgdmFyIHBsYWNlSG9sZGVyc0xlbiA9IGxlbnNbMV1cblxuICB2YXIgYXJyID0gbmV3IEFycihfYnl0ZUxlbmd0aChiNjQsIHZhbGlkTGVuLCBwbGFjZUhvbGRlcnNMZW4pKVxuXG4gIHZhciBjdXJCeXRlID0gMFxuXG4gIC8vIGlmIHRoZXJlIGFyZSBwbGFjZWhvbGRlcnMsIG9ubHkgZ2V0IHVwIHRvIHRoZSBsYXN0IGNvbXBsZXRlIDQgY2hhcnNcbiAgdmFyIGxlbiA9IHBsYWNlSG9sZGVyc0xlbiA+IDBcbiAgICA/IHZhbGlkTGVuIC0gNFxuICAgIDogdmFsaWRMZW5cblxuICBmb3IgKHZhciBpID0gMDsgaSA8IGxlbjsgaSArPSA0KSB7XG4gICAgdG1wID1cbiAgICAgIChyZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSldIDw8IDE4KSB8XG4gICAgICAocmV2TG9va3VwW2I2NC5jaGFyQ29kZUF0KGkgKyAxKV0gPDwgMTIpIHxcbiAgICAgIChyZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSArIDIpXSA8PCA2KSB8XG4gICAgICByZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSArIDMpXVxuICAgIGFycltjdXJCeXRlKytdID0gKHRtcCA+PiAxNikgJiAweEZGXG4gICAgYXJyW2N1ckJ5dGUrK10gPSAodG1wID4+IDgpICYgMHhGRlxuICAgIGFycltjdXJCeXRlKytdID0gdG1wICYgMHhGRlxuICB9XG5cbiAgaWYgKHBsYWNlSG9sZGVyc0xlbiA9PT0gMikge1xuICAgIHRtcCA9XG4gICAgICAocmV2TG9va3VwW2I2NC5jaGFyQ29kZUF0KGkpXSA8PCAyKSB8XG4gICAgICAocmV2TG9va3VwW2I2NC5jaGFyQ29kZUF0KGkgKyAxKV0gPj4gNClcbiAgICBhcnJbY3VyQnl0ZSsrXSA9IHRtcCAmIDB4RkZcbiAgfVxuXG4gIGlmIChwbGFjZUhvbGRlcnNMZW4gPT09IDEpIHtcbiAgICB0bXAgPVxuICAgICAgKHJldkxvb2t1cFtiNjQuY2hhckNvZGVBdChpKV0gPDwgMTApIHxcbiAgICAgIChyZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSArIDEpXSA8PCA0KSB8XG4gICAgICAocmV2TG9va3VwW2I2NC5jaGFyQ29kZUF0KGkgKyAyKV0gPj4gMilcbiAgICBhcnJbY3VyQnl0ZSsrXSA9ICh0bXAgPj4gOCkgJiAweEZGXG4gICAgYXJyW2N1ckJ5dGUrK10gPSB0bXAgJiAweEZGXG4gIH1cblxuICByZXR1cm4gYXJyXG59XG5cbmZ1bmN0aW9uIHRyaXBsZXRUb0Jhc2U2NCAobnVtKSB7XG4gIHJldHVybiBsb29rdXBbbnVtID4+IDE4ICYgMHgzRl0gK1xuICAgIGxvb2t1cFtudW0gPj4gMTIgJiAweDNGXSArXG4gICAgbG9va3VwW251bSA+PiA2ICYgMHgzRl0gK1xuICAgIGxvb2t1cFtudW0gJiAweDNGXVxufVxuXG5mdW5jdGlvbiBlbmNvZGVDaHVuayAodWludDgsIHN0YXJ0LCBlbmQpIHtcbiAgdmFyIHRtcFxuICB2YXIgb3V0cHV0ID0gW11cbiAgZm9yICh2YXIgaSA9IHN0YXJ0OyBpIDwgZW5kOyBpICs9IDMpIHtcbiAgICB0bXAgPVxuICAgICAgKCh1aW50OFtpXSA8PCAxNikgJiAweEZGMDAwMCkgK1xuICAgICAgKCh1aW50OFtpICsgMV0gPDwgOCkgJiAweEZGMDApICtcbiAgICAgICh1aW50OFtpICsgMl0gJiAweEZGKVxuICAgIG91dHB1dC5wdXNoKHRyaXBsZXRUb0Jhc2U2NCh0bXApKVxuICB9XG4gIHJldHVybiBvdXRwdXQuam9pbignJylcbn1cblxuZnVuY3Rpb24gZnJvbUJ5dGVBcnJheSAodWludDgpIHtcbiAgdmFyIHRtcFxuICB2YXIgbGVuID0gdWludDgubGVuZ3RoXG4gIHZhciBleHRyYUJ5dGVzID0gbGVuICUgMyAvLyBpZiB3ZSBoYXZlIDEgYnl0ZSBsZWZ0LCBwYWQgMiBieXRlc1xuICB2YXIgcGFydHMgPSBbXVxuICB2YXIgbWF4Q2h1bmtMZW5ndGggPSAxNjM4MyAvLyBtdXN0IGJlIG11bHRpcGxlIG9mIDNcblxuICAvLyBnbyB0aHJvdWdoIHRoZSBhcnJheSBldmVyeSB0aHJlZSBieXRlcywgd2UnbGwgZGVhbCB3aXRoIHRyYWlsaW5nIHN0dWZmIGxhdGVyXG4gIGZvciAodmFyIGkgPSAwLCBsZW4yID0gbGVuIC0gZXh0cmFCeXRlczsgaSA8IGxlbjI7IGkgKz0gbWF4Q2h1bmtMZW5ndGgpIHtcbiAgICBwYXJ0cy5wdXNoKGVuY29kZUNodW5rKFxuICAgICAgdWludDgsIGksIChpICsgbWF4Q2h1bmtMZW5ndGgpID4gbGVuMiA/IGxlbjIgOiAoaSArIG1heENodW5rTGVuZ3RoKVxuICAgICkpXG4gIH1cblxuICAvLyBwYWQgdGhlIGVuZCB3aXRoIHplcm9zLCBidXQgbWFrZSBzdXJlIHRvIG5vdCBmb3JnZXQgdGhlIGV4dHJhIGJ5dGVzXG4gIGlmIChleHRyYUJ5dGVzID09PSAxKSB7XG4gICAgdG1wID0gdWludDhbbGVuIC0gMV1cbiAgICBwYXJ0cy5wdXNoKFxuICAgICAgbG9va3VwW3RtcCA+PiAyXSArXG4gICAgICBsb29rdXBbKHRtcCA8PCA0KSAmIDB4M0ZdICtcbiAgICAgICc9PSdcbiAgICApXG4gIH0gZWxzZSBpZiAoZXh0cmFCeXRlcyA9PT0gMikge1xuICAgIHRtcCA9ICh1aW50OFtsZW4gLSAyXSA8PCA4KSArIHVpbnQ4W2xlbiAtIDFdXG4gICAgcGFydHMucHVzaChcbiAgICAgIGxvb2t1cFt0bXAgPj4gMTBdICtcbiAgICAgIGxvb2t1cFsodG1wID4+IDQpICYgMHgzRl0gK1xuICAgICAgbG9va3VwWyh0bXAgPDwgMikgJiAweDNGXSArXG4gICAgICAnPSdcbiAgICApXG4gIH1cblxuICByZXR1cm4gcGFydHMuam9pbignJylcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/base64-js/index.js\n");

/***/ }),

/***/ "./node_modules/core-util-is/lib/util.js":
/*!***********************************************!*\
  !*** ./node_modules/core-util-is/lib/util.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(Buffer) {// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\n\nfunction isArray(arg) {\n  if (Array.isArray) {\n    return Array.isArray(arg);\n  }\n  return objectToString(arg) === '[object Array]';\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = Buffer.isBuffer;\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node-libs-browser/node_modules/buffer/index.js */ \"./node_modules/node-libs-browser/node_modules/buffer/index.js\").Buffer))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS11dGlsLWlzL2xpYi91dGlsLmpzPzNhN2MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY29yZS11dGlsLWlzL2xpYi91dGlsLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IEpveWVudCwgSW5jLiBhbmQgb3RoZXIgTm9kZSBjb250cmlidXRvcnMuXG4vL1xuLy8gUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGFcbi8vIGNvcHkgb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGVcbi8vIFwiU29mdHdhcmVcIiksIHRvIGRlYWwgaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZ1xuLy8gd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHMgdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLFxuLy8gZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGwgY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdFxuLy8gcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpcyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlXG4vLyBmb2xsb3dpbmcgY29uZGl0aW9uczpcbi8vXG4vLyBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZFxuLy8gaW4gYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuXG4vL1xuLy8gVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIFwiQVMgSVNcIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTU1xuLy8gT1IgSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRlxuLy8gTUVSQ0hBTlRBQklMSVRZLCBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiBJTlxuLy8gTk8gRVZFTlQgU0hBTEwgVEhFIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sXG4vLyBEQU1BR0VTIE9SIE9USEVSIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1Jcbi8vIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLCBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEVcbi8vIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTiBUSEUgU09GVFdBUkUuXG5cbi8vIE5PVEU6IFRoZXNlIHR5cGUgY2hlY2tpbmcgZnVuY3Rpb25zIGludGVudGlvbmFsbHkgZG9uJ3QgdXNlIGBpbnN0YW5jZW9mYFxuLy8gYmVjYXVzZSBpdCBpcyBmcmFnaWxlIGFuZCBjYW4gYmUgZWFzaWx5IGZha2VkIHdpdGggYE9iamVjdC5jcmVhdGUoKWAuXG5cbmZ1bmN0aW9uIGlzQXJyYXkoYXJnKSB7XG4gIGlmIChBcnJheS5pc0FycmF5KSB7XG4gICAgcmV0dXJuIEFycmF5LmlzQXJyYXkoYXJnKTtcbiAgfVxuICByZXR1cm4gb2JqZWN0VG9TdHJpbmcoYXJnKSA9PT0gJ1tvYmplY3QgQXJyYXldJztcbn1cbmV4cG9ydHMuaXNBcnJheSA9IGlzQXJyYXk7XG5cbmZ1bmN0aW9uIGlzQm9vbGVhbihhcmcpIHtcbiAgcmV0dXJuIHR5cGVvZiBhcmcgPT09ICdib29sZWFuJztcbn1cbmV4cG9ydHMuaXNCb29sZWFuID0gaXNCb29sZWFuO1xuXG5mdW5jdGlvbiBpc051bGwoYXJnKSB7XG4gIHJldHVybiBhcmcgPT09IG51bGw7XG59XG5leHBvcnRzLmlzTnVsbCA9IGlzTnVsbDtcblxuZnVuY3Rpb24gaXNOdWxsT3JVbmRlZmluZWQoYXJnKSB7XG4gIHJldHVybiBhcmcgPT0gbnVsbDtcbn1cbmV4cG9ydHMuaXNOdWxsT3JVbmRlZmluZWQgPSBpc051bGxPclVuZGVmaW5lZDtcblxuZnVuY3Rpb24gaXNOdW1iZXIoYXJnKSB7XG4gIHJldHVybiB0eXBlb2YgYXJnID09PSAnbnVtYmVyJztcbn1cbmV4cG9ydHMuaXNOdW1iZXIgPSBpc051bWJlcjtcblxuZnVuY3Rpb24gaXNTdHJpbmcoYXJnKSB7XG4gIHJldHVybiB0eXBlb2YgYXJnID09PSAnc3RyaW5nJztcbn1cbmV4cG9ydHMuaXNTdHJpbmcgPSBpc1N0cmluZztcblxuZnVuY3Rpb24gaXNTeW1ib2woYXJnKSB7XG4gIHJldHVybiB0eXBlb2YgYXJnID09PSAnc3ltYm9sJztcbn1cbmV4cG9ydHMuaXNTeW1ib2wgPSBpc1N5bWJvbDtcblxuZnVuY3Rpb24gaXNVbmRlZmluZWQoYXJnKSB7XG4gIHJldHVybiBhcmcgPT09IHZvaWQgMDtcbn1cbmV4cG9ydHMuaXNVbmRlZmluZWQgPSBpc1VuZGVmaW5lZDtcblxuZnVuY3Rpb24gaXNSZWdFeHAocmUpIHtcbiAgcmV0dXJuIG9iamVjdFRvU3RyaW5nKHJlKSA9PT0gJ1tvYmplY3QgUmVnRXhwXSc7XG59XG5leHBvcnRzLmlzUmVnRXhwID0gaXNSZWdFeHA7XG5cbmZ1bmN0aW9uIGlzT2JqZWN0KGFyZykge1xuICByZXR1cm4gdHlwZW9mIGFyZyA9PT0gJ29iamVjdCcgJiYgYXJnICE9PSBudWxsO1xufVxuZXhwb3J0cy5pc09iamVjdCA9IGlzT2JqZWN0O1xuXG5mdW5jdGlvbiBpc0RhdGUoZCkge1xuICByZXR1cm4gb2JqZWN0VG9TdHJpbmcoZCkgPT09ICdbb2JqZWN0IERhdGVdJztcbn1cbmV4cG9ydHMuaXNEYXRlID0gaXNEYXRlO1xuXG5mdW5jdGlvbiBpc0Vycm9yKGUpIHtcbiAgcmV0dXJuIChvYmplY3RUb1N0cmluZyhlKSA9PT0gJ1tvYmplY3QgRXJyb3JdJyB8fCBlIGluc3RhbmNlb2YgRXJyb3IpO1xufVxuZXhwb3J0cy5pc0Vycm9yID0gaXNFcnJvcjtcblxuZnVuY3Rpb24gaXNGdW5jdGlvbihhcmcpIHtcbiAgcmV0dXJuIHR5cGVvZiBhcmcgPT09ICdmdW5jdGlvbic7XG59XG5leHBvcnRzLmlzRnVuY3Rpb24gPSBpc0Z1bmN0aW9uO1xuXG5mdW5jdGlvbiBpc1ByaW1pdGl2ZShhcmcpIHtcbiAgcmV0dXJuIGFyZyA9PT0gbnVsbCB8fFxuICAgICAgICAgdHlwZW9mIGFyZyA9PT0gJ2Jvb2xlYW4nIHx8XG4gICAgICAgICB0eXBlb2YgYXJnID09PSAnbnVtYmVyJyB8fFxuICAgICAgICAgdHlwZW9mIGFyZyA9PT0gJ3N0cmluZycgfHxcbiAgICAgICAgIHR5cGVvZiBhcmcgPT09ICdzeW1ib2wnIHx8ICAvLyBFUzYgc3ltYm9sXG4gICAgICAgICB0eXBlb2YgYXJnID09PSAndW5kZWZpbmVkJztcbn1cbmV4cG9ydHMuaXNQcmltaXRpdmUgPSBpc1ByaW1pdGl2ZTtcblxuZXhwb3J0cy5pc0J1ZmZlciA9IEJ1ZmZlci5pc0J1ZmZlcjtcblxuZnVuY3Rpb24gb2JqZWN0VG9TdHJpbmcobykge1xuICByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKG8pO1xufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/core-util-is/lib/util.js\n");

/***/ }),

/***/ "./node_modules/ieee754/index.js":
/*!***************************************!*\
  !*** ./node_modules/ieee754/index.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaWVlZTc1NC9pbmRleC5qcz85MTUyIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLFdBQVc7O0FBRW5CO0FBQ0E7QUFDQTtBQUNBLFFBQVEsV0FBVzs7QUFFbkI7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBOztBQUVBLFFBQVEsV0FBVzs7QUFFbkI7QUFDQTtBQUNBLFFBQVEsVUFBVTs7QUFFbEI7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9pZWVlNzU0L2luZGV4LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0cy5yZWFkID0gZnVuY3Rpb24gKGJ1ZmZlciwgb2Zmc2V0LCBpc0xFLCBtTGVuLCBuQnl0ZXMpIHtcbiAgdmFyIGUsIG1cbiAgdmFyIGVMZW4gPSAobkJ5dGVzICogOCkgLSBtTGVuIC0gMVxuICB2YXIgZU1heCA9ICgxIDw8IGVMZW4pIC0gMVxuICB2YXIgZUJpYXMgPSBlTWF4ID4+IDFcbiAgdmFyIG5CaXRzID0gLTdcbiAgdmFyIGkgPSBpc0xFID8gKG5CeXRlcyAtIDEpIDogMFxuICB2YXIgZCA9IGlzTEUgPyAtMSA6IDFcbiAgdmFyIHMgPSBidWZmZXJbb2Zmc2V0ICsgaV1cblxuICBpICs9IGRcblxuICBlID0gcyAmICgoMSA8PCAoLW5CaXRzKSkgLSAxKVxuICBzID4+PSAoLW5CaXRzKVxuICBuQml0cyArPSBlTGVuXG4gIGZvciAoOyBuQml0cyA+IDA7IGUgPSAoZSAqIDI1NikgKyBidWZmZXJbb2Zmc2V0ICsgaV0sIGkgKz0gZCwgbkJpdHMgLT0gOCkge31cblxuICBtID0gZSAmICgoMSA8PCAoLW5CaXRzKSkgLSAxKVxuICBlID4+PSAoLW5CaXRzKVxuICBuQml0cyArPSBtTGVuXG4gIGZvciAoOyBuQml0cyA+IDA7IG0gPSAobSAqIDI1NikgKyBidWZmZXJbb2Zmc2V0ICsgaV0sIGkgKz0gZCwgbkJpdHMgLT0gOCkge31cblxuICBpZiAoZSA9PT0gMCkge1xuICAgIGUgPSAxIC0gZUJpYXNcbiAgfSBlbHNlIGlmIChlID09PSBlTWF4KSB7XG4gICAgcmV0dXJuIG0gPyBOYU4gOiAoKHMgPyAtMSA6IDEpICogSW5maW5pdHkpXG4gIH0gZWxzZSB7XG4gICAgbSA9IG0gKyBNYXRoLnBvdygyLCBtTGVuKVxuICAgIGUgPSBlIC0gZUJpYXNcbiAgfVxuICByZXR1cm4gKHMgPyAtMSA6IDEpICogbSAqIE1hdGgucG93KDIsIGUgLSBtTGVuKVxufVxuXG5leHBvcnRzLndyaXRlID0gZnVuY3Rpb24gKGJ1ZmZlciwgdmFsdWUsIG9mZnNldCwgaXNMRSwgbUxlbiwgbkJ5dGVzKSB7XG4gIHZhciBlLCBtLCBjXG4gIHZhciBlTGVuID0gKG5CeXRlcyAqIDgpIC0gbUxlbiAtIDFcbiAgdmFyIGVNYXggPSAoMSA8PCBlTGVuKSAtIDFcbiAgdmFyIGVCaWFzID0gZU1heCA+PiAxXG4gIHZhciBydCA9IChtTGVuID09PSAyMyA/IE1hdGgucG93KDIsIC0yNCkgLSBNYXRoLnBvdygyLCAtNzcpIDogMClcbiAgdmFyIGkgPSBpc0xFID8gMCA6IChuQnl0ZXMgLSAxKVxuICB2YXIgZCA9IGlzTEUgPyAxIDogLTFcbiAgdmFyIHMgPSB2YWx1ZSA8IDAgfHwgKHZhbHVlID09PSAwICYmIDEgLyB2YWx1ZSA8IDApID8gMSA6IDBcblxuICB2YWx1ZSA9IE1hdGguYWJzKHZhbHVlKVxuXG4gIGlmIChpc05hTih2YWx1ZSkgfHwgdmFsdWUgPT09IEluZmluaXR5KSB7XG4gICAgbSA9IGlzTmFOKHZhbHVlKSA/IDEgOiAwXG4gICAgZSA9IGVNYXhcbiAgfSBlbHNlIHtcbiAgICBlID0gTWF0aC5mbG9vcihNYXRoLmxvZyh2YWx1ZSkgLyBNYXRoLkxOMilcbiAgICBpZiAodmFsdWUgKiAoYyA9IE1hdGgucG93KDIsIC1lKSkgPCAxKSB7XG4gICAgICBlLS1cbiAgICAgIGMgKj0gMlxuICAgIH1cbiAgICBpZiAoZSArIGVCaWFzID49IDEpIHtcbiAgICAgIHZhbHVlICs9IHJ0IC8gY1xuICAgIH0gZWxzZSB7XG4gICAgICB2YWx1ZSArPSBydCAqIE1hdGgucG93KDIsIDEgLSBlQmlhcylcbiAgICB9XG4gICAgaWYgKHZhbHVlICogYyA+PSAyKSB7XG4gICAgICBlKytcbiAgICAgIGMgLz0gMlxuICAgIH1cblxuICAgIGlmIChlICsgZUJpYXMgPj0gZU1heCkge1xuICAgICAgbSA9IDBcbiAgICAgIGUgPSBlTWF4XG4gICAgfSBlbHNlIGlmIChlICsgZUJpYXMgPj0gMSkge1xuICAgICAgbSA9ICgodmFsdWUgKiBjKSAtIDEpICogTWF0aC5wb3coMiwgbUxlbilcbiAgICAgIGUgPSBlICsgZUJpYXNcbiAgICB9IGVsc2Uge1xuICAgICAgbSA9IHZhbHVlICogTWF0aC5wb3coMiwgZUJpYXMgLSAxKSAqIE1hdGgucG93KDIsIG1MZW4pXG4gICAgICBlID0gMFxuICAgIH1cbiAgfVxuXG4gIGZvciAoOyBtTGVuID49IDg7IGJ1ZmZlcltvZmZzZXQgKyBpXSA9IG0gJiAweGZmLCBpICs9IGQsIG0gLz0gMjU2LCBtTGVuIC09IDgpIHt9XG5cbiAgZSA9IChlIDw8IG1MZW4pIHwgbVxuICBlTGVuICs9IG1MZW5cbiAgZm9yICg7IGVMZW4gPiAwOyBidWZmZXJbb2Zmc2V0ICsgaV0gPSBlICYgMHhmZiwgaSArPSBkLCBlIC89IDI1NiwgZUxlbiAtPSA4KSB7fVxuXG4gIGJ1ZmZlcltvZmZzZXQgKyBpIC0gZF0gfD0gcyAqIDEyOFxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/ieee754/index.js\n");

/***/ }),

/***/ "./node_modules/inherits/inherits_browser.js":
/*!***************************************************!*\
  !*** ./node_modules/inherits/inherits_browser.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaW5oZXJpdHMvaW5oZXJpdHNfYnJvd3Nlci5qcz8zZmI1Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL2luaGVyaXRzL2luaGVyaXRzX2Jyb3dzZXIuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpZiAodHlwZW9mIE9iamVjdC5jcmVhdGUgPT09ICdmdW5jdGlvbicpIHtcbiAgLy8gaW1wbGVtZW50YXRpb24gZnJvbSBzdGFuZGFyZCBub2RlLmpzICd1dGlsJyBtb2R1bGVcbiAgbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBpbmhlcml0cyhjdG9yLCBzdXBlckN0b3IpIHtcbiAgICBjdG9yLnN1cGVyXyA9IHN1cGVyQ3RvclxuICAgIGN0b3IucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckN0b3IucHJvdG90eXBlLCB7XG4gICAgICBjb25zdHJ1Y3Rvcjoge1xuICAgICAgICB2YWx1ZTogY3RvcixcbiAgICAgICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICAgIH1cbiAgICB9KTtcbiAgfTtcbn0gZWxzZSB7XG4gIC8vIG9sZCBzY2hvb2wgc2hpbSBmb3Igb2xkIGJyb3dzZXJzXG4gIG1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gaW5oZXJpdHMoY3Rvciwgc3VwZXJDdG9yKSB7XG4gICAgY3Rvci5zdXBlcl8gPSBzdXBlckN0b3JcbiAgICB2YXIgVGVtcEN0b3IgPSBmdW5jdGlvbiAoKSB7fVxuICAgIFRlbXBDdG9yLnByb3RvdHlwZSA9IHN1cGVyQ3Rvci5wcm90b3R5cGVcbiAgICBjdG9yLnByb3RvdHlwZSA9IG5ldyBUZW1wQ3RvcigpXG4gICAgY3Rvci5wcm90b3R5cGUuY29uc3RydWN0b3IgPSBjdG9yXG4gIH1cbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/inherits/inherits_browser.js\n");

/***/ }),

/***/ "./node_modules/isarray/index.js":
/*!***************************************!*\
  !*** ./node_modules/isarray/index.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaXNhcnJheS9pbmRleC5qcz9lM2RiIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGlCQUFpQjs7QUFFakI7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL2lzYXJyYXkvaW5kZXguanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgdG9TdHJpbmcgPSB7fS50b1N0cmluZztcblxubW9kdWxlLmV4cG9ydHMgPSBBcnJheS5pc0FycmF5IHx8IGZ1bmN0aW9uIChhcnIpIHtcbiAgcmV0dXJuIHRvU3RyaW5nLmNhbGwoYXJyKSA9PSAnW29iamVjdCBBcnJheV0nO1xufTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/isarray/index.js\n");

/***/ }),

/***/ "./node_modules/isomorphic-fetch/fetch-npm-browserify.js":
/*!***************************************************************!*\
  !*** ./node_modules/isomorphic-fetch/fetch-npm-browserify.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// the whatwg-fetch polyfill installs the fetch() function\n// on the global object (window or self)\n//\n// Return that as the export for use in Webpack, Browserify etc.\n__webpack_require__(/*! whatwg-fetch */ \"./node_modules/whatwg-fetch/fetch.js\");\nmodule.exports = self.fetch.bind(self);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaXNvbW9ycGhpYy1mZXRjaC9mZXRjaC1ucG0tYnJvd3NlcmlmeS5qcz8yZTk0Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQU8sQ0FBQywwREFBYztBQUN0QiIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9pc29tb3JwaGljLWZldGNoL2ZldGNoLW5wbS1icm93c2VyaWZ5LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gdGhlIHdoYXR3Zy1mZXRjaCBwb2x5ZmlsbCBpbnN0YWxscyB0aGUgZmV0Y2goKSBmdW5jdGlvblxuLy8gb24gdGhlIGdsb2JhbCBvYmplY3QgKHdpbmRvdyBvciBzZWxmKVxuLy9cbi8vIFJldHVybiB0aGF0IGFzIHRoZSBleHBvcnQgZm9yIHVzZSBpbiBXZWJwYWNrLCBCcm93c2VyaWZ5IGV0Yy5cbnJlcXVpcmUoJ3doYXR3Zy1mZXRjaCcpO1xubW9kdWxlLmV4cG9ydHMgPSBzZWxmLmZldGNoLmJpbmQoc2VsZik7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/isomorphic-fetch/fetch-npm-browserify.js\n");

/***/ }),

/***/ "./node_modules/node-libs-browser/node_modules/buffer/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/node-libs-browser/node_modules/buffer/index.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n\n\nvar base64 = __webpack_require__(/*! base64-js */ \"./node_modules/base64-js/index.js\")\nvar ieee754 = __webpack_require__(/*! ieee754 */ \"./node_modules/ieee754/index.js\")\nvar isArray = __webpack_require__(/*! isarray */ \"./node_modules/isarray/index.js\")\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/node-libs-browser/node_modules/buffer/index.js\n");

/***/ }),

/***/ "./node_modules/node-libs-browser/node_modules/events/events.js":
/*!**********************************************************************!*\
  !*** ./node_modules/node-libs-browser/node_modules/events/events.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/node-libs-browser/node_modules/events/events.js\n");

/***/ }),

/***/ "./node_modules/node-libs-browser/node_modules/timers-browserify/main.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/node-libs-browser/node_modules/timers-browserify/main.js ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global) {var scope = (typeof global !== \"undefined\" && global) ||\n            (typeof self !== \"undefined\" && self) ||\n            window;\nvar apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(scope, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\n__webpack_require__(/*! setimmediate */ \"./node_modules/setimmediate/setImmediate.js\");\n// On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbm9kZS1saWJzLWJyb3dzZXIvbm9kZV9tb2R1bGVzL3RpbWVycy1icm93c2VyaWZ5L21haW4uanM/MDlmYyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBO0FBQ0EsbUJBQU8sQ0FBQyxpRUFBYztBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbm9kZS1saWJzLWJyb3dzZXIvbm9kZV9tb2R1bGVzL3RpbWVycy1icm93c2VyaWZ5L21haW4uanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgc2NvcGUgPSAodHlwZW9mIGdsb2JhbCAhPT0gXCJ1bmRlZmluZWRcIiAmJiBnbG9iYWwpIHx8XG4gICAgICAgICAgICAodHlwZW9mIHNlbGYgIT09IFwidW5kZWZpbmVkXCIgJiYgc2VsZikgfHxcbiAgICAgICAgICAgIHdpbmRvdztcbnZhciBhcHBseSA9IEZ1bmN0aW9uLnByb3RvdHlwZS5hcHBseTtcblxuLy8gRE9NIEFQSXMsIGZvciBjb21wbGV0ZW5lc3NcblxuZXhwb3J0cy5zZXRUaW1lb3V0ID0gZnVuY3Rpb24oKSB7XG4gIHJldHVybiBuZXcgVGltZW91dChhcHBseS5jYWxsKHNldFRpbWVvdXQsIHNjb3BlLCBhcmd1bWVudHMpLCBjbGVhclRpbWVvdXQpO1xufTtcbmV4cG9ydHMuc2V0SW50ZXJ2YWwgPSBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIG5ldyBUaW1lb3V0KGFwcGx5LmNhbGwoc2V0SW50ZXJ2YWwsIHNjb3BlLCBhcmd1bWVudHMpLCBjbGVhckludGVydmFsKTtcbn07XG5leHBvcnRzLmNsZWFyVGltZW91dCA9XG5leHBvcnRzLmNsZWFySW50ZXJ2YWwgPSBmdW5jdGlvbih0aW1lb3V0KSB7XG4gIGlmICh0aW1lb3V0KSB7XG4gICAgdGltZW91dC5jbG9zZSgpO1xuICB9XG59O1xuXG5mdW5jdGlvbiBUaW1lb3V0KGlkLCBjbGVhckZuKSB7XG4gIHRoaXMuX2lkID0gaWQ7XG4gIHRoaXMuX2NsZWFyRm4gPSBjbGVhckZuO1xufVxuVGltZW91dC5wcm90b3R5cGUudW5yZWYgPSBUaW1lb3V0LnByb3RvdHlwZS5yZWYgPSBmdW5jdGlvbigpIHt9O1xuVGltZW91dC5wcm90b3R5cGUuY2xvc2UgPSBmdW5jdGlvbigpIHtcbiAgdGhpcy5fY2xlYXJGbi5jYWxsKHNjb3BlLCB0aGlzLl9pZCk7XG59O1xuXG4vLyBEb2VzIG5vdCBzdGFydCB0aGUgdGltZSwganVzdCBzZXRzIHVwIHRoZSBtZW1iZXJzIG5lZWRlZC5cbmV4cG9ydHMuZW5yb2xsID0gZnVuY3Rpb24oaXRlbSwgbXNlY3MpIHtcbiAgY2xlYXJUaW1lb3V0KGl0ZW0uX2lkbGVUaW1lb3V0SWQpO1xuICBpdGVtLl9pZGxlVGltZW91dCA9IG1zZWNzO1xufTtcblxuZXhwb3J0cy51bmVucm9sbCA9IGZ1bmN0aW9uKGl0ZW0pIHtcbiAgY2xlYXJUaW1lb3V0KGl0ZW0uX2lkbGVUaW1lb3V0SWQpO1xuICBpdGVtLl9pZGxlVGltZW91dCA9IC0xO1xufTtcblxuZXhwb3J0cy5fdW5yZWZBY3RpdmUgPSBleHBvcnRzLmFjdGl2ZSA9IGZ1bmN0aW9uKGl0ZW0pIHtcbiAgY2xlYXJUaW1lb3V0KGl0ZW0uX2lkbGVUaW1lb3V0SWQpO1xuXG4gIHZhciBtc2VjcyA9IGl0ZW0uX2lkbGVUaW1lb3V0O1xuICBpZiAobXNlY3MgPj0gMCkge1xuICAgIGl0ZW0uX2lkbGVUaW1lb3V0SWQgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uIG9uVGltZW91dCgpIHtcbiAgICAgIGlmIChpdGVtLl9vblRpbWVvdXQpXG4gICAgICAgIGl0ZW0uX29uVGltZW91dCgpO1xuICAgIH0sIG1zZWNzKTtcbiAgfVxufTtcblxuLy8gc2V0aW1tZWRpYXRlIGF0dGFjaGVzIGl0c2VsZiB0byB0aGUgZ2xvYmFsIG9iamVjdFxucmVxdWlyZShcInNldGltbWVkaWF0ZVwiKTtcbi8vIE9uIHNvbWUgZXhvdGljIGVudmlyb25tZW50cywgaXQncyBub3QgY2xlYXIgd2hpY2ggb2JqZWN0IGBzZXRpbW1lZGlhdGVgIHdhc1xuLy8gYWJsZSB0byBpbnN0YWxsIG9udG8uICBTZWFyY2ggZWFjaCBwb3NzaWJpbGl0eSBpbiB0aGUgc2FtZSBvcmRlciBhcyB0aGVcbi8vIGBzZXRpbW1lZGlhdGVgIGxpYnJhcnkuXG5leHBvcnRzLnNldEltbWVkaWF0ZSA9ICh0eXBlb2Ygc2VsZiAhPT0gXCJ1bmRlZmluZWRcIiAmJiBzZWxmLnNldEltbWVkaWF0ZSkgfHxcbiAgICAgICAgICAgICAgICAgICAgICAgKHR5cGVvZiBnbG9iYWwgIT09IFwidW5kZWZpbmVkXCIgJiYgZ2xvYmFsLnNldEltbWVkaWF0ZSkgfHxcbiAgICAgICAgICAgICAgICAgICAgICAgKHRoaXMgJiYgdGhpcy5zZXRJbW1lZGlhdGUpO1xuZXhwb3J0cy5jbGVhckltbWVkaWF0ZSA9ICh0eXBlb2Ygc2VsZiAhPT0gXCJ1bmRlZmluZWRcIiAmJiBzZWxmLmNsZWFySW1tZWRpYXRlKSB8fFxuICAgICAgICAgICAgICAgICAgICAgICAgICh0eXBlb2YgZ2xvYmFsICE9PSBcInVuZGVmaW5lZFwiICYmIGdsb2JhbC5jbGVhckltbWVkaWF0ZSkgfHxcbiAgICAgICAgICAgICAgICAgICAgICAgICAodGhpcyAmJiB0aGlzLmNsZWFySW1tZWRpYXRlKTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/node-libs-browser/node_modules/timers-browserify/main.js\n");

/***/ }),

/***/ "./node_modules/process-nextick-args/index.js":
/*!****************************************************!*\
  !*** ./node_modules/process-nextick-args/index.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(process) {\n\nif (!process.version ||\n    process.version.indexOf('v0.') === 0 ||\n    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {\n  module.exports = { nextTick: nextTick };\n} else {\n  module.exports = process\n}\n\nfunction nextTick(fn, arg1, arg2, arg3) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('\"callback\" argument must be a function');\n  }\n  var len = arguments.length;\n  var args, i;\n  switch (len) {\n  case 0:\n  case 1:\n    return process.nextTick(fn);\n  case 2:\n    return process.nextTick(function afterTickOne() {\n      fn.call(null, arg1);\n    });\n  case 3:\n    return process.nextTick(function afterTickTwo() {\n      fn.call(null, arg1, arg2);\n    });\n  case 4:\n    return process.nextTick(function afterTickThree() {\n      fn.call(null, arg1, arg2, arg3);\n    });\n  default:\n    args = new Array(len - 1);\n    i = 0;\n    while (i < args.length) {\n      args[i++] = arguments[i];\n    }\n    return process.nextTick(function afterTick() {\n      fn.apply(null, args);\n    });\n  }\n}\n\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../process/browser.js */ \"./node_modules/process/browser.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcHJvY2Vzcy1uZXh0aWNrLWFyZ3MvaW5kZXguanM/OTY2ZCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSwrQ0FBYTs7QUFFYjtBQUNBO0FBQ0E7QUFDQSxvQkFBb0I7QUFDcEIsQ0FBQztBQUNEO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvY2Vzcy1uZXh0aWNrLWFyZ3MvaW5kZXguanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmlmICghcHJvY2Vzcy52ZXJzaW9uIHx8XG4gICAgcHJvY2Vzcy52ZXJzaW9uLmluZGV4T2YoJ3YwLicpID09PSAwIHx8XG4gICAgcHJvY2Vzcy52ZXJzaW9uLmluZGV4T2YoJ3YxLicpID09PSAwICYmIHByb2Nlc3MudmVyc2lvbi5pbmRleE9mKCd2MS44LicpICE9PSAwKSB7XG4gIG1vZHVsZS5leHBvcnRzID0geyBuZXh0VGljazogbmV4dFRpY2sgfTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcHJvY2Vzc1xufVxuXG5mdW5jdGlvbiBuZXh0VGljayhmbiwgYXJnMSwgYXJnMiwgYXJnMykge1xuICBpZiAodHlwZW9mIGZuICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignXCJjYWxsYmFja1wiIGFyZ3VtZW50IG11c3QgYmUgYSBmdW5jdGlvbicpO1xuICB9XG4gIHZhciBsZW4gPSBhcmd1bWVudHMubGVuZ3RoO1xuICB2YXIgYXJncywgaTtcbiAgc3dpdGNoIChsZW4pIHtcbiAgY2FzZSAwOlxuICBjYXNlIDE6XG4gICAgcmV0dXJuIHByb2Nlc3MubmV4dFRpY2soZm4pO1xuICBjYXNlIDI6XG4gICAgcmV0dXJuIHByb2Nlc3MubmV4dFRpY2soZnVuY3Rpb24gYWZ0ZXJUaWNrT25lKCkge1xuICAgICAgZm4uY2FsbChudWxsLCBhcmcxKTtcbiAgICB9KTtcbiAgY2FzZSAzOlxuICAgIHJldHVybiBwcm9jZXNzLm5leHRUaWNrKGZ1bmN0aW9uIGFmdGVyVGlja1R3bygpIHtcbiAgICAgIGZuLmNhbGwobnVsbCwgYXJnMSwgYXJnMik7XG4gICAgfSk7XG4gIGNhc2UgNDpcbiAgICByZXR1cm4gcHJvY2Vzcy5uZXh0VGljayhmdW5jdGlvbiBhZnRlclRpY2tUaHJlZSgpIHtcbiAgICAgIGZuLmNhbGwobnVsbCwgYXJnMSwgYXJnMiwgYXJnMyk7XG4gICAgfSk7XG4gIGRlZmF1bHQ6XG4gICAgYXJncyA9IG5ldyBBcnJheShsZW4gLSAxKTtcbiAgICBpID0gMDtcbiAgICB3aGlsZSAoaSA8IGFyZ3MubGVuZ3RoKSB7XG4gICAgICBhcmdzW2krK10gPSBhcmd1bWVudHNbaV07XG4gICAgfVxuICAgIHJldHVybiBwcm9jZXNzLm5leHRUaWNrKGZ1bmN0aW9uIGFmdGVyVGljaygpIHtcbiAgICAgIGZuLmFwcGx5KG51bGwsIGFyZ3MpO1xuICAgIH0pO1xuICB9XG59XG5cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/process-nextick-args/index.js\n");

/***/ }),

/***/ "./node_modules/process/browser.js":
/*!*****************************************!*\
  !*** ./node_modules/process/browser.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/process/browser.js\n");

/***/ }),

/***/ "./node_modules/readable-stream/duplex-browser.js":
/*!********************************************************!*\
  !*** ./node_modules/readable-stream/duplex-browser.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! ./lib/_stream_duplex.js */ \"./node_modules/readable-stream/lib/_stream_duplex.js\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhZGFibGUtc3RyZWFtL2R1cGxleC1icm93c2VyLmpzPzA5NjAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsaUJBQWlCLG1CQUFPLENBQUMscUZBQXlCIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL3JlYWRhYmxlLXN0cmVhbS9kdXBsZXgtYnJvd3Nlci5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9saWIvX3N0cmVhbV9kdXBsZXguanMnKTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/readable-stream/duplex-browser.js\n");

/***/ }),

/***/ "./node_modules/readable-stream/lib/_stream_duplex.js":
/*!************************************************************!*\
  !*** ./node_modules/readable-stream/lib/_stream_duplex.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n\n\n/*<replacement>*/\n\nvar pna = __webpack_require__(/*! process-nextick-args */ \"./node_modules/process-nextick-args/index.js\");\n/*</replacement>*/\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    keys.push(key);\n  }return keys;\n};\n/*</replacement>*/\n\nmodule.exports = Duplex;\n\n/*<replacement>*/\nvar util = __webpack_require__(/*! core-util-is */ \"./node_modules/core-util-is/lib/util.js\");\nutil.inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\");\n/*</replacement>*/\n\nvar Readable = __webpack_require__(/*! ./_stream_readable */ \"./node_modules/readable-stream/lib/_stream_readable.js\");\nvar Writable = __webpack_require__(/*! ./_stream_writable */ \"./node_modules/readable-stream/lib/_stream_writable.js\");\n\nutil.inherits(Duplex, Readable);\n\n{\n  // avoid scope creep, the keys array can then be collected\n  var keys = objectKeys(Writable.prototype);\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false) this.readable = false;\n\n  if (options && options.writable === false) this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;\n\n  this.once('end', onend);\n}\n\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  pna.nextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});\n\nDuplex.prototype._destroy = function (err, cb) {\n  this.push(null);\n  this.end();\n\n  pna.nextTick(cb, err);\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhZGFibGUtc3RyZWFtL2xpYi9fc3RyZWFtX2R1cGxleC5qcz9iMTlhIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRWE7O0FBRWI7O0FBRUEsVUFBVSxtQkFBTyxDQUFDLDBFQUFzQjtBQUN4Qzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQSxXQUFXLG1CQUFPLENBQUMsNkRBQWM7QUFDakMsZ0JBQWdCLG1CQUFPLENBQUMsNkRBQVU7QUFDbEM7O0FBRUEsZUFBZSxtQkFBTyxDQUFDLGtGQUFvQjtBQUMzQyxlQUFlLG1CQUFPLENBQUMsa0ZBQW9COztBQUUzQzs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsaUJBQWlCO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7O0FBRUE7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9yZWFkYWJsZS1zdHJlYW0vbGliL19zdHJlYW1fZHVwbGV4LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IEpveWVudCwgSW5jLiBhbmQgb3RoZXIgTm9kZSBjb250cmlidXRvcnMuXG4vL1xuLy8gUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGFcbi8vIGNvcHkgb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGVcbi8vIFwiU29mdHdhcmVcIiksIHRvIGRlYWwgaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZ1xuLy8gd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHMgdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLFxuLy8gZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGwgY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdFxuLy8gcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpcyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlXG4vLyBmb2xsb3dpbmcgY29uZGl0aW9uczpcbi8vXG4vLyBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZFxuLy8gaW4gYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuXG4vL1xuLy8gVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIFwiQVMgSVNcIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTU1xuLy8gT1IgSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRlxuLy8gTUVSQ0hBTlRBQklMSVRZLCBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiBJTlxuLy8gTk8gRVZFTlQgU0hBTEwgVEhFIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sXG4vLyBEQU1BR0VTIE9SIE9USEVSIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1Jcbi8vIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLCBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEVcbi8vIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTiBUSEUgU09GVFdBUkUuXG5cbi8vIGEgZHVwbGV4IHN0cmVhbSBpcyBqdXN0IGEgc3RyZWFtIHRoYXQgaXMgYm90aCByZWFkYWJsZSBhbmQgd3JpdGFibGUuXG4vLyBTaW5jZSBKUyBkb2Vzbid0IGhhdmUgbXVsdGlwbGUgcHJvdG90eXBhbCBpbmhlcml0YW5jZSwgdGhpcyBjbGFzc1xuLy8gcHJvdG90eXBhbGx5IGluaGVyaXRzIGZyb20gUmVhZGFibGUsIGFuZCB0aGVuIHBhcmFzaXRpY2FsbHkgZnJvbVxuLy8gV3JpdGFibGUuXG5cbid1c2Ugc3RyaWN0JztcblxuLyo8cmVwbGFjZW1lbnQ+Ki9cblxudmFyIHBuYSA9IHJlcXVpcmUoJ3Byb2Nlc3MtbmV4dGljay1hcmdzJyk7XG4vKjwvcmVwbGFjZW1lbnQ+Ki9cblxuLyo8cmVwbGFjZW1lbnQ+Ki9cbnZhciBvYmplY3RLZXlzID0gT2JqZWN0LmtleXMgfHwgZnVuY3Rpb24gKG9iaikge1xuICB2YXIga2V5cyA9IFtdO1xuICBmb3IgKHZhciBrZXkgaW4gb2JqKSB7XG4gICAga2V5cy5wdXNoKGtleSk7XG4gIH1yZXR1cm4ga2V5cztcbn07XG4vKjwvcmVwbGFjZW1lbnQ+Ki9cblxubW9kdWxlLmV4cG9ydHMgPSBEdXBsZXg7XG5cbi8qPHJlcGxhY2VtZW50PiovXG52YXIgdXRpbCA9IHJlcXVpcmUoJ2NvcmUtdXRpbC1pcycpO1xudXRpbC5pbmhlcml0cyA9IHJlcXVpcmUoJ2luaGVyaXRzJyk7XG4vKjwvcmVwbGFjZW1lbnQ+Ki9cblxudmFyIFJlYWRhYmxlID0gcmVxdWlyZSgnLi9fc3RyZWFtX3JlYWRhYmxlJyk7XG52YXIgV3JpdGFibGUgPSByZXF1aXJlKCcuL19zdHJlYW1fd3JpdGFibGUnKTtcblxudXRpbC5pbmhlcml0cyhEdXBsZXgsIFJlYWRhYmxlKTtcblxue1xuICAvLyBhdm9pZCBzY29wZSBjcmVlcCwgdGhlIGtleXMgYXJyYXkgY2FuIHRoZW4gYmUgY29sbGVjdGVkXG4gIHZhciBrZXlzID0gb2JqZWN0S2V5cyhXcml0YWJsZS5wcm90b3R5cGUpO1xuICBmb3IgKHZhciB2ID0gMDsgdiA8IGtleXMubGVuZ3RoOyB2KyspIHtcbiAgICB2YXIgbWV0aG9kID0ga2V5c1t2XTtcbiAgICBpZiAoIUR1cGxleC5wcm90b3R5cGVbbWV0aG9kXSkgRHVwbGV4LnByb3RvdHlwZVttZXRob2RdID0gV3JpdGFibGUucHJvdG90eXBlW21ldGhvZF07XG4gIH1cbn1cblxuZnVuY3Rpb24gRHVwbGV4KG9wdGlvbnMpIHtcbiAgaWYgKCEodGhpcyBpbnN0YW5jZW9mIER1cGxleCkpIHJldHVybiBuZXcgRHVwbGV4KG9wdGlvbnMpO1xuXG4gIFJlYWRhYmxlLmNhbGwodGhpcywgb3B0aW9ucyk7XG4gIFdyaXRhYmxlLmNhbGwodGhpcywgb3B0aW9ucyk7XG5cbiAgaWYgKG9wdGlvbnMgJiYgb3B0aW9ucy5yZWFkYWJsZSA9PT0gZmFsc2UpIHRoaXMucmVhZGFibGUgPSBmYWxzZTtcblxuICBpZiAob3B0aW9ucyAmJiBvcHRpb25zLndyaXRhYmxlID09PSBmYWxzZSkgdGhpcy53cml0YWJsZSA9IGZhbHNlO1xuXG4gIHRoaXMuYWxsb3dIYWxmT3BlbiA9IHRydWU7XG4gIGlmIChvcHRpb25zICYmIG9wdGlvbnMuYWxsb3dIYWxmT3BlbiA9PT0gZmFsc2UpIHRoaXMuYWxsb3dIYWxmT3BlbiA9IGZhbHNlO1xuXG4gIHRoaXMub25jZSgnZW5kJywgb25lbmQpO1xufVxuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoRHVwbGV4LnByb3RvdHlwZSwgJ3dyaXRhYmxlSGlnaFdhdGVyTWFyaycsIHtcbiAgLy8gbWFraW5nIGl0IGV4cGxpY2l0IHRoaXMgcHJvcGVydHkgaXMgbm90IGVudW1lcmFibGVcbiAgLy8gYmVjYXVzZSBvdGhlcndpc2Ugc29tZSBwcm90b3R5cGUgbWFuaXB1bGF0aW9uIGluXG4gIC8vIHVzZXJsYW5kIHdpbGwgZmFpbFxuICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIHRoaXMuX3dyaXRhYmxlU3RhdGUuaGlnaFdhdGVyTWFyaztcbiAgfVxufSk7XG5cbi8vIHRoZSBuby1oYWxmLW9wZW4gZW5mb3JjZXJcbmZ1bmN0aW9uIG9uZW5kKCkge1xuICAvLyBpZiB3ZSBhbGxvdyBoYWxmLW9wZW4gc3RhdGUsIG9yIGlmIHRoZSB3cml0YWJsZSBzaWRlIGVuZGVkLFxuICAvLyB0aGVuIHdlJ3JlIG9rLlxuICBpZiAodGhpcy5hbGxvd0hhbGZPcGVuIHx8IHRoaXMuX3dyaXRhYmxlU3RhdGUuZW5kZWQpIHJldHVybjtcblxuICAvLyBubyBtb3JlIGRhdGEgY2FuIGJlIHdyaXR0ZW4uXG4gIC8vIEJ1dCBhbGxvdyBtb3JlIHdyaXRlcyB0byBoYXBwZW4gaW4gdGhpcyB0aWNrLlxuICBwbmEubmV4dFRpY2sob25FbmROVCwgdGhpcyk7XG59XG5cbmZ1bmN0aW9uIG9uRW5kTlQoc2VsZikge1xuICBzZWxmLmVuZCgpO1xufVxuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoRHVwbGV4LnByb3RvdHlwZSwgJ2Rlc3Ryb3llZCcsIHtcbiAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgaWYgKHRoaXMuX3JlYWRhYmxlU3RhdGUgPT09IHVuZGVmaW5lZCB8fCB0aGlzLl93cml0YWJsZVN0YXRlID09PSB1bmRlZmluZWQpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgcmV0dXJuIHRoaXMuX3JlYWRhYmxlU3RhdGUuZGVzdHJveWVkICYmIHRoaXMuX3dyaXRhYmxlU3RhdGUuZGVzdHJveWVkO1xuICB9LFxuICBzZXQ6IGZ1bmN0aW9uICh2YWx1ZSkge1xuICAgIC8vIHdlIGlnbm9yZSB0aGUgdmFsdWUgaWYgdGhlIHN0cmVhbVxuICAgIC8vIGhhcyBub3QgYmVlbiBpbml0aWFsaXplZCB5ZXRcbiAgICBpZiAodGhpcy5fcmVhZGFibGVTdGF0ZSA9PT0gdW5kZWZpbmVkIHx8IHRoaXMuX3dyaXRhYmxlU3RhdGUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIC8vIGJhY2t3YXJkIGNvbXBhdGliaWxpdHksIHRoZSB1c2VyIGlzIGV4cGxpY2l0bHlcbiAgICAvLyBtYW5hZ2luZyBkZXN0cm95ZWRcbiAgICB0aGlzLl9yZWFkYWJsZVN0YXRlLmRlc3Ryb3llZCA9IHZhbHVlO1xuICAgIHRoaXMuX3dyaXRhYmxlU3RhdGUuZGVzdHJveWVkID0gdmFsdWU7XG4gIH1cbn0pO1xuXG5EdXBsZXgucHJvdG90eXBlLl9kZXN0cm95ID0gZnVuY3Rpb24gKGVyciwgY2IpIHtcbiAgdGhpcy5wdXNoKG51bGwpO1xuICB0aGlzLmVuZCgpO1xuXG4gIHBuYS5uZXh0VGljayhjYiwgZXJyKTtcbn07Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/readable-stream/lib/_stream_duplex.js\n");

/***/ }),

/***/ "./node_modules/readable-stream/lib/_stream_passthrough.js":
/*!*****************************************************************!*\
  !*** ./node_modules/readable-stream/lib/_stream_passthrough.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n\n\nmodule.exports = PassThrough;\n\nvar Transform = __webpack_require__(/*! ./_stream_transform */ \"./node_modules/readable-stream/lib/_stream_transform.js\");\n\n/*<replacement>*/\nvar util = __webpack_require__(/*! core-util-is */ \"./node_modules/core-util-is/lib/util.js\");\nutil.inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\");\n/*</replacement>*/\n\nutil.inherits(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhZGFibGUtc3RyZWFtL2xpYi9fc3RyZWFtX3Bhc3N0aHJvdWdoLmpzPzc4MGYiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRWE7O0FBRWI7O0FBRUEsZ0JBQWdCLG1CQUFPLENBQUMsb0ZBQXFCOztBQUU3QztBQUNBLFdBQVcsbUJBQU8sQ0FBQyw2REFBYztBQUNqQyxnQkFBZ0IsbUJBQU8sQ0FBQyw2REFBVTtBQUNsQzs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL3JlYWRhYmxlLXN0cmVhbS9saWIvX3N0cmVhbV9wYXNzdGhyb3VnaC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCBKb3llbnQsIEluYy4gYW5kIG90aGVyIE5vZGUgY29udHJpYnV0b3JzLlxuLy9cbi8vIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhXG4vLyBjb3B5IG9mIHRoaXMgc29mdHdhcmUgYW5kIGFzc29jaWF0ZWQgZG9jdW1lbnRhdGlvbiBmaWxlcyAodGhlXG4vLyBcIlNvZnR3YXJlXCIpLCB0byBkZWFsIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmdcbi8vIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCxcbi8vIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vciBzZWxsIGNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXRcbi8vIHBlcnNvbnMgdG8gd2hvbSB0aGUgU29mdHdhcmUgaXMgZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvIHRoZVxuLy8gZm9sbG93aW5nIGNvbmRpdGlvbnM6XG4vL1xuLy8gVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWRcbi8vIGluIGFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLlxuLy9cbi8vIFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCBcIkFTIElTXCIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1Ncbi8vIE9SIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0Zcbi8vIE1FUkNIQU5UQUJJTElUWSwgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gSU5cbi8vIE5PIEVWRU5UIFNIQUxMIFRIRSBBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLFxuLy8gREFNQUdFUyBPUiBPVEhFUiBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SXG4vLyBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSwgT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFXG4vLyBVU0UgT1IgT1RIRVIgREVBTElOR1MgSU4gVEhFIFNPRlRXQVJFLlxuXG4vLyBhIHBhc3N0aHJvdWdoIHN0cmVhbS5cbi8vIGJhc2ljYWxseSBqdXN0IHRoZSBtb3N0IG1pbmltYWwgc29ydCBvZiBUcmFuc2Zvcm0gc3RyZWFtLlxuLy8gRXZlcnkgd3JpdHRlbiBjaHVuayBnZXRzIG91dHB1dCBhcy1pcy5cblxuJ3VzZSBzdHJpY3QnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFBhc3NUaHJvdWdoO1xuXG52YXIgVHJhbnNmb3JtID0gcmVxdWlyZSgnLi9fc3RyZWFtX3RyYW5zZm9ybScpO1xuXG4vKjxyZXBsYWNlbWVudD4qL1xudmFyIHV0aWwgPSByZXF1aXJlKCdjb3JlLXV0aWwtaXMnKTtcbnV0aWwuaW5oZXJpdHMgPSByZXF1aXJlKCdpbmhlcml0cycpO1xuLyo8L3JlcGxhY2VtZW50PiovXG5cbnV0aWwuaW5oZXJpdHMoUGFzc1Rocm91Z2gsIFRyYW5zZm9ybSk7XG5cbmZ1bmN0aW9uIFBhc3NUaHJvdWdoKG9wdGlvbnMpIHtcbiAgaWYgKCEodGhpcyBpbnN0YW5jZW9mIFBhc3NUaHJvdWdoKSkgcmV0dXJuIG5ldyBQYXNzVGhyb3VnaChvcHRpb25zKTtcblxuICBUcmFuc2Zvcm0uY2FsbCh0aGlzLCBvcHRpb25zKTtcbn1cblxuUGFzc1Rocm91Z2gucHJvdG90eXBlLl90cmFuc2Zvcm0gPSBmdW5jdGlvbiAoY2h1bmssIGVuY29kaW5nLCBjYikge1xuICBjYihudWxsLCBjaHVuayk7XG59OyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/readable-stream/lib/_stream_passthrough.js\n");

/***/ }),

/***/ "./node_modules/readable-stream/lib/_stream_readable.js":
/*!**************************************************************!*\
  !*** ./node_modules/readable-stream/lib/_stream_readable.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global, process) {// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n/*<replacement>*/\n\nvar pna = __webpack_require__(/*! process-nextick-args */ \"./node_modules/process-nextick-args/index.js\");\n/*</replacement>*/\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar isArray = __webpack_require__(/*! isarray */ \"./node_modules/isarray/index.js\");\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = __webpack_require__(/*! events */ \"./node_modules/node-libs-browser/node_modules/events/events.js\").EventEmitter;\n\nvar EElistenerCount = function (emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = __webpack_require__(/*! ./internal/streams/stream */ \"./node_modules/readable-stream/lib/internal/streams/stream-browser.js\");\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"./node_modules/safe-buffer/index.js\").Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\n/*<replacement>*/\nvar util = __webpack_require__(/*! core-util-is */ \"./node_modules/core-util-is/lib/util.js\");\nutil.inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\");\n/*</replacement>*/\n\n/*<replacement>*/\nvar debugUtil = __webpack_require__(/*! util */ 0);\nvar debug = void 0;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function () {};\n}\n/*</replacement>*/\n\nvar BufferList = __webpack_require__(/*! ./internal/streams/BufferList */ \"./node_modules/readable-stream/lib/internal/streams/BufferList.js\");\nvar destroyImpl = __webpack_require__(/*! ./internal/streams/destroy */ \"./node_modules/readable-stream/lib/internal/streams/destroy.js\");\nvar StringDecoder;\n\nutil.inherits(Readable, Stream);\n\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\n\nfunction ReadableState(options, stream) {\n  Duplex = Duplex || __webpack_require__(/*! ./_stream_duplex */ \"./node_modules/readable-stream/lib/_stream_duplex.js\");\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  var readableHwm = options.readableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (readableHwm || readableHwm === 0)) this.highWaterMark = readableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = __webpack_require__(/*! string_decoder/ */ \"./node_modules/string_decoder/lib/string_decoder.js\").StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  Duplex = Duplex || __webpack_require__(/*! ./_stream_duplex */ \"./node_modules/readable-stream/lib/_stream_duplex.js\");\n\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n\n  Stream.call(this);\n}\n\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n  }\n});\n\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function (err, cb) {\n  this.push(null);\n  cb(err);\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\n\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  var state = stream._readableState;\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n    if (er) {\n      stream.emit('error', er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n\n      if (addToFront) {\n        if (state.endEmitted) stream.emit('error', new Error('stream.unshift() after end event'));else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        stream.emit('error', new Error('stream.push() after EOF'));\n      } else {\n        state.reading = false;\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n    }\n  }\n\n  return needMoreData(state);\n}\n\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    stream.emit('data', chunk);\n    stream.read(0);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n\n    if (state.needReadable) emitReadable(stream);\n  }\n  maybeReadMore(stream, state);\n}\n\nfunction chunkInvalid(state, chunk) {\n  var er;\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);\n}\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = __webpack_require__(/*! string_decoder/ */ \"./node_modules/string_decoder/lib/string_decoder.js\").StringDecoder;\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n  return this;\n};\n\n// Don't raise the hwm > 8MB\nvar MAX_HWM = 0x800000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = true;\n    n = 0;\n  } else {\n    state.length -= n;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n\n  return ret;\n};\n\nfunction onEofChunk(stream, state) {\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // emit 'readable' now to make sure it gets picked up.\n  emitReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    if (state.sync) pna.nextTick(emitReadable_, stream);else emitReadable_(stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  debug('emit readable');\n  stream.emit('readable');\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    pna.nextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;else len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  this.emit('error', new Error('_read() is not implemented'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) pna.nextTick(endFn);else src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  // If the user pushes more data while we're writing to dest then we'll end up\n  // in ondata again. However, we only want to increase awaitDrain once because\n  // dest will only emit one 'drain' event for the multiple writes.\n  // => Introduce a guard on increasing awaitDrain.\n  var increasedAwaitDrain = false;\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    increasedAwaitDrain = false;\n    var ret = dest.write(chunk);\n    if (false === ret && !increasedAwaitDrain) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', src._readableState.awaitDrain);\n        src._readableState.awaitDrain++;\n        increasedAwaitDrain = true;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function () {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = { hasUnpiped: false };\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++) {\n      dests[i].emit('unpipe', this, unpipeInfo);\n    }return this;\n  }\n\n  // try to find the right one.\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this, unpipeInfo);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n\n  if (ev === 'data') {\n    // Start flowing on next tick if stream isn't explicitly paused\n    if (this._readableState.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    var state = this._readableState;\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.emittedReadable = false;\n      if (!state.reading) {\n        pna.nextTick(nReadingNextTick, this);\n      } else if (state.length) {\n        emitReadable(this);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    state.flowing = true;\n    resume(this, state);\n  }\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    pna.nextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  if (!state.reading) {\n    debug('resume read 0');\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  state.awaitDrain = 0;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (false !== this._readableState.flowing) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null) {}\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n\n  var state = this._readableState;\n  var paused = false;\n\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n\n    _this.push(null);\n  });\n\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = _this.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function (method) {\n        return function () {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  }\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  this._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return this;\n};\n\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._readableState.highWaterMark;\n  }\n});\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = fromListPartial(n, state.buffer, state.decoder);\n  }\n\n  return ret;\n}\n\n// Extracts only enough buffered data to satisfy the amount requested.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromListPartial(n, list, hasStrings) {\n  var ret;\n  if (n < list.head.data.length) {\n    // slice is the same for buffers and strings\n    ret = list.head.data.slice(0, n);\n    list.head.data = list.head.data.slice(n);\n  } else if (n === list.head.data.length) {\n    // first chunk is a perfect match\n    ret = list.shift();\n  } else {\n    // result spans more than one buffer\n    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);\n  }\n  return ret;\n}\n\n// Copies a specified amount of characters from the list of buffered data\n// chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBufferString(n, list) {\n  var p = list.head;\n  var c = 1;\n  var ret = p.data;\n  n -= ret.length;\n  while (p = p.next) {\n    var str = p.data;\n    var nb = n > str.length ? str.length : n;\n    if (nb === str.length) ret += str;else ret += str.slice(0, n);\n    n -= nb;\n    if (n === 0) {\n      if (nb === str.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = str.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\n// Copies a specified amount of bytes from the list of buffered data chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBuffer(n, list) {\n  var ret = Buffer.allocUnsafe(n);\n  var p = list.head;\n  var c = 1;\n  p.data.copy(ret);\n  n -= p.data.length;\n  while (p = p.next) {\n    var buf = p.data;\n    var nb = n > buf.length ? buf.length : n;\n    buf.copy(ret, ret.length - n, 0, nb);\n    n -= nb;\n    if (n === 0) {\n      if (nb === buf.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = buf.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0) throw new Error('\"endReadable()\" called on non-empty stream');\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    pna.nextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n  }\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\"), __webpack_require__(/*! ./../../process/browser.js */ \"./node_modules/process/browser.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/readable-stream/lib/_stream_readable.js\n");

/***/ }),

/***/ "./node_modules/readable-stream/lib/_stream_transform.js":
/*!***************************************************************!*\
  !*** ./node_modules/readable-stream/lib/_stream_transform.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n\n\nmodule.exports = Transform;\n\nvar Duplex = __webpack_require__(/*! ./_stream_duplex */ \"./node_modules/readable-stream/lib/_stream_duplex.js\");\n\n/*<replacement>*/\nvar util = __webpack_require__(/*! core-util-is */ \"./node_modules/core-util-is/lib/util.js\");\nutil.inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\");\n/*</replacement>*/\n\nutil.inherits(Transform, Duplex);\n\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n\n  var cb = ts.writecb;\n\n  if (!cb) {\n    return this.emit('error', new Error('write callback called multiple times'));\n  }\n\n  ts.writechunk = null;\n  ts.writecb = null;\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    this.push(data);\n\n  cb(er);\n\n  var rs = this._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\n\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n\n  Duplex.call(this, options);\n\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  };\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  // When the writable side finishes, then flush out anything remaining.\n  this.on('prefinish', prefinish);\n}\n\nfunction prefinish() {\n  var _this = this;\n\n  if (typeof this._flush === 'function') {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  throw new Error('_transform() is not implemented');\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nTransform.prototype._destroy = function (err, cb) {\n  var _this2 = this;\n\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n    _this2.emit('close');\n  });\n};\n\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    stream.push(data);\n\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  if (stream._writableState.length) throw new Error('Calling transform done when ws.length != 0');\n\n  if (stream._transformState.transforming) throw new Error('Calling transform done when still transforming');\n\n  return stream.push(null);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/readable-stream/lib/_stream_transform.js\n");

/***/ }),

/***/ "./node_modules/readable-stream/lib/_stream_writable.js":
/*!**************************************************************!*\
  !*** ./node_modules/readable-stream/lib/_stream_writable.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(process, setImmediate, global) {// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n\n\n/*<replacement>*/\n\nvar pna = __webpack_require__(/*! process-nextick-args */ \"./node_modules/process-nextick-args/index.js\");\n/*</replacement>*/\n\nmodule.exports = Writable;\n\n/* <replacement> */\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\nvar asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : pna.nextTick;\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n/*<replacement>*/\nvar util = __webpack_require__(/*! core-util-is */ \"./node_modules/core-util-is/lib/util.js\");\nutil.inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\");\n/*</replacement>*/\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: __webpack_require__(/*! util-deprecate */ \"./node_modules/util-deprecate/browser.js\")\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = __webpack_require__(/*! ./internal/streams/stream */ \"./node_modules/readable-stream/lib/internal/streams/stream-browser.js\");\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"./node_modules/safe-buffer/index.js\").Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\nvar destroyImpl = __webpack_require__(/*! ./internal/streams/destroy */ \"./node_modules/readable-stream/lib/internal/streams/destroy.js\");\n\nutil.inherits(Writable, Stream);\n\nfunction nop() {}\n\nfunction WritableState(options, stream) {\n  Duplex = Duplex || __webpack_require__(/*! ./_stream_duplex */ \"./node_modules/readable-stream/lib/_stream_duplex.js\");\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  var writableHwm = options.writableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (writableHwm || writableHwm === 0)) this.highWaterMark = writableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // if _final has been called\n  this.finalCalled = false;\n\n  // drain event flag.\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function () {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})();\n\n// Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\nvar realHasInstance;\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function (object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function (object) {\n    return object instanceof this;\n  };\n}\n\nfunction Writable(options) {\n  Duplex = Duplex || __webpack_require__(/*! ./_stream_duplex */ \"./node_modules/readable-stream/lib/_stream_duplex.js\");\n\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n  if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {\n    return new Writable(options);\n  }\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n\n    if (typeof options.writev === 'function') this._writev = options.writev;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  this.emit('error', new Error('Cannot pipe, not readable'));\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  pna.nextTick(cb, er);\n}\n\n// Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n  var er = false;\n\n  if (chunk === null) {\n    er = new TypeError('May not write null values to stream');\n  } else if (typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  if (er) {\n    stream.emit('error', er);\n    pna.nextTick(cb, er);\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n\n  if (typeof cb !== 'function') cb = nop;\n\n  if (state.ended) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  var state = this._writableState;\n\n  state.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n\n    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\n\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    pna.nextTick(cb, er);\n    // this can emit finish, and it will always happen\n    // after error\n    pna.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n    // this can emit finish, but finish must\n    // always follow error\n    finishMaybe(stream, state);\n  }\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state);\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      /*<replacement>*/\n      asyncWrite(afterWrite, stream, state, finished, cb);\n      /*</replacement>*/\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n\n    var count = 0;\n    var allBuffers = true;\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n    buffer.allBuffers = allBuffers;\n\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new Error('_write() is not implemented'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending && !state.finished) endWritable(this, state, cb);\n};\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n    if (err) {\n      stream.emit('error', err);\n    }\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function') {\n      state.pendingcb++;\n      state.finalCalled = true;\n      pna.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    prefinish(stream, state);\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n    }\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) pna.nextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\n\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  }\n  if (state.corkedRequestsFree) {\n    state.corkedRequestsFree.next = corkReq;\n  } else {\n    state.corkedRequestsFree = corkReq;\n  }\n}\n\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  get: function () {\n    if (this._writableState === undefined) {\n      return false;\n    }\n    return this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._writableState.destroyed = value;\n  }\n});\n\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\nWritable.prototype._destroy = function (err, cb) {\n  this.end();\n  cb(err);\n};\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../process/browser.js */ \"./node_modules/process/browser.js\"), __webpack_require__(/*! ./../../node-libs-browser/node_modules/timers-browserify/main.js */ \"./node_modules/node-libs-browser/node_modules/timers-browserify/main.js\").setImmediate, __webpack_require__(/*! ./../../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhZGFibGUtc3RyZWFtL2xpYi9fc3RyZWFtX3dyaXRhYmxlLmpzP2RjMTQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRWE7O0FBRWI7O0FBRUEsVUFBVSxtQkFBTyxDQUFDLDBFQUFzQjtBQUN4Qzs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0EsV0FBVyxtQkFBTyxDQUFDLDZEQUFjO0FBQ2pDLGdCQUFnQixtQkFBTyxDQUFDLDZEQUFVO0FBQ2xDOztBQUVBO0FBQ0E7QUFDQSxhQUFhLG1CQUFPLENBQUMsZ0VBQWdCO0FBQ3JDO0FBQ0E7O0FBRUE7QUFDQSxhQUFhLG1CQUFPLENBQUMsd0dBQTJCO0FBQ2hEOztBQUVBOztBQUVBLGFBQWEsbUJBQU8sQ0FBQyx3REFBYTtBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQSxrQkFBa0IsbUJBQU8sQ0FBQyxrR0FBNEI7O0FBRXREOztBQUVBOztBQUVBO0FBQ0EscUJBQXFCLG1CQUFPLENBQUMsOEVBQWtCOztBQUUvQzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxpREFBaUQsMEZBQTBGOztBQUUzSTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMLEdBQUc7QUFDSCxDQUFDOztBQUVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsR0FBRztBQUNILENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLHFCQUFxQixtQkFBTyxDQUFDLDhFQUFrQjs7QUFFL0M7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGlDQUFpQzs7QUFFakM7O0FBRUEsMkNBQTJDO0FBQzNDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtREFBbUQ7QUFDbkQ7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUEsb0RBQW9EO0FBQ3BEO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5Q0FBeUM7QUFDekM7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEUiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhZGFibGUtc3RyZWFtL2xpYi9fc3RyZWFtX3dyaXRhYmxlLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IEpveWVudCwgSW5jLiBhbmQgb3RoZXIgTm9kZSBjb250cmlidXRvcnMuXG4vL1xuLy8gUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGFcbi8vIGNvcHkgb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGVcbi8vIFwiU29mdHdhcmVcIiksIHRvIGRlYWwgaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZ1xuLy8gd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHMgdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLFxuLy8gZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGwgY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdFxuLy8gcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpcyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlXG4vLyBmb2xsb3dpbmcgY29uZGl0aW9uczpcbi8vXG4vLyBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZFxuLy8gaW4gYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuXG4vL1xuLy8gVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIFwiQVMgSVNcIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTU1xuLy8gT1IgSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRlxuLy8gTUVSQ0hBTlRBQklMSVRZLCBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiBJTlxuLy8gTk8gRVZFTlQgU0hBTEwgVEhFIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sXG4vLyBEQU1BR0VTIE9SIE9USEVSIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1Jcbi8vIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLCBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEVcbi8vIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTiBUSEUgU09GVFdBUkUuXG5cbi8vIEEgYml0IHNpbXBsZXIgdGhhbiByZWFkYWJsZSBzdHJlYW1zLlxuLy8gSW1wbGVtZW50IGFuIGFzeW5jIC5fd3JpdGUoY2h1bmssIGVuY29kaW5nLCBjYiksIGFuZCBpdCdsbCBoYW5kbGUgYWxsXG4vLyB0aGUgZHJhaW4gZXZlbnQgZW1pc3Npb24gYW5kIGJ1ZmZlcmluZy5cblxuJ3VzZSBzdHJpY3QnO1xuXG4vKjxyZXBsYWNlbWVudD4qL1xuXG52YXIgcG5hID0gcmVxdWlyZSgncHJvY2Vzcy1uZXh0aWNrLWFyZ3MnKTtcbi8qPC9yZXBsYWNlbWVudD4qL1xuXG5tb2R1bGUuZXhwb3J0cyA9IFdyaXRhYmxlO1xuXG4vKiA8cmVwbGFjZW1lbnQ+ICovXG5mdW5jdGlvbiBXcml0ZVJlcShjaHVuaywgZW5jb2RpbmcsIGNiKSB7XG4gIHRoaXMuY2h1bmsgPSBjaHVuaztcbiAgdGhpcy5lbmNvZGluZyA9IGVuY29kaW5nO1xuICB0aGlzLmNhbGxiYWNrID0gY2I7XG4gIHRoaXMubmV4dCA9IG51bGw7XG59XG5cbi8vIEl0IHNlZW1zIGEgbGlua2VkIGxpc3QgYnV0IGl0IGlzIG5vdFxuLy8gdGhlcmUgd2lsbCBiZSBvbmx5IDIgb2YgdGhlc2UgZm9yIGVhY2ggc3RyZWFtXG5mdW5jdGlvbiBDb3JrZWRSZXF1ZXN0KHN0YXRlKSB7XG4gIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgdGhpcy5uZXh0ID0gbnVsbDtcbiAgdGhpcy5lbnRyeSA9IG51bGw7XG4gIHRoaXMuZmluaXNoID0gZnVuY3Rpb24gKCkge1xuICAgIG9uQ29ya2VkRmluaXNoKF90aGlzLCBzdGF0ZSk7XG4gIH07XG59XG4vKiA8L3JlcGxhY2VtZW50PiAqL1xuXG4vKjxyZXBsYWNlbWVudD4qL1xudmFyIGFzeW5jV3JpdGUgPSAhcHJvY2Vzcy5icm93c2VyICYmIFsndjAuMTAnLCAndjAuOS4nXS5pbmRleE9mKHByb2Nlc3MudmVyc2lvbi5zbGljZSgwLCA1KSkgPiAtMSA/IHNldEltbWVkaWF0ZSA6IHBuYS5uZXh0VGljaztcbi8qPC9yZXBsYWNlbWVudD4qL1xuXG4vKjxyZXBsYWNlbWVudD4qL1xudmFyIER1cGxleDtcbi8qPC9yZXBsYWNlbWVudD4qL1xuXG5Xcml0YWJsZS5Xcml0YWJsZVN0YXRlID0gV3JpdGFibGVTdGF0ZTtcblxuLyo8cmVwbGFjZW1lbnQ+Ki9cbnZhciB1dGlsID0gcmVxdWlyZSgnY29yZS11dGlsLWlzJyk7XG51dGlsLmluaGVyaXRzID0gcmVxdWlyZSgnaW5oZXJpdHMnKTtcbi8qPC9yZXBsYWNlbWVudD4qL1xuXG4vKjxyZXBsYWNlbWVudD4qL1xudmFyIGludGVybmFsVXRpbCA9IHtcbiAgZGVwcmVjYXRlOiByZXF1aXJlKCd1dGlsLWRlcHJlY2F0ZScpXG59O1xuLyo8L3JlcGxhY2VtZW50PiovXG5cbi8qPHJlcGxhY2VtZW50PiovXG52YXIgU3RyZWFtID0gcmVxdWlyZSgnLi9pbnRlcm5hbC9zdHJlYW1zL3N0cmVhbScpO1xuLyo8L3JlcGxhY2VtZW50PiovXG5cbi8qPHJlcGxhY2VtZW50PiovXG5cbnZhciBCdWZmZXIgPSByZXF1aXJlKCdzYWZlLWJ1ZmZlcicpLkJ1ZmZlcjtcbnZhciBPdXJVaW50OEFycmF5ID0gZ2xvYmFsLlVpbnQ4QXJyYXkgfHwgZnVuY3Rpb24gKCkge307XG5mdW5jdGlvbiBfdWludDhBcnJheVRvQnVmZmVyKGNodW5rKSB7XG4gIHJldHVybiBCdWZmZXIuZnJvbShjaHVuayk7XG59XG5mdW5jdGlvbiBfaXNVaW50OEFycmF5KG9iaikge1xuICByZXR1cm4gQnVmZmVyLmlzQnVmZmVyKG9iaikgfHwgb2JqIGluc3RhbmNlb2YgT3VyVWludDhBcnJheTtcbn1cblxuLyo8L3JlcGxhY2VtZW50PiovXG5cbnZhciBkZXN0cm95SW1wbCA9IHJlcXVpcmUoJy4vaW50ZXJuYWwvc3RyZWFtcy9kZXN0cm95Jyk7XG5cbnV0aWwuaW5oZXJpdHMoV3JpdGFibGUsIFN0cmVhbSk7XG5cbmZ1bmN0aW9uIG5vcCgpIHt9XG5cbmZ1bmN0aW9uIFdyaXRhYmxlU3RhdGUob3B0aW9ucywgc3RyZWFtKSB7XG4gIER1cGxleCA9IER1cGxleCB8fCByZXF1aXJlKCcuL19zdHJlYW1fZHVwbGV4Jyk7XG5cbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG5cbiAgLy8gRHVwbGV4IHN0cmVhbXMgYXJlIGJvdGggcmVhZGFibGUgYW5kIHdyaXRhYmxlLCBidXQgc2hhcmVcbiAgLy8gdGhlIHNhbWUgb3B0aW9ucyBvYmplY3QuXG4gIC8vIEhvd2V2ZXIsIHNvbWUgY2FzZXMgcmVxdWlyZSBzZXR0aW5nIG9wdGlvbnMgdG8gZGlmZmVyZW50XG4gIC8vIHZhbHVlcyBmb3IgdGhlIHJlYWRhYmxlIGFuZCB0aGUgd3JpdGFibGUgc2lkZXMgb2YgdGhlIGR1cGxleCBzdHJlYW0uXG4gIC8vIFRoZXNlIG9wdGlvbnMgY2FuIGJlIHByb3ZpZGVkIHNlcGFyYXRlbHkgYXMgcmVhZGFibGVYWFggYW5kIHdyaXRhYmxlWFhYLlxuICB2YXIgaXNEdXBsZXggPSBzdHJlYW0gaW5zdGFuY2VvZiBEdXBsZXg7XG5cbiAgLy8gb2JqZWN0IHN0cmVhbSBmbGFnIHRvIGluZGljYXRlIHdoZXRoZXIgb3Igbm90IHRoaXMgc3RyZWFtXG4gIC8vIGNvbnRhaW5zIGJ1ZmZlcnMgb3Igb2JqZWN0cy5cbiAgdGhpcy5vYmplY3RNb2RlID0gISFvcHRpb25zLm9iamVjdE1vZGU7XG5cbiAgaWYgKGlzRHVwbGV4KSB0aGlzLm9iamVjdE1vZGUgPSB0aGlzLm9iamVjdE1vZGUgfHwgISFvcHRpb25zLndyaXRhYmxlT2JqZWN0TW9kZTtcblxuICAvLyB0aGUgcG9pbnQgYXQgd2hpY2ggd3JpdGUoKSBzdGFydHMgcmV0dXJuaW5nIGZhbHNlXG4gIC8vIE5vdGU6IDAgaXMgYSB2YWxpZCB2YWx1ZSwgbWVhbnMgdGhhdCB3ZSBhbHdheXMgcmV0dXJuIGZhbHNlIGlmXG4gIC8vIHRoZSBlbnRpcmUgYnVmZmVyIGlzIG5vdCBmbHVzaGVkIGltbWVkaWF0ZWx5IG9uIHdyaXRlKClcbiAgdmFyIGh3bSA9IG9wdGlvbnMuaGlnaFdhdGVyTWFyaztcbiAgdmFyIHdyaXRhYmxlSHdtID0gb3B0aW9ucy53cml0YWJsZUhpZ2hXYXRlck1hcms7XG4gIHZhciBkZWZhdWx0SHdtID0gdGhpcy5vYmplY3RNb2RlID8gMTYgOiAxNiAqIDEwMjQ7XG5cbiAgaWYgKGh3bSB8fCBod20gPT09IDApIHRoaXMuaGlnaFdhdGVyTWFyayA9IGh3bTtlbHNlIGlmIChpc0R1cGxleCAmJiAod3JpdGFibGVId20gfHwgd3JpdGFibGVId20gPT09IDApKSB0aGlzLmhpZ2hXYXRlck1hcmsgPSB3cml0YWJsZUh3bTtlbHNlIHRoaXMuaGlnaFdhdGVyTWFyayA9IGRlZmF1bHRId207XG5cbiAgLy8gY2FzdCB0byBpbnRzLlxuICB0aGlzLmhpZ2hXYXRlck1hcmsgPSBNYXRoLmZsb29yKHRoaXMuaGlnaFdhdGVyTWFyayk7XG5cbiAgLy8gaWYgX2ZpbmFsIGhhcyBiZWVuIGNhbGxlZFxuICB0aGlzLmZpbmFsQ2FsbGVkID0gZmFsc2U7XG5cbiAgLy8gZHJhaW4gZXZlbnQgZmxhZy5cbiAgdGhpcy5uZWVkRHJhaW4gPSBmYWxzZTtcbiAgLy8gYXQgdGhlIHN0YXJ0IG9mIGNhbGxpbmcgZW5kKClcbiAgdGhpcy5lbmRpbmcgPSBmYWxzZTtcbiAgLy8gd2hlbiBlbmQoKSBoYXMgYmVlbiBjYWxsZWQsIGFuZCByZXR1cm5lZFxuICB0aGlzLmVuZGVkID0gZmFsc2U7XG4gIC8vIHdoZW4gJ2ZpbmlzaCcgaXMgZW1pdHRlZFxuICB0aGlzLmZpbmlzaGVkID0gZmFsc2U7XG5cbiAgLy8gaGFzIGl0IGJlZW4gZGVzdHJveWVkXG4gIHRoaXMuZGVzdHJveWVkID0gZmFsc2U7XG5cbiAgLy8gc2hvdWxkIHdlIGRlY29kZSBzdHJpbmdzIGludG8gYnVmZmVycyBiZWZvcmUgcGFzc2luZyB0byBfd3JpdGU/XG4gIC8vIHRoaXMgaXMgaGVyZSBzbyB0aGF0IHNvbWUgbm9kZS1jb3JlIHN0cmVhbXMgY2FuIG9wdGltaXplIHN0cmluZ1xuICAvLyBoYW5kbGluZyBhdCBhIGxvd2VyIGxldmVsLlxuICB2YXIgbm9EZWNvZGUgPSBvcHRpb25zLmRlY29kZVN0cmluZ3MgPT09IGZhbHNlO1xuICB0aGlzLmRlY29kZVN0cmluZ3MgPSAhbm9EZWNvZGU7XG5cbiAgLy8gQ3J5cHRvIGlzIGtpbmQgb2Ygb2xkIGFuZCBjcnVzdHkuICBIaXN0b3JpY2FsbHksIGl0cyBkZWZhdWx0IHN0cmluZ1xuICAvLyBlbmNvZGluZyBpcyAnYmluYXJ5JyBzbyB3ZSBoYXZlIHRvIG1ha2UgdGhpcyBjb25maWd1cmFibGUuXG4gIC8vIEV2ZXJ5dGhpbmcgZWxzZSBpbiB0aGUgdW5pdmVyc2UgdXNlcyAndXRmOCcsIHRob3VnaC5cbiAgdGhpcy5kZWZhdWx0RW5jb2RpbmcgPSBvcHRpb25zLmRlZmF1bHRFbmNvZGluZyB8fCAndXRmOCc7XG5cbiAgLy8gbm90IGFuIGFjdHVhbCBidWZmZXIgd2Uga2VlcCB0cmFjayBvZiwgYnV0IGEgbWVhc3VyZW1lbnRcbiAgLy8gb2YgaG93IG11Y2ggd2UncmUgd2FpdGluZyB0byBnZXQgcHVzaGVkIHRvIHNvbWUgdW5kZXJseWluZ1xuICAvLyBzb2NrZXQgb3IgZmlsZS5cbiAgdGhpcy5sZW5ndGggPSAwO1xuXG4gIC8vIGEgZmxhZyB0byBzZWUgd2hlbiB3ZSdyZSBpbiB0aGUgbWlkZGxlIG9mIGEgd3JpdGUuXG4gIHRoaXMud3JpdGluZyA9IGZhbHNlO1xuXG4gIC8vIHdoZW4gdHJ1ZSBhbGwgd3JpdGVzIHdpbGwgYmUgYnVmZmVyZWQgdW50aWwgLnVuY29yaygpIGNhbGxcbiAgdGhpcy5jb3JrZWQgPSAwO1xuXG4gIC8vIGEgZmxhZyB0byBiZSBhYmxlIHRvIHRlbGwgaWYgdGhlIG9ud3JpdGUgY2IgaXMgY2FsbGVkIGltbWVkaWF0ZWx5LFxuICAvLyBvciBvbiBhIGxhdGVyIHRpY2suICBXZSBzZXQgdGhpcyB0byB0cnVlIGF0IGZpcnN0LCBiZWNhdXNlIGFueVxuICAvLyBhY3Rpb25zIHRoYXQgc2hvdWxkbid0IGhhcHBlbiB1bnRpbCBcImxhdGVyXCIgc2hvdWxkIGdlbmVyYWxseSBhbHNvXG4gIC8vIG5vdCBoYXBwZW4gYmVmb3JlIHRoZSBmaXJzdCB3cml0ZSBjYWxsLlxuICB0aGlzLnN5bmMgPSB0cnVlO1xuXG4gIC8vIGEgZmxhZyB0byBrbm93IGlmIHdlJ3JlIHByb2Nlc3NpbmcgcHJldmlvdXNseSBidWZmZXJlZCBpdGVtcywgd2hpY2hcbiAgLy8gbWF5IGNhbGwgdGhlIF93cml0ZSgpIGNhbGxiYWNrIGluIHRoZSBzYW1lIHRpY2ssIHNvIHRoYXQgd2UgZG9uJ3RcbiAgLy8gZW5kIHVwIGluIGFuIG92ZXJsYXBwZWQgb253cml0ZSBzaXR1YXRpb24uXG4gIHRoaXMuYnVmZmVyUHJvY2Vzc2luZyA9IGZhbHNlO1xuXG4gIC8vIHRoZSBjYWxsYmFjayB0aGF0J3MgcGFzc2VkIHRvIF93cml0ZShjaHVuayxjYilcbiAgdGhpcy5vbndyaXRlID0gZnVuY3Rpb24gKGVyKSB7XG4gICAgb253cml0ZShzdHJlYW0sIGVyKTtcbiAgfTtcblxuICAvLyB0aGUgY2FsbGJhY2sgdGhhdCB0aGUgdXNlciBzdXBwbGllcyB0byB3cml0ZShjaHVuayxlbmNvZGluZyxjYilcbiAgdGhpcy53cml0ZWNiID0gbnVsbDtcblxuICAvLyB0aGUgYW1vdW50IHRoYXQgaXMgYmVpbmcgd3JpdHRlbiB3aGVuIF93cml0ZSBpcyBjYWxsZWQuXG4gIHRoaXMud3JpdGVsZW4gPSAwO1xuXG4gIHRoaXMuYnVmZmVyZWRSZXF1ZXN0ID0gbnVsbDtcbiAgdGhpcy5sYXN0QnVmZmVyZWRSZXF1ZXN0ID0gbnVsbDtcblxuICAvLyBudW1iZXIgb2YgcGVuZGluZyB1c2VyLXN1cHBsaWVkIHdyaXRlIGNhbGxiYWNrc1xuICAvLyB0aGlzIG11c3QgYmUgMCBiZWZvcmUgJ2ZpbmlzaCcgY2FuIGJlIGVtaXR0ZWRcbiAgdGhpcy5wZW5kaW5nY2IgPSAwO1xuXG4gIC8vIGVtaXQgcHJlZmluaXNoIGlmIHRoZSBvbmx5IHRoaW5nIHdlJ3JlIHdhaXRpbmcgZm9yIGlzIF93cml0ZSBjYnNcbiAgLy8gVGhpcyBpcyByZWxldmFudCBmb3Igc3luY2hyb25vdXMgVHJhbnNmb3JtIHN0cmVhbXNcbiAgdGhpcy5wcmVmaW5pc2hlZCA9IGZhbHNlO1xuXG4gIC8vIFRydWUgaWYgdGhlIGVycm9yIHdhcyBhbHJlYWR5IGVtaXR0ZWQgYW5kIHNob3VsZCBub3QgYmUgdGhyb3duIGFnYWluXG4gIHRoaXMuZXJyb3JFbWl0dGVkID0gZmFsc2U7XG5cbiAgLy8gY291bnQgYnVmZmVyZWQgcmVxdWVzdHNcbiAgdGhpcy5idWZmZXJlZFJlcXVlc3RDb3VudCA9IDA7XG5cbiAgLy8gYWxsb2NhdGUgdGhlIGZpcnN0IENvcmtlZFJlcXVlc3QsIHRoZXJlIGlzIGFsd2F5c1xuICAvLyBvbmUgYWxsb2NhdGVkIGFuZCBmcmVlIHRvIHVzZSwgYW5kIHdlIG1haW50YWluIGF0IG1vc3QgdHdvXG4gIHRoaXMuY29ya2VkUmVxdWVzdHNGcmVlID0gbmV3IENvcmtlZFJlcXVlc3QodGhpcyk7XG59XG5cbldyaXRhYmxlU3RhdGUucHJvdG90eXBlLmdldEJ1ZmZlciA9IGZ1bmN0aW9uIGdldEJ1ZmZlcigpIHtcbiAgdmFyIGN1cnJlbnQgPSB0aGlzLmJ1ZmZlcmVkUmVxdWVzdDtcbiAgdmFyIG91dCA9IFtdO1xuICB3aGlsZSAoY3VycmVudCkge1xuICAgIG91dC5wdXNoKGN1cnJlbnQpO1xuICAgIGN1cnJlbnQgPSBjdXJyZW50Lm5leHQ7XG4gIH1cbiAgcmV0dXJuIG91dDtcbn07XG5cbihmdW5jdGlvbiAoKSB7XG4gIHRyeSB7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KFdyaXRhYmxlU3RhdGUucHJvdG90eXBlLCAnYnVmZmVyJywge1xuICAgICAgZ2V0OiBpbnRlcm5hbFV0aWwuZGVwcmVjYXRlKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZ2V0QnVmZmVyKCk7XG4gICAgICB9LCAnX3dyaXRhYmxlU3RhdGUuYnVmZmVyIGlzIGRlcHJlY2F0ZWQuIFVzZSBfd3JpdGFibGVTdGF0ZS5nZXRCdWZmZXIgJyArICdpbnN0ZWFkLicsICdERVAwMDAzJylcbiAgICB9KTtcbiAgfSBjYXRjaCAoXykge31cbn0pKCk7XG5cbi8vIFRlc3QgX3dyaXRhYmxlU3RhdGUgZm9yIGluaGVyaXRhbmNlIHRvIGFjY291bnQgZm9yIER1cGxleCBzdHJlYW1zLFxuLy8gd2hvc2UgcHJvdG90eXBlIGNoYWluIG9ubHkgcG9pbnRzIHRvIFJlYWRhYmxlLlxudmFyIHJlYWxIYXNJbnN0YW5jZTtcbmlmICh0eXBlb2YgU3ltYm9sID09PSAnZnVuY3Rpb24nICYmIFN5bWJvbC5oYXNJbnN0YW5jZSAmJiB0eXBlb2YgRnVuY3Rpb24ucHJvdG90eXBlW1N5bWJvbC5oYXNJbnN0YW5jZV0gPT09ICdmdW5jdGlvbicpIHtcbiAgcmVhbEhhc0luc3RhbmNlID0gRnVuY3Rpb24ucHJvdG90eXBlW1N5bWJvbC5oYXNJbnN0YW5jZV07XG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShXcml0YWJsZSwgU3ltYm9sLmhhc0luc3RhbmNlLCB7XG4gICAgdmFsdWU6IGZ1bmN0aW9uIChvYmplY3QpIHtcbiAgICAgIGlmIChyZWFsSGFzSW5zdGFuY2UuY2FsbCh0aGlzLCBvYmplY3QpKSByZXR1cm4gdHJ1ZTtcbiAgICAgIGlmICh0aGlzICE9PSBXcml0YWJsZSkgcmV0dXJuIGZhbHNlO1xuXG4gICAgICByZXR1cm4gb2JqZWN0ICYmIG9iamVjdC5fd3JpdGFibGVTdGF0ZSBpbnN0YW5jZW9mIFdyaXRhYmxlU3RhdGU7XG4gICAgfVxuICB9KTtcbn0gZWxzZSB7XG4gIHJlYWxIYXNJbnN0YW5jZSA9IGZ1bmN0aW9uIChvYmplY3QpIHtcbiAgICByZXR1cm4gb2JqZWN0IGluc3RhbmNlb2YgdGhpcztcbiAgfTtcbn1cblxuZnVuY3Rpb24gV3JpdGFibGUob3B0aW9ucykge1xuICBEdXBsZXggPSBEdXBsZXggfHwgcmVxdWlyZSgnLi9fc3RyZWFtX2R1cGxleCcpO1xuXG4gIC8vIFdyaXRhYmxlIGN0b3IgaXMgYXBwbGllZCB0byBEdXBsZXhlcywgdG9vLlxuICAvLyBgcmVhbEhhc0luc3RhbmNlYCBpcyBuZWNlc3NhcnkgYmVjYXVzZSB1c2luZyBwbGFpbiBgaW5zdGFuY2VvZmBcbiAgLy8gd291bGQgcmV0dXJuIGZhbHNlLCBhcyBubyBgX3dyaXRhYmxlU3RhdGVgIHByb3BlcnR5IGlzIGF0dGFjaGVkLlxuXG4gIC8vIFRyeWluZyB0byB1c2UgdGhlIGN1c3RvbSBgaW5zdGFuY2VvZmAgZm9yIFdyaXRhYmxlIGhlcmUgd2lsbCBhbHNvIGJyZWFrIHRoZVxuICAvLyBOb2RlLmpzIExhenlUcmFuc2Zvcm0gaW1wbGVtZW50YXRpb24sIHdoaWNoIGhhcyBhIG5vbi10cml2aWFsIGdldHRlciBmb3JcbiAgLy8gYF93cml0YWJsZVN0YXRlYCB0aGF0IHdvdWxkIGxlYWQgdG8gaW5maW5pdGUgcmVjdXJzaW9uLlxuICBpZiAoIXJlYWxIYXNJbnN0YW5jZS5jYWxsKFdyaXRhYmxlLCB0aGlzKSAmJiAhKHRoaXMgaW5zdGFuY2VvZiBEdXBsZXgpKSB7XG4gICAgcmV0dXJuIG5ldyBXcml0YWJsZShvcHRpb25zKTtcbiAgfVxuXG4gIHRoaXMuX3dyaXRhYmxlU3RhdGUgPSBuZXcgV3JpdGFibGVTdGF0ZShvcHRpb25zLCB0aGlzKTtcblxuICAvLyBsZWdhY3kuXG4gIHRoaXMud3JpdGFibGUgPSB0cnVlO1xuXG4gIGlmIChvcHRpb25zKSB7XG4gICAgaWYgKHR5cGVvZiBvcHRpb25zLndyaXRlID09PSAnZnVuY3Rpb24nKSB0aGlzLl93cml0ZSA9IG9wdGlvbnMud3JpdGU7XG5cbiAgICBpZiAodHlwZW9mIG9wdGlvbnMud3JpdGV2ID09PSAnZnVuY3Rpb24nKSB0aGlzLl93cml0ZXYgPSBvcHRpb25zLndyaXRldjtcblxuICAgIGlmICh0eXBlb2Ygb3B0aW9ucy5kZXN0cm95ID09PSAnZnVuY3Rpb24nKSB0aGlzLl9kZXN0cm95ID0gb3B0aW9ucy5kZXN0cm95O1xuXG4gICAgaWYgKHR5cGVvZiBvcHRpb25zLmZpbmFsID09PSAnZnVuY3Rpb24nKSB0aGlzLl9maW5hbCA9IG9wdGlvbnMuZmluYWw7XG4gIH1cblxuICBTdHJlYW0uY2FsbCh0aGlzKTtcbn1cblxuLy8gT3RoZXJ3aXNlIHBlb3BsZSBjYW4gcGlwZSBXcml0YWJsZSBzdHJlYW1zLCB3aGljaCBpcyBqdXN0IHdyb25nLlxuV3JpdGFibGUucHJvdG90eXBlLnBpcGUgPSBmdW5jdGlvbiAoKSB7XG4gIHRoaXMuZW1pdCgnZXJyb3InLCBuZXcgRXJyb3IoJ0Nhbm5vdCBwaXBlLCBub3QgcmVhZGFibGUnKSk7XG59O1xuXG5mdW5jdGlvbiB3cml0ZUFmdGVyRW5kKHN0cmVhbSwgY2IpIHtcbiAgdmFyIGVyID0gbmV3IEVycm9yKCd3cml0ZSBhZnRlciBlbmQnKTtcbiAgLy8gVE9ETzogZGVmZXIgZXJyb3IgZXZlbnRzIGNvbnNpc3RlbnRseSBldmVyeXdoZXJlLCBub3QganVzdCB0aGUgY2JcbiAgc3RyZWFtLmVtaXQoJ2Vycm9yJywgZXIpO1xuICBwbmEubmV4dFRpY2soY2IsIGVyKTtcbn1cblxuLy8gQ2hlY2tzIHRoYXQgYSB1c2VyLXN1cHBsaWVkIGNodW5rIGlzIHZhbGlkLCBlc3BlY2lhbGx5IGZvciB0aGUgcGFydGljdWxhclxuLy8gbW9kZSB0aGUgc3RyZWFtIGlzIGluLiBDdXJyZW50bHkgdGhpcyBtZWFucyB0aGF0IGBudWxsYCBpcyBuZXZlciBhY2NlcHRlZFxuLy8gYW5kIHVuZGVmaW5lZC9ub24tc3RyaW5nIHZhbHVlcyBhcmUgb25seSBhbGxvd2VkIGluIG9iamVjdCBtb2RlLlxuZnVuY3Rpb24gdmFsaWRDaHVuayhzdHJlYW0sIHN0YXRlLCBjaHVuaywgY2IpIHtcbiAgdmFyIHZhbGlkID0gdHJ1ZTtcbiAgdmFyIGVyID0gZmFsc2U7XG5cbiAgaWYgKGNodW5rID09PSBudWxsKSB7XG4gICAgZXIgPSBuZXcgVHlwZUVycm9yKCdNYXkgbm90IHdyaXRlIG51bGwgdmFsdWVzIHRvIHN0cmVhbScpO1xuICB9IGVsc2UgaWYgKHR5cGVvZiBjaHVuayAhPT0gJ3N0cmluZycgJiYgY2h1bmsgIT09IHVuZGVmaW5lZCAmJiAhc3RhdGUub2JqZWN0TW9kZSkge1xuICAgIGVyID0gbmV3IFR5cGVFcnJvcignSW52YWxpZCBub24tc3RyaW5nL2J1ZmZlciBjaHVuaycpO1xuICB9XG4gIGlmIChlcikge1xuICAgIHN0cmVhbS5lbWl0KCdlcnJvcicsIGVyKTtcbiAgICBwbmEubmV4dFRpY2soY2IsIGVyKTtcbiAgICB2YWxpZCA9IGZhbHNlO1xuICB9XG4gIHJldHVybiB2YWxpZDtcbn1cblxuV3JpdGFibGUucHJvdG90eXBlLndyaXRlID0gZnVuY3Rpb24gKGNodW5rLCBlbmNvZGluZywgY2IpIHtcbiAgdmFyIHN0YXRlID0gdGhpcy5fd3JpdGFibGVTdGF0ZTtcbiAgdmFyIHJldCA9IGZhbHNlO1xuICB2YXIgaXNCdWYgPSAhc3RhdGUub2JqZWN0TW9kZSAmJiBfaXNVaW50OEFycmF5KGNodW5rKTtcblxuICBpZiAoaXNCdWYgJiYgIUJ1ZmZlci5pc0J1ZmZlcihjaHVuaykpIHtcbiAgICBjaHVuayA9IF91aW50OEFycmF5VG9CdWZmZXIoY2h1bmspO1xuICB9XG5cbiAgaWYgKHR5cGVvZiBlbmNvZGluZyA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIGNiID0gZW5jb2Rpbmc7XG4gICAgZW5jb2RpbmcgPSBudWxsO1xuICB9XG5cbiAgaWYgKGlzQnVmKSBlbmNvZGluZyA9ICdidWZmZXInO2Vsc2UgaWYgKCFlbmNvZGluZykgZW5jb2RpbmcgPSBzdGF0ZS5kZWZhdWx0RW5jb2Rpbmc7XG5cbiAgaWYgKHR5cGVvZiBjYiAhPT0gJ2Z1bmN0aW9uJykgY2IgPSBub3A7XG5cbiAgaWYgKHN0YXRlLmVuZGVkKSB3cml0ZUFmdGVyRW5kKHRoaXMsIGNiKTtlbHNlIGlmIChpc0J1ZiB8fCB2YWxpZENodW5rKHRoaXMsIHN0YXRlLCBjaHVuaywgY2IpKSB7XG4gICAgc3RhdGUucGVuZGluZ2NiKys7XG4gICAgcmV0ID0gd3JpdGVPckJ1ZmZlcih0aGlzLCBzdGF0ZSwgaXNCdWYsIGNodW5rLCBlbmNvZGluZywgY2IpO1xuICB9XG5cbiAgcmV0dXJuIHJldDtcbn07XG5cbldyaXRhYmxlLnByb3RvdHlwZS5jb3JrID0gZnVuY3Rpb24gKCkge1xuICB2YXIgc3RhdGUgPSB0aGlzLl93cml0YWJsZVN0YXRlO1xuXG4gIHN0YXRlLmNvcmtlZCsrO1xufTtcblxuV3JpdGFibGUucHJvdG90eXBlLnVuY29yayA9IGZ1bmN0aW9uICgpIHtcbiAgdmFyIHN0YXRlID0gdGhpcy5fd3JpdGFibGVTdGF0ZTtcblxuICBpZiAoc3RhdGUuY29ya2VkKSB7XG4gICAgc3RhdGUuY29ya2VkLS07XG5cbiAgICBpZiAoIXN0YXRlLndyaXRpbmcgJiYgIXN0YXRlLmNvcmtlZCAmJiAhc3RhdGUuZmluaXNoZWQgJiYgIXN0YXRlLmJ1ZmZlclByb2Nlc3NpbmcgJiYgc3RhdGUuYnVmZmVyZWRSZXF1ZXN0KSBjbGVhckJ1ZmZlcih0aGlzLCBzdGF0ZSk7XG4gIH1cbn07XG5cbldyaXRhYmxlLnByb3RvdHlwZS5zZXREZWZhdWx0RW5jb2RpbmcgPSBmdW5jdGlvbiBzZXREZWZhdWx0RW5jb2RpbmcoZW5jb2RpbmcpIHtcbiAgLy8gbm9kZTo6UGFyc2VFbmNvZGluZygpIHJlcXVpcmVzIGxvd2VyIGNhc2UuXG4gIGlmICh0eXBlb2YgZW5jb2RpbmcgPT09ICdzdHJpbmcnKSBlbmNvZGluZyA9IGVuY29kaW5nLnRvTG93ZXJDYXNlKCk7XG4gIGlmICghKFsnaGV4JywgJ3V0ZjgnLCAndXRmLTgnLCAnYXNjaWknLCAnYmluYXJ5JywgJ2Jhc2U2NCcsICd1Y3MyJywgJ3Vjcy0yJywgJ3V0ZjE2bGUnLCAndXRmLTE2bGUnLCAncmF3J10uaW5kZXhPZigoZW5jb2RpbmcgKyAnJykudG9Mb3dlckNhc2UoKSkgPiAtMSkpIHRocm93IG5ldyBUeXBlRXJyb3IoJ1Vua25vd24gZW5jb2Rpbmc6ICcgKyBlbmNvZGluZyk7XG4gIHRoaXMuX3dyaXRhYmxlU3RhdGUuZGVmYXVsdEVuY29kaW5nID0gZW5jb2Rpbmc7XG4gIHJldHVybiB0aGlzO1xufTtcblxuZnVuY3Rpb24gZGVjb2RlQ2h1bmsoc3RhdGUsIGNodW5rLCBlbmNvZGluZykge1xuICBpZiAoIXN0YXRlLm9iamVjdE1vZGUgJiYgc3RhdGUuZGVjb2RlU3RyaW5ncyAhPT0gZmFsc2UgJiYgdHlwZW9mIGNodW5rID09PSAnc3RyaW5nJykge1xuICAgIGNodW5rID0gQnVmZmVyLmZyb20oY2h1bmssIGVuY29kaW5nKTtcbiAgfVxuICByZXR1cm4gY2h1bms7XG59XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShXcml0YWJsZS5wcm90b3R5cGUsICd3cml0YWJsZUhpZ2hXYXRlck1hcmsnLCB7XG4gIC8vIG1ha2luZyBpdCBleHBsaWNpdCB0aGlzIHByb3BlcnR5IGlzIG5vdCBlbnVtZXJhYmxlXG4gIC8vIGJlY2F1c2Ugb3RoZXJ3aXNlIHNvbWUgcHJvdG90eXBlIG1hbmlwdWxhdGlvbiBpblxuICAvLyB1c2VybGFuZCB3aWxsIGZhaWxcbiAgZW51bWVyYWJsZTogZmFsc2UsXG4gIGdldDogZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiB0aGlzLl93cml0YWJsZVN0YXRlLmhpZ2hXYXRlck1hcms7XG4gIH1cbn0pO1xuXG4vLyBpZiB3ZSdyZSBhbHJlYWR5IHdyaXRpbmcgc29tZXRoaW5nLCB0aGVuIGp1c3QgcHV0IHRoaXNcbi8vIGluIHRoZSBxdWV1ZSwgYW5kIHdhaXQgb3VyIHR1cm4uICBPdGhlcndpc2UsIGNhbGwgX3dyaXRlXG4vLyBJZiB3ZSByZXR1cm4gZmFsc2UsIHRoZW4gd2UgbmVlZCBhIGRyYWluIGV2ZW50LCBzbyBzZXQgdGhhdCBmbGFnLlxuZnVuY3Rpb24gd3JpdGVPckJ1ZmZlcihzdHJlYW0sIHN0YXRlLCBpc0J1ZiwgY2h1bmssIGVuY29kaW5nLCBjYikge1xuICBpZiAoIWlzQnVmKSB7XG4gICAgdmFyIG5ld0NodW5rID0gZGVjb2RlQ2h1bmsoc3RhdGUsIGNodW5rLCBlbmNvZGluZyk7XG4gICAgaWYgKGNodW5rICE9PSBuZXdDaHVuaykge1xuICAgICAgaXNCdWYgPSB0cnVlO1xuICAgICAgZW5jb2RpbmcgPSAnYnVmZmVyJztcbiAgICAgIGNodW5rID0gbmV3Q2h1bms7XG4gICAgfVxuICB9XG4gIHZhciBsZW4gPSBzdGF0ZS5vYmplY3RNb2RlID8gMSA6IGNodW5rLmxlbmd0aDtcblxuICBzdGF0ZS5sZW5ndGggKz0gbGVuO1xuXG4gIHZhciByZXQgPSBzdGF0ZS5sZW5ndGggPCBzdGF0ZS5oaWdoV2F0ZXJNYXJrO1xuICAvLyB3ZSBtdXN0IGVuc3VyZSB0aGF0IHByZXZpb3VzIG5lZWREcmFpbiB3aWxsIG5vdCBiZSByZXNldCB0byBmYWxzZS5cbiAgaWYgKCFyZXQpIHN0YXRlLm5lZWREcmFpbiA9IHRydWU7XG5cbiAgaWYgKHN0YXRlLndyaXRpbmcgfHwgc3RhdGUuY29ya2VkKSB7XG4gICAgdmFyIGxhc3QgPSBzdGF0ZS5sYXN0QnVmZmVyZWRSZXF1ZXN0O1xuICAgIHN0YXRlLmxhc3RCdWZmZXJlZFJlcXVlc3QgPSB7XG4gICAgICBjaHVuazogY2h1bmssXG4gICAgICBlbmNvZGluZzogZW5jb2RpbmcsXG4gICAgICBpc0J1ZjogaXNCdWYsXG4gICAgICBjYWxsYmFjazogY2IsXG4gICAgICBuZXh0OiBudWxsXG4gICAgfTtcbiAgICBpZiAobGFzdCkge1xuICAgICAgbGFzdC5uZXh0ID0gc3RhdGUubGFzdEJ1ZmZlcmVkUmVxdWVzdDtcbiAgICB9IGVsc2Uge1xuICAgICAgc3RhdGUuYnVmZmVyZWRSZXF1ZXN0ID0gc3RhdGUubGFzdEJ1ZmZlcmVkUmVxdWVzdDtcbiAgICB9XG4gICAgc3RhdGUuYnVmZmVyZWRSZXF1ZXN0Q291bnQgKz0gMTtcbiAgfSBlbHNlIHtcbiAgICBkb1dyaXRlKHN0cmVhbSwgc3RhdGUsIGZhbHNlLCBsZW4sIGNodW5rLCBlbmNvZGluZywgY2IpO1xuICB9XG5cbiAgcmV0dXJuIHJldDtcbn1cblxuZnVuY3Rpb24gZG9Xcml0ZShzdHJlYW0sIHN0YXRlLCB3cml0ZXYsIGxlbiwgY2h1bmssIGVuY29kaW5nLCBjYikge1xuICBzdGF0ZS53cml0ZWxlbiA9IGxlbjtcbiAgc3RhdGUud3JpdGVjYiA9IGNiO1xuICBzdGF0ZS53cml0aW5nID0gdHJ1ZTtcbiAgc3RhdGUuc3luYyA9IHRydWU7XG4gIGlmICh3cml0ZXYpIHN0cmVhbS5fd3JpdGV2KGNodW5rLCBzdGF0ZS5vbndyaXRlKTtlbHNlIHN0cmVhbS5fd3JpdGUoY2h1bmssIGVuY29kaW5nLCBzdGF0ZS5vbndyaXRlKTtcbiAgc3RhdGUuc3luYyA9IGZhbHNlO1xufVxuXG5mdW5jdGlvbiBvbndyaXRlRXJyb3Ioc3RyZWFtLCBzdGF0ZSwgc3luYywgZXIsIGNiKSB7XG4gIC0tc3RhdGUucGVuZGluZ2NiO1xuXG4gIGlmIChzeW5jKSB7XG4gICAgLy8gZGVmZXIgdGhlIGNhbGxiYWNrIGlmIHdlIGFyZSBiZWluZyBjYWxsZWQgc3luY2hyb25vdXNseVxuICAgIC8vIHRvIGF2b2lkIHBpbGluZyB1cCB0aGluZ3Mgb24gdGhlIHN0YWNrXG4gICAgcG5hLm5leHRUaWNrKGNiLCBlcik7XG4gICAgLy8gdGhpcyBjYW4gZW1pdCBmaW5pc2gsIGFuZCBpdCB3aWxsIGFsd2F5cyBoYXBwZW5cbiAgICAvLyBhZnRlciBlcnJvclxuICAgIHBuYS5uZXh0VGljayhmaW5pc2hNYXliZSwgc3RyZWFtLCBzdGF0ZSk7XG4gICAgc3RyZWFtLl93cml0YWJsZVN0YXRlLmVycm9yRW1pdHRlZCA9IHRydWU7XG4gICAgc3RyZWFtLmVtaXQoJ2Vycm9yJywgZXIpO1xuICB9IGVsc2Uge1xuICAgIC8vIHRoZSBjYWxsZXIgZXhwZWN0IHRoaXMgdG8gaGFwcGVuIGJlZm9yZSBpZlxuICAgIC8vIGl0IGlzIGFzeW5jXG4gICAgY2IoZXIpO1xuICAgIHN0cmVhbS5fd3JpdGFibGVTdGF0ZS5lcnJvckVtaXR0ZWQgPSB0cnVlO1xuICAgIHN0cmVhbS5lbWl0KCdlcnJvcicsIGVyKTtcbiAgICAvLyB0aGlzIGNhbiBlbWl0IGZpbmlzaCwgYnV0IGZpbmlzaCBtdXN0XG4gICAgLy8gYWx3YXlzIGZvbGxvdyBlcnJvclxuICAgIGZpbmlzaE1heWJlKHN0cmVhbSwgc3RhdGUpO1xuICB9XG59XG5cbmZ1bmN0aW9uIG9ud3JpdGVTdGF0ZVVwZGF0ZShzdGF0ZSkge1xuICBzdGF0ZS53cml0aW5nID0gZmFsc2U7XG4gIHN0YXRlLndyaXRlY2IgPSBudWxsO1xuICBzdGF0ZS5sZW5ndGggLT0gc3RhdGUud3JpdGVsZW47XG4gIHN0YXRlLndyaXRlbGVuID0gMDtcbn1cblxuZnVuY3Rpb24gb253cml0ZShzdHJlYW0sIGVyKSB7XG4gIHZhciBzdGF0ZSA9IHN0cmVhbS5fd3JpdGFibGVTdGF0ZTtcbiAgdmFyIHN5bmMgPSBzdGF0ZS5zeW5jO1xuICB2YXIgY2IgPSBzdGF0ZS53cml0ZWNiO1xuXG4gIG9ud3JpdGVTdGF0ZVVwZGF0ZShzdGF0ZSk7XG5cbiAgaWYgKGVyKSBvbndyaXRlRXJyb3Ioc3RyZWFtLCBzdGF0ZSwgc3luYywgZXIsIGNiKTtlbHNlIHtcbiAgICAvLyBDaGVjayBpZiB3ZSdyZSBhY3R1YWxseSByZWFkeSB0byBmaW5pc2gsIGJ1dCBkb24ndCBlbWl0IHlldFxuICAgIHZhciBmaW5pc2hlZCA9IG5lZWRGaW5pc2goc3RhdGUpO1xuXG4gICAgaWYgKCFmaW5pc2hlZCAmJiAhc3RhdGUuY29ya2VkICYmICFzdGF0ZS5idWZmZXJQcm9jZXNzaW5nICYmIHN0YXRlLmJ1ZmZlcmVkUmVxdWVzdCkge1xuICAgICAgY2xlYXJCdWZmZXIoc3RyZWFtLCBzdGF0ZSk7XG4gICAgfVxuXG4gICAgaWYgKHN5bmMpIHtcbiAgICAgIC8qPHJlcGxhY2VtZW50PiovXG4gICAgICBhc3luY1dyaXRlKGFmdGVyV3JpdGUsIHN0cmVhbSwgc3RhdGUsIGZpbmlzaGVkLCBjYik7XG4gICAgICAvKjwvcmVwbGFjZW1lbnQ+Ki9cbiAgICB9IGVsc2Uge1xuICAgICAgYWZ0ZXJXcml0ZShzdHJlYW0sIHN0YXRlLCBmaW5pc2hlZCwgY2IpO1xuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiBhZnRlcldyaXRlKHN0cmVhbSwgc3RhdGUsIGZpbmlzaGVkLCBjYikge1xuICBpZiAoIWZpbmlzaGVkKSBvbndyaXRlRHJhaW4oc3RyZWFtLCBzdGF0ZSk7XG4gIHN0YXRlLnBlbmRpbmdjYi0tO1xuICBjYigpO1xuICBmaW5pc2hNYXliZShzdHJlYW0sIHN0YXRlKTtcbn1cblxuLy8gTXVzdCBmb3JjZSBjYWxsYmFjayB0byBiZSBjYWxsZWQgb24gbmV4dFRpY2ssIHNvIHRoYXQgd2UgZG9uJ3Rcbi8vIGVtaXQgJ2RyYWluJyBiZWZvcmUgdGhlIHdyaXRlKCkgY29uc3VtZXIgZ2V0cyB0aGUgJ2ZhbHNlJyByZXR1cm5cbi8vIHZhbHVlLCBhbmQgaGFzIGEgY2hhbmNlIHRvIGF0dGFjaCBhICdkcmFpbicgbGlzdGVuZXIuXG5mdW5jdGlvbiBvbndyaXRlRHJhaW4oc3RyZWFtLCBzdGF0ZSkge1xuICBpZiAoc3RhdGUubGVuZ3RoID09PSAwICYmIHN0YXRlLm5lZWREcmFpbikge1xuICAgIHN0YXRlLm5lZWREcmFpbiA9IGZhbHNlO1xuICAgIHN0cmVhbS5lbWl0KCdkcmFpbicpO1xuICB9XG59XG5cbi8vIGlmIHRoZXJlJ3Mgc29tZXRoaW5nIGluIHRoZSBidWZmZXIgd2FpdGluZywgdGhlbiBwcm9jZXNzIGl0XG5mdW5jdGlvbiBjbGVhckJ1ZmZlcihzdHJlYW0sIHN0YXRlKSB7XG4gIHN0YXRlLmJ1ZmZlclByb2Nlc3NpbmcgPSB0cnVlO1xuICB2YXIgZW50cnkgPSBzdGF0ZS5idWZmZXJlZFJlcXVlc3Q7XG5cbiAgaWYgKHN0cmVhbS5fd3JpdGV2ICYmIGVudHJ5ICYmIGVudHJ5Lm5leHQpIHtcbiAgICAvLyBGYXN0IGNhc2UsIHdyaXRlIGV2ZXJ5dGhpbmcgdXNpbmcgX3dyaXRldigpXG4gICAgdmFyIGwgPSBzdGF0ZS5idWZmZXJlZFJlcXVlc3RDb3VudDtcbiAgICB2YXIgYnVmZmVyID0gbmV3IEFycmF5KGwpO1xuICAgIHZhciBob2xkZXIgPSBzdGF0ZS5jb3JrZWRSZXF1ZXN0c0ZyZWU7XG4gICAgaG9sZGVyLmVudHJ5ID0gZW50cnk7XG5cbiAgICB2YXIgY291bnQgPSAwO1xuICAgIHZhciBhbGxCdWZmZXJzID0gdHJ1ZTtcbiAgICB3aGlsZSAoZW50cnkpIHtcbiAgICAgIGJ1ZmZlcltjb3VudF0gPSBlbnRyeTtcbiAgICAgIGlmICghZW50cnkuaXNCdWYpIGFsbEJ1ZmZlcnMgPSBmYWxzZTtcbiAgICAgIGVudHJ5ID0gZW50cnkubmV4dDtcbiAgICAgIGNvdW50ICs9IDE7XG4gICAgfVxuICAgIGJ1ZmZlci5hbGxCdWZmZXJzID0gYWxsQnVmZmVycztcblxuICAgIGRvV3JpdGUoc3RyZWFtLCBzdGF0ZSwgdHJ1ZSwgc3RhdGUubGVuZ3RoLCBidWZmZXIsICcnLCBob2xkZXIuZmluaXNoKTtcblxuICAgIC8vIGRvV3JpdGUgaXMgYWxtb3N0IGFsd2F5cyBhc3luYywgZGVmZXIgdGhlc2UgdG8gc2F2ZSBhIGJpdCBvZiB0aW1lXG4gICAgLy8gYXMgdGhlIGhvdCBwYXRoIGVuZHMgd2l0aCBkb1dyaXRlXG4gICAgc3RhdGUucGVuZGluZ2NiKys7XG4gICAgc3RhdGUubGFzdEJ1ZmZlcmVkUmVxdWVzdCA9IG51bGw7XG4gICAgaWYgKGhvbGRlci5uZXh0KSB7XG4gICAgICBzdGF0ZS5jb3JrZWRSZXF1ZXN0c0ZyZWUgPSBob2xkZXIubmV4dDtcbiAgICAgIGhvbGRlci5uZXh0ID0gbnVsbDtcbiAgICB9IGVsc2Uge1xuICAgICAgc3RhdGUuY29ya2VkUmVxdWVzdHNGcmVlID0gbmV3IENvcmtlZFJlcXVlc3Qoc3RhdGUpO1xuICAgIH1cbiAgICBzdGF0ZS5idWZmZXJlZFJlcXVlc3RDb3VudCA9IDA7XG4gIH0gZWxzZSB7XG4gICAgLy8gU2xvdyBjYXNlLCB3cml0ZSBjaHVua3Mgb25lLWJ5LW9uZVxuICAgIHdoaWxlIChlbnRyeSkge1xuICAgICAgdmFyIGNodW5rID0gZW50cnkuY2h1bms7XG4gICAgICB2YXIgZW5jb2RpbmcgPSBlbnRyeS5lbmNvZGluZztcbiAgICAgIHZhciBjYiA9IGVudHJ5LmNhbGxiYWNrO1xuICAgICAgdmFyIGxlbiA9IHN0YXRlLm9iamVjdE1vZGUgPyAxIDogY2h1bmsubGVuZ3RoO1xuXG4gICAgICBkb1dyaXRlKHN0cmVhbSwgc3RhdGUsIGZhbHNlLCBsZW4sIGNodW5rLCBlbmNvZGluZywgY2IpO1xuICAgICAgZW50cnkgPSBlbnRyeS5uZXh0O1xuICAgICAgc3RhdGUuYnVmZmVyZWRSZXF1ZXN0Q291bnQtLTtcbiAgICAgIC8vIGlmIHdlIGRpZG4ndCBjYWxsIHRoZSBvbndyaXRlIGltbWVkaWF0ZWx5LCB0aGVuXG4gICAgICAvLyBpdCBtZWFucyB0aGF0IHdlIG5lZWQgdG8gd2FpdCB1bnRpbCBpdCBkb2VzLlxuICAgICAgLy8gYWxzbywgdGhhdCBtZWFucyB0aGF0IHRoZSBjaHVuayBhbmQgY2IgYXJlIGN1cnJlbnRseVxuICAgICAgLy8gYmVpbmcgcHJvY2Vzc2VkLCBzbyBtb3ZlIHRoZSBidWZmZXIgY291bnRlciBwYXN0IHRoZW0uXG4gICAgICBpZiAoc3RhdGUud3JpdGluZykge1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAoZW50cnkgPT09IG51bGwpIHN0YXRlLmxhc3RCdWZmZXJlZFJlcXVlc3QgPSBudWxsO1xuICB9XG5cbiAgc3RhdGUuYnVmZmVyZWRSZXF1ZXN0ID0gZW50cnk7XG4gIHN0YXRlLmJ1ZmZlclByb2Nlc3NpbmcgPSBmYWxzZTtcbn1cblxuV3JpdGFibGUucHJvdG90eXBlLl93cml0ZSA9IGZ1bmN0aW9uIChjaHVuaywgZW5jb2RpbmcsIGNiKSB7XG4gIGNiKG5ldyBFcnJvcignX3dyaXRlKCkgaXMgbm90IGltcGxlbWVudGVkJykpO1xufTtcblxuV3JpdGFibGUucHJvdG90eXBlLl93cml0ZXYgPSBudWxsO1xuXG5Xcml0YWJsZS5wcm90b3R5cGUuZW5kID0gZnVuY3Rpb24gKGNodW5rLCBlbmNvZGluZywgY2IpIHtcbiAgdmFyIHN0YXRlID0gdGhpcy5fd3JpdGFibGVTdGF0ZTtcblxuICBpZiAodHlwZW9mIGNodW5rID09PSAnZnVuY3Rpb24nKSB7XG4gICAgY2IgPSBjaHVuaztcbiAgICBjaHVuayA9IG51bGw7XG4gICAgZW5jb2RpbmcgPSBudWxsO1xuICB9IGVsc2UgaWYgKHR5cGVvZiBlbmNvZGluZyA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIGNiID0gZW5jb2Rpbmc7XG4gICAgZW5jb2RpbmcgPSBudWxsO1xuICB9XG5cbiAgaWYgKGNodW5rICE9PSBudWxsICYmIGNodW5rICE9PSB1bmRlZmluZWQpIHRoaXMud3JpdGUoY2h1bmssIGVuY29kaW5nKTtcblxuICAvLyAuZW5kKCkgZnVsbHkgdW5jb3Jrc1xuICBpZiAoc3RhdGUuY29ya2VkKSB7XG4gICAgc3RhdGUuY29ya2VkID0gMTtcbiAgICB0aGlzLnVuY29yaygpO1xuICB9XG5cbiAgLy8gaWdub3JlIHVubmVjZXNzYXJ5IGVuZCgpIGNhbGxzLlxuICBpZiAoIXN0YXRlLmVuZGluZyAmJiAhc3RhdGUuZmluaXNoZWQpIGVuZFdyaXRhYmxlKHRoaXMsIHN0YXRlLCBjYik7XG59O1xuXG5mdW5jdGlvbiBuZWVkRmluaXNoKHN0YXRlKSB7XG4gIHJldHVybiBzdGF0ZS5lbmRpbmcgJiYgc3RhdGUubGVuZ3RoID09PSAwICYmIHN0YXRlLmJ1ZmZlcmVkUmVxdWVzdCA9PT0gbnVsbCAmJiAhc3RhdGUuZmluaXNoZWQgJiYgIXN0YXRlLndyaXRpbmc7XG59XG5mdW5jdGlvbiBjYWxsRmluYWwoc3RyZWFtLCBzdGF0ZSkge1xuICBzdHJlYW0uX2ZpbmFsKGZ1bmN0aW9uIChlcnIpIHtcbiAgICBzdGF0ZS5wZW5kaW5nY2ItLTtcbiAgICBpZiAoZXJyKSB7XG4gICAgICBzdHJlYW0uZW1pdCgnZXJyb3InLCBlcnIpO1xuICAgIH1cbiAgICBzdGF0ZS5wcmVmaW5pc2hlZCA9IHRydWU7XG4gICAgc3RyZWFtLmVtaXQoJ3ByZWZpbmlzaCcpO1xuICAgIGZpbmlzaE1heWJlKHN0cmVhbSwgc3RhdGUpO1xuICB9KTtcbn1cbmZ1bmN0aW9uIHByZWZpbmlzaChzdHJlYW0sIHN0YXRlKSB7XG4gIGlmICghc3RhdGUucHJlZmluaXNoZWQgJiYgIXN0YXRlLmZpbmFsQ2FsbGVkKSB7XG4gICAgaWYgKHR5cGVvZiBzdHJlYW0uX2ZpbmFsID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICBzdGF0ZS5wZW5kaW5nY2IrKztcbiAgICAgIHN0YXRlLmZpbmFsQ2FsbGVkID0gdHJ1ZTtcbiAgICAgIHBuYS5uZXh0VGljayhjYWxsRmluYWwsIHN0cmVhbSwgc3RhdGUpO1xuICAgIH0gZWxzZSB7XG4gICAgICBzdGF0ZS5wcmVmaW5pc2hlZCA9IHRydWU7XG4gICAgICBzdHJlYW0uZW1pdCgncHJlZmluaXNoJyk7XG4gICAgfVxuICB9XG59XG5cbmZ1bmN0aW9uIGZpbmlzaE1heWJlKHN0cmVhbSwgc3RhdGUpIHtcbiAgdmFyIG5lZWQgPSBuZWVkRmluaXNoKHN0YXRlKTtcbiAgaWYgKG5lZWQpIHtcbiAgICBwcmVmaW5pc2goc3RyZWFtLCBzdGF0ZSk7XG4gICAgaWYgKHN0YXRlLnBlbmRpbmdjYiA9PT0gMCkge1xuICAgICAgc3RhdGUuZmluaXNoZWQgPSB0cnVlO1xuICAgICAgc3RyZWFtLmVtaXQoJ2ZpbmlzaCcpO1xuICAgIH1cbiAgfVxuICByZXR1cm4gbmVlZDtcbn1cblxuZnVuY3Rpb24gZW5kV3JpdGFibGUoc3RyZWFtLCBzdGF0ZSwgY2IpIHtcbiAgc3RhdGUuZW5kaW5nID0gdHJ1ZTtcbiAgZmluaXNoTWF5YmUoc3RyZWFtLCBzdGF0ZSk7XG4gIGlmIChjYikge1xuICAgIGlmIChzdGF0ZS5maW5pc2hlZCkgcG5hLm5leHRUaWNrKGNiKTtlbHNlIHN0cmVhbS5vbmNlKCdmaW5pc2gnLCBjYik7XG4gIH1cbiAgc3RhdGUuZW5kZWQgPSB0cnVlO1xuICBzdHJlYW0ud3JpdGFibGUgPSBmYWxzZTtcbn1cblxuZnVuY3Rpb24gb25Db3JrZWRGaW5pc2goY29ya1JlcSwgc3RhdGUsIGVycikge1xuICB2YXIgZW50cnkgPSBjb3JrUmVxLmVudHJ5O1xuICBjb3JrUmVxLmVudHJ5ID0gbnVsbDtcbiAgd2hpbGUgKGVudHJ5KSB7XG4gICAgdmFyIGNiID0gZW50cnkuY2FsbGJhY2s7XG4gICAgc3RhdGUucGVuZGluZ2NiLS07XG4gICAgY2IoZXJyKTtcbiAgICBlbnRyeSA9IGVudHJ5Lm5leHQ7XG4gIH1cbiAgaWYgKHN0YXRlLmNvcmtlZFJlcXVlc3RzRnJlZSkge1xuICAgIHN0YXRlLmNvcmtlZFJlcXVlc3RzRnJlZS5uZXh0ID0gY29ya1JlcTtcbiAgfSBlbHNlIHtcbiAgICBzdGF0ZS5jb3JrZWRSZXF1ZXN0c0ZyZWUgPSBjb3JrUmVxO1xuICB9XG59XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShXcml0YWJsZS5wcm90b3R5cGUsICdkZXN0cm95ZWQnLCB7XG4gIGdldDogZnVuY3Rpb24gKCkge1xuICAgIGlmICh0aGlzLl93cml0YWJsZVN0YXRlID09PSB1bmRlZmluZWQpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgcmV0dXJuIHRoaXMuX3dyaXRhYmxlU3RhdGUuZGVzdHJveWVkO1xuICB9LFxuICBzZXQ6IGZ1bmN0aW9uICh2YWx1ZSkge1xuICAgIC8vIHdlIGlnbm9yZSB0aGUgdmFsdWUgaWYgdGhlIHN0cmVhbVxuICAgIC8vIGhhcyBub3QgYmVlbiBpbml0aWFsaXplZCB5ZXRcbiAgICBpZiAoIXRoaXMuX3dyaXRhYmxlU3RhdGUpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICAvLyBiYWNrd2FyZCBjb21wYXRpYmlsaXR5LCB0aGUgdXNlciBpcyBleHBsaWNpdGx5XG4gICAgLy8gbWFuYWdpbmcgZGVzdHJveWVkXG4gICAgdGhpcy5fd3JpdGFibGVTdGF0ZS5kZXN0cm95ZWQgPSB2YWx1ZTtcbiAgfVxufSk7XG5cbldyaXRhYmxlLnByb3RvdHlwZS5kZXN0cm95ID0gZGVzdHJveUltcGwuZGVzdHJveTtcbldyaXRhYmxlLnByb3RvdHlwZS5fdW5kZXN0cm95ID0gZGVzdHJveUltcGwudW5kZXN0cm95O1xuV3JpdGFibGUucHJvdG90eXBlLl9kZXN0cm95ID0gZnVuY3Rpb24gKGVyciwgY2IpIHtcbiAgdGhpcy5lbmQoKTtcbiAgY2IoZXJyKTtcbn07Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/readable-stream/lib/_stream_writable.js\n");

/***/ }),

/***/ "./node_modules/readable-stream/lib/internal/streams/BufferList.js":
/*!*************************************************************************!*\
  !*** ./node_modules/readable-stream/lib/internal/streams/BufferList.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"./node_modules/safe-buffer/index.js\").Buffer;\nvar util = __webpack_require__(/*! util */ 1);\n\nfunction copyBuffer(src, target, offset) {\n  src.copy(target, offset);\n}\n\nmodule.exports = function () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  BufferList.prototype.push = function push(v) {\n    var entry = { data: v, next: null };\n    if (this.length > 0) this.tail.next = entry;else this.head = entry;\n    this.tail = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.unshift = function unshift(v) {\n    var entry = { data: v, next: this.head };\n    if (this.length === 0) this.tail = entry;\n    this.head = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.shift = function shift() {\n    if (this.length === 0) return;\n    var ret = this.head.data;\n    if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n    --this.length;\n    return ret;\n  };\n\n  BufferList.prototype.clear = function clear() {\n    this.head = this.tail = null;\n    this.length = 0;\n  };\n\n  BufferList.prototype.join = function join(s) {\n    if (this.length === 0) return '';\n    var p = this.head;\n    var ret = '' + p.data;\n    while (p = p.next) {\n      ret += s + p.data;\n    }return ret;\n  };\n\n  BufferList.prototype.concat = function concat(n) {\n    if (this.length === 0) return Buffer.alloc(0);\n    if (this.length === 1) return this.head.data;\n    var ret = Buffer.allocUnsafe(n >>> 0);\n    var p = this.head;\n    var i = 0;\n    while (p) {\n      copyBuffer(p.data, ret, i);\n      i += p.data.length;\n      p = p.next;\n    }\n    return ret;\n  };\n\n  return BufferList;\n}();\n\nif (util && util.inspect && util.inspect.custom) {\n  module.exports.prototype[util.inspect.custom] = function () {\n    var obj = util.inspect({ length: this.length });\n    return this.constructor.name + ' ' + obj;\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhZGFibGUtc3RyZWFtL2xpYi9pbnRlcm5hbC9zdHJlYW1zL0J1ZmZlckxpc3QuanM/NWUxYSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixpREFBaUQsMENBQTBDLDBEQUEwRCxFQUFFOztBQUV2SixhQUFhLG1CQUFPLENBQUMsd0RBQWE7QUFDbEMsV0FBVyxtQkFBTyxDQUFDLGFBQU07O0FBRXpCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxpQkFBaUI7QUFDakIsZ0RBQWdEO0FBQ2hEO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSx3REFBd0Q7QUFDeEQ7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBLDRCQUE0QixzQkFBc0I7QUFDbEQ7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL3JlYWRhYmxlLXN0cmVhbS9saWIvaW50ZXJuYWwvc3RyZWFtcy9CdWZmZXJMaXN0LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG52YXIgQnVmZmVyID0gcmVxdWlyZSgnc2FmZS1idWZmZXInKS5CdWZmZXI7XG52YXIgdXRpbCA9IHJlcXVpcmUoJ3V0aWwnKTtcblxuZnVuY3Rpb24gY29weUJ1ZmZlcihzcmMsIHRhcmdldCwgb2Zmc2V0KSB7XG4gIHNyYy5jb3B5KHRhcmdldCwgb2Zmc2V0KTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoKSB7XG4gIGZ1bmN0aW9uIEJ1ZmZlckxpc3QoKSB7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIEJ1ZmZlckxpc3QpO1xuXG4gICAgdGhpcy5oZWFkID0gbnVsbDtcbiAgICB0aGlzLnRhaWwgPSBudWxsO1xuICAgIHRoaXMubGVuZ3RoID0gMDtcbiAgfVxuXG4gIEJ1ZmZlckxpc3QucHJvdG90eXBlLnB1c2ggPSBmdW5jdGlvbiBwdXNoKHYpIHtcbiAgICB2YXIgZW50cnkgPSB7IGRhdGE6IHYsIG5leHQ6IG51bGwgfTtcbiAgICBpZiAodGhpcy5sZW5ndGggPiAwKSB0aGlzLnRhaWwubmV4dCA9IGVudHJ5O2Vsc2UgdGhpcy5oZWFkID0gZW50cnk7XG4gICAgdGhpcy50YWlsID0gZW50cnk7XG4gICAgKyt0aGlzLmxlbmd0aDtcbiAgfTtcblxuICBCdWZmZXJMaXN0LnByb3RvdHlwZS51bnNoaWZ0ID0gZnVuY3Rpb24gdW5zaGlmdCh2KSB7XG4gICAgdmFyIGVudHJ5ID0geyBkYXRhOiB2LCBuZXh0OiB0aGlzLmhlYWQgfTtcbiAgICBpZiAodGhpcy5sZW5ndGggPT09IDApIHRoaXMudGFpbCA9IGVudHJ5O1xuICAgIHRoaXMuaGVhZCA9IGVudHJ5O1xuICAgICsrdGhpcy5sZW5ndGg7XG4gIH07XG5cbiAgQnVmZmVyTGlzdC5wcm90b3R5cGUuc2hpZnQgPSBmdW5jdGlvbiBzaGlmdCgpIHtcbiAgICBpZiAodGhpcy5sZW5ndGggPT09IDApIHJldHVybjtcbiAgICB2YXIgcmV0ID0gdGhpcy5oZWFkLmRhdGE7XG4gICAgaWYgKHRoaXMubGVuZ3RoID09PSAxKSB0aGlzLmhlYWQgPSB0aGlzLnRhaWwgPSBudWxsO2Vsc2UgdGhpcy5oZWFkID0gdGhpcy5oZWFkLm5leHQ7XG4gICAgLS10aGlzLmxlbmd0aDtcbiAgICByZXR1cm4gcmV0O1xuICB9O1xuXG4gIEJ1ZmZlckxpc3QucHJvdG90eXBlLmNsZWFyID0gZnVuY3Rpb24gY2xlYXIoKSB7XG4gICAgdGhpcy5oZWFkID0gdGhpcy50YWlsID0gbnVsbDtcbiAgICB0aGlzLmxlbmd0aCA9IDA7XG4gIH07XG5cbiAgQnVmZmVyTGlzdC5wcm90b3R5cGUuam9pbiA9IGZ1bmN0aW9uIGpvaW4ocykge1xuICAgIGlmICh0aGlzLmxlbmd0aCA9PT0gMCkgcmV0dXJuICcnO1xuICAgIHZhciBwID0gdGhpcy5oZWFkO1xuICAgIHZhciByZXQgPSAnJyArIHAuZGF0YTtcbiAgICB3aGlsZSAocCA9IHAubmV4dCkge1xuICAgICAgcmV0ICs9IHMgKyBwLmRhdGE7XG4gICAgfXJldHVybiByZXQ7XG4gIH07XG5cbiAgQnVmZmVyTGlzdC5wcm90b3R5cGUuY29uY2F0ID0gZnVuY3Rpb24gY29uY2F0KG4pIHtcbiAgICBpZiAodGhpcy5sZW5ndGggPT09IDApIHJldHVybiBCdWZmZXIuYWxsb2MoMCk7XG4gICAgaWYgKHRoaXMubGVuZ3RoID09PSAxKSByZXR1cm4gdGhpcy5oZWFkLmRhdGE7XG4gICAgdmFyIHJldCA9IEJ1ZmZlci5hbGxvY1Vuc2FmZShuID4+PiAwKTtcbiAgICB2YXIgcCA9IHRoaXMuaGVhZDtcbiAgICB2YXIgaSA9IDA7XG4gICAgd2hpbGUgKHApIHtcbiAgICAgIGNvcHlCdWZmZXIocC5kYXRhLCByZXQsIGkpO1xuICAgICAgaSArPSBwLmRhdGEubGVuZ3RoO1xuICAgICAgcCA9IHAubmV4dDtcbiAgICB9XG4gICAgcmV0dXJuIHJldDtcbiAgfTtcblxuICByZXR1cm4gQnVmZmVyTGlzdDtcbn0oKTtcblxuaWYgKHV0aWwgJiYgdXRpbC5pbnNwZWN0ICYmIHV0aWwuaW5zcGVjdC5jdXN0b20pIHtcbiAgbW9kdWxlLmV4cG9ydHMucHJvdG90eXBlW3V0aWwuaW5zcGVjdC5jdXN0b21dID0gZnVuY3Rpb24gKCkge1xuICAgIHZhciBvYmogPSB1dGlsLmluc3BlY3QoeyBsZW5ndGg6IHRoaXMubGVuZ3RoIH0pO1xuICAgIHJldHVybiB0aGlzLmNvbnN0cnVjdG9yLm5hbWUgKyAnICcgKyBvYmo7XG4gIH07XG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/readable-stream/lib/internal/streams/BufferList.js\n");

/***/ }),

/***/ "./node_modules/readable-stream/lib/internal/streams/destroy.js":
/*!**********************************************************************!*\
  !*** ./node_modules/readable-stream/lib/internal/streams/destroy.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/*<replacement>*/\n\nvar pna = __webpack_require__(/*! process-nextick-args */ \"./node_modules/process-nextick-args/index.js\");\n/*</replacement>*/\n\n// undocumented cb() API, needed for core, not for public API\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err && (!this._writableState || !this._writableState.errorEmitted)) {\n      pna.nextTick(emitErrorNT, this, err);\n    }\n    return this;\n  }\n\n  // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  }\n\n  // if this is a duplex stream mark the writable part as destroyed as well\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      pna.nextTick(emitErrorNT, _this, err);\n      if (_this._writableState) {\n        _this._writableState.errorEmitted = true;\n      }\n    } else if (cb) {\n      cb(err);\n    }\n  });\n\n  return this;\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhZGFibGUtc3RyZWFtL2xpYi9pbnRlcm5hbC9zdHJlYW1zL2Rlc3Ryb3kuanM/NDY4MSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjs7QUFFQSxVQUFVLG1CQUFPLENBQUMsMEVBQXNCO0FBQ3hDOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9yZWFkYWJsZS1zdHJlYW0vbGliL2ludGVybmFsL3N0cmVhbXMvZGVzdHJveS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuLyo8cmVwbGFjZW1lbnQ+Ki9cblxudmFyIHBuYSA9IHJlcXVpcmUoJ3Byb2Nlc3MtbmV4dGljay1hcmdzJyk7XG4vKjwvcmVwbGFjZW1lbnQ+Ki9cblxuLy8gdW5kb2N1bWVudGVkIGNiKCkgQVBJLCBuZWVkZWQgZm9yIGNvcmUsIG5vdCBmb3IgcHVibGljIEFQSVxuZnVuY3Rpb24gZGVzdHJveShlcnIsIGNiKSB7XG4gIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgdmFyIHJlYWRhYmxlRGVzdHJveWVkID0gdGhpcy5fcmVhZGFibGVTdGF0ZSAmJiB0aGlzLl9yZWFkYWJsZVN0YXRlLmRlc3Ryb3llZDtcbiAgdmFyIHdyaXRhYmxlRGVzdHJveWVkID0gdGhpcy5fd3JpdGFibGVTdGF0ZSAmJiB0aGlzLl93cml0YWJsZVN0YXRlLmRlc3Ryb3llZDtcblxuICBpZiAocmVhZGFibGVEZXN0cm95ZWQgfHwgd3JpdGFibGVEZXN0cm95ZWQpIHtcbiAgICBpZiAoY2IpIHtcbiAgICAgIGNiKGVycik7XG4gICAgfSBlbHNlIGlmIChlcnIgJiYgKCF0aGlzLl93cml0YWJsZVN0YXRlIHx8ICF0aGlzLl93cml0YWJsZVN0YXRlLmVycm9yRW1pdHRlZCkpIHtcbiAgICAgIHBuYS5uZXh0VGljayhlbWl0RXJyb3JOVCwgdGhpcywgZXJyKTtcbiAgICB9XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICAvLyB3ZSBzZXQgZGVzdHJveWVkIHRvIHRydWUgYmVmb3JlIGZpcmluZyBlcnJvciBjYWxsYmFja3MgaW4gb3JkZXJcbiAgLy8gdG8gbWFrZSBpdCByZS1lbnRyYW5jZSBzYWZlIGluIGNhc2UgZGVzdHJveSgpIGlzIGNhbGxlZCB3aXRoaW4gY2FsbGJhY2tzXG5cbiAgaWYgKHRoaXMuX3JlYWRhYmxlU3RhdGUpIHtcbiAgICB0aGlzLl9yZWFkYWJsZVN0YXRlLmRlc3Ryb3llZCA9IHRydWU7XG4gIH1cblxuICAvLyBpZiB0aGlzIGlzIGEgZHVwbGV4IHN0cmVhbSBtYXJrIHRoZSB3cml0YWJsZSBwYXJ0IGFzIGRlc3Ryb3llZCBhcyB3ZWxsXG4gIGlmICh0aGlzLl93cml0YWJsZVN0YXRlKSB7XG4gICAgdGhpcy5fd3JpdGFibGVTdGF0ZS5kZXN0cm95ZWQgPSB0cnVlO1xuICB9XG5cbiAgdGhpcy5fZGVzdHJveShlcnIgfHwgbnVsbCwgZnVuY3Rpb24gKGVycikge1xuICAgIGlmICghY2IgJiYgZXJyKSB7XG4gICAgICBwbmEubmV4dFRpY2soZW1pdEVycm9yTlQsIF90aGlzLCBlcnIpO1xuICAgICAgaWYgKF90aGlzLl93cml0YWJsZVN0YXRlKSB7XG4gICAgICAgIF90aGlzLl93cml0YWJsZVN0YXRlLmVycm9yRW1pdHRlZCA9IHRydWU7XG4gICAgICB9XG4gICAgfSBlbHNlIGlmIChjYikge1xuICAgICAgY2IoZXJyKTtcbiAgICB9XG4gIH0pO1xuXG4gIHJldHVybiB0aGlzO1xufVxuXG5mdW5jdGlvbiB1bmRlc3Ryb3koKSB7XG4gIGlmICh0aGlzLl9yZWFkYWJsZVN0YXRlKSB7XG4gICAgdGhpcy5fcmVhZGFibGVTdGF0ZS5kZXN0cm95ZWQgPSBmYWxzZTtcbiAgICB0aGlzLl9yZWFkYWJsZVN0YXRlLnJlYWRpbmcgPSBmYWxzZTtcbiAgICB0aGlzLl9yZWFkYWJsZVN0YXRlLmVuZGVkID0gZmFsc2U7XG4gICAgdGhpcy5fcmVhZGFibGVTdGF0ZS5lbmRFbWl0dGVkID0gZmFsc2U7XG4gIH1cblxuICBpZiAodGhpcy5fd3JpdGFibGVTdGF0ZSkge1xuICAgIHRoaXMuX3dyaXRhYmxlU3RhdGUuZGVzdHJveWVkID0gZmFsc2U7XG4gICAgdGhpcy5fd3JpdGFibGVTdGF0ZS5lbmRlZCA9IGZhbHNlO1xuICAgIHRoaXMuX3dyaXRhYmxlU3RhdGUuZW5kaW5nID0gZmFsc2U7XG4gICAgdGhpcy5fd3JpdGFibGVTdGF0ZS5maW5pc2hlZCA9IGZhbHNlO1xuICAgIHRoaXMuX3dyaXRhYmxlU3RhdGUuZXJyb3JFbWl0dGVkID0gZmFsc2U7XG4gIH1cbn1cblxuZnVuY3Rpb24gZW1pdEVycm9yTlQoc2VsZiwgZXJyKSB7XG4gIHNlbGYuZW1pdCgnZXJyb3InLCBlcnIpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgZGVzdHJveTogZGVzdHJveSxcbiAgdW5kZXN0cm95OiB1bmRlc3Ryb3lcbn07Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/readable-stream/lib/internal/streams/destroy.js\n");

/***/ }),

/***/ "./node_modules/readable-stream/lib/internal/streams/stream-browser.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/readable-stream/lib/internal/streams/stream-browser.js ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! events */ \"./node_modules/node-libs-browser/node_modules/events/events.js\").EventEmitter;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhZGFibGUtc3RyZWFtL2xpYi9pbnRlcm5hbC9zdHJlYW1zL3N0cmVhbS1icm93c2VyLmpzPzQyOWIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsaUJBQWlCLG1CQUFPLENBQUMsOEVBQVEiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhZGFibGUtc3RyZWFtL2xpYi9pbnRlcm5hbC9zdHJlYW1zL3N0cmVhbS1icm93c2VyLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCdldmVudHMnKS5FdmVudEVtaXR0ZXI7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/readable-stream/lib/internal/streams/stream-browser.js\n");

/***/ }),

/***/ "./node_modules/readable-stream/passthrough.js":
/*!*****************************************************!*\
  !*** ./node_modules/readable-stream/passthrough.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! ./readable */ \"./node_modules/readable-stream/readable-browser.js\").PassThrough\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhZGFibGUtc3RyZWFtL3Bhc3N0aHJvdWdoLmpzP2MyYWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsaUJBQWlCLG1CQUFPLENBQUMsc0VBQVkiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhZGFibGUtc3RyZWFtL3Bhc3N0aHJvdWdoLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL3JlYWRhYmxlJykuUGFzc1Rocm91Z2hcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/readable-stream/passthrough.js\n");

/***/ }),

/***/ "./node_modules/readable-stream/readable-browser.js":
/*!**********************************************************!*\
  !*** ./node_modules/readable-stream/readable-browser.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("exports = module.exports = __webpack_require__(/*! ./lib/_stream_readable.js */ \"./node_modules/readable-stream/lib/_stream_readable.js\");\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = __webpack_require__(/*! ./lib/_stream_writable.js */ \"./node_modules/readable-stream/lib/_stream_writable.js\");\nexports.Duplex = __webpack_require__(/*! ./lib/_stream_duplex.js */ \"./node_modules/readable-stream/lib/_stream_duplex.js\");\nexports.Transform = __webpack_require__(/*! ./lib/_stream_transform.js */ \"./node_modules/readable-stream/lib/_stream_transform.js\");\nexports.PassThrough = __webpack_require__(/*! ./lib/_stream_passthrough.js */ \"./node_modules/readable-stream/lib/_stream_passthrough.js\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhZGFibGUtc3RyZWFtL3JlYWRhYmxlLWJyb3dzZXIuanM/ZTM3MiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSwyQkFBMkIsbUJBQU8sQ0FBQyx5RkFBMkI7QUFDOUQ7QUFDQTtBQUNBLG1CQUFtQixtQkFBTyxDQUFDLHlGQUEyQjtBQUN0RCxpQkFBaUIsbUJBQU8sQ0FBQyxxRkFBeUI7QUFDbEQsb0JBQW9CLG1CQUFPLENBQUMsMkZBQTRCO0FBQ3hELHNCQUFzQixtQkFBTyxDQUFDLCtGQUE4QiIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9yZWFkYWJsZS1zdHJlYW0vcmVhZGFibGUtYnJvd3Nlci5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vbGliL19zdHJlYW1fcmVhZGFibGUuanMnKTtcbmV4cG9ydHMuU3RyZWFtID0gZXhwb3J0cztcbmV4cG9ydHMuUmVhZGFibGUgPSBleHBvcnRzO1xuZXhwb3J0cy5Xcml0YWJsZSA9IHJlcXVpcmUoJy4vbGliL19zdHJlYW1fd3JpdGFibGUuanMnKTtcbmV4cG9ydHMuRHVwbGV4ID0gcmVxdWlyZSgnLi9saWIvX3N0cmVhbV9kdXBsZXguanMnKTtcbmV4cG9ydHMuVHJhbnNmb3JtID0gcmVxdWlyZSgnLi9saWIvX3N0cmVhbV90cmFuc2Zvcm0uanMnKTtcbmV4cG9ydHMuUGFzc1Rocm91Z2ggPSByZXF1aXJlKCcuL2xpYi9fc3RyZWFtX3Bhc3N0aHJvdWdoLmpzJyk7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/readable-stream/readable-browser.js\n");

/***/ }),

/***/ "./node_modules/readable-stream/transform.js":
/*!***************************************************!*\
  !*** ./node_modules/readable-stream/transform.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! ./readable */ \"./node_modules/readable-stream/readable-browser.js\").Transform\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhZGFibGUtc3RyZWFtL3RyYW5zZm9ybS5qcz9kMTdiIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGlCQUFpQixtQkFBTyxDQUFDLHNFQUFZIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL3JlYWRhYmxlLXN0cmVhbS90cmFuc2Zvcm0uanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vcmVhZGFibGUnKS5UcmFuc2Zvcm1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/readable-stream/transform.js\n");

/***/ }),

/***/ "./node_modules/readable-stream/writable-browser.js":
/*!**********************************************************!*\
  !*** ./node_modules/readable-stream/writable-browser.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! ./lib/_stream_writable.js */ \"./node_modules/readable-stream/lib/_stream_writable.js\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhZGFibGUtc3RyZWFtL3dyaXRhYmxlLWJyb3dzZXIuanM/MmM2MyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxpQkFBaUIsbUJBQU8sQ0FBQyx5RkFBMkIiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhZGFibGUtc3RyZWFtL3dyaXRhYmxlLWJyb3dzZXIuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vbGliL19zdHJlYW1fd3JpdGFibGUuanMnKTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/readable-stream/writable-browser.js\n");

/***/ }),

/***/ "./node_modules/reality-space/lib/src/common/reality/ClusterClient.js":
/*!****************************************************************************!*\
  !*** ./node_modules/reality-space/lib/src/common/reality/ClusterClient.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Configuration_1 = __webpack_require__(/*! ./Configuration */ \"./node_modules/reality-space/lib/src/common/reality/Configuration.js\");\nconst RealityClient_1 = __webpack_require__(/*! ./RealityClient */ \"./node_modules/reality-space/lib/src/common/reality/RealityClient.js\");\nconst Encode_1 = __webpack_require__(/*! ./Encode */ \"./node_modules/reality-space/lib/src/common/reality/Encode.js\");\nconst StorageClient_1 = __webpack_require__(/*! ./StorageClient */ \"./node_modules/reality-space/lib/src/common/reality/StorageClient.js\");\nclass ClusterClient {\n    constructor(clusterConfigurationUrl, spaceName, avatarId, x, y, z, rx, ry, rz, rw, avatarDescription, idToken) {\n        this.primaryRegion = undefined;\n        this.clients = new Map();\n        this.homeStorageClient = undefined;\n        this.newWebSocket = (url, protocol) => { return new WebSocket(url, protocol); };\n        this.onConnect = (region) => { };\n        this.onConnectError = (region, error) => { };\n        this.onDisconnect = (region) => { };\n        this.onReceive = (region, type, message) => { };\n        this.onStoredRootEntityReceived = (region, sid, entityXml) => { };\n        this.onStoredChildEntityReceived = (region, parentSid, sid, entityXml) => { };\n        this.onStoredEntityRemoved = (region, sid) => { };\n        this.onLoaded = (region) => { };\n        this.clusterConfigurationUrl = clusterConfigurationUrl;\n        this.spaceName = spaceName;\n        this.idToken = idToken;\n        this.avatarId = avatarId;\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        this.rx = rx;\n        this.ry = ry;\n        this.rz = rz;\n        this.rw = rw;\n        this.avatarDescription = avatarDescription;\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Close outdated clients.\n            this.clients.forEach(client => {\n                client.close();\n            });\n            this.clients.clear();\n            this.clusterConfiguration = yield Configuration_1.getClusterConfiguration(this.clusterConfigurationUrl);\n            console.log(\"cluster client - connect: \" + this.clusterConfigurationUrl);\n            const defaultSpace = \"default\";\n            const defaultRegion = this.getRegion(0, 0, 0);\n            const defaultRegionConfiguration = this.getRegionConfiguration(defaultRegion);\n            this.homeStorageClient = new StorageClient_1.StorageClient(defaultSpace, defaultRegion, defaultRegionConfiguration.storageUrl, defaultRegionConfiguration.cdnUrl, this.idToken);\n            yield this.refresh(this.x, this.y, this.z, this.rx, this.ry, this.rz, this.rw);\n        });\n    }\n    close() {\n        console.log(\"cluster client - closing.\");\n        this.clients.forEach(client => {\n            this.closeClient(client);\n        });\n        this.clients.clear();\n    }\n    getHomeStorage() {\n        if (this.homeStorageClient) {\n            return this.homeStorageClient;\n        }\n        throw new Error(\"Home storage client not instantiated. Connect() not invoked or error occurred.\");\n    }\n    getRegionStorageByCoordinate(x, y, z) {\n        const region = this.getRegion(x, y, z);\n        if (region) {\n            return this.getRegionStorage(region);\n        }\n        else {\n            return undefined;\n        }\n    }\n    getRegionStorage(region) {\n        if (this.clients.has(region)) {\n            return this.clients.get(region).storageClient;\n        }\n        else {\n            return undefined;\n        }\n    }\n    refresh(x, y, z, rx, ry, rz, rw) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.clusterConfiguration) {\n                return;\n            }\n            this.x = x;\n            this.y = y;\n            this.z = z;\n            this.rx = rx;\n            this.ry = ry;\n            this.rz = rz;\n            this.rw = rw;\n            const regions = this.getRegions(x, y, z);\n            if (regions.length === 0) {\n                this.primaryRegion = undefined;\n            }\n            else {\n                if (this.primaryRegion !== regions[0].region) {\n                    if (this.primaryRegion && this.clients.has(this.primaryRegion)) {\n                        console.log(\"cluster client - switching primary region...\");\n                        //this.closeClient(this.clients.get(this.primaryRegion)!!)\n                        yield this.clients.get(this.primaryRegion).remove(this.avatarId);\n                        yield this.clients.get(this.primaryRegion).add(this.avatarId, x, y, z, rx, ry, rz, rw, this.avatarDescription, Encode_1.Encode.PROBE);\n                        console.log(\"cluster client - switched old primary region avatar to probe: \" + this.primaryRegion);\n                    }\n                    if (this.clients.has(regions[0].region)) {\n                        //this.closeClient(this.clients.get(regions[0].region)!!)\n                        yield this.clients.get(regions[0].region).remove(this.avatarId);\n                        yield this.clients.get(regions[0].region).add(this.avatarId, x, y, z, rx, ry, rz, rw, this.avatarDescription, Encode_1.Encode.AVATAR);\n                        console.log(\"cluster client - switched new primary region avatar from probe to avatar: \" + regions[0].region);\n                    }\n                    this.primaryRegion = regions[0].region;\n                    console.log(\"cluster client - new primary region set to: \" + regions[0].region);\n                }\n            }\n            for (let region of regions) {\n                if (!this.clients.has(region.region)) {\n                    let client = new RealityClient_1.RealityClient(this.spaceName, region.region, region.processorUrl, region.storageUrl, region.cdnUrl, this.idToken);\n                    this.clients.set(region.region, client);\n                    client.newWebSocket = this.newWebSocket;\n                    client.onClose = () => {\n                        console.log('cluster client - region disconnected: ' + client.region);\n                        if (this.primaryRegion === client.region) {\n                            this.onDisconnect(client.region);\n                        }\n                        if (this.clients.get(region.region) === client) {\n                            this.clients.delete(region.region);\n                        }\n                    };\n                    client.onReceive = (message) => {\n                        const parts = message.split(Encode_1.Encode.SEPARATOR);\n                        this.onReceive(client.region, parts[0], parts);\n                    };\n                    client.onStoredRootEntityReceived = (sid, entityXml) => {\n                        this.onStoredRootEntityReceived(client.region, sid, entityXml);\n                    };\n                    client.onStoredChildEntityReceived = (parentSid, sid, entityXml) => {\n                        this.onStoredChildEntityReceived(client.region, parentSid, sid, entityXml);\n                    };\n                    client.onStoredEntityRemoved = (sid) => {\n                        this.onStoredEntityRemoved(client.region, sid);\n                    };\n                    client.onLoaded = () => {\n                        this.onLoaded(client.region);\n                    };\n                    try {\n                        yield client.connect();\n                        this.onConnect(client.region);\n                    }\n                    catch (error) {\n                        console.warn(\"cluster client - error connecting to region.\", error);\n                        this.onConnectError(client.region, error);\n                        continue;\n                    }\n                    // Add clients for regions which are in range and not connected yet.\n                    if (client.region === this.primaryRegion) {\n                        // Add avatar\n                        console.log(\"cluster client - connected to primary region: \" + client.region);\n                        yield client.add(this.avatarId, x, y, z, rx, ry, rz, rw, this.avatarDescription, Encode_1.Encode.AVATAR);\n                    }\n                    else {\n                        // Add probe\n                        console.log(\"cluster client - connected to secondary region: \" + client.region);\n                        yield client.add(this.avatarId, x, y, z, rx, ry, rz, rw, \"\", Encode_1.Encode.PROBE);\n                    }\n                }\n                else {\n                    // Update avatars and probes for regions in range..\n                    if (this.clients.get(region.region).isConnected()) {\n                        yield this.clients.get(region.region).update(this.avatarId, x, y, z, rx, ry, rz, rw);\n                    }\n                }\n            }\n            // Close clients for regions which are not in range.\n            this.clients.forEach((client) => {\n                for (let region of regions) {\n                    if (region.region === client.region) {\n                        return;\n                    }\n                }\n                console.log(\"cluster client - closing client to region not in range: \" + client.region);\n                this.closeClient(client);\n            });\n        });\n    }\n    closeClient(client) {\n        this.clients.delete(client.region);\n        client.close();\n        this.onDisconnect(client.region);\n    }\n    getClient() {\n        if (!this.primaryRegion) {\n            return undefined;\n        }\n        return this.clients.get(this.primaryRegion);\n    }\n    isConnected() {\n        return this.primaryRegion !== undefined && this.clients.has(this.primaryRegion) && this.clients.get(this.primaryRegion).isConnected();\n    }\n    add(id, x, y, z, rx, ry, rz, rw, description) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.isConnected()) {\n                yield this.getClient().add(id, x, y, z, rx, ry, rz, rw, description, Encode_1.Encode.OBJECT);\n            }\n        });\n    }\n    update(id, x, y, z, rx, ry, rz, rw) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.isConnected()) {\n                yield this.getClient().update(id, x, y, z, rx, ry, rz, rw);\n            }\n        });\n    }\n    remove(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.isConnected()) {\n                yield this.getClient().remove(id);\n            }\n        });\n    }\n    describe(id, description) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.isConnected()) {\n                yield this.getClient().describe(id, description);\n            }\n        });\n    }\n    act(id, action, description) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.isConnected()) {\n                yield this.getClient().act(id, action, description);\n            }\n        });\n    }\n    storeEntities(region, entitiesXml) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.clients.has(region)) {\n                yield this.clients.get(region).storeEntities(entitiesXml);\n            }\n            else {\n                throw new Error(\"Region not connected: \" + region);\n            }\n        });\n    }\n    storeChildEntities(region, parentSid, entitiesXml) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.clients.has(region)) {\n                yield this.clients.get(region).storeChildEntities(parentSid, entitiesXml);\n            }\n            else {\n                throw new Error(\"Region not connected: \" + region);\n            }\n        });\n    }\n    removeStoredEntities(region, sids) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.clients.has(region)) {\n                yield this.clients.get(region).removeStoredEntities(sids);\n            }\n            else {\n                throw new Error(\"Region not connected: \" + region);\n            }\n        });\n    }\n    storeEntity(entityXml, x, y, z) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isConnected()) {\n                console.warn(\"No region found at \" + x + \",\" + y + \",\" + z);\n                throw new Error(\"Not connected.\");\n            }\n            const region = this.getRegion(x, y, z);\n            if (region) {\n                yield this.storeEntities(region, \"<a-entities>\" + entityXml + \"</a-entities>\");\n            }\n            else {\n                console.warn(\"No region found at \" + x + \",\" + y + \",\" + z);\n            }\n        });\n    }\n    removeStoredEntity(entitySid, x, y, z) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isConnected()) {\n                console.warn(\"No region found at \" + x + \",\" + y + \",\" + z);\n                throw new Error(\"Not connected.\");\n            }\n            const region = this.getRegion(x, y, z);\n            if (region) {\n                yield this.removeStoredEntities(region, [entitySid]);\n            }\n            else {\n                console.warn(\"No region found at \" + x + \",\" + y + \",\" + z);\n            }\n        });\n    }\n    /**\n     * Gets regions with closest region as first.\n     * @param x the connection avatar x coordinate\n     * @param y the connection avatar y coordinate\n     * @param z the connection avatar z coordinate\n     * @return array of RegionConfigurations with closest region as first.\n     */\n    getRegions(x, y, z) {\n        if (this.clusterConfiguration) {\n            const regions = Array();\n            let lastD2 = Number.MAX_SAFE_INTEGER;\n            for (let region of this.clusterConfiguration.regions) {\n                if (x >= region.x - region.edge / 2 && x <= region.x + region.edge / 2 &&\n                    y >= region.y - region.edge / 2 && y <= region.y + region.edge / 2 &&\n                    z >= region.z - region.edge / 2 && z <= region.z + region.edge / 2) {\n                    const d2 = Math.pow(x - region.x, 2) + Math.pow(y - region.y, 2) + Math.pow(z - region.z, 2);\n                    if (d2 < lastD2) {\n                        regions.unshift(region);\n                    }\n                    else {\n                        regions.push(region);\n                    }\n                    lastD2 = d2;\n                }\n            }\n            return regions;\n        }\n        else {\n            console.warn(\"no cluster configuration defined.\");\n            throw new Error(\"No cluster configuration defined.\");\n        }\n    }\n    /**\n     * Get closest region for coordinate.\n     * @param x\n     * @param y\n     * @param z\n     */\n    getRegion(x, y, z) {\n        if (this.clusterConfiguration) {\n            const regions = Array();\n            let lastD2 = Number.MAX_SAFE_INTEGER;\n            for (let region of this.clusterConfiguration.regions) {\n                if (x >= region.x - region.edge / 2 && x <= region.x + region.edge / 2 &&\n                    y >= region.y - region.edge / 2 && y <= region.y + region.edge / 2 &&\n                    z >= region.z - region.edge / 2 && z <= region.z + region.edge / 2) {\n                    const d2 = Math.pow(x - region.x, 2) + Math.pow(y - region.y, 2) + Math.pow(z - region.z, 2);\n                    if (d2 < lastD2) {\n                        regions.unshift(region.region);\n                    }\n                    else {\n                        regions.push(region.region);\n                    }\n                    lastD2 = d2;\n                }\n            }\n            if (regions.length > 0) {\n                return regions[0];\n            }\n            else {\n                return undefined;\n            }\n        }\n        else {\n            console.warn(\"no cluster configuration defined.\");\n            throw new Error(\"No cluster configuration defined.\");\n        }\n    }\n    getRegionConfiguration(region) {\n        if (this.clusterConfiguration) {\n            const clusterConfiguration = this.clusterConfiguration;\n            for (const regionConfiguration of clusterConfiguration.regions) {\n                if (regionConfiguration.region == region) {\n                    return regionConfiguration;\n                }\n            }\n            throw new Error(\"Region configuration not found: \" + region);\n        }\n        else {\n            console.warn(\"no cluster configuration defined.\");\n            throw new Error(\"No cluster configuration defined.\");\n        }\n    }\n}\nexports.ClusterClient = ClusterClient;\n//# sourceMappingURL=ClusterClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/reality-space/lib/src/common/reality/ClusterClient.js\n");

/***/ }),

/***/ "./node_modules/reality-space/lib/src/common/reality/Configuration.js":
/*!****************************************************************************!*\
  !*** ./node_modules/reality-space/lib/src/common/reality/Configuration.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__webpack_require__(/*! isomorphic-fetch */ \"./node_modules/isomorphic-fetch/fetch-npm-browserify.js\");\nclass ClusterConfiguration {\n    constructor() {\n        this.name = \"\";\n        this.description = \"\";\n        this.edge = 1000;\n        this.step = 100;\n        this.range = 200;\n        this.maxSpaces = 10;\n        this.processorUrl = \"\";\n        this.storageUrl = \"\";\n        this.cdnUrl = \"\";\n        this.spaces = new Array();\n        this.sanitizer = new SanitizerConfiguration();\n        this.regions = new Array();\n        this.idTokenIssuers = new Array();\n    }\n}\nexports.ClusterConfiguration = ClusterConfiguration;\nclass RegionConfiguration {\n    constructor() {\n        this.region = \"\";\n        this.processorUrl = \"\";\n        this.storageUrl = \"\";\n        this.cdnUrl = \"\";\n        this.spaces = new Array();\n        this.maxSpaces = 0;\n        this.edge = 0;\n        this.step = 0;\n        this.range = 0;\n        this.x = 0;\n        this.y = 0;\n        this.z = 0;\n    }\n}\nexports.RegionConfiguration = RegionConfiguration;\nclass SanitizerConfiguration {\n    constructor() {\n        this.allowedElements = \"\";\n        this.allowedAttributes = \"\";\n        this.allowedAttributeValueRegex = \"\";\n    }\n}\nexports.SanitizerConfiguration = SanitizerConfiguration;\nclass StorageConfiguration {\n    constructor(url, regions, spaces, maxSpaces) {\n        this.spaces = new Array();\n        this.url = url;\n        this.regions = regions;\n        this.spaces = spaces;\n        this.maxSpaces = maxSpaces;\n    }\n}\nexports.StorageConfiguration = StorageConfiguration;\nclass IdTokenIssuer {\n    constructor(issuer, publicKey) {\n        this.issuer = \"\";\n        this.publicKey = \"\";\n        this.issuer = issuer;\n        this.publicKey = publicKey;\n    }\n}\nexports.IdTokenIssuer = IdTokenIssuer;\nfunction getClusterConfiguration(url) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return (yield fetchConfiguration(url));\n    });\n}\nexports.getClusterConfiguration = getClusterConfiguration;\nfunction fetchConfiguration(url) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (!url || url.length == 0) {\n            return undefined;\n        }\n        const response = yield fetch(url);\n        if (response.status >= 400) {\n            throw new Error(\"Bad response from server\");\n        }\n        const responseText = yield (response.text());\n        const clusterConfiguration = JSON.parse(responseText);\n        clusterConfiguration.regions.forEach((processor) => {\n            processor.region = processor.region && processor.region.length > 0 ? processor.region : processor.x + \"-\" + processor.y + \"-\" + processor.z;\n            processor.processorUrl = processor.processorUrl && processor.processorUrl.length > 0 ? processor.processorUrl : clusterConfiguration.processorUrl;\n            processor.storageUrl = processor.storageUrl && processor.storageUrl.length > 0 ? processor.storageUrl : clusterConfiguration.storageUrl;\n            processor.cdnUrl = processor.cdnUrl && processor.cdnUrl.length > 0 ? processor.cdnUrl : clusterConfiguration.cdnUrl;\n            processor.spaces = processor.spaces && processor.spaces.length > 0 ? processor.spaces : clusterConfiguration.spaces;\n            processor.maxSpaces = processor.maxSpaces ? processor.maxSpaces : clusterConfiguration.maxSpaces;\n            processor.edge = processor.edge ? processor.edge : clusterConfiguration.edge;\n            processor.step = processor.step ? processor.step : clusterConfiguration.step;\n            processor.range = processor.range ? processor.range : clusterConfiguration.range;\n        });\n        return clusterConfiguration;\n    });\n}\nexports.fetchConfiguration = fetchConfiguration;\n/**\n * Gets regions processor is responsible for.\n * @param clusterConfiguration the cluster configuration.\n * @param processorUrl the processor URL\n */\nfunction getRegionConfigurations(clusterConfiguration, processorUrl) {\n    const normalizedServerUrl = processorUrl.trim().toLocaleLowerCase();\n    const processorConfigs = new Map();\n    for (let processor of clusterConfiguration.regions) {\n        const normalizedServerUrlCandidate = processor.processorUrl.trim().toLowerCase();\n        if (normalizedServerUrl == normalizedServerUrlCandidate) {\n            processorConfigs.set(processor.region, processor);\n        }\n    }\n    ;\n    return processorConfigs;\n}\nexports.getRegionConfigurations = getRegionConfigurations;\n/**\n * Gets storage configuration.\n * @param clusterConfiguration the cluster configuration\n * @param storageUrl the storage URL\n */\nfunction getStorageConfiguration(clusterConfiguration, storageUrl) {\n    const matchingServerNames = clusterConfiguration.regions.filter(s => {\n        const processorStorageUrl = s.storageUrl && s.storageUrl.length > 0 ? s.storageUrl : clusterConfiguration.storageUrl;\n        return processorStorageUrl.trim().toLocaleLowerCase() == storageUrl.trim().toLocaleLowerCase();\n    }).map(s => s.region);\n    return new StorageConfiguration(storageUrl, matchingServerNames, clusterConfiguration.spaces, clusterConfiguration.maxSpaces);\n}\nexports.getStorageConfiguration = getStorageConfiguration;\nfunction findItTokenIssuerConfiguration(clusterConfiguration, issuer) {\n    for (let idTokenIssuer of clusterConfiguration.idTokenIssuers) {\n        if (idTokenIssuer.issuer === issuer) {\n            return idTokenIssuer;\n        }\n    }\n    return null;\n}\nexports.findItTokenIssuerConfiguration = findItTokenIssuerConfiguration;\n//# sourceMappingURL=Configuration.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhbGl0eS1zcGFjZS9saWIvc3JjL2NvbW1vbi9yZWFsaXR5L0NvbmZpZ3VyYXRpb24uanM/MDNiNSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSxtQ0FBbUMsTUFBTSw2QkFBNkIsRUFBRSxZQUFZLFdBQVcsRUFBRTtBQUNqRyxrQ0FBa0MsTUFBTSxpQ0FBaUMsRUFBRSxZQUFZLFdBQVcsRUFBRTtBQUNwRywrQkFBK0IsaUVBQWlFLHVCQUF1QixFQUFFLDRCQUE0QjtBQUNySjtBQUNBLEtBQUs7QUFDTDtBQUNBLDhDQUE4QyxjQUFjO0FBQzVELG1CQUFPLENBQUMsaUZBQWtCO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL3JlYWxpdHktc3BhY2UvbGliL3NyYy9jb21tb24vcmVhbGl0eS9Db25maWd1cmF0aW9uLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19hd2FpdGVyID0gKHRoaXMgJiYgdGhpcy5fX2F3YWl0ZXIpIHx8IGZ1bmN0aW9uICh0aGlzQXJnLCBfYXJndW1lbnRzLCBQLCBnZW5lcmF0b3IpIHtcbiAgICByZXR1cm4gbmV3IChQIHx8IChQID0gUHJvbWlzZSkpKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgZnVuY3Rpb24gZnVsZmlsbGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yLm5leHQodmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiByZWplY3RlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvcltcInRocm93XCJdKHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gc3RlcChyZXN1bHQpIHsgcmVzdWx0LmRvbmUgPyByZXNvbHZlKHJlc3VsdC52YWx1ZSkgOiBuZXcgUChmdW5jdGlvbiAocmVzb2x2ZSkgeyByZXNvbHZlKHJlc3VsdC52YWx1ZSk7IH0pLnRoZW4oZnVsZmlsbGVkLCByZWplY3RlZCk7IH1cbiAgICAgICAgc3RlcCgoZ2VuZXJhdG9yID0gZ2VuZXJhdG9yLmFwcGx5KHRoaXNBcmcsIF9hcmd1bWVudHMgfHwgW10pKS5uZXh0KCkpO1xuICAgIH0pO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnJlcXVpcmUoJ2lzb21vcnBoaWMtZmV0Y2gnKTtcbmNsYXNzIENsdXN0ZXJDb25maWd1cmF0aW9uIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy5uYW1lID0gXCJcIjtcbiAgICAgICAgdGhpcy5kZXNjcmlwdGlvbiA9IFwiXCI7XG4gICAgICAgIHRoaXMuZWRnZSA9IDEwMDA7XG4gICAgICAgIHRoaXMuc3RlcCA9IDEwMDtcbiAgICAgICAgdGhpcy5yYW5nZSA9IDIwMDtcbiAgICAgICAgdGhpcy5tYXhTcGFjZXMgPSAxMDtcbiAgICAgICAgdGhpcy5wcm9jZXNzb3JVcmwgPSBcIlwiO1xuICAgICAgICB0aGlzLnN0b3JhZ2VVcmwgPSBcIlwiO1xuICAgICAgICB0aGlzLmNkblVybCA9IFwiXCI7XG4gICAgICAgIHRoaXMuc3BhY2VzID0gbmV3IEFycmF5KCk7XG4gICAgICAgIHRoaXMuc2FuaXRpemVyID0gbmV3IFNhbml0aXplckNvbmZpZ3VyYXRpb24oKTtcbiAgICAgICAgdGhpcy5yZWdpb25zID0gbmV3IEFycmF5KCk7XG4gICAgICAgIHRoaXMuaWRUb2tlbklzc3VlcnMgPSBuZXcgQXJyYXkoKTtcbiAgICB9XG59XG5leHBvcnRzLkNsdXN0ZXJDb25maWd1cmF0aW9uID0gQ2x1c3RlckNvbmZpZ3VyYXRpb247XG5jbGFzcyBSZWdpb25Db25maWd1cmF0aW9uIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy5yZWdpb24gPSBcIlwiO1xuICAgICAgICB0aGlzLnByb2Nlc3NvclVybCA9IFwiXCI7XG4gICAgICAgIHRoaXMuc3RvcmFnZVVybCA9IFwiXCI7XG4gICAgICAgIHRoaXMuY2RuVXJsID0gXCJcIjtcbiAgICAgICAgdGhpcy5zcGFjZXMgPSBuZXcgQXJyYXkoKTtcbiAgICAgICAgdGhpcy5tYXhTcGFjZXMgPSAwO1xuICAgICAgICB0aGlzLmVkZ2UgPSAwO1xuICAgICAgICB0aGlzLnN0ZXAgPSAwO1xuICAgICAgICB0aGlzLnJhbmdlID0gMDtcbiAgICAgICAgdGhpcy54ID0gMDtcbiAgICAgICAgdGhpcy55ID0gMDtcbiAgICAgICAgdGhpcy56ID0gMDtcbiAgICB9XG59XG5leHBvcnRzLlJlZ2lvbkNvbmZpZ3VyYXRpb24gPSBSZWdpb25Db25maWd1cmF0aW9uO1xuY2xhc3MgU2FuaXRpemVyQ29uZmlndXJhdGlvbiB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMuYWxsb3dlZEVsZW1lbnRzID0gXCJcIjtcbiAgICAgICAgdGhpcy5hbGxvd2VkQXR0cmlidXRlcyA9IFwiXCI7XG4gICAgICAgIHRoaXMuYWxsb3dlZEF0dHJpYnV0ZVZhbHVlUmVnZXggPSBcIlwiO1xuICAgIH1cbn1cbmV4cG9ydHMuU2FuaXRpemVyQ29uZmlndXJhdGlvbiA9IFNhbml0aXplckNvbmZpZ3VyYXRpb247XG5jbGFzcyBTdG9yYWdlQ29uZmlndXJhdGlvbiB7XG4gICAgY29uc3RydWN0b3IodXJsLCByZWdpb25zLCBzcGFjZXMsIG1heFNwYWNlcykge1xuICAgICAgICB0aGlzLnNwYWNlcyA9IG5ldyBBcnJheSgpO1xuICAgICAgICB0aGlzLnVybCA9IHVybDtcbiAgICAgICAgdGhpcy5yZWdpb25zID0gcmVnaW9ucztcbiAgICAgICAgdGhpcy5zcGFjZXMgPSBzcGFjZXM7XG4gICAgICAgIHRoaXMubWF4U3BhY2VzID0gbWF4U3BhY2VzO1xuICAgIH1cbn1cbmV4cG9ydHMuU3RvcmFnZUNvbmZpZ3VyYXRpb24gPSBTdG9yYWdlQ29uZmlndXJhdGlvbjtcbmNsYXNzIElkVG9rZW5Jc3N1ZXIge1xuICAgIGNvbnN0cnVjdG9yKGlzc3VlciwgcHVibGljS2V5KSB7XG4gICAgICAgIHRoaXMuaXNzdWVyID0gXCJcIjtcbiAgICAgICAgdGhpcy5wdWJsaWNLZXkgPSBcIlwiO1xuICAgICAgICB0aGlzLmlzc3VlciA9IGlzc3VlcjtcbiAgICAgICAgdGhpcy5wdWJsaWNLZXkgPSBwdWJsaWNLZXk7XG4gICAgfVxufVxuZXhwb3J0cy5JZFRva2VuSXNzdWVyID0gSWRUb2tlbklzc3VlcjtcbmZ1bmN0aW9uIGdldENsdXN0ZXJDb25maWd1cmF0aW9uKHVybCkge1xuICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgIHJldHVybiAoeWllbGQgZmV0Y2hDb25maWd1cmF0aW9uKHVybCkpO1xuICAgIH0pO1xufVxuZXhwb3J0cy5nZXRDbHVzdGVyQ29uZmlndXJhdGlvbiA9IGdldENsdXN0ZXJDb25maWd1cmF0aW9uO1xuZnVuY3Rpb24gZmV0Y2hDb25maWd1cmF0aW9uKHVybCkge1xuICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgIGlmICghdXJsIHx8IHVybC5sZW5ndGggPT0gMCkge1xuICAgICAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCByZXNwb25zZSA9IHlpZWxkIGZldGNoKHVybCk7XG4gICAgICAgIGlmIChyZXNwb25zZS5zdGF0dXMgPj0gNDAwKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJCYWQgcmVzcG9uc2UgZnJvbSBzZXJ2ZXJcIik7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgcmVzcG9uc2VUZXh0ID0geWllbGQgKHJlc3BvbnNlLnRleHQoKSk7XG4gICAgICAgIGNvbnN0IGNsdXN0ZXJDb25maWd1cmF0aW9uID0gSlNPTi5wYXJzZShyZXNwb25zZVRleHQpO1xuICAgICAgICBjbHVzdGVyQ29uZmlndXJhdGlvbi5yZWdpb25zLmZvckVhY2goKHByb2Nlc3NvcikgPT4ge1xuICAgICAgICAgICAgcHJvY2Vzc29yLnJlZ2lvbiA9IHByb2Nlc3Nvci5yZWdpb24gJiYgcHJvY2Vzc29yLnJlZ2lvbi5sZW5ndGggPiAwID8gcHJvY2Vzc29yLnJlZ2lvbiA6IHByb2Nlc3Nvci54ICsgXCItXCIgKyBwcm9jZXNzb3IueSArIFwiLVwiICsgcHJvY2Vzc29yLno7XG4gICAgICAgICAgICBwcm9jZXNzb3IucHJvY2Vzc29yVXJsID0gcHJvY2Vzc29yLnByb2Nlc3NvclVybCAmJiBwcm9jZXNzb3IucHJvY2Vzc29yVXJsLmxlbmd0aCA+IDAgPyBwcm9jZXNzb3IucHJvY2Vzc29yVXJsIDogY2x1c3RlckNvbmZpZ3VyYXRpb24ucHJvY2Vzc29yVXJsO1xuICAgICAgICAgICAgcHJvY2Vzc29yLnN0b3JhZ2VVcmwgPSBwcm9jZXNzb3Iuc3RvcmFnZVVybCAmJiBwcm9jZXNzb3Iuc3RvcmFnZVVybC5sZW5ndGggPiAwID8gcHJvY2Vzc29yLnN0b3JhZ2VVcmwgOiBjbHVzdGVyQ29uZmlndXJhdGlvbi5zdG9yYWdlVXJsO1xuICAgICAgICAgICAgcHJvY2Vzc29yLmNkblVybCA9IHByb2Nlc3Nvci5jZG5VcmwgJiYgcHJvY2Vzc29yLmNkblVybC5sZW5ndGggPiAwID8gcHJvY2Vzc29yLmNkblVybCA6IGNsdXN0ZXJDb25maWd1cmF0aW9uLmNkblVybDtcbiAgICAgICAgICAgIHByb2Nlc3Nvci5zcGFjZXMgPSBwcm9jZXNzb3Iuc3BhY2VzICYmIHByb2Nlc3Nvci5zcGFjZXMubGVuZ3RoID4gMCA/IHByb2Nlc3Nvci5zcGFjZXMgOiBjbHVzdGVyQ29uZmlndXJhdGlvbi5zcGFjZXM7XG4gICAgICAgICAgICBwcm9jZXNzb3IubWF4U3BhY2VzID0gcHJvY2Vzc29yLm1heFNwYWNlcyA/IHByb2Nlc3Nvci5tYXhTcGFjZXMgOiBjbHVzdGVyQ29uZmlndXJhdGlvbi5tYXhTcGFjZXM7XG4gICAgICAgICAgICBwcm9jZXNzb3IuZWRnZSA9IHByb2Nlc3Nvci5lZGdlID8gcHJvY2Vzc29yLmVkZ2UgOiBjbHVzdGVyQ29uZmlndXJhdGlvbi5lZGdlO1xuICAgICAgICAgICAgcHJvY2Vzc29yLnN0ZXAgPSBwcm9jZXNzb3Iuc3RlcCA/IHByb2Nlc3Nvci5zdGVwIDogY2x1c3RlckNvbmZpZ3VyYXRpb24uc3RlcDtcbiAgICAgICAgICAgIHByb2Nlc3Nvci5yYW5nZSA9IHByb2Nlc3Nvci5yYW5nZSA/IHByb2Nlc3Nvci5yYW5nZSA6IGNsdXN0ZXJDb25maWd1cmF0aW9uLnJhbmdlO1xuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIGNsdXN0ZXJDb25maWd1cmF0aW9uO1xuICAgIH0pO1xufVxuZXhwb3J0cy5mZXRjaENvbmZpZ3VyYXRpb24gPSBmZXRjaENvbmZpZ3VyYXRpb247XG4vKipcbiAqIEdldHMgcmVnaW9ucyBwcm9jZXNzb3IgaXMgcmVzcG9uc2libGUgZm9yLlxuICogQHBhcmFtIGNsdXN0ZXJDb25maWd1cmF0aW9uIHRoZSBjbHVzdGVyIGNvbmZpZ3VyYXRpb24uXG4gKiBAcGFyYW0gcHJvY2Vzc29yVXJsIHRoZSBwcm9jZXNzb3IgVVJMXG4gKi9cbmZ1bmN0aW9uIGdldFJlZ2lvbkNvbmZpZ3VyYXRpb25zKGNsdXN0ZXJDb25maWd1cmF0aW9uLCBwcm9jZXNzb3JVcmwpIHtcbiAgICBjb25zdCBub3JtYWxpemVkU2VydmVyVXJsID0gcHJvY2Vzc29yVXJsLnRyaW0oKS50b0xvY2FsZUxvd2VyQ2FzZSgpO1xuICAgIGNvbnN0IHByb2Nlc3NvckNvbmZpZ3MgPSBuZXcgTWFwKCk7XG4gICAgZm9yIChsZXQgcHJvY2Vzc29yIG9mIGNsdXN0ZXJDb25maWd1cmF0aW9uLnJlZ2lvbnMpIHtcbiAgICAgICAgY29uc3Qgbm9ybWFsaXplZFNlcnZlclVybENhbmRpZGF0ZSA9IHByb2Nlc3Nvci5wcm9jZXNzb3JVcmwudHJpbSgpLnRvTG93ZXJDYXNlKCk7XG4gICAgICAgIGlmIChub3JtYWxpemVkU2VydmVyVXJsID09IG5vcm1hbGl6ZWRTZXJ2ZXJVcmxDYW5kaWRhdGUpIHtcbiAgICAgICAgICAgIHByb2Nlc3NvckNvbmZpZ3Muc2V0KHByb2Nlc3Nvci5yZWdpb24sIHByb2Nlc3Nvcik7XG4gICAgICAgIH1cbiAgICB9XG4gICAgO1xuICAgIHJldHVybiBwcm9jZXNzb3JDb25maWdzO1xufVxuZXhwb3J0cy5nZXRSZWdpb25Db25maWd1cmF0aW9ucyA9IGdldFJlZ2lvbkNvbmZpZ3VyYXRpb25zO1xuLyoqXG4gKiBHZXRzIHN0b3JhZ2UgY29uZmlndXJhdGlvbi5cbiAqIEBwYXJhbSBjbHVzdGVyQ29uZmlndXJhdGlvbiB0aGUgY2x1c3RlciBjb25maWd1cmF0aW9uXG4gKiBAcGFyYW0gc3RvcmFnZVVybCB0aGUgc3RvcmFnZSBVUkxcbiAqL1xuZnVuY3Rpb24gZ2V0U3RvcmFnZUNvbmZpZ3VyYXRpb24oY2x1c3RlckNvbmZpZ3VyYXRpb24sIHN0b3JhZ2VVcmwpIHtcbiAgICBjb25zdCBtYXRjaGluZ1NlcnZlck5hbWVzID0gY2x1c3RlckNvbmZpZ3VyYXRpb24ucmVnaW9ucy5maWx0ZXIocyA9PiB7XG4gICAgICAgIGNvbnN0IHByb2Nlc3NvclN0b3JhZ2VVcmwgPSBzLnN0b3JhZ2VVcmwgJiYgcy5zdG9yYWdlVXJsLmxlbmd0aCA+IDAgPyBzLnN0b3JhZ2VVcmwgOiBjbHVzdGVyQ29uZmlndXJhdGlvbi5zdG9yYWdlVXJsO1xuICAgICAgICByZXR1cm4gcHJvY2Vzc29yU3RvcmFnZVVybC50cmltKCkudG9Mb2NhbGVMb3dlckNhc2UoKSA9PSBzdG9yYWdlVXJsLnRyaW0oKS50b0xvY2FsZUxvd2VyQ2FzZSgpO1xuICAgIH0pLm1hcChzID0+IHMucmVnaW9uKTtcbiAgICByZXR1cm4gbmV3IFN0b3JhZ2VDb25maWd1cmF0aW9uKHN0b3JhZ2VVcmwsIG1hdGNoaW5nU2VydmVyTmFtZXMsIGNsdXN0ZXJDb25maWd1cmF0aW9uLnNwYWNlcywgY2x1c3RlckNvbmZpZ3VyYXRpb24ubWF4U3BhY2VzKTtcbn1cbmV4cG9ydHMuZ2V0U3RvcmFnZUNvbmZpZ3VyYXRpb24gPSBnZXRTdG9yYWdlQ29uZmlndXJhdGlvbjtcbmZ1bmN0aW9uIGZpbmRJdFRva2VuSXNzdWVyQ29uZmlndXJhdGlvbihjbHVzdGVyQ29uZmlndXJhdGlvbiwgaXNzdWVyKSB7XG4gICAgZm9yIChsZXQgaWRUb2tlbklzc3VlciBvZiBjbHVzdGVyQ29uZmlndXJhdGlvbi5pZFRva2VuSXNzdWVycykge1xuICAgICAgICBpZiAoaWRUb2tlbklzc3Vlci5pc3N1ZXIgPT09IGlzc3Vlcikge1xuICAgICAgICAgICAgcmV0dXJuIGlkVG9rZW5Jc3N1ZXI7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIG51bGw7XG59XG5leHBvcnRzLmZpbmRJdFRva2VuSXNzdWVyQ29uZmlndXJhdGlvbiA9IGZpbmRJdFRva2VuSXNzdWVyQ29uZmlndXJhdGlvbjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUNvbmZpZ3VyYXRpb24uanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/reality-space/lib/src/common/reality/Configuration.js\n");

/***/ }),

/***/ "./node_modules/reality-space/lib/src/common/reality/Decode.js":
/*!*********************************************************************!*\
  !*** ./node_modules/reality-space/lib/src/common/reality/Decode.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Encode_1 = __webpack_require__(/*! ./Encode */ \"./node_modules/reality-space/lib/src/common/reality/Encode.js\");\nclass Decode {\n    static login(parts) {\n        return [\n            parts[1],\n            Decode.decodeString(parts[2]),\n            parts[3],\n            parts[4]\n        ];\n    }\n    static loginResponse(parts) {\n        return [\n            parts[1],\n            parts[2]\n        ];\n    }\n    static add(parts) {\n        return [\n            parts[1],\n            parseFloat(parts[2]),\n            parseFloat(parts[3]),\n            parseFloat(parts[4]),\n            parseFloat(parts[5]),\n            parseFloat(parts[6]),\n            parseFloat(parts[7]),\n            parseFloat(parts[8]),\n            parts[9],\n            parts[10]\n        ];\n    }\n    static added(parts) {\n        return [\n            parseInt(parts[1]),\n            parts[2],\n            parseFloat(parts[3]),\n            parseFloat(parts[4]),\n            parseFloat(parts[5]),\n            parseFloat(parts[6]),\n            parseFloat(parts[7]),\n            parseFloat(parts[8]),\n            parseFloat(parts[9]),\n            parts[10],\n            parts[11]\n        ];\n    }\n    static update(parts) {\n        return [\n            parts[1],\n            parseFloat(parts[2]),\n            parseFloat(parts[3]),\n            parseFloat(parts[4]),\n            parseFloat(parts[5]),\n            parseFloat(parts[6]),\n            parseFloat(parts[7]),\n            parseFloat(parts[8])\n        ];\n    }\n    static updated(parts) {\n        return [\n            parseInt(parts[1]),\n            parseFloat(parts[2]),\n            parseFloat(parts[3]),\n            parseFloat(parts[4]),\n            parseFloat(parts[5]),\n            parseFloat(parts[6]),\n            parseFloat(parts[7]),\n            parseFloat(parts[8])\n        ];\n    }\n    static remove(parts) {\n        return [\n            parts[1],\n        ];\n    }\n    static removed(parts) {\n        return [\n            parseInt(parts[1]),\n            parts[2]\n        ];\n    }\n    static describe(parts) {\n        return [\n            parts[1],\n            parts[2],\n        ];\n    }\n    static described(parts) {\n        return [\n            parseInt(parts[1]),\n            parts[2]\n        ];\n    }\n    static act(parts) {\n        return [\n            parts[1],\n            parts[2],\n            parts[3]\n        ];\n    }\n    static acted(parts) {\n        return [\n            parseInt(parts[1]),\n            parts[2],\n            parts[3]\n        ];\n    }\n    static notify(parts) {\n        return [\n            parts[1],\n            parts[2]\n        ];\n    }\n    static notified(parts) {\n        return [\n            parts[1],\n            parts[2]\n        ];\n    }\n    static decodeString(value) {\n        if (value.indexOf('\\\\') != -1) {\n            return value.replace(\"\\\\\\\\1\", \"\\\\\").replace(\"\\\\\\\\2\", Encode_1.Encode.SEPARATOR);\n        }\n        else {\n            return value;\n        }\n    }\n}\nexports.Decode = Decode;\n//# sourceMappingURL=Decode.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhbGl0eS1zcGFjZS9saWIvc3JjL2NvbW1vbi9yZWFsaXR5L0RlY29kZS5qcz9hYTNkIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQThDLGNBQWM7QUFDNUQsaUJBQWlCLG1CQUFPLENBQUMsK0VBQVU7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9yZWFsaXR5LXNwYWNlL2xpYi9zcmMvY29tbW9uL3JlYWxpdHkvRGVjb2RlLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCBFbmNvZGVfMSA9IHJlcXVpcmUoXCIuL0VuY29kZVwiKTtcbmNsYXNzIERlY29kZSB7XG4gICAgc3RhdGljIGxvZ2luKHBhcnRzKSB7XG4gICAgICAgIHJldHVybiBbXG4gICAgICAgICAgICBwYXJ0c1sxXSxcbiAgICAgICAgICAgIERlY29kZS5kZWNvZGVTdHJpbmcocGFydHNbMl0pLFxuICAgICAgICAgICAgcGFydHNbM10sXG4gICAgICAgICAgICBwYXJ0c1s0XVxuICAgICAgICBdO1xuICAgIH1cbiAgICBzdGF0aWMgbG9naW5SZXNwb25zZShwYXJ0cykge1xuICAgICAgICByZXR1cm4gW1xuICAgICAgICAgICAgcGFydHNbMV0sXG4gICAgICAgICAgICBwYXJ0c1syXVxuICAgICAgICBdO1xuICAgIH1cbiAgICBzdGF0aWMgYWRkKHBhcnRzKSB7XG4gICAgICAgIHJldHVybiBbXG4gICAgICAgICAgICBwYXJ0c1sxXSxcbiAgICAgICAgICAgIHBhcnNlRmxvYXQocGFydHNbMl0pLFxuICAgICAgICAgICAgcGFyc2VGbG9hdChwYXJ0c1szXSksXG4gICAgICAgICAgICBwYXJzZUZsb2F0KHBhcnRzWzRdKSxcbiAgICAgICAgICAgIHBhcnNlRmxvYXQocGFydHNbNV0pLFxuICAgICAgICAgICAgcGFyc2VGbG9hdChwYXJ0c1s2XSksXG4gICAgICAgICAgICBwYXJzZUZsb2F0KHBhcnRzWzddKSxcbiAgICAgICAgICAgIHBhcnNlRmxvYXQocGFydHNbOF0pLFxuICAgICAgICAgICAgcGFydHNbOV0sXG4gICAgICAgICAgICBwYXJ0c1sxMF1cbiAgICAgICAgXTtcbiAgICB9XG4gICAgc3RhdGljIGFkZGVkKHBhcnRzKSB7XG4gICAgICAgIHJldHVybiBbXG4gICAgICAgICAgICBwYXJzZUludChwYXJ0c1sxXSksXG4gICAgICAgICAgICBwYXJ0c1syXSxcbiAgICAgICAgICAgIHBhcnNlRmxvYXQocGFydHNbM10pLFxuICAgICAgICAgICAgcGFyc2VGbG9hdChwYXJ0c1s0XSksXG4gICAgICAgICAgICBwYXJzZUZsb2F0KHBhcnRzWzVdKSxcbiAgICAgICAgICAgIHBhcnNlRmxvYXQocGFydHNbNl0pLFxuICAgICAgICAgICAgcGFyc2VGbG9hdChwYXJ0c1s3XSksXG4gICAgICAgICAgICBwYXJzZUZsb2F0KHBhcnRzWzhdKSxcbiAgICAgICAgICAgIHBhcnNlRmxvYXQocGFydHNbOV0pLFxuICAgICAgICAgICAgcGFydHNbMTBdLFxuICAgICAgICAgICAgcGFydHNbMTFdXG4gICAgICAgIF07XG4gICAgfVxuICAgIHN0YXRpYyB1cGRhdGUocGFydHMpIHtcbiAgICAgICAgcmV0dXJuIFtcbiAgICAgICAgICAgIHBhcnRzWzFdLFxuICAgICAgICAgICAgcGFyc2VGbG9hdChwYXJ0c1syXSksXG4gICAgICAgICAgICBwYXJzZUZsb2F0KHBhcnRzWzNdKSxcbiAgICAgICAgICAgIHBhcnNlRmxvYXQocGFydHNbNF0pLFxuICAgICAgICAgICAgcGFyc2VGbG9hdChwYXJ0c1s1XSksXG4gICAgICAgICAgICBwYXJzZUZsb2F0KHBhcnRzWzZdKSxcbiAgICAgICAgICAgIHBhcnNlRmxvYXQocGFydHNbN10pLFxuICAgICAgICAgICAgcGFyc2VGbG9hdChwYXJ0c1s4XSlcbiAgICAgICAgXTtcbiAgICB9XG4gICAgc3RhdGljIHVwZGF0ZWQocGFydHMpIHtcbiAgICAgICAgcmV0dXJuIFtcbiAgICAgICAgICAgIHBhcnNlSW50KHBhcnRzWzFdKSxcbiAgICAgICAgICAgIHBhcnNlRmxvYXQocGFydHNbMl0pLFxuICAgICAgICAgICAgcGFyc2VGbG9hdChwYXJ0c1szXSksXG4gICAgICAgICAgICBwYXJzZUZsb2F0KHBhcnRzWzRdKSxcbiAgICAgICAgICAgIHBhcnNlRmxvYXQocGFydHNbNV0pLFxuICAgICAgICAgICAgcGFyc2VGbG9hdChwYXJ0c1s2XSksXG4gICAgICAgICAgICBwYXJzZUZsb2F0KHBhcnRzWzddKSxcbiAgICAgICAgICAgIHBhcnNlRmxvYXQocGFydHNbOF0pXG4gICAgICAgIF07XG4gICAgfVxuICAgIHN0YXRpYyByZW1vdmUocGFydHMpIHtcbiAgICAgICAgcmV0dXJuIFtcbiAgICAgICAgICAgIHBhcnRzWzFdLFxuICAgICAgICBdO1xuICAgIH1cbiAgICBzdGF0aWMgcmVtb3ZlZChwYXJ0cykge1xuICAgICAgICByZXR1cm4gW1xuICAgICAgICAgICAgcGFyc2VJbnQocGFydHNbMV0pLFxuICAgICAgICAgICAgcGFydHNbMl1cbiAgICAgICAgXTtcbiAgICB9XG4gICAgc3RhdGljIGRlc2NyaWJlKHBhcnRzKSB7XG4gICAgICAgIHJldHVybiBbXG4gICAgICAgICAgICBwYXJ0c1sxXSxcbiAgICAgICAgICAgIHBhcnRzWzJdLFxuICAgICAgICBdO1xuICAgIH1cbiAgICBzdGF0aWMgZGVzY3JpYmVkKHBhcnRzKSB7XG4gICAgICAgIHJldHVybiBbXG4gICAgICAgICAgICBwYXJzZUludChwYXJ0c1sxXSksXG4gICAgICAgICAgICBwYXJ0c1syXVxuICAgICAgICBdO1xuICAgIH1cbiAgICBzdGF0aWMgYWN0KHBhcnRzKSB7XG4gICAgICAgIHJldHVybiBbXG4gICAgICAgICAgICBwYXJ0c1sxXSxcbiAgICAgICAgICAgIHBhcnRzWzJdLFxuICAgICAgICAgICAgcGFydHNbM11cbiAgICAgICAgXTtcbiAgICB9XG4gICAgc3RhdGljIGFjdGVkKHBhcnRzKSB7XG4gICAgICAgIHJldHVybiBbXG4gICAgICAgICAgICBwYXJzZUludChwYXJ0c1sxXSksXG4gICAgICAgICAgICBwYXJ0c1syXSxcbiAgICAgICAgICAgIHBhcnRzWzNdXG4gICAgICAgIF07XG4gICAgfVxuICAgIHN0YXRpYyBub3RpZnkocGFydHMpIHtcbiAgICAgICAgcmV0dXJuIFtcbiAgICAgICAgICAgIHBhcnRzWzFdLFxuICAgICAgICAgICAgcGFydHNbMl1cbiAgICAgICAgXTtcbiAgICB9XG4gICAgc3RhdGljIG5vdGlmaWVkKHBhcnRzKSB7XG4gICAgICAgIHJldHVybiBbXG4gICAgICAgICAgICBwYXJ0c1sxXSxcbiAgICAgICAgICAgIHBhcnRzWzJdXG4gICAgICAgIF07XG4gICAgfVxuICAgIHN0YXRpYyBkZWNvZGVTdHJpbmcodmFsdWUpIHtcbiAgICAgICAgaWYgKHZhbHVlLmluZGV4T2YoJ1xcXFwnKSAhPSAtMSkge1xuICAgICAgICAgICAgcmV0dXJuIHZhbHVlLnJlcGxhY2UoXCJcXFxcXFxcXDFcIiwgXCJcXFxcXCIpLnJlcGxhY2UoXCJcXFxcXFxcXDJcIiwgRW5jb2RlXzEuRW5jb2RlLlNFUEFSQVRPUik7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgICAgIH1cbiAgICB9XG59XG5leHBvcnRzLkRlY29kZSA9IERlY29kZTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPURlY29kZS5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/reality-space/lib/src/common/reality/Decode.js\n");

/***/ }),

/***/ "./node_modules/reality-space/lib/src/common/reality/Encode.js":
/*!*********************************************************************!*\
  !*** ./node_modules/reality-space/lib/src/common/reality/Encode.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass Encode {\n    static login(loginRequestId, jwt, space, processor) {\n        return \"\" +\n            s(this.LOGIN) +\n            s(loginRequestId) +\n            se(jwt) +\n            s(space) +\n            s(processor);\n    }\n    static loginResponse(loginRequestId, error) {\n        return \"\" +\n            s(this.LOGIN_RESPONSE) +\n            s(loginRequestId) +\n            s(error);\n    }\n    static add(id, x, y, z, rx, ry, rz, rw, description, type) {\n        return \"\" +\n            s(this.ADD) +\n            s(id) +\n            d2(x) +\n            d2(y) +\n            d2(z) +\n            d2(rx) +\n            d2(ry) +\n            d2(rz) +\n            d2(rw) +\n            se(description) +\n            s(type);\n    }\n    static added(index, id, x, y, z, rx, ry, rz, rw, description, type) {\n        return \"\" +\n            s(this.ADDED) +\n            i(index) +\n            s(id) +\n            d2(x) +\n            d2(y) +\n            d2(z) +\n            d2(rx) +\n            d2(ry) +\n            d2(rz) +\n            d2(rw) +\n            se(description) +\n            s(type);\n    }\n    static update(id, x, y, z, rx, ry, rz, rw) {\n        return \"\" +\n            s(this.UPDATE) +\n            s(id) +\n            d2(x) +\n            d2(y) +\n            d2(z) +\n            d2(rx) +\n            d2(ry) +\n            d2(rz) +\n            d2(rw);\n    }\n    static updated(index, x, y, z, rx, ry, rz, rw) {\n        return \"\" +\n            s(this.UPDATED) +\n            i(index) +\n            d2(x) +\n            d2(y) +\n            d2(z) +\n            d2(rx) +\n            d2(ry) +\n            d2(rz) +\n            d2(rw);\n    }\n    static remove(id) {\n        return \"\" +\n            s(this.REMOVE) +\n            s(id);\n    }\n    static removed(index, id) {\n        return \"\" +\n            s(this.REMOVED) +\n            i(index) +\n            s(id);\n    }\n    static describe(id, description) {\n        return \"\" +\n            s(this.DESCRIBE) +\n            s(id) +\n            se(description);\n    }\n    static described(index, description) {\n        return \"\" +\n            s(this.DESCRIBED) +\n            i(index) +\n            se(description);\n    }\n    static act(id, action, description) {\n        return \"\" +\n            s(this.ACT) +\n            s(id) +\n            s(action) +\n            se(description);\n    }\n    static acted(index, action, description) {\n        return \"\" +\n            s(this.ACTED) +\n            i(index) +\n            s(action) +\n            se(description);\n    }\n    static notify(notification, description) {\n        return \"\" +\n            s(this.NOTIFY) +\n            s(notification) +\n            se(description);\n    }\n    static notified(notification, description) {\n        return \"\" +\n            s(this.NOTIFIED) +\n            s(notification) +\n            se(description);\n    }\n}\nEncode.SEPARATOR = '|';\nEncode.LOGIN = 'L';\nEncode.LOGIN_RESPONSE = 'l';\nEncode.ADD = 'A';\nEncode.ADDED = 'a';\nEncode.UPDATE = 'U';\nEncode.UPDATED = 'u';\nEncode.REMOVE = 'R';\nEncode.REMOVED = 'r';\nEncode.DESCRIBE = 'D';\nEncode.DESCRIBED = 'd';\nEncode.ACT = 'C';\nEncode.ACTED = 'c';\nEncode.NOTIFY = 'N';\nEncode.NOTIFIED = 'n';\nEncode.NOTIFICATION_STORED_ROOT_ENTITIES_CHANGED = 'srec';\nEncode.NOTIFICATION_STORED_CHILD_ENTITIES_CHANGED = 'scec';\nEncode.NOTIFICATION_STORED_ENTITIES_REMOVED = 'ser';\nEncode.OBJECT = 'o'; // Visible\nEncode.PROBE = 'p'; // Observing\nEncode.AVATAR = 'a'; // Visible and observing\nexports.Encode = Encode;\nfunction s(value) {\n    return value + Encode.SEPARATOR;\n}\nfunction se(value) {\n    return value.replace(\"\\\\\", \"\\\\\\\\1\").replace(Encode.SEPARATOR, \"\\\\\\\\2\") + Encode.SEPARATOR;\n}\nfunction i(value) {\n    return value + Encode.SEPARATOR;\n}\nfunction d1(value) {\n    return value.toFixed(1) + Encode.SEPARATOR;\n}\nfunction d2(value) {\n    return value.toFixed(2) + Encode.SEPARATOR;\n}\n//# sourceMappingURL=Encode.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhbGl0eS1zcGFjZS9saWIvc3JjL2NvbW1vbi9yZWFsaXR5L0VuY29kZS5qcz9kODc3Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQThDLGNBQWM7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0I7QUFDcEIsbUJBQW1CO0FBQ25CLG9CQUFvQjtBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL3JlYWxpdHktc3BhY2UvbGliL3NyYy9jb21tb24vcmVhbGl0eS9FbmNvZGUuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNsYXNzIEVuY29kZSB7XG4gICAgc3RhdGljIGxvZ2luKGxvZ2luUmVxdWVzdElkLCBqd3QsIHNwYWNlLCBwcm9jZXNzb3IpIHtcbiAgICAgICAgcmV0dXJuIFwiXCIgK1xuICAgICAgICAgICAgcyh0aGlzLkxPR0lOKSArXG4gICAgICAgICAgICBzKGxvZ2luUmVxdWVzdElkKSArXG4gICAgICAgICAgICBzZShqd3QpICtcbiAgICAgICAgICAgIHMoc3BhY2UpICtcbiAgICAgICAgICAgIHMocHJvY2Vzc29yKTtcbiAgICB9XG4gICAgc3RhdGljIGxvZ2luUmVzcG9uc2UobG9naW5SZXF1ZXN0SWQsIGVycm9yKSB7XG4gICAgICAgIHJldHVybiBcIlwiICtcbiAgICAgICAgICAgIHModGhpcy5MT0dJTl9SRVNQT05TRSkgK1xuICAgICAgICAgICAgcyhsb2dpblJlcXVlc3RJZCkgK1xuICAgICAgICAgICAgcyhlcnJvcik7XG4gICAgfVxuICAgIHN0YXRpYyBhZGQoaWQsIHgsIHksIHosIHJ4LCByeSwgcnosIHJ3LCBkZXNjcmlwdGlvbiwgdHlwZSkge1xuICAgICAgICByZXR1cm4gXCJcIiArXG4gICAgICAgICAgICBzKHRoaXMuQUREKSArXG4gICAgICAgICAgICBzKGlkKSArXG4gICAgICAgICAgICBkMih4KSArXG4gICAgICAgICAgICBkMih5KSArXG4gICAgICAgICAgICBkMih6KSArXG4gICAgICAgICAgICBkMihyeCkgK1xuICAgICAgICAgICAgZDIocnkpICtcbiAgICAgICAgICAgIGQyKHJ6KSArXG4gICAgICAgICAgICBkMihydykgK1xuICAgICAgICAgICAgc2UoZGVzY3JpcHRpb24pICtcbiAgICAgICAgICAgIHModHlwZSk7XG4gICAgfVxuICAgIHN0YXRpYyBhZGRlZChpbmRleCwgaWQsIHgsIHksIHosIHJ4LCByeSwgcnosIHJ3LCBkZXNjcmlwdGlvbiwgdHlwZSkge1xuICAgICAgICByZXR1cm4gXCJcIiArXG4gICAgICAgICAgICBzKHRoaXMuQURERUQpICtcbiAgICAgICAgICAgIGkoaW5kZXgpICtcbiAgICAgICAgICAgIHMoaWQpICtcbiAgICAgICAgICAgIGQyKHgpICtcbiAgICAgICAgICAgIGQyKHkpICtcbiAgICAgICAgICAgIGQyKHopICtcbiAgICAgICAgICAgIGQyKHJ4KSArXG4gICAgICAgICAgICBkMihyeSkgK1xuICAgICAgICAgICAgZDIocnopICtcbiAgICAgICAgICAgIGQyKHJ3KSArXG4gICAgICAgICAgICBzZShkZXNjcmlwdGlvbikgK1xuICAgICAgICAgICAgcyh0eXBlKTtcbiAgICB9XG4gICAgc3RhdGljIHVwZGF0ZShpZCwgeCwgeSwgeiwgcngsIHJ5LCByeiwgcncpIHtcbiAgICAgICAgcmV0dXJuIFwiXCIgK1xuICAgICAgICAgICAgcyh0aGlzLlVQREFURSkgK1xuICAgICAgICAgICAgcyhpZCkgK1xuICAgICAgICAgICAgZDIoeCkgK1xuICAgICAgICAgICAgZDIoeSkgK1xuICAgICAgICAgICAgZDIoeikgK1xuICAgICAgICAgICAgZDIocngpICtcbiAgICAgICAgICAgIGQyKHJ5KSArXG4gICAgICAgICAgICBkMihyeikgK1xuICAgICAgICAgICAgZDIocncpO1xuICAgIH1cbiAgICBzdGF0aWMgdXBkYXRlZChpbmRleCwgeCwgeSwgeiwgcngsIHJ5LCByeiwgcncpIHtcbiAgICAgICAgcmV0dXJuIFwiXCIgK1xuICAgICAgICAgICAgcyh0aGlzLlVQREFURUQpICtcbiAgICAgICAgICAgIGkoaW5kZXgpICtcbiAgICAgICAgICAgIGQyKHgpICtcbiAgICAgICAgICAgIGQyKHkpICtcbiAgICAgICAgICAgIGQyKHopICtcbiAgICAgICAgICAgIGQyKHJ4KSArXG4gICAgICAgICAgICBkMihyeSkgK1xuICAgICAgICAgICAgZDIocnopICtcbiAgICAgICAgICAgIGQyKHJ3KTtcbiAgICB9XG4gICAgc3RhdGljIHJlbW92ZShpZCkge1xuICAgICAgICByZXR1cm4gXCJcIiArXG4gICAgICAgICAgICBzKHRoaXMuUkVNT1ZFKSArXG4gICAgICAgICAgICBzKGlkKTtcbiAgICB9XG4gICAgc3RhdGljIHJlbW92ZWQoaW5kZXgsIGlkKSB7XG4gICAgICAgIHJldHVybiBcIlwiICtcbiAgICAgICAgICAgIHModGhpcy5SRU1PVkVEKSArXG4gICAgICAgICAgICBpKGluZGV4KSArXG4gICAgICAgICAgICBzKGlkKTtcbiAgICB9XG4gICAgc3RhdGljIGRlc2NyaWJlKGlkLCBkZXNjcmlwdGlvbikge1xuICAgICAgICByZXR1cm4gXCJcIiArXG4gICAgICAgICAgICBzKHRoaXMuREVTQ1JJQkUpICtcbiAgICAgICAgICAgIHMoaWQpICtcbiAgICAgICAgICAgIHNlKGRlc2NyaXB0aW9uKTtcbiAgICB9XG4gICAgc3RhdGljIGRlc2NyaWJlZChpbmRleCwgZGVzY3JpcHRpb24pIHtcbiAgICAgICAgcmV0dXJuIFwiXCIgK1xuICAgICAgICAgICAgcyh0aGlzLkRFU0NSSUJFRCkgK1xuICAgICAgICAgICAgaShpbmRleCkgK1xuICAgICAgICAgICAgc2UoZGVzY3JpcHRpb24pO1xuICAgIH1cbiAgICBzdGF0aWMgYWN0KGlkLCBhY3Rpb24sIGRlc2NyaXB0aW9uKSB7XG4gICAgICAgIHJldHVybiBcIlwiICtcbiAgICAgICAgICAgIHModGhpcy5BQ1QpICtcbiAgICAgICAgICAgIHMoaWQpICtcbiAgICAgICAgICAgIHMoYWN0aW9uKSArXG4gICAgICAgICAgICBzZShkZXNjcmlwdGlvbik7XG4gICAgfVxuICAgIHN0YXRpYyBhY3RlZChpbmRleCwgYWN0aW9uLCBkZXNjcmlwdGlvbikge1xuICAgICAgICByZXR1cm4gXCJcIiArXG4gICAgICAgICAgICBzKHRoaXMuQUNURUQpICtcbiAgICAgICAgICAgIGkoaW5kZXgpICtcbiAgICAgICAgICAgIHMoYWN0aW9uKSArXG4gICAgICAgICAgICBzZShkZXNjcmlwdGlvbik7XG4gICAgfVxuICAgIHN0YXRpYyBub3RpZnkobm90aWZpY2F0aW9uLCBkZXNjcmlwdGlvbikge1xuICAgICAgICByZXR1cm4gXCJcIiArXG4gICAgICAgICAgICBzKHRoaXMuTk9USUZZKSArXG4gICAgICAgICAgICBzKG5vdGlmaWNhdGlvbikgK1xuICAgICAgICAgICAgc2UoZGVzY3JpcHRpb24pO1xuICAgIH1cbiAgICBzdGF0aWMgbm90aWZpZWQobm90aWZpY2F0aW9uLCBkZXNjcmlwdGlvbikge1xuICAgICAgICByZXR1cm4gXCJcIiArXG4gICAgICAgICAgICBzKHRoaXMuTk9USUZJRUQpICtcbiAgICAgICAgICAgIHMobm90aWZpY2F0aW9uKSArXG4gICAgICAgICAgICBzZShkZXNjcmlwdGlvbik7XG4gICAgfVxufVxuRW5jb2RlLlNFUEFSQVRPUiA9ICd8JztcbkVuY29kZS5MT0dJTiA9ICdMJztcbkVuY29kZS5MT0dJTl9SRVNQT05TRSA9ICdsJztcbkVuY29kZS5BREQgPSAnQSc7XG5FbmNvZGUuQURERUQgPSAnYSc7XG5FbmNvZGUuVVBEQVRFID0gJ1UnO1xuRW5jb2RlLlVQREFURUQgPSAndSc7XG5FbmNvZGUuUkVNT1ZFID0gJ1InO1xuRW5jb2RlLlJFTU9WRUQgPSAncic7XG5FbmNvZGUuREVTQ1JJQkUgPSAnRCc7XG5FbmNvZGUuREVTQ1JJQkVEID0gJ2QnO1xuRW5jb2RlLkFDVCA9ICdDJztcbkVuY29kZS5BQ1RFRCA9ICdjJztcbkVuY29kZS5OT1RJRlkgPSAnTic7XG5FbmNvZGUuTk9USUZJRUQgPSAnbic7XG5FbmNvZGUuTk9USUZJQ0FUSU9OX1NUT1JFRF9ST09UX0VOVElUSUVTX0NIQU5HRUQgPSAnc3JlYyc7XG5FbmNvZGUuTk9USUZJQ0FUSU9OX1NUT1JFRF9DSElMRF9FTlRJVElFU19DSEFOR0VEID0gJ3NjZWMnO1xuRW5jb2RlLk5PVElGSUNBVElPTl9TVE9SRURfRU5USVRJRVNfUkVNT1ZFRCA9ICdzZXInO1xuRW5jb2RlLk9CSkVDVCA9ICdvJzsgLy8gVmlzaWJsZVxuRW5jb2RlLlBST0JFID0gJ3AnOyAvLyBPYnNlcnZpbmdcbkVuY29kZS5BVkFUQVIgPSAnYSc7IC8vIFZpc2libGUgYW5kIG9ic2VydmluZ1xuZXhwb3J0cy5FbmNvZGUgPSBFbmNvZGU7XG5mdW5jdGlvbiBzKHZhbHVlKSB7XG4gICAgcmV0dXJuIHZhbHVlICsgRW5jb2RlLlNFUEFSQVRPUjtcbn1cbmZ1bmN0aW9uIHNlKHZhbHVlKSB7XG4gICAgcmV0dXJuIHZhbHVlLnJlcGxhY2UoXCJcXFxcXCIsIFwiXFxcXFxcXFwxXCIpLnJlcGxhY2UoRW5jb2RlLlNFUEFSQVRPUiwgXCJcXFxcXFxcXDJcIikgKyBFbmNvZGUuU0VQQVJBVE9SO1xufVxuZnVuY3Rpb24gaSh2YWx1ZSkge1xuICAgIHJldHVybiB2YWx1ZSArIEVuY29kZS5TRVBBUkFUT1I7XG59XG5mdW5jdGlvbiBkMSh2YWx1ZSkge1xuICAgIHJldHVybiB2YWx1ZS50b0ZpeGVkKDEpICsgRW5jb2RlLlNFUEFSQVRPUjtcbn1cbmZ1bmN0aW9uIGQyKHZhbHVlKSB7XG4gICAgcmV0dXJuIHZhbHVlLnRvRml4ZWQoMikgKyBFbmNvZGUuU0VQQVJBVE9SO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9RW5jb2RlLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/reality-space/lib/src/common/reality/Encode.js\n");

/***/ }),

/***/ "./node_modules/reality-space/lib/src/common/reality/RealityClient.js":
/*!****************************************************************************!*\
  !*** ./node_modules/reality-space/lib/src/common/reality/RealityClient.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Encode_1 = __webpack_require__(/*! ./Encode */ \"./node_modules/reality-space/lib/src/common/reality/Encode.js\");\nconst StorageClient_1 = __webpack_require__(/*! ./StorageClient */ \"./node_modules/reality-space/lib/src/common/reality/StorageClient.js\");\nconst Decode_1 = __webpack_require__(/*! ./Decode */ \"./node_modules/reality-space/lib/src/common/reality/Decode.js\");\nconst parser_1 = __webpack_require__(/*! ../../node/util/parser */ \"./node_modules/reality-space/lib/src/node/util/parser.js\");\nconst xml_js_1 = __webpack_require__(/*! xml-js */ \"./node_modules/xml-js/lib/index.js\");\nconst uuid = __webpack_require__(/*! uuid */ \"./node_modules/uuid/index.js\");\nclass RealityClient {\n    constructor(spaceName, region, url, apiUrl, assetUrl, idToken) {\n        this.js2xmlOptions = { fullTagEmptyElement: true, spaces: 4 };\n        this.ws = undefined;\n        this.connected = false;\n        this.loadEntities = true;\n        this.newWebSocket = (url, protocol) => { return new WebSocket(url, protocol); };\n        // Events.\n        this.onClose = () => { };\n        this.onReceive = (message) => { };\n        this.onStoredRootEntityReceived = (sid, entityXml) => { };\n        this.onStoredChildEntityReceived = (parentSid, sid, entityXml) => { };\n        this.onStoredEntityRemoved = (sid) => { };\n        this.onLoaded = () => { };\n        this.spaceName = spaceName;\n        this.region = region;\n        this.url = url;\n        this.apiUrl = apiUrl;\n        this.assetUrl = assetUrl;\n        this.idToken = idToken;\n        this.storageClient = new StorageClient_1.StorageClient(spaceName, region, apiUrl, assetUrl, idToken);\n    }\n    isConnected() {\n        return this.connected;\n    }\n    connect() {\n        if (this.connected) {\n            throw new Error(\"reality client - error already connected.\");\n        }\n        this.connected = false;\n        return new Promise((resolve, reject) => {\n            try {\n                this.ws = this.newWebSocket(this.url, 'ds-v1.0');\n                this.ws.onerror = (error) => {\n                    this.connected = false;\n                    console.warn(\"reality client - error in client ws connection\", error);\n                    reject(error);\n                };\n                this.ws.onclose = () => {\n                    this.connected = false;\n                    this.onClose();\n                };\n                this.ws.onopen = () => __awaiter(this, void 0, void 0, function* () {\n                    yield this.send(Encode_1.Encode.login(uuid.v4().toString(), this.idToken, this.spaceName, this.region));\n                });\n                this.ws.onmessage = (message) => __awaiter(this, void 0, void 0, function* () {\n                    if (message.data.startsWith(Encode_1.Encode.LOGIN_RESPONSE + \"|\")) {\n                        const parts = message.data.split(Encode_1.Encode.SEPARATOR);\n                        const m = Decode_1.Decode.loginResponse(parts);\n                        const loginRequestId = m[0];\n                        const error = m[1];\n                        if (error) {\n                            console.warn(\"reality client - region login failed to \" + this.spaceName + \"/\" + this.region + \" login request ID: \" + loginRequestId + \" error: \" + error);\n                            reject(new Error(error));\n                            return;\n                        }\n                        else {\n                            console.log(\"reality client - region login success to \" + this.spaceName + \"/\" + this.region + \" login request ID: \" + loginRequestId);\n                            this.connected = true;\n                            resolve();\n                            if (this.loadEntities) {\n                                yield this.loadStoredEntities();\n                            }\n                            return;\n                        }\n                    }\n                    // Process storage notifications internally.\n                    if (message.data.startsWith(Encode_1.Encode.NOTIFIED + \"|\" + Encode_1.Encode.NOTIFICATION_STORED_ROOT_ENTITIES_CHANGED + \"|\") ||\n                        message.data.startsWith(Encode_1.Encode.NOTIFIED + \"|\" + Encode_1.Encode.NOTIFICATION_STORED_CHILD_ENTITIES_CHANGED + \"|\") ||\n                        message.data.startsWith(Encode_1.Encode.NOTIFIED + \"|\" + Encode_1.Encode.NOTIFICATION_STORED_ENTITIES_REMOVED + \"|\")) {\n                        if (yield this.handleActions(message.data)) {\n                            return;\n                        }\n                    }\n                    this.onReceive(message.data);\n                });\n            }\n            catch (error) {\n                console.warn(\"reality client - error in client ws connect\", error);\n                reject(error);\n            }\n        });\n    }\n    close() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n        }\n    }\n    send(message) {\n        this.ws.send(message);\n    }\n    add(id, x, y, z, rx, ry, rz, rw, description, type) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.send(Encode_1.Encode.add(id, x, y, z, rx, ry, rz, rw, description, type));\n        });\n    }\n    update(id, x, y, z, rx, ry, rz, rw) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.send(Encode_1.Encode.update(id, x, y, z, rx, ry, rz, rw));\n        });\n    }\n    remove(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.send(Encode_1.Encode.remove(id));\n        });\n    }\n    describe(id, description) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.send(Encode_1.Encode.describe(id, description));\n        });\n    }\n    act(id, action, description) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.send(Encode_1.Encode.act(id, action, description));\n        });\n    }\n    notify(notification, description) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.send(Encode_1.Encode.notify(notification, description));\n        });\n    }\n    storeEntities(entitiesXml) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const savedEntitiesXml = yield this.storageClient.saveRootEntities(entitiesXml);\n            const sids = parser_1.parseRootSids(savedEntitiesXml);\n            yield this.notify(Encode_1.Encode.NOTIFICATION_STORED_ROOT_ENTITIES_CHANGED, sids.toString());\n        });\n    }\n    storeChildEntities(parentSid, entitiesXml) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const savedEntitiesXml = yield this.storageClient.saveChildEntities(parentSid, entitiesXml);\n            const sids = parser_1.parseRootSids(savedEntitiesXml);\n            yield this.notify(Encode_1.Encode.NOTIFICATION_STORED_CHILD_ENTITIES_CHANGED, [parentSid].concat(sids).toString());\n        });\n    }\n    removeStoredEntities(sids) {\n        return __awaiter(this, void 0, void 0, function* () {\n            for (let sid of sids) {\n                yield this.storageClient.removeEntity(sid);\n            }\n            yield this.notify(Encode_1.Encode.NOTIFICATION_STORED_ENTITIES_REMOVED, sids.toString());\n        });\n    }\n    handleActions(message) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const parts = message.split(Encode_1.Encode.SEPARATOR);\n            const m = Decode_1.Decode.notified(parts);\n            const notification = m[0];\n            const description = m[1];\n            const sids = description.split(',');\n            if (notification == Encode_1.Encode.NOTIFICATION_STORED_ROOT_ENTITIES_CHANGED) {\n                yield this.handleStoredRootEntityChanged(sids);\n                return true;\n            }\n            if (notification == Encode_1.Encode.NOTIFICATION_STORED_CHILD_ENTITIES_CHANGED) {\n                yield this.handleStoredChildEntityChanged(sids[0], sids.splice(1));\n                return true;\n            }\n            if (notification == Encode_1.Encode.NOTIFICATION_STORED_ENTITIES_REMOVED) {\n                yield this.handleStoredEntityRemoved(sids);\n                return true;\n            }\n            return false;\n        });\n    }\n    loadStoredEntities() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const entitiesXml = yield this.storageClient.getRootEntitiesFromCdn();\n            if (entitiesXml) {\n                const entities = parser_1.parseFragment(entitiesXml);\n                for (let element of entities.elements) {\n                    const sid = element.attributes.sid;\n                    if (this.isConnected()) {\n                        this.onStoredRootEntityReceived(sid, xml_js_1.js2xml({ elements: [element] }, this.js2xmlOptions));\n                    }\n                }\n            }\n            if (this.isConnected()) {\n                this.onLoaded();\n            }\n        });\n    }\n    handleStoredRootEntityChanged(sids) {\n        return __awaiter(this, void 0, void 0, function* () {\n            for (let sid of sids) {\n                const entityXml = yield this.storageClient.getEntity(sid);\n                if (entityXml) {\n                    const elements = xml_js_1.xml2js(entityXml).elements;\n                    const sid = elements[0].attributes.sid;\n                    if (this.isConnected()) {\n                        this.onStoredRootEntityReceived(sid, entityXml);\n                    }\n                }\n            }\n        });\n    }\n    handleStoredChildEntityChanged(parentSid, sids) {\n        return __awaiter(this, void 0, void 0, function* () {\n            for (let sid of sids) {\n                const entityXml = yield this.storageClient.getEntity(sid);\n                if (entityXml) {\n                    const elements = xml_js_1.xml2js(entityXml).elements;\n                    const sid = elements[0].attributes.sid;\n                    if (this.isConnected()) {\n                        this.onStoredChildEntityReceived(parentSid, sid, entityXml);\n                    }\n                }\n            }\n        });\n    }\n    handleStoredEntityRemoved(sids) {\n        return __awaiter(this, void 0, void 0, function* () {\n            for (let sid of sids) {\n                if (!(yield this.storageClient.getEntity(sid))) {\n                    this.onStoredEntityRemoved(sid);\n                }\n            }\n        });\n    }\n}\nexports.RealityClient = RealityClient;\n//# sourceMappingURL=RealityClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/reality-space/lib/src/common/reality/RealityClient.js\n");

/***/ }),

/***/ "./node_modules/reality-space/lib/src/common/reality/StorageClient.js":
/*!****************************************************************************!*\
  !*** ./node_modules/reality-space/lib/src/common/reality/StorageClient.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst uuid = __webpack_require__(/*! uuid */ \"./node_modules/uuid/index.js\");\nconst GroupMember_1 = __webpack_require__(/*! ./api/GroupMember */ \"./node_modules/reality-space/lib/src/common/reality/api/GroupMember.js\");\nconst GroupPrivilege_1 = __webpack_require__(/*! ./api/GroupPrivilege */ \"./node_modules/reality-space/lib/src/common/reality/api/GroupPrivilege.js\");\nconst UserPrivilege_1 = __webpack_require__(/*! ./api/UserPrivilege */ \"./node_modules/reality-space/lib/src/common/reality/api/UserPrivilege.js\");\nconst DocumentController_1 = __webpack_require__(/*! ../../node/storage/DocumentController */ \"./node_modules/reality-space/lib/src/node/storage/DocumentController.js\");\nclass StorageClient {\n    constructor(spaceName, region, storageUrl, cdnUrl, idToken) {\n        this.spaceName = spaceName;\n        this.region = region;\n        this.storageUrl = storageUrl;\n        this.cdnUrl = cdnUrl;\n        this.idToken = idToken;\n    }\n    getRootEntitiesFromCdn() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const entitiesXmlUrl = this.cdnUrl + \"spaces/\" + this.spaceName + \"/regions/\" + this.region + \"/entities.xml\";\n            const response = (yield fetch(entitiesXmlUrl, {\n                method: \"GET\",\n                headers: { \"Authorization\": \"Bearer \" + this.idToken, \"Request-ID\": uuid.v4() }\n            }));\n            if (response.status != 200) {\n                console.log(\"Error loading stored entities from assets \" + entitiesXmlUrl + \" : \" + response.status.toString());\n                return DocumentController_1.DocumentController.EMPTY_FRAGMENT;\n            }\n            return yield response.text();\n        });\n    }\n    getRootEntities() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.getText(yield this.request(\"GET\", \"/entities\", [200]));\n        });\n    }\n    ;\n    getEntity(sid) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.getText(yield this.request(\"GET\", \"/entities/\" + sid, [200, 404]));\n        });\n    }\n    saveRootEntities(fragmentXml) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.getText(yield this.requestWithTextBody(\"POST\", \"/entities\", fragmentXml, [200]));\n        });\n    }\n    saveChildEntities(parentSid, fragmentXml) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.getText(yield this.requestWithTextBody(\"POST\", \"/entities/\" + parentSid + \"/entities\", fragmentXml, [200]));\n        });\n    }\n    removeEntity(sid) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.request(\"DELETE\", \"/entities/\" + sid, [200]);\n        });\n    }\n    getUsers() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.parse(yield this.request(\"GET\", \"/users\", [200]));\n        });\n    }\n    ;\n    getUser(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.parseOptional(yield this.request(\"GET\", \"/users/\" + id, [200, 404]));\n        });\n    }\n    addUser(user) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.parse(yield this.requestWithBody(\"POST\", \"/users\", user, [200]));\n        });\n    }\n    updateUser(user) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.parse(yield this.requestWithBody(\"PUT\", \"/users/\" + user.id, user, [200]));\n        });\n    }\n    removeUser(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.request(\"DELETE\", \"/users/\" + id, [200]);\n        });\n    }\n    getGroups() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.parse(yield this.request(\"GET\", \"/groups\", [200]));\n        });\n    }\n    ;\n    getGroup(name) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.parseOptional(yield this.request(\"GET\", \"/groups/\" + name, [200, 404]));\n        });\n    }\n    addGroup(group) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.parse(yield this.requestWithBody(\"POST\", \"/groups\", group, [200]));\n        });\n    }\n    removeGroup(name) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.request(\"DELETE\", \"/groups/\" + name, [200]);\n        });\n    }\n    addGroupMember(groupName, userId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.parse(yield this.requestWithBody(\"POST\", \"/groups/\" + groupName + \"/members\", new GroupMember_1.GroupMember(groupName, userId), [200]));\n        });\n    }\n    removeGroupMember(groupName, userId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.request(\"DELETE\", \"/groups/\" + groupName + \"/members/\" + userId, [200]);\n        });\n    }\n    getUserPrivileges(userId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.parse(yield this.request(\"GET\", \"/users/\" + userId + \"/privileges\", [200]));\n        });\n    }\n    getGroupPrivileges(name) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.parse(yield this.request(\"GET\", \"/groups/\" + name + \"/privileges\", [200]));\n        });\n    }\n    setUserPrivilege(userId, sid, type) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.parse(yield this.requestWithBody(\"POST\", \"/users/\" + userId + \"/privileges\", new UserPrivilege_1.UserPrivilege(type, userId, sid), [200]));\n        });\n    }\n    setGroupPrivilege(groupName, sid, type) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.parse(yield this.requestWithBody(\"POST\", \"/groups/\" + groupName + \"/privileges\", new GroupPrivilege_1.GroupPrivilege(type, groupName, sid), [200]));\n        });\n    }\n    removeUserPrivilege(userId, sid) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.request(\"DELETE\", \"/users/\" + userId + \"/privileges/\" + sid, [200]);\n        });\n    }\n    removeGroupPrivilege(groupName, sid) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.request(\"DELETE\", \"/groups/\" + groupName + \"/privileges/\" + sid, [200]);\n        });\n    }\n    listAssets(category) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.parseOptional(yield this.request(\"GET\", \"/assets/\" + category, [200]));\n        });\n    }\n    ;\n    saveAsset(category, fileName, readableStream) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.requestWithReadableStreamBody(\"POST\", \"/assets/\" + category + \"/\" + fileName, readableStream, [200]);\n        });\n    }\n    saveAssetBuffer(category, fileName, buffer, mimeType) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.requestWithBlobBody(\"POST\", \"/assets/\" + category + \"/\" + fileName, buffer, mimeType, [200]);\n        });\n    }\n    getAsset(category, fileName) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.request(\"GET\", \"/assets/\" + category + \"/\" + fileName, [200, 404]);\n            return yield this.getReadableStream(response);\n        });\n    }\n    getAssetBuffer(category, fileName) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this.getBuffer(\"/assets/\" + category + \"/\" + fileName);\n        });\n    }\n    removeAsset(category, fileName) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.request(\"DELETE\", \"/assets/\" + category + \"/\" + fileName, [200]);\n        });\n    }\n    listUserFiles(category) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.parseOptional(yield this.request(\"GET\", \"/user-files/\" + category, [200]));\n        });\n    }\n    ;\n    saveUserFile(category, fileName, readableStream) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.requestWithReadableStreamBody(\"POST\", \"/user-files/\" + category + \"/\" + fileName, readableStream, [200]);\n        });\n    }\n    saveUserFileBuffer(category, fileName, buffer, mimeType) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.requestWithBlobBody(\"POST\", \"/user-files/\" + category + \"/\" + fileName, buffer, mimeType, [200]);\n        });\n    }\n    getUserFile(category, fileName) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.request(\"GET\", \"/user-files/\" + category + \"/\" + fileName, [200, 404]);\n            return yield this.getReadableStream(response);\n        });\n    }\n    getUserFileBuffer(category, fileName) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this.getBuffer(\"/user-files/\" + category + \"/\" + fileName);\n        });\n    }\n    removeUserFile(category, fileName) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.request(\"DELETE\", \"/user-files/\" + category + \"/\" + fileName, [200]);\n        });\n    }\n    getBuffer(url) {\n        return new Promise((resolve, reject) => {\n            this.request(\"GET\", url, [200, 404]).then((response) => {\n                response.blob().then((blob) => {\n                    const reader = new FileReader();\n                    reader.addEventListener(\"loadend\", function () {\n                    });\n                    reader.onloadend = () => {\n                        resolve(reader.result);\n                    };\n                    reader.onerror = () => {\n                        reject(new Error(\"Failed to read blob from result.\"));\n                    };\n                    reader.readAsArrayBuffer(blob);\n                }).catch((err) => {\n                    reject(err);\n                });\n            }).catch((err) => {\n                reject(err);\n            });\n        });\n    }\n    request(method, path, successStatuses) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = (yield fetch(this.storageUrl + \"spaces/\" + this.spaceName + \"/regions/\" + this.region + path, {\n                method: method,\n                headers: { \"Authorization\": \"Bearer \" + this.idToken, \"Request-ID\": uuid.v4() }\n            }));\n            if (successStatuses.indexOf(response.status) == -1) {\n                throw new Error(response.status.toString());\n            }\n            return response;\n        });\n    }\n    requestWithBody(method, path, body, successStatuses) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = (yield fetch(this.storageUrl + \"spaces/\" + this.spaceName + \"/regions/\" + this.region + path, {\n                method: method,\n                headers: { \"Authorization\": \"Bearer \" + this.idToken, \"Request-ID\": uuid.v4() },\n                body: JSON.stringify(body)\n            }));\n            if (successStatuses.indexOf(response.status) == -1) {\n                throw new Error(response.status.toString());\n            }\n            return response;\n        });\n    }\n    requestWithTextBody(method, path, body, successStatuses) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = (yield fetch(this.storageUrl + \"spaces/\" + this.spaceName + \"/regions/\" + this.region + path, {\n                method: method,\n                headers: { \"Authorization\": \"Bearer \" + this.idToken, \"Request-ID\": uuid.v4() },\n                body: body\n            }));\n            if (successStatuses.indexOf(response.status) == -1) {\n                throw new Error(response.status.toString());\n            }\n            return response;\n        });\n    }\n    requestWithReadableStreamBody(method, path, readableStream, successStatuses) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //const blob = new Blob([body], {type : 'application/text'});\n            const response = (yield fetch(this.storageUrl + \"spaces/\" + this.spaceName + \"/regions/\" + this.region + path, {\n                method: method,\n                headers: { \"Authorization\": \"Bearer \" + this.idToken, \"Request-ID\": uuid.v4() },\n                body: readableStream\n            }));\n            if (successStatuses.indexOf(response.status) == -1) {\n                throw new Error(response.status.toString());\n            }\n            return response;\n        });\n    }\n    requestWithBlobBody(method, path, buffer, mimeType, successStatuses) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const blob = new Blob([buffer], { type: 'application/json' });\n            const response = (yield fetch(this.storageUrl + \"spaces/\" + this.spaceName + \"/regions/\" + this.region + path, {\n                method: method,\n                headers: { \"Authorization\": \"Bearer \" + this.idToken, \"Request-ID\": uuid.v4() },\n                body: blob\n            }));\n            if (successStatuses.indexOf(response.status) == -1) {\n                throw new Error(response.status.toString());\n            }\n            return response;\n        });\n    }\n    parse(response) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield response.json();\n        });\n    }\n    parseOptional(response) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (response.status == 404) {\n                return undefined;\n            }\n            else {\n                return yield response.json();\n            }\n        });\n    }\n    getReadableStream(response) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (response.status == 404) {\n                return undefined;\n            }\n            else {\n                return yield response.body;\n            }\n        });\n    }\n    getText(response) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield response.text();\n        });\n    }\n}\nexports.StorageClient = StorageClient;\n//# sourceMappingURL=StorageClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/reality-space/lib/src/common/reality/StorageClient.js\n");

/***/ }),

/***/ "./node_modules/reality-space/lib/src/common/reality/api/GroupMember.js":
/*!******************************************************************************!*\
  !*** ./node_modules/reality-space/lib/src/common/reality/api/GroupMember.js ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass GroupMember {\n    constructor(groupName, userId) {\n        this.groupName = groupName;\n        this.userId = userId;\n    }\n}\nexports.GroupMember = GroupMember;\n//# sourceMappingURL=GroupMember.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhbGl0eS1zcGFjZS9saWIvc3JjL2NvbW1vbi9yZWFsaXR5L2FwaS9Hcm91cE1lbWJlci5qcz9hNmUxIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQThDLGNBQWM7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9yZWFsaXR5LXNwYWNlL2xpYi9zcmMvY29tbW9uL3JlYWxpdHkvYXBpL0dyb3VwTWVtYmVyLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jbGFzcyBHcm91cE1lbWJlciB7XG4gICAgY29uc3RydWN0b3IoZ3JvdXBOYW1lLCB1c2VySWQpIHtcbiAgICAgICAgdGhpcy5ncm91cE5hbWUgPSBncm91cE5hbWU7XG4gICAgICAgIHRoaXMudXNlcklkID0gdXNlcklkO1xuICAgIH1cbn1cbmV4cG9ydHMuR3JvdXBNZW1iZXIgPSBHcm91cE1lbWJlcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUdyb3VwTWVtYmVyLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/reality-space/lib/src/common/reality/api/GroupMember.js\n");

/***/ }),

/***/ "./node_modules/reality-space/lib/src/common/reality/api/GroupPrivilege.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/reality-space/lib/src/common/reality/api/GroupPrivilege.js ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass GroupPrivilege {\n    constructor(type, name, sid) {\n        this.type = type;\n        this.name = name;\n        this.sid = sid;\n    }\n}\nexports.GroupPrivilege = GroupPrivilege;\n//# sourceMappingURL=GroupPrivilege.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhbGl0eS1zcGFjZS9saWIvc3JjL2NvbW1vbi9yZWFsaXR5L2FwaS9Hcm91cFByaXZpbGVnZS5qcz9jZmRjIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQThDLGNBQWM7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL3JlYWxpdHktc3BhY2UvbGliL3NyYy9jb21tb24vcmVhbGl0eS9hcGkvR3JvdXBQcml2aWxlZ2UuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNsYXNzIEdyb3VwUHJpdmlsZWdlIHtcbiAgICBjb25zdHJ1Y3Rvcih0eXBlLCBuYW1lLCBzaWQpIHtcbiAgICAgICAgdGhpcy50eXBlID0gdHlwZTtcbiAgICAgICAgdGhpcy5uYW1lID0gbmFtZTtcbiAgICAgICAgdGhpcy5zaWQgPSBzaWQ7XG4gICAgfVxufVxuZXhwb3J0cy5Hcm91cFByaXZpbGVnZSA9IEdyb3VwUHJpdmlsZWdlO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9R3JvdXBQcml2aWxlZ2UuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/reality-space/lib/src/common/reality/api/GroupPrivilege.js\n");

/***/ }),

/***/ "./node_modules/reality-space/lib/src/common/reality/api/UserPrivilege.js":
/*!********************************************************************************!*\
  !*** ./node_modules/reality-space/lib/src/common/reality/api/UserPrivilege.js ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass UserPrivilege {\n    constructor(type, userId, sid) {\n        this.type = type;\n        this.userId = userId;\n        this.sid = sid;\n    }\n}\nexports.UserPrivilege = UserPrivilege;\n//# sourceMappingURL=UserPrivilege.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhbGl0eS1zcGFjZS9saWIvc3JjL2NvbW1vbi9yZWFsaXR5L2FwaS9Vc2VyUHJpdmlsZWdlLmpzPzAwY2YiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBOEMsY0FBYztBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhbGl0eS1zcGFjZS9saWIvc3JjL2NvbW1vbi9yZWFsaXR5L2FwaS9Vc2VyUHJpdmlsZWdlLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jbGFzcyBVc2VyUHJpdmlsZWdlIHtcbiAgICBjb25zdHJ1Y3Rvcih0eXBlLCB1c2VySWQsIHNpZCkge1xuICAgICAgICB0aGlzLnR5cGUgPSB0eXBlO1xuICAgICAgICB0aGlzLnVzZXJJZCA9IHVzZXJJZDtcbiAgICAgICAgdGhpcy5zaWQgPSBzaWQ7XG4gICAgfVxufVxuZXhwb3J0cy5Vc2VyUHJpdmlsZWdlID0gVXNlclByaXZpbGVnZTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVVzZXJQcml2aWxlZ2UuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/reality-space/lib/src/common/reality/api/UserPrivilege.js\n");

/***/ }),

/***/ "./node_modules/reality-space/lib/src/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/reality-space/lib/src/index.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar RealityClient_1 = __webpack_require__(/*! ./common/reality/RealityClient */ \"./node_modules/reality-space/lib/src/common/reality/RealityClient.js\");\nexports.RealityClient = RealityClient_1.RealityClient;\nvar ClusterClient_1 = __webpack_require__(/*! ./common/reality/ClusterClient */ \"./node_modules/reality-space/lib/src/common/reality/ClusterClient.js\");\nexports.ClusterClient = ClusterClient_1.ClusterClient;\nvar Encode_1 = __webpack_require__(/*! ./common/reality/Encode */ \"./node_modules/reality-space/lib/src/common/reality/Encode.js\");\nexports.Encode = Encode_1.Encode;\nvar Decode_1 = __webpack_require__(/*! ./common/reality/Decode */ \"./node_modules/reality-space/lib/src/common/reality/Decode.js\");\nexports.Decode = Decode_1.Decode;\nvar Configuration_1 = __webpack_require__(/*! ./common/reality/Configuration */ \"./node_modules/reality-space/lib/src/common/reality/Configuration.js\");\nexports.IdTokenIssuer = Configuration_1.IdTokenIssuer;\nexports.getClusterConfiguration = Configuration_1.getClusterConfiguration;\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhbGl0eS1zcGFjZS9saWIvc3JjL2luZGV4LmpzPzczMTMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBOEMsY0FBYztBQUM1RCxzQkFBc0IsbUJBQU8sQ0FBQyw0R0FBZ0M7QUFDOUQ7QUFDQSxzQkFBc0IsbUJBQU8sQ0FBQyw0R0FBZ0M7QUFDOUQ7QUFDQSxlQUFlLG1CQUFPLENBQUMsOEZBQXlCO0FBQ2hEO0FBQ0EsZUFBZSxtQkFBTyxDQUFDLDhGQUF5QjtBQUNoRDtBQUNBLHNCQUFzQixtQkFBTyxDQUFDLDRHQUFnQztBQUM5RDtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhbGl0eS1zcGFjZS9saWIvc3JjL2luZGV4LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgUmVhbGl0eUNsaWVudF8xID0gcmVxdWlyZShcIi4vY29tbW9uL3JlYWxpdHkvUmVhbGl0eUNsaWVudFwiKTtcbmV4cG9ydHMuUmVhbGl0eUNsaWVudCA9IFJlYWxpdHlDbGllbnRfMS5SZWFsaXR5Q2xpZW50O1xudmFyIENsdXN0ZXJDbGllbnRfMSA9IHJlcXVpcmUoXCIuL2NvbW1vbi9yZWFsaXR5L0NsdXN0ZXJDbGllbnRcIik7XG5leHBvcnRzLkNsdXN0ZXJDbGllbnQgPSBDbHVzdGVyQ2xpZW50XzEuQ2x1c3RlckNsaWVudDtcbnZhciBFbmNvZGVfMSA9IHJlcXVpcmUoXCIuL2NvbW1vbi9yZWFsaXR5L0VuY29kZVwiKTtcbmV4cG9ydHMuRW5jb2RlID0gRW5jb2RlXzEuRW5jb2RlO1xudmFyIERlY29kZV8xID0gcmVxdWlyZShcIi4vY29tbW9uL3JlYWxpdHkvRGVjb2RlXCIpO1xuZXhwb3J0cy5EZWNvZGUgPSBEZWNvZGVfMS5EZWNvZGU7XG52YXIgQ29uZmlndXJhdGlvbl8xID0gcmVxdWlyZShcIi4vY29tbW9uL3JlYWxpdHkvQ29uZmlndXJhdGlvblwiKTtcbmV4cG9ydHMuSWRUb2tlbklzc3VlciA9IENvbmZpZ3VyYXRpb25fMS5JZFRva2VuSXNzdWVyO1xuZXhwb3J0cy5nZXRDbHVzdGVyQ29uZmlndXJhdGlvbiA9IENvbmZpZ3VyYXRpb25fMS5nZXRDbHVzdGVyQ29uZmlndXJhdGlvbjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/reality-space/lib/src/index.js\n");

/***/ }),

/***/ "./node_modules/reality-space/lib/src/node/storage/DocumentController.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/reality-space/lib/src/node/storage/DocumentController.js ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst xml_js_1 = __webpack_require__(/*! xml-js */ \"./node_modules/xml-js/lib/index.js\");\nconst Fragment_1 = __webpack_require__(/*! ./model/Fragment */ \"./node_modules/reality-space/lib/src/node/storage/model/Fragment.js\");\nconst uuid = __webpack_require__(/*! uuid */ \"./node_modules/uuid/index.js\");\nconst FragmentElement_1 = __webpack_require__(/*! ./model/FragmentElement */ \"./node_modules/reality-space/lib/src/node/storage/model/FragmentElement.js\");\nclass DocumentController {\n    constructor(sanitizer) {\n        this.js2xmlOptions = { fullTagEmptyElement: true, spaces: 4 };\n        this.elements = new Map();\n        this.sanitizer = sanitizer;\n        this.document = this.parse(DocumentController.EMPTY_FRAGMENT);\n    }\n    clear() {\n        this.elements.clear();\n        this.document = this.parse(DocumentController.EMPTY_FRAGMENT);\n        console.log(\"reality server - document controller cleared.\");\n    }\n    putRootElements(fragmentXml) {\n        if (!fragmentXml) {\n            throw new Error(\"Fragment can not be empty.\");\n        }\n        const fragment = this.parse(fragmentXml);\n        if (fragment.rootElement.name != DocumentController.FRAGMENT_ROOT_ELEMENT) {\n            throw Error(\"Invalid root element name: \" + fragment.rootElement.name);\n        }\n        const elements = fragment.elements;\n        elements.forEach(e => {\n            this.saveElement(this.document.rootElement, e, true);\n        });\n        return xml_js_1.js2xml(fragment.container, this.js2xmlOptions);\n    }\n    putChildElements(parentSid, fragmentXml) {\n        if (!parentSid) {\n            throw new Error(\"Parent sid is undefined.\");\n        }\n        if (!this.elements.has(parentSid)) {\n            throw new Error(\"Parent element does not exist.\");\n        }\n        if (!fragmentXml) {\n            throw new Error(\"Fragment can not be empty.\");\n        }\n        const parentElement = this.elements.get(parentSid);\n        const fragment = this.parse(fragmentXml);\n        if (fragment.rootElement.name != DocumentController.FRAGMENT_ROOT_ELEMENT) {\n            throw Error(\"Invalid root element name: \" + fragment.rootElement.name);\n        }\n        const elements = fragment.elements;\n        //this.saveElements(elements);\n        elements.forEach(e => {\n            this.saveElement(parentElement.element, e, true);\n        });\n        return xml_js_1.js2xml(fragment.container, this.js2xmlOptions);\n    }\n    remove(sid) {\n        if (!sid) {\n            throw new Error(\"Element sid is undefined.\");\n        }\n        if (!this.elements.has(sid)) {\n            throw new Error(\"Element does not exist.\");\n        }\n        const element = this.elements.get(sid);\n        this.removeElement(element.element);\n    }\n    getDocument() {\n        return xml_js_1.js2xml(this.document.container, this.js2xmlOptions);\n    }\n    hasElement(sid) {\n        return this.elements.has(sid);\n    }\n    getElement(sid) {\n        if (!sid) {\n            throw new Error(\"Element sid is undefined.\");\n        }\n        if (!this.elements.has(sid)) {\n            throw new Error(\"Element does not exist.\");\n        }\n        const element = this.elements.get(sid);\n        return xml_js_1.js2xml({ elements: [element.element] }, this.js2xmlOptions);\n    }\n    serialize() {\n        return xml_js_1.js2xml(this.document.container, this.js2xmlOptions);\n    }\n    deserialize(documentXml) {\n        this.document = this.parse(documentXml);\n        this.elements.clear();\n        this.document.elements.forEach(entity => {\n            this.elements.set(entity.attributes.sid, new FragmentElement_1.FragmentElement(this.document.rootElement, entity));\n        });\n    }\n    saveElement(parent, element, addToParent) {\n        if (!element.attributes) {\n            element.attributes = {};\n        }\n        if (!element.attributes.sid) {\n            element.attributes.sid = uuid.v4().toString();\n        }\n        const sid = element.attributes.sid;\n        if (this.elements.has(sid)) {\n            const existingElement = this.elements.get(sid);\n            existingElement.parent.elements.splice(existingElement.parent.elements.indexOf(existingElement.element), 1);\n            existingElement.parent.elements.push(element);\n        }\n        else {\n            // Only top elements need to be explicitely added as children are already part of tree\n            if (addToParent) {\n                if (!parent.elements) {\n                    parent.elements = [];\n                }\n                parent.elements.push(element);\n            }\n        }\n        this.elements.set(sid, new FragmentElement_1.FragmentElement(parent, element));\n        if (element.elements) {\n            // Recursively save children.\n            element.elements.forEach(child => this.saveElement(element, child, false));\n        }\n    }\n    removeElement(element) {\n        if (element.attributes && element.attributes.sid) {\n            const sid = element.attributes.sid;\n            //console.log(\"Removed: \" + sid);\n            if (this.elements.has(sid)) {\n                const existingElement = this.elements.get(sid);\n                existingElement.parent.elements.splice(existingElement.parent.elements.indexOf(existingElement.element), 1);\n                this.elements.delete(sid);\n            }\n        }\n        if (element.elements) {\n            // Recursively remove children.\n            element.elements.forEach(child => this.removeElement(child));\n        }\n    }\n    parse(xml) {\n        let container = xml_js_1.xml2js(xml);\n        this.sanitizer.sanitizeElements(container.elements);\n        let rootElement = container.elements[0];\n        if (!rootElement.elements) {\n            rootElement.elements = [];\n        }\n        let entities = rootElement.elements;\n        return new Fragment_1.Fragment(container, rootElement, entities);\n    }\n}\nDocumentController.FRAGMENT_ROOT_ELEMENT = \"a-entities\";\nDocumentController.EMPTY_FRAGMENT = '<' + DocumentController.FRAGMENT_ROOT_ELEMENT + '></' + DocumentController.FRAGMENT_ROOT_ELEMENT + '>';\nexports.DocumentController = DocumentController;\n//# sourceMappingURL=DocumentController.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/reality-space/lib/src/node/storage/DocumentController.js\n");

/***/ }),

/***/ "./node_modules/reality-space/lib/src/node/storage/model/Fragment.js":
/*!***************************************************************************!*\
  !*** ./node_modules/reality-space/lib/src/node/storage/model/Fragment.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass Fragment {\n    constructor(container, rootElement, entities) {\n        this.container = container;\n        this.rootElement = rootElement;\n        this.elements = entities;\n    }\n}\nexports.Fragment = Fragment;\n//# sourceMappingURL=Fragment.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhbGl0eS1zcGFjZS9saWIvc3JjL25vZGUvc3RvcmFnZS9tb2RlbC9GcmFnbWVudC5qcz8wNjgxIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQThDLGNBQWM7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL3JlYWxpdHktc3BhY2UvbGliL3NyYy9ub2RlL3N0b3JhZ2UvbW9kZWwvRnJhZ21lbnQuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNsYXNzIEZyYWdtZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihjb250YWluZXIsIHJvb3RFbGVtZW50LCBlbnRpdGllcykge1xuICAgICAgICB0aGlzLmNvbnRhaW5lciA9IGNvbnRhaW5lcjtcbiAgICAgICAgdGhpcy5yb290RWxlbWVudCA9IHJvb3RFbGVtZW50O1xuICAgICAgICB0aGlzLmVsZW1lbnRzID0gZW50aXRpZXM7XG4gICAgfVxufVxuZXhwb3J0cy5GcmFnbWVudCA9IEZyYWdtZW50O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9RnJhZ21lbnQuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/reality-space/lib/src/node/storage/model/Fragment.js\n");

/***/ }),

/***/ "./node_modules/reality-space/lib/src/node/storage/model/FragmentElement.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/reality-space/lib/src/node/storage/model/FragmentElement.js ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass FragmentElement {\n    constructor(parent, element) {\n        this.parent = parent;\n        this.element = element;\n    }\n}\nexports.FragmentElement = FragmentElement;\n//# sourceMappingURL=FragmentElement.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhbGl0eS1zcGFjZS9saWIvc3JjL25vZGUvc3RvcmFnZS9tb2RlbC9GcmFnbWVudEVsZW1lbnQuanM/ZTBkZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE4QyxjQUFjO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhbGl0eS1zcGFjZS9saWIvc3JjL25vZGUvc3RvcmFnZS9tb2RlbC9GcmFnbWVudEVsZW1lbnQuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNsYXNzIEZyYWdtZW50RWxlbWVudCB7XG4gICAgY29uc3RydWN0b3IocGFyZW50LCBlbGVtZW50KSB7XG4gICAgICAgIHRoaXMucGFyZW50ID0gcGFyZW50O1xuICAgICAgICB0aGlzLmVsZW1lbnQgPSBlbGVtZW50O1xuICAgIH1cbn1cbmV4cG9ydHMuRnJhZ21lbnRFbGVtZW50ID0gRnJhZ21lbnRFbGVtZW50O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9RnJhZ21lbnRFbGVtZW50LmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/reality-space/lib/src/node/storage/model/FragmentElement.js\n");

/***/ }),

/***/ "./node_modules/reality-space/lib/src/node/util/parser.js":
/*!****************************************************************!*\
  !*** ./node_modules/reality-space/lib/src/node/util/parser.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Fragment_1 = __webpack_require__(/*! ../storage/model/Fragment */ \"./node_modules/reality-space/lib/src/node/storage/model/Fragment.js\");\nconst xml_js_1 = __webpack_require__(/*! xml-js */ \"./node_modules/xml-js/lib/index.js\");\nfunction parseFragment(fragmentXml) {\n    let container = xml_js_1.xml2js(fragmentXml);\n    let rootElement = container.elements[0];\n    if (!rootElement.elements) {\n        rootElement.elements = [];\n    }\n    let entities = rootElement.elements;\n    return new Fragment_1.Fragment(container, rootElement, entities);\n}\nexports.parseFragment = parseFragment;\nfunction parseRootSids(entitiesXml) {\n    let container = xml_js_1.xml2js(entitiesXml);\n    let rootElement = container.elements[0];\n    if (!rootElement.elements) {\n        rootElement.elements = [];\n    }\n    let entities = rootElement.elements;\n    return entities.map(entity => entity.attributes.sid);\n}\nexports.parseRootSids = parseRootSids;\n//# sourceMappingURL=parser.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhbGl0eS1zcGFjZS9saWIvc3JjL25vZGUvdXRpbC9wYXJzZXIuanM/ZDVkMCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE4QyxjQUFjO0FBQzVELG1CQUFtQixtQkFBTyxDQUFDLHNHQUEyQjtBQUN0RCxpQkFBaUIsbUJBQU8sQ0FBQyxrREFBUTtBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhbGl0eS1zcGFjZS9saWIvc3JjL25vZGUvdXRpbC9wYXJzZXIuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IEZyYWdtZW50XzEgPSByZXF1aXJlKFwiLi4vc3RvcmFnZS9tb2RlbC9GcmFnbWVudFwiKTtcbmNvbnN0IHhtbF9qc18xID0gcmVxdWlyZShcInhtbC1qc1wiKTtcbmZ1bmN0aW9uIHBhcnNlRnJhZ21lbnQoZnJhZ21lbnRYbWwpIHtcbiAgICBsZXQgY29udGFpbmVyID0geG1sX2pzXzEueG1sMmpzKGZyYWdtZW50WG1sKTtcbiAgICBsZXQgcm9vdEVsZW1lbnQgPSBjb250YWluZXIuZWxlbWVudHNbMF07XG4gICAgaWYgKCFyb290RWxlbWVudC5lbGVtZW50cykge1xuICAgICAgICByb290RWxlbWVudC5lbGVtZW50cyA9IFtdO1xuICAgIH1cbiAgICBsZXQgZW50aXRpZXMgPSByb290RWxlbWVudC5lbGVtZW50cztcbiAgICByZXR1cm4gbmV3IEZyYWdtZW50XzEuRnJhZ21lbnQoY29udGFpbmVyLCByb290RWxlbWVudCwgZW50aXRpZXMpO1xufVxuZXhwb3J0cy5wYXJzZUZyYWdtZW50ID0gcGFyc2VGcmFnbWVudDtcbmZ1bmN0aW9uIHBhcnNlUm9vdFNpZHMoZW50aXRpZXNYbWwpIHtcbiAgICBsZXQgY29udGFpbmVyID0geG1sX2pzXzEueG1sMmpzKGVudGl0aWVzWG1sKTtcbiAgICBsZXQgcm9vdEVsZW1lbnQgPSBjb250YWluZXIuZWxlbWVudHNbMF07XG4gICAgaWYgKCFyb290RWxlbWVudC5lbGVtZW50cykge1xuICAgICAgICByb290RWxlbWVudC5lbGVtZW50cyA9IFtdO1xuICAgIH1cbiAgICBsZXQgZW50aXRpZXMgPSByb290RWxlbWVudC5lbGVtZW50cztcbiAgICByZXR1cm4gZW50aXRpZXMubWFwKGVudGl0eSA9PiBlbnRpdHkuYXR0cmlidXRlcy5zaWQpO1xufVxuZXhwb3J0cy5wYXJzZVJvb3RTaWRzID0gcGFyc2VSb290U2lkcztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBhcnNlci5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/reality-space/lib/src/node/util/parser.js\n");

/***/ }),

/***/ "./node_modules/safe-buffer/index.js":
/*!*******************************************!*\
  !*** ./node_modules/safe-buffer/index.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* eslint-disable node/no-deprecated-api */\nvar buffer = __webpack_require__(/*! buffer */ \"./node_modules/node-libs-browser/node_modules/buffer/index.js\")\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc2FmZS1idWZmZXIvaW5kZXguanM/ODcwNyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBLGFBQWEsbUJBQU8sQ0FBQyw2RUFBUTtBQUM3Qjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9zYWZlLWJ1ZmZlci9pbmRleC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1kaXNhYmxlIG5vZGUvbm8tZGVwcmVjYXRlZC1hcGkgKi9cbnZhciBidWZmZXIgPSByZXF1aXJlKCdidWZmZXInKVxudmFyIEJ1ZmZlciA9IGJ1ZmZlci5CdWZmZXJcblxuLy8gYWx0ZXJuYXRpdmUgdG8gdXNpbmcgT2JqZWN0LmtleXMgZm9yIG9sZCBicm93c2Vyc1xuZnVuY3Rpb24gY29weVByb3BzIChzcmMsIGRzdCkge1xuICBmb3IgKHZhciBrZXkgaW4gc3JjKSB7XG4gICAgZHN0W2tleV0gPSBzcmNba2V5XVxuICB9XG59XG5pZiAoQnVmZmVyLmZyb20gJiYgQnVmZmVyLmFsbG9jICYmIEJ1ZmZlci5hbGxvY1Vuc2FmZSAmJiBCdWZmZXIuYWxsb2NVbnNhZmVTbG93KSB7XG4gIG1vZHVsZS5leHBvcnRzID0gYnVmZmVyXG59IGVsc2Uge1xuICAvLyBDb3B5IHByb3BlcnRpZXMgZnJvbSByZXF1aXJlKCdidWZmZXInKVxuICBjb3B5UHJvcHMoYnVmZmVyLCBleHBvcnRzKVxuICBleHBvcnRzLkJ1ZmZlciA9IFNhZmVCdWZmZXJcbn1cblxuZnVuY3Rpb24gU2FmZUJ1ZmZlciAoYXJnLCBlbmNvZGluZ09yT2Zmc2V0LCBsZW5ndGgpIHtcbiAgcmV0dXJuIEJ1ZmZlcihhcmcsIGVuY29kaW5nT3JPZmZzZXQsIGxlbmd0aClcbn1cblxuLy8gQ29weSBzdGF0aWMgbWV0aG9kcyBmcm9tIEJ1ZmZlclxuY29weVByb3BzKEJ1ZmZlciwgU2FmZUJ1ZmZlcilcblxuU2FmZUJ1ZmZlci5mcm9tID0gZnVuY3Rpb24gKGFyZywgZW5jb2RpbmdPck9mZnNldCwgbGVuZ3RoKSB7XG4gIGlmICh0eXBlb2YgYXJnID09PSAnbnVtYmVyJykge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0FyZ3VtZW50IG11c3Qgbm90IGJlIGEgbnVtYmVyJylcbiAgfVxuICByZXR1cm4gQnVmZmVyKGFyZywgZW5jb2RpbmdPck9mZnNldCwgbGVuZ3RoKVxufVxuXG5TYWZlQnVmZmVyLmFsbG9jID0gZnVuY3Rpb24gKHNpemUsIGZpbGwsIGVuY29kaW5nKSB7XG4gIGlmICh0eXBlb2Ygc2l6ZSAhPT0gJ251bWJlcicpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdBcmd1bWVudCBtdXN0IGJlIGEgbnVtYmVyJylcbiAgfVxuICB2YXIgYnVmID0gQnVmZmVyKHNpemUpXG4gIGlmIChmaWxsICE9PSB1bmRlZmluZWQpIHtcbiAgICBpZiAodHlwZW9mIGVuY29kaW5nID09PSAnc3RyaW5nJykge1xuICAgICAgYnVmLmZpbGwoZmlsbCwgZW5jb2RpbmcpXG4gICAgfSBlbHNlIHtcbiAgICAgIGJ1Zi5maWxsKGZpbGwpXG4gICAgfVxuICB9IGVsc2Uge1xuICAgIGJ1Zi5maWxsKDApXG4gIH1cbiAgcmV0dXJuIGJ1ZlxufVxuXG5TYWZlQnVmZmVyLmFsbG9jVW5zYWZlID0gZnVuY3Rpb24gKHNpemUpIHtcbiAgaWYgKHR5cGVvZiBzaXplICE9PSAnbnVtYmVyJykge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0FyZ3VtZW50IG11c3QgYmUgYSBudW1iZXInKVxuICB9XG4gIHJldHVybiBCdWZmZXIoc2l6ZSlcbn1cblxuU2FmZUJ1ZmZlci5hbGxvY1Vuc2FmZVNsb3cgPSBmdW5jdGlvbiAoc2l6ZSkge1xuICBpZiAodHlwZW9mIHNpemUgIT09ICdudW1iZXInKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignQXJndW1lbnQgbXVzdCBiZSBhIG51bWJlcicpXG4gIH1cbiAgcmV0dXJuIGJ1ZmZlci5TbG93QnVmZmVyKHNpemUpXG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/safe-buffer/index.js\n");

/***/ }),

/***/ "./node_modules/setimmediate/setImmediate.js":
/*!***************************************************!*\
  !*** ./node_modules/setimmediate/setImmediate.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global, process) {(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\"), __webpack_require__(/*! ./../process/browser.js */ \"./node_modules/process/browser.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/setimmediate/setImmediate.js\n");

/***/ }),

/***/ "./node_modules/stream-browserify/index.js":
/*!*************************************************!*\
  !*** ./node_modules/stream-browserify/index.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = Stream;\n\nvar EE = __webpack_require__(/*! events */ \"./node_modules/node-libs-browser/node_modules/events/events.js\").EventEmitter;\nvar inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\");\n\ninherits(Stream, EE);\nStream.Readable = __webpack_require__(/*! readable-stream/readable.js */ \"./node_modules/readable-stream/readable-browser.js\");\nStream.Writable = __webpack_require__(/*! readable-stream/writable.js */ \"./node_modules/readable-stream/writable-browser.js\");\nStream.Duplex = __webpack_require__(/*! readable-stream/duplex.js */ \"./node_modules/readable-stream/duplex-browser.js\");\nStream.Transform = __webpack_require__(/*! readable-stream/transform.js */ \"./node_modules/readable-stream/transform.js\");\nStream.PassThrough = __webpack_require__(/*! readable-stream/passthrough.js */ \"./node_modules/readable-stream/passthrough.js\");\n\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream;\n\n\n\n// old-style streams.  Note that the pipe method (the only relevant\n// part of this class) is overridden in the Readable class.\n\nfunction Stream() {\n  EE.call(this);\n}\n\nStream.prototype.pipe = function(dest, options) {\n  var source = this;\n\n  function ondata(chunk) {\n    if (dest.writable) {\n      if (false === dest.write(chunk) && source.pause) {\n        source.pause();\n      }\n    }\n  }\n\n  source.on('data', ondata);\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume();\n    }\n  }\n\n  dest.on('drain', ondrain);\n\n  // If the 'end' option is not supplied, dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end', onend);\n    source.on('close', onclose);\n  }\n\n  var didOnEnd = false;\n  function onend() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    dest.end();\n  }\n\n\n  function onclose() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    if (typeof dest.destroy === 'function') dest.destroy();\n  }\n\n  // don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup();\n    if (EE.listenerCount(this, 'error') === 0) {\n      throw er; // Unhandled stream error in pipe.\n    }\n  }\n\n  source.on('error', onerror);\n  dest.on('error', onerror);\n\n  // remove all the event listeners that were added.\n  function cleanup() {\n    source.removeListener('data', ondata);\n    dest.removeListener('drain', ondrain);\n\n    source.removeListener('end', onend);\n    source.removeListener('close', onclose);\n\n    source.removeListener('error', onerror);\n    dest.removeListener('error', onerror);\n\n    source.removeListener('end', cleanup);\n    source.removeListener('close', cleanup);\n\n    dest.removeListener('close', cleanup);\n  }\n\n  source.on('end', cleanup);\n  source.on('close', cleanup);\n\n  dest.on('close', cleanup);\n\n  dest.emit('pipe', source);\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc3RyZWFtLWJyb3dzZXJpZnkvaW5kZXguanM/ZDQ4NSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBLFNBQVMsbUJBQU8sQ0FBQyw4RUFBUTtBQUN6QixlQUFlLG1CQUFPLENBQUMsNkRBQVU7O0FBRWpDO0FBQ0Esa0JBQWtCLG1CQUFPLENBQUMsdUZBQTZCO0FBQ3ZELGtCQUFrQixtQkFBTyxDQUFDLHVGQUE2QjtBQUN2RCxnQkFBZ0IsbUJBQU8sQ0FBQyxtRkFBMkI7QUFDbkQsbUJBQW1CLG1CQUFPLENBQUMsaUZBQThCO0FBQ3pELHFCQUFxQixtQkFBTyxDQUFDLHFGQUFnQzs7QUFFN0Q7QUFDQTs7OztBQUlBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7O0FBR0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlO0FBQ2Y7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3RyZWFtLWJyb3dzZXJpZnkvaW5kZXguanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgSm95ZW50LCBJbmMuIGFuZCBvdGhlciBOb2RlIGNvbnRyaWJ1dG9ycy5cbi8vXG4vLyBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYVxuLy8gY29weSBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZVxuLy8gXCJTb2Z0d2FyZVwiKSwgdG8gZGVhbCBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nXG4vLyB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0cyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsXG4vLyBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbCBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0XG4vLyBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGVcbi8vIGZvbGxvd2luZyBjb25kaXRpb25zOlxuLy9cbi8vIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkXG4vLyBpbiBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cbi8vXG4vLyBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTXG4vLyBPUiBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GXG4vLyBNRVJDSEFOVEFCSUxJVFksIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOXG4vLyBOTyBFVkVOVCBTSEFMTCBUSEUgQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSxcbi8vIERBTUFHRVMgT1IgT1RIRVIgTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUlxuLy8gT1RIRVJXSVNFLCBBUklTSU5HIEZST00sIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRVxuLy8gVVNFIE9SIE9USEVSIERFQUxJTkdTIElOIFRIRSBTT0ZUV0FSRS5cblxubW9kdWxlLmV4cG9ydHMgPSBTdHJlYW07XG5cbnZhciBFRSA9IHJlcXVpcmUoJ2V2ZW50cycpLkV2ZW50RW1pdHRlcjtcbnZhciBpbmhlcml0cyA9IHJlcXVpcmUoJ2luaGVyaXRzJyk7XG5cbmluaGVyaXRzKFN0cmVhbSwgRUUpO1xuU3RyZWFtLlJlYWRhYmxlID0gcmVxdWlyZSgncmVhZGFibGUtc3RyZWFtL3JlYWRhYmxlLmpzJyk7XG5TdHJlYW0uV3JpdGFibGUgPSByZXF1aXJlKCdyZWFkYWJsZS1zdHJlYW0vd3JpdGFibGUuanMnKTtcblN0cmVhbS5EdXBsZXggPSByZXF1aXJlKCdyZWFkYWJsZS1zdHJlYW0vZHVwbGV4LmpzJyk7XG5TdHJlYW0uVHJhbnNmb3JtID0gcmVxdWlyZSgncmVhZGFibGUtc3RyZWFtL3RyYW5zZm9ybS5qcycpO1xuU3RyZWFtLlBhc3NUaHJvdWdoID0gcmVxdWlyZSgncmVhZGFibGUtc3RyZWFtL3Bhc3N0aHJvdWdoLmpzJyk7XG5cbi8vIEJhY2t3YXJkcy1jb21wYXQgd2l0aCBub2RlIDAuNC54XG5TdHJlYW0uU3RyZWFtID0gU3RyZWFtO1xuXG5cblxuLy8gb2xkLXN0eWxlIHN0cmVhbXMuICBOb3RlIHRoYXQgdGhlIHBpcGUgbWV0aG9kICh0aGUgb25seSByZWxldmFudFxuLy8gcGFydCBvZiB0aGlzIGNsYXNzKSBpcyBvdmVycmlkZGVuIGluIHRoZSBSZWFkYWJsZSBjbGFzcy5cblxuZnVuY3Rpb24gU3RyZWFtKCkge1xuICBFRS5jYWxsKHRoaXMpO1xufVxuXG5TdHJlYW0ucHJvdG90eXBlLnBpcGUgPSBmdW5jdGlvbihkZXN0LCBvcHRpb25zKSB7XG4gIHZhciBzb3VyY2UgPSB0aGlzO1xuXG4gIGZ1bmN0aW9uIG9uZGF0YShjaHVuaykge1xuICAgIGlmIChkZXN0LndyaXRhYmxlKSB7XG4gICAgICBpZiAoZmFsc2UgPT09IGRlc3Qud3JpdGUoY2h1bmspICYmIHNvdXJjZS5wYXVzZSkge1xuICAgICAgICBzb3VyY2UucGF1c2UoKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBzb3VyY2Uub24oJ2RhdGEnLCBvbmRhdGEpO1xuXG4gIGZ1bmN0aW9uIG9uZHJhaW4oKSB7XG4gICAgaWYgKHNvdXJjZS5yZWFkYWJsZSAmJiBzb3VyY2UucmVzdW1lKSB7XG4gICAgICBzb3VyY2UucmVzdW1lKCk7XG4gICAgfVxuICB9XG5cbiAgZGVzdC5vbignZHJhaW4nLCBvbmRyYWluKTtcblxuICAvLyBJZiB0aGUgJ2VuZCcgb3B0aW9uIGlzIG5vdCBzdXBwbGllZCwgZGVzdC5lbmQoKSB3aWxsIGJlIGNhbGxlZCB3aGVuXG4gIC8vIHNvdXJjZSBnZXRzIHRoZSAnZW5kJyBvciAnY2xvc2UnIGV2ZW50cy4gIE9ubHkgZGVzdC5lbmQoKSBvbmNlLlxuICBpZiAoIWRlc3QuX2lzU3RkaW8gJiYgKCFvcHRpb25zIHx8IG9wdGlvbnMuZW5kICE9PSBmYWxzZSkpIHtcbiAgICBzb3VyY2Uub24oJ2VuZCcsIG9uZW5kKTtcbiAgICBzb3VyY2Uub24oJ2Nsb3NlJywgb25jbG9zZSk7XG4gIH1cblxuICB2YXIgZGlkT25FbmQgPSBmYWxzZTtcbiAgZnVuY3Rpb24gb25lbmQoKSB7XG4gICAgaWYgKGRpZE9uRW5kKSByZXR1cm47XG4gICAgZGlkT25FbmQgPSB0cnVlO1xuXG4gICAgZGVzdC5lbmQoKTtcbiAgfVxuXG5cbiAgZnVuY3Rpb24gb25jbG9zZSgpIHtcbiAgICBpZiAoZGlkT25FbmQpIHJldHVybjtcbiAgICBkaWRPbkVuZCA9IHRydWU7XG5cbiAgICBpZiAodHlwZW9mIGRlc3QuZGVzdHJveSA9PT0gJ2Z1bmN0aW9uJykgZGVzdC5kZXN0cm95KCk7XG4gIH1cblxuICAvLyBkb24ndCBsZWF2ZSBkYW5nbGluZyBwaXBlcyB3aGVuIHRoZXJlIGFyZSBlcnJvcnMuXG4gIGZ1bmN0aW9uIG9uZXJyb3IoZXIpIHtcbiAgICBjbGVhbnVwKCk7XG4gICAgaWYgKEVFLmxpc3RlbmVyQ291bnQodGhpcywgJ2Vycm9yJykgPT09IDApIHtcbiAgICAgIHRocm93IGVyOyAvLyBVbmhhbmRsZWQgc3RyZWFtIGVycm9yIGluIHBpcGUuXG4gICAgfVxuICB9XG5cbiAgc291cmNlLm9uKCdlcnJvcicsIG9uZXJyb3IpO1xuICBkZXN0Lm9uKCdlcnJvcicsIG9uZXJyb3IpO1xuXG4gIC8vIHJlbW92ZSBhbGwgdGhlIGV2ZW50IGxpc3RlbmVycyB0aGF0IHdlcmUgYWRkZWQuXG4gIGZ1bmN0aW9uIGNsZWFudXAoKSB7XG4gICAgc291cmNlLnJlbW92ZUxpc3RlbmVyKCdkYXRhJywgb25kYXRhKTtcbiAgICBkZXN0LnJlbW92ZUxpc3RlbmVyKCdkcmFpbicsIG9uZHJhaW4pO1xuXG4gICAgc291cmNlLnJlbW92ZUxpc3RlbmVyKCdlbmQnLCBvbmVuZCk7XG4gICAgc291cmNlLnJlbW92ZUxpc3RlbmVyKCdjbG9zZScsIG9uY2xvc2UpO1xuXG4gICAgc291cmNlLnJlbW92ZUxpc3RlbmVyKCdlcnJvcicsIG9uZXJyb3IpO1xuICAgIGRlc3QucmVtb3ZlTGlzdGVuZXIoJ2Vycm9yJywgb25lcnJvcik7XG5cbiAgICBzb3VyY2UucmVtb3ZlTGlzdGVuZXIoJ2VuZCcsIGNsZWFudXApO1xuICAgIHNvdXJjZS5yZW1vdmVMaXN0ZW5lcignY2xvc2UnLCBjbGVhbnVwKTtcblxuICAgIGRlc3QucmVtb3ZlTGlzdGVuZXIoJ2Nsb3NlJywgY2xlYW51cCk7XG4gIH1cblxuICBzb3VyY2Uub24oJ2VuZCcsIGNsZWFudXApO1xuICBzb3VyY2Uub24oJ2Nsb3NlJywgY2xlYW51cCk7XG5cbiAgZGVzdC5vbignY2xvc2UnLCBjbGVhbnVwKTtcblxuICBkZXN0LmVtaXQoJ3BpcGUnLCBzb3VyY2UpO1xuXG4gIC8vIEFsbG93IGZvciB1bml4LWxpa2UgdXNhZ2U6IEEucGlwZShCKS5waXBlKEMpXG4gIHJldHVybiBkZXN0O1xufTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/stream-browserify/index.js\n");

/***/ }),

/***/ "./node_modules/string_decoder/lib/string_decoder.js":
/*!***********************************************************!*\
  !*** ./node_modules/string_decoder/lib/string_decoder.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n/*<replacement>*/\n\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"./node_modules/safe-buffer/index.js\").Buffer;\n/*</replacement>*/\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd';\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd';\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd';\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd';\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc3RyaW5nX2RlY29kZXIvbGliL3N0cmluZ19kZWNvZGVyLmpzPzdkNzIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFYTs7QUFFYjs7QUFFQSxhQUFhLG1CQUFPLENBQUMsd0RBQWE7QUFDbEM7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QjtBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QixzQ0FBc0Msc0NBQXNDO0FBQ3pHO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9zdHJpbmdfZGVjb2Rlci9saWIvc3RyaW5nX2RlY29kZXIuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgSm95ZW50LCBJbmMuIGFuZCBvdGhlciBOb2RlIGNvbnRyaWJ1dG9ycy5cbi8vXG4vLyBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYVxuLy8gY29weSBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZVxuLy8gXCJTb2Z0d2FyZVwiKSwgdG8gZGVhbCBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nXG4vLyB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0cyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsXG4vLyBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbCBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0XG4vLyBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGVcbi8vIGZvbGxvd2luZyBjb25kaXRpb25zOlxuLy9cbi8vIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkXG4vLyBpbiBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cbi8vXG4vLyBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTXG4vLyBPUiBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GXG4vLyBNRVJDSEFOVEFCSUxJVFksIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOXG4vLyBOTyBFVkVOVCBTSEFMTCBUSEUgQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSxcbi8vIERBTUFHRVMgT1IgT1RIRVIgTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUlxuLy8gT1RIRVJXSVNFLCBBUklTSU5HIEZST00sIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRVxuLy8gVVNFIE9SIE9USEVSIERFQUxJTkdTIElOIFRIRSBTT0ZUV0FSRS5cblxuJ3VzZSBzdHJpY3QnO1xuXG4vKjxyZXBsYWNlbWVudD4qL1xuXG52YXIgQnVmZmVyID0gcmVxdWlyZSgnc2FmZS1idWZmZXInKS5CdWZmZXI7XG4vKjwvcmVwbGFjZW1lbnQ+Ki9cblxudmFyIGlzRW5jb2RpbmcgPSBCdWZmZXIuaXNFbmNvZGluZyB8fCBmdW5jdGlvbiAoZW5jb2RpbmcpIHtcbiAgZW5jb2RpbmcgPSAnJyArIGVuY29kaW5nO1xuICBzd2l0Y2ggKGVuY29kaW5nICYmIGVuY29kaW5nLnRvTG93ZXJDYXNlKCkpIHtcbiAgICBjYXNlICdoZXgnOmNhc2UgJ3V0ZjgnOmNhc2UgJ3V0Zi04JzpjYXNlICdhc2NpaSc6Y2FzZSAnYmluYXJ5JzpjYXNlICdiYXNlNjQnOmNhc2UgJ3VjczInOmNhc2UgJ3Vjcy0yJzpjYXNlICd1dGYxNmxlJzpjYXNlICd1dGYtMTZsZSc6Y2FzZSAncmF3JzpcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIGRlZmF1bHQ6XG4gICAgICByZXR1cm4gZmFsc2U7XG4gIH1cbn07XG5cbmZ1bmN0aW9uIF9ub3JtYWxpemVFbmNvZGluZyhlbmMpIHtcbiAgaWYgKCFlbmMpIHJldHVybiAndXRmOCc7XG4gIHZhciByZXRyaWVkO1xuICB3aGlsZSAodHJ1ZSkge1xuICAgIHN3aXRjaCAoZW5jKSB7XG4gICAgICBjYXNlICd1dGY4JzpcbiAgICAgIGNhc2UgJ3V0Zi04JzpcbiAgICAgICAgcmV0dXJuICd1dGY4JztcbiAgICAgIGNhc2UgJ3VjczInOlxuICAgICAgY2FzZSAndWNzLTInOlxuICAgICAgY2FzZSAndXRmMTZsZSc6XG4gICAgICBjYXNlICd1dGYtMTZsZSc6XG4gICAgICAgIHJldHVybiAndXRmMTZsZSc7XG4gICAgICBjYXNlICdsYXRpbjEnOlxuICAgICAgY2FzZSAnYmluYXJ5JzpcbiAgICAgICAgcmV0dXJuICdsYXRpbjEnO1xuICAgICAgY2FzZSAnYmFzZTY0JzpcbiAgICAgIGNhc2UgJ2FzY2lpJzpcbiAgICAgIGNhc2UgJ2hleCc6XG4gICAgICAgIHJldHVybiBlbmM7XG4gICAgICBkZWZhdWx0OlxuICAgICAgICBpZiAocmV0cmllZCkgcmV0dXJuOyAvLyB1bmRlZmluZWRcbiAgICAgICAgZW5jID0gKCcnICsgZW5jKS50b0xvd2VyQ2FzZSgpO1xuICAgICAgICByZXRyaWVkID0gdHJ1ZTtcbiAgICB9XG4gIH1cbn07XG5cbi8vIERvIG5vdCBjYWNoZSBgQnVmZmVyLmlzRW5jb2RpbmdgIHdoZW4gY2hlY2tpbmcgZW5jb2RpbmcgbmFtZXMgYXMgc29tZVxuLy8gbW9kdWxlcyBtb25rZXktcGF0Y2ggaXQgdG8gc3VwcG9ydCBhZGRpdGlvbmFsIGVuY29kaW5nc1xuZnVuY3Rpb24gbm9ybWFsaXplRW5jb2RpbmcoZW5jKSB7XG4gIHZhciBuZW5jID0gX25vcm1hbGl6ZUVuY29kaW5nKGVuYyk7XG4gIGlmICh0eXBlb2YgbmVuYyAhPT0gJ3N0cmluZycgJiYgKEJ1ZmZlci5pc0VuY29kaW5nID09PSBpc0VuY29kaW5nIHx8ICFpc0VuY29kaW5nKGVuYykpKSB0aHJvdyBuZXcgRXJyb3IoJ1Vua25vd24gZW5jb2Rpbmc6ICcgKyBlbmMpO1xuICByZXR1cm4gbmVuYyB8fCBlbmM7XG59XG5cbi8vIFN0cmluZ0RlY29kZXIgcHJvdmlkZXMgYW4gaW50ZXJmYWNlIGZvciBlZmZpY2llbnRseSBzcGxpdHRpbmcgYSBzZXJpZXMgb2Zcbi8vIGJ1ZmZlcnMgaW50byBhIHNlcmllcyBvZiBKUyBzdHJpbmdzIHdpdGhvdXQgYnJlYWtpbmcgYXBhcnQgbXVsdGktYnl0ZVxuLy8gY2hhcmFjdGVycy5cbmV4cG9ydHMuU3RyaW5nRGVjb2RlciA9IFN0cmluZ0RlY29kZXI7XG5mdW5jdGlvbiBTdHJpbmdEZWNvZGVyKGVuY29kaW5nKSB7XG4gIHRoaXMuZW5jb2RpbmcgPSBub3JtYWxpemVFbmNvZGluZyhlbmNvZGluZyk7XG4gIHZhciBuYjtcbiAgc3dpdGNoICh0aGlzLmVuY29kaW5nKSB7XG4gICAgY2FzZSAndXRmMTZsZSc6XG4gICAgICB0aGlzLnRleHQgPSB1dGYxNlRleHQ7XG4gICAgICB0aGlzLmVuZCA9IHV0ZjE2RW5kO1xuICAgICAgbmIgPSA0O1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAndXRmOCc6XG4gICAgICB0aGlzLmZpbGxMYXN0ID0gdXRmOEZpbGxMYXN0O1xuICAgICAgbmIgPSA0O1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAnYmFzZTY0JzpcbiAgICAgIHRoaXMudGV4dCA9IGJhc2U2NFRleHQ7XG4gICAgICB0aGlzLmVuZCA9IGJhc2U2NEVuZDtcbiAgICAgIG5iID0gMztcbiAgICAgIGJyZWFrO1xuICAgIGRlZmF1bHQ6XG4gICAgICB0aGlzLndyaXRlID0gc2ltcGxlV3JpdGU7XG4gICAgICB0aGlzLmVuZCA9IHNpbXBsZUVuZDtcbiAgICAgIHJldHVybjtcbiAgfVxuICB0aGlzLmxhc3ROZWVkID0gMDtcbiAgdGhpcy5sYXN0VG90YWwgPSAwO1xuICB0aGlzLmxhc3RDaGFyID0gQnVmZmVyLmFsbG9jVW5zYWZlKG5iKTtcbn1cblxuU3RyaW5nRGVjb2Rlci5wcm90b3R5cGUud3JpdGUgPSBmdW5jdGlvbiAoYnVmKSB7XG4gIGlmIChidWYubGVuZ3RoID09PSAwKSByZXR1cm4gJyc7XG4gIHZhciByO1xuICB2YXIgaTtcbiAgaWYgKHRoaXMubGFzdE5lZWQpIHtcbiAgICByID0gdGhpcy5maWxsTGFzdChidWYpO1xuICAgIGlmIChyID09PSB1bmRlZmluZWQpIHJldHVybiAnJztcbiAgICBpID0gdGhpcy5sYXN0TmVlZDtcbiAgICB0aGlzLmxhc3ROZWVkID0gMDtcbiAgfSBlbHNlIHtcbiAgICBpID0gMDtcbiAgfVxuICBpZiAoaSA8IGJ1Zi5sZW5ndGgpIHJldHVybiByID8gciArIHRoaXMudGV4dChidWYsIGkpIDogdGhpcy50ZXh0KGJ1ZiwgaSk7XG4gIHJldHVybiByIHx8ICcnO1xufTtcblxuU3RyaW5nRGVjb2Rlci5wcm90b3R5cGUuZW5kID0gdXRmOEVuZDtcblxuLy8gUmV0dXJucyBvbmx5IGNvbXBsZXRlIGNoYXJhY3RlcnMgaW4gYSBCdWZmZXJcblN0cmluZ0RlY29kZXIucHJvdG90eXBlLnRleHQgPSB1dGY4VGV4dDtcblxuLy8gQXR0ZW1wdHMgdG8gY29tcGxldGUgYSBwYXJ0aWFsIG5vbi1VVEYtOCBjaGFyYWN0ZXIgdXNpbmcgYnl0ZXMgZnJvbSBhIEJ1ZmZlclxuU3RyaW5nRGVjb2Rlci5wcm90b3R5cGUuZmlsbExhc3QgPSBmdW5jdGlvbiAoYnVmKSB7XG4gIGlmICh0aGlzLmxhc3ROZWVkIDw9IGJ1Zi5sZW5ndGgpIHtcbiAgICBidWYuY29weSh0aGlzLmxhc3RDaGFyLCB0aGlzLmxhc3RUb3RhbCAtIHRoaXMubGFzdE5lZWQsIDAsIHRoaXMubGFzdE5lZWQpO1xuICAgIHJldHVybiB0aGlzLmxhc3RDaGFyLnRvU3RyaW5nKHRoaXMuZW5jb2RpbmcsIDAsIHRoaXMubGFzdFRvdGFsKTtcbiAgfVxuICBidWYuY29weSh0aGlzLmxhc3RDaGFyLCB0aGlzLmxhc3RUb3RhbCAtIHRoaXMubGFzdE5lZWQsIDAsIGJ1Zi5sZW5ndGgpO1xuICB0aGlzLmxhc3ROZWVkIC09IGJ1Zi5sZW5ndGg7XG59O1xuXG4vLyBDaGVja3MgdGhlIHR5cGUgb2YgYSBVVEYtOCBieXRlLCB3aGV0aGVyIGl0J3MgQVNDSUksIGEgbGVhZGluZyBieXRlLCBvciBhXG4vLyBjb250aW51YXRpb24gYnl0ZS4gSWYgYW4gaW52YWxpZCBieXRlIGlzIGRldGVjdGVkLCAtMiBpcyByZXR1cm5lZC5cbmZ1bmN0aW9uIHV0ZjhDaGVja0J5dGUoYnl0ZSkge1xuICBpZiAoYnl0ZSA8PSAweDdGKSByZXR1cm4gMDtlbHNlIGlmIChieXRlID4+IDUgPT09IDB4MDYpIHJldHVybiAyO2Vsc2UgaWYgKGJ5dGUgPj4gNCA9PT0gMHgwRSkgcmV0dXJuIDM7ZWxzZSBpZiAoYnl0ZSA+PiAzID09PSAweDFFKSByZXR1cm4gNDtcbiAgcmV0dXJuIGJ5dGUgPj4gNiA9PT0gMHgwMiA/IC0xIDogLTI7XG59XG5cbi8vIENoZWNrcyBhdCBtb3N0IDMgYnl0ZXMgYXQgdGhlIGVuZCBvZiBhIEJ1ZmZlciBpbiBvcmRlciB0byBkZXRlY3QgYW5cbi8vIGluY29tcGxldGUgbXVsdGktYnl0ZSBVVEYtOCBjaGFyYWN0ZXIuIFRoZSB0b3RhbCBudW1iZXIgb2YgYnl0ZXMgKDIsIDMsIG9yIDQpXG4vLyBuZWVkZWQgdG8gY29tcGxldGUgdGhlIFVURi04IGNoYXJhY3RlciAoaWYgYXBwbGljYWJsZSkgYXJlIHJldHVybmVkLlxuZnVuY3Rpb24gdXRmOENoZWNrSW5jb21wbGV0ZShzZWxmLCBidWYsIGkpIHtcbiAgdmFyIGogPSBidWYubGVuZ3RoIC0gMTtcbiAgaWYgKGogPCBpKSByZXR1cm4gMDtcbiAgdmFyIG5iID0gdXRmOENoZWNrQnl0ZShidWZbal0pO1xuICBpZiAobmIgPj0gMCkge1xuICAgIGlmIChuYiA+IDApIHNlbGYubGFzdE5lZWQgPSBuYiAtIDE7XG4gICAgcmV0dXJuIG5iO1xuICB9XG4gIGlmICgtLWogPCBpIHx8IG5iID09PSAtMikgcmV0dXJuIDA7XG4gIG5iID0gdXRmOENoZWNrQnl0ZShidWZbal0pO1xuICBpZiAobmIgPj0gMCkge1xuICAgIGlmIChuYiA+IDApIHNlbGYubGFzdE5lZWQgPSBuYiAtIDI7XG4gICAgcmV0dXJuIG5iO1xuICB9XG4gIGlmICgtLWogPCBpIHx8IG5iID09PSAtMikgcmV0dXJuIDA7XG4gIG5iID0gdXRmOENoZWNrQnl0ZShidWZbal0pO1xuICBpZiAobmIgPj0gMCkge1xuICAgIGlmIChuYiA+IDApIHtcbiAgICAgIGlmIChuYiA9PT0gMikgbmIgPSAwO2Vsc2Ugc2VsZi5sYXN0TmVlZCA9IG5iIC0gMztcbiAgICB9XG4gICAgcmV0dXJuIG5iO1xuICB9XG4gIHJldHVybiAwO1xufVxuXG4vLyBWYWxpZGF0ZXMgYXMgbWFueSBjb250aW51YXRpb24gYnl0ZXMgZm9yIGEgbXVsdGktYnl0ZSBVVEYtOCBjaGFyYWN0ZXIgYXNcbi8vIG5lZWRlZCBvciBhcmUgYXZhaWxhYmxlLiBJZiB3ZSBzZWUgYSBub24tY29udGludWF0aW9uIGJ5dGUgd2hlcmUgd2UgZXhwZWN0XG4vLyBvbmUsIHdlIFwicmVwbGFjZVwiIHRoZSB2YWxpZGF0ZWQgY29udGludWF0aW9uIGJ5dGVzIHdlJ3ZlIHNlZW4gc28gZmFyIHdpdGhcbi8vIGEgc2luZ2xlIFVURi04IHJlcGxhY2VtZW50IGNoYXJhY3RlciAoJ1xcdWZmZmQnKSwgdG8gbWF0Y2ggdjgncyBVVEYtOCBkZWNvZGluZ1xuLy8gYmVoYXZpb3IuIFRoZSBjb250aW51YXRpb24gYnl0ZSBjaGVjayBpcyBpbmNsdWRlZCB0aHJlZSB0aW1lcyBpbiB0aGUgY2FzZVxuLy8gd2hlcmUgYWxsIG9mIHRoZSBjb250aW51YXRpb24gYnl0ZXMgZm9yIGEgY2hhcmFjdGVyIGV4aXN0IGluIHRoZSBzYW1lIGJ1ZmZlci5cbi8vIEl0IGlzIGFsc28gZG9uZSB0aGlzIHdheSBhcyBhIHNsaWdodCBwZXJmb3JtYW5jZSBpbmNyZWFzZSBpbnN0ZWFkIG9mIHVzaW5nIGFcbi8vIGxvb3AuXG5mdW5jdGlvbiB1dGY4Q2hlY2tFeHRyYUJ5dGVzKHNlbGYsIGJ1ZiwgcCkge1xuICBpZiAoKGJ1ZlswXSAmIDB4QzApICE9PSAweDgwKSB7XG4gICAgc2VsZi5sYXN0TmVlZCA9IDA7XG4gICAgcmV0dXJuICdcXHVmZmZkJztcbiAgfVxuICBpZiAoc2VsZi5sYXN0TmVlZCA+IDEgJiYgYnVmLmxlbmd0aCA+IDEpIHtcbiAgICBpZiAoKGJ1ZlsxXSAmIDB4QzApICE9PSAweDgwKSB7XG4gICAgICBzZWxmLmxhc3ROZWVkID0gMTtcbiAgICAgIHJldHVybiAnXFx1ZmZmZCc7XG4gICAgfVxuICAgIGlmIChzZWxmLmxhc3ROZWVkID4gMiAmJiBidWYubGVuZ3RoID4gMikge1xuICAgICAgaWYgKChidWZbMl0gJiAweEMwKSAhPT0gMHg4MCkge1xuICAgICAgICBzZWxmLmxhc3ROZWVkID0gMjtcbiAgICAgICAgcmV0dXJuICdcXHVmZmZkJztcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuLy8gQXR0ZW1wdHMgdG8gY29tcGxldGUgYSBtdWx0aS1ieXRlIFVURi04IGNoYXJhY3RlciB1c2luZyBieXRlcyBmcm9tIGEgQnVmZmVyLlxuZnVuY3Rpb24gdXRmOEZpbGxMYXN0KGJ1Zikge1xuICB2YXIgcCA9IHRoaXMubGFzdFRvdGFsIC0gdGhpcy5sYXN0TmVlZDtcbiAgdmFyIHIgPSB1dGY4Q2hlY2tFeHRyYUJ5dGVzKHRoaXMsIGJ1ZiwgcCk7XG4gIGlmIChyICE9PSB1bmRlZmluZWQpIHJldHVybiByO1xuICBpZiAodGhpcy5sYXN0TmVlZCA8PSBidWYubGVuZ3RoKSB7XG4gICAgYnVmLmNvcHkodGhpcy5sYXN0Q2hhciwgcCwgMCwgdGhpcy5sYXN0TmVlZCk7XG4gICAgcmV0dXJuIHRoaXMubGFzdENoYXIudG9TdHJpbmcodGhpcy5lbmNvZGluZywgMCwgdGhpcy5sYXN0VG90YWwpO1xuICB9XG4gIGJ1Zi5jb3B5KHRoaXMubGFzdENoYXIsIHAsIDAsIGJ1Zi5sZW5ndGgpO1xuICB0aGlzLmxhc3ROZWVkIC09IGJ1Zi5sZW5ndGg7XG59XG5cbi8vIFJldHVybnMgYWxsIGNvbXBsZXRlIFVURi04IGNoYXJhY3RlcnMgaW4gYSBCdWZmZXIuIElmIHRoZSBCdWZmZXIgZW5kZWQgb24gYVxuLy8gcGFydGlhbCBjaGFyYWN0ZXIsIHRoZSBjaGFyYWN0ZXIncyBieXRlcyBhcmUgYnVmZmVyZWQgdW50aWwgdGhlIHJlcXVpcmVkXG4vLyBudW1iZXIgb2YgYnl0ZXMgYXJlIGF2YWlsYWJsZS5cbmZ1bmN0aW9uIHV0ZjhUZXh0KGJ1ZiwgaSkge1xuICB2YXIgdG90YWwgPSB1dGY4Q2hlY2tJbmNvbXBsZXRlKHRoaXMsIGJ1ZiwgaSk7XG4gIGlmICghdGhpcy5sYXN0TmVlZCkgcmV0dXJuIGJ1Zi50b1N0cmluZygndXRmOCcsIGkpO1xuICB0aGlzLmxhc3RUb3RhbCA9IHRvdGFsO1xuICB2YXIgZW5kID0gYnVmLmxlbmd0aCAtICh0b3RhbCAtIHRoaXMubGFzdE5lZWQpO1xuICBidWYuY29weSh0aGlzLmxhc3RDaGFyLCAwLCBlbmQpO1xuICByZXR1cm4gYnVmLnRvU3RyaW5nKCd1dGY4JywgaSwgZW5kKTtcbn1cblxuLy8gRm9yIFVURi04LCBhIHJlcGxhY2VtZW50IGNoYXJhY3RlciBpcyBhZGRlZCB3aGVuIGVuZGluZyBvbiBhIHBhcnRpYWxcbi8vIGNoYXJhY3Rlci5cbmZ1bmN0aW9uIHV0ZjhFbmQoYnVmKSB7XG4gIHZhciByID0gYnVmICYmIGJ1Zi5sZW5ndGggPyB0aGlzLndyaXRlKGJ1ZikgOiAnJztcbiAgaWYgKHRoaXMubGFzdE5lZWQpIHJldHVybiByICsgJ1xcdWZmZmQnO1xuICByZXR1cm4gcjtcbn1cblxuLy8gVVRGLTE2TEUgdHlwaWNhbGx5IG5lZWRzIHR3byBieXRlcyBwZXIgY2hhcmFjdGVyLCBidXQgZXZlbiBpZiB3ZSBoYXZlIGFuIGV2ZW5cbi8vIG51bWJlciBvZiBieXRlcyBhdmFpbGFibGUsIHdlIG5lZWQgdG8gY2hlY2sgaWYgd2UgZW5kIG9uIGEgbGVhZGluZy9oaWdoXG4vLyBzdXJyb2dhdGUuIEluIHRoYXQgY2FzZSwgd2UgbmVlZCB0byB3YWl0IGZvciB0aGUgbmV4dCB0d28gYnl0ZXMgaW4gb3JkZXIgdG9cbi8vIGRlY29kZSB0aGUgbGFzdCBjaGFyYWN0ZXIgcHJvcGVybHkuXG5mdW5jdGlvbiB1dGYxNlRleHQoYnVmLCBpKSB7XG4gIGlmICgoYnVmLmxlbmd0aCAtIGkpICUgMiA9PT0gMCkge1xuICAgIHZhciByID0gYnVmLnRvU3RyaW5nKCd1dGYxNmxlJywgaSk7XG4gICAgaWYgKHIpIHtcbiAgICAgIHZhciBjID0gci5jaGFyQ29kZUF0KHIubGVuZ3RoIC0gMSk7XG4gICAgICBpZiAoYyA+PSAweEQ4MDAgJiYgYyA8PSAweERCRkYpIHtcbiAgICAgICAgdGhpcy5sYXN0TmVlZCA9IDI7XG4gICAgICAgIHRoaXMubGFzdFRvdGFsID0gNDtcbiAgICAgICAgdGhpcy5sYXN0Q2hhclswXSA9IGJ1ZltidWYubGVuZ3RoIC0gMl07XG4gICAgICAgIHRoaXMubGFzdENoYXJbMV0gPSBidWZbYnVmLmxlbmd0aCAtIDFdO1xuICAgICAgICByZXR1cm4gci5zbGljZSgwLCAtMSk7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiByO1xuICB9XG4gIHRoaXMubGFzdE5lZWQgPSAxO1xuICB0aGlzLmxhc3RUb3RhbCA9IDI7XG4gIHRoaXMubGFzdENoYXJbMF0gPSBidWZbYnVmLmxlbmd0aCAtIDFdO1xuICByZXR1cm4gYnVmLnRvU3RyaW5nKCd1dGYxNmxlJywgaSwgYnVmLmxlbmd0aCAtIDEpO1xufVxuXG4vLyBGb3IgVVRGLTE2TEUgd2UgZG8gbm90IGV4cGxpY2l0bHkgYXBwZW5kIHNwZWNpYWwgcmVwbGFjZW1lbnQgY2hhcmFjdGVycyBpZiB3ZVxuLy8gZW5kIG9uIGEgcGFydGlhbCBjaGFyYWN0ZXIsIHdlIHNpbXBseSBsZXQgdjggaGFuZGxlIHRoYXQuXG5mdW5jdGlvbiB1dGYxNkVuZChidWYpIHtcbiAgdmFyIHIgPSBidWYgJiYgYnVmLmxlbmd0aCA/IHRoaXMud3JpdGUoYnVmKSA6ICcnO1xuICBpZiAodGhpcy5sYXN0TmVlZCkge1xuICAgIHZhciBlbmQgPSB0aGlzLmxhc3RUb3RhbCAtIHRoaXMubGFzdE5lZWQ7XG4gICAgcmV0dXJuIHIgKyB0aGlzLmxhc3RDaGFyLnRvU3RyaW5nKCd1dGYxNmxlJywgMCwgZW5kKTtcbiAgfVxuICByZXR1cm4gcjtcbn1cblxuZnVuY3Rpb24gYmFzZTY0VGV4dChidWYsIGkpIHtcbiAgdmFyIG4gPSAoYnVmLmxlbmd0aCAtIGkpICUgMztcbiAgaWYgKG4gPT09IDApIHJldHVybiBidWYudG9TdHJpbmcoJ2Jhc2U2NCcsIGkpO1xuICB0aGlzLmxhc3ROZWVkID0gMyAtIG47XG4gIHRoaXMubGFzdFRvdGFsID0gMztcbiAgaWYgKG4gPT09IDEpIHtcbiAgICB0aGlzLmxhc3RDaGFyWzBdID0gYnVmW2J1Zi5sZW5ndGggLSAxXTtcbiAgfSBlbHNlIHtcbiAgICB0aGlzLmxhc3RDaGFyWzBdID0gYnVmW2J1Zi5sZW5ndGggLSAyXTtcbiAgICB0aGlzLmxhc3RDaGFyWzFdID0gYnVmW2J1Zi5sZW5ndGggLSAxXTtcbiAgfVxuICByZXR1cm4gYnVmLnRvU3RyaW5nKCdiYXNlNjQnLCBpLCBidWYubGVuZ3RoIC0gbik7XG59XG5cbmZ1bmN0aW9uIGJhc2U2NEVuZChidWYpIHtcbiAgdmFyIHIgPSBidWYgJiYgYnVmLmxlbmd0aCA/IHRoaXMud3JpdGUoYnVmKSA6ICcnO1xuICBpZiAodGhpcy5sYXN0TmVlZCkgcmV0dXJuIHIgKyB0aGlzLmxhc3RDaGFyLnRvU3RyaW5nKCdiYXNlNjQnLCAwLCAzIC0gdGhpcy5sYXN0TmVlZCk7XG4gIHJldHVybiByO1xufVxuXG4vLyBQYXNzIGJ5dGVzIG9uIHRocm91Z2ggZm9yIHNpbmdsZS1ieXRlIGVuY29kaW5ncyAoZS5nLiBhc2NpaSwgbGF0aW4xLCBoZXgpXG5mdW5jdGlvbiBzaW1wbGVXcml0ZShidWYpIHtcbiAgcmV0dXJuIGJ1Zi50b1N0cmluZyh0aGlzLmVuY29kaW5nKTtcbn1cblxuZnVuY3Rpb24gc2ltcGxlRW5kKGJ1Zikge1xuICByZXR1cm4gYnVmICYmIGJ1Zi5sZW5ndGggPyB0aGlzLndyaXRlKGJ1ZikgOiAnJztcbn0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/string_decoder/lib/string_decoder.js\n");

/***/ }),

/***/ "./node_modules/typeflex/dist/Yoga.js":
/*!********************************************!*\
  !*** ./node_modules/typeflex/dist/Yoga.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports=function(e){var t={};function i(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,i),o.l=!0,o.exports}return i.m=e,i.c=t,i.d=function(e,t,n){i.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},i.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},i.t=function(e,t){if(1&t&&(e=i(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(i.r(n),Object.defineProperty(n,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var o in e)i.d(n,o,function(t){return e[t]}.bind(null,o));return n},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,\"a\",t),t},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p=\"\",i(i.s=8)}([function(e,t,i){\"use strict\";var n,o,r,a,s,l,u,d,g,G,c,Y,f,y,h,p;t.__esModule=!0,t.YGAlignCount=8,function(e){e[e.Auto=0]=\"Auto\",e[e.FlexStart=1]=\"FlexStart\",e[e.Center=2]=\"Center\",e[e.FlexEnd=3]=\"FlexEnd\",e[e.Stretch=4]=\"Stretch\",e[e.Baseline=5]=\"Baseline\",e[e.SpaceBetween=6]=\"SpaceBetween\",e[e.SpaceAround=7]=\"SpaceAround\"}(n=t.YGAlign||(t.YGAlign={})),t.YGAlignToString=function(e){switch(e){case n.Auto:return\"auto\";case n.FlexStart:return\"flex-start\";case n.Center:return\"center\";case n.FlexEnd:return\"flex-end\";case n.Stretch:return\"stretch\";case n.Baseline:return\"baseline\";case n.SpaceBetween:return\"space-between\";case n.SpaceAround:return\"space-around\"}return\"unknown\"},t.YGDimensionCount=2,function(e){e[e.Width=0]=\"Width\",e[e.Height=1]=\"Height\"}(o=t.YGDimension||(t.YGDimension={})),t.YGDimensionToString=function(e){switch(e){case o.Width:return\"width\";case o.Height:return\"height\"}return\"unknown\"},function(e){e[e.Inherit=0]=\"Inherit\",e[e.LTR=1]=\"LTR\",e[e.RTL=2]=\"RTL\"}(r=t.YGDirection||(t.YGDirection={})),t.YGDirectionToString=function(e){switch(e){case r.Inherit:return\"inherit\";case r.LTR:return\"ltr\";case r.RTL:return\"rtl\"}return\"unknown\"},t.YGDisplayCount=2,function(e){e[e.Flex=0]=\"Flex\",e[e.None=1]=\"None\"}(a=t.YGDisplay||(t.YGDisplay={})),t.YGDisplayToString=function(e){switch(e){case a.Flex:return\"flex\";case a.None:return\"none\"}return\"unknown\"},t.YGEdgeCount=9,function(e){e[e.Left=0]=\"Left\",e[e.Top=1]=\"Top\",e[e.Right=2]=\"Right\",e[e.Bottom=3]=\"Bottom\",e[e.Start=4]=\"Start\",e[e.End=5]=\"End\",e[e.Horizontal=6]=\"Horizontal\",e[e.Vertical=7]=\"Vertical\",e[e.All=8]=\"All\"}(s=t.YGEdge||(t.YGEdge={})),t.YGEdgeToString=function(e){switch(e){case s.Left:return\"left\";case s.Top:return\"top\";case s.Right:return\"right\";case s.Bottom:return\"bottom\";case s.Start:return\"start\";case s.End:return\"end\";case s.Horizontal:return\"horizontal\";case s.Vertical:return\"vertical\";case s.All:return\"all\"}return\"unknown\"},t.YGExperimentalFeatureCount=1,function(e){e[e.WebFlexBasis=0]=\"WebFlexBasis\"}(l=t.YGExperimentalFeature||(t.YGExperimentalFeature={})),t.YGExperimentalFeatureToString=function(e){switch(e){case l.WebFlexBasis:return\"web-flex-basis\"}return\"unknown\"},t.YGFlexDirectionCount=4,function(e){e[e.Column=0]=\"Column\",e[e.ColumnReverse=1]=\"ColumnReverse\",e[e.Row=2]=\"Row\",e[e.RowReverse=3]=\"RowReverse\"}(u=t.YGFlexDirection||(t.YGFlexDirection={})),t.YGFlexDirectionToString=function(e){switch(e){case u.Column:return\"column\";case u.ColumnReverse:return\"column-reverse\";case u.Row:return\"row\";case u.RowReverse:return\"row-reverse\"}return\"unknown\"},t.YGJustifyCount=6,function(e){e[e.FlexStart=0]=\"FlexStart\",e[e.Center=1]=\"Center\",e[e.FlexEnd=2]=\"FlexEnd\",e[e.SpaceBetween=3]=\"SpaceBetween\",e[e.SpaceAround=4]=\"SpaceAround\",e[e.SpaceEvenly=5]=\"SpaceEvenly\"}(d=t.YGJustify||(t.YGJustify={})),t.YGJustifyToString=function(e){switch(e){case d.FlexStart:return\"flex-start\";case d.Center:return\"center\";case d.FlexEnd:return\"flex-end\";case d.SpaceBetween:return\"space-between\";case d.SpaceAround:return\"space-around\";case d.SpaceEvenly:return\"space-evenly\"}return\"unknown\"},t.YGLogLevelCount=6,function(e){e[e.Error=0]=\"Error\",e[e.Warn=1]=\"Warn\",e[e.Info=2]=\"Info\",e[e.Debug=3]=\"Debug\",e[e.Verbose=4]=\"Verbose\",e[e.Fatal=5]=\"Fatal\"}(g=t.YGLogLevel||(t.YGLogLevel={})),t.YGLogLevelToString=function(e){switch(e){case g.Error:return\"error\";case g.Warn:return\"warn\";case g.Info:return\"info\";case g.Debug:return\"debug\";case g.Verbose:return\"verbose\";case g.Fatal:return\"fatal\"}return\"unknown\"},t.YGMeasureModeCount=3,function(e){e[e.Undefined=0]=\"Undefined\",e[e.Exactly=1]=\"Exactly\",e[e.AtMost=2]=\"AtMost\"}(G=t.YGMeasureMode||(t.YGMeasureMode={})),t.YGMeasureModeToString=function(e){switch(e){case G.Undefined:return\"undefined\";case G.Exactly:return\"exactly\";case G.AtMost:return\"at-most\"}return\"unknown\"},t.YGNodeTypeCount=2,function(e){e[e.Default=0]=\"Default\",e[e.Text=1]=\"Text\"}(c=t.YGNodeType||(t.YGNodeType={})),t.YGNodeTypeToString=function(e){switch(e){case c.Default:return\"default\";case c.Text:return\"text\"}return\"unknown\"},t.YGOverflowCount=3,function(e){e[e.Visible=0]=\"Visible\",e[e.Hidden=1]=\"Hidden\",e[e.Scroll=2]=\"Scroll\"}(Y=t.YGOverflow||(t.YGOverflow={})),t.YGOverflowToString=function(e){switch(e){case Y.Visible:return\"visible\";case Y.Hidden:return\"hidden\";case Y.Scroll:return\"scroll\"}return\"unknown\"},t.YGPositionTypeCount=2,function(e){e[e.Relative=0]=\"Relative\",e[e.Absolute=1]=\"Absolute\"}(f=t.YGPositionType||(t.YGPositionType={})),t.YGPositionTypeToString=function(e){switch(e){case f.Relative:return\"relative\";case f.Absolute:return\"absolute\"}return\"unknown\"},t.YGPrintOptionsCount=3,function(e){e[e.Layout=1]=\"Layout\",e[e.Style=2]=\"Style\",e[e.Children=4]=\"Children\"}(y=t.YGPrintOptions||(t.YGPrintOptions={})),t.YGPrintOptionsToString=function(e){switch(e){case y.Layout:return\"layout\";case y.Style:return\"style\";case y.Children:return\"children\"}return\"unknown\"},t.YGUnitCount=4,function(e){e[e.Undefined=0]=\"Undefined\",e[e.Point=1]=\"Point\",e[e.Percent=2]=\"Percent\",e[e.Auto=3]=\"Auto\"}(h=t.YGUnit||(t.YGUnit={})),t.YGUnitToString=function(e){switch(e){case h.Undefined:return\"undefined\";case h.Point:return\"point\";case h.Percent:return\"percent\";case h.Auto:return\"auto\"}return\"unknown\"},t.YGWrapCount=3,function(e){e[e.NoWrap=0]=\"NoWrap\",e[e.Wrap=1]=\"Wrap\",e[e.WrapReverse=2]=\"WrapReverse\"}(p=t.YGWrap||(t.YGWrap={})),t.YGWrapToString=function(e){switch(e){case p.NoWrap:return\"no-wrap\";case p.Wrap:return\"wrap\";case p.WrapReverse:return\"wrap-reverse\"}return\"unknown\"}},function(e,t,i){\"use strict\";t.__esModule=!0;var n=i(0),o=i(9),r=i(5),a=i(6),s=i(2),l=i(7),u=i(3),d=i(4),g=function(){return function(){}}();function G(e,t){for(var i=e,n=0,o=t[0][0];n<o.length;n++){var r=o[n];i=i.replace(/%[d|s|f]/,r)}return i}function c(e,t,i,o){for(var r=[],a=4;a<arguments.length;a++)r[a-4]=arguments[a];switch(i){case n.YGLogLevel.Error:case n.YGLogLevel.Fatal:return console.error(G(o,r));case n.YGLogLevel.Warn:case n.YGLogLevel.Info:case n.YGLogLevel.Debug:case n.YGLogLevel.Verbose:default:return console.log(G(o,r))}}function Y(e){return!(void 0!==e&&!isNaN(e))}t.YGSize=g,t.YGUndefined=void 0,t.YGValueUndefined=function(){return new l.YGValue(t.YGUndefined,n.YGUnit.Undefined)},t.YGValueAuto=function(){return new l.YGValue(t.YGUndefined,n.YGUnit.Auto)},t.YGValueZero=function(){return new l.YGValue(0,n.YGUnit.Point)},t.YGFloatIsUndefined=Y,t.YGComputedEdgeValue=function(e,i,o){return e[i].unit!=n.YGUnit.Undefined?e[i]:i!=n.YGEdge.Top&&i!=n.YGEdge.Bottom||e[n.YGEdge.Vertical].unit==n.YGUnit.Undefined?i!=n.YGEdge.Left&&i!=n.YGEdge.Right&&i!=n.YGEdge.Start&&i!=n.YGEdge.End||e[n.YGEdge.Horizontal].unit==n.YGUnit.Undefined?e[n.YGEdge.All].unit!=n.YGUnit.Undefined?e[n.YGEdge.All]:i==n.YGEdge.Start||i==n.YGEdge.End?t.YGValueUndefined():o:e[n.YGEdge.Horizontal]:e[n.YGEdge.Vertical]},t.YGNodeGetContext=function(e){return e.getContext()},t.YGNodeSetContext=function(e,t){return e.setContext(t)},t.YGNodeGetMeasureFunc=function(e){return e.getMeasure()},t.YGNodeSetMeasureFunc=function(e,t){e.setMeasureFunc(t)},t.YGNodeGetBaselineFunc=function(e){return e.getBaseline()},t.YGNodeSetBaselineFunc=function(e,t){e.setBaseLineFunc(t)},t.YGNodeGetDirtiedFunc=function(e){return e.getDirtied()},t.YGNodeSetDirtiedFunc=function(e,t){e.setDirtiedFunc(t)},t.YGNodeGetPrintFunc=function(e){return e.getPrintFunc()},t.YGNodeSetPrintFunc=function(e,t){e.setPrintFunc(t)},t.YGNodeGetHasNewLayout=function(e){return e.getHasNewLayout()},t.YGNodeSetHasNewLayout=function(e,t){e.setHasNewLayout(t)},t.YGNodeGetNodeType=function(e){return e.getNodeType()},t.YGNodeSetNodeType=function(e,t){e.setNodeType(t)},t.YGNodeIsDirty=function(e){return e.isDirty()},t.YGNodeLayoutGetDidUseLegacyFlag=function(e){return e.didUseLegacyFlag()},t.YGNodeMarkDirtyAndPropogateToDescendants=function(e){e.markDirtyAndPropogateDownwards()};var f=0,y=0;function h(e){var t=new o.YGNode;return f++,e.useWebDefaults&&(t.setStyleFlexDirection(n.YGFlexDirection.Row),t.setStyleAlignContent(n.YGAlign.Stretch)),t.setConfig(e),t}function p(){return M()}function m(e){console.log(\"clone?\");var t=new o.YGNode(e);return f++,t.setOwner(null),t}function S(e){var t=new r.YGConfig(e.logger);return y++,t}function F(e){for(var t=m(e),i=new Array(e.getChildren().length),n=null,o=0;o<e.getChildren().length;++o){(n=F(e.getChild(o))).setOwner(t),i.push(n)}return t.setChildren(i),null!=e.getConfig()&&t.setConfig(S(e.getConfig())),t}function v(e){var t=e.getOwner();null!=t&&(t.removeChild(e),e.setOwner(null));for(var i=E(e),n=0;n<i;n++){U(e,n).setOwner(null)}e.clearChildren(),f--}function D(e){null!=e.getConfig()&&(y--,e.setConfig(null));for(var t=0;t<e.getChildrenCount();++t)D(e.getChild(t))}function x(e){for(;E(e)>0;){var t=U(e,0);if(t.getOwner()!=e)break;L(e,t),x(t)}v(e)}function M(){var e=new r.YGConfig(c);return y++,e}function L(e,t){var i=E(e);if(0!=i)if(U(e,0).getOwner()!=e){for(var n=e.getConfig().cloneNodeCallback,o=0,r=0;r<i;r++){var s=e.getChild(r);if(t!=s){var l=null;n&&(l=n(s,e,o)),null==l&&(l=m(s)),e.replaceChildIndex(l,o),l.setOwner(e),o++}else e.markDirtyAndPropogate()}for(;o<i;)e.removeChildIndex(o),o++}else e.removeChild(t)&&(t.setLayout(new a.YGLayout),t.setOwner(null),e.markDirtyAndPropogate())}function w(e,t){if(e){var i=e.getChildren();if(0==t.length){if(i.length>0){for(var n=0;n<i.length;n++){var o=i[n];o.setLayout(new a.YGLayout),o.setOwner(null)}e.setChildren(new Array),e.markDirtyAndPropogate()}}else{if(i.length>0)for(n=0;n<i.length;n++){var r=i[n];t.indexOf(r)<0&&(r.setLayout(new a.YGLayout),r.setOwner(null))}e.setChildren(t);for(n=0;n<t.length;n++)t[n].setOwner(e);e.markDirtyAndPropogate()}}}function U(e,t){var i=e.getChildren();return t<i.length?i[t]:null}function E(e){return e.getChildrenCount()}t.YGNodeNewWithConfig=h,t.YGConfigGetDefault=p,t.YGNodeNew=function(){return h(p())},t.YGNodeClone=m,t.YGConfigClone=S,t.YGNodeDeepClone=F,t.YGNodeFree=v,t.YGConfigFreeRecursive=D,t.YGNodeFreeRecursive=x,t.YGNodeReset=function(e){ve(e,0==E(e),\"Cannot reset a node which still has children attached\"),ve(e,null==e.getOwner(),\"Cannot reset a node still attached to a owner\"),e.clearChildren();var t=e.getConfig();e.fromNode(new o.YGNode),t.useWebDefaults&&(e.setStyleFlexDirection(n.YGFlexDirection.Row),e.setStyleAlignContent(n.YGAlign.Stretch)),e.setConfig(t)},t.YGNodeGetInstanceCount=function(){return f},t.YGConfigGetInstanceCount=function(){return y},t.YGConfigNew=M,t.YGConfigFree=function(e){y--},t.YGConfigCopy=function(e,t){Object.assign(e,t)},t.YGNodeInsertChild=function(e,t,i){ve(e,null==t.getOwner(),\"Child already has a owner, it must be removed first.\"),ve(e,null==e.getMeasure(),\"Cannot add child: Nodes with measure functions cannot have children.\"),e.cloneChildrenIfNeeded(),e.insertChildIndex(t,i);var n=t.getOwner()?null:e;t.setOwner(n),e.markDirtyAndPropogate()},t.YGNodeInsertSharedChild=function(e,t,i){ve(e,null==e.getMeasure(),\"Cannot add child: Nodes with measure functions cannot have children.\"),e.insertChildIndex(t,i),t.setOwner(null),e.markDirtyAndPropogate()},t.YGNodeRemoveChild=L,t.YGNodeRemoveAllChildren=function(e){var t=E(e);if(0!=t){if(U(e,0).getOwner()==e){for(var i=0;i<t;i++){var n=U(e,i);n.setLayout(new a.YGLayout),n.setOwner(null)}return e.clearChildren(),void e.markDirtyAndPropogate()}e.setChildren(new Array),e.markDirtyAndPropogate()}},t.YGNodeSetChildrenInternal=w,t.YGNodeSetChildren=function(e,t){w(e,t)},t.YGNodeGetChild=U,t.YGNodeGetChildCount=E,t.YGNodeGetOwner=function(e){return e.getOwner()},t.YGNodeGetParent=function(e){return e.getOwner()},t.YGNodeMarkDirty=function(e){ve(e,null!=e.getMeasure(),\"Only leaf nodes with custom measure functions should manually mark themselves as dirty\"),e.markDirtyAndPropogate()},t.YGNodeCopyStyle=function(e,t){e.getStyle().isEqual(t.getStyle())||(e.setStyle(t.getStyle()),e.markDirtyAndPropogate())},t.YGNodeStyleGetFlexGrow=function(e){return e.getStyle().flexGrow.isUndefined()?d.kDefaultFlexGrow:e.getStyle().flexGrow.getValue()},t.YGNodeStyleGetFlexShrink=function(e){return e.getStyle().flexShrink.isUndefined()?e.getConfig().useWebDefaults?d.kWebDefaultFlexShrink:d.kDefaultFlexShrink:e.getStyle().flexShrink.getValue()},t.YGNodeStyleSetDirection=function(e,t){if(e.getStyle().direction!=t){var i=e.getStyle();i.direction=t,e.setStyle(i),e.markDirtyAndPropogate()}},t.YGNodeStyleGetDirection=function(e){return e.getStyle().direction},t.YGNodeStyleSetFlexDirection=function(e,t){if(e.getStyle().flexDirection!=t){var i=e.getStyle();i.flexDirection=t,e.setStyle(i),e.markDirtyAndPropogate()}},t.YGNodeStyleGetFlexDirection=function(e){return e.getStyle().flexDirection},t.YGNodeStyleSetJustifyContent=function(e,t){if(e.getStyle().justifyContent!=t){var i=e.getStyle();i.justifyContent=t,e.setStyle(i),e.markDirtyAndPropogate()}},t.YGNodeStyleGetJustifyContent=function(e){return e.getStyle().justifyContent},t.YGNodeStyleSetAlignContent=function(e,t){if(e.getStyle().alignContent!=t){var i=e.getStyle();i.alignContent=t,e.setStyle(i),e.markDirtyAndPropogate()}},t.YGNodeStyleGetAlignContent=function(e){return e.getStyle().alignContent},t.YGNodeStyleSetAlignItems=function(e,t){if(e.getStyle().alignItems!=t){var i=e.getStyle();i.alignItems=t,e.setStyle(i),e.markDirtyAndPropogate()}},t.YGNodeStyleGetAlignItems=function(e){return e.getStyle().alignItems},t.YGNodeStyleSetAlignSelf=function(e,t){if(e.getStyle().alignSelf!=t){var i=e.getStyle();i.alignSelf=t,e.setStyle(i),e.markDirtyAndPropogate()}},t.YGNodeStyleGetAlignSelf=function(e){return e.getStyle().alignSelf},t.YGNodeStyleSetPositionType=function(e,t){if(e.getStyle().positionType!=t){var i=e.getStyle();i.positionType=t,e.setStyle(i),e.markDirtyAndPropogate()}},t.YGNodeStyleGetPositionType=function(e){return e.getStyle().positionType},t.YGNodeStyleSetFlexWrap=function(e,t){if(e.getStyle().flexWrap!=t){var i=e.getStyle();i.flexWrap=t,e.setStyle(i),e.markDirtyAndPropogate()}},t.YGNodeStyleGetFlexWrap=function(e){return e.getStyle().flexWrap},t.YGNodeStyleSetOverflow=function(e,t){if(e.getStyle().overflow!=t){var i=e.getStyle();i.overflow=t,e.setStyle(i),e.markDirtyAndPropogate()}},t.YGNodeStyleGetOverflow=function(e){return e.getStyle().overflow},t.YGNodeStyleSetDisplay=function(e,t){if(e.getStyle().display!=t){var i=e.getStyle();i.display=t,e.setStyle(i),e.markDirtyAndPropogate()}},t.YGNodeStyleGetDisplay=function(e){return e.getStyle().display},t.YGNodeStyleSetPosition=function(e,t,i){var o=new l.YGValue(u.YGFloatSanitize(i),Y(i)?n.YGUnit.Undefined:n.YGUnit.Point);if(e.getStyle().position[t].value!=o.value&&o.unit!=n.YGUnit.Undefined||e.getStyle().position[t].unit!=o.unit){var r=e.getStyle();r.position[t]=o,e.setStyle(r),e.markDirtyAndPropogate()}},t.YGNodeStyleSetPositionPercent=function(e,t,i){var o=new l.YGValue(u.YGFloatSanitize(i),Y(i)?n.YGUnit.Undefined:n.YGUnit.Percent);if(e.getStyle().position[t].value!=o.value&&o.unit!=n.YGUnit.Undefined||e.getStyle().position[t].unit!=o.unit){var r=e.getStyle();r.position[t]=o,e.setStyle(r),e.markDirtyAndPropogate()}},t.YGNodeStyleGetPosition=function(e,i){var o=e.getStyle().position[i];return o.unit!=n.YGUnit.Undefined&&o.unit!=n.YGUnit.Auto||(o.value=t.YGUndefined),o},t.YGNodeStyleSetMargin=function(e,t,i){var o=new l.YGValue(u.YGFloatSanitize(i),Y(i)?n.YGUnit.Undefined:n.YGUnit.Point);if(e.getStyle().margin[t].value!=o.value&&o.unit!=n.YGUnit.Undefined||e.getStyle().margin[t].unit!=o.unit){var r=e.getStyle();r.margin[t]=o,e.setStyle(r),e.markDirtyAndPropogate()}},t.YGNodeStyleSetMarginPercent=function(e,t,i){var o=new l.YGValue(u.YGFloatSanitize(i),Y(i)?n.YGUnit.Undefined:n.YGUnit.Percent);if(e.getStyle().margin[t].value!=o.value&&o.unit!=n.YGUnit.Undefined||e.getStyle().margin[t].unit!=o.unit){var r=e.getStyle();r.margin[t]=o,e.setStyle(r),e.markDirtyAndPropogate()}},t.YGNodeStyleGetMargin=function(e,i){var o=e.getStyle().margin[i];return o.unit!=n.YGUnit.Undefined&&o.unit!=n.YGUnit.Auto||(o.value=t.YGUndefined),o},t.YGNodeStyleSetPadding=function(e,t,i){var o=new l.YGValue(u.YGFloatSanitize(i),Y(i)?n.YGUnit.Undefined:n.YGUnit.Point);if(e.getStyle().padding[t].value!=o.value&&o.unit!=n.YGUnit.Undefined||e.getStyle().padding[t].unit!=o.unit){var r=e.getStyle();r.padding[t]=o,e.setStyle(r),e.markDirtyAndPropogate()}},t.YGNodeStyleSetPaddingPercent=function(e,t,i){var o=new l.YGValue(u.YGFloatSanitize(i),Y(i)?n.YGUnit.Undefined:n.YGUnit.Percent);if(e.getStyle().padding[t].value!=o.value&&o.unit!=n.YGUnit.Undefined||e.getStyle().padding[t].unit!=o.unit){var r=e.getStyle();r.padding[t]=o,e.setStyle(r),e.markDirtyAndPropogate()}},t.YGNodeStyleGetPadding=function(e,i){var o=e.getStyle().padding[i];return o.unit!=n.YGUnit.Undefined&&o.unit!=n.YGUnit.Auto||(o.value=t.YGUndefined),o},t.YGNodeStyleSetMarginAuto=function(e,t){if(e.getStyle().margin[t].unit!=n.YGUnit.Auto){var i=e.getStyle();i.margin[t].value=0,i.margin[t].unit=n.YGUnit.Auto,e.setStyle(i),e.markDirtyAndPropogate()}},t.YGNodeStyleSetWidth=function(e,t){var i=new l.YGValue(u.YGFloatSanitize(t),Y(t)?n.YGUnit.Undefined:n.YGUnit.Point);if(e.getStyle().dimensions[n.YGDimension.Width].value!=i.value&&i.unit!=n.YGUnit.Undefined||e.getStyle().dimensions[n.YGDimension.Width].unit!=i.unit){var o=e.getStyle();o.dimensions[n.YGDimension.Width]=i,e.setStyle(o),e.markDirtyAndPropogate()}},t.YGNodeStyleSetWidthPercent=function(e,t){if(e.getStyle().dimensions[n.YGDimension.Width].value!=u.YGFloatSanitize(t)||e.getStyle().dimensions[n.YGDimension.Width].unit!=n.YGUnit.Percent){var i=e.getStyle();i.dimensions[n.YGDimension.Width].value=u.YGFloatSanitize(t),i.dimensions[n.YGDimension.Width].unit=Y(t)?n.YGUnit.Auto:n.YGUnit.Percent,e.setStyle(i),e.markDirtyAndPropogate()}},t.YGNodeStyleSetWidthAuto=function(e){if(e.getStyle().dimensions[n.YGDimension.Width].unit!=n.YGUnit.Auto){var t=e.getStyle();t.dimensions[n.YGDimension.Width].value=0,t.dimensions[n.YGDimension.Width].unit=n.YGUnit.Auto,e.setStyle(t),e.markDirtyAndPropogate()}},t.YGNodeStyleGetWidth=function(e){var i=e.getStyle().dimensions[n.YGDimension.Width];return i.unit!=n.YGUnit.Undefined&&i.unit!=n.YGUnit.Auto||(i.value=t.YGUndefined),i},t.YGNodeStyleSetHeight=function(e,t){var i=new l.YGValue(u.YGFloatSanitize(t),Y(t)?n.YGUnit.Undefined:n.YGUnit.Point);if(e.getStyle().dimensions[n.YGDimension.Height].value!=i.value&&i.unit!=n.YGUnit.Undefined||e.getStyle().dimensions[n.YGDimension.Height].unit!=i.unit){var o=e.getStyle();o.dimensions[n.YGDimension.Height]=i,e.setStyle(o),e.markDirtyAndPropogate()}},t.YGNodeStyleSetHeightPercent=function(e,t){if(e.getStyle().dimensions[n.YGDimension.Height].value!=u.YGFloatSanitize(t)||e.getStyle().dimensions[n.YGDimension.Height].unit!=n.YGUnit.Percent){var i=e.getStyle();i.dimensions[n.YGDimension.Height].value=u.YGFloatSanitize(t),i.dimensions[n.YGDimension.Height].unit=Y(t)?n.YGUnit.Auto:n.YGUnit.Percent,e.setStyle(i),e.markDirtyAndPropogate()}},t.YGNodeStyleSetHeightAuto=function(e){if(e.getStyle().dimensions[n.YGDimension.Height].unit!=n.YGUnit.Auto){var t=e.getStyle();t.dimensions[n.YGDimension.Height].value=0,t.dimensions[n.YGDimension.Height].unit=n.YGUnit.Auto,e.setStyle(t),e.markDirtyAndPropogate()}},t.YGNodeStyleGetHeight=function(e){var i=e.getStyle().dimensions[n.YGDimension.Height];return i.unit!=n.YGUnit.Undefined&&i.unit!=n.YGUnit.Auto||(i.value=t.YGUndefined),i},t.YGNodeStyleSetMinWidth=function(e,t){var i=new l.YGValue(u.YGFloatSanitize(t),Y(t)?n.YGUnit.Undefined:n.YGUnit.Point);if(e.getStyle().minDimensions[n.YGDimension.Width].value!=i.value&&i.unit!=n.YGUnit.Undefined||e.getStyle().minDimensions[n.YGDimension.Width].unit!=i.unit){var o=e.getStyle();o.minDimensions[n.YGDimension.Width]=i,e.setStyle(o),e.markDirtyAndPropogate()}},t.YGNodeStyleSetMinWidthPercent=function(e,t){var i=new l.YGValue(u.YGFloatSanitize(t),Y(t)?n.YGUnit.Undefined:n.YGUnit.Percent);if(e.getStyle().minDimensions[n.YGDimension.Width].value!=i.value&&i.unit!=n.YGUnit.Undefined||e.getStyle().minDimensions[n.YGDimension.Width].unit!=i.unit){var o=e.getStyle();o.minDimensions[n.YGDimension.Width]=i,e.setStyle(o),e.markDirtyAndPropogate()}},t.YGNodeStyleGetMinWidth=function(e){var i=e.getStyle().minDimensions[n.YGDimension.Width];return i.unit!=n.YGUnit.Undefined&&i.unit!=n.YGUnit.Auto||(i.value=t.YGUndefined),i},t.YGNodeStyleSetMinHeight=function(e,t){var i=new l.YGValue(u.YGFloatSanitize(t),Y(t)?n.YGUnit.Undefined:n.YGUnit.Point);if(e.getStyle().minDimensions[n.YGDimension.Height].value!=i.value&&i.unit!=n.YGUnit.Undefined||e.getStyle().minDimensions[n.YGDimension.Height].unit!=i.unit){var o=e.getStyle();o.minDimensions[n.YGDimension.Height]=i,e.setStyle(o),e.markDirtyAndPropogate()}},t.YGNodeStyleSetMinHeightPercent=function(e,t){var i=new l.YGValue(u.YGFloatSanitize(t),Y(t)?n.YGUnit.Undefined:n.YGUnit.Percent);if(e.getStyle().minDimensions[n.YGDimension.Height].value!=i.value&&i.unit!=n.YGUnit.Undefined||e.getStyle().minDimensions[n.YGDimension.Height].unit!=i.unit){var o=e.getStyle();o.minDimensions[n.YGDimension.Height]=i,e.setStyle(o),e.markDirtyAndPropogate()}},t.YGNodeStyleGetMinHeight=function(e){var i=e.getStyle().minDimensions[n.YGDimension.Height];return i.unit!=n.YGUnit.Undefined&&i.unit!=n.YGUnit.Auto||(i.value=t.YGUndefined),i},t.YGNodeStyleSetMaxWidth=function(e,t){var i=new l.YGValue(u.YGFloatSanitize(t),Y(t)?n.YGUnit.Undefined:n.YGUnit.Point);if(e.getStyle().maxDimensions[n.YGDimension.Width].value!=i.value&&i.unit!=n.YGUnit.Undefined||e.getStyle().maxDimensions[n.YGDimension.Width].unit!=i.unit){var o=e.getStyle();o.maxDimensions[n.YGDimension.Width]=i,e.setStyle(o),e.markDirtyAndPropogate()}},t.YGNodeStyleSetMaxWidthPercent=function(e,t){var i=new l.YGValue(u.YGFloatSanitize(t),Y(t)?n.YGUnit.Undefined:n.YGUnit.Percent);if(e.getStyle().maxDimensions[n.YGDimension.Width].value!=i.value&&i.unit!=n.YGUnit.Undefined||e.getStyle().maxDimensions[n.YGDimension.Width].unit!=i.unit){var o=e.getStyle();o.maxDimensions[n.YGDimension.Width]=i,e.setStyle(o),e.markDirtyAndPropogate()}},t.YGNodeStyleGetMaxWidth=function(e){var i=e.getStyle().maxDimensions[n.YGDimension.Width];return i.unit!=n.YGUnit.Undefined&&i.unit!=n.YGUnit.Auto||(i.value=t.YGUndefined),i},t.YGNodeStyleSetMaxHeight=function(e,t){var i=new l.YGValue(u.YGFloatSanitize(t),Y(t)?n.YGUnit.Undefined:n.YGUnit.Point);if(e.getStyle().maxDimensions[n.YGDimension.Height].value!=i.value&&i.unit!=n.YGUnit.Undefined||e.getStyle().maxDimensions[n.YGDimension.Height].unit!=i.unit){var o=e.getStyle();o.maxDimensions[n.YGDimension.Height]=i,e.setStyle(o),e.markDirtyAndPropogate()}},t.YGNodeStyleSetMaxHeightPercent=function(e,t){var i=new l.YGValue(u.YGFloatSanitize(t),Y(t)?n.YGUnit.Undefined:n.YGUnit.Percent);if(e.getStyle().maxDimensions[n.YGDimension.Height].value!=i.value&&i.unit!=n.YGUnit.Undefined||e.getStyle().maxDimensions[n.YGDimension.Height].unit!=i.unit){var o=e.getStyle();o.maxDimensions[n.YGDimension.Height]=i,e.setStyle(o),e.markDirtyAndPropogate()}},t.YGNodeStyleGetMaxHeight=function(e){var i=e.getStyle().maxDimensions[n.YGDimension.Height];return i.unit!=n.YGUnit.Undefined&&i.unit!=n.YGUnit.Auto||(i.value=t.YGUndefined),i},t.YGNodeLayoutGetLeft=function(e){return e.getLayout().position[n.YGEdge.Left]},t.YGNodeLayoutGetTop=function(e){return e.getLayout().position[n.YGEdge.Top]},t.YGNodeLayoutGetRight=function(e){return e.getLayout().position[n.YGEdge.Right]},t.YGNodeLayoutGetBottom=function(e){return e.getLayout().position[n.YGEdge.Bottom]},t.YGNodeLayoutGetWidth=function(e){return e.getLayout().dimensions[n.YGDimension.Width]},t.YGNodeLayoutGetHeight=function(e){return e.getLayout().dimensions[n.YGDimension.Height]},t.YGNodeLayoutGetDirection=function(e){return e.getLayout().direction},t.YGNodeLayoutGetHadOverflow=function(e){return e.getLayout().hadOverflow},t.YGNodeLayoutGetMargin=function(e,t){return ve(e,t<=n.YGEdge.End,\"Cannot get layout properties of multi-edge shorthands\"),t==n.YGEdge.Left?e.getLayout().direction==n.YGDirection.RTL?e.getLayout().margin[n.YGEdge.End]:e.getLayout().margin[n.YGEdge.Start]:t==n.YGEdge.Right?e.getLayout().direction==n.YGDirection.RTL?e.getLayout().margin[n.YGEdge.Start]:e.getLayout().margin[n.YGEdge.End]:e.getLayout().margin[t]},t.YGNodeLayoutGetBorder=function(e,t){return ve(e,t<=n.YGEdge.End,\"Cannot get layout properties of multi-edge shorthands\"),t==n.YGEdge.Left?e.getLayout().direction==n.YGDirection.RTL?e.getLayout().border[n.YGEdge.End]:e.getLayout().border[n.YGEdge.Start]:t==n.YGEdge.Right?e.getLayout().direction==n.YGDirection.RTL?e.getLayout().border[n.YGEdge.Start]:e.getLayout().border[n.YGEdge.End]:e.getLayout().border[t]},t.YGNodeLayoutGetPadding=function(e,t){return ve(e,t<=n.YGEdge.End,\"Cannot get layout properties of multi-edge shorthands\"),t==n.YGEdge.Left?e.getLayout().direction==n.YGDirection.RTL?e.getLayout().padding[n.YGEdge.End]:e.getLayout().padding[n.YGEdge.Start]:t==n.YGEdge.Right?e.getLayout().direction==n.YGDirection.RTL?e.getLayout().padding[n.YGEdge.Start]:e.getLayout().padding[n.YGEdge.End]:e.getLayout().padding[t]},t.YGNodeStyleSetFlex=function(e,t){if(e.getStyle().flex.isDiffValue(t)){var i=e.getStyle();Y(t)?i.flex=new s.YGFloatOptional:i.flex=new s.YGFloatOptional(t),e.setStyle(i),e.markDirtyAndPropogate()}},t.YGNodeStyleGetFlex=function(e){return e.getStyle().flex.isUndefined()?t.YGUndefined:e.getStyle().flex.getValue()},t.YGNodeStyleSetFlexGrow=function(e,t){if(e.getStyle().flexGrow.isDiffValue(t)){var i=e.getStyle();Y(t)?i.flexGrow=new s.YGFloatOptional:i.flexGrow=new s.YGFloatOptional(t),e.setStyle(i),e.markDirtyAndPropogate()}},t.YGNodeStyleSetFlexShrink=function(e,t){if(e.getStyle().flexShrink.isDiffValue(t)){var i=e.getStyle();Y(t)?i.flexShrink=new s.YGFloatOptional:i.flexShrink=new s.YGFloatOptional(t),e.setStyle(i),e.markDirtyAndPropogate()}},t.YGNodeStyleGetFlexBasis=function(e){var i=e.getStyle().flexBasis;return i.unit!=n.YGUnit.Undefined&&i.unit!=n.YGUnit.Auto||(i.value=t.YGUndefined),i},t.YGNodeStyleSetFlexBasis=function(e,t){var i=new l.YGValue(u.YGFloatSanitize(t),Y(t)?n.YGUnit.Undefined:n.YGUnit.Point);if(e.getStyle().flexBasis.value!=i.value&&i.unit!=n.YGUnit.Undefined||e.getStyle().flexBasis.unit!=i.unit){var o=e.getStyle();o.flexBasis=i,e.setStyle(o),e.markDirtyAndPropogate()}},t.YGNodeStyleSetFlexBasisPercent=function(e,t){if(e.getStyle().flexBasis.value!=t||e.getStyle().flexBasis.unit!=n.YGUnit.Percent){var i=e.getStyle();i.flexBasis.value=u.YGFloatSanitize(t),i.flexBasis.unit=Y(t)?n.YGUnit.Auto:n.YGUnit.Percent,e.setStyle(i),e.markDirtyAndPropogate()}},t.YGNodeStyleSetFlexBasisAuto=function(e){if(e.getStyle().flexBasis.unit!=n.YGUnit.Auto){var t=e.getStyle();t.flexBasis.value=0,t.flexBasis.unit=n.YGUnit.Auto,e.setStyle(t),e.markDirtyAndPropogate()}},t.YGNodeStyleSetBorder=function(e,t,i){var o=new l.YGValue(u.YGFloatSanitize(i),Y(i)?n.YGUnit.Undefined:n.YGUnit.Point);if(e.getStyle().border[t].value!=o.value&&o.unit!=n.YGUnit.Undefined||e.getStyle().border[t].unit!=o.unit){var r=e.getStyle();r.border[t]=o,e.setStyle(r),e.markDirtyAndPropogate()}},t.YGNodeStyleGetBorder=function(e,i){return e.getStyle().border[i].unit==n.YGUnit.Undefined||e.getStyle().border[i].unit==n.YGUnit.Auto?t.YGUndefined:e.getStyle().border[i].value},t.YGNodeStyleGetAspectRatio=function(e){var i=e.getStyle().aspectRatio;return i.isUndefined()?t.YGUndefined:i.getValue()},t.YGNodeStyleSetAspectRatio=function(e,t){if(e.getStyle().aspectRatio.isDiffValue(t)){var i=e.getStyle();i.aspectRatio=new s.YGFloatOptional(t),e.setStyle(i),e.markDirtyAndPropogate()}},t.YGNodeLayoutGetDidLegacyStretchFlagAffectLayout=function(e){return e.getLayout().doesLegacyStretchFlagAffectsLayout};var C=0;function A(e,t){}function N(e,t){}function _(e,t,i){return u.YGUnwrapFloatOptional(e.getLeadingPaddingAndBorder(t,i).add(e.getTrailingPaddingAndBorder(t,i)))}function P(e,t){var i=t.getStyle().alignSelf==n.YGAlign.Auto?e.getStyle().alignItems:t.getStyle().alignSelf;return i==n.YGAlign.Baseline&&u.YGFlexDirectionIsColumn(e.getStyle().flexDirection)?n.YGAlign.FlexStart:i}function R(e){if(null!=e.getBaseline()){var t=e.getBaseline()(e,e.getLayout().measuredDimensions[n.YGDimension.Width],e.getLayout().measuredDimensions[n.YGDimension.Height]);return ve(e,!Y(t),\"Expect custom baseline function to not return NaN\"),t}for(var i=null,o=E(e),r=0;r<o;r++){var a=U(e,r);if(a.getLineIndex()>0)break;if(a.getStyle().positionType!=n.YGPositionType.Absolute){if(P(e,a)==n.YGAlign.Baseline){i=a;break}null==i&&(i=a)}}return null==i?e.getLayout().measuredDimensions[n.YGDimension.Height]:R(i)+i.getLayout().position[n.YGEdge.Top]}function O(e){if(u.YGFlexDirectionIsColumn(e.getStyle().flexDirection))return!1;if(e.getStyle().alignItems==n.YGAlign.Baseline)return!0;for(var t=E(e),i=0;i<t;i++){var o=U(e,i);if(o.getStyle().positionType==n.YGPositionType.Relative&&o.getStyle().alignSelf==n.YGAlign.Baseline)return!0}return!1}function T(e,t,i){return e.getLayout().measuredDimensions[d.dim[t]]+u.YGUnwrapFloatOptional(e.getLeadingMargin(t,i).add(e.getTrailingMargin(t,i)))}function V(e,t,i){var o=Y(e.getResolvedDimension(d.dim[t]).value);return!(e.getResolvedDimension(d.dim[t]).unit==n.YGUnit.Auto||e.getResolvedDimension(d.dim[t]).unit==n.YGUnit.Undefined||e.getResolvedDimension(d.dim[t]).unit==n.YGUnit.Point&&!o&&e.getResolvedDimension(d.dim[t]).value<0||e.getResolvedDimension(d.dim[t]).unit==n.YGUnit.Percent&&!o&&(e.getResolvedDimension(d.dim[t]).value<0||Y(i)))}function W(e,t){var i=e.getLayout().measuredDimensions[d.dim[t]];return!Y(i)&&i>=0}function I(e,t,i,o){var r,a;return u.YGFlexDirectionIsColumn(t)?(r=u.YGResolveValue(e.getStyle().minDimensions[n.YGDimension.Height],o),a=u.YGResolveValue(e.getStyle().maxDimensions[n.YGDimension.Height],o)):u.YGFlexDirectionIsRow(t)&&(r=u.YGResolveValue(e.getStyle().minDimensions[n.YGDimension.Width],o),a=u.YGResolveValue(e.getStyle().maxDimensions[n.YGDimension.Width],o)),!a.isUndefined()&&a.getValue()>=0&&i>a.getValue()?a:!r.isUndefined()&&r.getValue()>=0&&i<r.getValue()?r:new s.YGFloatOptional(i)}function b(e,t,i,n,o){return u.YGFloatMax(u.YGUnwrapFloatOptional(I(e,t,i,n)),_(e,t,o))}function B(e,t,i){var n=t.getLayout().measuredDimensions[d.dim[i]];t.setLayoutPosition(e.getLayout().measuredDimensions[d.dim[i]]-n-t.getLayout().position[d.pos[i]],d.trailing[i])}function H(e,t,i,o,r,a){var s=u.YGResolveValue(e.getStyle().maxDimensions[d.dim[t]],i).add(e.getMarginForAxis(t,o));switch(r.value){case n.YGMeasureMode.Exactly:case n.YGMeasureMode.AtMost:a.value=s.isUndefined()||a.value<s.getValue()?a.value:s.getValue();break;case n.YGMeasureMode.Undefined:s.isUndefined()||(r.value=n.YGMeasureMode.AtMost,a.value=s.getValue())}}function k(e,i,o,r,a,l,g,G,c,f){var y,h,p,m,S=u.YGResolveFlexDirection(e.getStyle().flexDirection,c),F=u.YGFlexDirectionIsRow(S),v=F?o:a,D=F?l:g,x=u.YGResolveValue(i.resolveFlexBasisPtr(),D),M=V(i,n.YGFlexDirection.Row,l),L=V(i,n.YGFlexDirection.Column,g);if(x.isUndefined()||Y(v))if(F&&M){b=new s.YGFloatOptional(_(i,n.YGFlexDirection.Row,l));i.setLayoutComputedFlexBasis(u.YGFloatOptionalMax(u.YGResolveValue(i.getResolvedDimension(n.YGDimension.Width),l),b))}else if(!F&&L){b=new s.YGFloatOptional(_(i,n.YGFlexDirection.Column,l));i.setLayoutComputedFlexBasis(u.YGFloatOptionalMax(u.YGResolveValue(i.getResolvedDimension(n.YGDimension.Height),g),b))}else{y=t.YGUndefined,h=t.YGUndefined,p=n.YGMeasureMode.Undefined,m=n.YGMeasureMode.Undefined;var w=u.YGUnwrapFloatOptional(i.getMarginForAxis(n.YGFlexDirection.Row,l)),U=u.YGUnwrapFloatOptional(i.getMarginForAxis(n.YGFlexDirection.Column,l));M&&(y=u.YGUnwrapFloatOptional(u.YGResolveValue(i.getResolvedDimension(n.YGDimension.Width),l))+w,p=n.YGMeasureMode.Exactly),L&&(h=u.YGUnwrapFloatOptional(u.YGResolveValue(i.getResolvedDimension(n.YGDimension.Height),g))+U,m=n.YGMeasureMode.Exactly),(!F&&e.getStyle().overflow==n.YGOverflow.Scroll||e.getStyle().overflow!=n.YGOverflow.Scroll)&&Y(y)&&!Y(o)&&(y=o,p=n.YGMeasureMode.AtMost),(F&&e.getStyle().overflow==n.YGOverflow.Scroll||e.getStyle().overflow!=n.YGOverflow.Scroll)&&Y(h)&&!Y(a)&&(h=a,m=n.YGMeasureMode.AtMost),i.getStyle().aspectRatio.isUndefined()||(F||p!=n.YGMeasureMode.Exactly?F&&m==n.YGMeasureMode.Exactly&&(y=w+(h-U)*i.getStyle().aspectRatio.getValue(),p=n.YGMeasureMode.Exactly):(h=U+(y-w)/i.getStyle().aspectRatio.getValue(),m=n.YGMeasureMode.Exactly));var E=!Y(o)&&r==n.YGMeasureMode.Exactly,A=P(e,i)==n.YGAlign.Stretch&&p!=n.YGMeasureMode.Exactly;!F&&!M&&E&&A&&(y=o,p=n.YGMeasureMode.Exactly,i.getStyle().aspectRatio.isUndefined()||(h=(y-w)/i.getStyle().aspectRatio.getValue(),m=n.YGMeasureMode.Exactly));var N=!Y(a)&&G==n.YGMeasureMode.Exactly,R=P(e,i)==n.YGAlign.Stretch&&m!=n.YGMeasureMode.Exactly;F&&!L&&N&&R&&(h=a,m=n.YGMeasureMode.Exactly,i.getStyle().aspectRatio.isUndefined()||(y=(h-U)*i.getStyle().aspectRatio.getValue(),p=n.YGMeasureMode.Exactly));var O={value:p},T={value:y},W={value:m},I={value:h};H(i,n.YGFlexDirection.Row,l,l,O,T),H(i,n.YGFlexDirection.Column,g,l,W,I),ye(i,T.value,I.value,c,O.value,W.value,l,g,!1,\"measure\",f),i.setLayoutComputedFlexBasis(new s.YGFloatOptional(u.YGFloatMax(i.getLayout().measuredDimensions[d.dim[S]],_(i,S,l))))}else if(i.getLayout().computedFlexBasis.isUndefined()||xe(i.getConfig(),n.YGExperimentalFeature.WebFlexBasis)&&i.getLayout().computedFlexBasisGeneration!=C){var b=new s.YGFloatOptional(_(i,S,l));i.setLayoutComputedFlexBasis(u.YGFloatOptionalMax(x,b))}i.setLayoutComputedFlexBasisGeneration(C)}function q(e,i,o,r,a,s,l){var g=u.YGResolveFlexDirection(e.getStyle().flexDirection,s),G=u.YGFlexDirectionCross(g,s),c=u.YGFlexDirectionIsRow(g),f=t.YGUndefined,y=t.YGUndefined,h=n.YGMeasureMode.Undefined,p=n.YGMeasureMode.Undefined,m=u.YGUnwrapFloatOptional(i.getMarginForAxis(n.YGFlexDirection.Row,o)),S=u.YGUnwrapFloatOptional(i.getMarginForAxis(n.YGFlexDirection.Column,o));V(i,n.YGFlexDirection.Row,o)?f=u.YGUnwrapFloatOptional(u.YGResolveValue(i.getResolvedDimension(n.YGDimension.Width),o))+m:i.isLeadingPositionDefined(n.YGFlexDirection.Row)&&i.isTrailingPosDefined(n.YGFlexDirection.Row)&&(f=e.getLayout().measuredDimensions[n.YGDimension.Width]-(e.getLeadingBorder(n.YGFlexDirection.Row)+e.getTrailingBorder(n.YGFlexDirection.Row))-u.YGUnwrapFloatOptional(i.getLeadingPosition(n.YGFlexDirection.Row,o).add(i.getTrailingPosition(n.YGFlexDirection.Row,o))),f=b(i,n.YGFlexDirection.Row,f,o,o)),V(i,n.YGFlexDirection.Column,a)?y=u.YGUnwrapFloatOptional(u.YGResolveValue(i.getResolvedDimension(n.YGDimension.Height),a))+S:i.isLeadingPositionDefined(n.YGFlexDirection.Column)&&i.isTrailingPosDefined(n.YGFlexDirection.Column)&&(y=e.getLayout().measuredDimensions[n.YGDimension.Height]-(e.getLeadingBorder(n.YGFlexDirection.Column)+e.getTrailingBorder(n.YGFlexDirection.Column))-u.YGUnwrapFloatOptional(i.getLeadingPosition(n.YGFlexDirection.Column,a).add(i.getTrailingPosition(n.YGFlexDirection.Column,a))),y=b(i,n.YGFlexDirection.Column,y,a,o)),(Y(f)?!Y(y):Y(y))&&(i.getStyle().aspectRatio.isUndefined()||(Y(f)?f=m+(y-S)*i.getStyle().aspectRatio.getValue():Y(y)&&(y=S+(f-m)/i.getStyle().aspectRatio.getValue()))),(Y(f)||Y(y))&&(h=Y(f)?n.YGMeasureMode.Undefined:n.YGMeasureMode.Exactly,p=Y(y)?n.YGMeasureMode.Undefined:n.YGMeasureMode.Exactly,!c&&Y(f)&&r!=n.YGMeasureMode.Undefined&&!Y(o)&&o>0&&(f=o,h=n.YGMeasureMode.AtMost),ye(i,f,y,s,h,p,f,y,!1,\"abs-measure\",l),f=i.getLayout().measuredDimensions[n.YGDimension.Width]+u.YGUnwrapFloatOptional(i.getMarginForAxis(n.YGFlexDirection.Row,o)),y=i.getLayout().measuredDimensions[n.YGDimension.Height]+u.YGUnwrapFloatOptional(i.getMarginForAxis(n.YGFlexDirection.Column,o))),ye(i,f,y,s,n.YGMeasureMode.Exactly,n.YGMeasureMode.Exactly,f,y,!0,\"abs-layout\",l),i.isTrailingPosDefined(g)&&!i.isLeadingPositionDefined(g)?i.setLayoutPosition(e.getLayout().measuredDimensions[d.dim[g]]-i.getLayout().measuredDimensions[d.dim[g]]-e.getTrailingBorder(g)-u.YGUnwrapFloatOptional(i.getTrailingMargin(g,o))-u.YGUnwrapFloatOptional(i.getTrailingPosition(g,c?o:a)),d.leading[g]):i.isLeadingPositionDefined(g)||e.getStyle().justifyContent!=n.YGJustify.Center?i.isLeadingPositionDefined(g)||e.getStyle().justifyContent!=n.YGJustify.FlexEnd||i.setLayoutPosition(e.getLayout().measuredDimensions[d.dim[g]]-i.getLayout().measuredDimensions[d.dim[g]],d.leading[g]):i.setLayoutPosition((e.getLayout().measuredDimensions[d.dim[g]]-i.getLayout().measuredDimensions[d.dim[g]])/2,d.leading[g]),i.isTrailingPosDefined(G)&&!i.isLeadingPositionDefined(G)?i.setLayoutPosition(e.getLayout().measuredDimensions[d.dim[G]]-i.getLayout().measuredDimensions[d.dim[G]]-e.getTrailingBorder(G)-u.YGUnwrapFloatOptional(i.getTrailingMargin(G,o))-u.YGUnwrapFloatOptional(i.getTrailingPosition(G,c?a:o)),d.leading[G]):i.isLeadingPositionDefined(G)||P(e,i)!=n.YGAlign.Center?i.isLeadingPositionDefined(G)||(P(e,i)==n.YGAlign.FlexEnd?e.getStyle().flexWrap==n.YGWrap.WrapReverse:e.getStyle().flexWrap!=n.YGWrap.WrapReverse)||i.setLayoutPosition(e.getLayout().measuredDimensions[d.dim[G]]-i.getLayout().measuredDimensions[d.dim[G]],d.leading[G]):i.setLayoutPosition((e.getLayout().measuredDimensions[d.dim[G]]-i.getLayout().measuredDimensions[d.dim[G]])/2,d.leading[G])}function z(e,t,i,o,r,a,s){ve(e,null!=e.getMeasure(),\"Expected node to have custom measure function\");var l=_(e,n.YGFlexDirection.Row,t),d=_(e,n.YGFlexDirection.Column,t),g=u.YGUnwrapFloatOptional(e.getMarginForAxis(n.YGFlexDirection.Row,t)),G=u.YGUnwrapFloatOptional(e.getMarginForAxis(n.YGFlexDirection.Column,t)),c=Y(t)?t:u.YGFloatMax(0,t-g-l),f=Y(i)?i:u.YGFloatMax(0,i-G-d);if(o==n.YGMeasureMode.Exactly&&r==n.YGMeasureMode.Exactly)e.setLayoutMeasuredDimension(b(e,n.YGFlexDirection.Row,t-g,a,a),n.YGDimension.Width),e.setLayoutMeasuredDimension(b(e,n.YGFlexDirection.Column,i-G,s,a),n.YGDimension.Height);else{var y=e.getMeasure()(e,c,o,f,r);e.setLayoutMeasuredDimension(b(e,n.YGFlexDirection.Row,o==n.YGMeasureMode.Undefined||o==n.YGMeasureMode.AtMost?y.width+l:t-g,a,a),n.YGDimension.Width),e.setLayoutMeasuredDimension(b(e,n.YGFlexDirection.Column,r==n.YGMeasureMode.Undefined||r==n.YGMeasureMode.AtMost?y.height+d:i-G,s,a),n.YGDimension.Height)}}function J(e,t,i,o,r,a,s){var l=_(e,n.YGFlexDirection.Row,a),d=_(e,n.YGFlexDirection.Column,a),g=u.YGUnwrapFloatOptional(e.getMarginForAxis(n.YGFlexDirection.Row,a)),G=u.YGUnwrapFloatOptional(e.getMarginForAxis(n.YGFlexDirection.Column,a));e.setLayoutMeasuredDimension(b(e,n.YGFlexDirection.Row,o==n.YGMeasureMode.Undefined||o==n.YGMeasureMode.AtMost?l:t-g,a,a),n.YGDimension.Width),e.setLayoutMeasuredDimension(b(e,n.YGFlexDirection.Column,r==n.YGMeasureMode.Undefined||r==n.YGMeasureMode.AtMost?d:i-G,s,a),n.YGDimension.Height)}function j(e,t,i,o,r,a,s){if(!Y(t)&&o==n.YGMeasureMode.AtMost&&t<=0||!Y(i)&&r==n.YGMeasureMode.AtMost&&i<=0||o==n.YGMeasureMode.Exactly&&r==n.YGMeasureMode.Exactly){var l=u.YGUnwrapFloatOptional(e.getMarginForAxis(n.YGFlexDirection.Column,a)),d=u.YGUnwrapFloatOptional(e.getMarginForAxis(n.YGFlexDirection.Row,a));return e.setLayoutMeasuredDimension(b(e,n.YGFlexDirection.Row,Y(t)||o==n.YGMeasureMode.AtMost&&t<0?0:t-d,a,a),n.YGDimension.Width),e.setLayoutMeasuredDimension(b(e,n.YGFlexDirection.Column,Y(i)||r==n.YGMeasureMode.AtMost&&i<0?0:i-l,s,a),n.YGDimension.Height),!0}return!1}function X(e){e.getLayout().clean(),e.setHasNewLayout(!0),e.cloneChildrenIfNeeded();for(var t=E(e),i=0;i<t;i++){X(e.getChild(i))}}function Z(e,t,i,o){var r=u.YGFlexDirectionIsRow(t)?n.YGFlexDirection.Row:n.YGFlexDirection.Column,a=u.YGFlexDirectionIsRow(t)?n.YGDimension.Width:n.YGDimension.Height,s=u.YGUnwrapFloatOptional(e.getMarginForAxis(r,o)),l=_(e,r,o),d=i-s-l;if(!Y(d)){var g=u.YGResolveValue(e.getStyle().minDimensions[a],o),G=g.isUndefined()?0:g.getValue()-l,c=u.YGResolveValue(e.getStyle().maxDimensions[a],o),f=c.isUndefined()?Number.MAX_VALUE:c.getValue()-l;d=u.YGFloatMax(u.YGFloatMin(d,f),G)}return d}function K(e,t,i,o,r,a,l,d,g,G){var c=null,Y=e.getChildren();if((u.YGFlexDirectionIsRow(l)?o:r)==n.YGMeasureMode.Exactly)for(var f=0;f<Y.length;++f){if((y=Y[f]).isNodeFlexible()){if(null!=c||u.YGFloatsEqual(y.resolveFlexGrow(),0)||u.YGFloatsEqual(y.resolveFlexShrink(),0)){c=null;break}c=y}}for(f=0;f<Y.length;++f){var y;if((y=Y[f]).resolveDimension(),y.getStyle().display!=n.YGDisplay.None){if(g){var h=y.resolveDirection(a),p=u.YGFlexDirectionIsRow(l)?t:i,m=u.YGFlexDirectionIsRow(l)?i:t;y.setPosition(h,p,m,t)}y.getStyle().positionType!=n.YGPositionType.Absolute&&(y==c?(y.setLayoutComputedFlexBasisGeneration(C),y.setLayoutComputedFlexBasis(new s.YGFloatOptional(0))):k(e,y,t,o,i,t,i,r,a,d),G.value+=u.YGUnwrapFloatOptional(y.getLayout().computedFlexBasis.add(y.getMarginForAxis(l,t))))}else X(y),y.setHasNewLayout(!0),y.setDirty(!1)}}function Q(e,t,i,o,r,a,s){for(var l=new u.YGCollectFlexItemsRowValues,d=0,g=u.YGResolveFlexDirection(e.getStyle().flexDirection,e.resolveDirection(t)),G=e.getStyle().flexWrap!=n.YGWrap.NoWrap,c=a;c<e.getChildrenCount();c++){var Y=e.getChild(c);if(Y.getStyle().display!=n.YGDisplay.None&&Y.getStyle().positionType!=n.YGPositionType.Absolute){Y.setLineIndex(s);var f=u.YGUnwrapFloatOptional(Y.getMarginForAxis(g,o)),y=u.YGUnwrapFloatOptional(I(Y,g,u.YGUnwrapFloatOptional(Y.getLayout().computedFlexBasis),i));if(d+y+f>r&&G&&l.itemsOnLine>0)break;d+=y+f,l.sizeConsumedOnCurrentLine+=y+f,l.itemsOnLine++,Y.isNodeFlexible()&&(l.totalFlexGrowFactors+=Y.resolveFlexGrow(),l.totalFlexShrinkScaledFactors+=-Y.resolveFlexShrink()*u.YGUnwrapFloatOptional(Y.getLayout().computedFlexBasis)),l.relativeChildren.push(Y)}}return l.totalFlexGrowFactors>0&&l.totalFlexGrowFactors<1&&(l.totalFlexGrowFactors=1),l.totalFlexShrinkScaledFactors>0&&l.totalFlexShrinkScaledFactors<1&&(l.totalFlexShrinkScaledFactors=1),l.endOfLineIndex=c,l}function $(e,t,i,o,r,a,s,l,g,G,c,f,y){for(var h=0,p=0,m=0,S=0,F=u.YGFlexDirectionIsRow(i),v=t.getStyle().flexWrap!=n.YGWrap.NoWrap,D=0;D<e.relativeChildren.length;++D){var x=e.relativeChildren[D],M=h=u.YGUnwrapFloatOptional(I(x,i,u.YGUnwrapFloatOptional(x.getLayout().computedFlexBasis),r));if(!Y(e.remainingFreeSpace)&&e.remainingFreeSpace<0){if(0!=(p=-x.resolveFlexShrink()*h)){M=b(x,i,Y(e.totalFlexShrinkScaledFactors)||0!=e.totalFlexShrinkScaledFactors?h+e.remainingFreeSpace/e.totalFlexShrinkScaledFactors*p:h+p,a,l)}}else!Y(e.remainingFreeSpace)&&e.remainingFreeSpace>0&&(Y(m=x.resolveFlexGrow())||0==m||(M=b(x,i,h+e.remainingFreeSpace/e.totalFlexGrowFactors*m,a,l)));S+=M-h;var L=u.YGUnwrapFloatOptional(x.getMarginForAxis(i,l)),w=u.YGUnwrapFloatOptional(x.getMarginForAxis(o,l)),U=void 0,E=M+L,C=void 0,A=n.YGMeasureMode.Exactly;if(x.getStyle().aspectRatio.isUndefined())if(Y(s)||V(x,o,s)||c!=n.YGMeasureMode.Exactly||v&&G||P(t,x)!=n.YGAlign.Stretch||x.marginLeadingValue(o).unit==n.YGUnit.Auto||x.marginTrailingValue(o).unit==n.YGUnit.Auto)if(V(x,o,s)){U=u.YGUnwrapFloatOptional(u.YGResolveValue(x.getResolvedDimension(d.dim[o]),s))+w;var N=x.getResolvedDimension(d.dim[o]).unit==n.YGUnit.Percent&&c!=n.YGMeasureMode.Exactly;C=Y(U)||N?n.YGMeasureMode.Undefined:n.YGMeasureMode.Exactly}else C=Y(U=s)?n.YGMeasureMode.Undefined:n.YGMeasureMode.AtMost;else U=s,C=n.YGMeasureMode.Exactly;else U=F?(E-L)/x.getStyle().aspectRatio.getValue():(E-L)*x.getStyle().aspectRatio.getValue(),C=n.YGMeasureMode.Exactly,U+=w;var _={value:A},R={value:E},O={value:C},T={value:U};H(x,i,a,l,_,R),H(x,o,s,l,O,T),A=_.value,E=R.value,C=O.value,U=T.value;var W=!V(x,o,s)&&P(t,x)==n.YGAlign.Stretch&&x.marginLeadingValue(o).unit!=n.YGUnit.Auto&&x.marginTrailingValue(o).unit!=n.YGUnit.Auto,B=F?A:C,k=F?C:A;ye(x,F?E:U,F?U:E,t.getLayout().direction,B,k,l,g,f&&!W,\"flex\",y),t.setLayoutHadOverflow(t.getLayout().hadOverflow||x.getLayout().hadOverflow)}return S}function ee(e,t,i,n,o){for(var r=0,a=0,s=0,l=0,d=0,g=0;g<e.relativeChildren.length;++g){var G=e.relativeChildren[g],c=u.YGUnwrapFloatOptional(I(G,t,u.YGUnwrapFloatOptional(G.getLayout().computedFlexBasis),i));e.remainingFreeSpace<0?Y(r=-G.resolveFlexShrink()*c)||0==r||(l=b(G,t,s=c+e.remainingFreeSpace/e.totalFlexShrinkScaledFactors*r,n,o),Y(s)||Y(l)||s==l||(d+=l-c,e.totalFlexShrinkScaledFactors-=r)):!Y(e.remainingFreeSpace)&&e.remainingFreeSpace>0&&(Y(a=G.resolveFlexGrow())||0==a||(l=b(G,t,s=c+e.remainingFreeSpace/e.totalFlexGrowFactors*a,n,o),Y(s)||Y(l)||s==l||(d+=l-c,e.totalFlexGrowFactors-=a)))}e.remainingFreeSpace-=d}function te(e,t,i,n,o,r,a,s,l,u,d,g,G){var c=t.remainingFreeSpace;ee(t,i,o,r,s);var Y=$(t,e,i,n,o,r,a,s,l,u,d,g,G);t.remainingFreeSpace=c-Y}function ie(e,t,i,o,r,a,s,l,g,G,c,Y,f){var y=e.getStyle();a==n.YGMeasureMode.AtMost&&t.remainingFreeSpace>0&&(y.minDimensions[d.dim[o]].unit==n.YGUnit.Undefined||u.YGResolveValue(y.minDimensions[d.dim[o]],l).isUndefined()?t.remainingFreeSpace=0:t.remainingFreeSpace=u.YGFloatMax(0,u.YGUnwrapFloatOptional(u.YGResolveValue(y.minDimensions[d.dim[o]],l))-(G-t.remainingFreeSpace)));for(var h=0,p=i;p<t.endOfLineIndex;p++){(D=e.getChild(p)).getStyle().positionType==n.YGPositionType.Relative&&(D.marginLeadingValue(o).unit==n.YGUnit.Auto&&h++,D.marginTrailingValue(o).unit==n.YGUnit.Auto&&h++)}var m=0,S=0,F=e.getStyle().justifyContent;if(0==h)switch(F){case n.YGJustify.Center:m=t.remainingFreeSpace/2;break;case n.YGJustify.FlexEnd:m=t.remainingFreeSpace;break;case n.YGJustify.SpaceBetween:S=t.itemsOnLine>1?u.YGFloatMax(t.remainingFreeSpace,0)/(t.itemsOnLine-1):0;break;case n.YGJustify.SpaceEvenly:m=S=t.remainingFreeSpace/(t.itemsOnLine+1);break;case n.YGJustify.SpaceAround:m=(S=t.remainingFreeSpace/t.itemsOnLine)/2;break;case n.YGJustify.FlexStart:}var v=u.YGUnwrapFloatOptional(e.getLeadingPaddingAndBorder(o,g));t.mainDim=v+m,t.crossDim=0;for(p=i;p<t.endOfLineIndex;p++){var D,x=(D=e.getChild(p)).getStyle(),M=D.getLayout();if(x.display!=n.YGDisplay.None)if(x.positionType==n.YGPositionType.Absolute&&D.isLeadingPositionDefined(o))f&&D.setLayoutPosition(u.YGUnwrapFloatOptional(D.getLeadingPosition(o,G))+e.getLeadingBorder(o)+u.YGUnwrapFloatOptional(D.getLeadingMargin(o,Y)),d.pos[o]);else if(x.positionType==n.YGPositionType.Relative)D.marginLeadingValue(o).unit==n.YGUnit.Auto&&(t.mainDim+=t.remainingFreeSpace/h),f&&D.setLayoutPosition(M.position[d.pos[o]]+t.mainDim,d.pos[o]),D.marginTrailingValue(o).unit==n.YGUnit.Auto&&(t.mainDim+=t.remainingFreeSpace/h),!f&&s==n.YGMeasureMode.Exactly?(t.mainDim+=S+u.YGUnwrapFloatOptional(D.getMarginForAxis(o,Y))+u.YGUnwrapFloatOptional(M.computedFlexBasis),t.crossDim=c):(t.mainDim+=S+T(D,o,Y),t.crossDim=u.YGFloatMax(t.crossDim,T(D,r,Y)));else f&&D.setLayoutPosition(M.position[d.pos[o]]+e.getLeadingBorder(o)+m,d.pos[o])}t.mainDim+=u.YGUnwrapFloatOptional(e.getTrailingPaddingAndBorder(o,g))}function ne(e,t,i,o,r,a,s,l,g,G){ve(e,!Y(t)||r==n.YGMeasureMode.Undefined,\"availableWidth is indefinite so widthMeasureMode must be YGMeasureMode.Undefined\"),ve(e,!Y(i)||a==n.YGMeasureMode.Undefined,\"availableHeight is indefinite so heightMeasureMode must be YGMeasureMode.Undefined\");var c=e.resolveDirection(o);e.setLayoutDirection(c);var f=u.YGResolveFlexDirection(n.YGFlexDirection.Row,c),y=u.YGResolveFlexDirection(n.YGFlexDirection.Column,c);if(e.setLayoutMargin(u.YGUnwrapFloatOptional(e.getLeadingMargin(f,s)),n.YGEdge.Start),e.setLayoutMargin(u.YGUnwrapFloatOptional(e.getTrailingMargin(f,s)),n.YGEdge.End),e.setLayoutMargin(u.YGUnwrapFloatOptional(e.getLeadingMargin(y,s)),n.YGEdge.Top),e.setLayoutMargin(u.YGUnwrapFloatOptional(e.getTrailingMargin(y,s)),n.YGEdge.Bottom),e.setLayoutBorder(e.getLeadingBorder(f),n.YGEdge.Start),e.setLayoutBorder(e.getTrailingBorder(f),n.YGEdge.End),e.setLayoutBorder(e.getLeadingBorder(y),n.YGEdge.Top),e.setLayoutBorder(e.getTrailingBorder(y),n.YGEdge.Bottom),e.setLayoutPadding(u.YGUnwrapFloatOptional(e.getLeadingPadding(f,s)),n.YGEdge.Start),e.setLayoutPadding(u.YGUnwrapFloatOptional(e.getTrailingPadding(f,s)),n.YGEdge.End),e.setLayoutPadding(u.YGUnwrapFloatOptional(e.getLeadingPadding(y,s)),n.YGEdge.Top),e.setLayoutPadding(u.YGUnwrapFloatOptional(e.getTrailingPadding(y,s)),n.YGEdge.Bottom),null==e.getMeasure()){var h=E(e);if(0!=h){if(g||!j(e,t,i,r,a,s,l)){e.cloneChildrenIfNeeded(),e.setLayoutHadOverflow(!1);var p=u.YGResolveFlexDirection(e.getStyle().flexDirection,c),m=u.YGFlexDirectionCross(p,c),S=u.YGFlexDirectionIsRow(p),F=e.getStyle().flexWrap!=n.YGWrap.NoWrap,v=S?s:l,D=S?l:s,x=u.YGUnwrapFloatOptional(e.getLeadingPaddingAndBorder(m,s)),M=_(e,p,s),L=_(e,m,s),w=S?r:a,C=S?a:r,A=S?M:L,N=S?L:M,k=u.YGUnwrapFloatOptional(e.getMarginForAxis(n.YGFlexDirection.Row,s)),X=u.YGUnwrapFloatOptional(e.getMarginForAxis(n.YGFlexDirection.Column,s)),$=u.YGUnwrapFloatOptional(u.YGResolveValue(e.getStyle().minDimensions[n.YGDimension.Width],s))-A,ee=u.YGUnwrapFloatOptional(u.YGResolveValue(e.getStyle().maxDimensions[n.YGDimension.Width],s))-A,ne=u.YGUnwrapFloatOptional(u.YGResolveValue(e.getStyle().minDimensions[n.YGDimension.Height],l))-N,oe=u.YGUnwrapFloatOptional(u.YGResolveValue(e.getStyle().maxDimensions[n.YGDimension.Height],l))-N,re=S?$:ne,ae=S?ee:oe,se=Z(e,n.YGFlexDirection.Row,t,s),le=Z(e,n.YGFlexDirection.Column,i,l),ue=S?se:le,de=S?le:se,ge={value:0};K(e,se,le,r,a,c,p,G,g,ge);var Ge=w!=n.YGMeasureMode.Undefined&&ge.value>ue;F&&Ge&&w==n.YGMeasureMode.AtMost&&(w=n.YGMeasureMode.Exactly);for(var ce,Ye=0,fe=0,he=0,pe=0,me=0;fe<h;he++,Ye=fe){fe=(ce=Q(e,o,v,se,ue,Ye,he)).endOfLineIndex;var Se=!g&&C==n.YGMeasureMode.Exactly,Fe=!1;w!=n.YGMeasureMode.Exactly&&(!Y(re)&&ce.sizeConsumedOnCurrentLine<re?ue=re:!Y(ae)&&ce.sizeConsumedOnCurrentLine>ae?ue=ae:(!e.getConfig().useLegacyStretchBehaviour&&(Y(ce.totalFlexGrowFactors)&&0==ce.totalFlexGrowFactors||Y(e.resolveFlexGrow())&&0==e.resolveFlexGrow())&&(ue=ce.sizeConsumedOnCurrentLine),e.getConfig().useLegacyStretchBehaviour&&e.setLayoutDidUseLegacyFlag(!0),Fe=!e.getConfig().useLegacyStretchBehaviour)),Fe||Y(ue)?ce.sizeConsumedOnCurrentLine<0&&(ce.remainingFreeSpace=-ce.sizeConsumedOnCurrentLine):ce.remainingFreeSpace=ue-ce.sizeConsumedOnCurrentLine,Se||te(e,ce,p,m,v,ue,de,se,le,Ge,C,g,G),e.setLayoutHadOverflow(e.getLayout().hadOverflow||ce.remainingFreeSpace<0),ie(e,ce,Ye,p,m,w,C,v,s,ue,de,se,g);var De=de;if(C!=n.YGMeasureMode.Undefined&&C!=n.YGMeasureMode.AtMost||(De=b(e,m,ce.crossDim+L,D,s)-L),F||C!=n.YGMeasureMode.Exactly||(ce.crossDim=de),ce.crossDim=b(e,m,ce.crossDim+L,D,s)-L,g)for(var xe=Ye;xe<fe;xe++){if(($e=e.getChild(xe)).getStyle().display!=n.YGDisplay.None)if($e.getStyle().positionType==n.YGPositionType.Absolute){var Me=$e.isLeadingPositionDefined(m);Me&&$e.setLayoutPosition(u.YGUnwrapFloatOptional($e.getLeadingPosition(m,de))+e.getLeadingBorder(m)+u.YGUnwrapFloatOptional($e.getLeadingMargin(m,se)),d.pos[m]),Me&&!Y($e.getLayout().position[d.pos[m]])||$e.setLayoutPosition(e.getLeadingBorder(m)+u.YGUnwrapFloatOptional($e.getLeadingMargin(m,se)),d.pos[m])}else{var Le=x,we=P(e,$e);if(we==n.YGAlign.Stretch&&$e.marginLeadingValue(m).unit!=n.YGUnit.Auto&&$e.marginTrailingValue(m).unit!=n.YGUnit.Auto){if(!V($e,m,de)){var Ue=$e.getLayout().measuredDimensions[d.dim[p]],Ee=$e.getStyle().aspectRatio.isUndefined()?ce.crossDim:u.YGUnwrapFloatOptional($e.getMarginForAxis(m,se))+(S?Ue/$e.getStyle().aspectRatio.getValue():Ue*$e.getStyle().aspectRatio.getValue());Ue+=u.YGUnwrapFloatOptional($e.getMarginForAxis(p,se));var Ce=n.YGMeasureMode.Exactly,Ae=n.YGMeasureMode.Exactly,Ne={value:Ce},_e={value:Ue},Pe={value:Ae},Re={value:Ee};H($e,p,ue,se,Ne,_e),H($e,m,de,se,Pe,Re),Ce=Ne.value,Ue=_e.value,Ae=Pe.value,Ee=Re.value,ye($e,Xe=S?Ue:Ee,je=S?Ee:Ue,c,Y(Xe)?n.YGMeasureMode.Undefined:n.YGMeasureMode.Exactly,Y(je)?n.YGMeasureMode.Undefined:n.YGMeasureMode.Exactly,se,le,!0,\"stretch\",G)}}else{var Oe=De-T($e,m,se);$e.marginLeadingValue(m).unit==n.YGUnit.Auto&&$e.marginTrailingValue(m).unit==n.YGUnit.Auto?Le+=u.YGFloatMax(0,Oe/2):$e.marginTrailingValue(m).unit==n.YGUnit.Auto||($e.marginLeadingValue(m).unit==n.YGUnit.Auto?Le+=u.YGFloatMax(0,Oe):we==n.YGAlign.FlexStart||(we==n.YGAlign.Center?Le+=Oe/2:Le+=Oe))}$e.setLayoutPosition($e.getLayout().position[d.pos[m]]+pe+Le,d.pos[m])}}pe+=ce.crossDim,me=u.YGFloatMax(me,ce.mainDim)}if(g&&(he>1||O(e))&&!Y(de)){var Te=de-pe,Ve=0,We=x;switch(e.getStyle().alignContent){case n.YGAlign.FlexEnd:We+=Te;break;case n.YGAlign.Center:We+=Te/2;break;case n.YGAlign.Stretch:de>pe&&(Ve=Te/he);break;case n.YGAlign.SpaceAround:de>pe?(We+=Te/(2*he),he>1&&(Ve=Te/he)):We+=Te/2;break;case n.YGAlign.SpaceBetween:de>pe&&he>1&&(Ve=Te/(he-1));break;case n.YGAlign.Auto:case n.YGAlign.FlexStart:case n.YGAlign.Baseline:}var Ie=0;for(xe=0;xe<he;xe++){var be=Ie,Be=void 0,He=0,ke=0,qe=0;for(Be=be;Be<h;Be++){if(($e=e.getChild(Be)).getStyle().display!=n.YGDisplay.None&&$e.getStyle().positionType==n.YGPositionType.Relative){if($e.getLineIndex()!=xe)break;if(W($e,m)&&(He=u.YGFloatMax(He,$e.getLayout().measuredDimensions[d.dim[m]]+u.YGUnwrapFloatOptional($e.getMarginForAxis(m,se)))),P(e,$e)==n.YGAlign.Baseline){var ze=R($e)+u.YGUnwrapFloatOptional($e.getLeadingMargin(n.YGFlexDirection.Column,se)),Je=$e.getLayout().measuredDimensions[n.YGDimension.Height]+u.YGUnwrapFloatOptional($e.getMarginForAxis(n.YGFlexDirection.Column,se))-ze;ke=u.YGFloatMax(ke,ze),qe=u.YGFloatMax(qe,Je),He=u.YGFloatMax(He,ke+qe)}}}if(Ie=Be,He+=Ve,g)for(Be=be;Be<Ie;Be++){if(($e=e.getChild(Be)).getStyle().display!=n.YGDisplay.None&&$e.getStyle().positionType==n.YGPositionType.Relative)switch(P(e,$e)){case n.YGAlign.FlexStart:$e.setLayoutPosition(We+u.YGUnwrapFloatOptional($e.getLeadingMargin(m,se)),d.pos[m]);break;case n.YGAlign.FlexEnd:$e.setLayoutPosition(We+He-u.YGUnwrapFloatOptional($e.getTrailingMargin(m,se))-$e.getLayout().measuredDimensions[d.dim[m]],d.pos[m]);break;case n.YGAlign.Center:var je=$e.getLayout().measuredDimensions[d.dim[m]];$e.setLayoutPosition(We+(He-je)/2,d.pos[m]);break;case n.YGAlign.Stretch:if($e.setLayoutPosition(We+u.YGUnwrapFloatOptional($e.getLeadingMargin(m,se)),d.pos[m]),!V($e,m,de)){var Xe=S?$e.getLayout().measuredDimensions[n.YGDimension.Width]+u.YGUnwrapFloatOptional($e.getMarginForAxis(p,se)):He;je=S?He:$e.getLayout().measuredDimensions[n.YGDimension.Height]+u.YGUnwrapFloatOptional($e.getMarginForAxis(m,se));u.YGFloatsEqual(Xe,$e.getLayout().measuredDimensions[n.YGDimension.Width])&&u.YGFloatsEqual(je,$e.getLayout().measuredDimensions[n.YGDimension.Height])||ye($e,Xe,je,c,n.YGMeasureMode.Exactly,n.YGMeasureMode.Exactly,se,le,!0,\"multiline-stretch\",G)}break;case n.YGAlign.Baseline:$e.setLayoutPosition(We+ke-R($e)+u.YGUnwrapFloatOptional($e.getLeadingPosition(n.YGFlexDirection.Column,de)),n.YGEdge.Top);break;case n.YGAlign.Auto:case n.YGAlign.SpaceBetween:case n.YGAlign.SpaceAround:}}We+=He}}if(e.setLayoutMeasuredDimension(b(e,n.YGFlexDirection.Row,t-k,s,s),n.YGDimension.Width),e.setLayoutMeasuredDimension(b(e,n.YGFlexDirection.Column,i-X,l,s),n.YGDimension.Height),w==n.YGMeasureMode.Undefined||e.getStyle().overflow!=n.YGOverflow.Scroll&&w==n.YGMeasureMode.AtMost?e.setLayoutMeasuredDimension(b(e,p,me,v,s),d.dim[p]):w==n.YGMeasureMode.AtMost&&e.getStyle().overflow==n.YGOverflow.Scroll&&e.setLayoutMeasuredDimension(u.YGFloatMax(u.YGFloatMin(ue+M,u.YGUnwrapFloatOptional(I(e,p,me,v))),M),d.dim[p]),C==n.YGMeasureMode.Undefined||e.getStyle().overflow!=n.YGOverflow.Scroll&&C==n.YGMeasureMode.AtMost?e.setLayoutMeasuredDimension(b(e,m,pe+L,D,s),d.dim[m]):C==n.YGMeasureMode.AtMost&&e.getStyle().overflow==n.YGOverflow.Scroll&&e.setLayoutMeasuredDimension(u.YGFloatMax(u.YGFloatMin(de+L,u.YGUnwrapFloatOptional(I(e,m,pe+L,D))),L),d.dim[m]),g&&e.getStyle().flexWrap==n.YGWrap.WrapReverse)for(xe=0;xe<h;xe++){($e=U(e,xe)).getStyle().positionType==n.YGPositionType.Relative&&$e.setLayoutPosition(e.getLayout().measuredDimensions[d.dim[m]]-$e.getLayout().position[d.pos[m]]-$e.getLayout().measuredDimensions[d.dim[m]],d.pos[m])}if(g){var Ze=e.getChildren();for(xe=0;xe<Ze.length;++xe){($e=Ze[xe]).getStyle().positionType==n.YGPositionType.Absolute&&q(e,$e,se,S?w:C,le,c,G)}var Ke=p==n.YGFlexDirection.RowReverse||p==n.YGFlexDirection.ColumnReverse,Qe=m==n.YGFlexDirection.RowReverse||m==n.YGFlexDirection.ColumnReverse;if(Ke||Qe)for(xe=0;xe<h;xe++){var $e;($e=e.getChild(xe)).getStyle().display!=n.YGDisplay.None&&(Ke&&B(e,$e,p),Qe&&B(e,$e,m))}}}}else J(e,t,i,r,a,s,l)}else z(e,t,i,r,a,s,l)}t.YGNodePrintInternal=A,t.YGNodePrint=N,t.YGNodePaddingAndBorderForAxis=_,t.YGNodeAlignItem=P,t.YGBaseline=R,t.YGIsBaselineLayout=O,t.YGNodeDimWithMargin=T,t.YGNodeIsStyleDimDefined=V,t.YGNodeIsLayoutDimDefined=W,t.YGNodeBoundAxisWithinMinAndMax=I,t.YGNodeBoundAxis=b,t.YGNodeSetChildTrailingPosition=B,t.YGConstrainMaxSizeForMode=H,t.YGNodeComputeFlexBasisForChild=k,t.YGNodeAbsoluteLayoutChild=q,t.YGNodeWithMeasureFuncSetMeasuredDimensions=z,t.YGNodeEmptyContainerSetMeasuredDimensions=J,t.YGNodeFixedSizeSetMeasuredDimensions=j,t.YGZeroOutLayoutRecursivly=X,t.YGNodeCalculateAvailableInnerDim=Z,t.YGNodeComputeFlexBasisForChildren=K,t.YGCalculateCollectFlexItemsRowValues=Q,t.YGDistributeFreeSpaceSecondPass=$,t.YGDistributeFreeSpaceFirstPass=ee,t.YGResolveFlexibleLength=te,t.YGJustifyMainAxis=ie,t.YGNodelayoutImpl=ne;var oe=0,re=!1,ae=!1,se=!1,le=\"                                                            \";function ue(e){var t=le.length;return e>t?le:le.substr(t-e)}function de(e,t){return e>=n.YGMeasureModeCount?\"\":t?[\"LAY_UNDEFINED\",\"LAY_EXACTLY\",\"LAY_AT_\",\"MOST\"][e]:[\"UNDEFINED\",\"EXACTLY\",\"AT_MOST\"][e]}function ge(e,t,i){return e==n.YGMeasureMode.Exactly&&u.YGFloatsEqual(t,i)}function Ge(e,t,i,o){return e==n.YGMeasureMode.AtMost&&i==n.YGMeasureMode.Undefined&&(t>=o||u.YGFloatsEqual(t,o))}function ce(e,t,i,o,r){return i==n.YGMeasureMode.AtMost&&e==n.YGMeasureMode.AtMost&&!Y(o)&&!Y(t)&&!Y(r)&&o>t&&(r<=t||u.YGFloatsEqual(t,r))}function Ye(e,i,n,o){var r=e*i,a=r%1;return u.YGFloatsEqual(a,0)?r-=a:u.YGFloatsEqual(a,1)?r=r-a+1:n?r=r-a+1:o?r-=a:r=r-a+(!Y(a)&&(a>.5||u.YGFloatsEqual(a,.5))?1:0),Y(r)||Y(i)?t.YGUndefined:r/i}function fe(e,t,i,n,o,r,a,s,l,d,g,G,c){if(!Y(d)&&d<0||!Y(l)&&l<0)return!1;var f=null!=c&&0!=c.pointScaleFactor,y=f?Ye(t,c.pointScaleFactor,!1,!1):t,h=f?Ye(n,c.pointScaleFactor,!1,!1):n,p=f?Ye(r,c.pointScaleFactor,!1,!1):r,m=f?Ye(s,c.pointScaleFactor,!1,!1):s,S=o==e&&u.YGFloatsEqual(p,y),F=a==i&&u.YGFloatsEqual(m,h),v=S||ge(e,t-g,l)||Ge(e,t-g,o,l)||ce(e,t-g,o,r,l),D=F||ge(i,n-G,d)||Ge(i,n-G,a,d)||ce(i,n-G,a,s,d);return v&&D}function ye(e,t,i,o,r,a,s,l,g,G,c){var Y=e.getLayout();oe++;var f=e.isDirty()&&Y.generationCount!=C||Y.lastOwnerDirection!=o;f&&(Y.nextCachedMeasurementsIndex=0,Y.cachedLayout.widthMeasureMode=n.YGMeasureModeCount-1,Y.cachedLayout.heightMeasureMode=n.YGMeasureModeCount-1,Y.cachedLayout.computedWidth=-1,Y.cachedLayout.computedHeight=-1);var y=null;if(null!=e.getMeasure()){var h=u.YGUnwrapFloatOptional(e.getMarginForAxis(n.YGFlexDirection.Row,s)),p=u.YGUnwrapFloatOptional(e.getMarginForAxis(n.YGFlexDirection.Column,s));if(fe(r,t,a,i,Y.cachedLayout.widthMeasureMode,Y.cachedLayout.availableWidth,Y.cachedLayout.heightMeasureMode,Y.cachedLayout.availableHeight,Y.cachedLayout.computedWidth,Y.cachedLayout.computedHeight,h,p,c))y=Y.cachedLayout;else for(var m=0;m<Y.nextCachedMeasurementsIndex;m++)if(fe(r,t,a,i,Y.cachedMeasurements[m].widthMeasureMode,Y.cachedMeasurements[m].availableWidth,Y.cachedMeasurements[m].heightMeasureMode,Y.cachedMeasurements[m].availableHeight,Y.cachedMeasurements[m].computedWidth,Y.cachedMeasurements[m].computedHeight,h,p,c)){y=Y.cachedMeasurements[m];break}}else if(g)u.YGFloatsEqual(Y.cachedLayout.availableWidth,t)&&u.YGFloatsEqual(Y.cachedLayout.availableHeight,i)&&Y.cachedLayout.widthMeasureMode==r&&Y.cachedLayout.heightMeasureMode==a&&(y=Y.cachedLayout);else for(m=0;m<Y.nextCachedMeasurementsIndex;m++)if(u.YGFloatsEqual(Y.cachedMeasurements[m].availableWidth,t)&&u.YGFloatsEqual(Y.cachedMeasurements[m].availableHeight,i)&&Y.cachedMeasurements[m].widthMeasureMode==r&&Y.cachedMeasurements[m].heightMeasureMode==a){y=Y.cachedMeasurements[m];break}if(f||null==y){if(ae&&(Fe(e,n.YGLogLevel.Verbose,\"%s%d.{%s\",ue(oe),oe,f?\"*\":\"\"),null!=e.getPrintFunc()&&e.getPrintFunc()(e),Fe(e,n.YGLogLevel.Verbose,\"wm: %s, hm: %s, aw: %f ah: %f %s\\n\",de(r,g),de(a,g),t,i,G)),ne(e,t,i,o,r,a,s,l,g,c),ae&&(Fe(e,n.YGLogLevel.Verbose,\"%s%d.}%s\",ue(oe),oe,f?\"*\":\"\"),null!=e.getPrintFunc()&&e.getPrintFunc()(e),Fe(e,n.YGLogLevel.Verbose,\"wm: %s, hm: %s, d: (%f, %f) %s\\n\",de(r,g),de(a,g),Y.measuredDimensions[n.YGDimension.Width],Y.measuredDimensions[n.YGDimension.Height],G)),Y.lastOwnerDirection=o,null==y){Y.nextCachedMeasurementsIndex==d.YG_MAX_CACHED_RESULT_COUNT&&(ae&&Fe(e,n.YGLogLevel.Verbose,\"Out of cache entries!\\n\"),Y.nextCachedMeasurementsIndex=0);var S=void 0;g?S=Y.cachedLayout:(S=Y.cachedMeasurements[Y.nextCachedMeasurementsIndex],Y.nextCachedMeasurementsIndex++),S.availableWidth=t,S.availableHeight=i,S.widthMeasureMode=r,S.heightMeasureMode=a,S.computedWidth=Y.measuredDimensions[n.YGDimension.Width],S.computedHeight=Y.measuredDimensions[n.YGDimension.Height]}}else Y.measuredDimensions[n.YGDimension.Width]=y.computedWidth,Y.measuredDimensions[n.YGDimension.Height]=y.computedHeight,ae&&se&&(Fe(e,n.YGLogLevel.Verbose,\"%s%d.{[skipped] \",ue(oe),oe),null!=e.getPrintFunc()&&e.getPrintFunc()(e),Fe(e,n.YGLogLevel.Verbose,\"wm: %s, hm: %s, aw: %f ah: %f => d: (%f, %f) %s\\n\",de(r,g),de(a,g),t,i,y.computedWidth,y.computedHeight,G));return g&&(e.setLayoutDimension(e.getLayout().measuredDimensions[n.YGDimension.Width],n.YGDimension.Width),e.setLayoutDimension(e.getLayout().measuredDimensions[n.YGDimension.Height],n.YGDimension.Height),e.setHasNewLayout(!0),e.setDirty(!1)),oe--,Y.generationCount=C,f||null==y}function he(e,t){return e%t}function pe(e,t,i,o){if(0!=t){var r=e.getLayout().position[n.YGEdge.Left],a=e.getLayout().position[n.YGEdge.Top],s=e.getLayout().dimensions[n.YGDimension.Width],l=e.getLayout().dimensions[n.YGDimension.Height],d=i+r,g=o+a,G=d+s,c=g+l,Y=e.getNodeType()==n.YGNodeType.Text;e.setLayoutPosition(Ye(r,t,!1,Y),n.YGEdge.Left),e.setLayoutPosition(Ye(a,t,!1,Y),n.YGEdge.Top);var f=!u.YGFloatsEqual(he(s*t,1),0)&&!u.YGFloatsEqual(he(s*t,1),1),y=!u.YGFloatsEqual(he(l*t,1),0)&&!u.YGFloatsEqual(he(l*t,1),1);e.setLayoutDimension(Ye(G,t,Y&&f,Y&&!f)-Ye(d,t,!1,Y),n.YGDimension.Width),e.setLayoutDimension(Ye(c,t,Y&&y,Y&&!y)-Ye(g,t,!1,Y),n.YGDimension.Height);for(var h=E(e),p=0;p<h;p++)pe(U(e,p),t,d,g)}}function me(e,t,i,o){for(var r=[],a=4;a<arguments.length;a++)r[a-4]=arguments[a];var s=null!=e?e:p();if(s.logger(s,t,i,o,r),i==n.YGLogLevel.Fatal)throw new Error(\"Abort Yoga\")}function Se(e,t,i){for(var n=[],o=3;o<arguments.length;o++)n[o-3]=arguments[o];me(e,null,t,i,n)}function Fe(e,t,i){for(var n=[],o=3;o<arguments.length;o++)n[o-3]=arguments[o];me(null==e?null:e.getConfig(),e,t,i,n)}function ve(e,t,i){t||Fe(e,n.YGLogLevel.Fatal,\"%s\\n\",i)}function De(e,t,i){t||Se(e,n.YGLogLevel.Fatal,\"%s\\n\",i)}function xe(e,t){return e.experimentalFeatures[t]}function Me(e,t){for(var i=0;i<e.length;++i){var n=e[i];t(n),Me(n.getChildren(),t)}}t.YGSpacer=ue,t.YGMeasureModeName=de,t.YGMeasureModeSizeIsExactAndMatchesOldMeasuredSize=ge,t.YGMeasureModeOldSizeIsUnspecifiedAndStillFits=Ge,t.YGMeasureModeNewMeasureSizeIsStricterAndStillValid=ce,t.YGRoundValueToPixelGrid=Ye,t.YGNodeCanUseCachedMeasurement=fe,t.YGLayoutNodeInternal=ye,t.YGConfigSetPointScaleFactor=function(e,t){De(e,t>=0,\"Scale factor should not be less than zero\"),e.pointScaleFactor=0==t?0:t},t.YGRoundToPixelGrid=pe,t.YGNodeCalculateLayout=function(e,i,o,r){C++,e.resolveDimension();var a=t.YGUndefined,s=n.YGMeasureMode.Undefined;V(e,n.YGFlexDirection.Row,i)?(a=u.YGUnwrapFloatOptional(u.YGResolveValue(e.getResolvedDimension(d.dim[n.YGFlexDirection.Row]),i).add(e.getMarginForAxis(n.YGFlexDirection.Row,i))),s=n.YGMeasureMode.Exactly):u.YGResolveValue(e.getStyle().maxDimensions[n.YGDimension.Width],i).isUndefined()?s=Y(a=i)?n.YGMeasureMode.Undefined:n.YGMeasureMode.Exactly:(a=u.YGUnwrapFloatOptional(u.YGResolveValue(e.getStyle().maxDimensions[n.YGDimension.Width],i)),s=n.YGMeasureMode.AtMost);var l=t.YGUndefined,g=n.YGMeasureMode.Undefined;if(V(e,n.YGFlexDirection.Column,o)?(l=u.YGUnwrapFloatOptional(u.YGResolveValue(e.getResolvedDimension(d.dim[n.YGFlexDirection.Column]),o).add(e.getMarginForAxis(n.YGFlexDirection.Column,i))),g=n.YGMeasureMode.Exactly):u.YGResolveValue(e.getStyle().maxDimensions[n.YGDimension.Height],o).isUndefined()?g=Y(l=o)?n.YGMeasureMode.Undefined:n.YGMeasureMode.Exactly:(l=u.YGUnwrapFloatOptional(u.YGResolveValue(e.getStyle().maxDimensions[n.YGDimension.Height],o)),g=n.YGMeasureMode.AtMost),ye(e,a,l,r,s,g,i,o,!0,\"initial\",e.getConfig())&&(e.setPosition(e.getLayout().direction,i,o,i),pe(e,e.getConfig().pointScaleFactor,0,0),re&&(n.YGPrintOptions.Layout,n.YGPrintOptions.Children,n.YGPrintOptions.Style)),e.getConfig().shouldDiffLayoutWithoutLegacyStretchBehaviour&&e.didUseLegacyFlag()){console.log(\"legacy config\");var G=F(e);G.resolveDimension(),G.markDirtyAndPropogateDownwards(),C++,G.setAndPropogateUseLegacyFlag(!1),ye(G,a,l,r,s,g,i,o,!0,\"initial\",G.getConfig())&&(G.setPosition(G.getLayout().direction,i,o,i),pe(G,G.getConfig().pointScaleFactor,0,0),e.setLayoutDoesLegacyFlagAffectsLayout(!G.isLayoutTreeEqualToNode(e)),re&&(n.YGPrintOptions.Layout,n.YGPrintOptions.Children,n.YGPrintOptions.Style)),D(G),x(G)}},t.YGConfigSetLogger=function(e,t){e.logger=null!=t?t:c},t.YGConfigSetShouldDiffLayoutWithoutLegacyStretchBehaviour=function(e,t){e.shouldDiffLayoutWithoutLegacyStretchBehaviour=t},t.YGVLog=me,t.YGLogWithConfig=Se,t.YGLog=Fe,t.YGAssert=function(e,t){e||Fe(null,n.YGLogLevel.Fatal,\"%s\\n\",t)},t.YGAssertWithNode=ve,t.YGAssertWithConfig=De,t.YGConfigSetExperimentalFeatureEnabled=function(e,t,i){e.experimentalFeatures[t]=i},t.YGConfigIsExperimentalFeatureEnabled=xe,t.YGConfigSetUseWebDefaults=function(e,t){e.useWebDefaults=t},t.YGConfigSetUseLegacyStretchBehaviour=function(e,t){e.useLegacyStretchBehaviour=t},t.YGConfigGetUseWebDefaults=function(e){return e.useWebDefaults},t.YGConfigSetContext=function(e,t){e.context=t},t.YGConfigGetContext=function(e){return e.context},t.YGConfigSetCloneNodeFunc=function(e,t){e.cloneNodeCallback=t},t.YGTraverseChildrenPreOrder=Me,t.YGTraversePreOrder=function(e,t){e&&(t(e),Me(e.getChildren(),t))}},function(e,t,i){\"use strict\";t.__esModule=!0;var n=i(1),o=function(){function e(t){if(void 0===t&&(t=void 0),t instanceof e)return this.value_=t.getValue(),void(this.isUndefined_=t.isUndefined());n.YGFloatIsUndefined(t)?(this.value_=0,this.isUndefined_=!0):(this.value_=t,this.isUndefined_=!1)}return e.prototype.clone=function(){return new e(this.isUndefined_?void 0:this.value_)},e.prototype.getValue=function(){if(this.isUndefined_)throw\"Tried to get value of an undefined YGFloatOptional\";return this.value_},e.prototype.setValue=function(e){this.value_=e,this.isUndefined_=!1},e.prototype.isUndefined=function(){return this.isUndefined_},e.prototype.add=function(t){return this.isUndefined_||t.isUndefined()?new e:new e(this.value_+t.getValue())},e.prototype.isBigger=function(e){return!this.isUndefined_&&!e.isUndefined()&&this.value_>e.getValue()},e.prototype.isSmaller=function(e){return!this.isUndefined_&&!e.isUndefined()&&this.value_<e.getValue()},e.prototype.isBiggerEqual=function(e){return!!this.isEqual(e)||this.isBigger(e)},e.prototype.isSmallerEqual=function(e){return!!this.isEqual(e)||this.isSmaller(e)},e.prototype.isEqual=function(e){return this.isUndefined_==e.isUndefined()&&(!!this.isUndefined_||this.value_==e.getValue())},e.prototype.isDiff=function(e){return!this.isEqual(e)},e.prototype.isEqualValue=function(e){return n.YGFloatIsUndefined(e)==this.isUndefined_&&(this.isUndefined_||e==this.value_)},e.prototype.isDiffValue=function(e){return!this.isEqualValue(e)},e}();t.YGFloatOptional=o},function(e,t,i){\"use strict\";t.__esModule=!0;var n=i(0),o=i(2),r=i(1),a=function(){return function(){this.itemsOnLine=0,this.sizeConsumedOnCurrentLine=0,this.totalFlexGrowFactors=0,this.totalFlexShrinkScaledFactors=0,this.endOfLineIndex=0,this.relativeChildren=[],this.remainingFreeSpace=0,this.mainDim=0,this.crossDim=0}}();function s(e,t){return e.unit==t.unit&&(!!(e.unit==n.YGUnit.Undefined||r.YGFloatIsUndefined(e.value)&&r.YGFloatIsUndefined(t.value))||Math.abs(e.value-t.value)<1e-4)}function l(e,t){return r.YGFloatIsUndefined(e)||r.YGFloatIsUndefined(t)?r.YGFloatIsUndefined(e)&&r.YGFloatIsUndefined(t):Math.abs(e-t)<1e-4}function u(e,t){switch(e.unit){case n.YGUnit.Undefined:case n.YGUnit.Auto:return new o.YGFloatOptional;case n.YGUnit.Point:return new o.YGFloatOptional(e.value);case n.YGUnit.Percent:return new o.YGFloatOptional(e.value*t*.01)}return new o.YGFloatOptional}function d(e){return e==n.YGFlexDirection.Column||e==n.YGFlexDirection.ColumnReverse}function g(e,t){if(t==n.YGDirection.RTL){if(e==n.YGFlexDirection.Row)return n.YGFlexDirection.RowReverse;if(e==n.YGFlexDirection.RowReverse)return n.YGFlexDirection.Row}return e}t.YGCollectFlexItemsRowValues=a,t.YGValueEqual=s,t.YGFloatsEqual=l,t.YGFloatMax=function(e,t){return r.YGFloatIsUndefined(e)||r.YGFloatIsUndefined(t)?r.YGFloatIsUndefined(e)?t:e:Math.max(e,t)},t.YGFloatOptionalMax=function(e,t){return e.isUndefined()||t.isUndefined()?e.isUndefined()?t:e:e.getValue()>t.getValue()?e:t},t.YGFloatMin=function(e,t){return r.YGFloatIsUndefined(e)||r.YGFloatIsUndefined(t)?r.YGFloatIsUndefined(e)?t:e:Math.min(e,t)},t.YGFloatArrayEqual=function(e,t){for(var i=!0,n=0;n<e.length&&i;++n)i=l(e[n],t[n]);return i},t.YGValueArrayEqual=function(e,t){for(var i=!0,n=0;n<e.length&&i;++n)i=s(e[n],t[n]);return i},t.YGFloatSanitize=function(e){return r.YGFloatIsUndefined(e)?0:e},t.YGUnwrapFloatOptional=function(e){return e.isUndefined()?r.YGUndefined:e.getValue()},t.YGFlexDirectionCross=function(e,t){return d(e)?g(n.YGFlexDirection.Row,t):n.YGFlexDirection.Column},t.YGFlexDirectionIsRow=function(e){return e==n.YGFlexDirection.Row||e==n.YGFlexDirection.RowReverse},t.YGResolveValue=u,t.YGFlexDirectionIsColumn=d,t.YGResolveFlexDirection=g,t.YGResolveValueMargin=function(e,t){return e.unit==n.YGUnit.Auto?new o.YGFloatOptional(0):u(e,t)},t.cloneYGValueArray=function(e){for(var t=new Array(e.length),i=0;i<e.length;i++)t[i]=e[i].clone();return t}},function(e,t,i){\"use strict\";t.__esModule=!0;var n=i(0),o=i(1),r=function(){function e(){this.availableWidth=0,this.availableHeight=0,this.widthMeasureMode=n.YGMeasureMode.AtMost,this.heightMeasureMode=n.YGMeasureMode.AtMost,this.computedWidth=-1,this.computedHeight=-1}return e.prototype.isEqual=function(e){var t=this.widthMeasureMode==e.widthMeasureMode&&this.heightMeasureMode==e.heightMeasureMode;return o.YGFloatIsUndefined(this.availableWidth)&&o.YGFloatIsUndefined(e.availableWidth)||(t=t&&this.availableWidth==e.availableWidth),o.YGFloatIsUndefined(this.availableHeight)&&o.YGFloatIsUndefined(e.availableHeight)||(t=t&&this.availableHeight==e.availableHeight),o.YGFloatIsUndefined(this.computedWidth)&&o.YGFloatIsUndefined(e.computedWidth)||(t=t&&this.computedWidth==e.computedWidth),o.YGFloatIsUndefined(this.computedHeight)&&o.YGFloatIsUndefined(e.computedHeight)||(t=t&&this.computedHeight==e.computedHeight),t},e.prototype.clone=function(){var t=new e;return t.availableWidth=this.availableWidth,t.availableHeight=this.availableHeight,t.widthMeasureMode=this.widthMeasureMode,t.heightMeasureMode=this.heightMeasureMode,t.computedWidth=this.computedWidth,t.computedHeight=this.computedHeight,t},e}();t.YGCachedMeasurement=r,t.leading=[n.YGEdge.Top,n.YGEdge.Bottom,n.YGEdge.Left,n.YGEdge.Right],t.trailing=[n.YGEdge.Bottom,n.YGEdge.Top,n.YGEdge.Right,n.YGEdge.Left],t.pos=[n.YGEdge.Top,n.YGEdge.Bottom,n.YGEdge.Left,n.YGEdge.Right],t.dim=[n.YGDimension.Height,n.YGDimension.Height,n.YGDimension.Width,n.YGDimension.Width],t.YG_MAX_CACHED_RESULT_COUNT=16,t.kDefaultFlexGrow=0,t.kDefaultFlexShrink=0,t.kWebDefaultFlexShrink=1},function(e,t,i){\"use strict\";t.__esModule=!0;var n=function(){return[!1,!1,!1]},o=function(){return function(e){this.cloneNodeCallback=null,this.experimentalFeatures=n(),this.useWebDefaults=!1,this.useLegacyStretchBehaviour=!1,this.shouldDiffLayoutWithoutLegacyStretchBehaviour=!1,this.pointScaleFactor=1,this.logger=e,this.context=null}}();t.YGConfig=o},function(e,t,i){\"use strict\";t.__esModule=!0;var n=i(0),o=i(2),r=i(4),a=i(3),s=i(1),l=function(){return[void 0,void 0]},u=16;function d(e){for(var t=[],i=0;i<e;i++)t.push(new r.YGCachedMeasurement);return t}var g=function(){function e(){this.dimensions=l(),this.direction=n.YGDirection.Inherit,this.computedFlexBasisGeneration=0,this.computedFlexBasis=new o.YGFloatOptional,this.hadOverflow=!1,this.generationCount=0,this.lastOwnerDirection=n.YGDirection.RTL,this.nextCachedMeasurementsIndex=0,this.measuredDimensions=l(),this.cachedLayout=new r.YGCachedMeasurement,this.didUseLegacyFlag=!1,this.doesLegacyStretchFlagAffectsLayout=!1,this.position=[void 0,void 0,void 0,void 0],this.margin=[void 0,void 0,void 0,void 0,void 0,void 0],this.border=[void 0,void 0,void 0,void 0,void 0,void 0],this.padding=[void 0,void 0,void 0,void 0,void 0,void 0],this.cachedMeasurements=d(u)}return e.prototype.equal=function(e){for(var t=a.YGFloatArrayEqual(this.position,e.position)&&a.YGFloatArrayEqual(this.dimensions,e.dimensions)&&a.YGFloatArrayEqual(this.margin,e.margin)&&a.YGFloatArrayEqual(this.border,e.border)&&a.YGFloatArrayEqual(this.padding,e.padding)&&this.direction==e.direction&&this.hadOverflow==e.hadOverflow&&this.lastOwnerDirection==e.lastOwnerDirection&&this.nextCachedMeasurementsIndex==e.nextCachedMeasurementsIndex&&this.cachedLayout==e.cachedLayout&&this.computedFlexBasis==e.computedFlexBasis,i=0;i<u&&t;++i)t=t&&this.cachedMeasurements[i]==e.cachedMeasurements[i];return s.YGFloatIsUndefined(this.measuredDimensions[0])&&s.YGFloatIsUndefined(e.measuredDimensions[0])||(t=t&&this.measuredDimensions[0]==e.measuredDimensions[0]),s.YGFloatIsUndefined(this.measuredDimensions[1])&&s.YGFloatIsUndefined(e.measuredDimensions[1])||(t=t&&this.measuredDimensions[1]==e.measuredDimensions[1]),t},e.prototype.diff=function(e){return!this.equal(e)},e.prototype.clean=function(){this.dimensions=l(),this.direction=n.YGDirection.Inherit,this.computedFlexBasisGeneration=0,this.computedFlexBasis=new o.YGFloatOptional,this.hadOverflow=!1,this.generationCount=0,this.lastOwnerDirection=n.YGDirection.RTL,this.nextCachedMeasurementsIndex=0,this.measuredDimensions=l(),this.cachedLayout=new r.YGCachedMeasurement,this.didUseLegacyFlag=!1,this.doesLegacyStretchFlagAffectsLayout=!1,this.position=[void 0,void 0,void 0,void 0],this.margin=[void 0,void 0,void 0,void 0,void 0,void 0],this.border=[void 0,void 0,void 0,void 0,void 0,void 0],this.padding=[void 0,void 0,void 0,void 0,void 0,void 0],this.cachedMeasurements=d(u)},e.prototype.clone=function(){var t=new e;return t.dimensions=[this.dimensions[0],this.dimensions[1]],t.direction=this.direction,t.computedFlexBasisGeneration=this.computedFlexBasisGeneration,t.computedFlexBasis=this.computedFlexBasis.clone(),t.hadOverflow=this.hadOverflow,t.generationCount=this.generationCount,t.lastOwnerDirection=this.lastOwnerDirection,t.nextCachedMeasurementsIndex=this.nextCachedMeasurementsIndex,t.measuredDimensions=[this.measuredDimensions[0],this.measuredDimensions[1]],t.cachedLayout=this.cachedLayout.clone(),t.didUseLegacyFlag=this.didUseLegacyFlag,t.doesLegacyStretchFlagAffectsLayout=this.doesLegacyStretchFlagAffectsLayout,t.position=[this.position[0],this.position[1],this.position[2],this.position[3]],t.margin=[this.margin[0],this.margin[1],this.margin[2],this.margin[3],this.margin[4],this.margin[5]],t.border=[this.border[0],this.border[1],this.border[2],this.border[3],this.border[4],this.border[5]],t.padding=[this.padding[0],this.padding[1],this.padding[2],this.padding[3],this.padding[4],this.padding[5]],t.cachedMeasurements=d(u),t},e}();t.YGLayout=g},function(e,t,i){\"use strict\";t.__esModule=!0;var n=function(){function e(e,t){this.value=e,this.unit=t}return e.prototype.clone=function(){return new e(this.value,this.unit)},e}();t.YGValue=n},function(e,t,i){\"use strict\";t.__esModule=!0;var n=i(0),o=i(1),r=i(3);t.ALIGN_AUTO=n.YGAlign.Auto,t.ALIGN_FLEX_START=n.YGAlign.FlexStart,t.ALIGN_CENTER=n.YGAlign.Center,t.ALIGN_FLEX_END=n.YGAlign.FlexEnd,t.ALIGN_STRETCH=n.YGAlign.Stretch,t.ALIGN_BASELINE=n.YGAlign.Baseline,t.ALIGN_SPACE_BETWEEN=n.YGAlign.SpaceBetween,t.ALIGN_SPACE_AROUND=n.YGAlign.SpaceAround,t.DIMENSION_WIDTH=n.YGDimension.Width,t.DIMENSION_HEIGHT=n.YGDimension.Height,t.DIRECTION_INHERIT=n.YGDirection.Inherit,t.DIRECTION_LTR=n.YGDirection.LTR,t.DIRECTION_RTL=n.YGDirection.RTL,t.DISPLAY_FLEX=n.YGDisplay.Flex,t.DISPLAY_NONE=n.YGDisplay.None,t.EDGE_LEFT=n.YGEdge.Left,t.EDGE_TOP=n.YGEdge.Top,t.EDGE_RIGHT=n.YGEdge.Right,t.EDGE_BOTTOM=n.YGEdge.Bottom,t.EDGE_START=n.YGEdge.Start,t.EDGE_END=n.YGEdge.End,t.EDGE_HORIZONTAL=n.YGEdge.Horizontal,t.EDGE_VERTICAL=n.YGEdge.Vertical,t.EDGE_ALL=n.YGEdge.All,t.EXPERIMENTALFEATURE_WEBFLEXBASIS=n.YGExperimentalFeature.WebFlexBasis,t.FLEX_DIRECTION_COLUMN=n.YGFlexDirection.Column,t.FLEX_DIRECTION_COLUMN_REVERSE=n.YGFlexDirection.ColumnReverse,t.FLEX_DIRECTION_ROW=n.YGFlexDirection.Row,t.FLEX_DIRECTION_ROW_REVERSE=n.YGFlexDirection.RowReverse,t.JUSTIFY_FLEX_START=n.YGJustify.FlexStart,t.JUSTIFY_CENTER=n.YGJustify.Center,t.JUSTIFY_FLEX_END=n.YGJustify.FlexEnd,t.JUSTIFY_SPACE_BETWEEN=n.YGJustify.SpaceBetween,t.JUSTIFY_SPACE_AROUND=n.YGJustify.SpaceAround,t.JUSTIFY_SPACE_EVENLY=n.YGJustify.SpaceEvenly,t.LOGLEVEL_ERROR=n.YGLogLevel.Error,t.LOGLEVEL_WARN=n.YGLogLevel.Warn,t.LOGLEVEL_INFO=n.YGLogLevel.Info,t.LOGLEVEL_DEBUG=n.YGLogLevel.Debug,t.LOGLEVEL_VERBOSE=n.YGLogLevel.Verbose,t.LOGLEVEL_FATAL=n.YGLogLevel.Fatal,t.MEASURE_MODE_UNDEFINED=n.YGMeasureMode.Undefined,t.MEASURE_MODE_EXACTLY=n.YGMeasureMode.Exactly,t.MEASURE_MODE_AT_MOST=n.YGMeasureMode.AtMost,t.NODE_TYPE_DEFAULT=n.YGNodeType.Default,t.NODE_TYPE_TEXT=n.YGNodeType.Text,t.OVERFLOW_VISIBLE=n.YGOverflow.Visible,t.OVERFLOW_HIDDEN=n.YGOverflow.Hidden,t.OVERFLOW_SCROLL=n.YGOverflow.Scroll,t.POSITION_TYPE_RELATIVE=n.YGPositionType.Relative,t.POSITION_TYPE_ABSOLUTE=n.YGPositionType.Absolute,t.UNIT_UNDEFINED=n.YGUnit.Undefined,t.UNIT_POINT=n.YGUnit.Point,t.UNIT_PERCENT=n.YGUnit.Percent,t.UNIT_AUTO=n.YGUnit.Auto,t.WRAP_NO_WRAP=n.YGWrap.NoWrap,t.WRAP_WRAP=n.YGWrap.Wrap,t.WRAP_WRAP_REVERSE=n.YGWrap.WrapReverse,t.UNDEFINED=void 0;var a=function(){return function(){}}();t.Layout=a;var s=function(){function e(e,t){e?(this.width=e,this.height=t):(this.width=0,this.height=0)}return e.fromJS=function(t){return new e(t.width,t.height)},e}();t.Size=s;var l=function(){return function(e,t){e?(this.unit=e,this.value=t):(this.unit=n.YGUnit.Undefined,this.value=0)}}();t.Value=l;var u=function(){function e(){this.config=o.YGConfigNew()}return e.create=function(){return new e},e.prototype.free=function(){o.YGConfigFree(this.config)},e.prototype.setExperimentalFeatureEnabled=function(e,t){o.YGConfigSetExperimentalFeatureEnabled(this.config,e,t)},e.prototype.setPointScaleFactor=function(e){o.YGConfigSetPointScaleFactor(this.config,e)},e.prototype.isExperimentalFeatureEnabled=function(e){o.YGConfigIsExperimentalFeatureEnabled(this.config,e)},e}();function d(e){return o.YGNodeGetContext(e)}function g(e){return new l(e.unit,e.value)}t.Config=u;var G=function(){function e(e){this.node=e?o.YGNodeNewWithConfig(e.config):o.YGNodeNew(),o.YGNodeSetContext(this.node,this)}return e.create=function(t){return t?new e(t):new e},e.createDefault=function(){return new e(void 0)},e.createWithConfig=function(t){return new e(t)},e.prototype.calculateLayout=function(e,t,i){o.YGNodeCalculateLayout(this.node,e,t,i)},e.prototype.copyStyle=function(e){o.YGNodeCopyStyle(this.node,e)},e.prototype.free=function(){o.YGNodeFree(this.node)},e.prototype.freeRecursive=function(){o.YGNodeFreeRecursive(this.node)},e.prototype.getAlignContent=function(){return o.YGNodeStyleGetAlignContent(this.node)},e.prototype.getAlignItems=function(){return o.YGNodeStyleGetAlignItems(this.node)},e.prototype.getAlignSelf=function(){return o.YGNodeStyleGetAlignSelf(this.node)},e.prototype.getAspectRatio=function(){return o.YGNodeStyleGetAspectRatio(this.node)},e.prototype.getBorder=function(e){return o.YGNodeStyleGetBorder(this.node,e)},e.prototype.getChild=function(e){return d(o.YGNodeGetChild(this.node,e))},e.prototype.getChildCount=function(){return o.YGNodeGetChildCount(this.node)},e.prototype.getComputedBorder=function(e){return o.YGNodeLayoutGetBorder(this.node,e)},e.prototype.getComputedBottom=function(){return o.YGNodeLayoutGetBottom(this.node)},e.prototype.getComputedHeight=function(){return r.YGFloatSanitize(o.YGNodeLayoutGetHeight(this.node))},e.prototype.getComputedLayout=function(){var e=new a;return e.left=o.YGNodeLayoutGetLeft(this.node),e.right=o.YGNodeLayoutGetRight(this.node),e.top=o.YGNodeLayoutGetTop(this.node),e.bottom=o.YGNodeLayoutGetBottom(this.node),e.width=o.YGNodeLayoutGetWidth(this.node),e.height=o.YGNodeLayoutGetHeight(this.node),e},e.prototype.getComputedLeft=function(){return r.YGFloatSanitize(o.YGNodeLayoutGetLeft(this.node))},e.prototype.getComputedMargin=function(e){return r.YGFloatSanitize(o.YGNodeLayoutGetMargin(this.node,e))},e.prototype.getComputedPadding=function(e){return r.YGFloatSanitize(o.YGNodeLayoutGetPadding(this.node,e))},e.prototype.getComputedRight=function(){return r.YGFloatSanitize(o.YGNodeLayoutGetRight(this.node))},e.prototype.getComputedTop=function(){return r.YGFloatSanitize(o.YGNodeLayoutGetTop(this.node))},e.prototype.getComputedWidth=function(){return r.YGFloatSanitize(o.YGNodeLayoutGetWidth(this.node))},e.prototype.getDisplay=function(){return o.YGNodeStyleGetDisplay(this.node)},e.prototype.getFlexBasis=function(){return g(o.YGNodeStyleGetFlexBasis(this.node))},e.prototype.getFlexDirection=function(){return o.YGNodeStyleGetFlexDirection(this.node)},e.prototype.getFlexGrow=function(){return o.YGNodeStyleGetFlexGrow(this.node)},e.prototype.getFlexShrink=function(){return o.YGNodeStyleGetFlexShrink(this.node)},e.prototype.getFlexWrap=function(){return o.YGNodeStyleGetFlexWrap(this.node)},e.prototype.getHeight=function(){return g(o.YGNodeStyleGetHeight(this.node))},e.prototype.getJustifyContent=function(){return o.YGNodeStyleGetJustifyContent(this.node)},e.prototype.getMargin=function(e){return g(o.YGNodeStyleGetMargin(this.node,e))},e.prototype.getMaxHeight=function(){return g(o.YGNodeStyleGetMaxHeight(this.node))},e.prototype.getMaxWidth=function(){return g(o.YGNodeStyleGetMaxWidth(this.node))},e.prototype.getMinHeight=function(){return g(o.YGNodeStyleGetMinHeight(this.node))},e.prototype.getMinWidth=function(){return g(o.YGNodeStyleGetMinWidth(this.node))},e.prototype.getOverflow=function(){return o.YGNodeStyleGetOverflow(this.node)},e.prototype.getPadding=function(e){return g(o.YGNodeStyleGetPadding(this.node,e))},e.prototype.getParent=function(){var e=o.YGNodeGetParent(this.node);if(e)return d(e)},e.prototype.getPosition=function(e){return g(o.YGNodeStyleGetPosition(this.node,e))},e.prototype.getPositionType=function(){return o.YGNodeStyleGetPositionType(this.node)},e.prototype.getWidth=function(){return g(o.YGNodeStyleGetWidth(this.node))},e.prototype.insertChild=function(e,t){o.YGNodeInsertChild(this.node,e.node,t)},e.prototype.isDirty=function(){return o.YGNodeIsDirty(this.node)},e.prototype.markDirty=function(){o.YGNodeMarkDirty(this.node)},e.prototype.removeChild=function(e){o.YGNodeRemoveChild(this.node,e.node)},e.prototype.reset=function(){o.YGNodeReset(this.node)},e.prototype.setAlignContent=function(e){o.YGNodeStyleSetAlignContent(this.node,e)},e.prototype.setAlignItems=function(e){o.YGNodeStyleSetAlignItems(this.node,e)},e.prototype.setAlignSelf=function(e){o.YGNodeStyleSetAlignSelf(this.node,e)},e.prototype.setAspectRatio=function(e){o.YGNodeStyleSetAspectRatio(this.node,e)},e.prototype.setBorder=function(e,t){o.YGNodeStyleSetBorder(this.node,e,t)},e.prototype.setDisplay=function(e){o.YGNodeStyleSetDisplay(this.node,e)},e.prototype.setFlex=function(e){o.YGNodeStyleSetFlex(this.node,e)},e.prototype.setFlexBasis=function(e){if(\"string\"==typeof e){if(\"%\"!==e[e.length-1])throw new Error(\"Invalid input type\");this.setFlexBasisPercent(parseFloat(e))}else o.YGNodeStyleSetFlexBasis(this.node,e)},e.prototype.setFlexBasisPercent=function(e){o.YGNodeStyleSetFlexBasisPercent(this.node,e)},e.prototype.setFlexDirection=function(e){o.YGNodeStyleSetFlexDirection(this.node,e)},e.prototype.setFlexGrow=function(e){o.YGNodeStyleSetFlexGrow(this.node,e)},e.prototype.setFlexShrink=function(e){o.YGNodeStyleSetFlexShrink(this.node,e)},e.prototype.setFlexWrap=function(e){o.YGNodeStyleSetFlexWrap(this.node,e)},e.prototype.setHeight=function(e){if(\"string\"==typeof e)if(\"auto\"===e)this.setHeightAuto();else{if(\"%\"!==e[e.length-1])throw new Error(\"Invalid input type.\");this.setHeightPercent(parseFloat(e))}else o.YGNodeStyleSetHeight(this.node,e)},e.prototype.setHeightAuto=function(){o.YGNodeStyleSetHeightAuto(this.node)},e.prototype.setHeightPercent=function(e){o.YGNodeStyleSetHeightPercent(this.node,e)},e.prototype.setJustifyContent=function(e){o.YGNodeStyleSetJustifyContent(this.node,e)},e.prototype.setMargin=function(e,t){if(\"string\"==typeof t)if(\"auto\"===t)this.setMarginAuto(e);else{if(\"%\"!==t[t.length-1])throw new Error(\"Invalid input type.\");this.setMarginPercent(e,parseFloat(t))}else o.YGNodeStyleSetMargin(this.node,e,t)},e.prototype.setMarginAuto=function(e){o.YGNodeStyleSetMarginAuto(this.node,e)},e.prototype.setMarginPercent=function(e,t){o.YGNodeStyleSetMarginPercent(this.node,e,t)},e.prototype.setMaxHeight=function(e){if(\"string\"==typeof e){if(\"%\"!==e[e.length-1])throw new Error(\"Invalid input type.\");this.setMaxHeightPercent(parseFloat(e))}else o.YGNodeStyleSetMaxHeight(this.node,e)},e.prototype.setMaxHeightPercent=function(e){o.YGNodeStyleSetMaxHeightPercent(this.node,e)},e.prototype.setMaxWidth=function(e){if(\"string\"==typeof e){if(\"%\"!==e[e.length-1])throw new Error(\"Invalid input type.\");this.setMaxWidthPercent(parseFloat(e))}else o.YGNodeStyleSetMaxWidth(this.node,e)},e.prototype.setMaxWidthPercent=function(e){o.YGNodeStyleSetMaxWidthPercent(this.node,e)},e.prototype.setMeasureFunc=function(e){null==e?this.unsetMeasureFunc():o.YGNodeSetMeasureFunc(this.node,e)},e.prototype.unsetMeasureFunc=function(){o.YGNodeSetMeasureFunc(this.node,null)},e.prototype.setMinHeight=function(e){if(\"string\"==typeof e){if(\"%\"!==e[e.length-1])throw new Error(\"Invalid input type.\");this.setMinHeightPercent(parseFloat(e))}else o.YGNodeStyleSetMinHeight(this.node,e)},e.prototype.setMinHeightPercent=function(e){o.YGNodeStyleSetMinHeightPercent(this.node,e)},e.prototype.setMinWidth=function(e){if(\"string\"==typeof e){if(\"%\"!==e[e.length-1])throw new Error(\"Invalid input type.\");this.setMinWidthPercent(parseFloat(e))}else o.YGNodeStyleSetMinWidth(this.node,e)},e.prototype.setMinWidthPercent=function(e){o.YGNodeStyleSetMinWidthPercent(this.node,e)},e.prototype.setOverflow=function(e){o.YGNodeStyleSetOverflow(this.node,e)},e.prototype.setPadding=function(e,t){if(\"string\"==typeof t){if(\"%\"!==t[t.length-1])throw new Error(\"Invalid input type.\");this.setPaddingPercent(e,parseFloat(t))}else o.YGNodeStyleSetPadding(this.node,e,t)},e.prototype.setPaddingPercent=function(e,t){o.YGNodeStyleSetPaddingPercent(this.node,e,t)},e.prototype.setPosition=function(e,t){if(\"string\"==typeof t){if(\"%\"!==t[t.length-1])throw new Error(\"Invalid input type.\");this.setPositionPercent(e,parseFloat(t))}else o.YGNodeStyleSetPosition(this.node,e,t)},e.prototype.setPositionPercent=function(e,t){o.YGNodeStyleSetPositionPercent(this.node,e,t)},e.prototype.setPositionType=function(e){o.YGNodeStyleSetPositionType(this.node,e)},e.prototype.setWidth=function(e){if(\"string\"==typeof e)if(\"%\"===e[e.length-1])this.setWidthPercent(parseFloat(e));else{if(\"auto\"!==e)throw new Error(\"Invalid input type.\");this.setWidthAuto()}else o.YGNodeStyleSetWidth(this.node,e)},e.prototype.setWidthAuto=function(){o.YGNodeStyleSetWidthAuto(this.node)},e.prototype.setWidthPercent=function(e){o.YGNodeStyleSetWidthPercent(this.node,e)},e.prototype.unsetMeasureFun=function(){o.YGNodeSetMeasureFunc(this.node,void 0)},e}();t.Node=G,t.getInstanceCount=function(){return o.YGNodeGetInstanceCount()}},function(e,t,i){\"use strict\";t.__esModule=!0;var n=i(0),o=i(2),r=i(5),a=i(3),s=i(6),l=i(10),u=i(4),d=i(1),g=function(){function e(t,i,o,a,u,g,G,c,Y,f,y,h,p,m,S){if(void 0===t&&(t=null),void 0===i&&(i=null),void 0===o&&(o=!0),void 0===a&&(a=n.YGNodeType.Default),void 0===u&&(u=null),void 0===g&&(g=null),void 0===G&&(G=null),void 0===c&&(c=new l.YGStyle),void 0===Y&&(Y=new s.YGLayout),void 0===f&&(f=0),void 0===y&&(y=null),void 0===h&&(h=[]),void 0===p&&(p=null),void 0===m&&(m=!1),void 0===S&&(S=[d.YGValueUndefined(),d.YGValueUndefined()]),t instanceof e)return console.log(\"from node\"),void this.fromNode(t);this.print_=i,this.hasNewLayout_=o,this.nodeType_=a,this.measure_=u,this.baseline_=g,this.dirtied_=G,this.style_=c,this.layout_=Y,this.lineIndex_=f,this.owner_=y,this.children_=h,this.config_=p,this.isDirty_=m,this.resolvedDimensions_=S,t instanceof r.YGConfig?(this.config_=t,this.context_=null):this.context_=t}return e.prototype.relativePosition=function(e,t){if(this.isLeadingPositionDefined(e))return this.getLeadingPosition(e,t);var i=this.getTrailingPosition(e,t);return i.isUndefined()||i.setValue(-1*i.getValue()),i},e.prototype.operatorAtrib=function(e){return e==this?this:(this.clearChildren(),this.fromNode(e),this)},e.prototype.fromNode=function(e){console.log(e),this.context_=e.context_,this.print_=e.print_,this.hasNewLayout_=e.hasNewLayout_,this.nodeType_=e.nodeType_,this.measure_=e.measure_,this.baseline_=e.baseline_,this.dirtied_=e.dirtied_,this.style_=e.style_,this.layout_=e.layout_,this.lineIndex_=e.lineIndex_,this.owner_=e.owner_,this.children_=e.children_,this.config_=e.config_,this.isDirty_=e.isDirty_,this.resolvedDimensions_=e.resolvedDimensions_},e.prototype.getContext=function(){return this.context_},e.prototype.getPrintFunc=function(){return this.print_},e.prototype.getHasNewLayout=function(){return this.hasNewLayout_},e.prototype.getNodeType=function(){return this.nodeType_},e.prototype.getMeasure=function(){return this.measure_},e.prototype.getBaseline=function(){return this.baseline_},e.prototype.getDirtied=function(){return this.dirtied_},e.prototype.getStyle=function(){return this.style_},e.prototype.getLayout=function(){return this.layout_},e.prototype.getLineIndex=function(){return this.lineIndex_},e.prototype.getOwner=function(){return this.owner_},e.prototype.getParent=function(){return this.getOwner()},e.prototype.getChildren=function(){return this.children_},e.prototype.getChildrenCount=function(){return this.children_.length},e.prototype.getChild=function(e){return this.children_[e]},e.prototype.getConfig=function(){return this.config_},e.prototype.isDirty=function(){return this.isDirty_},e.prototype.getResolvedDimensions=function(){return this.resolvedDimensions_},e.prototype.getResolvedDimension=function(e){return this.resolvedDimensions_[e]},e.prototype.getLeadingPosition=function(e,t){if(a.YGFlexDirectionIsRow(e)){var i=d.YGComputedEdgeValue(this.style_.position,n.YGEdge.Start,d.YGValueUndefined());if(i.unit!=n.YGUnit.Undefined)return a.YGResolveValue(i,t)}var r=d.YGComputedEdgeValue(this.style_.position,u.leading[e],d.YGValueUndefined());return r.unit==n.YGUnit.Undefined?new o.YGFloatOptional(0):a.YGResolveValue(r,t)},e.prototype.isLeadingPositionDefined=function(e){return a.YGFlexDirectionIsRow(e)&&d.YGComputedEdgeValue(this.style_.position,n.YGEdge.Start,d.YGValueUndefined()).unit!=n.YGUnit.Undefined||d.YGComputedEdgeValue(this.style_.position,u.leading[e],d.YGValueUndefined()).unit!=n.YGUnit.Undefined},e.prototype.isTrailingPosDefined=function(e){return a.YGFlexDirectionIsRow(e)&&d.YGComputedEdgeValue(this.style_.position,n.YGEdge.End,d.YGValueUndefined()).unit!=n.YGUnit.Undefined||d.YGComputedEdgeValue(this.style_.position,u.trailing[e],d.YGValueUndefined()).unit!=n.YGUnit.Undefined},e.prototype.getTrailingPosition=function(e,t){if(a.YGFlexDirectionIsRow(e)){var i=d.YGComputedEdgeValue(this.style_.position,n.YGEdge.End,d.YGValueUndefined());if(i.unit!=n.YGUnit.Undefined)return a.YGResolveValue(i,t)}var r=d.YGComputedEdgeValue(this.style_.position,u.trailing[e],d.YGValueUndefined());return r.unit==n.YGUnit.Undefined?new o.YGFloatOptional(0):a.YGResolveValue(r,t)},e.prototype.getLeadingMargin=function(e,t){return a.YGFlexDirectionIsRow(e)&&this.style_.margin[n.YGEdge.Start].unit!=n.YGUnit.Undefined?a.YGResolveValueMargin(this.style_.margin[n.YGEdge.Start],t):a.YGResolveValueMargin(d.YGComputedEdgeValue(this.style_.margin,u.leading[e],d.YGValueZero()),t)},e.prototype.getTrailingMargin=function(e,t){return a.YGFlexDirectionIsRow(e)&&this.style_.margin[n.YGEdge.End].unit!=n.YGUnit.Undefined?a.YGResolveValueMargin(this.style_.margin[n.YGEdge.End],t):a.YGResolveValueMargin(d.YGComputedEdgeValue(this.style_.margin,u.trailing[e],d.YGValueZero()),t)},e.prototype.getLeadingBorder=function(e){if(a.YGFlexDirectionIsRow(e)&&this.style_.border[n.YGEdge.Start].unit!=n.YGUnit.Undefined&&!d.YGFloatIsUndefined(this.style_.border[n.YGEdge.Start].value)&&this.style_.border[n.YGEdge.Start].value>=0)return this.style_.border[n.YGEdge.Start].value;var t=d.YGComputedEdgeValue(this.style_.border,u.leading[e],d.YGValueZero()).value;return a.YGFloatMax(t,0)},e.prototype.getTrailingBorder=function(e){if(a.YGFlexDirectionIsRow(e)&&this.style_.border[n.YGEdge.End].unit!=n.YGUnit.Undefined&&!d.YGFloatIsUndefined(this.style_.border[n.YGEdge.End].value)&&this.style_.border[n.YGEdge.End].value>=0)return this.style_.border[n.YGEdge.End].value;var t=d.YGComputedEdgeValue(this.style_.border,u.trailing[e],d.YGValueZero()).value;return a.YGFloatMax(t,0)},e.prototype.getLeadingPadding=function(e,t){var i=a.YGResolveValue(this.style_.padding[n.YGEdge.Start],t);if(a.YGFlexDirectionIsRow(e)&&this.style_.padding[n.YGEdge.Start].unit!=n.YGUnit.Undefined&&!i.isUndefined()&&i.getValue()>0)return i;var r=a.YGResolveValue(d.YGComputedEdgeValue(this.style_.padding,u.leading[e],d.YGValueZero()),t);return a.YGFloatOptionalMax(r,new o.YGFloatOptional(0))},e.prototype.getTrailingPadding=function(e,t){var i=a.YGResolveValue(this.style_.padding[n.YGEdge.End],t);if(a.YGFlexDirectionIsRow(e)&&this.style_.padding[n.YGEdge.End].unit!=n.YGUnit.Undefined&&!i.isUndefined()&&i.getValue()>=0)return i;var r=a.YGResolveValue(d.YGComputedEdgeValue(this.style_.padding,u.trailing[e],d.YGValueZero()),t);return a.YGFloatOptionalMax(r,new o.YGFloatOptional(0))},e.prototype.getLeadingPaddingAndBorder=function(e,t){return this.getLeadingPadding(e,t).add(new o.YGFloatOptional(this.getLeadingBorder(e)))},e.prototype.getTrailingPaddingAndBorder=function(e,t){return this.getTrailingPadding(e,t).add(new o.YGFloatOptional(this.getTrailingBorder(e)))},e.prototype.getMarginForAxis=function(e,t){return this.getLeadingMargin(e,t).add(this.getTrailingMargin(e,t))},e.prototype.setContext=function(e){this.context_=e},e.prototype.setPrintFunc=function(e){this.print_=e},e.prototype.setHasNewLayout=function(e){this.hasNewLayout_=e},e.prototype.setNodeType=function(e){this.nodeType_=e},e.prototype.setMeasureFunc=function(e){null==e?(this.measure_=null,this.nodeType_=n.YGNodeType.Default):(0!=this.children_.length&&console.error(\"Cannot set measure function: Nodes with measure functions cannot have children.\"),this.measure_=e,this.setNodeType(n.YGNodeType.Text)),this.measure_=e},e.prototype.setBaseLineFunc=function(e){this.baseline_=e},e.prototype.setDirtiedFunc=function(e){this.dirtied_=e},e.prototype.setStyle=function(e){this.style_=e},e.prototype.setStyleFlexDirection=function(e){this.style_.flexDirection=e},e.prototype.setStyleAlignContent=function(e){this.style_.alignContent=e},e.prototype.setLayout=function(e){this.layout_=e},e.prototype.setLineIndex=function(e){this.lineIndex_=e},e.prototype.setOwner=function(e){this.owner_=e},e.prototype.setChildren=function(e){this.children_=e},e.prototype.setConfig=function(e){this.config_=e},e.prototype.setDirty=function(e){this.isDirty_=e},e.prototype.setLayoutLastOwnerDirection=function(e){this.layout_.lastOwnerDirection=e},e.prototype.setLayoutComputedFlexBasis=function(e){this.layout_.computedFlexBasis=e},e.prototype.setLayoutComputedFlexBasisGeneration=function(e){this.layout_.computedFlexBasisGeneration=e},e.prototype.setLayoutMeasuredDimension=function(e,t){this.layout_.measuredDimensions[t]=e},e.prototype.setLayoutHadOverflow=function(e){this.layout_.hadOverflow=e},e.prototype.setLayoutDimension=function(e,t){this.layout_.dimensions[t]=e},e.prototype.setLayoutDirection=function(e){this.layout_.direction=e},e.prototype.setLayoutMargin=function(e,t){this.layout_.margin[t]=e},e.prototype.setLayoutBorder=function(e,t){this.layout_.border[t]=e},e.prototype.setLayoutPadding=function(e,t){this.layout_.padding[t]=e},e.prototype.setLayoutPosition=function(e,t){this.layout_.position[t]=e},e.prototype.setPosition=function(e,t,i,o){var r=null!=this.owner_?e:n.YGDirection.LTR,s=a.YGResolveFlexDirection(this.style_.flexDirection,r),l=a.YGFlexDirectionCross(s,r),d=this.relativePosition(s,t),g=this.relativePosition(l,i);this.setLayoutPosition(a.YGUnwrapFloatOptional(this.getLeadingMargin(s,o).add(d)),u.leading[s]),this.setLayoutPosition(a.YGUnwrapFloatOptional(this.getTrailingMargin(s,o).add(d)),u.trailing[s]),this.setLayoutPosition(a.YGUnwrapFloatOptional(this.getLeadingMargin(l,o).add(g)),u.leading[l]),this.setLayoutPosition(a.YGUnwrapFloatOptional(this.getTrailingMargin(l,o).add(g)),u.trailing[l])},e.prototype.setAndPropogateUseLegacyFlag=function(e){this.config_.useLegacyStretchBehaviour=e;for(var t=0;t<this.children_.length;t++)this.children_[t].getConfig().useLegacyStretchBehaviour=e},e.prototype.setLayoutDoesLegacyFlagAffectsLayout=function(e){this.layout_.doesLegacyStretchFlagAffectsLayout=e},e.prototype.setLayoutDidUseLegacyFlag=function(e){this.layout_.didUseLegacyFlag=e},e.prototype.markDirtyAndPropogateDownwards=function(){this.isDirty_=!0;for(var e=0;e<this.children_.length;e++)this.children_[e].markDirtyAndPropogateDownwards()},e.prototype.marginLeadingValue=function(e){return a.YGFlexDirectionIsRow(e)&&this.style_.margin[n.YGEdge.Start].unit!=n.YGUnit.Undefined?this.style_.margin[n.YGEdge.Start]:this.style_.margin[u.leading[e]]},e.prototype.marginTrailingValue=function(e){return a.YGFlexDirectionIsRow(e)&&this.style_.margin[n.YGEdge.End].unit!=n.YGUnit.Undefined?this.style_.margin[n.YGEdge.End]:this.style_.margin[u.trailing[e]]},e.prototype.resolveFlexBasisPtr=function(){var e=this.style_.flexBasis;return e.unit!=n.YGUnit.Auto&&e.unit!=n.YGUnit.Undefined?e:!this.style_.flex.isUndefined()&&this.style_.flex.getValue()>0?this.config_.useWebDefaults?d.YGValueAuto():d.YGValueZero():d.YGValueAuto()},e.prototype.resolveDimension=function(){for(var e=n.YGDimension.Width;e<n.YGDimensionCount;++e)this.style_.maxDimensions[e].unit!=n.YGUnit.Undefined&&a.YGValueEqual(this.style_.maxDimensions[e],this.style_.minDimensions[e])?this.resolvedDimensions_[e]=this.style_.maxDimensions[e]:this.resolvedDimensions_[e]=this.style_.dimensions[e]},e.prototype.resolveDirection=function(e){return this.style_.direction==n.YGDirection.Inherit?e>n.YGDirection.Inherit?e:n.YGDirection.LTR:this.style_.direction},e.prototype.clearChildren=function(){for(;this.children_.length>0;)this.children_.pop()},e.prototype.replaceChild=function(e,t){var i=this.children_.indexOf(e);i>=0&&(this.children_[i]=t)},e.prototype.replaceChildIndex=function(e,t){this.children_[t]=e},e.prototype.insertChildIndex=function(e,t){this.children_.splice(t,0,e)},e.prototype.removeChild=function(e){var t=this.children_.indexOf(e);return t>=0&&(this.children_.splice(t,1),!0)},e.prototype.removeChildIndex=function(e){this.children_.splice(e,1)},e.prototype.cloneChildrenIfNeeded=function(){var e=this.children_.length;if(0!=e&&this.children_[0].getOwner()!=this)for(var t=this.config_.cloneNodeCallback,i=0;i<e;++i){var n=this.children_[i],o=null;t&&(o=t(n,this,i)),null==o&&(o=d.YGNodeClone(n)),this.replaceChildIndex(o,i),o.setOwner(this)}},e.prototype.markDirtyAndPropogate=function(){this.isDirty_||(this.setDirty(!0),this.setLayoutComputedFlexBasis(new o.YGFloatOptional),this.owner_&&this.owner_.markDirtyAndPropogate())},e.prototype.resolveFlexGrow=function(){return null==this.owner_?0:this.style_.flexGrow.isUndefined()?!this.style_.flex.isUndefined()&&this.style_.flex.getValue()>0?this.style_.flex.getValue():u.kDefaultFlexGrow:this.style_.flexGrow.getValue()},e.prototype.resolveFlexShrink=function(){return null==this.owner_?0:this.style_.flexShrink.isUndefined()?!this.config_.useWebDefaults&&!this.style_.flex.isUndefined()&&this.style_.flex.getValue()<0?-this.style_.flex.getValue():this.config_.useWebDefaults?u.kWebDefaultFlexShrink:u.kDefaultFlexShrink:this.style_.flexShrink.getValue()},e.prototype.isNodeFlexible=function(){return this.style_.positionType==n.YGPositionType.Relative&&(0!=this.resolveFlexGrow()||0!=this.resolveFlexShrink())},e.prototype.didUseLegacyFlag=function(){var e=this.layout_.didUseLegacyFlag;if(e)return!0;for(var t=0;t<this.children_.length;t++)if(this.children_[t].getLayout().didUseLegacyFlag){e=!0;break}return e},e.prototype.isLayoutTreeEqualToNode=function(e){if(this.children_.length!=e.getChildren().length)return!1;if(this.layout_.diff(e.getLayout()))return!1;if(0==this.children_.length)return!0;for(var t=!0,i=0;i<this.children_.length;++i){var n=e.getChild(i);if(!(t=this.children_[i].isLayoutTreeEqualToNode(n)))return!1}return t},e}();t.YGNode=g},function(e,t,i){\"use strict\";t.__esModule=!0;var n=i(0),o=i(3),r=i(7),a=i(2),s=function(){return new r.YGValue(0,n.YGUnit.Undefined)},l=function(){return new r.YGValue(0,n.YGUnit.Auto)},u=function(){return[s(),s(),s(),s(),s(),s(),s(),s(),s()]},d=function(){return[l(),l()]},g=function(){return[s(),s()]},G=function(){function e(){this.margin=new Array(n.YGEdgeCount),this.position=new Array(n.YGEdgeCount),this.padding=new Array(n.YGEdgeCount),this.border=new Array(n.YGEdgeCount),this.direction=n.YGDirection.Inherit,this.flexDirection=n.YGFlexDirection.Column,this.justifyContent=n.YGJustify.FlexStart,this.alignContent=n.YGAlign.FlexStart,this.alignItems=n.YGAlign.Stretch,this.alignSelf=n.YGAlign.Auto,this.positionType=n.YGPositionType.Relative,this.flexWrap=n.YGWrap.NoWrap,this.overflow=n.YGOverflow.Visible,this.display=n.YGDisplay.Flex,this.flex=new a.YGFloatOptional,this.flexGrow=new a.YGFloatOptional,this.flexShrink=new a.YGFloatOptional,this.flexBasis=l(),this.margin=u(),this.position=u(),this.padding=u(),this.border=u(),this.dimensions=d(),this.minDimensions=g(),this.maxDimensions=g(),this.aspectRatio=new a.YGFloatOptional}return e.prototype.isEqual=function(e){var t=this.direction==e.direction&&this.flexDirection==e.flexDirection&&this.justifyContent==e.justifyContent&&this.alignContent==e.alignContent&&this.alignItems==e.alignItems&&this.alignSelf==e.alignSelf&&this.positionType==e.positionType&&this.flexWrap==e.flexWrap&&this.overflow==e.overflow&&this.display==e.display&&o.YGValueEqual(this.flexBasis,e.flexBasis)&&o.YGValueArrayEqual(this.margin,e.margin)&&o.YGValueArrayEqual(this.position,e.position)&&o.YGValueArrayEqual(this.padding,e.padding)&&o.YGValueArrayEqual(this.border,e.border)&&o.YGValueArrayEqual(this.dimensions,e.dimensions)&&o.YGValueArrayEqual(this.minDimensions,e.minDimensions)&&o.YGValueArrayEqual(this.maxDimensions,e.maxDimensions);return!(t=t&&this.flex.isUndefined()==e.flex.isUndefined())||this.flex.isUndefined()||e.flex.isUndefined()||(t=t&&this.flex.getValue()==e.flex.getValue()),(t=t&&this.flexGrow.isUndefined()==e.flexGrow.isUndefined())&&!this.flexGrow.isUndefined()&&(t=t&&this.flexGrow.getValue()==e.flexGrow.getValue()),(t=t&&this.flexShrink.isUndefined()==e.flexShrink.isUndefined())&&!e.flexShrink.isUndefined()&&(t=t&&this.flexShrink.getValue()==e.flexShrink.getValue()),this.aspectRatio.isUndefined()&&e.aspectRatio.isUndefined()||(t=t&&this.aspectRatio.getValue()==e.aspectRatio.getValue()),t},e.prototype.isDiff=function(e){return!this.isEqual(e)},e.prototype.clone=function(){var t=new e;return t.direction=this.direction,t.flexDirection=this.flexDirection,t.justifyContent=this.justifyContent,t.alignContent=this.alignContent,t.alignItems=this.alignItems,t.alignSelf=this.alignSelf,t.positionType=this.positionType,t.flexWrap=this.flexWrap,t.overflow=this.overflow,t.display=this.display,t.flex=this.flex.clone(),t.flexGrow=this.flexGrow.clone(),t.flexShrink=this.flexShrink.clone(),t.flexBasis=this.flexBasis.clone(),t.margin=o.cloneYGValueArray(this.margin),t.position=o.cloneYGValueArray(this.position),t.padding=o.cloneYGValueArray(this.padding),t.border=o.cloneYGValueArray(this.border),t.dimensions=[this.dimensions[0].clone(),this.dimensions[1].clone()],t.minDimensions=[this.minDimensions[0].clone(),this.minDimensions[1].clone()],t.maxDimensions=[this.maxDimensions[0].clone(),this.maxDimensions[1].clone()],t.aspectRatio=this.aspectRatio.clone(),t},e}();t.YGStyle=G}]);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdHlwZWZsZXgvZGlzdC9Zb2dhLmpzPzkyMWEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsMkJBQTJCLFNBQVMsY0FBYyw0QkFBNEIsWUFBWSxxQkFBcUIsMkRBQTJELHVDQUF1QyxxQ0FBcUMsb0JBQW9CLEVBQUUsaUJBQWlCLDRGQUE0RixlQUFlLHdDQUF3QyxTQUFTLEVBQUUsbUJBQW1CLDhCQUE4QixxREFBcUQsMEJBQTBCLDZDQUE2QyxzQkFBc0IsNkRBQTZELFlBQVksZUFBZSxTQUFTLGlCQUFpQixpQ0FBaUMsaUJBQWlCLFlBQVksVUFBVSxzQkFBc0IsbUJBQW1CLGlEQUFpRCxpQkFBaUIsa0JBQWtCLGFBQWEsb0NBQW9DLDZDQUE2Qyx3TkFBd04sMkJBQTJCLGlDQUFpQyxVQUFVLHlCQUF5QixvQ0FBb0MsNkJBQTZCLGdDQUFnQywrQkFBK0IsaUNBQWlDLDBDQUEwQyx3Q0FBd0MsZ0JBQWdCLGtDQUFrQyw0Q0FBNEMsbUNBQW1DLHFDQUFxQyxVQUFVLDJCQUEyQiw2QkFBNkIsZ0JBQWdCLGFBQWEsMkRBQTJELG1DQUFtQyxxQ0FBcUMsVUFBVSwrQkFBK0IsdUJBQXVCLHVCQUF1QixnQkFBZ0IsZ0NBQWdDLHNDQUFzQywrQkFBK0IsbUNBQW1DLFVBQVUseUJBQXlCLHlCQUF5QixnQkFBZ0IsNkJBQTZCLGlNQUFpTSx5QkFBeUIsZ0NBQWdDLFVBQVUseUJBQXlCLHVCQUF1QiwyQkFBMkIsNkJBQTZCLDJCQUEyQix1QkFBdUIscUNBQXFDLGlDQUFpQyx1QkFBdUIsZ0JBQWdCLDRDQUE0QyxtQ0FBbUMsdURBQXVELCtDQUErQyxVQUFVLDJDQUEyQyxnQkFBZ0Isc0NBQXNDLDRHQUE0RywyQ0FBMkMseUNBQXlDLFVBQVUsNkJBQTZCLDRDQUE0Qyx1QkFBdUIsc0NBQXNDLGdCQUFnQixnQ0FBZ0Msa0xBQWtMLCtCQUErQixtQ0FBbUMsVUFBVSxvQ0FBb0MsNkJBQTZCLGdDQUFnQywwQ0FBMEMsd0NBQXdDLHdDQUF3QyxnQkFBZ0IsaUNBQWlDLDhIQUE4SCxpQ0FBaUMsb0NBQW9DLFVBQVUsMkJBQTJCLHlCQUF5Qix5QkFBeUIsMkJBQTJCLCtCQUErQiwyQkFBMkIsZ0JBQWdCLG9DQUFvQyw2RUFBNkUsdUNBQXVDLHVDQUF1QyxVQUFVLG1DQUFtQywrQkFBK0IsOEJBQThCLGdCQUFnQixpQ0FBaUMsNENBQTRDLGlDQUFpQyxvQ0FBb0MsVUFBVSwrQkFBK0IseUJBQXlCLGdCQUFnQixpQ0FBaUMsdUVBQXVFLGlDQUFpQyxvQ0FBb0MsVUFBVSwrQkFBK0IsNkJBQTZCLDZCQUE2QixnQkFBZ0IscUNBQXFDLHNEQUFzRCx5Q0FBeUMsd0NBQXdDLFVBQVUsaUNBQWlDLGlDQUFpQyxnQkFBZ0IscUNBQXFDLHVFQUF1RSx5Q0FBeUMsd0NBQXdDLFVBQVUsNkJBQTZCLDJCQUEyQixpQ0FBaUMsZ0JBQWdCLDZCQUE2Qiw4RkFBOEYseUJBQXlCLGdDQUFnQyxVQUFVLG1DQUFtQywyQkFBMkIsK0JBQStCLHlCQUF5QixnQkFBZ0IsNkJBQTZCLDJFQUEyRSx5QkFBeUIsZ0NBQWdDLFVBQVUsOEJBQThCLHlCQUF5Qix3Q0FBd0MsaUJBQWlCLGlCQUFpQixhQUFhLGdCQUFnQix5RUFBeUUsb0JBQW9CLEdBQUcsZ0JBQWdCLDBCQUEwQixXQUFXLEtBQUssV0FBVywwQkFBMEIsU0FBUyxvQkFBb0IsaUJBQWlCLG1CQUFtQix3QkFBd0IsVUFBVSw2RUFBNkUsb0lBQW9JLGNBQWMsK0JBQStCLDhEQUE4RCx1REFBdUQsMEJBQTBCLGtEQUFrRCwwQkFBMEIsdUNBQXVDLDhEQUE4RCxxWkFBcVosZ0NBQWdDLHNCQUFzQixrQ0FBa0MsdUJBQXVCLG9DQUFvQyxzQkFBc0Isc0NBQXNDLG9CQUFvQixxQ0FBcUMsdUJBQXVCLHVDQUF1QyxxQkFBcUIsb0NBQW9DLHNCQUFzQixzQ0FBc0Msb0JBQW9CLGtDQUFrQyx3QkFBd0Isb0NBQW9DLGtCQUFrQixxQ0FBcUMsMkJBQTJCLHVDQUF1QyxxQkFBcUIsaUNBQWlDLHVCQUF1QixtQ0FBbUMsaUJBQWlCLDZCQUE2QixtQkFBbUIsK0NBQStDLDRCQUE0Qix3REFBd0Qsb0NBQW9DLFlBQVksY0FBYyxtQkFBbUIseUlBQXlJLGFBQWEsV0FBVyxjQUFjLHNCQUFzQixzQkFBc0IsOEJBQThCLGNBQWMsK0JBQStCLGFBQWEsY0FBYyw4REFBOEQseUJBQXlCLEtBQUssMkNBQTJDLDZFQUE2RSxjQUFjLG1CQUFtQiw2Q0FBNkMsbUJBQW1CLElBQUksS0FBSyxzQkFBc0Isc0JBQXNCLGNBQWMsNkNBQTZDLFlBQVksdUJBQXVCLHFCQUFxQixjQUFjLEtBQUssT0FBTyxFQUFFLGFBQWEseUJBQXlCLFlBQVksS0FBSyxhQUFhLHdCQUF3QixhQUFhLGdCQUFnQixXQUFXLGlDQUFpQyxrREFBa0QsSUFBSSxLQUFLLG9CQUFvQixTQUFTLFdBQVcsNkVBQTZFLCtCQUErQixLQUFLLElBQUksMkJBQTJCLGdHQUFnRyxnQkFBZ0IsTUFBTSxzQkFBc0IsZ0JBQWdCLGVBQWUsWUFBWSxXQUFXLEtBQUssV0FBVyw2Q0FBNkMsb0RBQW9ELEtBQUssc0JBQXNCLFdBQVcsS0FBSyxXQUFXLCtEQUErRCxpQkFBaUIsUUFBUSxXQUFXLHFCQUFxQiw0QkFBNEIsZ0JBQWdCLHNCQUFzQiw0QkFBNEIsY0FBYyw0QkFBNEIsc0VBQXNFLGNBQWMsa0pBQWtKLGlLQUFpSyxvQkFBb0IscUpBQXFKLHFDQUFxQyxTQUFTLHVDQUF1QyxTQUFTLDRDQUE0QyxJQUFJLDhCQUE4QixtQkFBbUIscUNBQXFDLG9PQUFvTywwQkFBMEIsd0NBQXdDLDJDQUEyQyxxS0FBcUssNkRBQTZELFdBQVcsU0FBUyx5QkFBeUIsWUFBWSxJQUFJLEtBQUssYUFBYSw2Q0FBNkMsd0RBQXdELG9EQUFvRCxpRUFBaUUsT0FBTyx5RUFBeUUsb0JBQW9CLCtCQUErQixvQkFBb0IsK0JBQStCLDhJQUE4SSxpQ0FBaUMseUZBQXlGLHNDQUFzQywrRkFBK0Ysd0NBQXdDLDBKQUEwSix5Q0FBeUMsOEJBQThCLG1CQUFtQix1REFBdUQsdUNBQXVDLDhCQUE4Qiw2Q0FBNkMsa0NBQWtDLG1CQUFtQiwyREFBMkQsMkNBQTJDLGtDQUFrQyw4Q0FBOEMsbUNBQW1DLG1CQUFtQiw0REFBNEQsNENBQTRDLG1DQUFtQyw0Q0FBNEMsaUNBQWlDLG1CQUFtQiwwREFBMEQsMENBQTBDLGlDQUFpQywwQ0FBMEMsK0JBQStCLG1CQUFtQix3REFBd0Qsd0NBQXdDLCtCQUErQix5Q0FBeUMsOEJBQThCLG1CQUFtQix1REFBdUQsdUNBQXVDLDhCQUE4Qiw0Q0FBNEMsaUNBQWlDLG1CQUFtQiwwREFBMEQsMENBQTBDLGlDQUFpQyx3Q0FBd0MsNkJBQTZCLG1CQUFtQixzREFBc0Qsc0NBQXNDLDZCQUE2Qix3Q0FBd0MsNkJBQTZCLG1CQUFtQixzREFBc0Qsc0NBQXNDLDZCQUE2Qix1Q0FBdUMsNEJBQTRCLG1CQUFtQixxREFBcUQscUNBQXFDLDRCQUE0QiwwQ0FBMEMsaUZBQWlGLCtHQUErRyxtQkFBbUIseURBQXlELGlEQUFpRCxtRkFBbUYsK0dBQStHLG1CQUFtQix5REFBeUQsd0NBQXdDLCtCQUErQixvRkFBb0Ysd0NBQXdDLGlGQUFpRiwyR0FBMkcsbUJBQW1CLHVEQUF1RCwrQ0FBK0MsbUZBQW1GLDJHQUEyRyxtQkFBbUIsdURBQXVELHNDQUFzQyw2QkFBNkIsb0ZBQW9GLHlDQUF5QyxpRkFBaUYsNkdBQTZHLG1CQUFtQix3REFBd0QsZ0RBQWdELG1GQUFtRiw2R0FBNkcsbUJBQW1CLHdEQUF3RCx1Q0FBdUMsOEJBQThCLG9GQUFvRiwwQ0FBMEMsK0NBQStDLG1CQUFtQiw0RkFBNEYscUNBQXFDLGlGQUFpRix1SkFBdUosbUJBQW1CLDZFQUE2RSw0Q0FBNEMsa0pBQWtKLG1CQUFtQixpTEFBaUwsdUNBQXVDLHFFQUFxRSxtQkFBbUIsd0lBQXdJLG1DQUFtQyxtREFBbUQsb0ZBQW9GLHNDQUFzQyxpRkFBaUYseUpBQXlKLG1CQUFtQiw4RUFBOEUsNkNBQTZDLG9KQUFvSixtQkFBbUIsbUxBQW1MLHdDQUF3QyxzRUFBc0UsbUJBQW1CLDBJQUEwSSxvQ0FBb0Msb0RBQW9ELG9GQUFvRix3Q0FBd0MsaUZBQWlGLDZKQUE2SixtQkFBbUIsZ0ZBQWdGLCtDQUErQyxtRkFBbUYsNkpBQTZKLG1CQUFtQixnRkFBZ0Ysc0NBQXNDLHNEQUFzRCxvRkFBb0YseUNBQXlDLGlGQUFpRiwrSkFBK0osbUJBQW1CLGlGQUFpRixnREFBZ0QsbUZBQW1GLCtKQUErSixtQkFBbUIsaUZBQWlGLHVDQUF1Qyx1REFBdUQsb0ZBQW9GLHdDQUF3QyxpRkFBaUYsNkpBQTZKLG1CQUFtQixnRkFBZ0YsK0NBQStDLG1GQUFtRiw2SkFBNkosbUJBQW1CLGdGQUFnRixzQ0FBc0Msc0RBQXNELG9GQUFvRix5Q0FBeUMsaUZBQWlGLCtKQUErSixtQkFBbUIsaUZBQWlGLGdEQUFnRCxtRkFBbUYsK0pBQStKLG1CQUFtQixpRkFBaUYsdUNBQXVDLHVEQUF1RCxvRkFBb0YsbUNBQW1DLDZDQUE2QyxrQ0FBa0MsNENBQTRDLG9DQUFvQyw4Q0FBOEMscUNBQXFDLCtDQUErQyxvQ0FBb0MscURBQXFELHFDQUFxQyxzREFBc0Qsd0NBQXdDLCtCQUErQiwwQ0FBMEMsaUNBQWlDLHVDQUF1QyxzWEFBc1gsdUNBQXVDLHNYQUFzWCx3Q0FBd0MsMlhBQTJYLG9DQUFvQyxxQ0FBcUMsbUJBQW1CLDJHQUEyRyxrQ0FBa0Msa0ZBQWtGLHdDQUF3Qyx5Q0FBeUMsbUJBQW1CLG1IQUFtSCwwQ0FBMEMsMkNBQTJDLG1CQUFtQix1SEFBdUgsdUNBQXVDLDZCQUE2QixvRkFBb0YseUNBQXlDLGlGQUFpRiwyR0FBMkcsbUJBQW1CLHVEQUF1RCxnREFBZ0QsbUZBQW1GLG1CQUFtQixxSUFBcUksMkNBQTJDLCtDQUErQyxtQkFBbUIsNEZBQTRGLHdDQUF3QyxpRkFBaUYsMkdBQTJHLG1CQUFtQix1REFBdUQsc0NBQXNDLDhJQUE4SSx5Q0FBeUMsK0JBQStCLGtEQUFrRCwyQ0FBMkMsNENBQTRDLG1CQUFtQixnRkFBZ0YsK0RBQStELHlEQUF5RCxRQUFRLGlCQUFpQixpQkFBaUIsa0JBQWtCLDBHQUEwRyxnQkFBZ0IsNEZBQTRGLDBHQUEwRyxjQUFjLDBCQUEwQixzSUFBc0kseUVBQXlFLDBCQUEwQixJQUFJLEtBQUssYUFBYSw0QkFBNEIseURBQXlELCtCQUErQixJQUFJLE1BQU0sZ0JBQWdCLGdIQUFnSCxjQUFjLGtFQUFrRSx3REFBd0QsbUJBQW1CLElBQUksS0FBSyxhQUFhLDZHQUE2RyxTQUFTLGtCQUFrQixpSUFBaUksa0JBQWtCLGdEQUFnRCw2VUFBNlUsZ0JBQWdCLGlEQUFpRCxrQkFBa0Isb0JBQW9CLFFBQVEsOGRBQThkLHNCQUFzQixrRUFBa0Usa0JBQWtCLGlEQUFpRCxpSEFBaUgsd0JBQXdCLDRGQUE0RixnQkFBZ0IsNEhBQTRILE1BQU0sdUdBQXVHLGdDQUFnQyxnT0FBZ08sa0NBQWtDLHNEQUFzRCxzSEFBc0gsZUFBZSx5REFBeUQsdUhBQXVILEtBQUssd0ZBQXdGLHFKQUFxSix1d0JBQXV3QixnR0FBZ0csOEpBQThKLGdHQUFnRyw2SkFBNkosT0FBTyxRQUFRLElBQUksUUFBUSxJQUFJLFFBQVEsSUFBSSxTQUFTLDJQQUEyUCw2SkFBNkosc0NBQXNDLHdEQUF3RCwwQ0FBMEMsMEJBQTBCLGdXQUFnVyw4dEdBQTh0RywwQkFBMEIsMkVBQTJFLG9SQUFvUix3T0FBd08sS0FBSyxnQ0FBZ0Msb1RBQW9ULDBCQUEwQixzTkFBc04sa1NBQWtTLDBCQUEwQiwySUFBMkkscUpBQXFKLHNRQUFzUSxTQUFTLGNBQWMsc0VBQXNFLG1CQUFtQixJQUFJLEtBQUssa0JBQWtCLG9CQUFvQiwwTkFBME4sVUFBVSxpTUFBaU0sb0NBQW9DLFNBQVMsZ0NBQWdDLDZCQUE2Qix3RUFBd0UsV0FBVyxLQUFLLDhCQUE4Qiw4RkFBOEYsT0FBTyxNQUFNLEtBQUssUUFBUSxXQUFXLEtBQUssTUFBTSx1RUFBdUUsTUFBTSw0RkFBNEYsdUJBQXVCLHNSQUFzUixnREFBZ0QsMEJBQTBCLDBLQUEwSyx1QkFBdUIsS0FBSyxvQkFBb0IsaUdBQWlHLGtCQUFrQixvSkFBb0oscUNBQXFDLHNRQUFzUSxrTkFBa04sc0NBQXNDLGlHQUFpRyw0QkFBNEIsS0FBSywySEFBMkgscURBQXFELG9DQUFvQywrSUFBK0ksdUpBQXVKLE9BQU8sNEpBQTRKLGlPQUFpTyxrRkFBa0YsMEZBQTBGLDREQUE0RCwrREFBK0QsbUNBQW1DLDRIQUE0SCxPQUFPLFFBQVEsSUFBSSxRQUFRLElBQUksUUFBUSxJQUFJLFNBQVMsc0VBQXNFLHNKQUFzSiw4SUFBOEksU0FBUyx1QkFBdUIsZ0NBQWdDLDRCQUE0QixLQUFLLHlIQUF5SCw0WUFBNFksd0JBQXdCLHVDQUF1QywyQkFBMkIsY0FBYyxtQ0FBbUMseUJBQXlCLHVDQUF1QyxtQkFBbUIsaVVBQWlVLGdCQUFnQixtQkFBbUIsS0FBSywyS0FBMkssMENBQTBDLGtCQUFrQixpREFBaUQsTUFBTSxnREFBZ0QsTUFBTSx5R0FBeUcsTUFBTSx3RUFBd0UsTUFBTSx3RUFBd0UsTUFBTSw0QkFBNEIsaUVBQWlFLDJCQUEyQixRQUFRLG1CQUFtQixLQUFLLHFEQUFxRCxzUUFBc1EsbWZBQW1mLG1GQUFtRix1RUFBdUUsaUNBQWlDLDRQQUE0UCw0QkFBNEIsd0JBQXdCLCtHQUErRyxzNUJBQXM1QixXQUFXLFNBQVMseUJBQXlCLHFEQUFxRCxtN0JBQW03QixTQUFTLDBCQUEwQixpREFBaUQsOERBQThELG9DQUFvQyxLQUFLLFlBQVksNENBQTRDLDRDQUE0QyxtdEJBQW10QixVQUFVLG1NQUFtTSxNQUFNLE1BQU0sc0hBQXNILHNDQUFzQyxvVEFBb1QsS0FBSyxvQkFBb0IsdUhBQXVILGdCQUFnQixpUEFBaVAsdURBQXVELDhEQUE4RCxTQUFTLEtBQUssU0FBUyxLQUFLLFNBQVMsS0FBSyxVQUFVLDZQQUE2UCxLQUFLLHFCQUFxQiwwU0FBMFMsd0VBQXdFLCtDQUErQyw0QkFBNEIsdUJBQXVCLGtDQUFrQyw4QkFBOEIsTUFBTSwrQkFBK0IsTUFBTSx5Q0FBeUMsTUFBTSwyRUFBMkUsTUFBTSx3REFBd0QsTUFBTSxzRUFBc0UsU0FBUyxTQUFTLE1BQU0sTUFBTSxtQ0FBbUMsVUFBVSxLQUFLLE1BQU0sb0hBQW9ILCtCQUErQiw4SkFBOEosK05BQStOLDBFQUEwRSw0QkFBNEIsTUFBTSxNQUFNLG1JQUFtSSw4R0FBOEcsTUFBTSw0SkFBNEosTUFBTSx5RUFBeUUsNENBQTRDLE1BQU0sNEhBQTRILHNIQUFzSCxtSEFBbUgsdVBBQXVQLE1BQU0sbUpBQW1KLE1BQU0sNkVBQTZFLFFBQVEsMjRCQUEyNEIsS0FBSyxNQUFNLHlOQUF5TixNQUFNLHVCQUF1QixTQUFTLGFBQWEsTUFBTSx3RkFBd0Ysa0pBQWtKLG1CQUFtQixLQUFLLE1BQU0sT0FBTywyRkFBMkYsc0JBQXNCLHNCQUFzQix3ekJBQXd6Qiw2RkFBNkYsZUFBZSxnQkFBZ0IsNkJBQTZCLGlCQUFpQiw2SEFBNkgsbUJBQW1CLHdEQUF3RCxxQkFBcUIsNkZBQTZGLHVCQUF1QixvSEFBb0gscUJBQXFCLGdCQUFnQiw2SkFBNkosdUNBQXVDLG1DQUFtQyxxVkFBcVYsWUFBWSxtQ0FBbUMsb0JBQW9CLEtBQUssaUVBQWlFLHFOQUFxTixXQUFXLHlCQUF5QixxSkFBcUosK05BQStOLGlCQUFpQixnQ0FBZ0MseVFBQXlRLDBCQUEwQixPQUFPLDJNQUEyTSxhQUFhLGdDQUFnQyx5TkFBeU4sMEJBQTBCLE1BQU0sZUFBZSx5Q0FBeUMseU5BQXlOLDBRQUEwUSx3SkFBd0osYUFBYSxvVEFBb1QscUtBQXFLLDBNQUEwTSx1UkFBdVIsaUJBQWlCLFdBQVcscUJBQXFCLFNBQVMsaVBBQWlQLCtGQUErRixrSUFBa0kscUpBQXFKLG1CQUFtQixJQUFJLHNCQUFzQixxQkFBcUIsaUJBQWlCLG1CQUFtQix3QkFBd0Isb0JBQW9CLDJFQUEyRSxtQkFBbUIsaUJBQWlCLG1CQUFtQix3QkFBd0IsaUJBQWlCLG1CQUFtQixpQkFBaUIsbUJBQW1CLHdCQUF3Qix1Q0FBdUMsbUJBQW1CLHFDQUFxQyxtQkFBbUIscUNBQXFDLGlCQUFpQixpQ0FBaUMsaUJBQWlCLFlBQVksV0FBVyxLQUFLLFdBQVcsNEJBQTRCLDZVQUE2VSxtRkFBbUYsbUVBQW1FLHlCQUF5QixnREFBZ0QscWRBQXFkLGdEQUFnRCw2d0JBQTZ3Qiw2QkFBNkIsV0FBVyx1WUFBdVksbUNBQW1DLHFCQUFxQiwwRUFBMEUsa0RBQWtELHNFQUFzRSx3Q0FBd0MsdUdBQXVHLDRCQUE0QixxRkFBcUYsbUJBQW1CLHNEQUFzRCw4QkFBOEIseUNBQXlDLHdCQUF3QixvQ0FBb0MsWUFBWSxrQ0FBa0MsaUJBQWlCLDBDQUEwQyxzQkFBc0Isb0VBQW9FLGlDQUFpQyxpQkFBaUIsYUFBYSxnQkFBZ0Isd0JBQXdCLGNBQWMsaUhBQWlILGtHQUFrRyxvQ0FBb0MsbURBQW1ELGlDQUFpQywrRUFBK0UsbUJBQW1CLGtDQUFrQyxtQ0FBbUMsb0NBQW9DLHlCQUF5Qiw2QkFBNkIsZ0ZBQWdGLGtDQUFrQyxxRUFBcUUsbUNBQW1DLHFFQUFxRSx1Q0FBdUMsMENBQTBDLHdDQUF3QywyQ0FBMkMsaUNBQWlDLDRGQUE0RixnQ0FBZ0MsdUJBQXVCLHNDQUFzQyx1RkFBdUYscUNBQXFDLDRCQUE0QixHQUFHLEdBQUcsb0JBQW9CLGlCQUFpQixhQUFhLGdCQUFnQixzQ0FBc0Msa0JBQWtCLDZOQUE2TixHQUFHLGdCQUFnQixzSkFBc0osZ0JBQWdCLDRIQUE0SCxnQkFBZ0IsZUFBZSx3RUFBd0UsMERBQTBELGtFQUFrRSw2QkFBNkIsY0FBYyx1RUFBdUUsZ0JBQWdCLHlCQUF5QixnRUFBZ0UsZ0VBQWdFLFNBQVMsOEZBQThGLGtHQUFrRyxvQ0FBb0MsMEZBQTBGLDRCQUE0QixrR0FBa0csbUNBQW1DLGlCQUFpQixjQUFjLG1CQUFtQixTQUFTLG1DQUFtQyxpQkFBaUIsY0FBYyxtQkFBbUIsU0FBUywrQkFBK0IsbUNBQW1DLHFDQUFxQyxrREFBa0Qsc0NBQXNDLGdFQUFnRSxvQ0FBb0MsaUVBQWlFLGdIQUFnSCw2REFBNkQsaUNBQWlDLGtDQUFrQyxXQUFXLHNCQUFzQixVQUFVLGlCQUFpQixhQUFhLGdCQUFnQiwrQkFBK0IsYUFBYSxxTEFBcUwsdUNBQXVDLDZGQUE2Rix5Z0JBQXlnQiw4QkFBOEIsWUFBWSxpUEFBaVAsR0FBRyxHQUFHLHVhQUF1YSxpQkFBaUIsYUFBYSxnQkFBZ0IsaUJBQWlCLGlCQUFpQixjQUFjLG1CQUFtQixrT0FBa08sR0FBRyxhQUFhLGlCQUFpQixhQUFhLGdCQUFnQixvREFBb0Qsc0JBQXNCLE1BQU0sY0FBYyxpQkFBaUIsSUFBSSxzQ0FBc0MsU0FBUyxpQkFBaUIsYUFBYSwrbkJBQStuQixxQ0FBcUMsZ2ZBQWdmLE9BQU8sNkRBQTZELGlVQUFpVSw4QkFBOEIscUJBQXFCLDhCQUE4QiwrbkJBQStuQiw4QkFBOEIsWUFBWSwwZ0NBQTBnQyxHQUFHLEdBQUcsYUFBYSxpQkFBaUIsYUFBYSxnQkFBZ0IsaUJBQWlCLGdCQUFnQix5QkFBeUIsb0NBQW9DLG1DQUFtQyxHQUFHLEdBQUcsWUFBWSxpQkFBaUIsYUFBYSxnQkFBZ0IseUJBQXlCLGdzRUFBZ3NFLGlCQUFpQixvQkFBb0IsR0FBRyxXQUFXLGlCQUFpQixnQkFBZ0IsNERBQTRELDRCQUE0QiwrQkFBK0IsR0FBRyxHQUFHLFNBQVMsaUJBQWlCLHFCQUFxQiwwRUFBMEUsR0FBRyxVQUFVLGlCQUFpQixhQUFhLDRCQUE0QiwyQkFBMkIsYUFBYSw2QkFBNkIsNEJBQTRCLHlEQUF5RCx5REFBeUQsNkNBQTZDLDZDQUE2QyxzREFBc0Qsc0RBQXNELEdBQUcsR0FBRyxjQUFjLDZCQUE2QixjQUFjLDZCQUE2QixXQUFXLGlCQUFpQixjQUFjLDZGQUE2Riw0QkFBNEIsd0JBQXdCLDRCQUE0QixxQkFBcUIsZ0NBQWdDLGdCQUFnQiw2Q0FBNkMseUNBQXlDLG1DQUFtQywrQkFBK0IsNkJBQTZCLHdCQUF3QixzQ0FBc0MsaUNBQWlDLHdDQUF3QywrQ0FBK0Msc0NBQXNDLDZDQUE2QyxxQ0FBcUMsNENBQTRDLHVDQUF1Qyw4Q0FBOEMsbUNBQW1DLDJDQUEyQyxrQ0FBa0Msd0NBQXdDLHNDQUFzQyx3Q0FBd0MsMkNBQTJDLDRDQUE0QywwQ0FBMEMsMENBQTBDLDBDQUEwQyw2REFBNkQsMENBQTBDLFlBQVksbVFBQW1RLHdDQUF3QywyREFBMkQsMkNBQTJDLCtEQUErRCw0Q0FBNEMsZ0VBQWdFLHlDQUF5Qyw0REFBNEQsdUNBQXVDLDBEQUEwRCx5Q0FBeUMsNERBQTRELG1DQUFtQywwQ0FBMEMscUNBQXFDLCtDQUErQyx5Q0FBeUMsZ0RBQWdELG9DQUFvQywyQ0FBMkMsc0NBQXNDLDZDQUE2QyxvQ0FBb0MsMkNBQTJDLGtDQUFrQyw0Q0FBNEMsMENBQTBDLGlEQUFpRCxtQ0FBbUMsOENBQThDLHFDQUFxQywrQ0FBK0Msb0NBQW9DLDhDQUE4QyxxQ0FBcUMsK0NBQStDLG9DQUFvQyw4Q0FBOEMsb0NBQW9DLDJDQUEyQyxvQ0FBb0MsK0NBQStDLGtDQUFrQyxtQ0FBbUMsaUJBQWlCLHFDQUFxQyxnREFBZ0Qsd0NBQXdDLCtDQUErQyxpQ0FBaUMsMkNBQTJDLHVDQUF1Qyx3Q0FBd0MsZ0NBQWdDLGtDQUFrQyxrQ0FBa0MsNkJBQTZCLHFDQUFxQyxzQ0FBc0MsOEJBQThCLHlCQUF5Qix5Q0FBeUMsMENBQTBDLHVDQUF1Qyx3Q0FBd0Msc0NBQXNDLHVDQUF1Qyx3Q0FBd0MseUNBQXlDLHFDQUFxQyxzQ0FBc0Msb0NBQW9DLHFDQUFxQyxpQ0FBaUMsa0NBQWtDLHNDQUFzQyx1QkFBdUIsNkRBQTZELHdDQUF3Qyw0Q0FBNEMsNkNBQTZDLDhDQUE4QywwQ0FBMEMsMkNBQTJDLHFDQUFxQyxzQ0FBc0MsdUNBQXVDLHdDQUF3QyxxQ0FBcUMsc0NBQXNDLG1DQUFtQyx5REFBeUQsS0FBSyw4REFBOEQscUNBQXFDLHlDQUF5QyxzQ0FBc0Msc0NBQXNDLDBDQUEwQywyQ0FBMkMsMkNBQTJDLDRDQUE0QyxxQ0FBcUMsMERBQTBELEtBQUssOERBQThELHVDQUF1QywyQ0FBMkMsdUNBQXVDLHdDQUF3Qyw0Q0FBNEMsNkNBQTZDLHNDQUFzQyx1QkFBdUIsOERBQThELHdDQUF3Qyw0Q0FBNEMsNkNBQTZDLDhDQUE4QyxxQ0FBcUMsdUJBQXVCLDhEQUE4RCx1Q0FBdUMsMkNBQTJDLDRDQUE0Qyw2Q0FBNkMsd0NBQXdDLG9FQUFvRSx5Q0FBeUMsdUNBQXVDLHNDQUFzQyx1QkFBdUIsOERBQThELHdDQUF3Qyw0Q0FBNEMsNkNBQTZDLDhDQUE4QyxxQ0FBcUMsdUJBQXVCLDhEQUE4RCx1Q0FBdUMsMkNBQTJDLDRDQUE0Qyw2Q0FBNkMscUNBQXFDLHNDQUFzQyxzQ0FBc0MsdUJBQXVCLDhEQUE4RCx3Q0FBd0MsNENBQTRDLDZDQUE2Qyw4Q0FBOEMsdUNBQXVDLHVCQUF1Qiw4REFBOEQseUNBQXlDLDZDQUE2Qyw4Q0FBOEMsK0NBQStDLHlDQUF5QywwQ0FBMEMsa0NBQWtDLGlGQUFpRixLQUFLLHFEQUFxRCxvQkFBb0Isd0NBQXdDLHFDQUFxQyxxQ0FBcUMseUNBQXlDLDBDQUEwQyx3Q0FBd0MseUNBQXlDLEdBQUcsR0FBRyx1Q0FBdUMsbUNBQW1DLGlCQUFpQixhQUFhLGdCQUFnQiwwRUFBMEUsMENBQTBDLG9jQUFvYyx5VEFBeVQsa0RBQWtELHdFQUF3RSxvQ0FBb0Msc0RBQXNELHVDQUF1QyxpRUFBaUUsa0NBQWtDLGdhQUFnYSxtQ0FBbUMscUJBQXFCLHFDQUFxQyxtQkFBbUIsd0NBQXdDLDBCQUEwQixvQ0FBb0Msc0JBQXNCLG1DQUFtQyxxQkFBcUIsb0NBQW9DLHNCQUFzQixtQ0FBbUMscUJBQXFCLGlDQUFpQyxtQkFBbUIsa0NBQWtDLG9CQUFvQixxQ0FBcUMsdUJBQXVCLGlDQUFpQyxtQkFBbUIsa0NBQWtDLHVCQUF1QixvQ0FBb0Msc0JBQXNCLHlDQUF5Qyw2QkFBNkIsa0NBQWtDLHlCQUF5QixrQ0FBa0Msb0JBQW9CLGdDQUFnQyxxQkFBcUIsOENBQThDLGdDQUFnQyw4Q0FBOEMsbUNBQW1DLDhDQUE4Qyw4QkFBOEIsc0ZBQXNGLDJEQUEyRCxvRkFBb0YsaUZBQWlGLGtEQUFrRCxtUEFBbVAsOENBQThDLGtQQUFrUCwrQ0FBK0MsOEJBQThCLG9GQUFvRiwyREFBMkQscUZBQXFGLGlGQUFpRiw0Q0FBNEMsNFBBQTRQLDZDQUE2Qyx5UEFBeVAsMENBQTBDLHdQQUF3UCxtRkFBbUYseUJBQXlCLDJDQUEyQyxnUEFBZ1Asb0ZBQW9GLHlCQUF5Qiw2Q0FBNkMsOERBQThELHNJQUFzSSxrR0FBa0csd0RBQXdELDhDQUE4Qyw0REFBNEQscUlBQXFJLG1HQUFtRyx3REFBd0Qsc0RBQXNELHdGQUF3Rix1REFBdUQsMEZBQTBGLDRDQUE0QyxtRUFBbUUsb0NBQW9DLGdCQUFnQixzQ0FBc0MsY0FBYyx5Q0FBeUMscUJBQXFCLHFDQUFxQyxpQkFBaUIsd0NBQXdDLGtRQUFrUSx5Q0FBeUMsaUJBQWlCLHdDQUF3QyxnQkFBZ0Isa0NBQWtDLGNBQWMsK0NBQStDLDRCQUE0Qiw4Q0FBOEMsMkJBQTJCLG1DQUFtQyxlQUFlLHNDQUFzQyxrQkFBa0Isa0NBQWtDLGNBQWMscUNBQXFDLGlCQUFpQixtQ0FBbUMsZUFBZSxrQ0FBa0MsZ0JBQWdCLHFEQUFxRCxrQ0FBa0Msb0RBQW9ELGlDQUFpQyw4REFBOEQsMkNBQTJDLHNEQUFzRCxxQ0FBcUMsOENBQThDLDJCQUEyQiw4Q0FBOEMsNkJBQTZCLDRDQUE0Qyx5QkFBeUIsMkNBQTJDLHlCQUF5QiwyQ0FBMkMseUJBQXlCLDRDQUE0QywwQkFBMEIsNkNBQTZDLDJCQUEyQiwyQ0FBMkMsNExBQTRMLG9ZQUFvWSxzREFBc0QseUNBQXlDLFlBQVksd0JBQXdCLDhEQUE4RCw4REFBOEQsa0RBQWtELG1EQUFtRCxnQ0FBZ0MsdURBQXVELGlCQUFpQixZQUFZLHdCQUF3Qix1REFBdUQsNENBQTRDLGtLQUFrSyw2Q0FBNkMsK0pBQStKLDRDQUE0Qyw0QkFBNEIsc01BQXNNLHlDQUF5Qyw4QkFBOEIscUJBQXFCLG9QQUFvUCwwQ0FBMEMsc0hBQXNILHNDQUFzQyxLQUFLLHdCQUF3QixzQkFBc0Isd0NBQXdDLGdDQUFnQyw0QkFBNEIsNkNBQTZDLG9CQUFvQiw0Q0FBNEMsNkJBQTZCLHFDQUFxQyxnQ0FBZ0MsNkNBQTZDLDBDQUEwQywyQkFBMkIsOENBQThDLDRCQUE0Qix5RkFBeUYsSUFBSSxLQUFLLCtCQUErQiwrRkFBK0YsOENBQThDLDJJQUEySSx3Q0FBd0MsNE1BQTRNLDBDQUEwQyxxU0FBcVMsdUNBQXVDLHFIQUFxSCx5Q0FBeUMsb0NBQW9DLGNBQWMsWUFBWSx3QkFBd0IsdURBQXVELEtBQUssTUFBTSxTQUFTLGlEQUFpRCwwREFBMEQsNkNBQTZDLHFDQUFxQyxpQkFBaUIsd0JBQXdCLEtBQUssb0JBQW9CLDhEQUE4RCxTQUFTLEdBQUcsR0FBRyxXQUFXLGlCQUFpQixhQUFhLGdCQUFnQiw2Q0FBNkMsMkNBQTJDLGNBQWMsc0NBQXNDLGNBQWMsNENBQTRDLGNBQWMsZ0JBQWdCLGNBQWMsZ0JBQWdCLGNBQWMsYUFBYSw0eUJBQTR5Qix1Q0FBdUMsa3NCQUFrc0Isb2tCQUFva0IsZ0NBQWdDLHVCQUF1Qiw4QkFBOEIsWUFBWSx1MkJBQXUyQixHQUFHLEdBQUcsWUFBWSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy90eXBlZmxleC9kaXN0L1lvZ2EuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cz1mdW5jdGlvbihlKXt2YXIgdD17fTtmdW5jdGlvbiBpKG4pe2lmKHRbbl0pcmV0dXJuIHRbbl0uZXhwb3J0czt2YXIgbz10W25dPXtpOm4sbDohMSxleHBvcnRzOnt9fTtyZXR1cm4gZVtuXS5jYWxsKG8uZXhwb3J0cyxvLG8uZXhwb3J0cyxpKSxvLmw9ITAsby5leHBvcnRzfXJldHVybiBpLm09ZSxpLmM9dCxpLmQ9ZnVuY3Rpb24oZSx0LG4pe2kubyhlLHQpfHxPYmplY3QuZGVmaW5lUHJvcGVydHkoZSx0LHtlbnVtZXJhYmxlOiEwLGdldDpufSl9LGkucj1mdW5jdGlvbihlKXtcInVuZGVmaW5lZFwiIT10eXBlb2YgU3ltYm9sJiZTeW1ib2wudG9TdHJpbmdUYWcmJk9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFN5bWJvbC50b1N0cmluZ1RhZyx7dmFsdWU6XCJNb2R1bGVcIn0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pfSxpLnQ9ZnVuY3Rpb24oZSx0KXtpZigxJnQmJihlPWkoZSkpLDgmdClyZXR1cm4gZTtpZig0JnQmJlwib2JqZWN0XCI9PXR5cGVvZiBlJiZlJiZlLl9fZXNNb2R1bGUpcmV0dXJuIGU7dmFyIG49T2JqZWN0LmNyZWF0ZShudWxsKTtpZihpLnIobiksT2JqZWN0LmRlZmluZVByb3BlcnR5KG4sXCJkZWZhdWx0XCIse2VudW1lcmFibGU6ITAsdmFsdWU6ZX0pLDImdCYmXCJzdHJpbmdcIiE9dHlwZW9mIGUpZm9yKHZhciBvIGluIGUpaS5kKG4sbyxmdW5jdGlvbih0KXtyZXR1cm4gZVt0XX0uYmluZChudWxsLG8pKTtyZXR1cm4gbn0saS5uPWZ1bmN0aW9uKGUpe3ZhciB0PWUmJmUuX19lc01vZHVsZT9mdW5jdGlvbigpe3JldHVybiBlLmRlZmF1bHR9OmZ1bmN0aW9uKCl7cmV0dXJuIGV9O3JldHVybiBpLmQodCxcImFcIix0KSx0fSxpLm89ZnVuY3Rpb24oZSx0KXtyZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUsdCl9LGkucD1cIlwiLGkoaS5zPTgpfShbZnVuY3Rpb24oZSx0LGkpe1widXNlIHN0cmljdFwiO3ZhciBuLG8scixhLHMsbCx1LGQsZyxHLGMsWSxmLHksaCxwO3QuX19lc01vZHVsZT0hMCx0LllHQWxpZ25Db3VudD04LGZ1bmN0aW9uKGUpe2VbZS5BdXRvPTBdPVwiQXV0b1wiLGVbZS5GbGV4U3RhcnQ9MV09XCJGbGV4U3RhcnRcIixlW2UuQ2VudGVyPTJdPVwiQ2VudGVyXCIsZVtlLkZsZXhFbmQ9M109XCJGbGV4RW5kXCIsZVtlLlN0cmV0Y2g9NF09XCJTdHJldGNoXCIsZVtlLkJhc2VsaW5lPTVdPVwiQmFzZWxpbmVcIixlW2UuU3BhY2VCZXR3ZWVuPTZdPVwiU3BhY2VCZXR3ZWVuXCIsZVtlLlNwYWNlQXJvdW5kPTddPVwiU3BhY2VBcm91bmRcIn0obj10LllHQWxpZ258fCh0LllHQWxpZ249e30pKSx0LllHQWxpZ25Ub1N0cmluZz1mdW5jdGlvbihlKXtzd2l0Y2goZSl7Y2FzZSBuLkF1dG86cmV0dXJuXCJhdXRvXCI7Y2FzZSBuLkZsZXhTdGFydDpyZXR1cm5cImZsZXgtc3RhcnRcIjtjYXNlIG4uQ2VudGVyOnJldHVyblwiY2VudGVyXCI7Y2FzZSBuLkZsZXhFbmQ6cmV0dXJuXCJmbGV4LWVuZFwiO2Nhc2Ugbi5TdHJldGNoOnJldHVyblwic3RyZXRjaFwiO2Nhc2Ugbi5CYXNlbGluZTpyZXR1cm5cImJhc2VsaW5lXCI7Y2FzZSBuLlNwYWNlQmV0d2VlbjpyZXR1cm5cInNwYWNlLWJldHdlZW5cIjtjYXNlIG4uU3BhY2VBcm91bmQ6cmV0dXJuXCJzcGFjZS1hcm91bmRcIn1yZXR1cm5cInVua25vd25cIn0sdC5ZR0RpbWVuc2lvbkNvdW50PTIsZnVuY3Rpb24oZSl7ZVtlLldpZHRoPTBdPVwiV2lkdGhcIixlW2UuSGVpZ2h0PTFdPVwiSGVpZ2h0XCJ9KG89dC5ZR0RpbWVuc2lvbnx8KHQuWUdEaW1lbnNpb249e30pKSx0LllHRGltZW5zaW9uVG9TdHJpbmc9ZnVuY3Rpb24oZSl7c3dpdGNoKGUpe2Nhc2Ugby5XaWR0aDpyZXR1cm5cIndpZHRoXCI7Y2FzZSBvLkhlaWdodDpyZXR1cm5cImhlaWdodFwifXJldHVyblwidW5rbm93blwifSxmdW5jdGlvbihlKXtlW2UuSW5oZXJpdD0wXT1cIkluaGVyaXRcIixlW2UuTFRSPTFdPVwiTFRSXCIsZVtlLlJUTD0yXT1cIlJUTFwifShyPXQuWUdEaXJlY3Rpb258fCh0LllHRGlyZWN0aW9uPXt9KSksdC5ZR0RpcmVjdGlvblRvU3RyaW5nPWZ1bmN0aW9uKGUpe3N3aXRjaChlKXtjYXNlIHIuSW5oZXJpdDpyZXR1cm5cImluaGVyaXRcIjtjYXNlIHIuTFRSOnJldHVyblwibHRyXCI7Y2FzZSByLlJUTDpyZXR1cm5cInJ0bFwifXJldHVyblwidW5rbm93blwifSx0LllHRGlzcGxheUNvdW50PTIsZnVuY3Rpb24oZSl7ZVtlLkZsZXg9MF09XCJGbGV4XCIsZVtlLk5vbmU9MV09XCJOb25lXCJ9KGE9dC5ZR0Rpc3BsYXl8fCh0LllHRGlzcGxheT17fSkpLHQuWUdEaXNwbGF5VG9TdHJpbmc9ZnVuY3Rpb24oZSl7c3dpdGNoKGUpe2Nhc2UgYS5GbGV4OnJldHVyblwiZmxleFwiO2Nhc2UgYS5Ob25lOnJldHVyblwibm9uZVwifXJldHVyblwidW5rbm93blwifSx0LllHRWRnZUNvdW50PTksZnVuY3Rpb24oZSl7ZVtlLkxlZnQ9MF09XCJMZWZ0XCIsZVtlLlRvcD0xXT1cIlRvcFwiLGVbZS5SaWdodD0yXT1cIlJpZ2h0XCIsZVtlLkJvdHRvbT0zXT1cIkJvdHRvbVwiLGVbZS5TdGFydD00XT1cIlN0YXJ0XCIsZVtlLkVuZD01XT1cIkVuZFwiLGVbZS5Ib3Jpem9udGFsPTZdPVwiSG9yaXpvbnRhbFwiLGVbZS5WZXJ0aWNhbD03XT1cIlZlcnRpY2FsXCIsZVtlLkFsbD04XT1cIkFsbFwifShzPXQuWUdFZGdlfHwodC5ZR0VkZ2U9e30pKSx0LllHRWRnZVRvU3RyaW5nPWZ1bmN0aW9uKGUpe3N3aXRjaChlKXtjYXNlIHMuTGVmdDpyZXR1cm5cImxlZnRcIjtjYXNlIHMuVG9wOnJldHVyblwidG9wXCI7Y2FzZSBzLlJpZ2h0OnJldHVyblwicmlnaHRcIjtjYXNlIHMuQm90dG9tOnJldHVyblwiYm90dG9tXCI7Y2FzZSBzLlN0YXJ0OnJldHVyblwic3RhcnRcIjtjYXNlIHMuRW5kOnJldHVyblwiZW5kXCI7Y2FzZSBzLkhvcml6b250YWw6cmV0dXJuXCJob3Jpem9udGFsXCI7Y2FzZSBzLlZlcnRpY2FsOnJldHVyblwidmVydGljYWxcIjtjYXNlIHMuQWxsOnJldHVyblwiYWxsXCJ9cmV0dXJuXCJ1bmtub3duXCJ9LHQuWUdFeHBlcmltZW50YWxGZWF0dXJlQ291bnQ9MSxmdW5jdGlvbihlKXtlW2UuV2ViRmxleEJhc2lzPTBdPVwiV2ViRmxleEJhc2lzXCJ9KGw9dC5ZR0V4cGVyaW1lbnRhbEZlYXR1cmV8fCh0LllHRXhwZXJpbWVudGFsRmVhdHVyZT17fSkpLHQuWUdFeHBlcmltZW50YWxGZWF0dXJlVG9TdHJpbmc9ZnVuY3Rpb24oZSl7c3dpdGNoKGUpe2Nhc2UgbC5XZWJGbGV4QmFzaXM6cmV0dXJuXCJ3ZWItZmxleC1iYXNpc1wifXJldHVyblwidW5rbm93blwifSx0LllHRmxleERpcmVjdGlvbkNvdW50PTQsZnVuY3Rpb24oZSl7ZVtlLkNvbHVtbj0wXT1cIkNvbHVtblwiLGVbZS5Db2x1bW5SZXZlcnNlPTFdPVwiQ29sdW1uUmV2ZXJzZVwiLGVbZS5Sb3c9Ml09XCJSb3dcIixlW2UuUm93UmV2ZXJzZT0zXT1cIlJvd1JldmVyc2VcIn0odT10LllHRmxleERpcmVjdGlvbnx8KHQuWUdGbGV4RGlyZWN0aW9uPXt9KSksdC5ZR0ZsZXhEaXJlY3Rpb25Ub1N0cmluZz1mdW5jdGlvbihlKXtzd2l0Y2goZSl7Y2FzZSB1LkNvbHVtbjpyZXR1cm5cImNvbHVtblwiO2Nhc2UgdS5Db2x1bW5SZXZlcnNlOnJldHVyblwiY29sdW1uLXJldmVyc2VcIjtjYXNlIHUuUm93OnJldHVyblwicm93XCI7Y2FzZSB1LlJvd1JldmVyc2U6cmV0dXJuXCJyb3ctcmV2ZXJzZVwifXJldHVyblwidW5rbm93blwifSx0LllHSnVzdGlmeUNvdW50PTYsZnVuY3Rpb24oZSl7ZVtlLkZsZXhTdGFydD0wXT1cIkZsZXhTdGFydFwiLGVbZS5DZW50ZXI9MV09XCJDZW50ZXJcIixlW2UuRmxleEVuZD0yXT1cIkZsZXhFbmRcIixlW2UuU3BhY2VCZXR3ZWVuPTNdPVwiU3BhY2VCZXR3ZWVuXCIsZVtlLlNwYWNlQXJvdW5kPTRdPVwiU3BhY2VBcm91bmRcIixlW2UuU3BhY2VFdmVubHk9NV09XCJTcGFjZUV2ZW5seVwifShkPXQuWUdKdXN0aWZ5fHwodC5ZR0p1c3RpZnk9e30pKSx0LllHSnVzdGlmeVRvU3RyaW5nPWZ1bmN0aW9uKGUpe3N3aXRjaChlKXtjYXNlIGQuRmxleFN0YXJ0OnJldHVyblwiZmxleC1zdGFydFwiO2Nhc2UgZC5DZW50ZXI6cmV0dXJuXCJjZW50ZXJcIjtjYXNlIGQuRmxleEVuZDpyZXR1cm5cImZsZXgtZW5kXCI7Y2FzZSBkLlNwYWNlQmV0d2VlbjpyZXR1cm5cInNwYWNlLWJldHdlZW5cIjtjYXNlIGQuU3BhY2VBcm91bmQ6cmV0dXJuXCJzcGFjZS1hcm91bmRcIjtjYXNlIGQuU3BhY2VFdmVubHk6cmV0dXJuXCJzcGFjZS1ldmVubHlcIn1yZXR1cm5cInVua25vd25cIn0sdC5ZR0xvZ0xldmVsQ291bnQ9NixmdW5jdGlvbihlKXtlW2UuRXJyb3I9MF09XCJFcnJvclwiLGVbZS5XYXJuPTFdPVwiV2FyblwiLGVbZS5JbmZvPTJdPVwiSW5mb1wiLGVbZS5EZWJ1Zz0zXT1cIkRlYnVnXCIsZVtlLlZlcmJvc2U9NF09XCJWZXJib3NlXCIsZVtlLkZhdGFsPTVdPVwiRmF0YWxcIn0oZz10LllHTG9nTGV2ZWx8fCh0LllHTG9nTGV2ZWw9e30pKSx0LllHTG9nTGV2ZWxUb1N0cmluZz1mdW5jdGlvbihlKXtzd2l0Y2goZSl7Y2FzZSBnLkVycm9yOnJldHVyblwiZXJyb3JcIjtjYXNlIGcuV2FybjpyZXR1cm5cIndhcm5cIjtjYXNlIGcuSW5mbzpyZXR1cm5cImluZm9cIjtjYXNlIGcuRGVidWc6cmV0dXJuXCJkZWJ1Z1wiO2Nhc2UgZy5WZXJib3NlOnJldHVyblwidmVyYm9zZVwiO2Nhc2UgZy5GYXRhbDpyZXR1cm5cImZhdGFsXCJ9cmV0dXJuXCJ1bmtub3duXCJ9LHQuWUdNZWFzdXJlTW9kZUNvdW50PTMsZnVuY3Rpb24oZSl7ZVtlLlVuZGVmaW5lZD0wXT1cIlVuZGVmaW5lZFwiLGVbZS5FeGFjdGx5PTFdPVwiRXhhY3RseVwiLGVbZS5BdE1vc3Q9Ml09XCJBdE1vc3RcIn0oRz10LllHTWVhc3VyZU1vZGV8fCh0LllHTWVhc3VyZU1vZGU9e30pKSx0LllHTWVhc3VyZU1vZGVUb1N0cmluZz1mdW5jdGlvbihlKXtzd2l0Y2goZSl7Y2FzZSBHLlVuZGVmaW5lZDpyZXR1cm5cInVuZGVmaW5lZFwiO2Nhc2UgRy5FeGFjdGx5OnJldHVyblwiZXhhY3RseVwiO2Nhc2UgRy5BdE1vc3Q6cmV0dXJuXCJhdC1tb3N0XCJ9cmV0dXJuXCJ1bmtub3duXCJ9LHQuWUdOb2RlVHlwZUNvdW50PTIsZnVuY3Rpb24oZSl7ZVtlLkRlZmF1bHQ9MF09XCJEZWZhdWx0XCIsZVtlLlRleHQ9MV09XCJUZXh0XCJ9KGM9dC5ZR05vZGVUeXBlfHwodC5ZR05vZGVUeXBlPXt9KSksdC5ZR05vZGVUeXBlVG9TdHJpbmc9ZnVuY3Rpb24oZSl7c3dpdGNoKGUpe2Nhc2UgYy5EZWZhdWx0OnJldHVyblwiZGVmYXVsdFwiO2Nhc2UgYy5UZXh0OnJldHVyblwidGV4dFwifXJldHVyblwidW5rbm93blwifSx0LllHT3ZlcmZsb3dDb3VudD0zLGZ1bmN0aW9uKGUpe2VbZS5WaXNpYmxlPTBdPVwiVmlzaWJsZVwiLGVbZS5IaWRkZW49MV09XCJIaWRkZW5cIixlW2UuU2Nyb2xsPTJdPVwiU2Nyb2xsXCJ9KFk9dC5ZR092ZXJmbG93fHwodC5ZR092ZXJmbG93PXt9KSksdC5ZR092ZXJmbG93VG9TdHJpbmc9ZnVuY3Rpb24oZSl7c3dpdGNoKGUpe2Nhc2UgWS5WaXNpYmxlOnJldHVyblwidmlzaWJsZVwiO2Nhc2UgWS5IaWRkZW46cmV0dXJuXCJoaWRkZW5cIjtjYXNlIFkuU2Nyb2xsOnJldHVyblwic2Nyb2xsXCJ9cmV0dXJuXCJ1bmtub3duXCJ9LHQuWUdQb3NpdGlvblR5cGVDb3VudD0yLGZ1bmN0aW9uKGUpe2VbZS5SZWxhdGl2ZT0wXT1cIlJlbGF0aXZlXCIsZVtlLkFic29sdXRlPTFdPVwiQWJzb2x1dGVcIn0oZj10LllHUG9zaXRpb25UeXBlfHwodC5ZR1Bvc2l0aW9uVHlwZT17fSkpLHQuWUdQb3NpdGlvblR5cGVUb1N0cmluZz1mdW5jdGlvbihlKXtzd2l0Y2goZSl7Y2FzZSBmLlJlbGF0aXZlOnJldHVyblwicmVsYXRpdmVcIjtjYXNlIGYuQWJzb2x1dGU6cmV0dXJuXCJhYnNvbHV0ZVwifXJldHVyblwidW5rbm93blwifSx0LllHUHJpbnRPcHRpb25zQ291bnQ9MyxmdW5jdGlvbihlKXtlW2UuTGF5b3V0PTFdPVwiTGF5b3V0XCIsZVtlLlN0eWxlPTJdPVwiU3R5bGVcIixlW2UuQ2hpbGRyZW49NF09XCJDaGlsZHJlblwifSh5PXQuWUdQcmludE9wdGlvbnN8fCh0LllHUHJpbnRPcHRpb25zPXt9KSksdC5ZR1ByaW50T3B0aW9uc1RvU3RyaW5nPWZ1bmN0aW9uKGUpe3N3aXRjaChlKXtjYXNlIHkuTGF5b3V0OnJldHVyblwibGF5b3V0XCI7Y2FzZSB5LlN0eWxlOnJldHVyblwic3R5bGVcIjtjYXNlIHkuQ2hpbGRyZW46cmV0dXJuXCJjaGlsZHJlblwifXJldHVyblwidW5rbm93blwifSx0LllHVW5pdENvdW50PTQsZnVuY3Rpb24oZSl7ZVtlLlVuZGVmaW5lZD0wXT1cIlVuZGVmaW5lZFwiLGVbZS5Qb2ludD0xXT1cIlBvaW50XCIsZVtlLlBlcmNlbnQ9Ml09XCJQZXJjZW50XCIsZVtlLkF1dG89M109XCJBdXRvXCJ9KGg9dC5ZR1VuaXR8fCh0LllHVW5pdD17fSkpLHQuWUdVbml0VG9TdHJpbmc9ZnVuY3Rpb24oZSl7c3dpdGNoKGUpe2Nhc2UgaC5VbmRlZmluZWQ6cmV0dXJuXCJ1bmRlZmluZWRcIjtjYXNlIGguUG9pbnQ6cmV0dXJuXCJwb2ludFwiO2Nhc2UgaC5QZXJjZW50OnJldHVyblwicGVyY2VudFwiO2Nhc2UgaC5BdXRvOnJldHVyblwiYXV0b1wifXJldHVyblwidW5rbm93blwifSx0LllHV3JhcENvdW50PTMsZnVuY3Rpb24oZSl7ZVtlLk5vV3JhcD0wXT1cIk5vV3JhcFwiLGVbZS5XcmFwPTFdPVwiV3JhcFwiLGVbZS5XcmFwUmV2ZXJzZT0yXT1cIldyYXBSZXZlcnNlXCJ9KHA9dC5ZR1dyYXB8fCh0LllHV3JhcD17fSkpLHQuWUdXcmFwVG9TdHJpbmc9ZnVuY3Rpb24oZSl7c3dpdGNoKGUpe2Nhc2UgcC5Ob1dyYXA6cmV0dXJuXCJuby13cmFwXCI7Y2FzZSBwLldyYXA6cmV0dXJuXCJ3cmFwXCI7Y2FzZSBwLldyYXBSZXZlcnNlOnJldHVyblwid3JhcC1yZXZlcnNlXCJ9cmV0dXJuXCJ1bmtub3duXCJ9fSxmdW5jdGlvbihlLHQsaSl7XCJ1c2Ugc3RyaWN0XCI7dC5fX2VzTW9kdWxlPSEwO3ZhciBuPWkoMCksbz1pKDkpLHI9aSg1KSxhPWkoNikscz1pKDIpLGw9aSg3KSx1PWkoMyksZD1pKDQpLGc9ZnVuY3Rpb24oKXtyZXR1cm4gZnVuY3Rpb24oKXt9fSgpO2Z1bmN0aW9uIEcoZSx0KXtmb3IodmFyIGk9ZSxuPTAsbz10WzBdWzBdO248by5sZW5ndGg7bisrKXt2YXIgcj1vW25dO2k9aS5yZXBsYWNlKC8lW2R8c3xmXS8scil9cmV0dXJuIGl9ZnVuY3Rpb24gYyhlLHQsaSxvKXtmb3IodmFyIHI9W10sYT00O2E8YXJndW1lbnRzLmxlbmd0aDthKyspclthLTRdPWFyZ3VtZW50c1thXTtzd2l0Y2goaSl7Y2FzZSBuLllHTG9nTGV2ZWwuRXJyb3I6Y2FzZSBuLllHTG9nTGV2ZWwuRmF0YWw6cmV0dXJuIGNvbnNvbGUuZXJyb3IoRyhvLHIpKTtjYXNlIG4uWUdMb2dMZXZlbC5XYXJuOmNhc2Ugbi5ZR0xvZ0xldmVsLkluZm86Y2FzZSBuLllHTG9nTGV2ZWwuRGVidWc6Y2FzZSBuLllHTG9nTGV2ZWwuVmVyYm9zZTpkZWZhdWx0OnJldHVybiBjb25zb2xlLmxvZyhHKG8scikpfX1mdW5jdGlvbiBZKGUpe3JldHVybiEodm9pZCAwIT09ZSYmIWlzTmFOKGUpKX10LllHU2l6ZT1nLHQuWUdVbmRlZmluZWQ9dm9pZCAwLHQuWUdWYWx1ZVVuZGVmaW5lZD1mdW5jdGlvbigpe3JldHVybiBuZXcgbC5ZR1ZhbHVlKHQuWUdVbmRlZmluZWQsbi5ZR1VuaXQuVW5kZWZpbmVkKX0sdC5ZR1ZhbHVlQXV0bz1mdW5jdGlvbigpe3JldHVybiBuZXcgbC5ZR1ZhbHVlKHQuWUdVbmRlZmluZWQsbi5ZR1VuaXQuQXV0byl9LHQuWUdWYWx1ZVplcm89ZnVuY3Rpb24oKXtyZXR1cm4gbmV3IGwuWUdWYWx1ZSgwLG4uWUdVbml0LlBvaW50KX0sdC5ZR0Zsb2F0SXNVbmRlZmluZWQ9WSx0LllHQ29tcHV0ZWRFZGdlVmFsdWU9ZnVuY3Rpb24oZSxpLG8pe3JldHVybiBlW2ldLnVuaXQhPW4uWUdVbml0LlVuZGVmaW5lZD9lW2ldOmkhPW4uWUdFZGdlLlRvcCYmaSE9bi5ZR0VkZ2UuQm90dG9tfHxlW24uWUdFZGdlLlZlcnRpY2FsXS51bml0PT1uLllHVW5pdC5VbmRlZmluZWQ/aSE9bi5ZR0VkZ2UuTGVmdCYmaSE9bi5ZR0VkZ2UuUmlnaHQmJmkhPW4uWUdFZGdlLlN0YXJ0JiZpIT1uLllHRWRnZS5FbmR8fGVbbi5ZR0VkZ2UuSG9yaXpvbnRhbF0udW5pdD09bi5ZR1VuaXQuVW5kZWZpbmVkP2Vbbi5ZR0VkZ2UuQWxsXS51bml0IT1uLllHVW5pdC5VbmRlZmluZWQ/ZVtuLllHRWRnZS5BbGxdOmk9PW4uWUdFZGdlLlN0YXJ0fHxpPT1uLllHRWRnZS5FbmQ/dC5ZR1ZhbHVlVW5kZWZpbmVkKCk6bzplW24uWUdFZGdlLkhvcml6b250YWxdOmVbbi5ZR0VkZ2UuVmVydGljYWxdfSx0LllHTm9kZUdldENvbnRleHQ9ZnVuY3Rpb24oZSl7cmV0dXJuIGUuZ2V0Q29udGV4dCgpfSx0LllHTm9kZVNldENvbnRleHQ9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZS5zZXRDb250ZXh0KHQpfSx0LllHTm9kZUdldE1lYXN1cmVGdW5jPWZ1bmN0aW9uKGUpe3JldHVybiBlLmdldE1lYXN1cmUoKX0sdC5ZR05vZGVTZXRNZWFzdXJlRnVuYz1mdW5jdGlvbihlLHQpe2Uuc2V0TWVhc3VyZUZ1bmModCl9LHQuWUdOb2RlR2V0QmFzZWxpbmVGdW5jPWZ1bmN0aW9uKGUpe3JldHVybiBlLmdldEJhc2VsaW5lKCl9LHQuWUdOb2RlU2V0QmFzZWxpbmVGdW5jPWZ1bmN0aW9uKGUsdCl7ZS5zZXRCYXNlTGluZUZ1bmModCl9LHQuWUdOb2RlR2V0RGlydGllZEZ1bmM9ZnVuY3Rpb24oZSl7cmV0dXJuIGUuZ2V0RGlydGllZCgpfSx0LllHTm9kZVNldERpcnRpZWRGdW5jPWZ1bmN0aW9uKGUsdCl7ZS5zZXREaXJ0aWVkRnVuYyh0KX0sdC5ZR05vZGVHZXRQcmludEZ1bmM9ZnVuY3Rpb24oZSl7cmV0dXJuIGUuZ2V0UHJpbnRGdW5jKCl9LHQuWUdOb2RlU2V0UHJpbnRGdW5jPWZ1bmN0aW9uKGUsdCl7ZS5zZXRQcmludEZ1bmModCl9LHQuWUdOb2RlR2V0SGFzTmV3TGF5b3V0PWZ1bmN0aW9uKGUpe3JldHVybiBlLmdldEhhc05ld0xheW91dCgpfSx0LllHTm9kZVNldEhhc05ld0xheW91dD1mdW5jdGlvbihlLHQpe2Uuc2V0SGFzTmV3TGF5b3V0KHQpfSx0LllHTm9kZUdldE5vZGVUeXBlPWZ1bmN0aW9uKGUpe3JldHVybiBlLmdldE5vZGVUeXBlKCl9LHQuWUdOb2RlU2V0Tm9kZVR5cGU9ZnVuY3Rpb24oZSx0KXtlLnNldE5vZGVUeXBlKHQpfSx0LllHTm9kZUlzRGlydHk9ZnVuY3Rpb24oZSl7cmV0dXJuIGUuaXNEaXJ0eSgpfSx0LllHTm9kZUxheW91dEdldERpZFVzZUxlZ2FjeUZsYWc9ZnVuY3Rpb24oZSl7cmV0dXJuIGUuZGlkVXNlTGVnYWN5RmxhZygpfSx0LllHTm9kZU1hcmtEaXJ0eUFuZFByb3BvZ2F0ZVRvRGVzY2VuZGFudHM9ZnVuY3Rpb24oZSl7ZS5tYXJrRGlydHlBbmRQcm9wb2dhdGVEb3dud2FyZHMoKX07dmFyIGY9MCx5PTA7ZnVuY3Rpb24gaChlKXt2YXIgdD1uZXcgby5ZR05vZGU7cmV0dXJuIGYrKyxlLnVzZVdlYkRlZmF1bHRzJiYodC5zZXRTdHlsZUZsZXhEaXJlY3Rpb24obi5ZR0ZsZXhEaXJlY3Rpb24uUm93KSx0LnNldFN0eWxlQWxpZ25Db250ZW50KG4uWUdBbGlnbi5TdHJldGNoKSksdC5zZXRDb25maWcoZSksdH1mdW5jdGlvbiBwKCl7cmV0dXJuIE0oKX1mdW5jdGlvbiBtKGUpe2NvbnNvbGUubG9nKFwiY2xvbmU/XCIpO3ZhciB0PW5ldyBvLllHTm9kZShlKTtyZXR1cm4gZisrLHQuc2V0T3duZXIobnVsbCksdH1mdW5jdGlvbiBTKGUpe3ZhciB0PW5ldyByLllHQ29uZmlnKGUubG9nZ2VyKTtyZXR1cm4geSsrLHR9ZnVuY3Rpb24gRihlKXtmb3IodmFyIHQ9bShlKSxpPW5ldyBBcnJheShlLmdldENoaWxkcmVuKCkubGVuZ3RoKSxuPW51bGwsbz0wO288ZS5nZXRDaGlsZHJlbigpLmxlbmd0aDsrK28peyhuPUYoZS5nZXRDaGlsZChvKSkpLnNldE93bmVyKHQpLGkucHVzaChuKX1yZXR1cm4gdC5zZXRDaGlsZHJlbihpKSxudWxsIT1lLmdldENvbmZpZygpJiZ0LnNldENvbmZpZyhTKGUuZ2V0Q29uZmlnKCkpKSx0fWZ1bmN0aW9uIHYoZSl7dmFyIHQ9ZS5nZXRPd25lcigpO251bGwhPXQmJih0LnJlbW92ZUNoaWxkKGUpLGUuc2V0T3duZXIobnVsbCkpO2Zvcih2YXIgaT1FKGUpLG49MDtuPGk7bisrKXtVKGUsbikuc2V0T3duZXIobnVsbCl9ZS5jbGVhckNoaWxkcmVuKCksZi0tfWZ1bmN0aW9uIEQoZSl7bnVsbCE9ZS5nZXRDb25maWcoKSYmKHktLSxlLnNldENvbmZpZyhudWxsKSk7Zm9yKHZhciB0PTA7dDxlLmdldENoaWxkcmVuQ291bnQoKTsrK3QpRChlLmdldENoaWxkKHQpKX1mdW5jdGlvbiB4KGUpe2Zvcig7RShlKT4wOyl7dmFyIHQ9VShlLDApO2lmKHQuZ2V0T3duZXIoKSE9ZSlicmVhaztMKGUsdCkseCh0KX12KGUpfWZ1bmN0aW9uIE0oKXt2YXIgZT1uZXcgci5ZR0NvbmZpZyhjKTtyZXR1cm4geSsrLGV9ZnVuY3Rpb24gTChlLHQpe3ZhciBpPUUoZSk7aWYoMCE9aSlpZihVKGUsMCkuZ2V0T3duZXIoKSE9ZSl7Zm9yKHZhciBuPWUuZ2V0Q29uZmlnKCkuY2xvbmVOb2RlQ2FsbGJhY2ssbz0wLHI9MDtyPGk7cisrKXt2YXIgcz1lLmdldENoaWxkKHIpO2lmKHQhPXMpe3ZhciBsPW51bGw7biYmKGw9bihzLGUsbykpLG51bGw9PWwmJihsPW0ocykpLGUucmVwbGFjZUNoaWxkSW5kZXgobCxvKSxsLnNldE93bmVyKGUpLG8rK31lbHNlIGUubWFya0RpcnR5QW5kUHJvcG9nYXRlKCl9Zm9yKDtvPGk7KWUucmVtb3ZlQ2hpbGRJbmRleChvKSxvKyt9ZWxzZSBlLnJlbW92ZUNoaWxkKHQpJiYodC5zZXRMYXlvdXQobmV3IGEuWUdMYXlvdXQpLHQuc2V0T3duZXIobnVsbCksZS5tYXJrRGlydHlBbmRQcm9wb2dhdGUoKSl9ZnVuY3Rpb24gdyhlLHQpe2lmKGUpe3ZhciBpPWUuZ2V0Q2hpbGRyZW4oKTtpZigwPT10Lmxlbmd0aCl7aWYoaS5sZW5ndGg+MCl7Zm9yKHZhciBuPTA7bjxpLmxlbmd0aDtuKyspe3ZhciBvPWlbbl07by5zZXRMYXlvdXQobmV3IGEuWUdMYXlvdXQpLG8uc2V0T3duZXIobnVsbCl9ZS5zZXRDaGlsZHJlbihuZXcgQXJyYXkpLGUubWFya0RpcnR5QW5kUHJvcG9nYXRlKCl9fWVsc2V7aWYoaS5sZW5ndGg+MClmb3Iobj0wO248aS5sZW5ndGg7bisrKXt2YXIgcj1pW25dO3QuaW5kZXhPZihyKTwwJiYoci5zZXRMYXlvdXQobmV3IGEuWUdMYXlvdXQpLHIuc2V0T3duZXIobnVsbCkpfWUuc2V0Q2hpbGRyZW4odCk7Zm9yKG49MDtuPHQubGVuZ3RoO24rKyl0W25dLnNldE93bmVyKGUpO2UubWFya0RpcnR5QW5kUHJvcG9nYXRlKCl9fX1mdW5jdGlvbiBVKGUsdCl7dmFyIGk9ZS5nZXRDaGlsZHJlbigpO3JldHVybiB0PGkubGVuZ3RoP2lbdF06bnVsbH1mdW5jdGlvbiBFKGUpe3JldHVybiBlLmdldENoaWxkcmVuQ291bnQoKX10LllHTm9kZU5ld1dpdGhDb25maWc9aCx0LllHQ29uZmlnR2V0RGVmYXVsdD1wLHQuWUdOb2RlTmV3PWZ1bmN0aW9uKCl7cmV0dXJuIGgocCgpKX0sdC5ZR05vZGVDbG9uZT1tLHQuWUdDb25maWdDbG9uZT1TLHQuWUdOb2RlRGVlcENsb25lPUYsdC5ZR05vZGVGcmVlPXYsdC5ZR0NvbmZpZ0ZyZWVSZWN1cnNpdmU9RCx0LllHTm9kZUZyZWVSZWN1cnNpdmU9eCx0LllHTm9kZVJlc2V0PWZ1bmN0aW9uKGUpe3ZlKGUsMD09RShlKSxcIkNhbm5vdCByZXNldCBhIG5vZGUgd2hpY2ggc3RpbGwgaGFzIGNoaWxkcmVuIGF0dGFjaGVkXCIpLHZlKGUsbnVsbD09ZS5nZXRPd25lcigpLFwiQ2Fubm90IHJlc2V0IGEgbm9kZSBzdGlsbCBhdHRhY2hlZCB0byBhIG93bmVyXCIpLGUuY2xlYXJDaGlsZHJlbigpO3ZhciB0PWUuZ2V0Q29uZmlnKCk7ZS5mcm9tTm9kZShuZXcgby5ZR05vZGUpLHQudXNlV2ViRGVmYXVsdHMmJihlLnNldFN0eWxlRmxleERpcmVjdGlvbihuLllHRmxleERpcmVjdGlvbi5Sb3cpLGUuc2V0U3R5bGVBbGlnbkNvbnRlbnQobi5ZR0FsaWduLlN0cmV0Y2gpKSxlLnNldENvbmZpZyh0KX0sdC5ZR05vZGVHZXRJbnN0YW5jZUNvdW50PWZ1bmN0aW9uKCl7cmV0dXJuIGZ9LHQuWUdDb25maWdHZXRJbnN0YW5jZUNvdW50PWZ1bmN0aW9uKCl7cmV0dXJuIHl9LHQuWUdDb25maWdOZXc9TSx0LllHQ29uZmlnRnJlZT1mdW5jdGlvbihlKXt5LS19LHQuWUdDb25maWdDb3B5PWZ1bmN0aW9uKGUsdCl7T2JqZWN0LmFzc2lnbihlLHQpfSx0LllHTm9kZUluc2VydENoaWxkPWZ1bmN0aW9uKGUsdCxpKXt2ZShlLG51bGw9PXQuZ2V0T3duZXIoKSxcIkNoaWxkIGFscmVhZHkgaGFzIGEgb3duZXIsIGl0IG11c3QgYmUgcmVtb3ZlZCBmaXJzdC5cIiksdmUoZSxudWxsPT1lLmdldE1lYXN1cmUoKSxcIkNhbm5vdCBhZGQgY2hpbGQ6IE5vZGVzIHdpdGggbWVhc3VyZSBmdW5jdGlvbnMgY2Fubm90IGhhdmUgY2hpbGRyZW4uXCIpLGUuY2xvbmVDaGlsZHJlbklmTmVlZGVkKCksZS5pbnNlcnRDaGlsZEluZGV4KHQsaSk7dmFyIG49dC5nZXRPd25lcigpP251bGw6ZTt0LnNldE93bmVyKG4pLGUubWFya0RpcnR5QW5kUHJvcG9nYXRlKCl9LHQuWUdOb2RlSW5zZXJ0U2hhcmVkQ2hpbGQ9ZnVuY3Rpb24oZSx0LGkpe3ZlKGUsbnVsbD09ZS5nZXRNZWFzdXJlKCksXCJDYW5ub3QgYWRkIGNoaWxkOiBOb2RlcyB3aXRoIG1lYXN1cmUgZnVuY3Rpb25zIGNhbm5vdCBoYXZlIGNoaWxkcmVuLlwiKSxlLmluc2VydENoaWxkSW5kZXgodCxpKSx0LnNldE93bmVyKG51bGwpLGUubWFya0RpcnR5QW5kUHJvcG9nYXRlKCl9LHQuWUdOb2RlUmVtb3ZlQ2hpbGQ9TCx0LllHTm9kZVJlbW92ZUFsbENoaWxkcmVuPWZ1bmN0aW9uKGUpe3ZhciB0PUUoZSk7aWYoMCE9dCl7aWYoVShlLDApLmdldE93bmVyKCk9PWUpe2Zvcih2YXIgaT0wO2k8dDtpKyspe3ZhciBuPVUoZSxpKTtuLnNldExheW91dChuZXcgYS5ZR0xheW91dCksbi5zZXRPd25lcihudWxsKX1yZXR1cm4gZS5jbGVhckNoaWxkcmVuKCksdm9pZCBlLm1hcmtEaXJ0eUFuZFByb3BvZ2F0ZSgpfWUuc2V0Q2hpbGRyZW4obmV3IEFycmF5KSxlLm1hcmtEaXJ0eUFuZFByb3BvZ2F0ZSgpfX0sdC5ZR05vZGVTZXRDaGlsZHJlbkludGVybmFsPXcsdC5ZR05vZGVTZXRDaGlsZHJlbj1mdW5jdGlvbihlLHQpe3coZSx0KX0sdC5ZR05vZGVHZXRDaGlsZD1VLHQuWUdOb2RlR2V0Q2hpbGRDb3VudD1FLHQuWUdOb2RlR2V0T3duZXI9ZnVuY3Rpb24oZSl7cmV0dXJuIGUuZ2V0T3duZXIoKX0sdC5ZR05vZGVHZXRQYXJlbnQ9ZnVuY3Rpb24oZSl7cmV0dXJuIGUuZ2V0T3duZXIoKX0sdC5ZR05vZGVNYXJrRGlydHk9ZnVuY3Rpb24oZSl7dmUoZSxudWxsIT1lLmdldE1lYXN1cmUoKSxcIk9ubHkgbGVhZiBub2RlcyB3aXRoIGN1c3RvbSBtZWFzdXJlIGZ1bmN0aW9ucyBzaG91bGQgbWFudWFsbHkgbWFyayB0aGVtc2VsdmVzIGFzIGRpcnR5XCIpLGUubWFya0RpcnR5QW5kUHJvcG9nYXRlKCl9LHQuWUdOb2RlQ29weVN0eWxlPWZ1bmN0aW9uKGUsdCl7ZS5nZXRTdHlsZSgpLmlzRXF1YWwodC5nZXRTdHlsZSgpKXx8KGUuc2V0U3R5bGUodC5nZXRTdHlsZSgpKSxlLm1hcmtEaXJ0eUFuZFByb3BvZ2F0ZSgpKX0sdC5ZR05vZGVTdHlsZUdldEZsZXhHcm93PWZ1bmN0aW9uKGUpe3JldHVybiBlLmdldFN0eWxlKCkuZmxleEdyb3cuaXNVbmRlZmluZWQoKT9kLmtEZWZhdWx0RmxleEdyb3c6ZS5nZXRTdHlsZSgpLmZsZXhHcm93LmdldFZhbHVlKCl9LHQuWUdOb2RlU3R5bGVHZXRGbGV4U2hyaW5rPWZ1bmN0aW9uKGUpe3JldHVybiBlLmdldFN0eWxlKCkuZmxleFNocmluay5pc1VuZGVmaW5lZCgpP2UuZ2V0Q29uZmlnKCkudXNlV2ViRGVmYXVsdHM/ZC5rV2ViRGVmYXVsdEZsZXhTaHJpbms6ZC5rRGVmYXVsdEZsZXhTaHJpbms6ZS5nZXRTdHlsZSgpLmZsZXhTaHJpbmsuZ2V0VmFsdWUoKX0sdC5ZR05vZGVTdHlsZVNldERpcmVjdGlvbj1mdW5jdGlvbihlLHQpe2lmKGUuZ2V0U3R5bGUoKS5kaXJlY3Rpb24hPXQpe3ZhciBpPWUuZ2V0U3R5bGUoKTtpLmRpcmVjdGlvbj10LGUuc2V0U3R5bGUoaSksZS5tYXJrRGlydHlBbmRQcm9wb2dhdGUoKX19LHQuWUdOb2RlU3R5bGVHZXREaXJlY3Rpb249ZnVuY3Rpb24oZSl7cmV0dXJuIGUuZ2V0U3R5bGUoKS5kaXJlY3Rpb259LHQuWUdOb2RlU3R5bGVTZXRGbGV4RGlyZWN0aW9uPWZ1bmN0aW9uKGUsdCl7aWYoZS5nZXRTdHlsZSgpLmZsZXhEaXJlY3Rpb24hPXQpe3ZhciBpPWUuZ2V0U3R5bGUoKTtpLmZsZXhEaXJlY3Rpb249dCxlLnNldFN0eWxlKGkpLGUubWFya0RpcnR5QW5kUHJvcG9nYXRlKCl9fSx0LllHTm9kZVN0eWxlR2V0RmxleERpcmVjdGlvbj1mdW5jdGlvbihlKXtyZXR1cm4gZS5nZXRTdHlsZSgpLmZsZXhEaXJlY3Rpb259LHQuWUdOb2RlU3R5bGVTZXRKdXN0aWZ5Q29udGVudD1mdW5jdGlvbihlLHQpe2lmKGUuZ2V0U3R5bGUoKS5qdXN0aWZ5Q29udGVudCE9dCl7dmFyIGk9ZS5nZXRTdHlsZSgpO2kuanVzdGlmeUNvbnRlbnQ9dCxlLnNldFN0eWxlKGkpLGUubWFya0RpcnR5QW5kUHJvcG9nYXRlKCl9fSx0LllHTm9kZVN0eWxlR2V0SnVzdGlmeUNvbnRlbnQ9ZnVuY3Rpb24oZSl7cmV0dXJuIGUuZ2V0U3R5bGUoKS5qdXN0aWZ5Q29udGVudH0sdC5ZR05vZGVTdHlsZVNldEFsaWduQ29udGVudD1mdW5jdGlvbihlLHQpe2lmKGUuZ2V0U3R5bGUoKS5hbGlnbkNvbnRlbnQhPXQpe3ZhciBpPWUuZ2V0U3R5bGUoKTtpLmFsaWduQ29udGVudD10LGUuc2V0U3R5bGUoaSksZS5tYXJrRGlydHlBbmRQcm9wb2dhdGUoKX19LHQuWUdOb2RlU3R5bGVHZXRBbGlnbkNvbnRlbnQ9ZnVuY3Rpb24oZSl7cmV0dXJuIGUuZ2V0U3R5bGUoKS5hbGlnbkNvbnRlbnR9LHQuWUdOb2RlU3R5bGVTZXRBbGlnbkl0ZW1zPWZ1bmN0aW9uKGUsdCl7aWYoZS5nZXRTdHlsZSgpLmFsaWduSXRlbXMhPXQpe3ZhciBpPWUuZ2V0U3R5bGUoKTtpLmFsaWduSXRlbXM9dCxlLnNldFN0eWxlKGkpLGUubWFya0RpcnR5QW5kUHJvcG9nYXRlKCl9fSx0LllHTm9kZVN0eWxlR2V0QWxpZ25JdGVtcz1mdW5jdGlvbihlKXtyZXR1cm4gZS5nZXRTdHlsZSgpLmFsaWduSXRlbXN9LHQuWUdOb2RlU3R5bGVTZXRBbGlnblNlbGY9ZnVuY3Rpb24oZSx0KXtpZihlLmdldFN0eWxlKCkuYWxpZ25TZWxmIT10KXt2YXIgaT1lLmdldFN0eWxlKCk7aS5hbGlnblNlbGY9dCxlLnNldFN0eWxlKGkpLGUubWFya0RpcnR5QW5kUHJvcG9nYXRlKCl9fSx0LllHTm9kZVN0eWxlR2V0QWxpZ25TZWxmPWZ1bmN0aW9uKGUpe3JldHVybiBlLmdldFN0eWxlKCkuYWxpZ25TZWxmfSx0LllHTm9kZVN0eWxlU2V0UG9zaXRpb25UeXBlPWZ1bmN0aW9uKGUsdCl7aWYoZS5nZXRTdHlsZSgpLnBvc2l0aW9uVHlwZSE9dCl7dmFyIGk9ZS5nZXRTdHlsZSgpO2kucG9zaXRpb25UeXBlPXQsZS5zZXRTdHlsZShpKSxlLm1hcmtEaXJ0eUFuZFByb3BvZ2F0ZSgpfX0sdC5ZR05vZGVTdHlsZUdldFBvc2l0aW9uVHlwZT1mdW5jdGlvbihlKXtyZXR1cm4gZS5nZXRTdHlsZSgpLnBvc2l0aW9uVHlwZX0sdC5ZR05vZGVTdHlsZVNldEZsZXhXcmFwPWZ1bmN0aW9uKGUsdCl7aWYoZS5nZXRTdHlsZSgpLmZsZXhXcmFwIT10KXt2YXIgaT1lLmdldFN0eWxlKCk7aS5mbGV4V3JhcD10LGUuc2V0U3R5bGUoaSksZS5tYXJrRGlydHlBbmRQcm9wb2dhdGUoKX19LHQuWUdOb2RlU3R5bGVHZXRGbGV4V3JhcD1mdW5jdGlvbihlKXtyZXR1cm4gZS5nZXRTdHlsZSgpLmZsZXhXcmFwfSx0LllHTm9kZVN0eWxlU2V0T3ZlcmZsb3c9ZnVuY3Rpb24oZSx0KXtpZihlLmdldFN0eWxlKCkub3ZlcmZsb3chPXQpe3ZhciBpPWUuZ2V0U3R5bGUoKTtpLm92ZXJmbG93PXQsZS5zZXRTdHlsZShpKSxlLm1hcmtEaXJ0eUFuZFByb3BvZ2F0ZSgpfX0sdC5ZR05vZGVTdHlsZUdldE92ZXJmbG93PWZ1bmN0aW9uKGUpe3JldHVybiBlLmdldFN0eWxlKCkub3ZlcmZsb3d9LHQuWUdOb2RlU3R5bGVTZXREaXNwbGF5PWZ1bmN0aW9uKGUsdCl7aWYoZS5nZXRTdHlsZSgpLmRpc3BsYXkhPXQpe3ZhciBpPWUuZ2V0U3R5bGUoKTtpLmRpc3BsYXk9dCxlLnNldFN0eWxlKGkpLGUubWFya0RpcnR5QW5kUHJvcG9nYXRlKCl9fSx0LllHTm9kZVN0eWxlR2V0RGlzcGxheT1mdW5jdGlvbihlKXtyZXR1cm4gZS5nZXRTdHlsZSgpLmRpc3BsYXl9LHQuWUdOb2RlU3R5bGVTZXRQb3NpdGlvbj1mdW5jdGlvbihlLHQsaSl7dmFyIG89bmV3IGwuWUdWYWx1ZSh1LllHRmxvYXRTYW5pdGl6ZShpKSxZKGkpP24uWUdVbml0LlVuZGVmaW5lZDpuLllHVW5pdC5Qb2ludCk7aWYoZS5nZXRTdHlsZSgpLnBvc2l0aW9uW3RdLnZhbHVlIT1vLnZhbHVlJiZvLnVuaXQhPW4uWUdVbml0LlVuZGVmaW5lZHx8ZS5nZXRTdHlsZSgpLnBvc2l0aW9uW3RdLnVuaXQhPW8udW5pdCl7dmFyIHI9ZS5nZXRTdHlsZSgpO3IucG9zaXRpb25bdF09byxlLnNldFN0eWxlKHIpLGUubWFya0RpcnR5QW5kUHJvcG9nYXRlKCl9fSx0LllHTm9kZVN0eWxlU2V0UG9zaXRpb25QZXJjZW50PWZ1bmN0aW9uKGUsdCxpKXt2YXIgbz1uZXcgbC5ZR1ZhbHVlKHUuWUdGbG9hdFNhbml0aXplKGkpLFkoaSk/bi5ZR1VuaXQuVW5kZWZpbmVkOm4uWUdVbml0LlBlcmNlbnQpO2lmKGUuZ2V0U3R5bGUoKS5wb3NpdGlvblt0XS52YWx1ZSE9by52YWx1ZSYmby51bml0IT1uLllHVW5pdC5VbmRlZmluZWR8fGUuZ2V0U3R5bGUoKS5wb3NpdGlvblt0XS51bml0IT1vLnVuaXQpe3ZhciByPWUuZ2V0U3R5bGUoKTtyLnBvc2l0aW9uW3RdPW8sZS5zZXRTdHlsZShyKSxlLm1hcmtEaXJ0eUFuZFByb3BvZ2F0ZSgpfX0sdC5ZR05vZGVTdHlsZUdldFBvc2l0aW9uPWZ1bmN0aW9uKGUsaSl7dmFyIG89ZS5nZXRTdHlsZSgpLnBvc2l0aW9uW2ldO3JldHVybiBvLnVuaXQhPW4uWUdVbml0LlVuZGVmaW5lZCYmby51bml0IT1uLllHVW5pdC5BdXRvfHwoby52YWx1ZT10LllHVW5kZWZpbmVkKSxvfSx0LllHTm9kZVN0eWxlU2V0TWFyZ2luPWZ1bmN0aW9uKGUsdCxpKXt2YXIgbz1uZXcgbC5ZR1ZhbHVlKHUuWUdGbG9hdFNhbml0aXplKGkpLFkoaSk/bi5ZR1VuaXQuVW5kZWZpbmVkOm4uWUdVbml0LlBvaW50KTtpZihlLmdldFN0eWxlKCkubWFyZ2luW3RdLnZhbHVlIT1vLnZhbHVlJiZvLnVuaXQhPW4uWUdVbml0LlVuZGVmaW5lZHx8ZS5nZXRTdHlsZSgpLm1hcmdpblt0XS51bml0IT1vLnVuaXQpe3ZhciByPWUuZ2V0U3R5bGUoKTtyLm1hcmdpblt0XT1vLGUuc2V0U3R5bGUociksZS5tYXJrRGlydHlBbmRQcm9wb2dhdGUoKX19LHQuWUdOb2RlU3R5bGVTZXRNYXJnaW5QZXJjZW50PWZ1bmN0aW9uKGUsdCxpKXt2YXIgbz1uZXcgbC5ZR1ZhbHVlKHUuWUdGbG9hdFNhbml0aXplKGkpLFkoaSk/bi5ZR1VuaXQuVW5kZWZpbmVkOm4uWUdVbml0LlBlcmNlbnQpO2lmKGUuZ2V0U3R5bGUoKS5tYXJnaW5bdF0udmFsdWUhPW8udmFsdWUmJm8udW5pdCE9bi5ZR1VuaXQuVW5kZWZpbmVkfHxlLmdldFN0eWxlKCkubWFyZ2luW3RdLnVuaXQhPW8udW5pdCl7dmFyIHI9ZS5nZXRTdHlsZSgpO3IubWFyZ2luW3RdPW8sZS5zZXRTdHlsZShyKSxlLm1hcmtEaXJ0eUFuZFByb3BvZ2F0ZSgpfX0sdC5ZR05vZGVTdHlsZUdldE1hcmdpbj1mdW5jdGlvbihlLGkpe3ZhciBvPWUuZ2V0U3R5bGUoKS5tYXJnaW5baV07cmV0dXJuIG8udW5pdCE9bi5ZR1VuaXQuVW5kZWZpbmVkJiZvLnVuaXQhPW4uWUdVbml0LkF1dG98fChvLnZhbHVlPXQuWUdVbmRlZmluZWQpLG99LHQuWUdOb2RlU3R5bGVTZXRQYWRkaW5nPWZ1bmN0aW9uKGUsdCxpKXt2YXIgbz1uZXcgbC5ZR1ZhbHVlKHUuWUdGbG9hdFNhbml0aXplKGkpLFkoaSk/bi5ZR1VuaXQuVW5kZWZpbmVkOm4uWUdVbml0LlBvaW50KTtpZihlLmdldFN0eWxlKCkucGFkZGluZ1t0XS52YWx1ZSE9by52YWx1ZSYmby51bml0IT1uLllHVW5pdC5VbmRlZmluZWR8fGUuZ2V0U3R5bGUoKS5wYWRkaW5nW3RdLnVuaXQhPW8udW5pdCl7dmFyIHI9ZS5nZXRTdHlsZSgpO3IucGFkZGluZ1t0XT1vLGUuc2V0U3R5bGUociksZS5tYXJrRGlydHlBbmRQcm9wb2dhdGUoKX19LHQuWUdOb2RlU3R5bGVTZXRQYWRkaW5nUGVyY2VudD1mdW5jdGlvbihlLHQsaSl7dmFyIG89bmV3IGwuWUdWYWx1ZSh1LllHRmxvYXRTYW5pdGl6ZShpKSxZKGkpP24uWUdVbml0LlVuZGVmaW5lZDpuLllHVW5pdC5QZXJjZW50KTtpZihlLmdldFN0eWxlKCkucGFkZGluZ1t0XS52YWx1ZSE9by52YWx1ZSYmby51bml0IT1uLllHVW5pdC5VbmRlZmluZWR8fGUuZ2V0U3R5bGUoKS5wYWRkaW5nW3RdLnVuaXQhPW8udW5pdCl7dmFyIHI9ZS5nZXRTdHlsZSgpO3IucGFkZGluZ1t0XT1vLGUuc2V0U3R5bGUociksZS5tYXJrRGlydHlBbmRQcm9wb2dhdGUoKX19LHQuWUdOb2RlU3R5bGVHZXRQYWRkaW5nPWZ1bmN0aW9uKGUsaSl7dmFyIG89ZS5nZXRTdHlsZSgpLnBhZGRpbmdbaV07cmV0dXJuIG8udW5pdCE9bi5ZR1VuaXQuVW5kZWZpbmVkJiZvLnVuaXQhPW4uWUdVbml0LkF1dG98fChvLnZhbHVlPXQuWUdVbmRlZmluZWQpLG99LHQuWUdOb2RlU3R5bGVTZXRNYXJnaW5BdXRvPWZ1bmN0aW9uKGUsdCl7aWYoZS5nZXRTdHlsZSgpLm1hcmdpblt0XS51bml0IT1uLllHVW5pdC5BdXRvKXt2YXIgaT1lLmdldFN0eWxlKCk7aS5tYXJnaW5bdF0udmFsdWU9MCxpLm1hcmdpblt0XS51bml0PW4uWUdVbml0LkF1dG8sZS5zZXRTdHlsZShpKSxlLm1hcmtEaXJ0eUFuZFByb3BvZ2F0ZSgpfX0sdC5ZR05vZGVTdHlsZVNldFdpZHRoPWZ1bmN0aW9uKGUsdCl7dmFyIGk9bmV3IGwuWUdWYWx1ZSh1LllHRmxvYXRTYW5pdGl6ZSh0KSxZKHQpP24uWUdVbml0LlVuZGVmaW5lZDpuLllHVW5pdC5Qb2ludCk7aWYoZS5nZXRTdHlsZSgpLmRpbWVuc2lvbnNbbi5ZR0RpbWVuc2lvbi5XaWR0aF0udmFsdWUhPWkudmFsdWUmJmkudW5pdCE9bi5ZR1VuaXQuVW5kZWZpbmVkfHxlLmdldFN0eWxlKCkuZGltZW5zaW9uc1tuLllHRGltZW5zaW9uLldpZHRoXS51bml0IT1pLnVuaXQpe3ZhciBvPWUuZ2V0U3R5bGUoKTtvLmRpbWVuc2lvbnNbbi5ZR0RpbWVuc2lvbi5XaWR0aF09aSxlLnNldFN0eWxlKG8pLGUubWFya0RpcnR5QW5kUHJvcG9nYXRlKCl9fSx0LllHTm9kZVN0eWxlU2V0V2lkdGhQZXJjZW50PWZ1bmN0aW9uKGUsdCl7aWYoZS5nZXRTdHlsZSgpLmRpbWVuc2lvbnNbbi5ZR0RpbWVuc2lvbi5XaWR0aF0udmFsdWUhPXUuWUdGbG9hdFNhbml0aXplKHQpfHxlLmdldFN0eWxlKCkuZGltZW5zaW9uc1tuLllHRGltZW5zaW9uLldpZHRoXS51bml0IT1uLllHVW5pdC5QZXJjZW50KXt2YXIgaT1lLmdldFN0eWxlKCk7aS5kaW1lbnNpb25zW24uWUdEaW1lbnNpb24uV2lkdGhdLnZhbHVlPXUuWUdGbG9hdFNhbml0aXplKHQpLGkuZGltZW5zaW9uc1tuLllHRGltZW5zaW9uLldpZHRoXS51bml0PVkodCk/bi5ZR1VuaXQuQXV0bzpuLllHVW5pdC5QZXJjZW50LGUuc2V0U3R5bGUoaSksZS5tYXJrRGlydHlBbmRQcm9wb2dhdGUoKX19LHQuWUdOb2RlU3R5bGVTZXRXaWR0aEF1dG89ZnVuY3Rpb24oZSl7aWYoZS5nZXRTdHlsZSgpLmRpbWVuc2lvbnNbbi5ZR0RpbWVuc2lvbi5XaWR0aF0udW5pdCE9bi5ZR1VuaXQuQXV0byl7dmFyIHQ9ZS5nZXRTdHlsZSgpO3QuZGltZW5zaW9uc1tuLllHRGltZW5zaW9uLldpZHRoXS52YWx1ZT0wLHQuZGltZW5zaW9uc1tuLllHRGltZW5zaW9uLldpZHRoXS51bml0PW4uWUdVbml0LkF1dG8sZS5zZXRTdHlsZSh0KSxlLm1hcmtEaXJ0eUFuZFByb3BvZ2F0ZSgpfX0sdC5ZR05vZGVTdHlsZUdldFdpZHRoPWZ1bmN0aW9uKGUpe3ZhciBpPWUuZ2V0U3R5bGUoKS5kaW1lbnNpb25zW24uWUdEaW1lbnNpb24uV2lkdGhdO3JldHVybiBpLnVuaXQhPW4uWUdVbml0LlVuZGVmaW5lZCYmaS51bml0IT1uLllHVW5pdC5BdXRvfHwoaS52YWx1ZT10LllHVW5kZWZpbmVkKSxpfSx0LllHTm9kZVN0eWxlU2V0SGVpZ2h0PWZ1bmN0aW9uKGUsdCl7dmFyIGk9bmV3IGwuWUdWYWx1ZSh1LllHRmxvYXRTYW5pdGl6ZSh0KSxZKHQpP24uWUdVbml0LlVuZGVmaW5lZDpuLllHVW5pdC5Qb2ludCk7aWYoZS5nZXRTdHlsZSgpLmRpbWVuc2lvbnNbbi5ZR0RpbWVuc2lvbi5IZWlnaHRdLnZhbHVlIT1pLnZhbHVlJiZpLnVuaXQhPW4uWUdVbml0LlVuZGVmaW5lZHx8ZS5nZXRTdHlsZSgpLmRpbWVuc2lvbnNbbi5ZR0RpbWVuc2lvbi5IZWlnaHRdLnVuaXQhPWkudW5pdCl7dmFyIG89ZS5nZXRTdHlsZSgpO28uZGltZW5zaW9uc1tuLllHRGltZW5zaW9uLkhlaWdodF09aSxlLnNldFN0eWxlKG8pLGUubWFya0RpcnR5QW5kUHJvcG9nYXRlKCl9fSx0LllHTm9kZVN0eWxlU2V0SGVpZ2h0UGVyY2VudD1mdW5jdGlvbihlLHQpe2lmKGUuZ2V0U3R5bGUoKS5kaW1lbnNpb25zW24uWUdEaW1lbnNpb24uSGVpZ2h0XS52YWx1ZSE9dS5ZR0Zsb2F0U2FuaXRpemUodCl8fGUuZ2V0U3R5bGUoKS5kaW1lbnNpb25zW24uWUdEaW1lbnNpb24uSGVpZ2h0XS51bml0IT1uLllHVW5pdC5QZXJjZW50KXt2YXIgaT1lLmdldFN0eWxlKCk7aS5kaW1lbnNpb25zW24uWUdEaW1lbnNpb24uSGVpZ2h0XS52YWx1ZT11LllHRmxvYXRTYW5pdGl6ZSh0KSxpLmRpbWVuc2lvbnNbbi5ZR0RpbWVuc2lvbi5IZWlnaHRdLnVuaXQ9WSh0KT9uLllHVW5pdC5BdXRvOm4uWUdVbml0LlBlcmNlbnQsZS5zZXRTdHlsZShpKSxlLm1hcmtEaXJ0eUFuZFByb3BvZ2F0ZSgpfX0sdC5ZR05vZGVTdHlsZVNldEhlaWdodEF1dG89ZnVuY3Rpb24oZSl7aWYoZS5nZXRTdHlsZSgpLmRpbWVuc2lvbnNbbi5ZR0RpbWVuc2lvbi5IZWlnaHRdLnVuaXQhPW4uWUdVbml0LkF1dG8pe3ZhciB0PWUuZ2V0U3R5bGUoKTt0LmRpbWVuc2lvbnNbbi5ZR0RpbWVuc2lvbi5IZWlnaHRdLnZhbHVlPTAsdC5kaW1lbnNpb25zW24uWUdEaW1lbnNpb24uSGVpZ2h0XS51bml0PW4uWUdVbml0LkF1dG8sZS5zZXRTdHlsZSh0KSxlLm1hcmtEaXJ0eUFuZFByb3BvZ2F0ZSgpfX0sdC5ZR05vZGVTdHlsZUdldEhlaWdodD1mdW5jdGlvbihlKXt2YXIgaT1lLmdldFN0eWxlKCkuZGltZW5zaW9uc1tuLllHRGltZW5zaW9uLkhlaWdodF07cmV0dXJuIGkudW5pdCE9bi5ZR1VuaXQuVW5kZWZpbmVkJiZpLnVuaXQhPW4uWUdVbml0LkF1dG98fChpLnZhbHVlPXQuWUdVbmRlZmluZWQpLGl9LHQuWUdOb2RlU3R5bGVTZXRNaW5XaWR0aD1mdW5jdGlvbihlLHQpe3ZhciBpPW5ldyBsLllHVmFsdWUodS5ZR0Zsb2F0U2FuaXRpemUodCksWSh0KT9uLllHVW5pdC5VbmRlZmluZWQ6bi5ZR1VuaXQuUG9pbnQpO2lmKGUuZ2V0U3R5bGUoKS5taW5EaW1lbnNpb25zW24uWUdEaW1lbnNpb24uV2lkdGhdLnZhbHVlIT1pLnZhbHVlJiZpLnVuaXQhPW4uWUdVbml0LlVuZGVmaW5lZHx8ZS5nZXRTdHlsZSgpLm1pbkRpbWVuc2lvbnNbbi5ZR0RpbWVuc2lvbi5XaWR0aF0udW5pdCE9aS51bml0KXt2YXIgbz1lLmdldFN0eWxlKCk7by5taW5EaW1lbnNpb25zW24uWUdEaW1lbnNpb24uV2lkdGhdPWksZS5zZXRTdHlsZShvKSxlLm1hcmtEaXJ0eUFuZFByb3BvZ2F0ZSgpfX0sdC5ZR05vZGVTdHlsZVNldE1pbldpZHRoUGVyY2VudD1mdW5jdGlvbihlLHQpe3ZhciBpPW5ldyBsLllHVmFsdWUodS5ZR0Zsb2F0U2FuaXRpemUodCksWSh0KT9uLllHVW5pdC5VbmRlZmluZWQ6bi5ZR1VuaXQuUGVyY2VudCk7aWYoZS5nZXRTdHlsZSgpLm1pbkRpbWVuc2lvbnNbbi5ZR0RpbWVuc2lvbi5XaWR0aF0udmFsdWUhPWkudmFsdWUmJmkudW5pdCE9bi5ZR1VuaXQuVW5kZWZpbmVkfHxlLmdldFN0eWxlKCkubWluRGltZW5zaW9uc1tuLllHRGltZW5zaW9uLldpZHRoXS51bml0IT1pLnVuaXQpe3ZhciBvPWUuZ2V0U3R5bGUoKTtvLm1pbkRpbWVuc2lvbnNbbi5ZR0RpbWVuc2lvbi5XaWR0aF09aSxlLnNldFN0eWxlKG8pLGUubWFya0RpcnR5QW5kUHJvcG9nYXRlKCl9fSx0LllHTm9kZVN0eWxlR2V0TWluV2lkdGg9ZnVuY3Rpb24oZSl7dmFyIGk9ZS5nZXRTdHlsZSgpLm1pbkRpbWVuc2lvbnNbbi5ZR0RpbWVuc2lvbi5XaWR0aF07cmV0dXJuIGkudW5pdCE9bi5ZR1VuaXQuVW5kZWZpbmVkJiZpLnVuaXQhPW4uWUdVbml0LkF1dG98fChpLnZhbHVlPXQuWUdVbmRlZmluZWQpLGl9LHQuWUdOb2RlU3R5bGVTZXRNaW5IZWlnaHQ9ZnVuY3Rpb24oZSx0KXt2YXIgaT1uZXcgbC5ZR1ZhbHVlKHUuWUdGbG9hdFNhbml0aXplKHQpLFkodCk/bi5ZR1VuaXQuVW5kZWZpbmVkOm4uWUdVbml0LlBvaW50KTtpZihlLmdldFN0eWxlKCkubWluRGltZW5zaW9uc1tuLllHRGltZW5zaW9uLkhlaWdodF0udmFsdWUhPWkudmFsdWUmJmkudW5pdCE9bi5ZR1VuaXQuVW5kZWZpbmVkfHxlLmdldFN0eWxlKCkubWluRGltZW5zaW9uc1tuLllHRGltZW5zaW9uLkhlaWdodF0udW5pdCE9aS51bml0KXt2YXIgbz1lLmdldFN0eWxlKCk7by5taW5EaW1lbnNpb25zW24uWUdEaW1lbnNpb24uSGVpZ2h0XT1pLGUuc2V0U3R5bGUobyksZS5tYXJrRGlydHlBbmRQcm9wb2dhdGUoKX19LHQuWUdOb2RlU3R5bGVTZXRNaW5IZWlnaHRQZXJjZW50PWZ1bmN0aW9uKGUsdCl7dmFyIGk9bmV3IGwuWUdWYWx1ZSh1LllHRmxvYXRTYW5pdGl6ZSh0KSxZKHQpP24uWUdVbml0LlVuZGVmaW5lZDpuLllHVW5pdC5QZXJjZW50KTtpZihlLmdldFN0eWxlKCkubWluRGltZW5zaW9uc1tuLllHRGltZW5zaW9uLkhlaWdodF0udmFsdWUhPWkudmFsdWUmJmkudW5pdCE9bi5ZR1VuaXQuVW5kZWZpbmVkfHxlLmdldFN0eWxlKCkubWluRGltZW5zaW9uc1tuLllHRGltZW5zaW9uLkhlaWdodF0udW5pdCE9aS51bml0KXt2YXIgbz1lLmdldFN0eWxlKCk7by5taW5EaW1lbnNpb25zW24uWUdEaW1lbnNpb24uSGVpZ2h0XT1pLGUuc2V0U3R5bGUobyksZS5tYXJrRGlydHlBbmRQcm9wb2dhdGUoKX19LHQuWUdOb2RlU3R5bGVHZXRNaW5IZWlnaHQ9ZnVuY3Rpb24oZSl7dmFyIGk9ZS5nZXRTdHlsZSgpLm1pbkRpbWVuc2lvbnNbbi5ZR0RpbWVuc2lvbi5IZWlnaHRdO3JldHVybiBpLnVuaXQhPW4uWUdVbml0LlVuZGVmaW5lZCYmaS51bml0IT1uLllHVW5pdC5BdXRvfHwoaS52YWx1ZT10LllHVW5kZWZpbmVkKSxpfSx0LllHTm9kZVN0eWxlU2V0TWF4V2lkdGg9ZnVuY3Rpb24oZSx0KXt2YXIgaT1uZXcgbC5ZR1ZhbHVlKHUuWUdGbG9hdFNhbml0aXplKHQpLFkodCk/bi5ZR1VuaXQuVW5kZWZpbmVkOm4uWUdVbml0LlBvaW50KTtpZihlLmdldFN0eWxlKCkubWF4RGltZW5zaW9uc1tuLllHRGltZW5zaW9uLldpZHRoXS52YWx1ZSE9aS52YWx1ZSYmaS51bml0IT1uLllHVW5pdC5VbmRlZmluZWR8fGUuZ2V0U3R5bGUoKS5tYXhEaW1lbnNpb25zW24uWUdEaW1lbnNpb24uV2lkdGhdLnVuaXQhPWkudW5pdCl7dmFyIG89ZS5nZXRTdHlsZSgpO28ubWF4RGltZW5zaW9uc1tuLllHRGltZW5zaW9uLldpZHRoXT1pLGUuc2V0U3R5bGUobyksZS5tYXJrRGlydHlBbmRQcm9wb2dhdGUoKX19LHQuWUdOb2RlU3R5bGVTZXRNYXhXaWR0aFBlcmNlbnQ9ZnVuY3Rpb24oZSx0KXt2YXIgaT1uZXcgbC5ZR1ZhbHVlKHUuWUdGbG9hdFNhbml0aXplKHQpLFkodCk/bi5ZR1VuaXQuVW5kZWZpbmVkOm4uWUdVbml0LlBlcmNlbnQpO2lmKGUuZ2V0U3R5bGUoKS5tYXhEaW1lbnNpb25zW24uWUdEaW1lbnNpb24uV2lkdGhdLnZhbHVlIT1pLnZhbHVlJiZpLnVuaXQhPW4uWUdVbml0LlVuZGVmaW5lZHx8ZS5nZXRTdHlsZSgpLm1heERpbWVuc2lvbnNbbi5ZR0RpbWVuc2lvbi5XaWR0aF0udW5pdCE9aS51bml0KXt2YXIgbz1lLmdldFN0eWxlKCk7by5tYXhEaW1lbnNpb25zW24uWUdEaW1lbnNpb24uV2lkdGhdPWksZS5zZXRTdHlsZShvKSxlLm1hcmtEaXJ0eUFuZFByb3BvZ2F0ZSgpfX0sdC5ZR05vZGVTdHlsZUdldE1heFdpZHRoPWZ1bmN0aW9uKGUpe3ZhciBpPWUuZ2V0U3R5bGUoKS5tYXhEaW1lbnNpb25zW24uWUdEaW1lbnNpb24uV2lkdGhdO3JldHVybiBpLnVuaXQhPW4uWUdVbml0LlVuZGVmaW5lZCYmaS51bml0IT1uLllHVW5pdC5BdXRvfHwoaS52YWx1ZT10LllHVW5kZWZpbmVkKSxpfSx0LllHTm9kZVN0eWxlU2V0TWF4SGVpZ2h0PWZ1bmN0aW9uKGUsdCl7dmFyIGk9bmV3IGwuWUdWYWx1ZSh1LllHRmxvYXRTYW5pdGl6ZSh0KSxZKHQpP24uWUdVbml0LlVuZGVmaW5lZDpuLllHVW5pdC5Qb2ludCk7aWYoZS5nZXRTdHlsZSgpLm1heERpbWVuc2lvbnNbbi5ZR0RpbWVuc2lvbi5IZWlnaHRdLnZhbHVlIT1pLnZhbHVlJiZpLnVuaXQhPW4uWUdVbml0LlVuZGVmaW5lZHx8ZS5nZXRTdHlsZSgpLm1heERpbWVuc2lvbnNbbi5ZR0RpbWVuc2lvbi5IZWlnaHRdLnVuaXQhPWkudW5pdCl7dmFyIG89ZS5nZXRTdHlsZSgpO28ubWF4RGltZW5zaW9uc1tuLllHRGltZW5zaW9uLkhlaWdodF09aSxlLnNldFN0eWxlKG8pLGUubWFya0RpcnR5QW5kUHJvcG9nYXRlKCl9fSx0LllHTm9kZVN0eWxlU2V0TWF4SGVpZ2h0UGVyY2VudD1mdW5jdGlvbihlLHQpe3ZhciBpPW5ldyBsLllHVmFsdWUodS5ZR0Zsb2F0U2FuaXRpemUodCksWSh0KT9uLllHVW5pdC5VbmRlZmluZWQ6bi5ZR1VuaXQuUGVyY2VudCk7aWYoZS5nZXRTdHlsZSgpLm1heERpbWVuc2lvbnNbbi5ZR0RpbWVuc2lvbi5IZWlnaHRdLnZhbHVlIT1pLnZhbHVlJiZpLnVuaXQhPW4uWUdVbml0LlVuZGVmaW5lZHx8ZS5nZXRTdHlsZSgpLm1heERpbWVuc2lvbnNbbi5ZR0RpbWVuc2lvbi5IZWlnaHRdLnVuaXQhPWkudW5pdCl7dmFyIG89ZS5nZXRTdHlsZSgpO28ubWF4RGltZW5zaW9uc1tuLllHRGltZW5zaW9uLkhlaWdodF09aSxlLnNldFN0eWxlKG8pLGUubWFya0RpcnR5QW5kUHJvcG9nYXRlKCl9fSx0LllHTm9kZVN0eWxlR2V0TWF4SGVpZ2h0PWZ1bmN0aW9uKGUpe3ZhciBpPWUuZ2V0U3R5bGUoKS5tYXhEaW1lbnNpb25zW24uWUdEaW1lbnNpb24uSGVpZ2h0XTtyZXR1cm4gaS51bml0IT1uLllHVW5pdC5VbmRlZmluZWQmJmkudW5pdCE9bi5ZR1VuaXQuQXV0b3x8KGkudmFsdWU9dC5ZR1VuZGVmaW5lZCksaX0sdC5ZR05vZGVMYXlvdXRHZXRMZWZ0PWZ1bmN0aW9uKGUpe3JldHVybiBlLmdldExheW91dCgpLnBvc2l0aW9uW24uWUdFZGdlLkxlZnRdfSx0LllHTm9kZUxheW91dEdldFRvcD1mdW5jdGlvbihlKXtyZXR1cm4gZS5nZXRMYXlvdXQoKS5wb3NpdGlvbltuLllHRWRnZS5Ub3BdfSx0LllHTm9kZUxheW91dEdldFJpZ2h0PWZ1bmN0aW9uKGUpe3JldHVybiBlLmdldExheW91dCgpLnBvc2l0aW9uW24uWUdFZGdlLlJpZ2h0XX0sdC5ZR05vZGVMYXlvdXRHZXRCb3R0b209ZnVuY3Rpb24oZSl7cmV0dXJuIGUuZ2V0TGF5b3V0KCkucG9zaXRpb25bbi5ZR0VkZ2UuQm90dG9tXX0sdC5ZR05vZGVMYXlvdXRHZXRXaWR0aD1mdW5jdGlvbihlKXtyZXR1cm4gZS5nZXRMYXlvdXQoKS5kaW1lbnNpb25zW24uWUdEaW1lbnNpb24uV2lkdGhdfSx0LllHTm9kZUxheW91dEdldEhlaWdodD1mdW5jdGlvbihlKXtyZXR1cm4gZS5nZXRMYXlvdXQoKS5kaW1lbnNpb25zW24uWUdEaW1lbnNpb24uSGVpZ2h0XX0sdC5ZR05vZGVMYXlvdXRHZXREaXJlY3Rpb249ZnVuY3Rpb24oZSl7cmV0dXJuIGUuZ2V0TGF5b3V0KCkuZGlyZWN0aW9ufSx0LllHTm9kZUxheW91dEdldEhhZE92ZXJmbG93PWZ1bmN0aW9uKGUpe3JldHVybiBlLmdldExheW91dCgpLmhhZE92ZXJmbG93fSx0LllHTm9kZUxheW91dEdldE1hcmdpbj1mdW5jdGlvbihlLHQpe3JldHVybiB2ZShlLHQ8PW4uWUdFZGdlLkVuZCxcIkNhbm5vdCBnZXQgbGF5b3V0IHByb3BlcnRpZXMgb2YgbXVsdGktZWRnZSBzaG9ydGhhbmRzXCIpLHQ9PW4uWUdFZGdlLkxlZnQ/ZS5nZXRMYXlvdXQoKS5kaXJlY3Rpb249PW4uWUdEaXJlY3Rpb24uUlRMP2UuZ2V0TGF5b3V0KCkubWFyZ2luW24uWUdFZGdlLkVuZF06ZS5nZXRMYXlvdXQoKS5tYXJnaW5bbi5ZR0VkZ2UuU3RhcnRdOnQ9PW4uWUdFZGdlLlJpZ2h0P2UuZ2V0TGF5b3V0KCkuZGlyZWN0aW9uPT1uLllHRGlyZWN0aW9uLlJUTD9lLmdldExheW91dCgpLm1hcmdpbltuLllHRWRnZS5TdGFydF06ZS5nZXRMYXlvdXQoKS5tYXJnaW5bbi5ZR0VkZ2UuRW5kXTplLmdldExheW91dCgpLm1hcmdpblt0XX0sdC5ZR05vZGVMYXlvdXRHZXRCb3JkZXI9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gdmUoZSx0PD1uLllHRWRnZS5FbmQsXCJDYW5ub3QgZ2V0IGxheW91dCBwcm9wZXJ0aWVzIG9mIG11bHRpLWVkZ2Ugc2hvcnRoYW5kc1wiKSx0PT1uLllHRWRnZS5MZWZ0P2UuZ2V0TGF5b3V0KCkuZGlyZWN0aW9uPT1uLllHRGlyZWN0aW9uLlJUTD9lLmdldExheW91dCgpLmJvcmRlcltuLllHRWRnZS5FbmRdOmUuZ2V0TGF5b3V0KCkuYm9yZGVyW24uWUdFZGdlLlN0YXJ0XTp0PT1uLllHRWRnZS5SaWdodD9lLmdldExheW91dCgpLmRpcmVjdGlvbj09bi5ZR0RpcmVjdGlvbi5SVEw/ZS5nZXRMYXlvdXQoKS5ib3JkZXJbbi5ZR0VkZ2UuU3RhcnRdOmUuZ2V0TGF5b3V0KCkuYm9yZGVyW24uWUdFZGdlLkVuZF06ZS5nZXRMYXlvdXQoKS5ib3JkZXJbdF19LHQuWUdOb2RlTGF5b3V0R2V0UGFkZGluZz1mdW5jdGlvbihlLHQpe3JldHVybiB2ZShlLHQ8PW4uWUdFZGdlLkVuZCxcIkNhbm5vdCBnZXQgbGF5b3V0IHByb3BlcnRpZXMgb2YgbXVsdGktZWRnZSBzaG9ydGhhbmRzXCIpLHQ9PW4uWUdFZGdlLkxlZnQ/ZS5nZXRMYXlvdXQoKS5kaXJlY3Rpb249PW4uWUdEaXJlY3Rpb24uUlRMP2UuZ2V0TGF5b3V0KCkucGFkZGluZ1tuLllHRWRnZS5FbmRdOmUuZ2V0TGF5b3V0KCkucGFkZGluZ1tuLllHRWRnZS5TdGFydF06dD09bi5ZR0VkZ2UuUmlnaHQ/ZS5nZXRMYXlvdXQoKS5kaXJlY3Rpb249PW4uWUdEaXJlY3Rpb24uUlRMP2UuZ2V0TGF5b3V0KCkucGFkZGluZ1tuLllHRWRnZS5TdGFydF06ZS5nZXRMYXlvdXQoKS5wYWRkaW5nW24uWUdFZGdlLkVuZF06ZS5nZXRMYXlvdXQoKS5wYWRkaW5nW3RdfSx0LllHTm9kZVN0eWxlU2V0RmxleD1mdW5jdGlvbihlLHQpe2lmKGUuZ2V0U3R5bGUoKS5mbGV4LmlzRGlmZlZhbHVlKHQpKXt2YXIgaT1lLmdldFN0eWxlKCk7WSh0KT9pLmZsZXg9bmV3IHMuWUdGbG9hdE9wdGlvbmFsOmkuZmxleD1uZXcgcy5ZR0Zsb2F0T3B0aW9uYWwodCksZS5zZXRTdHlsZShpKSxlLm1hcmtEaXJ0eUFuZFByb3BvZ2F0ZSgpfX0sdC5ZR05vZGVTdHlsZUdldEZsZXg9ZnVuY3Rpb24oZSl7cmV0dXJuIGUuZ2V0U3R5bGUoKS5mbGV4LmlzVW5kZWZpbmVkKCk/dC5ZR1VuZGVmaW5lZDplLmdldFN0eWxlKCkuZmxleC5nZXRWYWx1ZSgpfSx0LllHTm9kZVN0eWxlU2V0RmxleEdyb3c9ZnVuY3Rpb24oZSx0KXtpZihlLmdldFN0eWxlKCkuZmxleEdyb3cuaXNEaWZmVmFsdWUodCkpe3ZhciBpPWUuZ2V0U3R5bGUoKTtZKHQpP2kuZmxleEdyb3c9bmV3IHMuWUdGbG9hdE9wdGlvbmFsOmkuZmxleEdyb3c9bmV3IHMuWUdGbG9hdE9wdGlvbmFsKHQpLGUuc2V0U3R5bGUoaSksZS5tYXJrRGlydHlBbmRQcm9wb2dhdGUoKX19LHQuWUdOb2RlU3R5bGVTZXRGbGV4U2hyaW5rPWZ1bmN0aW9uKGUsdCl7aWYoZS5nZXRTdHlsZSgpLmZsZXhTaHJpbmsuaXNEaWZmVmFsdWUodCkpe3ZhciBpPWUuZ2V0U3R5bGUoKTtZKHQpP2kuZmxleFNocmluaz1uZXcgcy5ZR0Zsb2F0T3B0aW9uYWw6aS5mbGV4U2hyaW5rPW5ldyBzLllHRmxvYXRPcHRpb25hbCh0KSxlLnNldFN0eWxlKGkpLGUubWFya0RpcnR5QW5kUHJvcG9nYXRlKCl9fSx0LllHTm9kZVN0eWxlR2V0RmxleEJhc2lzPWZ1bmN0aW9uKGUpe3ZhciBpPWUuZ2V0U3R5bGUoKS5mbGV4QmFzaXM7cmV0dXJuIGkudW5pdCE9bi5ZR1VuaXQuVW5kZWZpbmVkJiZpLnVuaXQhPW4uWUdVbml0LkF1dG98fChpLnZhbHVlPXQuWUdVbmRlZmluZWQpLGl9LHQuWUdOb2RlU3R5bGVTZXRGbGV4QmFzaXM9ZnVuY3Rpb24oZSx0KXt2YXIgaT1uZXcgbC5ZR1ZhbHVlKHUuWUdGbG9hdFNhbml0aXplKHQpLFkodCk/bi5ZR1VuaXQuVW5kZWZpbmVkOm4uWUdVbml0LlBvaW50KTtpZihlLmdldFN0eWxlKCkuZmxleEJhc2lzLnZhbHVlIT1pLnZhbHVlJiZpLnVuaXQhPW4uWUdVbml0LlVuZGVmaW5lZHx8ZS5nZXRTdHlsZSgpLmZsZXhCYXNpcy51bml0IT1pLnVuaXQpe3ZhciBvPWUuZ2V0U3R5bGUoKTtvLmZsZXhCYXNpcz1pLGUuc2V0U3R5bGUobyksZS5tYXJrRGlydHlBbmRQcm9wb2dhdGUoKX19LHQuWUdOb2RlU3R5bGVTZXRGbGV4QmFzaXNQZXJjZW50PWZ1bmN0aW9uKGUsdCl7aWYoZS5nZXRTdHlsZSgpLmZsZXhCYXNpcy52YWx1ZSE9dHx8ZS5nZXRTdHlsZSgpLmZsZXhCYXNpcy51bml0IT1uLllHVW5pdC5QZXJjZW50KXt2YXIgaT1lLmdldFN0eWxlKCk7aS5mbGV4QmFzaXMudmFsdWU9dS5ZR0Zsb2F0U2FuaXRpemUodCksaS5mbGV4QmFzaXMudW5pdD1ZKHQpP24uWUdVbml0LkF1dG86bi5ZR1VuaXQuUGVyY2VudCxlLnNldFN0eWxlKGkpLGUubWFya0RpcnR5QW5kUHJvcG9nYXRlKCl9fSx0LllHTm9kZVN0eWxlU2V0RmxleEJhc2lzQXV0bz1mdW5jdGlvbihlKXtpZihlLmdldFN0eWxlKCkuZmxleEJhc2lzLnVuaXQhPW4uWUdVbml0LkF1dG8pe3ZhciB0PWUuZ2V0U3R5bGUoKTt0LmZsZXhCYXNpcy52YWx1ZT0wLHQuZmxleEJhc2lzLnVuaXQ9bi5ZR1VuaXQuQXV0byxlLnNldFN0eWxlKHQpLGUubWFya0RpcnR5QW5kUHJvcG9nYXRlKCl9fSx0LllHTm9kZVN0eWxlU2V0Qm9yZGVyPWZ1bmN0aW9uKGUsdCxpKXt2YXIgbz1uZXcgbC5ZR1ZhbHVlKHUuWUdGbG9hdFNhbml0aXplKGkpLFkoaSk/bi5ZR1VuaXQuVW5kZWZpbmVkOm4uWUdVbml0LlBvaW50KTtpZihlLmdldFN0eWxlKCkuYm9yZGVyW3RdLnZhbHVlIT1vLnZhbHVlJiZvLnVuaXQhPW4uWUdVbml0LlVuZGVmaW5lZHx8ZS5nZXRTdHlsZSgpLmJvcmRlclt0XS51bml0IT1vLnVuaXQpe3ZhciByPWUuZ2V0U3R5bGUoKTtyLmJvcmRlclt0XT1vLGUuc2V0U3R5bGUociksZS5tYXJrRGlydHlBbmRQcm9wb2dhdGUoKX19LHQuWUdOb2RlU3R5bGVHZXRCb3JkZXI9ZnVuY3Rpb24oZSxpKXtyZXR1cm4gZS5nZXRTdHlsZSgpLmJvcmRlcltpXS51bml0PT1uLllHVW5pdC5VbmRlZmluZWR8fGUuZ2V0U3R5bGUoKS5ib3JkZXJbaV0udW5pdD09bi5ZR1VuaXQuQXV0bz90LllHVW5kZWZpbmVkOmUuZ2V0U3R5bGUoKS5ib3JkZXJbaV0udmFsdWV9LHQuWUdOb2RlU3R5bGVHZXRBc3BlY3RSYXRpbz1mdW5jdGlvbihlKXt2YXIgaT1lLmdldFN0eWxlKCkuYXNwZWN0UmF0aW87cmV0dXJuIGkuaXNVbmRlZmluZWQoKT90LllHVW5kZWZpbmVkOmkuZ2V0VmFsdWUoKX0sdC5ZR05vZGVTdHlsZVNldEFzcGVjdFJhdGlvPWZ1bmN0aW9uKGUsdCl7aWYoZS5nZXRTdHlsZSgpLmFzcGVjdFJhdGlvLmlzRGlmZlZhbHVlKHQpKXt2YXIgaT1lLmdldFN0eWxlKCk7aS5hc3BlY3RSYXRpbz1uZXcgcy5ZR0Zsb2F0T3B0aW9uYWwodCksZS5zZXRTdHlsZShpKSxlLm1hcmtEaXJ0eUFuZFByb3BvZ2F0ZSgpfX0sdC5ZR05vZGVMYXlvdXRHZXREaWRMZWdhY3lTdHJldGNoRmxhZ0FmZmVjdExheW91dD1mdW5jdGlvbihlKXtyZXR1cm4gZS5nZXRMYXlvdXQoKS5kb2VzTGVnYWN5U3RyZXRjaEZsYWdBZmZlY3RzTGF5b3V0fTt2YXIgQz0wO2Z1bmN0aW9uIEEoZSx0KXt9ZnVuY3Rpb24gTihlLHQpe31mdW5jdGlvbiBfKGUsdCxpKXtyZXR1cm4gdS5ZR1Vud3JhcEZsb2F0T3B0aW9uYWwoZS5nZXRMZWFkaW5nUGFkZGluZ0FuZEJvcmRlcih0LGkpLmFkZChlLmdldFRyYWlsaW5nUGFkZGluZ0FuZEJvcmRlcih0LGkpKSl9ZnVuY3Rpb24gUChlLHQpe3ZhciBpPXQuZ2V0U3R5bGUoKS5hbGlnblNlbGY9PW4uWUdBbGlnbi5BdXRvP2UuZ2V0U3R5bGUoKS5hbGlnbkl0ZW1zOnQuZ2V0U3R5bGUoKS5hbGlnblNlbGY7cmV0dXJuIGk9PW4uWUdBbGlnbi5CYXNlbGluZSYmdS5ZR0ZsZXhEaXJlY3Rpb25Jc0NvbHVtbihlLmdldFN0eWxlKCkuZmxleERpcmVjdGlvbik/bi5ZR0FsaWduLkZsZXhTdGFydDppfWZ1bmN0aW9uIFIoZSl7aWYobnVsbCE9ZS5nZXRCYXNlbGluZSgpKXt2YXIgdD1lLmdldEJhc2VsaW5lKCkoZSxlLmdldExheW91dCgpLm1lYXN1cmVkRGltZW5zaW9uc1tuLllHRGltZW5zaW9uLldpZHRoXSxlLmdldExheW91dCgpLm1lYXN1cmVkRGltZW5zaW9uc1tuLllHRGltZW5zaW9uLkhlaWdodF0pO3JldHVybiB2ZShlLCFZKHQpLFwiRXhwZWN0IGN1c3RvbSBiYXNlbGluZSBmdW5jdGlvbiB0byBub3QgcmV0dXJuIE5hTlwiKSx0fWZvcih2YXIgaT1udWxsLG89RShlKSxyPTA7cjxvO3IrKyl7dmFyIGE9VShlLHIpO2lmKGEuZ2V0TGluZUluZGV4KCk+MClicmVhaztpZihhLmdldFN0eWxlKCkucG9zaXRpb25UeXBlIT1uLllHUG9zaXRpb25UeXBlLkFic29sdXRlKXtpZihQKGUsYSk9PW4uWUdBbGlnbi5CYXNlbGluZSl7aT1hO2JyZWFrfW51bGw9PWkmJihpPWEpfX1yZXR1cm4gbnVsbD09aT9lLmdldExheW91dCgpLm1lYXN1cmVkRGltZW5zaW9uc1tuLllHRGltZW5zaW9uLkhlaWdodF06UihpKStpLmdldExheW91dCgpLnBvc2l0aW9uW24uWUdFZGdlLlRvcF19ZnVuY3Rpb24gTyhlKXtpZih1LllHRmxleERpcmVjdGlvbklzQ29sdW1uKGUuZ2V0U3R5bGUoKS5mbGV4RGlyZWN0aW9uKSlyZXR1cm4hMTtpZihlLmdldFN0eWxlKCkuYWxpZ25JdGVtcz09bi5ZR0FsaWduLkJhc2VsaW5lKXJldHVybiEwO2Zvcih2YXIgdD1FKGUpLGk9MDtpPHQ7aSsrKXt2YXIgbz1VKGUsaSk7aWYoby5nZXRTdHlsZSgpLnBvc2l0aW9uVHlwZT09bi5ZR1Bvc2l0aW9uVHlwZS5SZWxhdGl2ZSYmby5nZXRTdHlsZSgpLmFsaWduU2VsZj09bi5ZR0FsaWduLkJhc2VsaW5lKXJldHVybiEwfXJldHVybiExfWZ1bmN0aW9uIFQoZSx0LGkpe3JldHVybiBlLmdldExheW91dCgpLm1lYXN1cmVkRGltZW5zaW9uc1tkLmRpbVt0XV0rdS5ZR1Vud3JhcEZsb2F0T3B0aW9uYWwoZS5nZXRMZWFkaW5nTWFyZ2luKHQsaSkuYWRkKGUuZ2V0VHJhaWxpbmdNYXJnaW4odCxpKSkpfWZ1bmN0aW9uIFYoZSx0LGkpe3ZhciBvPVkoZS5nZXRSZXNvbHZlZERpbWVuc2lvbihkLmRpbVt0XSkudmFsdWUpO3JldHVybiEoZS5nZXRSZXNvbHZlZERpbWVuc2lvbihkLmRpbVt0XSkudW5pdD09bi5ZR1VuaXQuQXV0b3x8ZS5nZXRSZXNvbHZlZERpbWVuc2lvbihkLmRpbVt0XSkudW5pdD09bi5ZR1VuaXQuVW5kZWZpbmVkfHxlLmdldFJlc29sdmVkRGltZW5zaW9uKGQuZGltW3RdKS51bml0PT1uLllHVW5pdC5Qb2ludCYmIW8mJmUuZ2V0UmVzb2x2ZWREaW1lbnNpb24oZC5kaW1bdF0pLnZhbHVlPDB8fGUuZ2V0UmVzb2x2ZWREaW1lbnNpb24oZC5kaW1bdF0pLnVuaXQ9PW4uWUdVbml0LlBlcmNlbnQmJiFvJiYoZS5nZXRSZXNvbHZlZERpbWVuc2lvbihkLmRpbVt0XSkudmFsdWU8MHx8WShpKSkpfWZ1bmN0aW9uIFcoZSx0KXt2YXIgaT1lLmdldExheW91dCgpLm1lYXN1cmVkRGltZW5zaW9uc1tkLmRpbVt0XV07cmV0dXJuIVkoaSkmJmk+PTB9ZnVuY3Rpb24gSShlLHQsaSxvKXt2YXIgcixhO3JldHVybiB1LllHRmxleERpcmVjdGlvbklzQ29sdW1uKHQpPyhyPXUuWUdSZXNvbHZlVmFsdWUoZS5nZXRTdHlsZSgpLm1pbkRpbWVuc2lvbnNbbi5ZR0RpbWVuc2lvbi5IZWlnaHRdLG8pLGE9dS5ZR1Jlc29sdmVWYWx1ZShlLmdldFN0eWxlKCkubWF4RGltZW5zaW9uc1tuLllHRGltZW5zaW9uLkhlaWdodF0sbykpOnUuWUdGbGV4RGlyZWN0aW9uSXNSb3codCkmJihyPXUuWUdSZXNvbHZlVmFsdWUoZS5nZXRTdHlsZSgpLm1pbkRpbWVuc2lvbnNbbi5ZR0RpbWVuc2lvbi5XaWR0aF0sbyksYT11LllHUmVzb2x2ZVZhbHVlKGUuZ2V0U3R5bGUoKS5tYXhEaW1lbnNpb25zW24uWUdEaW1lbnNpb24uV2lkdGhdLG8pKSwhYS5pc1VuZGVmaW5lZCgpJiZhLmdldFZhbHVlKCk+PTAmJmk+YS5nZXRWYWx1ZSgpP2E6IXIuaXNVbmRlZmluZWQoKSYmci5nZXRWYWx1ZSgpPj0wJiZpPHIuZ2V0VmFsdWUoKT9yOm5ldyBzLllHRmxvYXRPcHRpb25hbChpKX1mdW5jdGlvbiBiKGUsdCxpLG4sbyl7cmV0dXJuIHUuWUdGbG9hdE1heCh1LllHVW53cmFwRmxvYXRPcHRpb25hbChJKGUsdCxpLG4pKSxfKGUsdCxvKSl9ZnVuY3Rpb24gQihlLHQsaSl7dmFyIG49dC5nZXRMYXlvdXQoKS5tZWFzdXJlZERpbWVuc2lvbnNbZC5kaW1baV1dO3Quc2V0TGF5b3V0UG9zaXRpb24oZS5nZXRMYXlvdXQoKS5tZWFzdXJlZERpbWVuc2lvbnNbZC5kaW1baV1dLW4tdC5nZXRMYXlvdXQoKS5wb3NpdGlvbltkLnBvc1tpXV0sZC50cmFpbGluZ1tpXSl9ZnVuY3Rpb24gSChlLHQsaSxvLHIsYSl7dmFyIHM9dS5ZR1Jlc29sdmVWYWx1ZShlLmdldFN0eWxlKCkubWF4RGltZW5zaW9uc1tkLmRpbVt0XV0saSkuYWRkKGUuZ2V0TWFyZ2luRm9yQXhpcyh0LG8pKTtzd2l0Y2goci52YWx1ZSl7Y2FzZSBuLllHTWVhc3VyZU1vZGUuRXhhY3RseTpjYXNlIG4uWUdNZWFzdXJlTW9kZS5BdE1vc3Q6YS52YWx1ZT1zLmlzVW5kZWZpbmVkKCl8fGEudmFsdWU8cy5nZXRWYWx1ZSgpP2EudmFsdWU6cy5nZXRWYWx1ZSgpO2JyZWFrO2Nhc2Ugbi5ZR01lYXN1cmVNb2RlLlVuZGVmaW5lZDpzLmlzVW5kZWZpbmVkKCl8fChyLnZhbHVlPW4uWUdNZWFzdXJlTW9kZS5BdE1vc3QsYS52YWx1ZT1zLmdldFZhbHVlKCkpfX1mdW5jdGlvbiBrKGUsaSxvLHIsYSxsLGcsRyxjLGYpe3ZhciB5LGgscCxtLFM9dS5ZR1Jlc29sdmVGbGV4RGlyZWN0aW9uKGUuZ2V0U3R5bGUoKS5mbGV4RGlyZWN0aW9uLGMpLEY9dS5ZR0ZsZXhEaXJlY3Rpb25Jc1JvdyhTKSx2PUY/bzphLEQ9Rj9sOmcseD11LllHUmVzb2x2ZVZhbHVlKGkucmVzb2x2ZUZsZXhCYXNpc1B0cigpLEQpLE09VihpLG4uWUdGbGV4RGlyZWN0aW9uLlJvdyxsKSxMPVYoaSxuLllHRmxleERpcmVjdGlvbi5Db2x1bW4sZyk7aWYoeC5pc1VuZGVmaW5lZCgpfHxZKHYpKWlmKEYmJk0pe2I9bmV3IHMuWUdGbG9hdE9wdGlvbmFsKF8oaSxuLllHRmxleERpcmVjdGlvbi5Sb3csbCkpO2kuc2V0TGF5b3V0Q29tcHV0ZWRGbGV4QmFzaXModS5ZR0Zsb2F0T3B0aW9uYWxNYXgodS5ZR1Jlc29sdmVWYWx1ZShpLmdldFJlc29sdmVkRGltZW5zaW9uKG4uWUdEaW1lbnNpb24uV2lkdGgpLGwpLGIpKX1lbHNlIGlmKCFGJiZMKXtiPW5ldyBzLllHRmxvYXRPcHRpb25hbChfKGksbi5ZR0ZsZXhEaXJlY3Rpb24uQ29sdW1uLGwpKTtpLnNldExheW91dENvbXB1dGVkRmxleEJhc2lzKHUuWUdGbG9hdE9wdGlvbmFsTWF4KHUuWUdSZXNvbHZlVmFsdWUoaS5nZXRSZXNvbHZlZERpbWVuc2lvbihuLllHRGltZW5zaW9uLkhlaWdodCksZyksYikpfWVsc2V7eT10LllHVW5kZWZpbmVkLGg9dC5ZR1VuZGVmaW5lZCxwPW4uWUdNZWFzdXJlTW9kZS5VbmRlZmluZWQsbT1uLllHTWVhc3VyZU1vZGUuVW5kZWZpbmVkO3ZhciB3PXUuWUdVbndyYXBGbG9hdE9wdGlvbmFsKGkuZ2V0TWFyZ2luRm9yQXhpcyhuLllHRmxleERpcmVjdGlvbi5Sb3csbCkpLFU9dS5ZR1Vud3JhcEZsb2F0T3B0aW9uYWwoaS5nZXRNYXJnaW5Gb3JBeGlzKG4uWUdGbGV4RGlyZWN0aW9uLkNvbHVtbixsKSk7TSYmKHk9dS5ZR1Vud3JhcEZsb2F0T3B0aW9uYWwodS5ZR1Jlc29sdmVWYWx1ZShpLmdldFJlc29sdmVkRGltZW5zaW9uKG4uWUdEaW1lbnNpb24uV2lkdGgpLGwpKSt3LHA9bi5ZR01lYXN1cmVNb2RlLkV4YWN0bHkpLEwmJihoPXUuWUdVbndyYXBGbG9hdE9wdGlvbmFsKHUuWUdSZXNvbHZlVmFsdWUoaS5nZXRSZXNvbHZlZERpbWVuc2lvbihuLllHRGltZW5zaW9uLkhlaWdodCksZykpK1UsbT1uLllHTWVhc3VyZU1vZGUuRXhhY3RseSksKCFGJiZlLmdldFN0eWxlKCkub3ZlcmZsb3c9PW4uWUdPdmVyZmxvdy5TY3JvbGx8fGUuZ2V0U3R5bGUoKS5vdmVyZmxvdyE9bi5ZR092ZXJmbG93LlNjcm9sbCkmJlkoeSkmJiFZKG8pJiYoeT1vLHA9bi5ZR01lYXN1cmVNb2RlLkF0TW9zdCksKEYmJmUuZ2V0U3R5bGUoKS5vdmVyZmxvdz09bi5ZR092ZXJmbG93LlNjcm9sbHx8ZS5nZXRTdHlsZSgpLm92ZXJmbG93IT1uLllHT3ZlcmZsb3cuU2Nyb2xsKSYmWShoKSYmIVkoYSkmJihoPWEsbT1uLllHTWVhc3VyZU1vZGUuQXRNb3N0KSxpLmdldFN0eWxlKCkuYXNwZWN0UmF0aW8uaXNVbmRlZmluZWQoKXx8KEZ8fHAhPW4uWUdNZWFzdXJlTW9kZS5FeGFjdGx5P0YmJm09PW4uWUdNZWFzdXJlTW9kZS5FeGFjdGx5JiYoeT13KyhoLVUpKmkuZ2V0U3R5bGUoKS5hc3BlY3RSYXRpby5nZXRWYWx1ZSgpLHA9bi5ZR01lYXN1cmVNb2RlLkV4YWN0bHkpOihoPVUrKHktdykvaS5nZXRTdHlsZSgpLmFzcGVjdFJhdGlvLmdldFZhbHVlKCksbT1uLllHTWVhc3VyZU1vZGUuRXhhY3RseSkpO3ZhciBFPSFZKG8pJiZyPT1uLllHTWVhc3VyZU1vZGUuRXhhY3RseSxBPVAoZSxpKT09bi5ZR0FsaWduLlN0cmV0Y2gmJnAhPW4uWUdNZWFzdXJlTW9kZS5FeGFjdGx5OyFGJiYhTSYmRSYmQSYmKHk9byxwPW4uWUdNZWFzdXJlTW9kZS5FeGFjdGx5LGkuZ2V0U3R5bGUoKS5hc3BlY3RSYXRpby5pc1VuZGVmaW5lZCgpfHwoaD0oeS13KS9pLmdldFN0eWxlKCkuYXNwZWN0UmF0aW8uZ2V0VmFsdWUoKSxtPW4uWUdNZWFzdXJlTW9kZS5FeGFjdGx5KSk7dmFyIE49IVkoYSkmJkc9PW4uWUdNZWFzdXJlTW9kZS5FeGFjdGx5LFI9UChlLGkpPT1uLllHQWxpZ24uU3RyZXRjaCYmbSE9bi5ZR01lYXN1cmVNb2RlLkV4YWN0bHk7RiYmIUwmJk4mJlImJihoPWEsbT1uLllHTWVhc3VyZU1vZGUuRXhhY3RseSxpLmdldFN0eWxlKCkuYXNwZWN0UmF0aW8uaXNVbmRlZmluZWQoKXx8KHk9KGgtVSkqaS5nZXRTdHlsZSgpLmFzcGVjdFJhdGlvLmdldFZhbHVlKCkscD1uLllHTWVhc3VyZU1vZGUuRXhhY3RseSkpO3ZhciBPPXt2YWx1ZTpwfSxUPXt2YWx1ZTp5fSxXPXt2YWx1ZTptfSxJPXt2YWx1ZTpofTtIKGksbi5ZR0ZsZXhEaXJlY3Rpb24uUm93LGwsbCxPLFQpLEgoaSxuLllHRmxleERpcmVjdGlvbi5Db2x1bW4sZyxsLFcsSSkseWUoaSxULnZhbHVlLEkudmFsdWUsYyxPLnZhbHVlLFcudmFsdWUsbCxnLCExLFwibWVhc3VyZVwiLGYpLGkuc2V0TGF5b3V0Q29tcHV0ZWRGbGV4QmFzaXMobmV3IHMuWUdGbG9hdE9wdGlvbmFsKHUuWUdGbG9hdE1heChpLmdldExheW91dCgpLm1lYXN1cmVkRGltZW5zaW9uc1tkLmRpbVtTXV0sXyhpLFMsbCkpKSl9ZWxzZSBpZihpLmdldExheW91dCgpLmNvbXB1dGVkRmxleEJhc2lzLmlzVW5kZWZpbmVkKCl8fHhlKGkuZ2V0Q29uZmlnKCksbi5ZR0V4cGVyaW1lbnRhbEZlYXR1cmUuV2ViRmxleEJhc2lzKSYmaS5nZXRMYXlvdXQoKS5jb21wdXRlZEZsZXhCYXNpc0dlbmVyYXRpb24hPUMpe3ZhciBiPW5ldyBzLllHRmxvYXRPcHRpb25hbChfKGksUyxsKSk7aS5zZXRMYXlvdXRDb21wdXRlZEZsZXhCYXNpcyh1LllHRmxvYXRPcHRpb25hbE1heCh4LGIpKX1pLnNldExheW91dENvbXB1dGVkRmxleEJhc2lzR2VuZXJhdGlvbihDKX1mdW5jdGlvbiBxKGUsaSxvLHIsYSxzLGwpe3ZhciBnPXUuWUdSZXNvbHZlRmxleERpcmVjdGlvbihlLmdldFN0eWxlKCkuZmxleERpcmVjdGlvbixzKSxHPXUuWUdGbGV4RGlyZWN0aW9uQ3Jvc3MoZyxzKSxjPXUuWUdGbGV4RGlyZWN0aW9uSXNSb3coZyksZj10LllHVW5kZWZpbmVkLHk9dC5ZR1VuZGVmaW5lZCxoPW4uWUdNZWFzdXJlTW9kZS5VbmRlZmluZWQscD1uLllHTWVhc3VyZU1vZGUuVW5kZWZpbmVkLG09dS5ZR1Vud3JhcEZsb2F0T3B0aW9uYWwoaS5nZXRNYXJnaW5Gb3JBeGlzKG4uWUdGbGV4RGlyZWN0aW9uLlJvdyxvKSksUz11LllHVW53cmFwRmxvYXRPcHRpb25hbChpLmdldE1hcmdpbkZvckF4aXMobi5ZR0ZsZXhEaXJlY3Rpb24uQ29sdW1uLG8pKTtWKGksbi5ZR0ZsZXhEaXJlY3Rpb24uUm93LG8pP2Y9dS5ZR1Vud3JhcEZsb2F0T3B0aW9uYWwodS5ZR1Jlc29sdmVWYWx1ZShpLmdldFJlc29sdmVkRGltZW5zaW9uKG4uWUdEaW1lbnNpb24uV2lkdGgpLG8pKSttOmkuaXNMZWFkaW5nUG9zaXRpb25EZWZpbmVkKG4uWUdGbGV4RGlyZWN0aW9uLlJvdykmJmkuaXNUcmFpbGluZ1Bvc0RlZmluZWQobi5ZR0ZsZXhEaXJlY3Rpb24uUm93KSYmKGY9ZS5nZXRMYXlvdXQoKS5tZWFzdXJlZERpbWVuc2lvbnNbbi5ZR0RpbWVuc2lvbi5XaWR0aF0tKGUuZ2V0TGVhZGluZ0JvcmRlcihuLllHRmxleERpcmVjdGlvbi5Sb3cpK2UuZ2V0VHJhaWxpbmdCb3JkZXIobi5ZR0ZsZXhEaXJlY3Rpb24uUm93KSktdS5ZR1Vud3JhcEZsb2F0T3B0aW9uYWwoaS5nZXRMZWFkaW5nUG9zaXRpb24obi5ZR0ZsZXhEaXJlY3Rpb24uUm93LG8pLmFkZChpLmdldFRyYWlsaW5nUG9zaXRpb24obi5ZR0ZsZXhEaXJlY3Rpb24uUm93LG8pKSksZj1iKGksbi5ZR0ZsZXhEaXJlY3Rpb24uUm93LGYsbyxvKSksVihpLG4uWUdGbGV4RGlyZWN0aW9uLkNvbHVtbixhKT95PXUuWUdVbndyYXBGbG9hdE9wdGlvbmFsKHUuWUdSZXNvbHZlVmFsdWUoaS5nZXRSZXNvbHZlZERpbWVuc2lvbihuLllHRGltZW5zaW9uLkhlaWdodCksYSkpK1M6aS5pc0xlYWRpbmdQb3NpdGlvbkRlZmluZWQobi5ZR0ZsZXhEaXJlY3Rpb24uQ29sdW1uKSYmaS5pc1RyYWlsaW5nUG9zRGVmaW5lZChuLllHRmxleERpcmVjdGlvbi5Db2x1bW4pJiYoeT1lLmdldExheW91dCgpLm1lYXN1cmVkRGltZW5zaW9uc1tuLllHRGltZW5zaW9uLkhlaWdodF0tKGUuZ2V0TGVhZGluZ0JvcmRlcihuLllHRmxleERpcmVjdGlvbi5Db2x1bW4pK2UuZ2V0VHJhaWxpbmdCb3JkZXIobi5ZR0ZsZXhEaXJlY3Rpb24uQ29sdW1uKSktdS5ZR1Vud3JhcEZsb2F0T3B0aW9uYWwoaS5nZXRMZWFkaW5nUG9zaXRpb24obi5ZR0ZsZXhEaXJlY3Rpb24uQ29sdW1uLGEpLmFkZChpLmdldFRyYWlsaW5nUG9zaXRpb24obi5ZR0ZsZXhEaXJlY3Rpb24uQ29sdW1uLGEpKSkseT1iKGksbi5ZR0ZsZXhEaXJlY3Rpb24uQ29sdW1uLHksYSxvKSksKFkoZik/IVkoeSk6WSh5KSkmJihpLmdldFN0eWxlKCkuYXNwZWN0UmF0aW8uaXNVbmRlZmluZWQoKXx8KFkoZik/Zj1tKyh5LVMpKmkuZ2V0U3R5bGUoKS5hc3BlY3RSYXRpby5nZXRWYWx1ZSgpOlkoeSkmJih5PVMrKGYtbSkvaS5nZXRTdHlsZSgpLmFzcGVjdFJhdGlvLmdldFZhbHVlKCkpKSksKFkoZil8fFkoeSkpJiYoaD1ZKGYpP24uWUdNZWFzdXJlTW9kZS5VbmRlZmluZWQ6bi5ZR01lYXN1cmVNb2RlLkV4YWN0bHkscD1ZKHkpP24uWUdNZWFzdXJlTW9kZS5VbmRlZmluZWQ6bi5ZR01lYXN1cmVNb2RlLkV4YWN0bHksIWMmJlkoZikmJnIhPW4uWUdNZWFzdXJlTW9kZS5VbmRlZmluZWQmJiFZKG8pJiZvPjAmJihmPW8saD1uLllHTWVhc3VyZU1vZGUuQXRNb3N0KSx5ZShpLGYseSxzLGgscCxmLHksITEsXCJhYnMtbWVhc3VyZVwiLGwpLGY9aS5nZXRMYXlvdXQoKS5tZWFzdXJlZERpbWVuc2lvbnNbbi5ZR0RpbWVuc2lvbi5XaWR0aF0rdS5ZR1Vud3JhcEZsb2F0T3B0aW9uYWwoaS5nZXRNYXJnaW5Gb3JBeGlzKG4uWUdGbGV4RGlyZWN0aW9uLlJvdyxvKSkseT1pLmdldExheW91dCgpLm1lYXN1cmVkRGltZW5zaW9uc1tuLllHRGltZW5zaW9uLkhlaWdodF0rdS5ZR1Vud3JhcEZsb2F0T3B0aW9uYWwoaS5nZXRNYXJnaW5Gb3JBeGlzKG4uWUdGbGV4RGlyZWN0aW9uLkNvbHVtbixvKSkpLHllKGksZix5LHMsbi5ZR01lYXN1cmVNb2RlLkV4YWN0bHksbi5ZR01lYXN1cmVNb2RlLkV4YWN0bHksZix5LCEwLFwiYWJzLWxheW91dFwiLGwpLGkuaXNUcmFpbGluZ1Bvc0RlZmluZWQoZykmJiFpLmlzTGVhZGluZ1Bvc2l0aW9uRGVmaW5lZChnKT9pLnNldExheW91dFBvc2l0aW9uKGUuZ2V0TGF5b3V0KCkubWVhc3VyZWREaW1lbnNpb25zW2QuZGltW2ddXS1pLmdldExheW91dCgpLm1lYXN1cmVkRGltZW5zaW9uc1tkLmRpbVtnXV0tZS5nZXRUcmFpbGluZ0JvcmRlcihnKS11LllHVW53cmFwRmxvYXRPcHRpb25hbChpLmdldFRyYWlsaW5nTWFyZ2luKGcsbykpLXUuWUdVbndyYXBGbG9hdE9wdGlvbmFsKGkuZ2V0VHJhaWxpbmdQb3NpdGlvbihnLGM/bzphKSksZC5sZWFkaW5nW2ddKTppLmlzTGVhZGluZ1Bvc2l0aW9uRGVmaW5lZChnKXx8ZS5nZXRTdHlsZSgpLmp1c3RpZnlDb250ZW50IT1uLllHSnVzdGlmeS5DZW50ZXI/aS5pc0xlYWRpbmdQb3NpdGlvbkRlZmluZWQoZyl8fGUuZ2V0U3R5bGUoKS5qdXN0aWZ5Q29udGVudCE9bi5ZR0p1c3RpZnkuRmxleEVuZHx8aS5zZXRMYXlvdXRQb3NpdGlvbihlLmdldExheW91dCgpLm1lYXN1cmVkRGltZW5zaW9uc1tkLmRpbVtnXV0taS5nZXRMYXlvdXQoKS5tZWFzdXJlZERpbWVuc2lvbnNbZC5kaW1bZ11dLGQubGVhZGluZ1tnXSk6aS5zZXRMYXlvdXRQb3NpdGlvbigoZS5nZXRMYXlvdXQoKS5tZWFzdXJlZERpbWVuc2lvbnNbZC5kaW1bZ11dLWkuZ2V0TGF5b3V0KCkubWVhc3VyZWREaW1lbnNpb25zW2QuZGltW2ddXSkvMixkLmxlYWRpbmdbZ10pLGkuaXNUcmFpbGluZ1Bvc0RlZmluZWQoRykmJiFpLmlzTGVhZGluZ1Bvc2l0aW9uRGVmaW5lZChHKT9pLnNldExheW91dFBvc2l0aW9uKGUuZ2V0TGF5b3V0KCkubWVhc3VyZWREaW1lbnNpb25zW2QuZGltW0ddXS1pLmdldExheW91dCgpLm1lYXN1cmVkRGltZW5zaW9uc1tkLmRpbVtHXV0tZS5nZXRUcmFpbGluZ0JvcmRlcihHKS11LllHVW53cmFwRmxvYXRPcHRpb25hbChpLmdldFRyYWlsaW5nTWFyZ2luKEcsbykpLXUuWUdVbndyYXBGbG9hdE9wdGlvbmFsKGkuZ2V0VHJhaWxpbmdQb3NpdGlvbihHLGM/YTpvKSksZC5sZWFkaW5nW0ddKTppLmlzTGVhZGluZ1Bvc2l0aW9uRGVmaW5lZChHKXx8UChlLGkpIT1uLllHQWxpZ24uQ2VudGVyP2kuaXNMZWFkaW5nUG9zaXRpb25EZWZpbmVkKEcpfHwoUChlLGkpPT1uLllHQWxpZ24uRmxleEVuZD9lLmdldFN0eWxlKCkuZmxleFdyYXA9PW4uWUdXcmFwLldyYXBSZXZlcnNlOmUuZ2V0U3R5bGUoKS5mbGV4V3JhcCE9bi5ZR1dyYXAuV3JhcFJldmVyc2UpfHxpLnNldExheW91dFBvc2l0aW9uKGUuZ2V0TGF5b3V0KCkubWVhc3VyZWREaW1lbnNpb25zW2QuZGltW0ddXS1pLmdldExheW91dCgpLm1lYXN1cmVkRGltZW5zaW9uc1tkLmRpbVtHXV0sZC5sZWFkaW5nW0ddKTppLnNldExheW91dFBvc2l0aW9uKChlLmdldExheW91dCgpLm1lYXN1cmVkRGltZW5zaW9uc1tkLmRpbVtHXV0taS5nZXRMYXlvdXQoKS5tZWFzdXJlZERpbWVuc2lvbnNbZC5kaW1bR11dKS8yLGQubGVhZGluZ1tHXSl9ZnVuY3Rpb24geihlLHQsaSxvLHIsYSxzKXt2ZShlLG51bGwhPWUuZ2V0TWVhc3VyZSgpLFwiRXhwZWN0ZWQgbm9kZSB0byBoYXZlIGN1c3RvbSBtZWFzdXJlIGZ1bmN0aW9uXCIpO3ZhciBsPV8oZSxuLllHRmxleERpcmVjdGlvbi5Sb3csdCksZD1fKGUsbi5ZR0ZsZXhEaXJlY3Rpb24uQ29sdW1uLHQpLGc9dS5ZR1Vud3JhcEZsb2F0T3B0aW9uYWwoZS5nZXRNYXJnaW5Gb3JBeGlzKG4uWUdGbGV4RGlyZWN0aW9uLlJvdyx0KSksRz11LllHVW53cmFwRmxvYXRPcHRpb25hbChlLmdldE1hcmdpbkZvckF4aXMobi5ZR0ZsZXhEaXJlY3Rpb24uQ29sdW1uLHQpKSxjPVkodCk/dDp1LllHRmxvYXRNYXgoMCx0LWctbCksZj1ZKGkpP2k6dS5ZR0Zsb2F0TWF4KDAsaS1HLWQpO2lmKG89PW4uWUdNZWFzdXJlTW9kZS5FeGFjdGx5JiZyPT1uLllHTWVhc3VyZU1vZGUuRXhhY3RseSllLnNldExheW91dE1lYXN1cmVkRGltZW5zaW9uKGIoZSxuLllHRmxleERpcmVjdGlvbi5Sb3csdC1nLGEsYSksbi5ZR0RpbWVuc2lvbi5XaWR0aCksZS5zZXRMYXlvdXRNZWFzdXJlZERpbWVuc2lvbihiKGUsbi5ZR0ZsZXhEaXJlY3Rpb24uQ29sdW1uLGktRyxzLGEpLG4uWUdEaW1lbnNpb24uSGVpZ2h0KTtlbHNle3ZhciB5PWUuZ2V0TWVhc3VyZSgpKGUsYyxvLGYscik7ZS5zZXRMYXlvdXRNZWFzdXJlZERpbWVuc2lvbihiKGUsbi5ZR0ZsZXhEaXJlY3Rpb24uUm93LG89PW4uWUdNZWFzdXJlTW9kZS5VbmRlZmluZWR8fG89PW4uWUdNZWFzdXJlTW9kZS5BdE1vc3Q/eS53aWR0aCtsOnQtZyxhLGEpLG4uWUdEaW1lbnNpb24uV2lkdGgpLGUuc2V0TGF5b3V0TWVhc3VyZWREaW1lbnNpb24oYihlLG4uWUdGbGV4RGlyZWN0aW9uLkNvbHVtbixyPT1uLllHTWVhc3VyZU1vZGUuVW5kZWZpbmVkfHxyPT1uLllHTWVhc3VyZU1vZGUuQXRNb3N0P3kuaGVpZ2h0K2Q6aS1HLHMsYSksbi5ZR0RpbWVuc2lvbi5IZWlnaHQpfX1mdW5jdGlvbiBKKGUsdCxpLG8scixhLHMpe3ZhciBsPV8oZSxuLllHRmxleERpcmVjdGlvbi5Sb3csYSksZD1fKGUsbi5ZR0ZsZXhEaXJlY3Rpb24uQ29sdW1uLGEpLGc9dS5ZR1Vud3JhcEZsb2F0T3B0aW9uYWwoZS5nZXRNYXJnaW5Gb3JBeGlzKG4uWUdGbGV4RGlyZWN0aW9uLlJvdyxhKSksRz11LllHVW53cmFwRmxvYXRPcHRpb25hbChlLmdldE1hcmdpbkZvckF4aXMobi5ZR0ZsZXhEaXJlY3Rpb24uQ29sdW1uLGEpKTtlLnNldExheW91dE1lYXN1cmVkRGltZW5zaW9uKGIoZSxuLllHRmxleERpcmVjdGlvbi5Sb3csbz09bi5ZR01lYXN1cmVNb2RlLlVuZGVmaW5lZHx8bz09bi5ZR01lYXN1cmVNb2RlLkF0TW9zdD9sOnQtZyxhLGEpLG4uWUdEaW1lbnNpb24uV2lkdGgpLGUuc2V0TGF5b3V0TWVhc3VyZWREaW1lbnNpb24oYihlLG4uWUdGbGV4RGlyZWN0aW9uLkNvbHVtbixyPT1uLllHTWVhc3VyZU1vZGUuVW5kZWZpbmVkfHxyPT1uLllHTWVhc3VyZU1vZGUuQXRNb3N0P2Q6aS1HLHMsYSksbi5ZR0RpbWVuc2lvbi5IZWlnaHQpfWZ1bmN0aW9uIGooZSx0LGksbyxyLGEscyl7aWYoIVkodCkmJm89PW4uWUdNZWFzdXJlTW9kZS5BdE1vc3QmJnQ8PTB8fCFZKGkpJiZyPT1uLllHTWVhc3VyZU1vZGUuQXRNb3N0JiZpPD0wfHxvPT1uLllHTWVhc3VyZU1vZGUuRXhhY3RseSYmcj09bi5ZR01lYXN1cmVNb2RlLkV4YWN0bHkpe3ZhciBsPXUuWUdVbndyYXBGbG9hdE9wdGlvbmFsKGUuZ2V0TWFyZ2luRm9yQXhpcyhuLllHRmxleERpcmVjdGlvbi5Db2x1bW4sYSkpLGQ9dS5ZR1Vud3JhcEZsb2F0T3B0aW9uYWwoZS5nZXRNYXJnaW5Gb3JBeGlzKG4uWUdGbGV4RGlyZWN0aW9uLlJvdyxhKSk7cmV0dXJuIGUuc2V0TGF5b3V0TWVhc3VyZWREaW1lbnNpb24oYihlLG4uWUdGbGV4RGlyZWN0aW9uLlJvdyxZKHQpfHxvPT1uLllHTWVhc3VyZU1vZGUuQXRNb3N0JiZ0PDA/MDp0LWQsYSxhKSxuLllHRGltZW5zaW9uLldpZHRoKSxlLnNldExheW91dE1lYXN1cmVkRGltZW5zaW9uKGIoZSxuLllHRmxleERpcmVjdGlvbi5Db2x1bW4sWShpKXx8cj09bi5ZR01lYXN1cmVNb2RlLkF0TW9zdCYmaTwwPzA6aS1sLHMsYSksbi5ZR0RpbWVuc2lvbi5IZWlnaHQpLCEwfXJldHVybiExfWZ1bmN0aW9uIFgoZSl7ZS5nZXRMYXlvdXQoKS5jbGVhbigpLGUuc2V0SGFzTmV3TGF5b3V0KCEwKSxlLmNsb25lQ2hpbGRyZW5JZk5lZWRlZCgpO2Zvcih2YXIgdD1FKGUpLGk9MDtpPHQ7aSsrKXtYKGUuZ2V0Q2hpbGQoaSkpfX1mdW5jdGlvbiBaKGUsdCxpLG8pe3ZhciByPXUuWUdGbGV4RGlyZWN0aW9uSXNSb3codCk/bi5ZR0ZsZXhEaXJlY3Rpb24uUm93Om4uWUdGbGV4RGlyZWN0aW9uLkNvbHVtbixhPXUuWUdGbGV4RGlyZWN0aW9uSXNSb3codCk/bi5ZR0RpbWVuc2lvbi5XaWR0aDpuLllHRGltZW5zaW9uLkhlaWdodCxzPXUuWUdVbndyYXBGbG9hdE9wdGlvbmFsKGUuZ2V0TWFyZ2luRm9yQXhpcyhyLG8pKSxsPV8oZSxyLG8pLGQ9aS1zLWw7aWYoIVkoZCkpe3ZhciBnPXUuWUdSZXNvbHZlVmFsdWUoZS5nZXRTdHlsZSgpLm1pbkRpbWVuc2lvbnNbYV0sbyksRz1nLmlzVW5kZWZpbmVkKCk/MDpnLmdldFZhbHVlKCktbCxjPXUuWUdSZXNvbHZlVmFsdWUoZS5nZXRTdHlsZSgpLm1heERpbWVuc2lvbnNbYV0sbyksZj1jLmlzVW5kZWZpbmVkKCk/TnVtYmVyLk1BWF9WQUxVRTpjLmdldFZhbHVlKCktbDtkPXUuWUdGbG9hdE1heCh1LllHRmxvYXRNaW4oZCxmKSxHKX1yZXR1cm4gZH1mdW5jdGlvbiBLKGUsdCxpLG8scixhLGwsZCxnLEcpe3ZhciBjPW51bGwsWT1lLmdldENoaWxkcmVuKCk7aWYoKHUuWUdGbGV4RGlyZWN0aW9uSXNSb3cobCk/bzpyKT09bi5ZR01lYXN1cmVNb2RlLkV4YWN0bHkpZm9yKHZhciBmPTA7ZjxZLmxlbmd0aDsrK2Ype2lmKCh5PVlbZl0pLmlzTm9kZUZsZXhpYmxlKCkpe2lmKG51bGwhPWN8fHUuWUdGbG9hdHNFcXVhbCh5LnJlc29sdmVGbGV4R3JvdygpLDApfHx1LllHRmxvYXRzRXF1YWwoeS5yZXNvbHZlRmxleFNocmluaygpLDApKXtjPW51bGw7YnJlYWt9Yz15fX1mb3IoZj0wO2Y8WS5sZW5ndGg7KytmKXt2YXIgeTtpZigoeT1ZW2ZdKS5yZXNvbHZlRGltZW5zaW9uKCkseS5nZXRTdHlsZSgpLmRpc3BsYXkhPW4uWUdEaXNwbGF5Lk5vbmUpe2lmKGcpe3ZhciBoPXkucmVzb2x2ZURpcmVjdGlvbihhKSxwPXUuWUdGbGV4RGlyZWN0aW9uSXNSb3cobCk/dDppLG09dS5ZR0ZsZXhEaXJlY3Rpb25Jc1JvdyhsKT9pOnQ7eS5zZXRQb3NpdGlvbihoLHAsbSx0KX15LmdldFN0eWxlKCkucG9zaXRpb25UeXBlIT1uLllHUG9zaXRpb25UeXBlLkFic29sdXRlJiYoeT09Yz8oeS5zZXRMYXlvdXRDb21wdXRlZEZsZXhCYXNpc0dlbmVyYXRpb24oQykseS5zZXRMYXlvdXRDb21wdXRlZEZsZXhCYXNpcyhuZXcgcy5ZR0Zsb2F0T3B0aW9uYWwoMCkpKTprKGUseSx0LG8saSx0LGkscixhLGQpLEcudmFsdWUrPXUuWUdVbndyYXBGbG9hdE9wdGlvbmFsKHkuZ2V0TGF5b3V0KCkuY29tcHV0ZWRGbGV4QmFzaXMuYWRkKHkuZ2V0TWFyZ2luRm9yQXhpcyhsLHQpKSkpfWVsc2UgWCh5KSx5LnNldEhhc05ld0xheW91dCghMCkseS5zZXREaXJ0eSghMSl9fWZ1bmN0aW9uIFEoZSx0LGksbyxyLGEscyl7Zm9yKHZhciBsPW5ldyB1LllHQ29sbGVjdEZsZXhJdGVtc1Jvd1ZhbHVlcyxkPTAsZz11LllHUmVzb2x2ZUZsZXhEaXJlY3Rpb24oZS5nZXRTdHlsZSgpLmZsZXhEaXJlY3Rpb24sZS5yZXNvbHZlRGlyZWN0aW9uKHQpKSxHPWUuZ2V0U3R5bGUoKS5mbGV4V3JhcCE9bi5ZR1dyYXAuTm9XcmFwLGM9YTtjPGUuZ2V0Q2hpbGRyZW5Db3VudCgpO2MrKyl7dmFyIFk9ZS5nZXRDaGlsZChjKTtpZihZLmdldFN0eWxlKCkuZGlzcGxheSE9bi5ZR0Rpc3BsYXkuTm9uZSYmWS5nZXRTdHlsZSgpLnBvc2l0aW9uVHlwZSE9bi5ZR1Bvc2l0aW9uVHlwZS5BYnNvbHV0ZSl7WS5zZXRMaW5lSW5kZXgocyk7dmFyIGY9dS5ZR1Vud3JhcEZsb2F0T3B0aW9uYWwoWS5nZXRNYXJnaW5Gb3JBeGlzKGcsbykpLHk9dS5ZR1Vud3JhcEZsb2F0T3B0aW9uYWwoSShZLGcsdS5ZR1Vud3JhcEZsb2F0T3B0aW9uYWwoWS5nZXRMYXlvdXQoKS5jb21wdXRlZEZsZXhCYXNpcyksaSkpO2lmKGQreStmPnImJkcmJmwuaXRlbXNPbkxpbmU+MClicmVhaztkKz15K2YsbC5zaXplQ29uc3VtZWRPbkN1cnJlbnRMaW5lKz15K2YsbC5pdGVtc09uTGluZSsrLFkuaXNOb2RlRmxleGlibGUoKSYmKGwudG90YWxGbGV4R3Jvd0ZhY3RvcnMrPVkucmVzb2x2ZUZsZXhHcm93KCksbC50b3RhbEZsZXhTaHJpbmtTY2FsZWRGYWN0b3JzKz0tWS5yZXNvbHZlRmxleFNocmluaygpKnUuWUdVbndyYXBGbG9hdE9wdGlvbmFsKFkuZ2V0TGF5b3V0KCkuY29tcHV0ZWRGbGV4QmFzaXMpKSxsLnJlbGF0aXZlQ2hpbGRyZW4ucHVzaChZKX19cmV0dXJuIGwudG90YWxGbGV4R3Jvd0ZhY3RvcnM+MCYmbC50b3RhbEZsZXhHcm93RmFjdG9yczwxJiYobC50b3RhbEZsZXhHcm93RmFjdG9ycz0xKSxsLnRvdGFsRmxleFNocmlua1NjYWxlZEZhY3RvcnM+MCYmbC50b3RhbEZsZXhTaHJpbmtTY2FsZWRGYWN0b3JzPDEmJihsLnRvdGFsRmxleFNocmlua1NjYWxlZEZhY3RvcnM9MSksbC5lbmRPZkxpbmVJbmRleD1jLGx9ZnVuY3Rpb24gJChlLHQsaSxvLHIsYSxzLGwsZyxHLGMsZix5KXtmb3IodmFyIGg9MCxwPTAsbT0wLFM9MCxGPXUuWUdGbGV4RGlyZWN0aW9uSXNSb3coaSksdj10LmdldFN0eWxlKCkuZmxleFdyYXAhPW4uWUdXcmFwLk5vV3JhcCxEPTA7RDxlLnJlbGF0aXZlQ2hpbGRyZW4ubGVuZ3RoOysrRCl7dmFyIHg9ZS5yZWxhdGl2ZUNoaWxkcmVuW0RdLE09aD11LllHVW53cmFwRmxvYXRPcHRpb25hbChJKHgsaSx1LllHVW53cmFwRmxvYXRPcHRpb25hbCh4LmdldExheW91dCgpLmNvbXB1dGVkRmxleEJhc2lzKSxyKSk7aWYoIVkoZS5yZW1haW5pbmdGcmVlU3BhY2UpJiZlLnJlbWFpbmluZ0ZyZWVTcGFjZTwwKXtpZigwIT0ocD0teC5yZXNvbHZlRmxleFNocmluaygpKmgpKXtNPWIoeCxpLFkoZS50b3RhbEZsZXhTaHJpbmtTY2FsZWRGYWN0b3JzKXx8MCE9ZS50b3RhbEZsZXhTaHJpbmtTY2FsZWRGYWN0b3JzP2grZS5yZW1haW5pbmdGcmVlU3BhY2UvZS50b3RhbEZsZXhTaHJpbmtTY2FsZWRGYWN0b3JzKnA6aCtwLGEsbCl9fWVsc2UhWShlLnJlbWFpbmluZ0ZyZWVTcGFjZSkmJmUucmVtYWluaW5nRnJlZVNwYWNlPjAmJihZKG09eC5yZXNvbHZlRmxleEdyb3coKSl8fDA9PW18fChNPWIoeCxpLGgrZS5yZW1haW5pbmdGcmVlU3BhY2UvZS50b3RhbEZsZXhHcm93RmFjdG9ycyptLGEsbCkpKTtTKz1NLWg7dmFyIEw9dS5ZR1Vud3JhcEZsb2F0T3B0aW9uYWwoeC5nZXRNYXJnaW5Gb3JBeGlzKGksbCkpLHc9dS5ZR1Vud3JhcEZsb2F0T3B0aW9uYWwoeC5nZXRNYXJnaW5Gb3JBeGlzKG8sbCkpLFU9dm9pZCAwLEU9TStMLEM9dm9pZCAwLEE9bi5ZR01lYXN1cmVNb2RlLkV4YWN0bHk7aWYoeC5nZXRTdHlsZSgpLmFzcGVjdFJhdGlvLmlzVW5kZWZpbmVkKCkpaWYoWShzKXx8Vih4LG8scyl8fGMhPW4uWUdNZWFzdXJlTW9kZS5FeGFjdGx5fHx2JiZHfHxQKHQseCkhPW4uWUdBbGlnbi5TdHJldGNofHx4Lm1hcmdpbkxlYWRpbmdWYWx1ZShvKS51bml0PT1uLllHVW5pdC5BdXRvfHx4Lm1hcmdpblRyYWlsaW5nVmFsdWUobykudW5pdD09bi5ZR1VuaXQuQXV0bylpZihWKHgsbyxzKSl7VT11LllHVW53cmFwRmxvYXRPcHRpb25hbCh1LllHUmVzb2x2ZVZhbHVlKHguZ2V0UmVzb2x2ZWREaW1lbnNpb24oZC5kaW1bb10pLHMpKSt3O3ZhciBOPXguZ2V0UmVzb2x2ZWREaW1lbnNpb24oZC5kaW1bb10pLnVuaXQ9PW4uWUdVbml0LlBlcmNlbnQmJmMhPW4uWUdNZWFzdXJlTW9kZS5FeGFjdGx5O0M9WShVKXx8Tj9uLllHTWVhc3VyZU1vZGUuVW5kZWZpbmVkOm4uWUdNZWFzdXJlTW9kZS5FeGFjdGx5fWVsc2UgQz1ZKFU9cyk/bi5ZR01lYXN1cmVNb2RlLlVuZGVmaW5lZDpuLllHTWVhc3VyZU1vZGUuQXRNb3N0O2Vsc2UgVT1zLEM9bi5ZR01lYXN1cmVNb2RlLkV4YWN0bHk7ZWxzZSBVPUY/KEUtTCkveC5nZXRTdHlsZSgpLmFzcGVjdFJhdGlvLmdldFZhbHVlKCk6KEUtTCkqeC5nZXRTdHlsZSgpLmFzcGVjdFJhdGlvLmdldFZhbHVlKCksQz1uLllHTWVhc3VyZU1vZGUuRXhhY3RseSxVKz13O3ZhciBfPXt2YWx1ZTpBfSxSPXt2YWx1ZTpFfSxPPXt2YWx1ZTpDfSxUPXt2YWx1ZTpVfTtIKHgsaSxhLGwsXyxSKSxIKHgsbyxzLGwsTyxUKSxBPV8udmFsdWUsRT1SLnZhbHVlLEM9Ty52YWx1ZSxVPVQudmFsdWU7dmFyIFc9IVYoeCxvLHMpJiZQKHQseCk9PW4uWUdBbGlnbi5TdHJldGNoJiZ4Lm1hcmdpbkxlYWRpbmdWYWx1ZShvKS51bml0IT1uLllHVW5pdC5BdXRvJiZ4Lm1hcmdpblRyYWlsaW5nVmFsdWUobykudW5pdCE9bi5ZR1VuaXQuQXV0byxCPUY/QTpDLGs9Rj9DOkE7eWUoeCxGP0U6VSxGP1U6RSx0LmdldExheW91dCgpLmRpcmVjdGlvbixCLGssbCxnLGYmJiFXLFwiZmxleFwiLHkpLHQuc2V0TGF5b3V0SGFkT3ZlcmZsb3codC5nZXRMYXlvdXQoKS5oYWRPdmVyZmxvd3x8eC5nZXRMYXlvdXQoKS5oYWRPdmVyZmxvdyl9cmV0dXJuIFN9ZnVuY3Rpb24gZWUoZSx0LGksbixvKXtmb3IodmFyIHI9MCxhPTAscz0wLGw9MCxkPTAsZz0wO2c8ZS5yZWxhdGl2ZUNoaWxkcmVuLmxlbmd0aDsrK2cpe3ZhciBHPWUucmVsYXRpdmVDaGlsZHJlbltnXSxjPXUuWUdVbndyYXBGbG9hdE9wdGlvbmFsKEkoRyx0LHUuWUdVbndyYXBGbG9hdE9wdGlvbmFsKEcuZ2V0TGF5b3V0KCkuY29tcHV0ZWRGbGV4QmFzaXMpLGkpKTtlLnJlbWFpbmluZ0ZyZWVTcGFjZTwwP1kocj0tRy5yZXNvbHZlRmxleFNocmluaygpKmMpfHwwPT1yfHwobD1iKEcsdCxzPWMrZS5yZW1haW5pbmdGcmVlU3BhY2UvZS50b3RhbEZsZXhTaHJpbmtTY2FsZWRGYWN0b3JzKnIsbixvKSxZKHMpfHxZKGwpfHxzPT1sfHwoZCs9bC1jLGUudG90YWxGbGV4U2hyaW5rU2NhbGVkRmFjdG9ycy09cikpOiFZKGUucmVtYWluaW5nRnJlZVNwYWNlKSYmZS5yZW1haW5pbmdGcmVlU3BhY2U+MCYmKFkoYT1HLnJlc29sdmVGbGV4R3JvdygpKXx8MD09YXx8KGw9YihHLHQscz1jK2UucmVtYWluaW5nRnJlZVNwYWNlL2UudG90YWxGbGV4R3Jvd0ZhY3RvcnMqYSxuLG8pLFkocyl8fFkobCl8fHM9PWx8fChkKz1sLWMsZS50b3RhbEZsZXhHcm93RmFjdG9ycy09YSkpKX1lLnJlbWFpbmluZ0ZyZWVTcGFjZS09ZH1mdW5jdGlvbiB0ZShlLHQsaSxuLG8scixhLHMsbCx1LGQsZyxHKXt2YXIgYz10LnJlbWFpbmluZ0ZyZWVTcGFjZTtlZSh0LGksbyxyLHMpO3ZhciBZPSQodCxlLGksbixvLHIsYSxzLGwsdSxkLGcsRyk7dC5yZW1haW5pbmdGcmVlU3BhY2U9Yy1ZfWZ1bmN0aW9uIGllKGUsdCxpLG8scixhLHMsbCxnLEcsYyxZLGYpe3ZhciB5PWUuZ2V0U3R5bGUoKTthPT1uLllHTWVhc3VyZU1vZGUuQXRNb3N0JiZ0LnJlbWFpbmluZ0ZyZWVTcGFjZT4wJiYoeS5taW5EaW1lbnNpb25zW2QuZGltW29dXS51bml0PT1uLllHVW5pdC5VbmRlZmluZWR8fHUuWUdSZXNvbHZlVmFsdWUoeS5taW5EaW1lbnNpb25zW2QuZGltW29dXSxsKS5pc1VuZGVmaW5lZCgpP3QucmVtYWluaW5nRnJlZVNwYWNlPTA6dC5yZW1haW5pbmdGcmVlU3BhY2U9dS5ZR0Zsb2F0TWF4KDAsdS5ZR1Vud3JhcEZsb2F0T3B0aW9uYWwodS5ZR1Jlc29sdmVWYWx1ZSh5Lm1pbkRpbWVuc2lvbnNbZC5kaW1bb11dLGwpKS0oRy10LnJlbWFpbmluZ0ZyZWVTcGFjZSkpKTtmb3IodmFyIGg9MCxwPWk7cDx0LmVuZE9mTGluZUluZGV4O3ArKyl7KEQ9ZS5nZXRDaGlsZChwKSkuZ2V0U3R5bGUoKS5wb3NpdGlvblR5cGU9PW4uWUdQb3NpdGlvblR5cGUuUmVsYXRpdmUmJihELm1hcmdpbkxlYWRpbmdWYWx1ZShvKS51bml0PT1uLllHVW5pdC5BdXRvJiZoKyssRC5tYXJnaW5UcmFpbGluZ1ZhbHVlKG8pLnVuaXQ9PW4uWUdVbml0LkF1dG8mJmgrKyl9dmFyIG09MCxTPTAsRj1lLmdldFN0eWxlKCkuanVzdGlmeUNvbnRlbnQ7aWYoMD09aClzd2l0Y2goRil7Y2FzZSBuLllHSnVzdGlmeS5DZW50ZXI6bT10LnJlbWFpbmluZ0ZyZWVTcGFjZS8yO2JyZWFrO2Nhc2Ugbi5ZR0p1c3RpZnkuRmxleEVuZDptPXQucmVtYWluaW5nRnJlZVNwYWNlO2JyZWFrO2Nhc2Ugbi5ZR0p1c3RpZnkuU3BhY2VCZXR3ZWVuOlM9dC5pdGVtc09uTGluZT4xP3UuWUdGbG9hdE1heCh0LnJlbWFpbmluZ0ZyZWVTcGFjZSwwKS8odC5pdGVtc09uTGluZS0xKTowO2JyZWFrO2Nhc2Ugbi5ZR0p1c3RpZnkuU3BhY2VFdmVubHk6bT1TPXQucmVtYWluaW5nRnJlZVNwYWNlLyh0Lml0ZW1zT25MaW5lKzEpO2JyZWFrO2Nhc2Ugbi5ZR0p1c3RpZnkuU3BhY2VBcm91bmQ6bT0oUz10LnJlbWFpbmluZ0ZyZWVTcGFjZS90Lml0ZW1zT25MaW5lKS8yO2JyZWFrO2Nhc2Ugbi5ZR0p1c3RpZnkuRmxleFN0YXJ0On12YXIgdj11LllHVW53cmFwRmxvYXRPcHRpb25hbChlLmdldExlYWRpbmdQYWRkaW5nQW5kQm9yZGVyKG8sZykpO3QubWFpbkRpbT12K20sdC5jcm9zc0RpbT0wO2ZvcihwPWk7cDx0LmVuZE9mTGluZUluZGV4O3ArKyl7dmFyIEQseD0oRD1lLmdldENoaWxkKHApKS5nZXRTdHlsZSgpLE09RC5nZXRMYXlvdXQoKTtpZih4LmRpc3BsYXkhPW4uWUdEaXNwbGF5Lk5vbmUpaWYoeC5wb3NpdGlvblR5cGU9PW4uWUdQb3NpdGlvblR5cGUuQWJzb2x1dGUmJkQuaXNMZWFkaW5nUG9zaXRpb25EZWZpbmVkKG8pKWYmJkQuc2V0TGF5b3V0UG9zaXRpb24odS5ZR1Vud3JhcEZsb2F0T3B0aW9uYWwoRC5nZXRMZWFkaW5nUG9zaXRpb24obyxHKSkrZS5nZXRMZWFkaW5nQm9yZGVyKG8pK3UuWUdVbndyYXBGbG9hdE9wdGlvbmFsKEQuZ2V0TGVhZGluZ01hcmdpbihvLFkpKSxkLnBvc1tvXSk7ZWxzZSBpZih4LnBvc2l0aW9uVHlwZT09bi5ZR1Bvc2l0aW9uVHlwZS5SZWxhdGl2ZSlELm1hcmdpbkxlYWRpbmdWYWx1ZShvKS51bml0PT1uLllHVW5pdC5BdXRvJiYodC5tYWluRGltKz10LnJlbWFpbmluZ0ZyZWVTcGFjZS9oKSxmJiZELnNldExheW91dFBvc2l0aW9uKE0ucG9zaXRpb25bZC5wb3Nbb11dK3QubWFpbkRpbSxkLnBvc1tvXSksRC5tYXJnaW5UcmFpbGluZ1ZhbHVlKG8pLnVuaXQ9PW4uWUdVbml0LkF1dG8mJih0Lm1haW5EaW0rPXQucmVtYWluaW5nRnJlZVNwYWNlL2gpLCFmJiZzPT1uLllHTWVhc3VyZU1vZGUuRXhhY3RseT8odC5tYWluRGltKz1TK3UuWUdVbndyYXBGbG9hdE9wdGlvbmFsKEQuZ2V0TWFyZ2luRm9yQXhpcyhvLFkpKSt1LllHVW53cmFwRmxvYXRPcHRpb25hbChNLmNvbXB1dGVkRmxleEJhc2lzKSx0LmNyb3NzRGltPWMpOih0Lm1haW5EaW0rPVMrVChELG8sWSksdC5jcm9zc0RpbT11LllHRmxvYXRNYXgodC5jcm9zc0RpbSxUKEQscixZKSkpO2Vsc2UgZiYmRC5zZXRMYXlvdXRQb3NpdGlvbihNLnBvc2l0aW9uW2QucG9zW29dXStlLmdldExlYWRpbmdCb3JkZXIobykrbSxkLnBvc1tvXSl9dC5tYWluRGltKz11LllHVW53cmFwRmxvYXRPcHRpb25hbChlLmdldFRyYWlsaW5nUGFkZGluZ0FuZEJvcmRlcihvLGcpKX1mdW5jdGlvbiBuZShlLHQsaSxvLHIsYSxzLGwsZyxHKXt2ZShlLCFZKHQpfHxyPT1uLllHTWVhc3VyZU1vZGUuVW5kZWZpbmVkLFwiYXZhaWxhYmxlV2lkdGggaXMgaW5kZWZpbml0ZSBzbyB3aWR0aE1lYXN1cmVNb2RlIG11c3QgYmUgWUdNZWFzdXJlTW9kZS5VbmRlZmluZWRcIiksdmUoZSwhWShpKXx8YT09bi5ZR01lYXN1cmVNb2RlLlVuZGVmaW5lZCxcImF2YWlsYWJsZUhlaWdodCBpcyBpbmRlZmluaXRlIHNvIGhlaWdodE1lYXN1cmVNb2RlIG11c3QgYmUgWUdNZWFzdXJlTW9kZS5VbmRlZmluZWRcIik7dmFyIGM9ZS5yZXNvbHZlRGlyZWN0aW9uKG8pO2Uuc2V0TGF5b3V0RGlyZWN0aW9uKGMpO3ZhciBmPXUuWUdSZXNvbHZlRmxleERpcmVjdGlvbihuLllHRmxleERpcmVjdGlvbi5Sb3csYykseT11LllHUmVzb2x2ZUZsZXhEaXJlY3Rpb24obi5ZR0ZsZXhEaXJlY3Rpb24uQ29sdW1uLGMpO2lmKGUuc2V0TGF5b3V0TWFyZ2luKHUuWUdVbndyYXBGbG9hdE9wdGlvbmFsKGUuZ2V0TGVhZGluZ01hcmdpbihmLHMpKSxuLllHRWRnZS5TdGFydCksZS5zZXRMYXlvdXRNYXJnaW4odS5ZR1Vud3JhcEZsb2F0T3B0aW9uYWwoZS5nZXRUcmFpbGluZ01hcmdpbihmLHMpKSxuLllHRWRnZS5FbmQpLGUuc2V0TGF5b3V0TWFyZ2luKHUuWUdVbndyYXBGbG9hdE9wdGlvbmFsKGUuZ2V0TGVhZGluZ01hcmdpbih5LHMpKSxuLllHRWRnZS5Ub3ApLGUuc2V0TGF5b3V0TWFyZ2luKHUuWUdVbndyYXBGbG9hdE9wdGlvbmFsKGUuZ2V0VHJhaWxpbmdNYXJnaW4oeSxzKSksbi5ZR0VkZ2UuQm90dG9tKSxlLnNldExheW91dEJvcmRlcihlLmdldExlYWRpbmdCb3JkZXIoZiksbi5ZR0VkZ2UuU3RhcnQpLGUuc2V0TGF5b3V0Qm9yZGVyKGUuZ2V0VHJhaWxpbmdCb3JkZXIoZiksbi5ZR0VkZ2UuRW5kKSxlLnNldExheW91dEJvcmRlcihlLmdldExlYWRpbmdCb3JkZXIoeSksbi5ZR0VkZ2UuVG9wKSxlLnNldExheW91dEJvcmRlcihlLmdldFRyYWlsaW5nQm9yZGVyKHkpLG4uWUdFZGdlLkJvdHRvbSksZS5zZXRMYXlvdXRQYWRkaW5nKHUuWUdVbndyYXBGbG9hdE9wdGlvbmFsKGUuZ2V0TGVhZGluZ1BhZGRpbmcoZixzKSksbi5ZR0VkZ2UuU3RhcnQpLGUuc2V0TGF5b3V0UGFkZGluZyh1LllHVW53cmFwRmxvYXRPcHRpb25hbChlLmdldFRyYWlsaW5nUGFkZGluZyhmLHMpKSxuLllHRWRnZS5FbmQpLGUuc2V0TGF5b3V0UGFkZGluZyh1LllHVW53cmFwRmxvYXRPcHRpb25hbChlLmdldExlYWRpbmdQYWRkaW5nKHkscykpLG4uWUdFZGdlLlRvcCksZS5zZXRMYXlvdXRQYWRkaW5nKHUuWUdVbndyYXBGbG9hdE9wdGlvbmFsKGUuZ2V0VHJhaWxpbmdQYWRkaW5nKHkscykpLG4uWUdFZGdlLkJvdHRvbSksbnVsbD09ZS5nZXRNZWFzdXJlKCkpe3ZhciBoPUUoZSk7aWYoMCE9aCl7aWYoZ3x8IWooZSx0LGkscixhLHMsbCkpe2UuY2xvbmVDaGlsZHJlbklmTmVlZGVkKCksZS5zZXRMYXlvdXRIYWRPdmVyZmxvdyghMSk7dmFyIHA9dS5ZR1Jlc29sdmVGbGV4RGlyZWN0aW9uKGUuZ2V0U3R5bGUoKS5mbGV4RGlyZWN0aW9uLGMpLG09dS5ZR0ZsZXhEaXJlY3Rpb25Dcm9zcyhwLGMpLFM9dS5ZR0ZsZXhEaXJlY3Rpb25Jc1JvdyhwKSxGPWUuZ2V0U3R5bGUoKS5mbGV4V3JhcCE9bi5ZR1dyYXAuTm9XcmFwLHY9Uz9zOmwsRD1TP2w6cyx4PXUuWUdVbndyYXBGbG9hdE9wdGlvbmFsKGUuZ2V0TGVhZGluZ1BhZGRpbmdBbmRCb3JkZXIobSxzKSksTT1fKGUscCxzKSxMPV8oZSxtLHMpLHc9Uz9yOmEsQz1TP2E6cixBPVM/TTpMLE49Uz9MOk0saz11LllHVW53cmFwRmxvYXRPcHRpb25hbChlLmdldE1hcmdpbkZvckF4aXMobi5ZR0ZsZXhEaXJlY3Rpb24uUm93LHMpKSxYPXUuWUdVbndyYXBGbG9hdE9wdGlvbmFsKGUuZ2V0TWFyZ2luRm9yQXhpcyhuLllHRmxleERpcmVjdGlvbi5Db2x1bW4scykpLCQ9dS5ZR1Vud3JhcEZsb2F0T3B0aW9uYWwodS5ZR1Jlc29sdmVWYWx1ZShlLmdldFN0eWxlKCkubWluRGltZW5zaW9uc1tuLllHRGltZW5zaW9uLldpZHRoXSxzKSktQSxlZT11LllHVW53cmFwRmxvYXRPcHRpb25hbCh1LllHUmVzb2x2ZVZhbHVlKGUuZ2V0U3R5bGUoKS5tYXhEaW1lbnNpb25zW24uWUdEaW1lbnNpb24uV2lkdGhdLHMpKS1BLG5lPXUuWUdVbndyYXBGbG9hdE9wdGlvbmFsKHUuWUdSZXNvbHZlVmFsdWUoZS5nZXRTdHlsZSgpLm1pbkRpbWVuc2lvbnNbbi5ZR0RpbWVuc2lvbi5IZWlnaHRdLGwpKS1OLG9lPXUuWUdVbndyYXBGbG9hdE9wdGlvbmFsKHUuWUdSZXNvbHZlVmFsdWUoZS5nZXRTdHlsZSgpLm1heERpbWVuc2lvbnNbbi5ZR0RpbWVuc2lvbi5IZWlnaHRdLGwpKS1OLHJlPVM/JDpuZSxhZT1TP2VlOm9lLHNlPVooZSxuLllHRmxleERpcmVjdGlvbi5Sb3csdCxzKSxsZT1aKGUsbi5ZR0ZsZXhEaXJlY3Rpb24uQ29sdW1uLGksbCksdWU9Uz9zZTpsZSxkZT1TP2xlOnNlLGdlPXt2YWx1ZTowfTtLKGUsc2UsbGUscixhLGMscCxHLGcsZ2UpO3ZhciBHZT13IT1uLllHTWVhc3VyZU1vZGUuVW5kZWZpbmVkJiZnZS52YWx1ZT51ZTtGJiZHZSYmdz09bi5ZR01lYXN1cmVNb2RlLkF0TW9zdCYmKHc9bi5ZR01lYXN1cmVNb2RlLkV4YWN0bHkpO2Zvcih2YXIgY2UsWWU9MCxmZT0wLGhlPTAscGU9MCxtZT0wO2ZlPGg7aGUrKyxZZT1mZSl7ZmU9KGNlPVEoZSxvLHYsc2UsdWUsWWUsaGUpKS5lbmRPZkxpbmVJbmRleDt2YXIgU2U9IWcmJkM9PW4uWUdNZWFzdXJlTW9kZS5FeGFjdGx5LEZlPSExO3chPW4uWUdNZWFzdXJlTW9kZS5FeGFjdGx5JiYoIVkocmUpJiZjZS5zaXplQ29uc3VtZWRPbkN1cnJlbnRMaW5lPHJlP3VlPXJlOiFZKGFlKSYmY2Uuc2l6ZUNvbnN1bWVkT25DdXJyZW50TGluZT5hZT91ZT1hZTooIWUuZ2V0Q29uZmlnKCkudXNlTGVnYWN5U3RyZXRjaEJlaGF2aW91ciYmKFkoY2UudG90YWxGbGV4R3Jvd0ZhY3RvcnMpJiYwPT1jZS50b3RhbEZsZXhHcm93RmFjdG9yc3x8WShlLnJlc29sdmVGbGV4R3JvdygpKSYmMD09ZS5yZXNvbHZlRmxleEdyb3coKSkmJih1ZT1jZS5zaXplQ29uc3VtZWRPbkN1cnJlbnRMaW5lKSxlLmdldENvbmZpZygpLnVzZUxlZ2FjeVN0cmV0Y2hCZWhhdmlvdXImJmUuc2V0TGF5b3V0RGlkVXNlTGVnYWN5RmxhZyghMCksRmU9IWUuZ2V0Q29uZmlnKCkudXNlTGVnYWN5U3RyZXRjaEJlaGF2aW91cikpLEZlfHxZKHVlKT9jZS5zaXplQ29uc3VtZWRPbkN1cnJlbnRMaW5lPDAmJihjZS5yZW1haW5pbmdGcmVlU3BhY2U9LWNlLnNpemVDb25zdW1lZE9uQ3VycmVudExpbmUpOmNlLnJlbWFpbmluZ0ZyZWVTcGFjZT11ZS1jZS5zaXplQ29uc3VtZWRPbkN1cnJlbnRMaW5lLFNlfHx0ZShlLGNlLHAsbSx2LHVlLGRlLHNlLGxlLEdlLEMsZyxHKSxlLnNldExheW91dEhhZE92ZXJmbG93KGUuZ2V0TGF5b3V0KCkuaGFkT3ZlcmZsb3d8fGNlLnJlbWFpbmluZ0ZyZWVTcGFjZTwwKSxpZShlLGNlLFllLHAsbSx3LEMsdixzLHVlLGRlLHNlLGcpO3ZhciBEZT1kZTtpZihDIT1uLllHTWVhc3VyZU1vZGUuVW5kZWZpbmVkJiZDIT1uLllHTWVhc3VyZU1vZGUuQXRNb3N0fHwoRGU9YihlLG0sY2UuY3Jvc3NEaW0rTCxELHMpLUwpLEZ8fEMhPW4uWUdNZWFzdXJlTW9kZS5FeGFjdGx5fHwoY2UuY3Jvc3NEaW09ZGUpLGNlLmNyb3NzRGltPWIoZSxtLGNlLmNyb3NzRGltK0wsRCxzKS1MLGcpZm9yKHZhciB4ZT1ZZTt4ZTxmZTt4ZSsrKXtpZigoJGU9ZS5nZXRDaGlsZCh4ZSkpLmdldFN0eWxlKCkuZGlzcGxheSE9bi5ZR0Rpc3BsYXkuTm9uZSlpZigkZS5nZXRTdHlsZSgpLnBvc2l0aW9uVHlwZT09bi5ZR1Bvc2l0aW9uVHlwZS5BYnNvbHV0ZSl7dmFyIE1lPSRlLmlzTGVhZGluZ1Bvc2l0aW9uRGVmaW5lZChtKTtNZSYmJGUuc2V0TGF5b3V0UG9zaXRpb24odS5ZR1Vud3JhcEZsb2F0T3B0aW9uYWwoJGUuZ2V0TGVhZGluZ1Bvc2l0aW9uKG0sZGUpKStlLmdldExlYWRpbmdCb3JkZXIobSkrdS5ZR1Vud3JhcEZsb2F0T3B0aW9uYWwoJGUuZ2V0TGVhZGluZ01hcmdpbihtLHNlKSksZC5wb3NbbV0pLE1lJiYhWSgkZS5nZXRMYXlvdXQoKS5wb3NpdGlvbltkLnBvc1ttXV0pfHwkZS5zZXRMYXlvdXRQb3NpdGlvbihlLmdldExlYWRpbmdCb3JkZXIobSkrdS5ZR1Vud3JhcEZsb2F0T3B0aW9uYWwoJGUuZ2V0TGVhZGluZ01hcmdpbihtLHNlKSksZC5wb3NbbV0pfWVsc2V7dmFyIExlPXgsd2U9UChlLCRlKTtpZih3ZT09bi5ZR0FsaWduLlN0cmV0Y2gmJiRlLm1hcmdpbkxlYWRpbmdWYWx1ZShtKS51bml0IT1uLllHVW5pdC5BdXRvJiYkZS5tYXJnaW5UcmFpbGluZ1ZhbHVlKG0pLnVuaXQhPW4uWUdVbml0LkF1dG8pe2lmKCFWKCRlLG0sZGUpKXt2YXIgVWU9JGUuZ2V0TGF5b3V0KCkubWVhc3VyZWREaW1lbnNpb25zW2QuZGltW3BdXSxFZT0kZS5nZXRTdHlsZSgpLmFzcGVjdFJhdGlvLmlzVW5kZWZpbmVkKCk/Y2UuY3Jvc3NEaW06dS5ZR1Vud3JhcEZsb2F0T3B0aW9uYWwoJGUuZ2V0TWFyZ2luRm9yQXhpcyhtLHNlKSkrKFM/VWUvJGUuZ2V0U3R5bGUoKS5hc3BlY3RSYXRpby5nZXRWYWx1ZSgpOlVlKiRlLmdldFN0eWxlKCkuYXNwZWN0UmF0aW8uZ2V0VmFsdWUoKSk7VWUrPXUuWUdVbndyYXBGbG9hdE9wdGlvbmFsKCRlLmdldE1hcmdpbkZvckF4aXMocCxzZSkpO3ZhciBDZT1uLllHTWVhc3VyZU1vZGUuRXhhY3RseSxBZT1uLllHTWVhc3VyZU1vZGUuRXhhY3RseSxOZT17dmFsdWU6Q2V9LF9lPXt2YWx1ZTpVZX0sUGU9e3ZhbHVlOkFlfSxSZT17dmFsdWU6RWV9O0goJGUscCx1ZSxzZSxOZSxfZSksSCgkZSxtLGRlLHNlLFBlLFJlKSxDZT1OZS52YWx1ZSxVZT1fZS52YWx1ZSxBZT1QZS52YWx1ZSxFZT1SZS52YWx1ZSx5ZSgkZSxYZT1TP1VlOkVlLGplPVM/RWU6VWUsYyxZKFhlKT9uLllHTWVhc3VyZU1vZGUuVW5kZWZpbmVkOm4uWUdNZWFzdXJlTW9kZS5FeGFjdGx5LFkoamUpP24uWUdNZWFzdXJlTW9kZS5VbmRlZmluZWQ6bi5ZR01lYXN1cmVNb2RlLkV4YWN0bHksc2UsbGUsITAsXCJzdHJldGNoXCIsRyl9fWVsc2V7dmFyIE9lPURlLVQoJGUsbSxzZSk7JGUubWFyZ2luTGVhZGluZ1ZhbHVlKG0pLnVuaXQ9PW4uWUdVbml0LkF1dG8mJiRlLm1hcmdpblRyYWlsaW5nVmFsdWUobSkudW5pdD09bi5ZR1VuaXQuQXV0bz9MZSs9dS5ZR0Zsb2F0TWF4KDAsT2UvMik6JGUubWFyZ2luVHJhaWxpbmdWYWx1ZShtKS51bml0PT1uLllHVW5pdC5BdXRvfHwoJGUubWFyZ2luTGVhZGluZ1ZhbHVlKG0pLnVuaXQ9PW4uWUdVbml0LkF1dG8/TGUrPXUuWUdGbG9hdE1heCgwLE9lKTp3ZT09bi5ZR0FsaWduLkZsZXhTdGFydHx8KHdlPT1uLllHQWxpZ24uQ2VudGVyP0xlKz1PZS8yOkxlKz1PZSkpfSRlLnNldExheW91dFBvc2l0aW9uKCRlLmdldExheW91dCgpLnBvc2l0aW9uW2QucG9zW21dXStwZStMZSxkLnBvc1ttXSl9fXBlKz1jZS5jcm9zc0RpbSxtZT11LllHRmxvYXRNYXgobWUsY2UubWFpbkRpbSl9aWYoZyYmKGhlPjF8fE8oZSkpJiYhWShkZSkpe3ZhciBUZT1kZS1wZSxWZT0wLFdlPXg7c3dpdGNoKGUuZ2V0U3R5bGUoKS5hbGlnbkNvbnRlbnQpe2Nhc2Ugbi5ZR0FsaWduLkZsZXhFbmQ6V2UrPVRlO2JyZWFrO2Nhc2Ugbi5ZR0FsaWduLkNlbnRlcjpXZSs9VGUvMjticmVhaztjYXNlIG4uWUdBbGlnbi5TdHJldGNoOmRlPnBlJiYoVmU9VGUvaGUpO2JyZWFrO2Nhc2Ugbi5ZR0FsaWduLlNwYWNlQXJvdW5kOmRlPnBlPyhXZSs9VGUvKDIqaGUpLGhlPjEmJihWZT1UZS9oZSkpOldlKz1UZS8yO2JyZWFrO2Nhc2Ugbi5ZR0FsaWduLlNwYWNlQmV0d2VlbjpkZT5wZSYmaGU+MSYmKFZlPVRlLyhoZS0xKSk7YnJlYWs7Y2FzZSBuLllHQWxpZ24uQXV0bzpjYXNlIG4uWUdBbGlnbi5GbGV4U3RhcnQ6Y2FzZSBuLllHQWxpZ24uQmFzZWxpbmU6fXZhciBJZT0wO2Zvcih4ZT0wO3hlPGhlO3hlKyspe3ZhciBiZT1JZSxCZT12b2lkIDAsSGU9MCxrZT0wLHFlPTA7Zm9yKEJlPWJlO0JlPGg7QmUrKyl7aWYoKCRlPWUuZ2V0Q2hpbGQoQmUpKS5nZXRTdHlsZSgpLmRpc3BsYXkhPW4uWUdEaXNwbGF5Lk5vbmUmJiRlLmdldFN0eWxlKCkucG9zaXRpb25UeXBlPT1uLllHUG9zaXRpb25UeXBlLlJlbGF0aXZlKXtpZigkZS5nZXRMaW5lSW5kZXgoKSE9eGUpYnJlYWs7aWYoVygkZSxtKSYmKEhlPXUuWUdGbG9hdE1heChIZSwkZS5nZXRMYXlvdXQoKS5tZWFzdXJlZERpbWVuc2lvbnNbZC5kaW1bbV1dK3UuWUdVbndyYXBGbG9hdE9wdGlvbmFsKCRlLmdldE1hcmdpbkZvckF4aXMobSxzZSkpKSksUChlLCRlKT09bi5ZR0FsaWduLkJhc2VsaW5lKXt2YXIgemU9UigkZSkrdS5ZR1Vud3JhcEZsb2F0T3B0aW9uYWwoJGUuZ2V0TGVhZGluZ01hcmdpbihuLllHRmxleERpcmVjdGlvbi5Db2x1bW4sc2UpKSxKZT0kZS5nZXRMYXlvdXQoKS5tZWFzdXJlZERpbWVuc2lvbnNbbi5ZR0RpbWVuc2lvbi5IZWlnaHRdK3UuWUdVbndyYXBGbG9hdE9wdGlvbmFsKCRlLmdldE1hcmdpbkZvckF4aXMobi5ZR0ZsZXhEaXJlY3Rpb24uQ29sdW1uLHNlKSktemU7a2U9dS5ZR0Zsb2F0TWF4KGtlLHplKSxxZT11LllHRmxvYXRNYXgocWUsSmUpLEhlPXUuWUdGbG9hdE1heChIZSxrZStxZSl9fX1pZihJZT1CZSxIZSs9VmUsZylmb3IoQmU9YmU7QmU8SWU7QmUrKyl7aWYoKCRlPWUuZ2V0Q2hpbGQoQmUpKS5nZXRTdHlsZSgpLmRpc3BsYXkhPW4uWUdEaXNwbGF5Lk5vbmUmJiRlLmdldFN0eWxlKCkucG9zaXRpb25UeXBlPT1uLllHUG9zaXRpb25UeXBlLlJlbGF0aXZlKXN3aXRjaChQKGUsJGUpKXtjYXNlIG4uWUdBbGlnbi5GbGV4U3RhcnQ6JGUuc2V0TGF5b3V0UG9zaXRpb24oV2UrdS5ZR1Vud3JhcEZsb2F0T3B0aW9uYWwoJGUuZ2V0TGVhZGluZ01hcmdpbihtLHNlKSksZC5wb3NbbV0pO2JyZWFrO2Nhc2Ugbi5ZR0FsaWduLkZsZXhFbmQ6JGUuc2V0TGF5b3V0UG9zaXRpb24oV2UrSGUtdS5ZR1Vud3JhcEZsb2F0T3B0aW9uYWwoJGUuZ2V0VHJhaWxpbmdNYXJnaW4obSxzZSkpLSRlLmdldExheW91dCgpLm1lYXN1cmVkRGltZW5zaW9uc1tkLmRpbVttXV0sZC5wb3NbbV0pO2JyZWFrO2Nhc2Ugbi5ZR0FsaWduLkNlbnRlcjp2YXIgamU9JGUuZ2V0TGF5b3V0KCkubWVhc3VyZWREaW1lbnNpb25zW2QuZGltW21dXTskZS5zZXRMYXlvdXRQb3NpdGlvbihXZSsoSGUtamUpLzIsZC5wb3NbbV0pO2JyZWFrO2Nhc2Ugbi5ZR0FsaWduLlN0cmV0Y2g6aWYoJGUuc2V0TGF5b3V0UG9zaXRpb24oV2UrdS5ZR1Vud3JhcEZsb2F0T3B0aW9uYWwoJGUuZ2V0TGVhZGluZ01hcmdpbihtLHNlKSksZC5wb3NbbV0pLCFWKCRlLG0sZGUpKXt2YXIgWGU9Uz8kZS5nZXRMYXlvdXQoKS5tZWFzdXJlZERpbWVuc2lvbnNbbi5ZR0RpbWVuc2lvbi5XaWR0aF0rdS5ZR1Vud3JhcEZsb2F0T3B0aW9uYWwoJGUuZ2V0TWFyZ2luRm9yQXhpcyhwLHNlKSk6SGU7amU9Uz9IZTokZS5nZXRMYXlvdXQoKS5tZWFzdXJlZERpbWVuc2lvbnNbbi5ZR0RpbWVuc2lvbi5IZWlnaHRdK3UuWUdVbndyYXBGbG9hdE9wdGlvbmFsKCRlLmdldE1hcmdpbkZvckF4aXMobSxzZSkpO3UuWUdGbG9hdHNFcXVhbChYZSwkZS5nZXRMYXlvdXQoKS5tZWFzdXJlZERpbWVuc2lvbnNbbi5ZR0RpbWVuc2lvbi5XaWR0aF0pJiZ1LllHRmxvYXRzRXF1YWwoamUsJGUuZ2V0TGF5b3V0KCkubWVhc3VyZWREaW1lbnNpb25zW24uWUdEaW1lbnNpb24uSGVpZ2h0XSl8fHllKCRlLFhlLGplLGMsbi5ZR01lYXN1cmVNb2RlLkV4YWN0bHksbi5ZR01lYXN1cmVNb2RlLkV4YWN0bHksc2UsbGUsITAsXCJtdWx0aWxpbmUtc3RyZXRjaFwiLEcpfWJyZWFrO2Nhc2Ugbi5ZR0FsaWduLkJhc2VsaW5lOiRlLnNldExheW91dFBvc2l0aW9uKFdlK2tlLVIoJGUpK3UuWUdVbndyYXBGbG9hdE9wdGlvbmFsKCRlLmdldExlYWRpbmdQb3NpdGlvbihuLllHRmxleERpcmVjdGlvbi5Db2x1bW4sZGUpKSxuLllHRWRnZS5Ub3ApO2JyZWFrO2Nhc2Ugbi5ZR0FsaWduLkF1dG86Y2FzZSBuLllHQWxpZ24uU3BhY2VCZXR3ZWVuOmNhc2Ugbi5ZR0FsaWduLlNwYWNlQXJvdW5kOn19V2UrPUhlfX1pZihlLnNldExheW91dE1lYXN1cmVkRGltZW5zaW9uKGIoZSxuLllHRmxleERpcmVjdGlvbi5Sb3csdC1rLHMscyksbi5ZR0RpbWVuc2lvbi5XaWR0aCksZS5zZXRMYXlvdXRNZWFzdXJlZERpbWVuc2lvbihiKGUsbi5ZR0ZsZXhEaXJlY3Rpb24uQ29sdW1uLGktWCxsLHMpLG4uWUdEaW1lbnNpb24uSGVpZ2h0KSx3PT1uLllHTWVhc3VyZU1vZGUuVW5kZWZpbmVkfHxlLmdldFN0eWxlKCkub3ZlcmZsb3chPW4uWUdPdmVyZmxvdy5TY3JvbGwmJnc9PW4uWUdNZWFzdXJlTW9kZS5BdE1vc3Q/ZS5zZXRMYXlvdXRNZWFzdXJlZERpbWVuc2lvbihiKGUscCxtZSx2LHMpLGQuZGltW3BdKTp3PT1uLllHTWVhc3VyZU1vZGUuQXRNb3N0JiZlLmdldFN0eWxlKCkub3ZlcmZsb3c9PW4uWUdPdmVyZmxvdy5TY3JvbGwmJmUuc2V0TGF5b3V0TWVhc3VyZWREaW1lbnNpb24odS5ZR0Zsb2F0TWF4KHUuWUdGbG9hdE1pbih1ZStNLHUuWUdVbndyYXBGbG9hdE9wdGlvbmFsKEkoZSxwLG1lLHYpKSksTSksZC5kaW1bcF0pLEM9PW4uWUdNZWFzdXJlTW9kZS5VbmRlZmluZWR8fGUuZ2V0U3R5bGUoKS5vdmVyZmxvdyE9bi5ZR092ZXJmbG93LlNjcm9sbCYmQz09bi5ZR01lYXN1cmVNb2RlLkF0TW9zdD9lLnNldExheW91dE1lYXN1cmVkRGltZW5zaW9uKGIoZSxtLHBlK0wsRCxzKSxkLmRpbVttXSk6Qz09bi5ZR01lYXN1cmVNb2RlLkF0TW9zdCYmZS5nZXRTdHlsZSgpLm92ZXJmbG93PT1uLllHT3ZlcmZsb3cuU2Nyb2xsJiZlLnNldExheW91dE1lYXN1cmVkRGltZW5zaW9uKHUuWUdGbG9hdE1heCh1LllHRmxvYXRNaW4oZGUrTCx1LllHVW53cmFwRmxvYXRPcHRpb25hbChJKGUsbSxwZStMLEQpKSksTCksZC5kaW1bbV0pLGcmJmUuZ2V0U3R5bGUoKS5mbGV4V3JhcD09bi5ZR1dyYXAuV3JhcFJldmVyc2UpZm9yKHhlPTA7eGU8aDt4ZSsrKXsoJGU9VShlLHhlKSkuZ2V0U3R5bGUoKS5wb3NpdGlvblR5cGU9PW4uWUdQb3NpdGlvblR5cGUuUmVsYXRpdmUmJiRlLnNldExheW91dFBvc2l0aW9uKGUuZ2V0TGF5b3V0KCkubWVhc3VyZWREaW1lbnNpb25zW2QuZGltW21dXS0kZS5nZXRMYXlvdXQoKS5wb3NpdGlvbltkLnBvc1ttXV0tJGUuZ2V0TGF5b3V0KCkubWVhc3VyZWREaW1lbnNpb25zW2QuZGltW21dXSxkLnBvc1ttXSl9aWYoZyl7dmFyIFplPWUuZ2V0Q2hpbGRyZW4oKTtmb3IoeGU9MDt4ZTxaZS5sZW5ndGg7Kyt4ZSl7KCRlPVplW3hlXSkuZ2V0U3R5bGUoKS5wb3NpdGlvblR5cGU9PW4uWUdQb3NpdGlvblR5cGUuQWJzb2x1dGUmJnEoZSwkZSxzZSxTP3c6QyxsZSxjLEcpfXZhciBLZT1wPT1uLllHRmxleERpcmVjdGlvbi5Sb3dSZXZlcnNlfHxwPT1uLllHRmxleERpcmVjdGlvbi5Db2x1bW5SZXZlcnNlLFFlPW09PW4uWUdGbGV4RGlyZWN0aW9uLlJvd1JldmVyc2V8fG09PW4uWUdGbGV4RGlyZWN0aW9uLkNvbHVtblJldmVyc2U7aWYoS2V8fFFlKWZvcih4ZT0wO3hlPGg7eGUrKyl7dmFyICRlOygkZT1lLmdldENoaWxkKHhlKSkuZ2V0U3R5bGUoKS5kaXNwbGF5IT1uLllHRGlzcGxheS5Ob25lJiYoS2UmJkIoZSwkZSxwKSxRZSYmQihlLCRlLG0pKX19fX1lbHNlIEooZSx0LGkscixhLHMsbCl9ZWxzZSB6KGUsdCxpLHIsYSxzLGwpfXQuWUdOb2RlUHJpbnRJbnRlcm5hbD1BLHQuWUdOb2RlUHJpbnQ9Tix0LllHTm9kZVBhZGRpbmdBbmRCb3JkZXJGb3JBeGlzPV8sdC5ZR05vZGVBbGlnbkl0ZW09UCx0LllHQmFzZWxpbmU9Uix0LllHSXNCYXNlbGluZUxheW91dD1PLHQuWUdOb2RlRGltV2l0aE1hcmdpbj1ULHQuWUdOb2RlSXNTdHlsZURpbURlZmluZWQ9Vix0LllHTm9kZUlzTGF5b3V0RGltRGVmaW5lZD1XLHQuWUdOb2RlQm91bmRBeGlzV2l0aGluTWluQW5kTWF4PUksdC5ZR05vZGVCb3VuZEF4aXM9Yix0LllHTm9kZVNldENoaWxkVHJhaWxpbmdQb3NpdGlvbj1CLHQuWUdDb25zdHJhaW5NYXhTaXplRm9yTW9kZT1ILHQuWUdOb2RlQ29tcHV0ZUZsZXhCYXNpc0ZvckNoaWxkPWssdC5ZR05vZGVBYnNvbHV0ZUxheW91dENoaWxkPXEsdC5ZR05vZGVXaXRoTWVhc3VyZUZ1bmNTZXRNZWFzdXJlZERpbWVuc2lvbnM9eix0LllHTm9kZUVtcHR5Q29udGFpbmVyU2V0TWVhc3VyZWREaW1lbnNpb25zPUosdC5ZR05vZGVGaXhlZFNpemVTZXRNZWFzdXJlZERpbWVuc2lvbnM9aix0LllHWmVyb091dExheW91dFJlY3Vyc2l2bHk9WCx0LllHTm9kZUNhbGN1bGF0ZUF2YWlsYWJsZUlubmVyRGltPVosdC5ZR05vZGVDb21wdXRlRmxleEJhc2lzRm9yQ2hpbGRyZW49Syx0LllHQ2FsY3VsYXRlQ29sbGVjdEZsZXhJdGVtc1Jvd1ZhbHVlcz1RLHQuWUdEaXN0cmlidXRlRnJlZVNwYWNlU2Vjb25kUGFzcz0kLHQuWUdEaXN0cmlidXRlRnJlZVNwYWNlRmlyc3RQYXNzPWVlLHQuWUdSZXNvbHZlRmxleGlibGVMZW5ndGg9dGUsdC5ZR0p1c3RpZnlNYWluQXhpcz1pZSx0LllHTm9kZWxheW91dEltcGw9bmU7dmFyIG9lPTAscmU9ITEsYWU9ITEsc2U9ITEsbGU9XCIgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIjtmdW5jdGlvbiB1ZShlKXt2YXIgdD1sZS5sZW5ndGg7cmV0dXJuIGU+dD9sZTpsZS5zdWJzdHIodC1lKX1mdW5jdGlvbiBkZShlLHQpe3JldHVybiBlPj1uLllHTWVhc3VyZU1vZGVDb3VudD9cIlwiOnQ/W1wiTEFZX1VOREVGSU5FRFwiLFwiTEFZX0VYQUNUTFlcIixcIkxBWV9BVF9cIixcIk1PU1RcIl1bZV06W1wiVU5ERUZJTkVEXCIsXCJFWEFDVExZXCIsXCJBVF9NT1NUXCJdW2VdfWZ1bmN0aW9uIGdlKGUsdCxpKXtyZXR1cm4gZT09bi5ZR01lYXN1cmVNb2RlLkV4YWN0bHkmJnUuWUdGbG9hdHNFcXVhbCh0LGkpfWZ1bmN0aW9uIEdlKGUsdCxpLG8pe3JldHVybiBlPT1uLllHTWVhc3VyZU1vZGUuQXRNb3N0JiZpPT1uLllHTWVhc3VyZU1vZGUuVW5kZWZpbmVkJiYodD49b3x8dS5ZR0Zsb2F0c0VxdWFsKHQsbykpfWZ1bmN0aW9uIGNlKGUsdCxpLG8scil7cmV0dXJuIGk9PW4uWUdNZWFzdXJlTW9kZS5BdE1vc3QmJmU9PW4uWUdNZWFzdXJlTW9kZS5BdE1vc3QmJiFZKG8pJiYhWSh0KSYmIVkocikmJm8+dCYmKHI8PXR8fHUuWUdGbG9hdHNFcXVhbCh0LHIpKX1mdW5jdGlvbiBZZShlLGksbixvKXt2YXIgcj1lKmksYT1yJTE7cmV0dXJuIHUuWUdGbG9hdHNFcXVhbChhLDApP3ItPWE6dS5ZR0Zsb2F0c0VxdWFsKGEsMSk/cj1yLWErMTpuP3I9ci1hKzE6bz9yLT1hOnI9ci1hKyghWShhKSYmKGE+LjV8fHUuWUdGbG9hdHNFcXVhbChhLC41KSk/MTowKSxZKHIpfHxZKGkpP3QuWUdVbmRlZmluZWQ6ci9pfWZ1bmN0aW9uIGZlKGUsdCxpLG4sbyxyLGEscyxsLGQsZyxHLGMpe2lmKCFZKGQpJiZkPDB8fCFZKGwpJiZsPDApcmV0dXJuITE7dmFyIGY9bnVsbCE9YyYmMCE9Yy5wb2ludFNjYWxlRmFjdG9yLHk9Zj9ZZSh0LGMucG9pbnRTY2FsZUZhY3RvciwhMSwhMSk6dCxoPWY/WWUobixjLnBvaW50U2NhbGVGYWN0b3IsITEsITEpOm4scD1mP1llKHIsYy5wb2ludFNjYWxlRmFjdG9yLCExLCExKTpyLG09Zj9ZZShzLGMucG9pbnRTY2FsZUZhY3RvciwhMSwhMSk6cyxTPW89PWUmJnUuWUdGbG9hdHNFcXVhbChwLHkpLEY9YT09aSYmdS5ZR0Zsb2F0c0VxdWFsKG0saCksdj1TfHxnZShlLHQtZyxsKXx8R2UoZSx0LWcsbyxsKXx8Y2UoZSx0LWcsbyxyLGwpLEQ9Rnx8Z2UoaSxuLUcsZCl8fEdlKGksbi1HLGEsZCl8fGNlKGksbi1HLGEscyxkKTtyZXR1cm4gdiYmRH1mdW5jdGlvbiB5ZShlLHQsaSxvLHIsYSxzLGwsZyxHLGMpe3ZhciBZPWUuZ2V0TGF5b3V0KCk7b2UrKzt2YXIgZj1lLmlzRGlydHkoKSYmWS5nZW5lcmF0aW9uQ291bnQhPUN8fFkubGFzdE93bmVyRGlyZWN0aW9uIT1vO2YmJihZLm5leHRDYWNoZWRNZWFzdXJlbWVudHNJbmRleD0wLFkuY2FjaGVkTGF5b3V0LndpZHRoTWVhc3VyZU1vZGU9bi5ZR01lYXN1cmVNb2RlQ291bnQtMSxZLmNhY2hlZExheW91dC5oZWlnaHRNZWFzdXJlTW9kZT1uLllHTWVhc3VyZU1vZGVDb3VudC0xLFkuY2FjaGVkTGF5b3V0LmNvbXB1dGVkV2lkdGg9LTEsWS5jYWNoZWRMYXlvdXQuY29tcHV0ZWRIZWlnaHQ9LTEpO3ZhciB5PW51bGw7aWYobnVsbCE9ZS5nZXRNZWFzdXJlKCkpe3ZhciBoPXUuWUdVbndyYXBGbG9hdE9wdGlvbmFsKGUuZ2V0TWFyZ2luRm9yQXhpcyhuLllHRmxleERpcmVjdGlvbi5Sb3cscykpLHA9dS5ZR1Vud3JhcEZsb2F0T3B0aW9uYWwoZS5nZXRNYXJnaW5Gb3JBeGlzKG4uWUdGbGV4RGlyZWN0aW9uLkNvbHVtbixzKSk7aWYoZmUocix0LGEsaSxZLmNhY2hlZExheW91dC53aWR0aE1lYXN1cmVNb2RlLFkuY2FjaGVkTGF5b3V0LmF2YWlsYWJsZVdpZHRoLFkuY2FjaGVkTGF5b3V0LmhlaWdodE1lYXN1cmVNb2RlLFkuY2FjaGVkTGF5b3V0LmF2YWlsYWJsZUhlaWdodCxZLmNhY2hlZExheW91dC5jb21wdXRlZFdpZHRoLFkuY2FjaGVkTGF5b3V0LmNvbXB1dGVkSGVpZ2h0LGgscCxjKSl5PVkuY2FjaGVkTGF5b3V0O2Vsc2UgZm9yKHZhciBtPTA7bTxZLm5leHRDYWNoZWRNZWFzdXJlbWVudHNJbmRleDttKyspaWYoZmUocix0LGEsaSxZLmNhY2hlZE1lYXN1cmVtZW50c1ttXS53aWR0aE1lYXN1cmVNb2RlLFkuY2FjaGVkTWVhc3VyZW1lbnRzW21dLmF2YWlsYWJsZVdpZHRoLFkuY2FjaGVkTWVhc3VyZW1lbnRzW21dLmhlaWdodE1lYXN1cmVNb2RlLFkuY2FjaGVkTWVhc3VyZW1lbnRzW21dLmF2YWlsYWJsZUhlaWdodCxZLmNhY2hlZE1lYXN1cmVtZW50c1ttXS5jb21wdXRlZFdpZHRoLFkuY2FjaGVkTWVhc3VyZW1lbnRzW21dLmNvbXB1dGVkSGVpZ2h0LGgscCxjKSl7eT1ZLmNhY2hlZE1lYXN1cmVtZW50c1ttXTticmVha319ZWxzZSBpZihnKXUuWUdGbG9hdHNFcXVhbChZLmNhY2hlZExheW91dC5hdmFpbGFibGVXaWR0aCx0KSYmdS5ZR0Zsb2F0c0VxdWFsKFkuY2FjaGVkTGF5b3V0LmF2YWlsYWJsZUhlaWdodCxpKSYmWS5jYWNoZWRMYXlvdXQud2lkdGhNZWFzdXJlTW9kZT09ciYmWS5jYWNoZWRMYXlvdXQuaGVpZ2h0TWVhc3VyZU1vZGU9PWEmJih5PVkuY2FjaGVkTGF5b3V0KTtlbHNlIGZvcihtPTA7bTxZLm5leHRDYWNoZWRNZWFzdXJlbWVudHNJbmRleDttKyspaWYodS5ZR0Zsb2F0c0VxdWFsKFkuY2FjaGVkTWVhc3VyZW1lbnRzW21dLmF2YWlsYWJsZVdpZHRoLHQpJiZ1LllHRmxvYXRzRXF1YWwoWS5jYWNoZWRNZWFzdXJlbWVudHNbbV0uYXZhaWxhYmxlSGVpZ2h0LGkpJiZZLmNhY2hlZE1lYXN1cmVtZW50c1ttXS53aWR0aE1lYXN1cmVNb2RlPT1yJiZZLmNhY2hlZE1lYXN1cmVtZW50c1ttXS5oZWlnaHRNZWFzdXJlTW9kZT09YSl7eT1ZLmNhY2hlZE1lYXN1cmVtZW50c1ttXTticmVha31pZihmfHxudWxsPT15KXtpZihhZSYmKEZlKGUsbi5ZR0xvZ0xldmVsLlZlcmJvc2UsXCIlcyVkLnslc1wiLHVlKG9lKSxvZSxmP1wiKlwiOlwiXCIpLG51bGwhPWUuZ2V0UHJpbnRGdW5jKCkmJmUuZ2V0UHJpbnRGdW5jKCkoZSksRmUoZSxuLllHTG9nTGV2ZWwuVmVyYm9zZSxcIndtOiAlcywgaG06ICVzLCBhdzogJWYgYWg6ICVmICVzXFxuXCIsZGUocixnKSxkZShhLGcpLHQsaSxHKSksbmUoZSx0LGksbyxyLGEscyxsLGcsYyksYWUmJihGZShlLG4uWUdMb2dMZXZlbC5WZXJib3NlLFwiJXMlZC59JXNcIix1ZShvZSksb2UsZj9cIipcIjpcIlwiKSxudWxsIT1lLmdldFByaW50RnVuYygpJiZlLmdldFByaW50RnVuYygpKGUpLEZlKGUsbi5ZR0xvZ0xldmVsLlZlcmJvc2UsXCJ3bTogJXMsIGhtOiAlcywgZDogKCVmLCAlZikgJXNcXG5cIixkZShyLGcpLGRlKGEsZyksWS5tZWFzdXJlZERpbWVuc2lvbnNbbi5ZR0RpbWVuc2lvbi5XaWR0aF0sWS5tZWFzdXJlZERpbWVuc2lvbnNbbi5ZR0RpbWVuc2lvbi5IZWlnaHRdLEcpKSxZLmxhc3RPd25lckRpcmVjdGlvbj1vLG51bGw9PXkpe1kubmV4dENhY2hlZE1lYXN1cmVtZW50c0luZGV4PT1kLllHX01BWF9DQUNIRURfUkVTVUxUX0NPVU5UJiYoYWUmJkZlKGUsbi5ZR0xvZ0xldmVsLlZlcmJvc2UsXCJPdXQgb2YgY2FjaGUgZW50cmllcyFcXG5cIiksWS5uZXh0Q2FjaGVkTWVhc3VyZW1lbnRzSW5kZXg9MCk7dmFyIFM9dm9pZCAwO2c/Uz1ZLmNhY2hlZExheW91dDooUz1ZLmNhY2hlZE1lYXN1cmVtZW50c1tZLm5leHRDYWNoZWRNZWFzdXJlbWVudHNJbmRleF0sWS5uZXh0Q2FjaGVkTWVhc3VyZW1lbnRzSW5kZXgrKyksUy5hdmFpbGFibGVXaWR0aD10LFMuYXZhaWxhYmxlSGVpZ2h0PWksUy53aWR0aE1lYXN1cmVNb2RlPXIsUy5oZWlnaHRNZWFzdXJlTW9kZT1hLFMuY29tcHV0ZWRXaWR0aD1ZLm1lYXN1cmVkRGltZW5zaW9uc1tuLllHRGltZW5zaW9uLldpZHRoXSxTLmNvbXB1dGVkSGVpZ2h0PVkubWVhc3VyZWREaW1lbnNpb25zW24uWUdEaW1lbnNpb24uSGVpZ2h0XX19ZWxzZSBZLm1lYXN1cmVkRGltZW5zaW9uc1tuLllHRGltZW5zaW9uLldpZHRoXT15LmNvbXB1dGVkV2lkdGgsWS5tZWFzdXJlZERpbWVuc2lvbnNbbi5ZR0RpbWVuc2lvbi5IZWlnaHRdPXkuY29tcHV0ZWRIZWlnaHQsYWUmJnNlJiYoRmUoZSxuLllHTG9nTGV2ZWwuVmVyYm9zZSxcIiVzJWQue1tza2lwcGVkXSBcIix1ZShvZSksb2UpLG51bGwhPWUuZ2V0UHJpbnRGdW5jKCkmJmUuZ2V0UHJpbnRGdW5jKCkoZSksRmUoZSxuLllHTG9nTGV2ZWwuVmVyYm9zZSxcIndtOiAlcywgaG06ICVzLCBhdzogJWYgYWg6ICVmID0+IGQ6ICglZiwgJWYpICVzXFxuXCIsZGUocixnKSxkZShhLGcpLHQsaSx5LmNvbXB1dGVkV2lkdGgseS5jb21wdXRlZEhlaWdodCxHKSk7cmV0dXJuIGcmJihlLnNldExheW91dERpbWVuc2lvbihlLmdldExheW91dCgpLm1lYXN1cmVkRGltZW5zaW9uc1tuLllHRGltZW5zaW9uLldpZHRoXSxuLllHRGltZW5zaW9uLldpZHRoKSxlLnNldExheW91dERpbWVuc2lvbihlLmdldExheW91dCgpLm1lYXN1cmVkRGltZW5zaW9uc1tuLllHRGltZW5zaW9uLkhlaWdodF0sbi5ZR0RpbWVuc2lvbi5IZWlnaHQpLGUuc2V0SGFzTmV3TGF5b3V0KCEwKSxlLnNldERpcnR5KCExKSksb2UtLSxZLmdlbmVyYXRpb25Db3VudD1DLGZ8fG51bGw9PXl9ZnVuY3Rpb24gaGUoZSx0KXtyZXR1cm4gZSV0fWZ1bmN0aW9uIHBlKGUsdCxpLG8pe2lmKDAhPXQpe3ZhciByPWUuZ2V0TGF5b3V0KCkucG9zaXRpb25bbi5ZR0VkZ2UuTGVmdF0sYT1lLmdldExheW91dCgpLnBvc2l0aW9uW24uWUdFZGdlLlRvcF0scz1lLmdldExheW91dCgpLmRpbWVuc2lvbnNbbi5ZR0RpbWVuc2lvbi5XaWR0aF0sbD1lLmdldExheW91dCgpLmRpbWVuc2lvbnNbbi5ZR0RpbWVuc2lvbi5IZWlnaHRdLGQ9aStyLGc9bythLEc9ZCtzLGM9ZytsLFk9ZS5nZXROb2RlVHlwZSgpPT1uLllHTm9kZVR5cGUuVGV4dDtlLnNldExheW91dFBvc2l0aW9uKFllKHIsdCwhMSxZKSxuLllHRWRnZS5MZWZ0KSxlLnNldExheW91dFBvc2l0aW9uKFllKGEsdCwhMSxZKSxuLllHRWRnZS5Ub3ApO3ZhciBmPSF1LllHRmxvYXRzRXF1YWwoaGUocyp0LDEpLDApJiYhdS5ZR0Zsb2F0c0VxdWFsKGhlKHMqdCwxKSwxKSx5PSF1LllHRmxvYXRzRXF1YWwoaGUobCp0LDEpLDApJiYhdS5ZR0Zsb2F0c0VxdWFsKGhlKGwqdCwxKSwxKTtlLnNldExheW91dERpbWVuc2lvbihZZShHLHQsWSYmZixZJiYhZiktWWUoZCx0LCExLFkpLG4uWUdEaW1lbnNpb24uV2lkdGgpLGUuc2V0TGF5b3V0RGltZW5zaW9uKFllKGMsdCxZJiZ5LFkmJiF5KS1ZZShnLHQsITEsWSksbi5ZR0RpbWVuc2lvbi5IZWlnaHQpO2Zvcih2YXIgaD1FKGUpLHA9MDtwPGg7cCsrKXBlKFUoZSxwKSx0LGQsZyl9fWZ1bmN0aW9uIG1lKGUsdCxpLG8pe2Zvcih2YXIgcj1bXSxhPTQ7YTxhcmd1bWVudHMubGVuZ3RoO2ErKylyW2EtNF09YXJndW1lbnRzW2FdO3ZhciBzPW51bGwhPWU/ZTpwKCk7aWYocy5sb2dnZXIocyx0LGksbyxyKSxpPT1uLllHTG9nTGV2ZWwuRmF0YWwpdGhyb3cgbmV3IEVycm9yKFwiQWJvcnQgWW9nYVwiKX1mdW5jdGlvbiBTZShlLHQsaSl7Zm9yKHZhciBuPVtdLG89MztvPGFyZ3VtZW50cy5sZW5ndGg7bysrKW5bby0zXT1hcmd1bWVudHNbb107bWUoZSxudWxsLHQsaSxuKX1mdW5jdGlvbiBGZShlLHQsaSl7Zm9yKHZhciBuPVtdLG89MztvPGFyZ3VtZW50cy5sZW5ndGg7bysrKW5bby0zXT1hcmd1bWVudHNbb107bWUobnVsbD09ZT9udWxsOmUuZ2V0Q29uZmlnKCksZSx0LGksbil9ZnVuY3Rpb24gdmUoZSx0LGkpe3R8fEZlKGUsbi5ZR0xvZ0xldmVsLkZhdGFsLFwiJXNcXG5cIixpKX1mdW5jdGlvbiBEZShlLHQsaSl7dHx8U2UoZSxuLllHTG9nTGV2ZWwuRmF0YWwsXCIlc1xcblwiLGkpfWZ1bmN0aW9uIHhlKGUsdCl7cmV0dXJuIGUuZXhwZXJpbWVudGFsRmVhdHVyZXNbdF19ZnVuY3Rpb24gTWUoZSx0KXtmb3IodmFyIGk9MDtpPGUubGVuZ3RoOysraSl7dmFyIG49ZVtpXTt0KG4pLE1lKG4uZ2V0Q2hpbGRyZW4oKSx0KX19dC5ZR1NwYWNlcj11ZSx0LllHTWVhc3VyZU1vZGVOYW1lPWRlLHQuWUdNZWFzdXJlTW9kZVNpemVJc0V4YWN0QW5kTWF0Y2hlc09sZE1lYXN1cmVkU2l6ZT1nZSx0LllHTWVhc3VyZU1vZGVPbGRTaXplSXNVbnNwZWNpZmllZEFuZFN0aWxsRml0cz1HZSx0LllHTWVhc3VyZU1vZGVOZXdNZWFzdXJlU2l6ZUlzU3RyaWN0ZXJBbmRTdGlsbFZhbGlkPWNlLHQuWUdSb3VuZFZhbHVlVG9QaXhlbEdyaWQ9WWUsdC5ZR05vZGVDYW5Vc2VDYWNoZWRNZWFzdXJlbWVudD1mZSx0LllHTGF5b3V0Tm9kZUludGVybmFsPXllLHQuWUdDb25maWdTZXRQb2ludFNjYWxlRmFjdG9yPWZ1bmN0aW9uKGUsdCl7RGUoZSx0Pj0wLFwiU2NhbGUgZmFjdG9yIHNob3VsZCBub3QgYmUgbGVzcyB0aGFuIHplcm9cIiksZS5wb2ludFNjYWxlRmFjdG9yPTA9PXQ/MDp0fSx0LllHUm91bmRUb1BpeGVsR3JpZD1wZSx0LllHTm9kZUNhbGN1bGF0ZUxheW91dD1mdW5jdGlvbihlLGksbyxyKXtDKyssZS5yZXNvbHZlRGltZW5zaW9uKCk7dmFyIGE9dC5ZR1VuZGVmaW5lZCxzPW4uWUdNZWFzdXJlTW9kZS5VbmRlZmluZWQ7VihlLG4uWUdGbGV4RGlyZWN0aW9uLlJvdyxpKT8oYT11LllHVW53cmFwRmxvYXRPcHRpb25hbCh1LllHUmVzb2x2ZVZhbHVlKGUuZ2V0UmVzb2x2ZWREaW1lbnNpb24oZC5kaW1bbi5ZR0ZsZXhEaXJlY3Rpb24uUm93XSksaSkuYWRkKGUuZ2V0TWFyZ2luRm9yQXhpcyhuLllHRmxleERpcmVjdGlvbi5Sb3csaSkpKSxzPW4uWUdNZWFzdXJlTW9kZS5FeGFjdGx5KTp1LllHUmVzb2x2ZVZhbHVlKGUuZ2V0U3R5bGUoKS5tYXhEaW1lbnNpb25zW24uWUdEaW1lbnNpb24uV2lkdGhdLGkpLmlzVW5kZWZpbmVkKCk/cz1ZKGE9aSk/bi5ZR01lYXN1cmVNb2RlLlVuZGVmaW5lZDpuLllHTWVhc3VyZU1vZGUuRXhhY3RseTooYT11LllHVW53cmFwRmxvYXRPcHRpb25hbCh1LllHUmVzb2x2ZVZhbHVlKGUuZ2V0U3R5bGUoKS5tYXhEaW1lbnNpb25zW24uWUdEaW1lbnNpb24uV2lkdGhdLGkpKSxzPW4uWUdNZWFzdXJlTW9kZS5BdE1vc3QpO3ZhciBsPXQuWUdVbmRlZmluZWQsZz1uLllHTWVhc3VyZU1vZGUuVW5kZWZpbmVkO2lmKFYoZSxuLllHRmxleERpcmVjdGlvbi5Db2x1bW4sbyk/KGw9dS5ZR1Vud3JhcEZsb2F0T3B0aW9uYWwodS5ZR1Jlc29sdmVWYWx1ZShlLmdldFJlc29sdmVkRGltZW5zaW9uKGQuZGltW24uWUdGbGV4RGlyZWN0aW9uLkNvbHVtbl0pLG8pLmFkZChlLmdldE1hcmdpbkZvckF4aXMobi5ZR0ZsZXhEaXJlY3Rpb24uQ29sdW1uLGkpKSksZz1uLllHTWVhc3VyZU1vZGUuRXhhY3RseSk6dS5ZR1Jlc29sdmVWYWx1ZShlLmdldFN0eWxlKCkubWF4RGltZW5zaW9uc1tuLllHRGltZW5zaW9uLkhlaWdodF0sbykuaXNVbmRlZmluZWQoKT9nPVkobD1vKT9uLllHTWVhc3VyZU1vZGUuVW5kZWZpbmVkOm4uWUdNZWFzdXJlTW9kZS5FeGFjdGx5OihsPXUuWUdVbndyYXBGbG9hdE9wdGlvbmFsKHUuWUdSZXNvbHZlVmFsdWUoZS5nZXRTdHlsZSgpLm1heERpbWVuc2lvbnNbbi5ZR0RpbWVuc2lvbi5IZWlnaHRdLG8pKSxnPW4uWUdNZWFzdXJlTW9kZS5BdE1vc3QpLHllKGUsYSxsLHIscyxnLGksbywhMCxcImluaXRpYWxcIixlLmdldENvbmZpZygpKSYmKGUuc2V0UG9zaXRpb24oZS5nZXRMYXlvdXQoKS5kaXJlY3Rpb24saSxvLGkpLHBlKGUsZS5nZXRDb25maWcoKS5wb2ludFNjYWxlRmFjdG9yLDAsMCkscmUmJihuLllHUHJpbnRPcHRpb25zLkxheW91dCxuLllHUHJpbnRPcHRpb25zLkNoaWxkcmVuLG4uWUdQcmludE9wdGlvbnMuU3R5bGUpKSxlLmdldENvbmZpZygpLnNob3VsZERpZmZMYXlvdXRXaXRob3V0TGVnYWN5U3RyZXRjaEJlaGF2aW91ciYmZS5kaWRVc2VMZWdhY3lGbGFnKCkpe2NvbnNvbGUubG9nKFwibGVnYWN5IGNvbmZpZ1wiKTt2YXIgRz1GKGUpO0cucmVzb2x2ZURpbWVuc2lvbigpLEcubWFya0RpcnR5QW5kUHJvcG9nYXRlRG93bndhcmRzKCksQysrLEcuc2V0QW5kUHJvcG9nYXRlVXNlTGVnYWN5RmxhZyghMSkseWUoRyxhLGwscixzLGcsaSxvLCEwLFwiaW5pdGlhbFwiLEcuZ2V0Q29uZmlnKCkpJiYoRy5zZXRQb3NpdGlvbihHLmdldExheW91dCgpLmRpcmVjdGlvbixpLG8saSkscGUoRyxHLmdldENvbmZpZygpLnBvaW50U2NhbGVGYWN0b3IsMCwwKSxlLnNldExheW91dERvZXNMZWdhY3lGbGFnQWZmZWN0c0xheW91dCghRy5pc0xheW91dFRyZWVFcXVhbFRvTm9kZShlKSkscmUmJihuLllHUHJpbnRPcHRpb25zLkxheW91dCxuLllHUHJpbnRPcHRpb25zLkNoaWxkcmVuLG4uWUdQcmludE9wdGlvbnMuU3R5bGUpKSxEKEcpLHgoRyl9fSx0LllHQ29uZmlnU2V0TG9nZ2VyPWZ1bmN0aW9uKGUsdCl7ZS5sb2dnZXI9bnVsbCE9dD90OmN9LHQuWUdDb25maWdTZXRTaG91bGREaWZmTGF5b3V0V2l0aG91dExlZ2FjeVN0cmV0Y2hCZWhhdmlvdXI9ZnVuY3Rpb24oZSx0KXtlLnNob3VsZERpZmZMYXlvdXRXaXRob3V0TGVnYWN5U3RyZXRjaEJlaGF2aW91cj10fSx0LllHVkxvZz1tZSx0LllHTG9nV2l0aENvbmZpZz1TZSx0LllHTG9nPUZlLHQuWUdBc3NlcnQ9ZnVuY3Rpb24oZSx0KXtlfHxGZShudWxsLG4uWUdMb2dMZXZlbC5GYXRhbCxcIiVzXFxuXCIsdCl9LHQuWUdBc3NlcnRXaXRoTm9kZT12ZSx0LllHQXNzZXJ0V2l0aENvbmZpZz1EZSx0LllHQ29uZmlnU2V0RXhwZXJpbWVudGFsRmVhdHVyZUVuYWJsZWQ9ZnVuY3Rpb24oZSx0LGkpe2UuZXhwZXJpbWVudGFsRmVhdHVyZXNbdF09aX0sdC5ZR0NvbmZpZ0lzRXhwZXJpbWVudGFsRmVhdHVyZUVuYWJsZWQ9eGUsdC5ZR0NvbmZpZ1NldFVzZVdlYkRlZmF1bHRzPWZ1bmN0aW9uKGUsdCl7ZS51c2VXZWJEZWZhdWx0cz10fSx0LllHQ29uZmlnU2V0VXNlTGVnYWN5U3RyZXRjaEJlaGF2aW91cj1mdW5jdGlvbihlLHQpe2UudXNlTGVnYWN5U3RyZXRjaEJlaGF2aW91cj10fSx0LllHQ29uZmlnR2V0VXNlV2ViRGVmYXVsdHM9ZnVuY3Rpb24oZSl7cmV0dXJuIGUudXNlV2ViRGVmYXVsdHN9LHQuWUdDb25maWdTZXRDb250ZXh0PWZ1bmN0aW9uKGUsdCl7ZS5jb250ZXh0PXR9LHQuWUdDb25maWdHZXRDb250ZXh0PWZ1bmN0aW9uKGUpe3JldHVybiBlLmNvbnRleHR9LHQuWUdDb25maWdTZXRDbG9uZU5vZGVGdW5jPWZ1bmN0aW9uKGUsdCl7ZS5jbG9uZU5vZGVDYWxsYmFjaz10fSx0LllHVHJhdmVyc2VDaGlsZHJlblByZU9yZGVyPU1lLHQuWUdUcmF2ZXJzZVByZU9yZGVyPWZ1bmN0aW9uKGUsdCl7ZSYmKHQoZSksTWUoZS5nZXRDaGlsZHJlbigpLHQpKX19LGZ1bmN0aW9uKGUsdCxpKXtcInVzZSBzdHJpY3RcIjt0Ll9fZXNNb2R1bGU9ITA7dmFyIG49aSgxKSxvPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZSh0KXtpZih2b2lkIDA9PT10JiYodD12b2lkIDApLHQgaW5zdGFuY2VvZiBlKXJldHVybiB0aGlzLnZhbHVlXz10LmdldFZhbHVlKCksdm9pZCh0aGlzLmlzVW5kZWZpbmVkXz10LmlzVW5kZWZpbmVkKCkpO24uWUdGbG9hdElzVW5kZWZpbmVkKHQpPyh0aGlzLnZhbHVlXz0wLHRoaXMuaXNVbmRlZmluZWRfPSEwKToodGhpcy52YWx1ZV89dCx0aGlzLmlzVW5kZWZpbmVkXz0hMSl9cmV0dXJuIGUucHJvdG90eXBlLmNsb25lPWZ1bmN0aW9uKCl7cmV0dXJuIG5ldyBlKHRoaXMuaXNVbmRlZmluZWRfP3ZvaWQgMDp0aGlzLnZhbHVlXyl9LGUucHJvdG90eXBlLmdldFZhbHVlPWZ1bmN0aW9uKCl7aWYodGhpcy5pc1VuZGVmaW5lZF8pdGhyb3dcIlRyaWVkIHRvIGdldCB2YWx1ZSBvZiBhbiB1bmRlZmluZWQgWUdGbG9hdE9wdGlvbmFsXCI7cmV0dXJuIHRoaXMudmFsdWVffSxlLnByb3RvdHlwZS5zZXRWYWx1ZT1mdW5jdGlvbihlKXt0aGlzLnZhbHVlXz1lLHRoaXMuaXNVbmRlZmluZWRfPSExfSxlLnByb3RvdHlwZS5pc1VuZGVmaW5lZD1mdW5jdGlvbigpe3JldHVybiB0aGlzLmlzVW5kZWZpbmVkX30sZS5wcm90b3R5cGUuYWRkPWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLmlzVW5kZWZpbmVkX3x8dC5pc1VuZGVmaW5lZCgpP25ldyBlOm5ldyBlKHRoaXMudmFsdWVfK3QuZ2V0VmFsdWUoKSl9LGUucHJvdG90eXBlLmlzQmlnZ2VyPWZ1bmN0aW9uKGUpe3JldHVybiF0aGlzLmlzVW5kZWZpbmVkXyYmIWUuaXNVbmRlZmluZWQoKSYmdGhpcy52YWx1ZV8+ZS5nZXRWYWx1ZSgpfSxlLnByb3RvdHlwZS5pc1NtYWxsZXI9ZnVuY3Rpb24oZSl7cmV0dXJuIXRoaXMuaXNVbmRlZmluZWRfJiYhZS5pc1VuZGVmaW5lZCgpJiZ0aGlzLnZhbHVlXzxlLmdldFZhbHVlKCl9LGUucHJvdG90eXBlLmlzQmlnZ2VyRXF1YWw9ZnVuY3Rpb24oZSl7cmV0dXJuISF0aGlzLmlzRXF1YWwoZSl8fHRoaXMuaXNCaWdnZXIoZSl9LGUucHJvdG90eXBlLmlzU21hbGxlckVxdWFsPWZ1bmN0aW9uKGUpe3JldHVybiEhdGhpcy5pc0VxdWFsKGUpfHx0aGlzLmlzU21hbGxlcihlKX0sZS5wcm90b3R5cGUuaXNFcXVhbD1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5pc1VuZGVmaW5lZF89PWUuaXNVbmRlZmluZWQoKSYmKCEhdGhpcy5pc1VuZGVmaW5lZF98fHRoaXMudmFsdWVfPT1lLmdldFZhbHVlKCkpfSxlLnByb3RvdHlwZS5pc0RpZmY9ZnVuY3Rpb24oZSl7cmV0dXJuIXRoaXMuaXNFcXVhbChlKX0sZS5wcm90b3R5cGUuaXNFcXVhbFZhbHVlPWZ1bmN0aW9uKGUpe3JldHVybiBuLllHRmxvYXRJc1VuZGVmaW5lZChlKT09dGhpcy5pc1VuZGVmaW5lZF8mJih0aGlzLmlzVW5kZWZpbmVkX3x8ZT09dGhpcy52YWx1ZV8pfSxlLnByb3RvdHlwZS5pc0RpZmZWYWx1ZT1mdW5jdGlvbihlKXtyZXR1cm4hdGhpcy5pc0VxdWFsVmFsdWUoZSl9LGV9KCk7dC5ZR0Zsb2F0T3B0aW9uYWw9b30sZnVuY3Rpb24oZSx0LGkpe1widXNlIHN0cmljdFwiO3QuX19lc01vZHVsZT0hMDt2YXIgbj1pKDApLG89aSgyKSxyPWkoMSksYT1mdW5jdGlvbigpe3JldHVybiBmdW5jdGlvbigpe3RoaXMuaXRlbXNPbkxpbmU9MCx0aGlzLnNpemVDb25zdW1lZE9uQ3VycmVudExpbmU9MCx0aGlzLnRvdGFsRmxleEdyb3dGYWN0b3JzPTAsdGhpcy50b3RhbEZsZXhTaHJpbmtTY2FsZWRGYWN0b3JzPTAsdGhpcy5lbmRPZkxpbmVJbmRleD0wLHRoaXMucmVsYXRpdmVDaGlsZHJlbj1bXSx0aGlzLnJlbWFpbmluZ0ZyZWVTcGFjZT0wLHRoaXMubWFpbkRpbT0wLHRoaXMuY3Jvc3NEaW09MH19KCk7ZnVuY3Rpb24gcyhlLHQpe3JldHVybiBlLnVuaXQ9PXQudW5pdCYmKCEhKGUudW5pdD09bi5ZR1VuaXQuVW5kZWZpbmVkfHxyLllHRmxvYXRJc1VuZGVmaW5lZChlLnZhbHVlKSYmci5ZR0Zsb2F0SXNVbmRlZmluZWQodC52YWx1ZSkpfHxNYXRoLmFicyhlLnZhbHVlLXQudmFsdWUpPDFlLTQpfWZ1bmN0aW9uIGwoZSx0KXtyZXR1cm4gci5ZR0Zsb2F0SXNVbmRlZmluZWQoZSl8fHIuWUdGbG9hdElzVW5kZWZpbmVkKHQpP3IuWUdGbG9hdElzVW5kZWZpbmVkKGUpJiZyLllHRmxvYXRJc1VuZGVmaW5lZCh0KTpNYXRoLmFicyhlLXQpPDFlLTR9ZnVuY3Rpb24gdShlLHQpe3N3aXRjaChlLnVuaXQpe2Nhc2Ugbi5ZR1VuaXQuVW5kZWZpbmVkOmNhc2Ugbi5ZR1VuaXQuQXV0bzpyZXR1cm4gbmV3IG8uWUdGbG9hdE9wdGlvbmFsO2Nhc2Ugbi5ZR1VuaXQuUG9pbnQ6cmV0dXJuIG5ldyBvLllHRmxvYXRPcHRpb25hbChlLnZhbHVlKTtjYXNlIG4uWUdVbml0LlBlcmNlbnQ6cmV0dXJuIG5ldyBvLllHRmxvYXRPcHRpb25hbChlLnZhbHVlKnQqLjAxKX1yZXR1cm4gbmV3IG8uWUdGbG9hdE9wdGlvbmFsfWZ1bmN0aW9uIGQoZSl7cmV0dXJuIGU9PW4uWUdGbGV4RGlyZWN0aW9uLkNvbHVtbnx8ZT09bi5ZR0ZsZXhEaXJlY3Rpb24uQ29sdW1uUmV2ZXJzZX1mdW5jdGlvbiBnKGUsdCl7aWYodD09bi5ZR0RpcmVjdGlvbi5SVEwpe2lmKGU9PW4uWUdGbGV4RGlyZWN0aW9uLlJvdylyZXR1cm4gbi5ZR0ZsZXhEaXJlY3Rpb24uUm93UmV2ZXJzZTtpZihlPT1uLllHRmxleERpcmVjdGlvbi5Sb3dSZXZlcnNlKXJldHVybiBuLllHRmxleERpcmVjdGlvbi5Sb3d9cmV0dXJuIGV9dC5ZR0NvbGxlY3RGbGV4SXRlbXNSb3dWYWx1ZXM9YSx0LllHVmFsdWVFcXVhbD1zLHQuWUdGbG9hdHNFcXVhbD1sLHQuWUdGbG9hdE1heD1mdW5jdGlvbihlLHQpe3JldHVybiByLllHRmxvYXRJc1VuZGVmaW5lZChlKXx8ci5ZR0Zsb2F0SXNVbmRlZmluZWQodCk/ci5ZR0Zsb2F0SXNVbmRlZmluZWQoZSk/dDplOk1hdGgubWF4KGUsdCl9LHQuWUdGbG9hdE9wdGlvbmFsTWF4PWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGUuaXNVbmRlZmluZWQoKXx8dC5pc1VuZGVmaW5lZCgpP2UuaXNVbmRlZmluZWQoKT90OmU6ZS5nZXRWYWx1ZSgpPnQuZ2V0VmFsdWUoKT9lOnR9LHQuWUdGbG9hdE1pbj1mdW5jdGlvbihlLHQpe3JldHVybiByLllHRmxvYXRJc1VuZGVmaW5lZChlKXx8ci5ZR0Zsb2F0SXNVbmRlZmluZWQodCk/ci5ZR0Zsb2F0SXNVbmRlZmluZWQoZSk/dDplOk1hdGgubWluKGUsdCl9LHQuWUdGbG9hdEFycmF5RXF1YWw9ZnVuY3Rpb24oZSx0KXtmb3IodmFyIGk9ITAsbj0wO248ZS5sZW5ndGgmJmk7KytuKWk9bChlW25dLHRbbl0pO3JldHVybiBpfSx0LllHVmFsdWVBcnJheUVxdWFsPWZ1bmN0aW9uKGUsdCl7Zm9yKHZhciBpPSEwLG49MDtuPGUubGVuZ3RoJiZpOysrbilpPXMoZVtuXSx0W25dKTtyZXR1cm4gaX0sdC5ZR0Zsb2F0U2FuaXRpemU9ZnVuY3Rpb24oZSl7cmV0dXJuIHIuWUdGbG9hdElzVW5kZWZpbmVkKGUpPzA6ZX0sdC5ZR1Vud3JhcEZsb2F0T3B0aW9uYWw9ZnVuY3Rpb24oZSl7cmV0dXJuIGUuaXNVbmRlZmluZWQoKT9yLllHVW5kZWZpbmVkOmUuZ2V0VmFsdWUoKX0sdC5ZR0ZsZXhEaXJlY3Rpb25Dcm9zcz1mdW5jdGlvbihlLHQpe3JldHVybiBkKGUpP2cobi5ZR0ZsZXhEaXJlY3Rpb24uUm93LHQpOm4uWUdGbGV4RGlyZWN0aW9uLkNvbHVtbn0sdC5ZR0ZsZXhEaXJlY3Rpb25Jc1Jvdz1mdW5jdGlvbihlKXtyZXR1cm4gZT09bi5ZR0ZsZXhEaXJlY3Rpb24uUm93fHxlPT1uLllHRmxleERpcmVjdGlvbi5Sb3dSZXZlcnNlfSx0LllHUmVzb2x2ZVZhbHVlPXUsdC5ZR0ZsZXhEaXJlY3Rpb25Jc0NvbHVtbj1kLHQuWUdSZXNvbHZlRmxleERpcmVjdGlvbj1nLHQuWUdSZXNvbHZlVmFsdWVNYXJnaW49ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZS51bml0PT1uLllHVW5pdC5BdXRvP25ldyBvLllHRmxvYXRPcHRpb25hbCgwKTp1KGUsdCl9LHQuY2xvbmVZR1ZhbHVlQXJyYXk9ZnVuY3Rpb24oZSl7Zm9yKHZhciB0PW5ldyBBcnJheShlLmxlbmd0aCksaT0wO2k8ZS5sZW5ndGg7aSsrKXRbaV09ZVtpXS5jbG9uZSgpO3JldHVybiB0fX0sZnVuY3Rpb24oZSx0LGkpe1widXNlIHN0cmljdFwiO3QuX19lc01vZHVsZT0hMDt2YXIgbj1pKDApLG89aSgxKSxyPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZSgpe3RoaXMuYXZhaWxhYmxlV2lkdGg9MCx0aGlzLmF2YWlsYWJsZUhlaWdodD0wLHRoaXMud2lkdGhNZWFzdXJlTW9kZT1uLllHTWVhc3VyZU1vZGUuQXRNb3N0LHRoaXMuaGVpZ2h0TWVhc3VyZU1vZGU9bi5ZR01lYXN1cmVNb2RlLkF0TW9zdCx0aGlzLmNvbXB1dGVkV2lkdGg9LTEsdGhpcy5jb21wdXRlZEhlaWdodD0tMX1yZXR1cm4gZS5wcm90b3R5cGUuaXNFcXVhbD1mdW5jdGlvbihlKXt2YXIgdD10aGlzLndpZHRoTWVhc3VyZU1vZGU9PWUud2lkdGhNZWFzdXJlTW9kZSYmdGhpcy5oZWlnaHRNZWFzdXJlTW9kZT09ZS5oZWlnaHRNZWFzdXJlTW9kZTtyZXR1cm4gby5ZR0Zsb2F0SXNVbmRlZmluZWQodGhpcy5hdmFpbGFibGVXaWR0aCkmJm8uWUdGbG9hdElzVW5kZWZpbmVkKGUuYXZhaWxhYmxlV2lkdGgpfHwodD10JiZ0aGlzLmF2YWlsYWJsZVdpZHRoPT1lLmF2YWlsYWJsZVdpZHRoKSxvLllHRmxvYXRJc1VuZGVmaW5lZCh0aGlzLmF2YWlsYWJsZUhlaWdodCkmJm8uWUdGbG9hdElzVW5kZWZpbmVkKGUuYXZhaWxhYmxlSGVpZ2h0KXx8KHQ9dCYmdGhpcy5hdmFpbGFibGVIZWlnaHQ9PWUuYXZhaWxhYmxlSGVpZ2h0KSxvLllHRmxvYXRJc1VuZGVmaW5lZCh0aGlzLmNvbXB1dGVkV2lkdGgpJiZvLllHRmxvYXRJc1VuZGVmaW5lZChlLmNvbXB1dGVkV2lkdGgpfHwodD10JiZ0aGlzLmNvbXB1dGVkV2lkdGg9PWUuY29tcHV0ZWRXaWR0aCksby5ZR0Zsb2F0SXNVbmRlZmluZWQodGhpcy5jb21wdXRlZEhlaWdodCkmJm8uWUdGbG9hdElzVW5kZWZpbmVkKGUuY29tcHV0ZWRIZWlnaHQpfHwodD10JiZ0aGlzLmNvbXB1dGVkSGVpZ2h0PT1lLmNvbXB1dGVkSGVpZ2h0KSx0fSxlLnByb3RvdHlwZS5jbG9uZT1mdW5jdGlvbigpe3ZhciB0PW5ldyBlO3JldHVybiB0LmF2YWlsYWJsZVdpZHRoPXRoaXMuYXZhaWxhYmxlV2lkdGgsdC5hdmFpbGFibGVIZWlnaHQ9dGhpcy5hdmFpbGFibGVIZWlnaHQsdC53aWR0aE1lYXN1cmVNb2RlPXRoaXMud2lkdGhNZWFzdXJlTW9kZSx0LmhlaWdodE1lYXN1cmVNb2RlPXRoaXMuaGVpZ2h0TWVhc3VyZU1vZGUsdC5jb21wdXRlZFdpZHRoPXRoaXMuY29tcHV0ZWRXaWR0aCx0LmNvbXB1dGVkSGVpZ2h0PXRoaXMuY29tcHV0ZWRIZWlnaHQsdH0sZX0oKTt0LllHQ2FjaGVkTWVhc3VyZW1lbnQ9cix0LmxlYWRpbmc9W24uWUdFZGdlLlRvcCxuLllHRWRnZS5Cb3R0b20sbi5ZR0VkZ2UuTGVmdCxuLllHRWRnZS5SaWdodF0sdC50cmFpbGluZz1bbi5ZR0VkZ2UuQm90dG9tLG4uWUdFZGdlLlRvcCxuLllHRWRnZS5SaWdodCxuLllHRWRnZS5MZWZ0XSx0LnBvcz1bbi5ZR0VkZ2UuVG9wLG4uWUdFZGdlLkJvdHRvbSxuLllHRWRnZS5MZWZ0LG4uWUdFZGdlLlJpZ2h0XSx0LmRpbT1bbi5ZR0RpbWVuc2lvbi5IZWlnaHQsbi5ZR0RpbWVuc2lvbi5IZWlnaHQsbi5ZR0RpbWVuc2lvbi5XaWR0aCxuLllHRGltZW5zaW9uLldpZHRoXSx0LllHX01BWF9DQUNIRURfUkVTVUxUX0NPVU5UPTE2LHQua0RlZmF1bHRGbGV4R3Jvdz0wLHQua0RlZmF1bHRGbGV4U2hyaW5rPTAsdC5rV2ViRGVmYXVsdEZsZXhTaHJpbms9MX0sZnVuY3Rpb24oZSx0LGkpe1widXNlIHN0cmljdFwiO3QuX19lc01vZHVsZT0hMDt2YXIgbj1mdW5jdGlvbigpe3JldHVyblshMSwhMSwhMV19LG89ZnVuY3Rpb24oKXtyZXR1cm4gZnVuY3Rpb24oZSl7dGhpcy5jbG9uZU5vZGVDYWxsYmFjaz1udWxsLHRoaXMuZXhwZXJpbWVudGFsRmVhdHVyZXM9bigpLHRoaXMudXNlV2ViRGVmYXVsdHM9ITEsdGhpcy51c2VMZWdhY3lTdHJldGNoQmVoYXZpb3VyPSExLHRoaXMuc2hvdWxkRGlmZkxheW91dFdpdGhvdXRMZWdhY3lTdHJldGNoQmVoYXZpb3VyPSExLHRoaXMucG9pbnRTY2FsZUZhY3Rvcj0xLHRoaXMubG9nZ2VyPWUsdGhpcy5jb250ZXh0PW51bGx9fSgpO3QuWUdDb25maWc9b30sZnVuY3Rpb24oZSx0LGkpe1widXNlIHN0cmljdFwiO3QuX19lc01vZHVsZT0hMDt2YXIgbj1pKDApLG89aSgyKSxyPWkoNCksYT1pKDMpLHM9aSgxKSxsPWZ1bmN0aW9uKCl7cmV0dXJuW3ZvaWQgMCx2b2lkIDBdfSx1PTE2O2Z1bmN0aW9uIGQoZSl7Zm9yKHZhciB0PVtdLGk9MDtpPGU7aSsrKXQucHVzaChuZXcgci5ZR0NhY2hlZE1lYXN1cmVtZW50KTtyZXR1cm4gdH12YXIgZz1mdW5jdGlvbigpe2Z1bmN0aW9uIGUoKXt0aGlzLmRpbWVuc2lvbnM9bCgpLHRoaXMuZGlyZWN0aW9uPW4uWUdEaXJlY3Rpb24uSW5oZXJpdCx0aGlzLmNvbXB1dGVkRmxleEJhc2lzR2VuZXJhdGlvbj0wLHRoaXMuY29tcHV0ZWRGbGV4QmFzaXM9bmV3IG8uWUdGbG9hdE9wdGlvbmFsLHRoaXMuaGFkT3ZlcmZsb3c9ITEsdGhpcy5nZW5lcmF0aW9uQ291bnQ9MCx0aGlzLmxhc3RPd25lckRpcmVjdGlvbj1uLllHRGlyZWN0aW9uLlJUTCx0aGlzLm5leHRDYWNoZWRNZWFzdXJlbWVudHNJbmRleD0wLHRoaXMubWVhc3VyZWREaW1lbnNpb25zPWwoKSx0aGlzLmNhY2hlZExheW91dD1uZXcgci5ZR0NhY2hlZE1lYXN1cmVtZW50LHRoaXMuZGlkVXNlTGVnYWN5RmxhZz0hMSx0aGlzLmRvZXNMZWdhY3lTdHJldGNoRmxhZ0FmZmVjdHNMYXlvdXQ9ITEsdGhpcy5wb3NpdGlvbj1bdm9pZCAwLHZvaWQgMCx2b2lkIDAsdm9pZCAwXSx0aGlzLm1hcmdpbj1bdm9pZCAwLHZvaWQgMCx2b2lkIDAsdm9pZCAwLHZvaWQgMCx2b2lkIDBdLHRoaXMuYm9yZGVyPVt2b2lkIDAsdm9pZCAwLHZvaWQgMCx2b2lkIDAsdm9pZCAwLHZvaWQgMF0sdGhpcy5wYWRkaW5nPVt2b2lkIDAsdm9pZCAwLHZvaWQgMCx2b2lkIDAsdm9pZCAwLHZvaWQgMF0sdGhpcy5jYWNoZWRNZWFzdXJlbWVudHM9ZCh1KX1yZXR1cm4gZS5wcm90b3R5cGUuZXF1YWw9ZnVuY3Rpb24oZSl7Zm9yKHZhciB0PWEuWUdGbG9hdEFycmF5RXF1YWwodGhpcy5wb3NpdGlvbixlLnBvc2l0aW9uKSYmYS5ZR0Zsb2F0QXJyYXlFcXVhbCh0aGlzLmRpbWVuc2lvbnMsZS5kaW1lbnNpb25zKSYmYS5ZR0Zsb2F0QXJyYXlFcXVhbCh0aGlzLm1hcmdpbixlLm1hcmdpbikmJmEuWUdGbG9hdEFycmF5RXF1YWwodGhpcy5ib3JkZXIsZS5ib3JkZXIpJiZhLllHRmxvYXRBcnJheUVxdWFsKHRoaXMucGFkZGluZyxlLnBhZGRpbmcpJiZ0aGlzLmRpcmVjdGlvbj09ZS5kaXJlY3Rpb24mJnRoaXMuaGFkT3ZlcmZsb3c9PWUuaGFkT3ZlcmZsb3cmJnRoaXMubGFzdE93bmVyRGlyZWN0aW9uPT1lLmxhc3RPd25lckRpcmVjdGlvbiYmdGhpcy5uZXh0Q2FjaGVkTWVhc3VyZW1lbnRzSW5kZXg9PWUubmV4dENhY2hlZE1lYXN1cmVtZW50c0luZGV4JiZ0aGlzLmNhY2hlZExheW91dD09ZS5jYWNoZWRMYXlvdXQmJnRoaXMuY29tcHV0ZWRGbGV4QmFzaXM9PWUuY29tcHV0ZWRGbGV4QmFzaXMsaT0wO2k8dSYmdDsrK2kpdD10JiZ0aGlzLmNhY2hlZE1lYXN1cmVtZW50c1tpXT09ZS5jYWNoZWRNZWFzdXJlbWVudHNbaV07cmV0dXJuIHMuWUdGbG9hdElzVW5kZWZpbmVkKHRoaXMubWVhc3VyZWREaW1lbnNpb25zWzBdKSYmcy5ZR0Zsb2F0SXNVbmRlZmluZWQoZS5tZWFzdXJlZERpbWVuc2lvbnNbMF0pfHwodD10JiZ0aGlzLm1lYXN1cmVkRGltZW5zaW9uc1swXT09ZS5tZWFzdXJlZERpbWVuc2lvbnNbMF0pLHMuWUdGbG9hdElzVW5kZWZpbmVkKHRoaXMubWVhc3VyZWREaW1lbnNpb25zWzFdKSYmcy5ZR0Zsb2F0SXNVbmRlZmluZWQoZS5tZWFzdXJlZERpbWVuc2lvbnNbMV0pfHwodD10JiZ0aGlzLm1lYXN1cmVkRGltZW5zaW9uc1sxXT09ZS5tZWFzdXJlZERpbWVuc2lvbnNbMV0pLHR9LGUucHJvdG90eXBlLmRpZmY9ZnVuY3Rpb24oZSl7cmV0dXJuIXRoaXMuZXF1YWwoZSl9LGUucHJvdG90eXBlLmNsZWFuPWZ1bmN0aW9uKCl7dGhpcy5kaW1lbnNpb25zPWwoKSx0aGlzLmRpcmVjdGlvbj1uLllHRGlyZWN0aW9uLkluaGVyaXQsdGhpcy5jb21wdXRlZEZsZXhCYXNpc0dlbmVyYXRpb249MCx0aGlzLmNvbXB1dGVkRmxleEJhc2lzPW5ldyBvLllHRmxvYXRPcHRpb25hbCx0aGlzLmhhZE92ZXJmbG93PSExLHRoaXMuZ2VuZXJhdGlvbkNvdW50PTAsdGhpcy5sYXN0T3duZXJEaXJlY3Rpb249bi5ZR0RpcmVjdGlvbi5SVEwsdGhpcy5uZXh0Q2FjaGVkTWVhc3VyZW1lbnRzSW5kZXg9MCx0aGlzLm1lYXN1cmVkRGltZW5zaW9ucz1sKCksdGhpcy5jYWNoZWRMYXlvdXQ9bmV3IHIuWUdDYWNoZWRNZWFzdXJlbWVudCx0aGlzLmRpZFVzZUxlZ2FjeUZsYWc9ITEsdGhpcy5kb2VzTGVnYWN5U3RyZXRjaEZsYWdBZmZlY3RzTGF5b3V0PSExLHRoaXMucG9zaXRpb249W3ZvaWQgMCx2b2lkIDAsdm9pZCAwLHZvaWQgMF0sdGhpcy5tYXJnaW49W3ZvaWQgMCx2b2lkIDAsdm9pZCAwLHZvaWQgMCx2b2lkIDAsdm9pZCAwXSx0aGlzLmJvcmRlcj1bdm9pZCAwLHZvaWQgMCx2b2lkIDAsdm9pZCAwLHZvaWQgMCx2b2lkIDBdLHRoaXMucGFkZGluZz1bdm9pZCAwLHZvaWQgMCx2b2lkIDAsdm9pZCAwLHZvaWQgMCx2b2lkIDBdLHRoaXMuY2FjaGVkTWVhc3VyZW1lbnRzPWQodSl9LGUucHJvdG90eXBlLmNsb25lPWZ1bmN0aW9uKCl7dmFyIHQ9bmV3IGU7cmV0dXJuIHQuZGltZW5zaW9ucz1bdGhpcy5kaW1lbnNpb25zWzBdLHRoaXMuZGltZW5zaW9uc1sxXV0sdC5kaXJlY3Rpb249dGhpcy5kaXJlY3Rpb24sdC5jb21wdXRlZEZsZXhCYXNpc0dlbmVyYXRpb249dGhpcy5jb21wdXRlZEZsZXhCYXNpc0dlbmVyYXRpb24sdC5jb21wdXRlZEZsZXhCYXNpcz10aGlzLmNvbXB1dGVkRmxleEJhc2lzLmNsb25lKCksdC5oYWRPdmVyZmxvdz10aGlzLmhhZE92ZXJmbG93LHQuZ2VuZXJhdGlvbkNvdW50PXRoaXMuZ2VuZXJhdGlvbkNvdW50LHQubGFzdE93bmVyRGlyZWN0aW9uPXRoaXMubGFzdE93bmVyRGlyZWN0aW9uLHQubmV4dENhY2hlZE1lYXN1cmVtZW50c0luZGV4PXRoaXMubmV4dENhY2hlZE1lYXN1cmVtZW50c0luZGV4LHQubWVhc3VyZWREaW1lbnNpb25zPVt0aGlzLm1lYXN1cmVkRGltZW5zaW9uc1swXSx0aGlzLm1lYXN1cmVkRGltZW5zaW9uc1sxXV0sdC5jYWNoZWRMYXlvdXQ9dGhpcy5jYWNoZWRMYXlvdXQuY2xvbmUoKSx0LmRpZFVzZUxlZ2FjeUZsYWc9dGhpcy5kaWRVc2VMZWdhY3lGbGFnLHQuZG9lc0xlZ2FjeVN0cmV0Y2hGbGFnQWZmZWN0c0xheW91dD10aGlzLmRvZXNMZWdhY3lTdHJldGNoRmxhZ0FmZmVjdHNMYXlvdXQsdC5wb3NpdGlvbj1bdGhpcy5wb3NpdGlvblswXSx0aGlzLnBvc2l0aW9uWzFdLHRoaXMucG9zaXRpb25bMl0sdGhpcy5wb3NpdGlvblszXV0sdC5tYXJnaW49W3RoaXMubWFyZ2luWzBdLHRoaXMubWFyZ2luWzFdLHRoaXMubWFyZ2luWzJdLHRoaXMubWFyZ2luWzNdLHRoaXMubWFyZ2luWzRdLHRoaXMubWFyZ2luWzVdXSx0LmJvcmRlcj1bdGhpcy5ib3JkZXJbMF0sdGhpcy5ib3JkZXJbMV0sdGhpcy5ib3JkZXJbMl0sdGhpcy5ib3JkZXJbM10sdGhpcy5ib3JkZXJbNF0sdGhpcy5ib3JkZXJbNV1dLHQucGFkZGluZz1bdGhpcy5wYWRkaW5nWzBdLHRoaXMucGFkZGluZ1sxXSx0aGlzLnBhZGRpbmdbMl0sdGhpcy5wYWRkaW5nWzNdLHRoaXMucGFkZGluZ1s0XSx0aGlzLnBhZGRpbmdbNV1dLHQuY2FjaGVkTWVhc3VyZW1lbnRzPWQodSksdH0sZX0oKTt0LllHTGF5b3V0PWd9LGZ1bmN0aW9uKGUsdCxpKXtcInVzZSBzdHJpY3RcIjt0Ll9fZXNNb2R1bGU9ITA7dmFyIG49ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKGUsdCl7dGhpcy52YWx1ZT1lLHRoaXMudW5pdD10fXJldHVybiBlLnByb3RvdHlwZS5jbG9uZT1mdW5jdGlvbigpe3JldHVybiBuZXcgZSh0aGlzLnZhbHVlLHRoaXMudW5pdCl9LGV9KCk7dC5ZR1ZhbHVlPW59LGZ1bmN0aW9uKGUsdCxpKXtcInVzZSBzdHJpY3RcIjt0Ll9fZXNNb2R1bGU9ITA7dmFyIG49aSgwKSxvPWkoMSkscj1pKDMpO3QuQUxJR05fQVVUTz1uLllHQWxpZ24uQXV0byx0LkFMSUdOX0ZMRVhfU1RBUlQ9bi5ZR0FsaWduLkZsZXhTdGFydCx0LkFMSUdOX0NFTlRFUj1uLllHQWxpZ24uQ2VudGVyLHQuQUxJR05fRkxFWF9FTkQ9bi5ZR0FsaWduLkZsZXhFbmQsdC5BTElHTl9TVFJFVENIPW4uWUdBbGlnbi5TdHJldGNoLHQuQUxJR05fQkFTRUxJTkU9bi5ZR0FsaWduLkJhc2VsaW5lLHQuQUxJR05fU1BBQ0VfQkVUV0VFTj1uLllHQWxpZ24uU3BhY2VCZXR3ZWVuLHQuQUxJR05fU1BBQ0VfQVJPVU5EPW4uWUdBbGlnbi5TcGFjZUFyb3VuZCx0LkRJTUVOU0lPTl9XSURUSD1uLllHRGltZW5zaW9uLldpZHRoLHQuRElNRU5TSU9OX0hFSUdIVD1uLllHRGltZW5zaW9uLkhlaWdodCx0LkRJUkVDVElPTl9JTkhFUklUPW4uWUdEaXJlY3Rpb24uSW5oZXJpdCx0LkRJUkVDVElPTl9MVFI9bi5ZR0RpcmVjdGlvbi5MVFIsdC5ESVJFQ1RJT05fUlRMPW4uWUdEaXJlY3Rpb24uUlRMLHQuRElTUExBWV9GTEVYPW4uWUdEaXNwbGF5LkZsZXgsdC5ESVNQTEFZX05PTkU9bi5ZR0Rpc3BsYXkuTm9uZSx0LkVER0VfTEVGVD1uLllHRWRnZS5MZWZ0LHQuRURHRV9UT1A9bi5ZR0VkZ2UuVG9wLHQuRURHRV9SSUdIVD1uLllHRWRnZS5SaWdodCx0LkVER0VfQk9UVE9NPW4uWUdFZGdlLkJvdHRvbSx0LkVER0VfU1RBUlQ9bi5ZR0VkZ2UuU3RhcnQsdC5FREdFX0VORD1uLllHRWRnZS5FbmQsdC5FREdFX0hPUklaT05UQUw9bi5ZR0VkZ2UuSG9yaXpvbnRhbCx0LkVER0VfVkVSVElDQUw9bi5ZR0VkZ2UuVmVydGljYWwsdC5FREdFX0FMTD1uLllHRWRnZS5BbGwsdC5FWFBFUklNRU5UQUxGRUFUVVJFX1dFQkZMRVhCQVNJUz1uLllHRXhwZXJpbWVudGFsRmVhdHVyZS5XZWJGbGV4QmFzaXMsdC5GTEVYX0RJUkVDVElPTl9DT0xVTU49bi5ZR0ZsZXhEaXJlY3Rpb24uQ29sdW1uLHQuRkxFWF9ESVJFQ1RJT05fQ09MVU1OX1JFVkVSU0U9bi5ZR0ZsZXhEaXJlY3Rpb24uQ29sdW1uUmV2ZXJzZSx0LkZMRVhfRElSRUNUSU9OX1JPVz1uLllHRmxleERpcmVjdGlvbi5Sb3csdC5GTEVYX0RJUkVDVElPTl9ST1dfUkVWRVJTRT1uLllHRmxleERpcmVjdGlvbi5Sb3dSZXZlcnNlLHQuSlVTVElGWV9GTEVYX1NUQVJUPW4uWUdKdXN0aWZ5LkZsZXhTdGFydCx0LkpVU1RJRllfQ0VOVEVSPW4uWUdKdXN0aWZ5LkNlbnRlcix0LkpVU1RJRllfRkxFWF9FTkQ9bi5ZR0p1c3RpZnkuRmxleEVuZCx0LkpVU1RJRllfU1BBQ0VfQkVUV0VFTj1uLllHSnVzdGlmeS5TcGFjZUJldHdlZW4sdC5KVVNUSUZZX1NQQUNFX0FST1VORD1uLllHSnVzdGlmeS5TcGFjZUFyb3VuZCx0LkpVU1RJRllfU1BBQ0VfRVZFTkxZPW4uWUdKdXN0aWZ5LlNwYWNlRXZlbmx5LHQuTE9HTEVWRUxfRVJST1I9bi5ZR0xvZ0xldmVsLkVycm9yLHQuTE9HTEVWRUxfV0FSTj1uLllHTG9nTGV2ZWwuV2Fybix0LkxPR0xFVkVMX0lORk89bi5ZR0xvZ0xldmVsLkluZm8sdC5MT0dMRVZFTF9ERUJVRz1uLllHTG9nTGV2ZWwuRGVidWcsdC5MT0dMRVZFTF9WRVJCT1NFPW4uWUdMb2dMZXZlbC5WZXJib3NlLHQuTE9HTEVWRUxfRkFUQUw9bi5ZR0xvZ0xldmVsLkZhdGFsLHQuTUVBU1VSRV9NT0RFX1VOREVGSU5FRD1uLllHTWVhc3VyZU1vZGUuVW5kZWZpbmVkLHQuTUVBU1VSRV9NT0RFX0VYQUNUTFk9bi5ZR01lYXN1cmVNb2RlLkV4YWN0bHksdC5NRUFTVVJFX01PREVfQVRfTU9TVD1uLllHTWVhc3VyZU1vZGUuQXRNb3N0LHQuTk9ERV9UWVBFX0RFRkFVTFQ9bi5ZR05vZGVUeXBlLkRlZmF1bHQsdC5OT0RFX1RZUEVfVEVYVD1uLllHTm9kZVR5cGUuVGV4dCx0Lk9WRVJGTE9XX1ZJU0lCTEU9bi5ZR092ZXJmbG93LlZpc2libGUsdC5PVkVSRkxPV19ISURERU49bi5ZR092ZXJmbG93LkhpZGRlbix0Lk9WRVJGTE9XX1NDUk9MTD1uLllHT3ZlcmZsb3cuU2Nyb2xsLHQuUE9TSVRJT05fVFlQRV9SRUxBVElWRT1uLllHUG9zaXRpb25UeXBlLlJlbGF0aXZlLHQuUE9TSVRJT05fVFlQRV9BQlNPTFVURT1uLllHUG9zaXRpb25UeXBlLkFic29sdXRlLHQuVU5JVF9VTkRFRklORUQ9bi5ZR1VuaXQuVW5kZWZpbmVkLHQuVU5JVF9QT0lOVD1uLllHVW5pdC5Qb2ludCx0LlVOSVRfUEVSQ0VOVD1uLllHVW5pdC5QZXJjZW50LHQuVU5JVF9BVVRPPW4uWUdVbml0LkF1dG8sdC5XUkFQX05PX1dSQVA9bi5ZR1dyYXAuTm9XcmFwLHQuV1JBUF9XUkFQPW4uWUdXcmFwLldyYXAsdC5XUkFQX1dSQVBfUkVWRVJTRT1uLllHV3JhcC5XcmFwUmV2ZXJzZSx0LlVOREVGSU5FRD12b2lkIDA7dmFyIGE9ZnVuY3Rpb24oKXtyZXR1cm4gZnVuY3Rpb24oKXt9fSgpO3QuTGF5b3V0PWE7dmFyIHM9ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKGUsdCl7ZT8odGhpcy53aWR0aD1lLHRoaXMuaGVpZ2h0PXQpOih0aGlzLndpZHRoPTAsdGhpcy5oZWlnaHQ9MCl9cmV0dXJuIGUuZnJvbUpTPWZ1bmN0aW9uKHQpe3JldHVybiBuZXcgZSh0LndpZHRoLHQuaGVpZ2h0KX0sZX0oKTt0LlNpemU9czt2YXIgbD1mdW5jdGlvbigpe3JldHVybiBmdW5jdGlvbihlLHQpe2U/KHRoaXMudW5pdD1lLHRoaXMudmFsdWU9dCk6KHRoaXMudW5pdD1uLllHVW5pdC5VbmRlZmluZWQsdGhpcy52YWx1ZT0wKX19KCk7dC5WYWx1ZT1sO3ZhciB1PWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZSgpe3RoaXMuY29uZmlnPW8uWUdDb25maWdOZXcoKX1yZXR1cm4gZS5jcmVhdGU9ZnVuY3Rpb24oKXtyZXR1cm4gbmV3IGV9LGUucHJvdG90eXBlLmZyZWU9ZnVuY3Rpb24oKXtvLllHQ29uZmlnRnJlZSh0aGlzLmNvbmZpZyl9LGUucHJvdG90eXBlLnNldEV4cGVyaW1lbnRhbEZlYXR1cmVFbmFibGVkPWZ1bmN0aW9uKGUsdCl7by5ZR0NvbmZpZ1NldEV4cGVyaW1lbnRhbEZlYXR1cmVFbmFibGVkKHRoaXMuY29uZmlnLGUsdCl9LGUucHJvdG90eXBlLnNldFBvaW50U2NhbGVGYWN0b3I9ZnVuY3Rpb24oZSl7by5ZR0NvbmZpZ1NldFBvaW50U2NhbGVGYWN0b3IodGhpcy5jb25maWcsZSl9LGUucHJvdG90eXBlLmlzRXhwZXJpbWVudGFsRmVhdHVyZUVuYWJsZWQ9ZnVuY3Rpb24oZSl7by5ZR0NvbmZpZ0lzRXhwZXJpbWVudGFsRmVhdHVyZUVuYWJsZWQodGhpcy5jb25maWcsZSl9LGV9KCk7ZnVuY3Rpb24gZChlKXtyZXR1cm4gby5ZR05vZGVHZXRDb250ZXh0KGUpfWZ1bmN0aW9uIGcoZSl7cmV0dXJuIG5ldyBsKGUudW5pdCxlLnZhbHVlKX10LkNvbmZpZz11O3ZhciBHPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZShlKXt0aGlzLm5vZGU9ZT9vLllHTm9kZU5ld1dpdGhDb25maWcoZS5jb25maWcpOm8uWUdOb2RlTmV3KCksby5ZR05vZGVTZXRDb250ZXh0KHRoaXMubm9kZSx0aGlzKX1yZXR1cm4gZS5jcmVhdGU9ZnVuY3Rpb24odCl7cmV0dXJuIHQ/bmV3IGUodCk6bmV3IGV9LGUuY3JlYXRlRGVmYXVsdD1mdW5jdGlvbigpe3JldHVybiBuZXcgZSh2b2lkIDApfSxlLmNyZWF0ZVdpdGhDb25maWc9ZnVuY3Rpb24odCl7cmV0dXJuIG5ldyBlKHQpfSxlLnByb3RvdHlwZS5jYWxjdWxhdGVMYXlvdXQ9ZnVuY3Rpb24oZSx0LGkpe28uWUdOb2RlQ2FsY3VsYXRlTGF5b3V0KHRoaXMubm9kZSxlLHQsaSl9LGUucHJvdG90eXBlLmNvcHlTdHlsZT1mdW5jdGlvbihlKXtvLllHTm9kZUNvcHlTdHlsZSh0aGlzLm5vZGUsZSl9LGUucHJvdG90eXBlLmZyZWU9ZnVuY3Rpb24oKXtvLllHTm9kZUZyZWUodGhpcy5ub2RlKX0sZS5wcm90b3R5cGUuZnJlZVJlY3Vyc2l2ZT1mdW5jdGlvbigpe28uWUdOb2RlRnJlZVJlY3Vyc2l2ZSh0aGlzLm5vZGUpfSxlLnByb3RvdHlwZS5nZXRBbGlnbkNvbnRlbnQ9ZnVuY3Rpb24oKXtyZXR1cm4gby5ZR05vZGVTdHlsZUdldEFsaWduQ29udGVudCh0aGlzLm5vZGUpfSxlLnByb3RvdHlwZS5nZXRBbGlnbkl0ZW1zPWZ1bmN0aW9uKCl7cmV0dXJuIG8uWUdOb2RlU3R5bGVHZXRBbGlnbkl0ZW1zKHRoaXMubm9kZSl9LGUucHJvdG90eXBlLmdldEFsaWduU2VsZj1mdW5jdGlvbigpe3JldHVybiBvLllHTm9kZVN0eWxlR2V0QWxpZ25TZWxmKHRoaXMubm9kZSl9LGUucHJvdG90eXBlLmdldEFzcGVjdFJhdGlvPWZ1bmN0aW9uKCl7cmV0dXJuIG8uWUdOb2RlU3R5bGVHZXRBc3BlY3RSYXRpbyh0aGlzLm5vZGUpfSxlLnByb3RvdHlwZS5nZXRCb3JkZXI9ZnVuY3Rpb24oZSl7cmV0dXJuIG8uWUdOb2RlU3R5bGVHZXRCb3JkZXIodGhpcy5ub2RlLGUpfSxlLnByb3RvdHlwZS5nZXRDaGlsZD1mdW5jdGlvbihlKXtyZXR1cm4gZChvLllHTm9kZUdldENoaWxkKHRoaXMubm9kZSxlKSl9LGUucHJvdG90eXBlLmdldENoaWxkQ291bnQ9ZnVuY3Rpb24oKXtyZXR1cm4gby5ZR05vZGVHZXRDaGlsZENvdW50KHRoaXMubm9kZSl9LGUucHJvdG90eXBlLmdldENvbXB1dGVkQm9yZGVyPWZ1bmN0aW9uKGUpe3JldHVybiBvLllHTm9kZUxheW91dEdldEJvcmRlcih0aGlzLm5vZGUsZSl9LGUucHJvdG90eXBlLmdldENvbXB1dGVkQm90dG9tPWZ1bmN0aW9uKCl7cmV0dXJuIG8uWUdOb2RlTGF5b3V0R2V0Qm90dG9tKHRoaXMubm9kZSl9LGUucHJvdG90eXBlLmdldENvbXB1dGVkSGVpZ2h0PWZ1bmN0aW9uKCl7cmV0dXJuIHIuWUdGbG9hdFNhbml0aXplKG8uWUdOb2RlTGF5b3V0R2V0SGVpZ2h0KHRoaXMubm9kZSkpfSxlLnByb3RvdHlwZS5nZXRDb21wdXRlZExheW91dD1mdW5jdGlvbigpe3ZhciBlPW5ldyBhO3JldHVybiBlLmxlZnQ9by5ZR05vZGVMYXlvdXRHZXRMZWZ0KHRoaXMubm9kZSksZS5yaWdodD1vLllHTm9kZUxheW91dEdldFJpZ2h0KHRoaXMubm9kZSksZS50b3A9by5ZR05vZGVMYXlvdXRHZXRUb3AodGhpcy5ub2RlKSxlLmJvdHRvbT1vLllHTm9kZUxheW91dEdldEJvdHRvbSh0aGlzLm5vZGUpLGUud2lkdGg9by5ZR05vZGVMYXlvdXRHZXRXaWR0aCh0aGlzLm5vZGUpLGUuaGVpZ2h0PW8uWUdOb2RlTGF5b3V0R2V0SGVpZ2h0KHRoaXMubm9kZSksZX0sZS5wcm90b3R5cGUuZ2V0Q29tcHV0ZWRMZWZ0PWZ1bmN0aW9uKCl7cmV0dXJuIHIuWUdGbG9hdFNhbml0aXplKG8uWUdOb2RlTGF5b3V0R2V0TGVmdCh0aGlzLm5vZGUpKX0sZS5wcm90b3R5cGUuZ2V0Q29tcHV0ZWRNYXJnaW49ZnVuY3Rpb24oZSl7cmV0dXJuIHIuWUdGbG9hdFNhbml0aXplKG8uWUdOb2RlTGF5b3V0R2V0TWFyZ2luKHRoaXMubm9kZSxlKSl9LGUucHJvdG90eXBlLmdldENvbXB1dGVkUGFkZGluZz1mdW5jdGlvbihlKXtyZXR1cm4gci5ZR0Zsb2F0U2FuaXRpemUoby5ZR05vZGVMYXlvdXRHZXRQYWRkaW5nKHRoaXMubm9kZSxlKSl9LGUucHJvdG90eXBlLmdldENvbXB1dGVkUmlnaHQ9ZnVuY3Rpb24oKXtyZXR1cm4gci5ZR0Zsb2F0U2FuaXRpemUoby5ZR05vZGVMYXlvdXRHZXRSaWdodCh0aGlzLm5vZGUpKX0sZS5wcm90b3R5cGUuZ2V0Q29tcHV0ZWRUb3A9ZnVuY3Rpb24oKXtyZXR1cm4gci5ZR0Zsb2F0U2FuaXRpemUoby5ZR05vZGVMYXlvdXRHZXRUb3AodGhpcy5ub2RlKSl9LGUucHJvdG90eXBlLmdldENvbXB1dGVkV2lkdGg9ZnVuY3Rpb24oKXtyZXR1cm4gci5ZR0Zsb2F0U2FuaXRpemUoby5ZR05vZGVMYXlvdXRHZXRXaWR0aCh0aGlzLm5vZGUpKX0sZS5wcm90b3R5cGUuZ2V0RGlzcGxheT1mdW5jdGlvbigpe3JldHVybiBvLllHTm9kZVN0eWxlR2V0RGlzcGxheSh0aGlzLm5vZGUpfSxlLnByb3RvdHlwZS5nZXRGbGV4QmFzaXM9ZnVuY3Rpb24oKXtyZXR1cm4gZyhvLllHTm9kZVN0eWxlR2V0RmxleEJhc2lzKHRoaXMubm9kZSkpfSxlLnByb3RvdHlwZS5nZXRGbGV4RGlyZWN0aW9uPWZ1bmN0aW9uKCl7cmV0dXJuIG8uWUdOb2RlU3R5bGVHZXRGbGV4RGlyZWN0aW9uKHRoaXMubm9kZSl9LGUucHJvdG90eXBlLmdldEZsZXhHcm93PWZ1bmN0aW9uKCl7cmV0dXJuIG8uWUdOb2RlU3R5bGVHZXRGbGV4R3Jvdyh0aGlzLm5vZGUpfSxlLnByb3RvdHlwZS5nZXRGbGV4U2hyaW5rPWZ1bmN0aW9uKCl7cmV0dXJuIG8uWUdOb2RlU3R5bGVHZXRGbGV4U2hyaW5rKHRoaXMubm9kZSl9LGUucHJvdG90eXBlLmdldEZsZXhXcmFwPWZ1bmN0aW9uKCl7cmV0dXJuIG8uWUdOb2RlU3R5bGVHZXRGbGV4V3JhcCh0aGlzLm5vZGUpfSxlLnByb3RvdHlwZS5nZXRIZWlnaHQ9ZnVuY3Rpb24oKXtyZXR1cm4gZyhvLllHTm9kZVN0eWxlR2V0SGVpZ2h0KHRoaXMubm9kZSkpfSxlLnByb3RvdHlwZS5nZXRKdXN0aWZ5Q29udGVudD1mdW5jdGlvbigpe3JldHVybiBvLllHTm9kZVN0eWxlR2V0SnVzdGlmeUNvbnRlbnQodGhpcy5ub2RlKX0sZS5wcm90b3R5cGUuZ2V0TWFyZ2luPWZ1bmN0aW9uKGUpe3JldHVybiBnKG8uWUdOb2RlU3R5bGVHZXRNYXJnaW4odGhpcy5ub2RlLGUpKX0sZS5wcm90b3R5cGUuZ2V0TWF4SGVpZ2h0PWZ1bmN0aW9uKCl7cmV0dXJuIGcoby5ZR05vZGVTdHlsZUdldE1heEhlaWdodCh0aGlzLm5vZGUpKX0sZS5wcm90b3R5cGUuZ2V0TWF4V2lkdGg9ZnVuY3Rpb24oKXtyZXR1cm4gZyhvLllHTm9kZVN0eWxlR2V0TWF4V2lkdGgodGhpcy5ub2RlKSl9LGUucHJvdG90eXBlLmdldE1pbkhlaWdodD1mdW5jdGlvbigpe3JldHVybiBnKG8uWUdOb2RlU3R5bGVHZXRNaW5IZWlnaHQodGhpcy5ub2RlKSl9LGUucHJvdG90eXBlLmdldE1pbldpZHRoPWZ1bmN0aW9uKCl7cmV0dXJuIGcoby5ZR05vZGVTdHlsZUdldE1pbldpZHRoKHRoaXMubm9kZSkpfSxlLnByb3RvdHlwZS5nZXRPdmVyZmxvdz1mdW5jdGlvbigpe3JldHVybiBvLllHTm9kZVN0eWxlR2V0T3ZlcmZsb3codGhpcy5ub2RlKX0sZS5wcm90b3R5cGUuZ2V0UGFkZGluZz1mdW5jdGlvbihlKXtyZXR1cm4gZyhvLllHTm9kZVN0eWxlR2V0UGFkZGluZyh0aGlzLm5vZGUsZSkpfSxlLnByb3RvdHlwZS5nZXRQYXJlbnQ9ZnVuY3Rpb24oKXt2YXIgZT1vLllHTm9kZUdldFBhcmVudCh0aGlzLm5vZGUpO2lmKGUpcmV0dXJuIGQoZSl9LGUucHJvdG90eXBlLmdldFBvc2l0aW9uPWZ1bmN0aW9uKGUpe3JldHVybiBnKG8uWUdOb2RlU3R5bGVHZXRQb3NpdGlvbih0aGlzLm5vZGUsZSkpfSxlLnByb3RvdHlwZS5nZXRQb3NpdGlvblR5cGU9ZnVuY3Rpb24oKXtyZXR1cm4gby5ZR05vZGVTdHlsZUdldFBvc2l0aW9uVHlwZSh0aGlzLm5vZGUpfSxlLnByb3RvdHlwZS5nZXRXaWR0aD1mdW5jdGlvbigpe3JldHVybiBnKG8uWUdOb2RlU3R5bGVHZXRXaWR0aCh0aGlzLm5vZGUpKX0sZS5wcm90b3R5cGUuaW5zZXJ0Q2hpbGQ9ZnVuY3Rpb24oZSx0KXtvLllHTm9kZUluc2VydENoaWxkKHRoaXMubm9kZSxlLm5vZGUsdCl9LGUucHJvdG90eXBlLmlzRGlydHk9ZnVuY3Rpb24oKXtyZXR1cm4gby5ZR05vZGVJc0RpcnR5KHRoaXMubm9kZSl9LGUucHJvdG90eXBlLm1hcmtEaXJ0eT1mdW5jdGlvbigpe28uWUdOb2RlTWFya0RpcnR5KHRoaXMubm9kZSl9LGUucHJvdG90eXBlLnJlbW92ZUNoaWxkPWZ1bmN0aW9uKGUpe28uWUdOb2RlUmVtb3ZlQ2hpbGQodGhpcy5ub2RlLGUubm9kZSl9LGUucHJvdG90eXBlLnJlc2V0PWZ1bmN0aW9uKCl7by5ZR05vZGVSZXNldCh0aGlzLm5vZGUpfSxlLnByb3RvdHlwZS5zZXRBbGlnbkNvbnRlbnQ9ZnVuY3Rpb24oZSl7by5ZR05vZGVTdHlsZVNldEFsaWduQ29udGVudCh0aGlzLm5vZGUsZSl9LGUucHJvdG90eXBlLnNldEFsaWduSXRlbXM9ZnVuY3Rpb24oZSl7by5ZR05vZGVTdHlsZVNldEFsaWduSXRlbXModGhpcy5ub2RlLGUpfSxlLnByb3RvdHlwZS5zZXRBbGlnblNlbGY9ZnVuY3Rpb24oZSl7by5ZR05vZGVTdHlsZVNldEFsaWduU2VsZih0aGlzLm5vZGUsZSl9LGUucHJvdG90eXBlLnNldEFzcGVjdFJhdGlvPWZ1bmN0aW9uKGUpe28uWUdOb2RlU3R5bGVTZXRBc3BlY3RSYXRpbyh0aGlzLm5vZGUsZSl9LGUucHJvdG90eXBlLnNldEJvcmRlcj1mdW5jdGlvbihlLHQpe28uWUdOb2RlU3R5bGVTZXRCb3JkZXIodGhpcy5ub2RlLGUsdCl9LGUucHJvdG90eXBlLnNldERpc3BsYXk9ZnVuY3Rpb24oZSl7by5ZR05vZGVTdHlsZVNldERpc3BsYXkodGhpcy5ub2RlLGUpfSxlLnByb3RvdHlwZS5zZXRGbGV4PWZ1bmN0aW9uKGUpe28uWUdOb2RlU3R5bGVTZXRGbGV4KHRoaXMubm9kZSxlKX0sZS5wcm90b3R5cGUuc2V0RmxleEJhc2lzPWZ1bmN0aW9uKGUpe2lmKFwic3RyaW5nXCI9PXR5cGVvZiBlKXtpZihcIiVcIiE9PWVbZS5sZW5ndGgtMV0pdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBpbnB1dCB0eXBlXCIpO3RoaXMuc2V0RmxleEJhc2lzUGVyY2VudChwYXJzZUZsb2F0KGUpKX1lbHNlIG8uWUdOb2RlU3R5bGVTZXRGbGV4QmFzaXModGhpcy5ub2RlLGUpfSxlLnByb3RvdHlwZS5zZXRGbGV4QmFzaXNQZXJjZW50PWZ1bmN0aW9uKGUpe28uWUdOb2RlU3R5bGVTZXRGbGV4QmFzaXNQZXJjZW50KHRoaXMubm9kZSxlKX0sZS5wcm90b3R5cGUuc2V0RmxleERpcmVjdGlvbj1mdW5jdGlvbihlKXtvLllHTm9kZVN0eWxlU2V0RmxleERpcmVjdGlvbih0aGlzLm5vZGUsZSl9LGUucHJvdG90eXBlLnNldEZsZXhHcm93PWZ1bmN0aW9uKGUpe28uWUdOb2RlU3R5bGVTZXRGbGV4R3Jvdyh0aGlzLm5vZGUsZSl9LGUucHJvdG90eXBlLnNldEZsZXhTaHJpbms9ZnVuY3Rpb24oZSl7by5ZR05vZGVTdHlsZVNldEZsZXhTaHJpbmsodGhpcy5ub2RlLGUpfSxlLnByb3RvdHlwZS5zZXRGbGV4V3JhcD1mdW5jdGlvbihlKXtvLllHTm9kZVN0eWxlU2V0RmxleFdyYXAodGhpcy5ub2RlLGUpfSxlLnByb3RvdHlwZS5zZXRIZWlnaHQ9ZnVuY3Rpb24oZSl7aWYoXCJzdHJpbmdcIj09dHlwZW9mIGUpaWYoXCJhdXRvXCI9PT1lKXRoaXMuc2V0SGVpZ2h0QXV0bygpO2Vsc2V7aWYoXCIlXCIhPT1lW2UubGVuZ3RoLTFdKXRocm93IG5ldyBFcnJvcihcIkludmFsaWQgaW5wdXQgdHlwZS5cIik7dGhpcy5zZXRIZWlnaHRQZXJjZW50KHBhcnNlRmxvYXQoZSkpfWVsc2Ugby5ZR05vZGVTdHlsZVNldEhlaWdodCh0aGlzLm5vZGUsZSl9LGUucHJvdG90eXBlLnNldEhlaWdodEF1dG89ZnVuY3Rpb24oKXtvLllHTm9kZVN0eWxlU2V0SGVpZ2h0QXV0byh0aGlzLm5vZGUpfSxlLnByb3RvdHlwZS5zZXRIZWlnaHRQZXJjZW50PWZ1bmN0aW9uKGUpe28uWUdOb2RlU3R5bGVTZXRIZWlnaHRQZXJjZW50KHRoaXMubm9kZSxlKX0sZS5wcm90b3R5cGUuc2V0SnVzdGlmeUNvbnRlbnQ9ZnVuY3Rpb24oZSl7by5ZR05vZGVTdHlsZVNldEp1c3RpZnlDb250ZW50KHRoaXMubm9kZSxlKX0sZS5wcm90b3R5cGUuc2V0TWFyZ2luPWZ1bmN0aW9uKGUsdCl7aWYoXCJzdHJpbmdcIj09dHlwZW9mIHQpaWYoXCJhdXRvXCI9PT10KXRoaXMuc2V0TWFyZ2luQXV0byhlKTtlbHNle2lmKFwiJVwiIT09dFt0Lmxlbmd0aC0xXSl0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIGlucHV0IHR5cGUuXCIpO3RoaXMuc2V0TWFyZ2luUGVyY2VudChlLHBhcnNlRmxvYXQodCkpfWVsc2Ugby5ZR05vZGVTdHlsZVNldE1hcmdpbih0aGlzLm5vZGUsZSx0KX0sZS5wcm90b3R5cGUuc2V0TWFyZ2luQXV0bz1mdW5jdGlvbihlKXtvLllHTm9kZVN0eWxlU2V0TWFyZ2luQXV0byh0aGlzLm5vZGUsZSl9LGUucHJvdG90eXBlLnNldE1hcmdpblBlcmNlbnQ9ZnVuY3Rpb24oZSx0KXtvLllHTm9kZVN0eWxlU2V0TWFyZ2luUGVyY2VudCh0aGlzLm5vZGUsZSx0KX0sZS5wcm90b3R5cGUuc2V0TWF4SGVpZ2h0PWZ1bmN0aW9uKGUpe2lmKFwic3RyaW5nXCI9PXR5cGVvZiBlKXtpZihcIiVcIiE9PWVbZS5sZW5ndGgtMV0pdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBpbnB1dCB0eXBlLlwiKTt0aGlzLnNldE1heEhlaWdodFBlcmNlbnQocGFyc2VGbG9hdChlKSl9ZWxzZSBvLllHTm9kZVN0eWxlU2V0TWF4SGVpZ2h0KHRoaXMubm9kZSxlKX0sZS5wcm90b3R5cGUuc2V0TWF4SGVpZ2h0UGVyY2VudD1mdW5jdGlvbihlKXtvLllHTm9kZVN0eWxlU2V0TWF4SGVpZ2h0UGVyY2VudCh0aGlzLm5vZGUsZSl9LGUucHJvdG90eXBlLnNldE1heFdpZHRoPWZ1bmN0aW9uKGUpe2lmKFwic3RyaW5nXCI9PXR5cGVvZiBlKXtpZihcIiVcIiE9PWVbZS5sZW5ndGgtMV0pdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBpbnB1dCB0eXBlLlwiKTt0aGlzLnNldE1heFdpZHRoUGVyY2VudChwYXJzZUZsb2F0KGUpKX1lbHNlIG8uWUdOb2RlU3R5bGVTZXRNYXhXaWR0aCh0aGlzLm5vZGUsZSl9LGUucHJvdG90eXBlLnNldE1heFdpZHRoUGVyY2VudD1mdW5jdGlvbihlKXtvLllHTm9kZVN0eWxlU2V0TWF4V2lkdGhQZXJjZW50KHRoaXMubm9kZSxlKX0sZS5wcm90b3R5cGUuc2V0TWVhc3VyZUZ1bmM9ZnVuY3Rpb24oZSl7bnVsbD09ZT90aGlzLnVuc2V0TWVhc3VyZUZ1bmMoKTpvLllHTm9kZVNldE1lYXN1cmVGdW5jKHRoaXMubm9kZSxlKX0sZS5wcm90b3R5cGUudW5zZXRNZWFzdXJlRnVuYz1mdW5jdGlvbigpe28uWUdOb2RlU2V0TWVhc3VyZUZ1bmModGhpcy5ub2RlLG51bGwpfSxlLnByb3RvdHlwZS5zZXRNaW5IZWlnaHQ9ZnVuY3Rpb24oZSl7aWYoXCJzdHJpbmdcIj09dHlwZW9mIGUpe2lmKFwiJVwiIT09ZVtlLmxlbmd0aC0xXSl0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIGlucHV0IHR5cGUuXCIpO3RoaXMuc2V0TWluSGVpZ2h0UGVyY2VudChwYXJzZUZsb2F0KGUpKX1lbHNlIG8uWUdOb2RlU3R5bGVTZXRNaW5IZWlnaHQodGhpcy5ub2RlLGUpfSxlLnByb3RvdHlwZS5zZXRNaW5IZWlnaHRQZXJjZW50PWZ1bmN0aW9uKGUpe28uWUdOb2RlU3R5bGVTZXRNaW5IZWlnaHRQZXJjZW50KHRoaXMubm9kZSxlKX0sZS5wcm90b3R5cGUuc2V0TWluV2lkdGg9ZnVuY3Rpb24oZSl7aWYoXCJzdHJpbmdcIj09dHlwZW9mIGUpe2lmKFwiJVwiIT09ZVtlLmxlbmd0aC0xXSl0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIGlucHV0IHR5cGUuXCIpO3RoaXMuc2V0TWluV2lkdGhQZXJjZW50KHBhcnNlRmxvYXQoZSkpfWVsc2Ugby5ZR05vZGVTdHlsZVNldE1pbldpZHRoKHRoaXMubm9kZSxlKX0sZS5wcm90b3R5cGUuc2V0TWluV2lkdGhQZXJjZW50PWZ1bmN0aW9uKGUpe28uWUdOb2RlU3R5bGVTZXRNaW5XaWR0aFBlcmNlbnQodGhpcy5ub2RlLGUpfSxlLnByb3RvdHlwZS5zZXRPdmVyZmxvdz1mdW5jdGlvbihlKXtvLllHTm9kZVN0eWxlU2V0T3ZlcmZsb3codGhpcy5ub2RlLGUpfSxlLnByb3RvdHlwZS5zZXRQYWRkaW5nPWZ1bmN0aW9uKGUsdCl7aWYoXCJzdHJpbmdcIj09dHlwZW9mIHQpe2lmKFwiJVwiIT09dFt0Lmxlbmd0aC0xXSl0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIGlucHV0IHR5cGUuXCIpO3RoaXMuc2V0UGFkZGluZ1BlcmNlbnQoZSxwYXJzZUZsb2F0KHQpKX1lbHNlIG8uWUdOb2RlU3R5bGVTZXRQYWRkaW5nKHRoaXMubm9kZSxlLHQpfSxlLnByb3RvdHlwZS5zZXRQYWRkaW5nUGVyY2VudD1mdW5jdGlvbihlLHQpe28uWUdOb2RlU3R5bGVTZXRQYWRkaW5nUGVyY2VudCh0aGlzLm5vZGUsZSx0KX0sZS5wcm90b3R5cGUuc2V0UG9zaXRpb249ZnVuY3Rpb24oZSx0KXtpZihcInN0cmluZ1wiPT10eXBlb2YgdCl7aWYoXCIlXCIhPT10W3QubGVuZ3RoLTFdKXRocm93IG5ldyBFcnJvcihcIkludmFsaWQgaW5wdXQgdHlwZS5cIik7dGhpcy5zZXRQb3NpdGlvblBlcmNlbnQoZSxwYXJzZUZsb2F0KHQpKX1lbHNlIG8uWUdOb2RlU3R5bGVTZXRQb3NpdGlvbih0aGlzLm5vZGUsZSx0KX0sZS5wcm90b3R5cGUuc2V0UG9zaXRpb25QZXJjZW50PWZ1bmN0aW9uKGUsdCl7by5ZR05vZGVTdHlsZVNldFBvc2l0aW9uUGVyY2VudCh0aGlzLm5vZGUsZSx0KX0sZS5wcm90b3R5cGUuc2V0UG9zaXRpb25UeXBlPWZ1bmN0aW9uKGUpe28uWUdOb2RlU3R5bGVTZXRQb3NpdGlvblR5cGUodGhpcy5ub2RlLGUpfSxlLnByb3RvdHlwZS5zZXRXaWR0aD1mdW5jdGlvbihlKXtpZihcInN0cmluZ1wiPT10eXBlb2YgZSlpZihcIiVcIj09PWVbZS5sZW5ndGgtMV0pdGhpcy5zZXRXaWR0aFBlcmNlbnQocGFyc2VGbG9hdChlKSk7ZWxzZXtpZihcImF1dG9cIiE9PWUpdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBpbnB1dCB0eXBlLlwiKTt0aGlzLnNldFdpZHRoQXV0bygpfWVsc2Ugby5ZR05vZGVTdHlsZVNldFdpZHRoKHRoaXMubm9kZSxlKX0sZS5wcm90b3R5cGUuc2V0V2lkdGhBdXRvPWZ1bmN0aW9uKCl7by5ZR05vZGVTdHlsZVNldFdpZHRoQXV0byh0aGlzLm5vZGUpfSxlLnByb3RvdHlwZS5zZXRXaWR0aFBlcmNlbnQ9ZnVuY3Rpb24oZSl7by5ZR05vZGVTdHlsZVNldFdpZHRoUGVyY2VudCh0aGlzLm5vZGUsZSl9LGUucHJvdG90eXBlLnVuc2V0TWVhc3VyZUZ1bj1mdW5jdGlvbigpe28uWUdOb2RlU2V0TWVhc3VyZUZ1bmModGhpcy5ub2RlLHZvaWQgMCl9LGV9KCk7dC5Ob2RlPUcsdC5nZXRJbnN0YW5jZUNvdW50PWZ1bmN0aW9uKCl7cmV0dXJuIG8uWUdOb2RlR2V0SW5zdGFuY2VDb3VudCgpfX0sZnVuY3Rpb24oZSx0LGkpe1widXNlIHN0cmljdFwiO3QuX19lc01vZHVsZT0hMDt2YXIgbj1pKDApLG89aSgyKSxyPWkoNSksYT1pKDMpLHM9aSg2KSxsPWkoMTApLHU9aSg0KSxkPWkoMSksZz1mdW5jdGlvbigpe2Z1bmN0aW9uIGUodCxpLG8sYSx1LGcsRyxjLFksZix5LGgscCxtLFMpe2lmKHZvaWQgMD09PXQmJih0PW51bGwpLHZvaWQgMD09PWkmJihpPW51bGwpLHZvaWQgMD09PW8mJihvPSEwKSx2b2lkIDA9PT1hJiYoYT1uLllHTm9kZVR5cGUuRGVmYXVsdCksdm9pZCAwPT09dSYmKHU9bnVsbCksdm9pZCAwPT09ZyYmKGc9bnVsbCksdm9pZCAwPT09RyYmKEc9bnVsbCksdm9pZCAwPT09YyYmKGM9bmV3IGwuWUdTdHlsZSksdm9pZCAwPT09WSYmKFk9bmV3IHMuWUdMYXlvdXQpLHZvaWQgMD09PWYmJihmPTApLHZvaWQgMD09PXkmJih5PW51bGwpLHZvaWQgMD09PWgmJihoPVtdKSx2b2lkIDA9PT1wJiYocD1udWxsKSx2b2lkIDA9PT1tJiYobT0hMSksdm9pZCAwPT09UyYmKFM9W2QuWUdWYWx1ZVVuZGVmaW5lZCgpLGQuWUdWYWx1ZVVuZGVmaW5lZCgpXSksdCBpbnN0YW5jZW9mIGUpcmV0dXJuIGNvbnNvbGUubG9nKFwiZnJvbSBub2RlXCIpLHZvaWQgdGhpcy5mcm9tTm9kZSh0KTt0aGlzLnByaW50Xz1pLHRoaXMuaGFzTmV3TGF5b3V0Xz1vLHRoaXMubm9kZVR5cGVfPWEsdGhpcy5tZWFzdXJlXz11LHRoaXMuYmFzZWxpbmVfPWcsdGhpcy5kaXJ0aWVkXz1HLHRoaXMuc3R5bGVfPWMsdGhpcy5sYXlvdXRfPVksdGhpcy5saW5lSW5kZXhfPWYsdGhpcy5vd25lcl89eSx0aGlzLmNoaWxkcmVuXz1oLHRoaXMuY29uZmlnXz1wLHRoaXMuaXNEaXJ0eV89bSx0aGlzLnJlc29sdmVkRGltZW5zaW9uc189Uyx0IGluc3RhbmNlb2Ygci5ZR0NvbmZpZz8odGhpcy5jb25maWdfPXQsdGhpcy5jb250ZXh0Xz1udWxsKTp0aGlzLmNvbnRleHRfPXR9cmV0dXJuIGUucHJvdG90eXBlLnJlbGF0aXZlUG9zaXRpb249ZnVuY3Rpb24oZSx0KXtpZih0aGlzLmlzTGVhZGluZ1Bvc2l0aW9uRGVmaW5lZChlKSlyZXR1cm4gdGhpcy5nZXRMZWFkaW5nUG9zaXRpb24oZSx0KTt2YXIgaT10aGlzLmdldFRyYWlsaW5nUG9zaXRpb24oZSx0KTtyZXR1cm4gaS5pc1VuZGVmaW5lZCgpfHxpLnNldFZhbHVlKC0xKmkuZ2V0VmFsdWUoKSksaX0sZS5wcm90b3R5cGUub3BlcmF0b3JBdHJpYj1mdW5jdGlvbihlKXtyZXR1cm4gZT09dGhpcz90aGlzOih0aGlzLmNsZWFyQ2hpbGRyZW4oKSx0aGlzLmZyb21Ob2RlKGUpLHRoaXMpfSxlLnByb3RvdHlwZS5mcm9tTm9kZT1mdW5jdGlvbihlKXtjb25zb2xlLmxvZyhlKSx0aGlzLmNvbnRleHRfPWUuY29udGV4dF8sdGhpcy5wcmludF89ZS5wcmludF8sdGhpcy5oYXNOZXdMYXlvdXRfPWUuaGFzTmV3TGF5b3V0Xyx0aGlzLm5vZGVUeXBlXz1lLm5vZGVUeXBlXyx0aGlzLm1lYXN1cmVfPWUubWVhc3VyZV8sdGhpcy5iYXNlbGluZV89ZS5iYXNlbGluZV8sdGhpcy5kaXJ0aWVkXz1lLmRpcnRpZWRfLHRoaXMuc3R5bGVfPWUuc3R5bGVfLHRoaXMubGF5b3V0Xz1lLmxheW91dF8sdGhpcy5saW5lSW5kZXhfPWUubGluZUluZGV4Xyx0aGlzLm93bmVyXz1lLm93bmVyXyx0aGlzLmNoaWxkcmVuXz1lLmNoaWxkcmVuXyx0aGlzLmNvbmZpZ189ZS5jb25maWdfLHRoaXMuaXNEaXJ0eV89ZS5pc0RpcnR5Xyx0aGlzLnJlc29sdmVkRGltZW5zaW9uc189ZS5yZXNvbHZlZERpbWVuc2lvbnNffSxlLnByb3RvdHlwZS5nZXRDb250ZXh0PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuY29udGV4dF99LGUucHJvdG90eXBlLmdldFByaW50RnVuYz1mdW5jdGlvbigpe3JldHVybiB0aGlzLnByaW50X30sZS5wcm90b3R5cGUuZ2V0SGFzTmV3TGF5b3V0PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuaGFzTmV3TGF5b3V0X30sZS5wcm90b3R5cGUuZ2V0Tm9kZVR5cGU9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5ub2RlVHlwZV99LGUucHJvdG90eXBlLmdldE1lYXN1cmU9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5tZWFzdXJlX30sZS5wcm90b3R5cGUuZ2V0QmFzZWxpbmU9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5iYXNlbGluZV99LGUucHJvdG90eXBlLmdldERpcnRpZWQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5kaXJ0aWVkX30sZS5wcm90b3R5cGUuZ2V0U3R5bGU9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5zdHlsZV99LGUucHJvdG90eXBlLmdldExheW91dD1mdW5jdGlvbigpe3JldHVybiB0aGlzLmxheW91dF99LGUucHJvdG90eXBlLmdldExpbmVJbmRleD1mdW5jdGlvbigpe3JldHVybiB0aGlzLmxpbmVJbmRleF99LGUucHJvdG90eXBlLmdldE93bmVyPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMub3duZXJffSxlLnByb3RvdHlwZS5nZXRQYXJlbnQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5nZXRPd25lcigpfSxlLnByb3RvdHlwZS5nZXRDaGlsZHJlbj1mdW5jdGlvbigpe3JldHVybiB0aGlzLmNoaWxkcmVuX30sZS5wcm90b3R5cGUuZ2V0Q2hpbGRyZW5Db3VudD1mdW5jdGlvbigpe3JldHVybiB0aGlzLmNoaWxkcmVuXy5sZW5ndGh9LGUucHJvdG90eXBlLmdldENoaWxkPWZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLmNoaWxkcmVuX1tlXX0sZS5wcm90b3R5cGUuZ2V0Q29uZmlnPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuY29uZmlnX30sZS5wcm90b3R5cGUuaXNEaXJ0eT1mdW5jdGlvbigpe3JldHVybiB0aGlzLmlzRGlydHlffSxlLnByb3RvdHlwZS5nZXRSZXNvbHZlZERpbWVuc2lvbnM9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5yZXNvbHZlZERpbWVuc2lvbnNffSxlLnByb3RvdHlwZS5nZXRSZXNvbHZlZERpbWVuc2lvbj1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5yZXNvbHZlZERpbWVuc2lvbnNfW2VdfSxlLnByb3RvdHlwZS5nZXRMZWFkaW5nUG9zaXRpb249ZnVuY3Rpb24oZSx0KXtpZihhLllHRmxleERpcmVjdGlvbklzUm93KGUpKXt2YXIgaT1kLllHQ29tcHV0ZWRFZGdlVmFsdWUodGhpcy5zdHlsZV8ucG9zaXRpb24sbi5ZR0VkZ2UuU3RhcnQsZC5ZR1ZhbHVlVW5kZWZpbmVkKCkpO2lmKGkudW5pdCE9bi5ZR1VuaXQuVW5kZWZpbmVkKXJldHVybiBhLllHUmVzb2x2ZVZhbHVlKGksdCl9dmFyIHI9ZC5ZR0NvbXB1dGVkRWRnZVZhbHVlKHRoaXMuc3R5bGVfLnBvc2l0aW9uLHUubGVhZGluZ1tlXSxkLllHVmFsdWVVbmRlZmluZWQoKSk7cmV0dXJuIHIudW5pdD09bi5ZR1VuaXQuVW5kZWZpbmVkP25ldyBvLllHRmxvYXRPcHRpb25hbCgwKTphLllHUmVzb2x2ZVZhbHVlKHIsdCl9LGUucHJvdG90eXBlLmlzTGVhZGluZ1Bvc2l0aW9uRGVmaW5lZD1mdW5jdGlvbihlKXtyZXR1cm4gYS5ZR0ZsZXhEaXJlY3Rpb25Jc1JvdyhlKSYmZC5ZR0NvbXB1dGVkRWRnZVZhbHVlKHRoaXMuc3R5bGVfLnBvc2l0aW9uLG4uWUdFZGdlLlN0YXJ0LGQuWUdWYWx1ZVVuZGVmaW5lZCgpKS51bml0IT1uLllHVW5pdC5VbmRlZmluZWR8fGQuWUdDb21wdXRlZEVkZ2VWYWx1ZSh0aGlzLnN0eWxlXy5wb3NpdGlvbix1LmxlYWRpbmdbZV0sZC5ZR1ZhbHVlVW5kZWZpbmVkKCkpLnVuaXQhPW4uWUdVbml0LlVuZGVmaW5lZH0sZS5wcm90b3R5cGUuaXNUcmFpbGluZ1Bvc0RlZmluZWQ9ZnVuY3Rpb24oZSl7cmV0dXJuIGEuWUdGbGV4RGlyZWN0aW9uSXNSb3coZSkmJmQuWUdDb21wdXRlZEVkZ2VWYWx1ZSh0aGlzLnN0eWxlXy5wb3NpdGlvbixuLllHRWRnZS5FbmQsZC5ZR1ZhbHVlVW5kZWZpbmVkKCkpLnVuaXQhPW4uWUdVbml0LlVuZGVmaW5lZHx8ZC5ZR0NvbXB1dGVkRWRnZVZhbHVlKHRoaXMuc3R5bGVfLnBvc2l0aW9uLHUudHJhaWxpbmdbZV0sZC5ZR1ZhbHVlVW5kZWZpbmVkKCkpLnVuaXQhPW4uWUdVbml0LlVuZGVmaW5lZH0sZS5wcm90b3R5cGUuZ2V0VHJhaWxpbmdQb3NpdGlvbj1mdW5jdGlvbihlLHQpe2lmKGEuWUdGbGV4RGlyZWN0aW9uSXNSb3coZSkpe3ZhciBpPWQuWUdDb21wdXRlZEVkZ2VWYWx1ZSh0aGlzLnN0eWxlXy5wb3NpdGlvbixuLllHRWRnZS5FbmQsZC5ZR1ZhbHVlVW5kZWZpbmVkKCkpO2lmKGkudW5pdCE9bi5ZR1VuaXQuVW5kZWZpbmVkKXJldHVybiBhLllHUmVzb2x2ZVZhbHVlKGksdCl9dmFyIHI9ZC5ZR0NvbXB1dGVkRWRnZVZhbHVlKHRoaXMuc3R5bGVfLnBvc2l0aW9uLHUudHJhaWxpbmdbZV0sZC5ZR1ZhbHVlVW5kZWZpbmVkKCkpO3JldHVybiByLnVuaXQ9PW4uWUdVbml0LlVuZGVmaW5lZD9uZXcgby5ZR0Zsb2F0T3B0aW9uYWwoMCk6YS5ZR1Jlc29sdmVWYWx1ZShyLHQpfSxlLnByb3RvdHlwZS5nZXRMZWFkaW5nTWFyZ2luPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGEuWUdGbGV4RGlyZWN0aW9uSXNSb3coZSkmJnRoaXMuc3R5bGVfLm1hcmdpbltuLllHRWRnZS5TdGFydF0udW5pdCE9bi5ZR1VuaXQuVW5kZWZpbmVkP2EuWUdSZXNvbHZlVmFsdWVNYXJnaW4odGhpcy5zdHlsZV8ubWFyZ2luW24uWUdFZGdlLlN0YXJ0XSx0KTphLllHUmVzb2x2ZVZhbHVlTWFyZ2luKGQuWUdDb21wdXRlZEVkZ2VWYWx1ZSh0aGlzLnN0eWxlXy5tYXJnaW4sdS5sZWFkaW5nW2VdLGQuWUdWYWx1ZVplcm8oKSksdCl9LGUucHJvdG90eXBlLmdldFRyYWlsaW5nTWFyZ2luPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGEuWUdGbGV4RGlyZWN0aW9uSXNSb3coZSkmJnRoaXMuc3R5bGVfLm1hcmdpbltuLllHRWRnZS5FbmRdLnVuaXQhPW4uWUdVbml0LlVuZGVmaW5lZD9hLllHUmVzb2x2ZVZhbHVlTWFyZ2luKHRoaXMuc3R5bGVfLm1hcmdpbltuLllHRWRnZS5FbmRdLHQpOmEuWUdSZXNvbHZlVmFsdWVNYXJnaW4oZC5ZR0NvbXB1dGVkRWRnZVZhbHVlKHRoaXMuc3R5bGVfLm1hcmdpbix1LnRyYWlsaW5nW2VdLGQuWUdWYWx1ZVplcm8oKSksdCl9LGUucHJvdG90eXBlLmdldExlYWRpbmdCb3JkZXI9ZnVuY3Rpb24oZSl7aWYoYS5ZR0ZsZXhEaXJlY3Rpb25Jc1JvdyhlKSYmdGhpcy5zdHlsZV8uYm9yZGVyW24uWUdFZGdlLlN0YXJ0XS51bml0IT1uLllHVW5pdC5VbmRlZmluZWQmJiFkLllHRmxvYXRJc1VuZGVmaW5lZCh0aGlzLnN0eWxlXy5ib3JkZXJbbi5ZR0VkZ2UuU3RhcnRdLnZhbHVlKSYmdGhpcy5zdHlsZV8uYm9yZGVyW24uWUdFZGdlLlN0YXJ0XS52YWx1ZT49MClyZXR1cm4gdGhpcy5zdHlsZV8uYm9yZGVyW24uWUdFZGdlLlN0YXJ0XS52YWx1ZTt2YXIgdD1kLllHQ29tcHV0ZWRFZGdlVmFsdWUodGhpcy5zdHlsZV8uYm9yZGVyLHUubGVhZGluZ1tlXSxkLllHVmFsdWVaZXJvKCkpLnZhbHVlO3JldHVybiBhLllHRmxvYXRNYXgodCwwKX0sZS5wcm90b3R5cGUuZ2V0VHJhaWxpbmdCb3JkZXI9ZnVuY3Rpb24oZSl7aWYoYS5ZR0ZsZXhEaXJlY3Rpb25Jc1JvdyhlKSYmdGhpcy5zdHlsZV8uYm9yZGVyW24uWUdFZGdlLkVuZF0udW5pdCE9bi5ZR1VuaXQuVW5kZWZpbmVkJiYhZC5ZR0Zsb2F0SXNVbmRlZmluZWQodGhpcy5zdHlsZV8uYm9yZGVyW24uWUdFZGdlLkVuZF0udmFsdWUpJiZ0aGlzLnN0eWxlXy5ib3JkZXJbbi5ZR0VkZ2UuRW5kXS52YWx1ZT49MClyZXR1cm4gdGhpcy5zdHlsZV8uYm9yZGVyW24uWUdFZGdlLkVuZF0udmFsdWU7dmFyIHQ9ZC5ZR0NvbXB1dGVkRWRnZVZhbHVlKHRoaXMuc3R5bGVfLmJvcmRlcix1LnRyYWlsaW5nW2VdLGQuWUdWYWx1ZVplcm8oKSkudmFsdWU7cmV0dXJuIGEuWUdGbG9hdE1heCh0LDApfSxlLnByb3RvdHlwZS5nZXRMZWFkaW5nUGFkZGluZz1mdW5jdGlvbihlLHQpe3ZhciBpPWEuWUdSZXNvbHZlVmFsdWUodGhpcy5zdHlsZV8ucGFkZGluZ1tuLllHRWRnZS5TdGFydF0sdCk7aWYoYS5ZR0ZsZXhEaXJlY3Rpb25Jc1JvdyhlKSYmdGhpcy5zdHlsZV8ucGFkZGluZ1tuLllHRWRnZS5TdGFydF0udW5pdCE9bi5ZR1VuaXQuVW5kZWZpbmVkJiYhaS5pc1VuZGVmaW5lZCgpJiZpLmdldFZhbHVlKCk+MClyZXR1cm4gaTt2YXIgcj1hLllHUmVzb2x2ZVZhbHVlKGQuWUdDb21wdXRlZEVkZ2VWYWx1ZSh0aGlzLnN0eWxlXy5wYWRkaW5nLHUubGVhZGluZ1tlXSxkLllHVmFsdWVaZXJvKCkpLHQpO3JldHVybiBhLllHRmxvYXRPcHRpb25hbE1heChyLG5ldyBvLllHRmxvYXRPcHRpb25hbCgwKSl9LGUucHJvdG90eXBlLmdldFRyYWlsaW5nUGFkZGluZz1mdW5jdGlvbihlLHQpe3ZhciBpPWEuWUdSZXNvbHZlVmFsdWUodGhpcy5zdHlsZV8ucGFkZGluZ1tuLllHRWRnZS5FbmRdLHQpO2lmKGEuWUdGbGV4RGlyZWN0aW9uSXNSb3coZSkmJnRoaXMuc3R5bGVfLnBhZGRpbmdbbi5ZR0VkZ2UuRW5kXS51bml0IT1uLllHVW5pdC5VbmRlZmluZWQmJiFpLmlzVW5kZWZpbmVkKCkmJmkuZ2V0VmFsdWUoKT49MClyZXR1cm4gaTt2YXIgcj1hLllHUmVzb2x2ZVZhbHVlKGQuWUdDb21wdXRlZEVkZ2VWYWx1ZSh0aGlzLnN0eWxlXy5wYWRkaW5nLHUudHJhaWxpbmdbZV0sZC5ZR1ZhbHVlWmVybygpKSx0KTtyZXR1cm4gYS5ZR0Zsb2F0T3B0aW9uYWxNYXgocixuZXcgby5ZR0Zsb2F0T3B0aW9uYWwoMCkpfSxlLnByb3RvdHlwZS5nZXRMZWFkaW5nUGFkZGluZ0FuZEJvcmRlcj1mdW5jdGlvbihlLHQpe3JldHVybiB0aGlzLmdldExlYWRpbmdQYWRkaW5nKGUsdCkuYWRkKG5ldyBvLllHRmxvYXRPcHRpb25hbCh0aGlzLmdldExlYWRpbmdCb3JkZXIoZSkpKX0sZS5wcm90b3R5cGUuZ2V0VHJhaWxpbmdQYWRkaW5nQW5kQm9yZGVyPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIHRoaXMuZ2V0VHJhaWxpbmdQYWRkaW5nKGUsdCkuYWRkKG5ldyBvLllHRmxvYXRPcHRpb25hbCh0aGlzLmdldFRyYWlsaW5nQm9yZGVyKGUpKSl9LGUucHJvdG90eXBlLmdldE1hcmdpbkZvckF4aXM9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gdGhpcy5nZXRMZWFkaW5nTWFyZ2luKGUsdCkuYWRkKHRoaXMuZ2V0VHJhaWxpbmdNYXJnaW4oZSx0KSl9LGUucHJvdG90eXBlLnNldENvbnRleHQ9ZnVuY3Rpb24oZSl7dGhpcy5jb250ZXh0Xz1lfSxlLnByb3RvdHlwZS5zZXRQcmludEZ1bmM9ZnVuY3Rpb24oZSl7dGhpcy5wcmludF89ZX0sZS5wcm90b3R5cGUuc2V0SGFzTmV3TGF5b3V0PWZ1bmN0aW9uKGUpe3RoaXMuaGFzTmV3TGF5b3V0Xz1lfSxlLnByb3RvdHlwZS5zZXROb2RlVHlwZT1mdW5jdGlvbihlKXt0aGlzLm5vZGVUeXBlXz1lfSxlLnByb3RvdHlwZS5zZXRNZWFzdXJlRnVuYz1mdW5jdGlvbihlKXtudWxsPT1lPyh0aGlzLm1lYXN1cmVfPW51bGwsdGhpcy5ub2RlVHlwZV89bi5ZR05vZGVUeXBlLkRlZmF1bHQpOigwIT10aGlzLmNoaWxkcmVuXy5sZW5ndGgmJmNvbnNvbGUuZXJyb3IoXCJDYW5ub3Qgc2V0IG1lYXN1cmUgZnVuY3Rpb246IE5vZGVzIHdpdGggbWVhc3VyZSBmdW5jdGlvbnMgY2Fubm90IGhhdmUgY2hpbGRyZW4uXCIpLHRoaXMubWVhc3VyZV89ZSx0aGlzLnNldE5vZGVUeXBlKG4uWUdOb2RlVHlwZS5UZXh0KSksdGhpcy5tZWFzdXJlXz1lfSxlLnByb3RvdHlwZS5zZXRCYXNlTGluZUZ1bmM9ZnVuY3Rpb24oZSl7dGhpcy5iYXNlbGluZV89ZX0sZS5wcm90b3R5cGUuc2V0RGlydGllZEZ1bmM9ZnVuY3Rpb24oZSl7dGhpcy5kaXJ0aWVkXz1lfSxlLnByb3RvdHlwZS5zZXRTdHlsZT1mdW5jdGlvbihlKXt0aGlzLnN0eWxlXz1lfSxlLnByb3RvdHlwZS5zZXRTdHlsZUZsZXhEaXJlY3Rpb249ZnVuY3Rpb24oZSl7dGhpcy5zdHlsZV8uZmxleERpcmVjdGlvbj1lfSxlLnByb3RvdHlwZS5zZXRTdHlsZUFsaWduQ29udGVudD1mdW5jdGlvbihlKXt0aGlzLnN0eWxlXy5hbGlnbkNvbnRlbnQ9ZX0sZS5wcm90b3R5cGUuc2V0TGF5b3V0PWZ1bmN0aW9uKGUpe3RoaXMubGF5b3V0Xz1lfSxlLnByb3RvdHlwZS5zZXRMaW5lSW5kZXg9ZnVuY3Rpb24oZSl7dGhpcy5saW5lSW5kZXhfPWV9LGUucHJvdG90eXBlLnNldE93bmVyPWZ1bmN0aW9uKGUpe3RoaXMub3duZXJfPWV9LGUucHJvdG90eXBlLnNldENoaWxkcmVuPWZ1bmN0aW9uKGUpe3RoaXMuY2hpbGRyZW5fPWV9LGUucHJvdG90eXBlLnNldENvbmZpZz1mdW5jdGlvbihlKXt0aGlzLmNvbmZpZ189ZX0sZS5wcm90b3R5cGUuc2V0RGlydHk9ZnVuY3Rpb24oZSl7dGhpcy5pc0RpcnR5Xz1lfSxlLnByb3RvdHlwZS5zZXRMYXlvdXRMYXN0T3duZXJEaXJlY3Rpb249ZnVuY3Rpb24oZSl7dGhpcy5sYXlvdXRfLmxhc3RPd25lckRpcmVjdGlvbj1lfSxlLnByb3RvdHlwZS5zZXRMYXlvdXRDb21wdXRlZEZsZXhCYXNpcz1mdW5jdGlvbihlKXt0aGlzLmxheW91dF8uY29tcHV0ZWRGbGV4QmFzaXM9ZX0sZS5wcm90b3R5cGUuc2V0TGF5b3V0Q29tcHV0ZWRGbGV4QmFzaXNHZW5lcmF0aW9uPWZ1bmN0aW9uKGUpe3RoaXMubGF5b3V0Xy5jb21wdXRlZEZsZXhCYXNpc0dlbmVyYXRpb249ZX0sZS5wcm90b3R5cGUuc2V0TGF5b3V0TWVhc3VyZWREaW1lbnNpb249ZnVuY3Rpb24oZSx0KXt0aGlzLmxheW91dF8ubWVhc3VyZWREaW1lbnNpb25zW3RdPWV9LGUucHJvdG90eXBlLnNldExheW91dEhhZE92ZXJmbG93PWZ1bmN0aW9uKGUpe3RoaXMubGF5b3V0Xy5oYWRPdmVyZmxvdz1lfSxlLnByb3RvdHlwZS5zZXRMYXlvdXREaW1lbnNpb249ZnVuY3Rpb24oZSx0KXt0aGlzLmxheW91dF8uZGltZW5zaW9uc1t0XT1lfSxlLnByb3RvdHlwZS5zZXRMYXlvdXREaXJlY3Rpb249ZnVuY3Rpb24oZSl7dGhpcy5sYXlvdXRfLmRpcmVjdGlvbj1lfSxlLnByb3RvdHlwZS5zZXRMYXlvdXRNYXJnaW49ZnVuY3Rpb24oZSx0KXt0aGlzLmxheW91dF8ubWFyZ2luW3RdPWV9LGUucHJvdG90eXBlLnNldExheW91dEJvcmRlcj1mdW5jdGlvbihlLHQpe3RoaXMubGF5b3V0Xy5ib3JkZXJbdF09ZX0sZS5wcm90b3R5cGUuc2V0TGF5b3V0UGFkZGluZz1mdW5jdGlvbihlLHQpe3RoaXMubGF5b3V0Xy5wYWRkaW5nW3RdPWV9LGUucHJvdG90eXBlLnNldExheW91dFBvc2l0aW9uPWZ1bmN0aW9uKGUsdCl7dGhpcy5sYXlvdXRfLnBvc2l0aW9uW3RdPWV9LGUucHJvdG90eXBlLnNldFBvc2l0aW9uPWZ1bmN0aW9uKGUsdCxpLG8pe3ZhciByPW51bGwhPXRoaXMub3duZXJfP2U6bi5ZR0RpcmVjdGlvbi5MVFIscz1hLllHUmVzb2x2ZUZsZXhEaXJlY3Rpb24odGhpcy5zdHlsZV8uZmxleERpcmVjdGlvbixyKSxsPWEuWUdGbGV4RGlyZWN0aW9uQ3Jvc3MocyxyKSxkPXRoaXMucmVsYXRpdmVQb3NpdGlvbihzLHQpLGc9dGhpcy5yZWxhdGl2ZVBvc2l0aW9uKGwsaSk7dGhpcy5zZXRMYXlvdXRQb3NpdGlvbihhLllHVW53cmFwRmxvYXRPcHRpb25hbCh0aGlzLmdldExlYWRpbmdNYXJnaW4ocyxvKS5hZGQoZCkpLHUubGVhZGluZ1tzXSksdGhpcy5zZXRMYXlvdXRQb3NpdGlvbihhLllHVW53cmFwRmxvYXRPcHRpb25hbCh0aGlzLmdldFRyYWlsaW5nTWFyZ2luKHMsbykuYWRkKGQpKSx1LnRyYWlsaW5nW3NdKSx0aGlzLnNldExheW91dFBvc2l0aW9uKGEuWUdVbndyYXBGbG9hdE9wdGlvbmFsKHRoaXMuZ2V0TGVhZGluZ01hcmdpbihsLG8pLmFkZChnKSksdS5sZWFkaW5nW2xdKSx0aGlzLnNldExheW91dFBvc2l0aW9uKGEuWUdVbndyYXBGbG9hdE9wdGlvbmFsKHRoaXMuZ2V0VHJhaWxpbmdNYXJnaW4obCxvKS5hZGQoZykpLHUudHJhaWxpbmdbbF0pfSxlLnByb3RvdHlwZS5zZXRBbmRQcm9wb2dhdGVVc2VMZWdhY3lGbGFnPWZ1bmN0aW9uKGUpe3RoaXMuY29uZmlnXy51c2VMZWdhY3lTdHJldGNoQmVoYXZpb3VyPWU7Zm9yKHZhciB0PTA7dDx0aGlzLmNoaWxkcmVuXy5sZW5ndGg7dCsrKXRoaXMuY2hpbGRyZW5fW3RdLmdldENvbmZpZygpLnVzZUxlZ2FjeVN0cmV0Y2hCZWhhdmlvdXI9ZX0sZS5wcm90b3R5cGUuc2V0TGF5b3V0RG9lc0xlZ2FjeUZsYWdBZmZlY3RzTGF5b3V0PWZ1bmN0aW9uKGUpe3RoaXMubGF5b3V0Xy5kb2VzTGVnYWN5U3RyZXRjaEZsYWdBZmZlY3RzTGF5b3V0PWV9LGUucHJvdG90eXBlLnNldExheW91dERpZFVzZUxlZ2FjeUZsYWc9ZnVuY3Rpb24oZSl7dGhpcy5sYXlvdXRfLmRpZFVzZUxlZ2FjeUZsYWc9ZX0sZS5wcm90b3R5cGUubWFya0RpcnR5QW5kUHJvcG9nYXRlRG93bndhcmRzPWZ1bmN0aW9uKCl7dGhpcy5pc0RpcnR5Xz0hMDtmb3IodmFyIGU9MDtlPHRoaXMuY2hpbGRyZW5fLmxlbmd0aDtlKyspdGhpcy5jaGlsZHJlbl9bZV0ubWFya0RpcnR5QW5kUHJvcG9nYXRlRG93bndhcmRzKCl9LGUucHJvdG90eXBlLm1hcmdpbkxlYWRpbmdWYWx1ZT1mdW5jdGlvbihlKXtyZXR1cm4gYS5ZR0ZsZXhEaXJlY3Rpb25Jc1JvdyhlKSYmdGhpcy5zdHlsZV8ubWFyZ2luW24uWUdFZGdlLlN0YXJ0XS51bml0IT1uLllHVW5pdC5VbmRlZmluZWQ/dGhpcy5zdHlsZV8ubWFyZ2luW24uWUdFZGdlLlN0YXJ0XTp0aGlzLnN0eWxlXy5tYXJnaW5bdS5sZWFkaW5nW2VdXX0sZS5wcm90b3R5cGUubWFyZ2luVHJhaWxpbmdWYWx1ZT1mdW5jdGlvbihlKXtyZXR1cm4gYS5ZR0ZsZXhEaXJlY3Rpb25Jc1JvdyhlKSYmdGhpcy5zdHlsZV8ubWFyZ2luW24uWUdFZGdlLkVuZF0udW5pdCE9bi5ZR1VuaXQuVW5kZWZpbmVkP3RoaXMuc3R5bGVfLm1hcmdpbltuLllHRWRnZS5FbmRdOnRoaXMuc3R5bGVfLm1hcmdpblt1LnRyYWlsaW5nW2VdXX0sZS5wcm90b3R5cGUucmVzb2x2ZUZsZXhCYXNpc1B0cj1mdW5jdGlvbigpe3ZhciBlPXRoaXMuc3R5bGVfLmZsZXhCYXNpcztyZXR1cm4gZS51bml0IT1uLllHVW5pdC5BdXRvJiZlLnVuaXQhPW4uWUdVbml0LlVuZGVmaW5lZD9lOiF0aGlzLnN0eWxlXy5mbGV4LmlzVW5kZWZpbmVkKCkmJnRoaXMuc3R5bGVfLmZsZXguZ2V0VmFsdWUoKT4wP3RoaXMuY29uZmlnXy51c2VXZWJEZWZhdWx0cz9kLllHVmFsdWVBdXRvKCk6ZC5ZR1ZhbHVlWmVybygpOmQuWUdWYWx1ZUF1dG8oKX0sZS5wcm90b3R5cGUucmVzb2x2ZURpbWVuc2lvbj1mdW5jdGlvbigpe2Zvcih2YXIgZT1uLllHRGltZW5zaW9uLldpZHRoO2U8bi5ZR0RpbWVuc2lvbkNvdW50OysrZSl0aGlzLnN0eWxlXy5tYXhEaW1lbnNpb25zW2VdLnVuaXQhPW4uWUdVbml0LlVuZGVmaW5lZCYmYS5ZR1ZhbHVlRXF1YWwodGhpcy5zdHlsZV8ubWF4RGltZW5zaW9uc1tlXSx0aGlzLnN0eWxlXy5taW5EaW1lbnNpb25zW2VdKT90aGlzLnJlc29sdmVkRGltZW5zaW9uc19bZV09dGhpcy5zdHlsZV8ubWF4RGltZW5zaW9uc1tlXTp0aGlzLnJlc29sdmVkRGltZW5zaW9uc19bZV09dGhpcy5zdHlsZV8uZGltZW5zaW9uc1tlXX0sZS5wcm90b3R5cGUucmVzb2x2ZURpcmVjdGlvbj1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5zdHlsZV8uZGlyZWN0aW9uPT1uLllHRGlyZWN0aW9uLkluaGVyaXQ/ZT5uLllHRGlyZWN0aW9uLkluaGVyaXQ/ZTpuLllHRGlyZWN0aW9uLkxUUjp0aGlzLnN0eWxlXy5kaXJlY3Rpb259LGUucHJvdG90eXBlLmNsZWFyQ2hpbGRyZW49ZnVuY3Rpb24oKXtmb3IoO3RoaXMuY2hpbGRyZW5fLmxlbmd0aD4wOyl0aGlzLmNoaWxkcmVuXy5wb3AoKX0sZS5wcm90b3R5cGUucmVwbGFjZUNoaWxkPWZ1bmN0aW9uKGUsdCl7dmFyIGk9dGhpcy5jaGlsZHJlbl8uaW5kZXhPZihlKTtpPj0wJiYodGhpcy5jaGlsZHJlbl9baV09dCl9LGUucHJvdG90eXBlLnJlcGxhY2VDaGlsZEluZGV4PWZ1bmN0aW9uKGUsdCl7dGhpcy5jaGlsZHJlbl9bdF09ZX0sZS5wcm90b3R5cGUuaW5zZXJ0Q2hpbGRJbmRleD1mdW5jdGlvbihlLHQpe3RoaXMuY2hpbGRyZW5fLnNwbGljZSh0LDAsZSl9LGUucHJvdG90eXBlLnJlbW92ZUNoaWxkPWZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMuY2hpbGRyZW5fLmluZGV4T2YoZSk7cmV0dXJuIHQ+PTAmJih0aGlzLmNoaWxkcmVuXy5zcGxpY2UodCwxKSwhMCl9LGUucHJvdG90eXBlLnJlbW92ZUNoaWxkSW5kZXg9ZnVuY3Rpb24oZSl7dGhpcy5jaGlsZHJlbl8uc3BsaWNlKGUsMSl9LGUucHJvdG90eXBlLmNsb25lQ2hpbGRyZW5JZk5lZWRlZD1mdW5jdGlvbigpe3ZhciBlPXRoaXMuY2hpbGRyZW5fLmxlbmd0aDtpZigwIT1lJiZ0aGlzLmNoaWxkcmVuX1swXS5nZXRPd25lcigpIT10aGlzKWZvcih2YXIgdD10aGlzLmNvbmZpZ18uY2xvbmVOb2RlQ2FsbGJhY2ssaT0wO2k8ZTsrK2kpe3ZhciBuPXRoaXMuY2hpbGRyZW5fW2ldLG89bnVsbDt0JiYobz10KG4sdGhpcyxpKSksbnVsbD09byYmKG89ZC5ZR05vZGVDbG9uZShuKSksdGhpcy5yZXBsYWNlQ2hpbGRJbmRleChvLGkpLG8uc2V0T3duZXIodGhpcyl9fSxlLnByb3RvdHlwZS5tYXJrRGlydHlBbmRQcm9wb2dhdGU9ZnVuY3Rpb24oKXt0aGlzLmlzRGlydHlffHwodGhpcy5zZXREaXJ0eSghMCksdGhpcy5zZXRMYXlvdXRDb21wdXRlZEZsZXhCYXNpcyhuZXcgby5ZR0Zsb2F0T3B0aW9uYWwpLHRoaXMub3duZXJfJiZ0aGlzLm93bmVyXy5tYXJrRGlydHlBbmRQcm9wb2dhdGUoKSl9LGUucHJvdG90eXBlLnJlc29sdmVGbGV4R3Jvdz1mdW5jdGlvbigpe3JldHVybiBudWxsPT10aGlzLm93bmVyXz8wOnRoaXMuc3R5bGVfLmZsZXhHcm93LmlzVW5kZWZpbmVkKCk/IXRoaXMuc3R5bGVfLmZsZXguaXNVbmRlZmluZWQoKSYmdGhpcy5zdHlsZV8uZmxleC5nZXRWYWx1ZSgpPjA/dGhpcy5zdHlsZV8uZmxleC5nZXRWYWx1ZSgpOnUua0RlZmF1bHRGbGV4R3Jvdzp0aGlzLnN0eWxlXy5mbGV4R3Jvdy5nZXRWYWx1ZSgpfSxlLnByb3RvdHlwZS5yZXNvbHZlRmxleFNocmluaz1mdW5jdGlvbigpe3JldHVybiBudWxsPT10aGlzLm93bmVyXz8wOnRoaXMuc3R5bGVfLmZsZXhTaHJpbmsuaXNVbmRlZmluZWQoKT8hdGhpcy5jb25maWdfLnVzZVdlYkRlZmF1bHRzJiYhdGhpcy5zdHlsZV8uZmxleC5pc1VuZGVmaW5lZCgpJiZ0aGlzLnN0eWxlXy5mbGV4LmdldFZhbHVlKCk8MD8tdGhpcy5zdHlsZV8uZmxleC5nZXRWYWx1ZSgpOnRoaXMuY29uZmlnXy51c2VXZWJEZWZhdWx0cz91LmtXZWJEZWZhdWx0RmxleFNocmluazp1LmtEZWZhdWx0RmxleFNocmluazp0aGlzLnN0eWxlXy5mbGV4U2hyaW5rLmdldFZhbHVlKCl9LGUucHJvdG90eXBlLmlzTm9kZUZsZXhpYmxlPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuc3R5bGVfLnBvc2l0aW9uVHlwZT09bi5ZR1Bvc2l0aW9uVHlwZS5SZWxhdGl2ZSYmKDAhPXRoaXMucmVzb2x2ZUZsZXhHcm93KCl8fDAhPXRoaXMucmVzb2x2ZUZsZXhTaHJpbmsoKSl9LGUucHJvdG90eXBlLmRpZFVzZUxlZ2FjeUZsYWc9ZnVuY3Rpb24oKXt2YXIgZT10aGlzLmxheW91dF8uZGlkVXNlTGVnYWN5RmxhZztpZihlKXJldHVybiEwO2Zvcih2YXIgdD0wO3Q8dGhpcy5jaGlsZHJlbl8ubGVuZ3RoO3QrKylpZih0aGlzLmNoaWxkcmVuX1t0XS5nZXRMYXlvdXQoKS5kaWRVc2VMZWdhY3lGbGFnKXtlPSEwO2JyZWFrfXJldHVybiBlfSxlLnByb3RvdHlwZS5pc0xheW91dFRyZWVFcXVhbFRvTm9kZT1mdW5jdGlvbihlKXtpZih0aGlzLmNoaWxkcmVuXy5sZW5ndGghPWUuZ2V0Q2hpbGRyZW4oKS5sZW5ndGgpcmV0dXJuITE7aWYodGhpcy5sYXlvdXRfLmRpZmYoZS5nZXRMYXlvdXQoKSkpcmV0dXJuITE7aWYoMD09dGhpcy5jaGlsZHJlbl8ubGVuZ3RoKXJldHVybiEwO2Zvcih2YXIgdD0hMCxpPTA7aTx0aGlzLmNoaWxkcmVuXy5sZW5ndGg7KytpKXt2YXIgbj1lLmdldENoaWxkKGkpO2lmKCEodD10aGlzLmNoaWxkcmVuX1tpXS5pc0xheW91dFRyZWVFcXVhbFRvTm9kZShuKSkpcmV0dXJuITF9cmV0dXJuIHR9LGV9KCk7dC5ZR05vZGU9Z30sZnVuY3Rpb24oZSx0LGkpe1widXNlIHN0cmljdFwiO3QuX19lc01vZHVsZT0hMDt2YXIgbj1pKDApLG89aSgzKSxyPWkoNyksYT1pKDIpLHM9ZnVuY3Rpb24oKXtyZXR1cm4gbmV3IHIuWUdWYWx1ZSgwLG4uWUdVbml0LlVuZGVmaW5lZCl9LGw9ZnVuY3Rpb24oKXtyZXR1cm4gbmV3IHIuWUdWYWx1ZSgwLG4uWUdVbml0LkF1dG8pfSx1PWZ1bmN0aW9uKCl7cmV0dXJuW3MoKSxzKCkscygpLHMoKSxzKCkscygpLHMoKSxzKCkscygpXX0sZD1mdW5jdGlvbigpe3JldHVybltsKCksbCgpXX0sZz1mdW5jdGlvbigpe3JldHVybltzKCkscygpXX0sRz1mdW5jdGlvbigpe2Z1bmN0aW9uIGUoKXt0aGlzLm1hcmdpbj1uZXcgQXJyYXkobi5ZR0VkZ2VDb3VudCksdGhpcy5wb3NpdGlvbj1uZXcgQXJyYXkobi5ZR0VkZ2VDb3VudCksdGhpcy5wYWRkaW5nPW5ldyBBcnJheShuLllHRWRnZUNvdW50KSx0aGlzLmJvcmRlcj1uZXcgQXJyYXkobi5ZR0VkZ2VDb3VudCksdGhpcy5kaXJlY3Rpb249bi5ZR0RpcmVjdGlvbi5Jbmhlcml0LHRoaXMuZmxleERpcmVjdGlvbj1uLllHRmxleERpcmVjdGlvbi5Db2x1bW4sdGhpcy5qdXN0aWZ5Q29udGVudD1uLllHSnVzdGlmeS5GbGV4U3RhcnQsdGhpcy5hbGlnbkNvbnRlbnQ9bi5ZR0FsaWduLkZsZXhTdGFydCx0aGlzLmFsaWduSXRlbXM9bi5ZR0FsaWduLlN0cmV0Y2gsdGhpcy5hbGlnblNlbGY9bi5ZR0FsaWduLkF1dG8sdGhpcy5wb3NpdGlvblR5cGU9bi5ZR1Bvc2l0aW9uVHlwZS5SZWxhdGl2ZSx0aGlzLmZsZXhXcmFwPW4uWUdXcmFwLk5vV3JhcCx0aGlzLm92ZXJmbG93PW4uWUdPdmVyZmxvdy5WaXNpYmxlLHRoaXMuZGlzcGxheT1uLllHRGlzcGxheS5GbGV4LHRoaXMuZmxleD1uZXcgYS5ZR0Zsb2F0T3B0aW9uYWwsdGhpcy5mbGV4R3Jvdz1uZXcgYS5ZR0Zsb2F0T3B0aW9uYWwsdGhpcy5mbGV4U2hyaW5rPW5ldyBhLllHRmxvYXRPcHRpb25hbCx0aGlzLmZsZXhCYXNpcz1sKCksdGhpcy5tYXJnaW49dSgpLHRoaXMucG9zaXRpb249dSgpLHRoaXMucGFkZGluZz11KCksdGhpcy5ib3JkZXI9dSgpLHRoaXMuZGltZW5zaW9ucz1kKCksdGhpcy5taW5EaW1lbnNpb25zPWcoKSx0aGlzLm1heERpbWVuc2lvbnM9ZygpLHRoaXMuYXNwZWN0UmF0aW89bmV3IGEuWUdGbG9hdE9wdGlvbmFsfXJldHVybiBlLnByb3RvdHlwZS5pc0VxdWFsPWZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMuZGlyZWN0aW9uPT1lLmRpcmVjdGlvbiYmdGhpcy5mbGV4RGlyZWN0aW9uPT1lLmZsZXhEaXJlY3Rpb24mJnRoaXMuanVzdGlmeUNvbnRlbnQ9PWUuanVzdGlmeUNvbnRlbnQmJnRoaXMuYWxpZ25Db250ZW50PT1lLmFsaWduQ29udGVudCYmdGhpcy5hbGlnbkl0ZW1zPT1lLmFsaWduSXRlbXMmJnRoaXMuYWxpZ25TZWxmPT1lLmFsaWduU2VsZiYmdGhpcy5wb3NpdGlvblR5cGU9PWUucG9zaXRpb25UeXBlJiZ0aGlzLmZsZXhXcmFwPT1lLmZsZXhXcmFwJiZ0aGlzLm92ZXJmbG93PT1lLm92ZXJmbG93JiZ0aGlzLmRpc3BsYXk9PWUuZGlzcGxheSYmby5ZR1ZhbHVlRXF1YWwodGhpcy5mbGV4QmFzaXMsZS5mbGV4QmFzaXMpJiZvLllHVmFsdWVBcnJheUVxdWFsKHRoaXMubWFyZ2luLGUubWFyZ2luKSYmby5ZR1ZhbHVlQXJyYXlFcXVhbCh0aGlzLnBvc2l0aW9uLGUucG9zaXRpb24pJiZvLllHVmFsdWVBcnJheUVxdWFsKHRoaXMucGFkZGluZyxlLnBhZGRpbmcpJiZvLllHVmFsdWVBcnJheUVxdWFsKHRoaXMuYm9yZGVyLGUuYm9yZGVyKSYmby5ZR1ZhbHVlQXJyYXlFcXVhbCh0aGlzLmRpbWVuc2lvbnMsZS5kaW1lbnNpb25zKSYmby5ZR1ZhbHVlQXJyYXlFcXVhbCh0aGlzLm1pbkRpbWVuc2lvbnMsZS5taW5EaW1lbnNpb25zKSYmby5ZR1ZhbHVlQXJyYXlFcXVhbCh0aGlzLm1heERpbWVuc2lvbnMsZS5tYXhEaW1lbnNpb25zKTtyZXR1cm4hKHQ9dCYmdGhpcy5mbGV4LmlzVW5kZWZpbmVkKCk9PWUuZmxleC5pc1VuZGVmaW5lZCgpKXx8dGhpcy5mbGV4LmlzVW5kZWZpbmVkKCl8fGUuZmxleC5pc1VuZGVmaW5lZCgpfHwodD10JiZ0aGlzLmZsZXguZ2V0VmFsdWUoKT09ZS5mbGV4LmdldFZhbHVlKCkpLCh0PXQmJnRoaXMuZmxleEdyb3cuaXNVbmRlZmluZWQoKT09ZS5mbGV4R3Jvdy5pc1VuZGVmaW5lZCgpKSYmIXRoaXMuZmxleEdyb3cuaXNVbmRlZmluZWQoKSYmKHQ9dCYmdGhpcy5mbGV4R3Jvdy5nZXRWYWx1ZSgpPT1lLmZsZXhHcm93LmdldFZhbHVlKCkpLCh0PXQmJnRoaXMuZmxleFNocmluay5pc1VuZGVmaW5lZCgpPT1lLmZsZXhTaHJpbmsuaXNVbmRlZmluZWQoKSkmJiFlLmZsZXhTaHJpbmsuaXNVbmRlZmluZWQoKSYmKHQ9dCYmdGhpcy5mbGV4U2hyaW5rLmdldFZhbHVlKCk9PWUuZmxleFNocmluay5nZXRWYWx1ZSgpKSx0aGlzLmFzcGVjdFJhdGlvLmlzVW5kZWZpbmVkKCkmJmUuYXNwZWN0UmF0aW8uaXNVbmRlZmluZWQoKXx8KHQ9dCYmdGhpcy5hc3BlY3RSYXRpby5nZXRWYWx1ZSgpPT1lLmFzcGVjdFJhdGlvLmdldFZhbHVlKCkpLHR9LGUucHJvdG90eXBlLmlzRGlmZj1mdW5jdGlvbihlKXtyZXR1cm4hdGhpcy5pc0VxdWFsKGUpfSxlLnByb3RvdHlwZS5jbG9uZT1mdW5jdGlvbigpe3ZhciB0PW5ldyBlO3JldHVybiB0LmRpcmVjdGlvbj10aGlzLmRpcmVjdGlvbix0LmZsZXhEaXJlY3Rpb249dGhpcy5mbGV4RGlyZWN0aW9uLHQuanVzdGlmeUNvbnRlbnQ9dGhpcy5qdXN0aWZ5Q29udGVudCx0LmFsaWduQ29udGVudD10aGlzLmFsaWduQ29udGVudCx0LmFsaWduSXRlbXM9dGhpcy5hbGlnbkl0ZW1zLHQuYWxpZ25TZWxmPXRoaXMuYWxpZ25TZWxmLHQucG9zaXRpb25UeXBlPXRoaXMucG9zaXRpb25UeXBlLHQuZmxleFdyYXA9dGhpcy5mbGV4V3JhcCx0Lm92ZXJmbG93PXRoaXMub3ZlcmZsb3csdC5kaXNwbGF5PXRoaXMuZGlzcGxheSx0LmZsZXg9dGhpcy5mbGV4LmNsb25lKCksdC5mbGV4R3Jvdz10aGlzLmZsZXhHcm93LmNsb25lKCksdC5mbGV4U2hyaW5rPXRoaXMuZmxleFNocmluay5jbG9uZSgpLHQuZmxleEJhc2lzPXRoaXMuZmxleEJhc2lzLmNsb25lKCksdC5tYXJnaW49by5jbG9uZVlHVmFsdWVBcnJheSh0aGlzLm1hcmdpbiksdC5wb3NpdGlvbj1vLmNsb25lWUdWYWx1ZUFycmF5KHRoaXMucG9zaXRpb24pLHQucGFkZGluZz1vLmNsb25lWUdWYWx1ZUFycmF5KHRoaXMucGFkZGluZyksdC5ib3JkZXI9by5jbG9uZVlHVmFsdWVBcnJheSh0aGlzLmJvcmRlciksdC5kaW1lbnNpb25zPVt0aGlzLmRpbWVuc2lvbnNbMF0uY2xvbmUoKSx0aGlzLmRpbWVuc2lvbnNbMV0uY2xvbmUoKV0sdC5taW5EaW1lbnNpb25zPVt0aGlzLm1pbkRpbWVuc2lvbnNbMF0uY2xvbmUoKSx0aGlzLm1pbkRpbWVuc2lvbnNbMV0uY2xvbmUoKV0sdC5tYXhEaW1lbnNpb25zPVt0aGlzLm1heERpbWVuc2lvbnNbMF0uY2xvbmUoKSx0aGlzLm1heERpbWVuc2lvbnNbMV0uY2xvbmUoKV0sdC5hc3BlY3RSYXRpbz10aGlzLmFzcGVjdFJhdGlvLmNsb25lKCksdH0sZX0oKTt0LllHU3R5bGU9R31dKTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/typeflex/dist/Yoga.js\n");

/***/ }),

/***/ "./node_modules/util-deprecate/browser.js":
/*!************************************************!*\
  !*** ./node_modules/util-deprecate/browser.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global) {\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdXRpbC1kZXByZWNhdGUvYnJvd3Nlci5qcz9iN2QxIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxTQUFTO0FBQ3BCLFdBQVcsT0FBTztBQUNsQixhQUFhLFNBQVM7QUFDdEI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixhQUFhO0FBQ2I7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXRpbC1kZXByZWNhdGUvYnJvd3Nlci5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuLyoqXG4gKiBNb2R1bGUgZXhwb3J0cy5cbiAqL1xuXG5tb2R1bGUuZXhwb3J0cyA9IGRlcHJlY2F0ZTtcblxuLyoqXG4gKiBNYXJrIHRoYXQgYSBtZXRob2Qgc2hvdWxkIG5vdCBiZSB1c2VkLlxuICogUmV0dXJucyBhIG1vZGlmaWVkIGZ1bmN0aW9uIHdoaWNoIHdhcm5zIG9uY2UgYnkgZGVmYXVsdC5cbiAqXG4gKiBJZiBgbG9jYWxTdG9yYWdlLm5vRGVwcmVjYXRpb24gPSB0cnVlYCBpcyBzZXQsIHRoZW4gaXQgaXMgYSBuby1vcC5cbiAqXG4gKiBJZiBgbG9jYWxTdG9yYWdlLnRocm93RGVwcmVjYXRpb24gPSB0cnVlYCBpcyBzZXQsIHRoZW4gZGVwcmVjYXRlZCBmdW5jdGlvbnNcbiAqIHdpbGwgdGhyb3cgYW4gRXJyb3Igd2hlbiBpbnZva2VkLlxuICpcbiAqIElmIGBsb2NhbFN0b3JhZ2UudHJhY2VEZXByZWNhdGlvbiA9IHRydWVgIGlzIHNldCwgdGhlbiBkZXByZWNhdGVkIGZ1bmN0aW9uc1xuICogd2lsbCBpbnZva2UgYGNvbnNvbGUudHJhY2UoKWAgaW5zdGVhZCBvZiBgY29uc29sZS5lcnJvcigpYC5cbiAqXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBmbiAtIHRoZSBmdW5jdGlvbiB0byBkZXByZWNhdGVcbiAqIEBwYXJhbSB7U3RyaW5nfSBtc2cgLSB0aGUgc3RyaW5nIHRvIHByaW50IHRvIHRoZSBjb25zb2xlIHdoZW4gYGZuYCBpcyBpbnZva2VkXG4gKiBAcmV0dXJucyB7RnVuY3Rpb259IGEgbmV3IFwiZGVwcmVjYXRlZFwiIHZlcnNpb24gb2YgYGZuYFxuICogQGFwaSBwdWJsaWNcbiAqL1xuXG5mdW5jdGlvbiBkZXByZWNhdGUgKGZuLCBtc2cpIHtcbiAgaWYgKGNvbmZpZygnbm9EZXByZWNhdGlvbicpKSB7XG4gICAgcmV0dXJuIGZuO1xuICB9XG5cbiAgdmFyIHdhcm5lZCA9IGZhbHNlO1xuICBmdW5jdGlvbiBkZXByZWNhdGVkKCkge1xuICAgIGlmICghd2FybmVkKSB7XG4gICAgICBpZiAoY29uZmlnKCd0aHJvd0RlcHJlY2F0aW9uJykpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKG1zZyk7XG4gICAgICB9IGVsc2UgaWYgKGNvbmZpZygndHJhY2VEZXByZWNhdGlvbicpKSB7XG4gICAgICAgIGNvbnNvbGUudHJhY2UobXNnKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNvbnNvbGUud2Fybihtc2cpO1xuICAgICAgfVxuICAgICAgd2FybmVkID0gdHJ1ZTtcbiAgICB9XG4gICAgcmV0dXJuIGZuLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gIH1cblxuICByZXR1cm4gZGVwcmVjYXRlZDtcbn1cblxuLyoqXG4gKiBDaGVja3MgYGxvY2FsU3RvcmFnZWAgZm9yIGJvb2xlYW4gdmFsdWVzIGZvciB0aGUgZ2l2ZW4gYG5hbWVgLlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBuYW1lXG4gKiBAcmV0dXJucyB7Qm9vbGVhbn1cbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cbmZ1bmN0aW9uIGNvbmZpZyAobmFtZSkge1xuICAvLyBhY2Nlc3NpbmcgZ2xvYmFsLmxvY2FsU3RvcmFnZSBjYW4gdHJpZ2dlciBhIERPTUV4Y2VwdGlvbiBpbiBzYW5kYm94ZWQgaWZyYW1lc1xuICB0cnkge1xuICAgIGlmICghZ2xvYmFsLmxvY2FsU3RvcmFnZSkgcmV0dXJuIGZhbHNlO1xuICB9IGNhdGNoIChfKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIHZhciB2YWwgPSBnbG9iYWwubG9jYWxTdG9yYWdlW25hbWVdO1xuICBpZiAobnVsbCA9PSB2YWwpIHJldHVybiBmYWxzZTtcbiAgcmV0dXJuIFN0cmluZyh2YWwpLnRvTG93ZXJDYXNlKCkgPT09ICd0cnVlJztcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/util-deprecate/browser.js\n");

/***/ }),

/***/ "./node_modules/uuid/index.js":
/*!************************************!*\
  !*** ./node_modules/uuid/index.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var v1 = __webpack_require__(/*! ./v1 */ \"./node_modules/uuid/v1.js\");\nvar v4 = __webpack_require__(/*! ./v4 */ \"./node_modules/uuid/v4.js\");\n\nvar uuid = v4;\nuuid.v1 = v1;\nuuid.v4 = v4;\n\nmodule.exports = uuid;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdXVpZC9pbmRleC5qcz8xMWMxIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLFNBQVMsbUJBQU8sQ0FBQyx1Q0FBTTtBQUN2QixTQUFTLG1CQUFPLENBQUMsdUNBQU07O0FBRXZCO0FBQ0E7QUFDQTs7QUFFQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy91dWlkL2luZGV4LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIHYxID0gcmVxdWlyZSgnLi92MScpO1xudmFyIHY0ID0gcmVxdWlyZSgnLi92NCcpO1xuXG52YXIgdXVpZCA9IHY0O1xudXVpZC52MSA9IHYxO1xudXVpZC52NCA9IHY0O1xuXG5tb2R1bGUuZXhwb3J0cyA9IHV1aWQ7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/uuid/index.js\n");

/***/ }),

/***/ "./node_modules/uuid/lib/bytesToUuid.js":
/*!**********************************************!*\
  !*** ./node_modules/uuid/lib/bytesToUuid.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([bth[buf[i++]], bth[buf[i++]], \n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]]]).join('');\n}\n\nmodule.exports = bytesToUuid;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdXVpZC9saWIvYnl0ZXNUb1V1aWQuanM/MjM2NiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxTQUFTO0FBQ3hCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXVpZC9saWIvYnl0ZXNUb1V1aWQuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvbnZlcnQgYXJyYXkgb2YgMTYgYnl0ZSB2YWx1ZXMgdG8gVVVJRCBzdHJpbmcgZm9ybWF0IG9mIHRoZSBmb3JtOlxuICogWFhYWFhYWFgtWFhYWC1YWFhYLVhYWFgtWFhYWFhYWFhYWFhYXG4gKi9cbnZhciBieXRlVG9IZXggPSBbXTtcbmZvciAodmFyIGkgPSAwOyBpIDwgMjU2OyArK2kpIHtcbiAgYnl0ZVRvSGV4W2ldID0gKGkgKyAweDEwMCkudG9TdHJpbmcoMTYpLnN1YnN0cigxKTtcbn1cblxuZnVuY3Rpb24gYnl0ZXNUb1V1aWQoYnVmLCBvZmZzZXQpIHtcbiAgdmFyIGkgPSBvZmZzZXQgfHwgMDtcbiAgdmFyIGJ0aCA9IGJ5dGVUb0hleDtcbiAgLy8gam9pbiB1c2VkIHRvIGZpeCBtZW1vcnkgaXNzdWUgY2F1c2VkIGJ5IGNvbmNhdGVuYXRpb246IGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTMxNzUjYzRcbiAgcmV0dXJuIChbYnRoW2J1ZltpKytdXSwgYnRoW2J1ZltpKytdXSwgXG5cdGJ0aFtidWZbaSsrXV0sIGJ0aFtidWZbaSsrXV0sICctJyxcblx0YnRoW2J1ZltpKytdXSwgYnRoW2J1ZltpKytdXSwgJy0nLFxuXHRidGhbYnVmW2krK11dLCBidGhbYnVmW2krK11dLCAnLScsXG5cdGJ0aFtidWZbaSsrXV0sIGJ0aFtidWZbaSsrXV0sICctJyxcblx0YnRoW2J1ZltpKytdXSwgYnRoW2J1ZltpKytdXSxcblx0YnRoW2J1ZltpKytdXSwgYnRoW2J1ZltpKytdXSxcblx0YnRoW2J1ZltpKytdXSwgYnRoW2J1ZltpKytdXV0pLmpvaW4oJycpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGJ5dGVzVG9VdWlkO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/uuid/lib/bytesToUuid.js\n");

/***/ }),

/***/ "./node_modules/uuid/lib/rng-browser.js":
/*!**********************************************!*\
  !*** ./node_modules/uuid/lib/rng-browser.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n// implementation. Also, find the complete implementation of crypto on IE11.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdXVpZC9saWIvcm5nLWJyb3dzZXIuanM/ZTFmNCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsaUNBQWlDOztBQUVqQztBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0Esc0JBQXNCLFFBQVE7QUFDOUI7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy91dWlkL2xpYi9ybmctYnJvd3Nlci5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIFVuaXF1ZSBJRCBjcmVhdGlvbiByZXF1aXJlcyBhIGhpZ2ggcXVhbGl0eSByYW5kb20gIyBnZW5lcmF0b3IuICBJbiB0aGVcbi8vIGJyb3dzZXIgdGhpcyBpcyBhIGxpdHRsZSBjb21wbGljYXRlZCBkdWUgdG8gdW5rbm93biBxdWFsaXR5IG9mIE1hdGgucmFuZG9tKClcbi8vIGFuZCBpbmNvbnNpc3RlbnQgc3VwcG9ydCBmb3IgdGhlIGBjcnlwdG9gIEFQSS4gIFdlIGRvIHRoZSBiZXN0IHdlIGNhbiB2aWFcbi8vIGZlYXR1cmUtZGV0ZWN0aW9uXG5cbi8vIGdldFJhbmRvbVZhbHVlcyBuZWVkcyB0byBiZSBpbnZva2VkIGluIGEgY29udGV4dCB3aGVyZSBcInRoaXNcIiBpcyBhIENyeXB0b1xuLy8gaW1wbGVtZW50YXRpb24uIEFsc28sIGZpbmQgdGhlIGNvbXBsZXRlIGltcGxlbWVudGF0aW9uIG9mIGNyeXB0byBvbiBJRTExLlxudmFyIGdldFJhbmRvbVZhbHVlcyA9ICh0eXBlb2YoY3J5cHRvKSAhPSAndW5kZWZpbmVkJyAmJiBjcnlwdG8uZ2V0UmFuZG9tVmFsdWVzICYmIGNyeXB0by5nZXRSYW5kb21WYWx1ZXMuYmluZChjcnlwdG8pKSB8fFxuICAgICAgICAgICAgICAgICAgICAgICh0eXBlb2YobXNDcnlwdG8pICE9ICd1bmRlZmluZWQnICYmIHR5cGVvZiB3aW5kb3cubXNDcnlwdG8uZ2V0UmFuZG9tVmFsdWVzID09ICdmdW5jdGlvbicgJiYgbXNDcnlwdG8uZ2V0UmFuZG9tVmFsdWVzLmJpbmQobXNDcnlwdG8pKTtcblxuaWYgKGdldFJhbmRvbVZhbHVlcykge1xuICAvLyBXSEFUV0cgY3J5cHRvIFJORyAtIGh0dHA6Ly93aWtpLndoYXR3Zy5vcmcvd2lraS9DcnlwdG9cbiAgdmFyIHJuZHM4ID0gbmV3IFVpbnQ4QXJyYXkoMTYpOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXVuZGVmXG5cbiAgbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiB3aGF0d2dSTkcoKSB7XG4gICAgZ2V0UmFuZG9tVmFsdWVzKHJuZHM4KTtcbiAgICByZXR1cm4gcm5kczg7XG4gIH07XG59IGVsc2Uge1xuICAvLyBNYXRoLnJhbmRvbSgpLWJhc2VkIChSTkcpXG4gIC8vXG4gIC8vIElmIGFsbCBlbHNlIGZhaWxzLCB1c2UgTWF0aC5yYW5kb20oKS4gIEl0J3MgZmFzdCwgYnV0IGlzIG9mIHVuc3BlY2lmaWVkXG4gIC8vIHF1YWxpdHkuXG4gIHZhciBybmRzID0gbmV3IEFycmF5KDE2KTtcblxuICBtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIG1hdGhSTkcoKSB7XG4gICAgZm9yICh2YXIgaSA9IDAsIHI7IGkgPCAxNjsgaSsrKSB7XG4gICAgICBpZiAoKGkgJiAweDAzKSA9PT0gMCkgciA9IE1hdGgucmFuZG9tKCkgKiAweDEwMDAwMDAwMDtcbiAgICAgIHJuZHNbaV0gPSByID4+PiAoKGkgJiAweDAzKSA8PCAzKSAmIDB4ZmY7XG4gICAgfVxuXG4gICAgcmV0dXJuIHJuZHM7XG4gIH07XG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/uuid/lib/rng-browser.js\n");

/***/ }),

/***/ "./node_modules/uuid/v1.js":
/*!*********************************!*\
  !*** ./node_modules/uuid/v1.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var rng = __webpack_require__(/*! ./lib/rng */ \"./node_modules/uuid/lib/rng-browser.js\");\nvar bytesToUuid = __webpack_require__(/*! ./lib/bytesToUuid */ \"./node_modules/uuid/lib/bytesToUuid.js\");\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\nvar _clockseq;\n\n// Previous uuid creation time\nvar _lastMSecs = 0;\nvar _lastNSecs = 0;\n\n// See https://github.com/broofa/node-uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n  if (node == null || clockseq == null) {\n    var seedBytes = rng();\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [\n        seedBytes[0] | 0x01,\n        seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]\n      ];\n    }\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  }\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : bytesToUuid(b);\n}\n\nmodule.exports = v1;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdXVpZC92MS5qcz9jNDM3Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLFVBQVUsbUJBQU8sQ0FBQyx5REFBVztBQUM3QixrQkFBa0IsbUJBQU8sQ0FBQyxpRUFBbUI7O0FBRTdDO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxtQ0FBbUM7QUFDbkM7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0EsaUJBQWlCLE9BQU87QUFDeEI7QUFDQTs7QUFFQTtBQUNBOztBQUVBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL3V1aWQvdjEuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgcm5nID0gcmVxdWlyZSgnLi9saWIvcm5nJyk7XG52YXIgYnl0ZXNUb1V1aWQgPSByZXF1aXJlKCcuL2xpYi9ieXRlc1RvVXVpZCcpO1xuXG4vLyAqKmB2MSgpYCAtIEdlbmVyYXRlIHRpbWUtYmFzZWQgVVVJRCoqXG4vL1xuLy8gSW5zcGlyZWQgYnkgaHR0cHM6Ly9naXRodWIuY29tL0xpb3NLL1VVSUQuanNcbi8vIGFuZCBodHRwOi8vZG9jcy5weXRob24ub3JnL2xpYnJhcnkvdXVpZC5odG1sXG5cbnZhciBfbm9kZUlkO1xudmFyIF9jbG9ja3NlcTtcblxuLy8gUHJldmlvdXMgdXVpZCBjcmVhdGlvbiB0aW1lXG52YXIgX2xhc3RNU2VjcyA9IDA7XG52YXIgX2xhc3ROU2VjcyA9IDA7XG5cbi8vIFNlZSBodHRwczovL2dpdGh1Yi5jb20vYnJvb2ZhL25vZGUtdXVpZCBmb3IgQVBJIGRldGFpbHNcbmZ1bmN0aW9uIHYxKG9wdGlvbnMsIGJ1Ziwgb2Zmc2V0KSB7XG4gIHZhciBpID0gYnVmICYmIG9mZnNldCB8fCAwO1xuICB2YXIgYiA9IGJ1ZiB8fCBbXTtcblxuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgdmFyIG5vZGUgPSBvcHRpb25zLm5vZGUgfHwgX25vZGVJZDtcbiAgdmFyIGNsb2Nrc2VxID0gb3B0aW9ucy5jbG9ja3NlcSAhPT0gdW5kZWZpbmVkID8gb3B0aW9ucy5jbG9ja3NlcSA6IF9jbG9ja3NlcTtcblxuICAvLyBub2RlIGFuZCBjbG9ja3NlcSBuZWVkIHRvIGJlIGluaXRpYWxpemVkIHRvIHJhbmRvbSB2YWx1ZXMgaWYgdGhleSdyZSBub3RcbiAgLy8gc3BlY2lmaWVkLiAgV2UgZG8gdGhpcyBsYXppbHkgdG8gbWluaW1pemUgaXNzdWVzIHJlbGF0ZWQgdG8gaW5zdWZmaWNpZW50XG4gIC8vIHN5c3RlbSBlbnRyb3B5LiAgU2VlICMxODlcbiAgaWYgKG5vZGUgPT0gbnVsbCB8fCBjbG9ja3NlcSA9PSBudWxsKSB7XG4gICAgdmFyIHNlZWRCeXRlcyA9IHJuZygpO1xuICAgIGlmIChub2RlID09IG51bGwpIHtcbiAgICAgIC8vIFBlciA0LjUsIGNyZWF0ZSBhbmQgNDgtYml0IG5vZGUgaWQsICg0NyByYW5kb20gYml0cyArIG11bHRpY2FzdCBiaXQgPSAxKVxuICAgICAgbm9kZSA9IF9ub2RlSWQgPSBbXG4gICAgICAgIHNlZWRCeXRlc1swXSB8IDB4MDEsXG4gICAgICAgIHNlZWRCeXRlc1sxXSwgc2VlZEJ5dGVzWzJdLCBzZWVkQnl0ZXNbM10sIHNlZWRCeXRlc1s0XSwgc2VlZEJ5dGVzWzVdXG4gICAgICBdO1xuICAgIH1cbiAgICBpZiAoY2xvY2tzZXEgPT0gbnVsbCkge1xuICAgICAgLy8gUGVyIDQuMi4yLCByYW5kb21pemUgKDE0IGJpdCkgY2xvY2tzZXFcbiAgICAgIGNsb2Nrc2VxID0gX2Nsb2Nrc2VxID0gKHNlZWRCeXRlc1s2XSA8PCA4IHwgc2VlZEJ5dGVzWzddKSAmIDB4M2ZmZjtcbiAgICB9XG4gIH1cblxuICAvLyBVVUlEIHRpbWVzdGFtcHMgYXJlIDEwMCBuYW5vLXNlY29uZCB1bml0cyBzaW5jZSB0aGUgR3JlZ29yaWFuIGVwb2NoLFxuICAvLyAoMTU4Mi0xMC0xNSAwMDowMCkuICBKU051bWJlcnMgYXJlbid0IHByZWNpc2UgZW5vdWdoIGZvciB0aGlzLCBzb1xuICAvLyB0aW1lIGlzIGhhbmRsZWQgaW50ZXJuYWxseSBhcyAnbXNlY3MnIChpbnRlZ2VyIG1pbGxpc2Vjb25kcykgYW5kICduc2VjcydcbiAgLy8gKDEwMC1uYW5vc2Vjb25kcyBvZmZzZXQgZnJvbSBtc2Vjcykgc2luY2UgdW5peCBlcG9jaCwgMTk3MC0wMS0wMSAwMDowMC5cbiAgdmFyIG1zZWNzID0gb3B0aW9ucy5tc2VjcyAhPT0gdW5kZWZpbmVkID8gb3B0aW9ucy5tc2VjcyA6IG5ldyBEYXRlKCkuZ2V0VGltZSgpO1xuXG4gIC8vIFBlciA0LjIuMS4yLCB1c2UgY291bnQgb2YgdXVpZCdzIGdlbmVyYXRlZCBkdXJpbmcgdGhlIGN1cnJlbnQgY2xvY2tcbiAgLy8gY3ljbGUgdG8gc2ltdWxhdGUgaGlnaGVyIHJlc29sdXRpb24gY2xvY2tcbiAgdmFyIG5zZWNzID0gb3B0aW9ucy5uc2VjcyAhPT0gdW5kZWZpbmVkID8gb3B0aW9ucy5uc2VjcyA6IF9sYXN0TlNlY3MgKyAxO1xuXG4gIC8vIFRpbWUgc2luY2UgbGFzdCB1dWlkIGNyZWF0aW9uIChpbiBtc2VjcylcbiAgdmFyIGR0ID0gKG1zZWNzIC0gX2xhc3RNU2VjcykgKyAobnNlY3MgLSBfbGFzdE5TZWNzKS8xMDAwMDtcblxuICAvLyBQZXIgNC4yLjEuMiwgQnVtcCBjbG9ja3NlcSBvbiBjbG9jayByZWdyZXNzaW9uXG4gIGlmIChkdCA8IDAgJiYgb3B0aW9ucy5jbG9ja3NlcSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgY2xvY2tzZXEgPSBjbG9ja3NlcSArIDEgJiAweDNmZmY7XG4gIH1cblxuICAvLyBSZXNldCBuc2VjcyBpZiBjbG9jayByZWdyZXNzZXMgKG5ldyBjbG9ja3NlcSkgb3Igd2UndmUgbW92ZWQgb250byBhIG5ld1xuICAvLyB0aW1lIGludGVydmFsXG4gIGlmICgoZHQgPCAwIHx8IG1zZWNzID4gX2xhc3RNU2VjcykgJiYgb3B0aW9ucy5uc2VjcyA9PT0gdW5kZWZpbmVkKSB7XG4gICAgbnNlY3MgPSAwO1xuICB9XG5cbiAgLy8gUGVyIDQuMi4xLjIgVGhyb3cgZXJyb3IgaWYgdG9vIG1hbnkgdXVpZHMgYXJlIHJlcXVlc3RlZFxuICBpZiAobnNlY3MgPj0gMTAwMDApIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ3V1aWQudjEoKTogQ2FuXFwndCBjcmVhdGUgbW9yZSB0aGFuIDEwTSB1dWlkcy9zZWMnKTtcbiAgfVxuXG4gIF9sYXN0TVNlY3MgPSBtc2VjcztcbiAgX2xhc3ROU2VjcyA9IG5zZWNzO1xuICBfY2xvY2tzZXEgPSBjbG9ja3NlcTtcblxuICAvLyBQZXIgNC4xLjQgLSBDb252ZXJ0IGZyb20gdW5peCBlcG9jaCB0byBHcmVnb3JpYW4gZXBvY2hcbiAgbXNlY3MgKz0gMTIyMTkyOTI4MDAwMDA7XG5cbiAgLy8gYHRpbWVfbG93YFxuICB2YXIgdGwgPSAoKG1zZWNzICYgMHhmZmZmZmZmKSAqIDEwMDAwICsgbnNlY3MpICUgMHgxMDAwMDAwMDA7XG4gIGJbaSsrXSA9IHRsID4+PiAyNCAmIDB4ZmY7XG4gIGJbaSsrXSA9IHRsID4+PiAxNiAmIDB4ZmY7XG4gIGJbaSsrXSA9IHRsID4+PiA4ICYgMHhmZjtcbiAgYltpKytdID0gdGwgJiAweGZmO1xuXG4gIC8vIGB0aW1lX21pZGBcbiAgdmFyIHRtaCA9IChtc2VjcyAvIDB4MTAwMDAwMDAwICogMTAwMDApICYgMHhmZmZmZmZmO1xuICBiW2krK10gPSB0bWggPj4+IDggJiAweGZmO1xuICBiW2krK10gPSB0bWggJiAweGZmO1xuXG4gIC8vIGB0aW1lX2hpZ2hfYW5kX3ZlcnNpb25gXG4gIGJbaSsrXSA9IHRtaCA+Pj4gMjQgJiAweGYgfCAweDEwOyAvLyBpbmNsdWRlIHZlcnNpb25cbiAgYltpKytdID0gdG1oID4+PiAxNiAmIDB4ZmY7XG5cbiAgLy8gYGNsb2NrX3NlcV9oaV9hbmRfcmVzZXJ2ZWRgIChQZXIgNC4yLjIgLSBpbmNsdWRlIHZhcmlhbnQpXG4gIGJbaSsrXSA9IGNsb2Nrc2VxID4+PiA4IHwgMHg4MDtcblxuICAvLyBgY2xvY2tfc2VxX2xvd2BcbiAgYltpKytdID0gY2xvY2tzZXEgJiAweGZmO1xuXG4gIC8vIGBub2RlYFxuICBmb3IgKHZhciBuID0gMDsgbiA8IDY7ICsrbikge1xuICAgIGJbaSArIG5dID0gbm9kZVtuXTtcbiAgfVxuXG4gIHJldHVybiBidWYgPyBidWYgOiBieXRlc1RvVXVpZChiKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB2MTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/uuid/v1.js\n");

/***/ }),

/***/ "./node_modules/uuid/v4.js":
/*!*********************************!*\
  !*** ./node_modules/uuid/v4.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var rng = __webpack_require__(/*! ./lib/rng */ \"./node_modules/uuid/lib/rng-browser.js\");\nvar bytesToUuid = __webpack_require__(/*! ./lib/bytesToUuid */ \"./node_modules/uuid/lib/bytesToUuid.js\");\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdXVpZC92NC5qcz9jNjRlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLFVBQVUsbUJBQU8sQ0FBQyx5REFBVztBQUM3QixrQkFBa0IsbUJBQU8sQ0FBQyxpRUFBbUI7O0FBRTdDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLG9CQUFvQixTQUFTO0FBQzdCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL3V1aWQvdjQuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgcm5nID0gcmVxdWlyZSgnLi9saWIvcm5nJyk7XG52YXIgYnl0ZXNUb1V1aWQgPSByZXF1aXJlKCcuL2xpYi9ieXRlc1RvVXVpZCcpO1xuXG5mdW5jdGlvbiB2NChvcHRpb25zLCBidWYsIG9mZnNldCkge1xuICB2YXIgaSA9IGJ1ZiAmJiBvZmZzZXQgfHwgMDtcblxuICBpZiAodHlwZW9mKG9wdGlvbnMpID09ICdzdHJpbmcnKSB7XG4gICAgYnVmID0gb3B0aW9ucyA9PT0gJ2JpbmFyeScgPyBuZXcgQXJyYXkoMTYpIDogbnVsbDtcbiAgICBvcHRpb25zID0gbnVsbDtcbiAgfVxuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcblxuICB2YXIgcm5kcyA9IG9wdGlvbnMucmFuZG9tIHx8IChvcHRpb25zLnJuZyB8fCBybmcpKCk7XG5cbiAgLy8gUGVyIDQuNCwgc2V0IGJpdHMgZm9yIHZlcnNpb24gYW5kIGBjbG9ja19zZXFfaGlfYW5kX3Jlc2VydmVkYFxuICBybmRzWzZdID0gKHJuZHNbNl0gJiAweDBmKSB8IDB4NDA7XG4gIHJuZHNbOF0gPSAocm5kc1s4XSAmIDB4M2YpIHwgMHg4MDtcblxuICAvLyBDb3B5IGJ5dGVzIHRvIGJ1ZmZlciwgaWYgcHJvdmlkZWRcbiAgaWYgKGJ1Zikge1xuICAgIGZvciAodmFyIGlpID0gMDsgaWkgPCAxNjsgKytpaSkge1xuICAgICAgYnVmW2kgKyBpaV0gPSBybmRzW2lpXTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gYnVmIHx8IGJ5dGVzVG9VdWlkKHJuZHMpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHY0O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/uuid/v4.js\n");

/***/ }),

/***/ "./node_modules/webpack/buildin/global.js":
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\r\n} catch (e) {\r\n\t// This works if the window reference is available\r\n\tif (typeof window === \"object\") g = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spL2J1aWxkaW4vZ2xvYmFsLmpzP2NkMDAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSw0Q0FBNEM7O0FBRTVDIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL3dlYnBhY2svYnVpbGRpbi9nbG9iYWwuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZztcclxuXHJcbi8vIFRoaXMgd29ya3MgaW4gbm9uLXN0cmljdCBtb2RlXHJcbmcgPSAoZnVuY3Rpb24oKSB7XHJcblx0cmV0dXJuIHRoaXM7XHJcbn0pKCk7XHJcblxyXG50cnkge1xyXG5cdC8vIFRoaXMgd29ya3MgaWYgZXZhbCBpcyBhbGxvd2VkIChzZWUgQ1NQKVxyXG5cdGcgPSBnIHx8IEZ1bmN0aW9uKFwicmV0dXJuIHRoaXNcIikoKSB8fCAoMSwgZXZhbCkoXCJ0aGlzXCIpO1xyXG59IGNhdGNoIChlKSB7XHJcblx0Ly8gVGhpcyB3b3JrcyBpZiB0aGUgd2luZG93IHJlZmVyZW5jZSBpcyBhdmFpbGFibGVcclxuXHRpZiAodHlwZW9mIHdpbmRvdyA9PT0gXCJvYmplY3RcIikgZyA9IHdpbmRvdztcclxufVxyXG5cclxuLy8gZyBjYW4gc3RpbGwgYmUgdW5kZWZpbmVkLCBidXQgbm90aGluZyB0byBkbyBhYm91dCBpdC4uLlxyXG4vLyBXZSByZXR1cm4gdW5kZWZpbmVkLCBpbnN0ZWFkIG9mIG5vdGhpbmcgaGVyZSwgc28gaXQnc1xyXG4vLyBlYXNpZXIgdG8gaGFuZGxlIHRoaXMgY2FzZS4gaWYoIWdsb2JhbCkgeyAuLi59XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IGc7XHJcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/webpack/buildin/global.js\n");

/***/ }),

/***/ "./node_modules/whatwg-fetch/fetch.js":
/*!********************************************!*\
  !*** ./node_modules/whatwg-fetch/fetch.js ***!
  \********************************************/
/*! exports provided: Headers, Request, Response, DOMException, fetch */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Headers\", function() { return Headers; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Request\", function() { return Request; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Response\", function() { return Response; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DOMException\", function() { return DOMException; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"fetch\", function() { return fetch; });\nvar support = {\n  searchParams: 'URLSearchParams' in self,\n  iterable: 'Symbol' in self && 'iterator' in Symbol,\n  blob:\n    'FileReader' in self &&\n    'Blob' in self &&\n    (function() {\n      try {\n        new Blob()\n        return true\n      } catch (e) {\n        return false\n      }\n    })(),\n  formData: 'FormData' in self,\n  arrayBuffer: 'ArrayBuffer' in self\n}\n\nfunction isDataView(obj) {\n  return obj && DataView.prototype.isPrototypeOf(obj)\n}\n\nif (support.arrayBuffer) {\n  var viewClasses = [\n    '[object Int8Array]',\n    '[object Uint8Array]',\n    '[object Uint8ClampedArray]',\n    '[object Int16Array]',\n    '[object Uint16Array]',\n    '[object Int32Array]',\n    '[object Uint32Array]',\n    '[object Float32Array]',\n    '[object Float64Array]'\n  ]\n\n  var isArrayBufferView =\n    ArrayBuffer.isView ||\n    function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n}\n\nfunction normalizeName(name) {\n  if (typeof name !== 'string') {\n    name = String(name)\n  }\n  if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n    throw new TypeError('Invalid character in header field name')\n  }\n  return name.toLowerCase()\n}\n\nfunction normalizeValue(value) {\n  if (typeof value !== 'string') {\n    value = String(value)\n  }\n  return value\n}\n\n// Build a destructive iterator for the value list\nfunction iteratorFor(items) {\n  var iterator = {\n    next: function() {\n      var value = items.shift()\n      return {done: value === undefined, value: value}\n    }\n  }\n\n  if (support.iterable) {\n    iterator[Symbol.iterator] = function() {\n      return iterator\n    }\n  }\n\n  return iterator\n}\n\nfunction Headers(headers) {\n  this.map = {}\n\n  if (headers instanceof Headers) {\n    headers.forEach(function(value, name) {\n      this.append(name, value)\n    }, this)\n  } else if (Array.isArray(headers)) {\n    headers.forEach(function(header) {\n      this.append(header[0], header[1])\n    }, this)\n  } else if (headers) {\n    Object.getOwnPropertyNames(headers).forEach(function(name) {\n      this.append(name, headers[name])\n    }, this)\n  }\n}\n\nHeaders.prototype.append = function(name, value) {\n  name = normalizeName(name)\n  value = normalizeValue(value)\n  var oldValue = this.map[name]\n  this.map[name] = oldValue ? oldValue + ', ' + value : value\n}\n\nHeaders.prototype['delete'] = function(name) {\n  delete this.map[normalizeName(name)]\n}\n\nHeaders.prototype.get = function(name) {\n  name = normalizeName(name)\n  return this.has(name) ? this.map[name] : null\n}\n\nHeaders.prototype.has = function(name) {\n  return this.map.hasOwnProperty(normalizeName(name))\n}\n\nHeaders.prototype.set = function(name, value) {\n  this.map[normalizeName(name)] = normalizeValue(value)\n}\n\nHeaders.prototype.forEach = function(callback, thisArg) {\n  for (var name in this.map) {\n    if (this.map.hasOwnProperty(name)) {\n      callback.call(thisArg, this.map[name], name, this)\n    }\n  }\n}\n\nHeaders.prototype.keys = function() {\n  var items = []\n  this.forEach(function(value, name) {\n    items.push(name)\n  })\n  return iteratorFor(items)\n}\n\nHeaders.prototype.values = function() {\n  var items = []\n  this.forEach(function(value) {\n    items.push(value)\n  })\n  return iteratorFor(items)\n}\n\nHeaders.prototype.entries = function() {\n  var items = []\n  this.forEach(function(value, name) {\n    items.push([name, value])\n  })\n  return iteratorFor(items)\n}\n\nif (support.iterable) {\n  Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n}\n\nfunction consumed(body) {\n  if (body.bodyUsed) {\n    return Promise.reject(new TypeError('Already read'))\n  }\n  body.bodyUsed = true\n}\n\nfunction fileReaderReady(reader) {\n  return new Promise(function(resolve, reject) {\n    reader.onload = function() {\n      resolve(reader.result)\n    }\n    reader.onerror = function() {\n      reject(reader.error)\n    }\n  })\n}\n\nfunction readBlobAsArrayBuffer(blob) {\n  var reader = new FileReader()\n  var promise = fileReaderReady(reader)\n  reader.readAsArrayBuffer(blob)\n  return promise\n}\n\nfunction readBlobAsText(blob) {\n  var reader = new FileReader()\n  var promise = fileReaderReady(reader)\n  reader.readAsText(blob)\n  return promise\n}\n\nfunction readArrayBufferAsText(buf) {\n  var view = new Uint8Array(buf)\n  var chars = new Array(view.length)\n\n  for (var i = 0; i < view.length; i++) {\n    chars[i] = String.fromCharCode(view[i])\n  }\n  return chars.join('')\n}\n\nfunction bufferClone(buf) {\n  if (buf.slice) {\n    return buf.slice(0)\n  } else {\n    var view = new Uint8Array(buf.byteLength)\n    view.set(new Uint8Array(buf))\n    return view.buffer\n  }\n}\n\nfunction Body() {\n  this.bodyUsed = false\n\n  this._initBody = function(body) {\n    this._bodyInit = body\n    if (!body) {\n      this._bodyText = ''\n    } else if (typeof body === 'string') {\n      this._bodyText = body\n    } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n      this._bodyBlob = body\n    } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n      this._bodyFormData = body\n    } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n      this._bodyText = body.toString()\n    } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n      this._bodyArrayBuffer = bufferClone(body.buffer)\n      // IE 10-11 can't handle a DataView body.\n      this._bodyInit = new Blob([this._bodyArrayBuffer])\n    } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n      this._bodyArrayBuffer = bufferClone(body)\n    } else {\n      this._bodyText = body = Object.prototype.toString.call(body)\n    }\n\n    if (!this.headers.get('content-type')) {\n      if (typeof body === 'string') {\n        this.headers.set('content-type', 'text/plain;charset=UTF-8')\n      } else if (this._bodyBlob && this._bodyBlob.type) {\n        this.headers.set('content-type', this._bodyBlob.type)\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n      }\n    }\n  }\n\n  if (support.blob) {\n    this.blob = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return Promise.resolve(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as blob')\n      } else {\n        return Promise.resolve(new Blob([this._bodyText]))\n      }\n    }\n\n    this.arrayBuffer = function() {\n      if (this._bodyArrayBuffer) {\n        return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n      } else {\n        return this.blob().then(readBlobAsArrayBuffer)\n      }\n    }\n  }\n\n  this.text = function() {\n    var rejected = consumed(this)\n    if (rejected) {\n      return rejected\n    }\n\n    if (this._bodyBlob) {\n      return readBlobAsText(this._bodyBlob)\n    } else if (this._bodyArrayBuffer) {\n      return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n    } else if (this._bodyFormData) {\n      throw new Error('could not read FormData body as text')\n    } else {\n      return Promise.resolve(this._bodyText)\n    }\n  }\n\n  if (support.formData) {\n    this.formData = function() {\n      return this.text().then(decode)\n    }\n  }\n\n  this.json = function() {\n    return this.text().then(JSON.parse)\n  }\n\n  return this\n}\n\n// HTTP methods whose capitalization should be normalized\nvar methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\nfunction normalizeMethod(method) {\n  var upcased = method.toUpperCase()\n  return methods.indexOf(upcased) > -1 ? upcased : method\n}\n\nfunction Request(input, options) {\n  options = options || {}\n  var body = options.body\n\n  if (input instanceof Request) {\n    if (input.bodyUsed) {\n      throw new TypeError('Already read')\n    }\n    this.url = input.url\n    this.credentials = input.credentials\n    if (!options.headers) {\n      this.headers = new Headers(input.headers)\n    }\n    this.method = input.method\n    this.mode = input.mode\n    this.signal = input.signal\n    if (!body && input._bodyInit != null) {\n      body = input._bodyInit\n      input.bodyUsed = true\n    }\n  } else {\n    this.url = String(input)\n  }\n\n  this.credentials = options.credentials || this.credentials || 'same-origin'\n  if (options.headers || !this.headers) {\n    this.headers = new Headers(options.headers)\n  }\n  this.method = normalizeMethod(options.method || this.method || 'GET')\n  this.mode = options.mode || this.mode || null\n  this.signal = options.signal || this.signal\n  this.referrer = null\n\n  if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n    throw new TypeError('Body not allowed for GET or HEAD requests')\n  }\n  this._initBody(body)\n}\n\nRequest.prototype.clone = function() {\n  return new Request(this, {body: this._bodyInit})\n}\n\nfunction decode(body) {\n  var form = new FormData()\n  body\n    .trim()\n    .split('&')\n    .forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n  return form\n}\n\nfunction parseHeaders(rawHeaders) {\n  var headers = new Headers()\n  // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n  // https://tools.ietf.org/html/rfc7230#section-3.2\n  var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ')\n  preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n    var parts = line.split(':')\n    var key = parts.shift().trim()\n    if (key) {\n      var value = parts.join(':').trim()\n      headers.append(key, value)\n    }\n  })\n  return headers\n}\n\nBody.call(Request.prototype)\n\nfunction Response(bodyInit, options) {\n  if (!options) {\n    options = {}\n  }\n\n  this.type = 'default'\n  this.status = options.status === undefined ? 200 : options.status\n  this.ok = this.status >= 200 && this.status < 300\n  this.statusText = 'statusText' in options ? options.statusText : 'OK'\n  this.headers = new Headers(options.headers)\n  this.url = options.url || ''\n  this._initBody(bodyInit)\n}\n\nBody.call(Response.prototype)\n\nResponse.prototype.clone = function() {\n  return new Response(this._bodyInit, {\n    status: this.status,\n    statusText: this.statusText,\n    headers: new Headers(this.headers),\n    url: this.url\n  })\n}\n\nResponse.error = function() {\n  var response = new Response(null, {status: 0, statusText: ''})\n  response.type = 'error'\n  return response\n}\n\nvar redirectStatuses = [301, 302, 303, 307, 308]\n\nResponse.redirect = function(url, status) {\n  if (redirectStatuses.indexOf(status) === -1) {\n    throw new RangeError('Invalid status code')\n  }\n\n  return new Response(null, {status: status, headers: {location: url}})\n}\n\nvar DOMException = self.DOMException\ntry {\n  new DOMException()\n} catch (err) {\n  DOMException = function(message, name) {\n    this.message = message\n    this.name = name\n    var error = Error(message)\n    this.stack = error.stack\n  }\n  DOMException.prototype = Object.create(Error.prototype)\n  DOMException.prototype.constructor = DOMException\n}\n\nfunction fetch(input, init) {\n  return new Promise(function(resolve, reject) {\n    var request = new Request(input, init)\n\n    if (request.signal && request.signal.aborted) {\n      return reject(new DOMException('Aborted', 'AbortError'))\n    }\n\n    var xhr = new XMLHttpRequest()\n\n    function abortXhr() {\n      xhr.abort()\n    }\n\n    xhr.onload = function() {\n      var options = {\n        status: xhr.status,\n        statusText: xhr.statusText,\n        headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n      }\n      options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n      var body = 'response' in xhr ? xhr.response : xhr.responseText\n      resolve(new Response(body, options))\n    }\n\n    xhr.onerror = function() {\n      reject(new TypeError('Network request failed'))\n    }\n\n    xhr.ontimeout = function() {\n      reject(new TypeError('Network request failed'))\n    }\n\n    xhr.onabort = function() {\n      reject(new DOMException('Aborted', 'AbortError'))\n    }\n\n    xhr.open(request.method, request.url, true)\n\n    if (request.credentials === 'include') {\n      xhr.withCredentials = true\n    } else if (request.credentials === 'omit') {\n      xhr.withCredentials = false\n    }\n\n    if ('responseType' in xhr && support.blob) {\n      xhr.responseType = 'blob'\n    }\n\n    request.headers.forEach(function(value, name) {\n      xhr.setRequestHeader(name, value)\n    })\n\n    if (request.signal) {\n      request.signal.addEventListener('abort', abortXhr)\n\n      xhr.onreadystatechange = function() {\n        // DONE (success or failure)\n        if (xhr.readyState === 4) {\n          request.signal.removeEventListener('abort', abortXhr)\n        }\n      }\n    }\n\n    xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n  })\n}\n\nfetch.polyfill = true\n\nif (!self.fetch) {\n  self.fetch = fetch\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/whatwg-fetch/fetch.js\n");

/***/ }),

/***/ "./node_modules/worker-loader/dist/cjs.js?inline=true&name=yoga-worker.js!./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/workers/yoga-worker.js":
/*!************************************************************************************************************************************************************************!*\
  !*** ./node_modules/worker-loader/dist/cjs.js?inline=true&name=yoga-worker.js!./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/workers/yoga-worker.js ***!
  \************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = function() {\n  return __webpack_require__(/*! !./node_modules/worker-loader/dist/workers/InlineWorker.js */ \"./node_modules/worker-loader/dist/workers/InlineWorker.js\")(\"/******/ (function(modules) { // webpackBootstrap\\n/******/ \\t// The module cache\\n/******/ \\tvar installedModules = {};\\n/******/\\n/******/ \\t// The require function\\n/******/ \\tfunction __webpack_require__(moduleId) {\\n/******/\\n/******/ \\t\\t// Check if module is in cache\\n/******/ \\t\\tif(installedModules[moduleId]) {\\n/******/ \\t\\t\\treturn installedModules[moduleId].exports;\\n/******/ \\t\\t}\\n/******/ \\t\\t// Create a new module (and put it into the cache)\\n/******/ \\t\\tvar module = installedModules[moduleId] = {\\n/******/ \\t\\t\\ti: moduleId,\\n/******/ \\t\\t\\tl: false,\\n/******/ \\t\\t\\texports: {}\\n/******/ \\t\\t};\\n/******/\\n/******/ \\t\\t// Execute the module function\\n/******/ \\t\\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\\n/******/\\n/******/ \\t\\t// Flag the module as loaded\\n/******/ \\t\\tmodule.l = true;\\n/******/\\n/******/ \\t\\t// Return the exports of the module\\n/******/ \\t\\treturn module.exports;\\n/******/ \\t}\\n/******/\\n/******/\\n/******/ \\t// expose the modules object (__webpack_modules__)\\n/******/ \\t__webpack_require__.m = modules;\\n/******/\\n/******/ \\t// expose the module cache\\n/******/ \\t__webpack_require__.c = installedModules;\\n/******/\\n/******/ \\t// define getter function for harmony exports\\n/******/ \\t__webpack_require__.d = function(exports, name, getter) {\\n/******/ \\t\\tif(!__webpack_require__.o(exports, name)) {\\n/******/ \\t\\t\\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\\n/******/ \\t\\t}\\n/******/ \\t};\\n/******/\\n/******/ \\t// define __esModule on exports\\n/******/ \\t__webpack_require__.r = function(exports) {\\n/******/ \\t\\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\\n/******/ \\t\\t\\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\\n/******/ \\t\\t}\\n/******/ \\t\\tObject.defineProperty(exports, '__esModule', { value: true });\\n/******/ \\t};\\n/******/\\n/******/ \\t// create a fake namespace object\\n/******/ \\t// mode & 1: value is a module id, require it\\n/******/ \\t// mode & 2: merge all properties of value into the ns\\n/******/ \\t// mode & 4: return value when already ns object\\n/******/ \\t// mode & 8|1: behave like require\\n/******/ \\t__webpack_require__.t = function(value, mode) {\\n/******/ \\t\\tif(mode & 1) value = __webpack_require__(value);\\n/******/ \\t\\tif(mode & 8) return value;\\n/******/ \\t\\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\\n/******/ \\t\\tvar ns = Object.create(null);\\n/******/ \\t\\t__webpack_require__.r(ns);\\n/******/ \\t\\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\\n/******/ \\t\\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\\n/******/ \\t\\treturn ns;\\n/******/ \\t};\\n/******/\\n/******/ \\t// getDefaultExport function for compatibility with non-harmony modules\\n/******/ \\t__webpack_require__.n = function(module) {\\n/******/ \\t\\tvar getter = module && module.__esModule ?\\n/******/ \\t\\t\\tfunction getDefault() { return module['default']; } :\\n/******/ \\t\\t\\tfunction getModuleExports() { return module; };\\n/******/ \\t\\t__webpack_require__.d(getter, 'a', getter);\\n/******/ \\t\\treturn getter;\\n/******/ \\t};\\n/******/\\n/******/ \\t// Object.prototype.hasOwnProperty.call\\n/******/ \\t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\\n/******/\\n/******/ \\t// __webpack_public_path__\\n/******/ \\t__webpack_require__.p = \\\"\\\";\\n/******/\\n/******/\\n/******/ \\t// Load entry module and return exports\\n/******/ \\treturn __webpack_require__(__webpack_require__.s = \\\"./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/workers/yoga-worker.js\\\");\\n/******/ })\\n/************************************************************************/\\n/******/ ({\\n\\n/***/ \\\"./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/workers/yoga-worker.js\\\":\\n/*!***********************************************************************************************!*\\\\\\n  !*** ./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/workers/yoga-worker.js ***!\\n  \\\\***********************************************************************************************/\\n/*! no static exports found */\\n/***/ (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\neval(\\\"\\\\nObject.defineProperty(exports, \\\\\\\"__esModule\\\\\\\", { value: true });\\\\nconst typeflex_1 = __webpack_require__(/*! typeflex */ \\\\\\\"./node_modules/typeflex/dist/Yoga.js\\\\\\\");\\\\nlet nodes = {};\\\\nconst ctx = self;\\\\nctx.addEventListener('message', event => {\\\\n    switch (event.data.type) {\\\\n        case \\\\\\\"add-node\\\\\\\":\\\\n            let properties = event.data.properties;\\\\n            let node = typeflex_1.Node.create();\\\\n            nodes[event.data.uuid] = {\\\\n                uuid: event.data.uuid,\\\\n                node: node,\\\\n                parent: null,\\\\n                children: [],\\\\n                width: event.data.width\\\\n            };\\\\n            for (let method in properties) {\\\\n                if (properties.hasOwnProperty(method) && method.indexOf('Edge') === -1) {\\\\n                    if ([\\\\\\\"setMarginLeft\\\\\\\", \\\\\\\"setMarginPercentLeft\\\\\\\", \\\\\\\"setPaddingLeft\\\\\\\", \\\\\\\"setBorderLeft\\\\\\\", \\\\\\\"setPositionLeft\\\\\\\", \\\\\\\"setPositionPercentLeft\\\\\\\"]\\\\n                        .indexOf(method) > -1) {\\\\n                        node[method.replace('Left', '')](typeflex_1.EDGE_LEFT, properties[method]);\\\\n                    }\\\\n                    else if ([\\\\\\\"setMarginRight\\\\\\\", \\\\\\\"setMarginPercentRight\\\\\\\", \\\\\\\"setPaddingRight\\\\\\\", \\\\\\\"setBorderRight\\\\\\\", \\\\\\\"setPositionRight\\\\\\\", \\\\\\\"setPositionPercentRight\\\\\\\"]\\\\n                        .indexOf(method) > -1) {\\\\n                        node[method.replace('Right', '')](typeflex_1.EDGE_RIGHT, properties[method]);\\\\n                    }\\\\n                    else if ([\\\\\\\"setMarginTop\\\\\\\", \\\\\\\"setMarginPercentTop\\\\\\\", \\\\\\\"setPaddingTop\\\\\\\", \\\\\\\"setBorderTop\\\\\\\", \\\\\\\"setPositionTop\\\\\\\", \\\\\\\"setPositionPercentTop\\\\\\\"]\\\\n                        .indexOf(method) > -1) {\\\\n                        node[method.replace('Top', '')](typeflex_1.EDGE_TOP, properties[method]);\\\\n                    }\\\\n                    else if ([\\\\\\\"setMarginBottom\\\\\\\", \\\\\\\"setMarginPercentBottom\\\\\\\", \\\\\\\"setPaddingBottom\\\\\\\", \\\\\\\"setBorderBottom\\\\\\\", \\\\\\\"setPositionBottom\\\\\\\", \\\\\\\"setPositionPercentBottom\\\\\\\"]\\\\n                        .indexOf(method) > -1) {\\\\n                        node[method.replace('Bottom', '')](typeflex_1.EDGE_BOTTOM, properties[method]);\\\\n                    }\\\\n                    else if ([\\\\\\\"setMargin\\\\\\\", \\\\\\\"setMarginPercent\\\\\\\", \\\\\\\"setPadding\\\\\\\", \\\\\\\"setBorder\\\\\\\", \\\\\\\"setPosition\\\\\\\", \\\\\\\"setPositionPercent\\\\\\\"]\\\\n                        .indexOf(method) > -1) {\\\\n                        node[method](typeflex_1.EDGE_ALL, properties[method]);\\\\n                    }\\\\n                    else if (method.indexOf('setMarginAuto') > -1) {\\\\n                        let side = method.replace('setMarginAuto', '');\\\\n                        let _method = method.replace(side, '');\\\\n                        switch (side) {\\\\n                            case \\\\\\\"\\\\\\\":\\\\n                                node[_method](typeflex_1.EDGE_ALL);\\\\n                                break;\\\\n                            case \\\\\\\"Left\\\\\\\":\\\\n                                node[_method](typeflex_1.EDGE_LEFT);\\\\n                                break;\\\\n                            case \\\\\\\"Right\\\\\\\":\\\\n                                node[_method](typeflex_1.EDGE_RIGHT);\\\\n                                break;\\\\n                            case \\\\\\\"Top\\\\\\\":\\\\n                                node[_method](typeflex_1.EDGE_TOP);\\\\n                                break;\\\\n                            case \\\\\\\"Bottom\\\\\\\":\\\\n                                node[_method](typeflex_1.EDGE_BOTTOM);\\\\n                                break;\\\\n                        }\\\\n                    }\\\\n                    else if ([\\\\\\\"setWidthAuto\\\\\\\", \\\\\\\"setHeightAuto\\\\\\\"]\\\\n                        .indexOf(method) > -1) {\\\\n                        node[method]();\\\\n                    }\\\\n                    else {\\\\n                        node[method](properties[method]);\\\\n                    }\\\\n                }\\\\n            }\\\\n            if (event.data.parentUuid && nodes.hasOwnProperty(event.data.parentUuid)) {\\\\n                nodes[event.data.uuid].parent = nodes[event.data.parentUuid];\\\\n                nodes[event.data.parentUuid].children.push(nodes[event.data.uuid]);\\\\n                nodes[event.data.parentUuid].node.insertChild(node, nodes[event.data.parentUuid].node.getChildCount());\\\\n            }\\\\n            ctx.postMessage({ uuid: event.data.uuid });\\\\n            break;\\\\n        case \\\\\\\"get-layout\\\\\\\":\\\\n            let startTimeMillis = new Date().getTime();\\\\n            let results = { content_height: 0 };\\\\n            let traverse = (node) => {\\\\n                results[node.uuid] = {\\\\n                    left: nodes[node.uuid].node.getComputedLeft(),\\\\n                    top: nodes[node.uuid].node.getComputedTop(),\\\\n                    width: nodes[node.uuid].node.getComputedWidth(),\\\\n                    height: nodes[node.uuid].node.getComputedHeight(),\\\\n                };\\\\n                let height = results[node.uuid].top + results[node.uuid].height;\\\\n                if (height > results.content_height) {\\\\n                    results.content_height = height;\\\\n                }\\\\n                for (let i = 0; i < nodes[node.uuid].children.length; i++) {\\\\n                    traverse(nodes[node.uuid].children[i]);\\\\n                }\\\\n            };\\\\n            if (event.data.parentUuid && nodes.hasOwnProperty(event.data.parentUuid)) {\\\\n                nodes[event.data.parentUuid].node.calculateLayout(nodes[event.data.parentUuid].width, 'auto', typeflex_1.DIRECTION_LTR);\\\\n                traverse(nodes[event.data.parentUuid]);\\\\n            }\\\\n            ctx.postMessage({ uuid: event.data.uuid, data: results });\\\\n            console.log(\\\\\\\"Get layout took: \\\\\\\" + (new Date().getTime() - startTimeMillis) + \\\\\\\" ms.\\\\\\\");\\\\n            break;\\\\n        case \\\\\\\"reset-layout\\\\\\\":\\\\n            if (event.data.parentUuid && nodes.hasOwnProperty(event.data.parentUuid)) {\\\\n                let traverse = (node) => {\\\\n                    node.children.forEach((_node) => {\\\\n                        if (nodes.hasOwnProperty(_node.uuid)) {\\\\n                            delete nodes[_node.uuid];\\\\n                        }\\\\n                        traverse(_node);\\\\n                    });\\\\n                };\\\\n                nodes[event.data.parentUuid].children.forEach((node) => {\\\\n                    nodes[event.data.parentUuid].node.removeChild(node.node);\\\\n                    node.node.freeRecursive();\\\\n                });\\\\n                traverse(nodes[event.data.parentUuid]);\\\\n                nodes[event.data.parentUuid].children.length = 0;\\\\n            }\\\\n            ctx.postMessage({ uuid: event.data.uuid });\\\\n            break;\\\\n    }\\\\n});\\\\n//# sourceMappingURL=yoga-worker.js.map//# sourceURL=[module]\\\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\\\n//# sourceURL=webpack-internal:///./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/workers/yoga-worker.js\\\\n\\\");\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/typeflex/dist/Yoga.js\\\":\\n/*!********************************************!*\\\\\\n  !*** ./node_modules/typeflex/dist/Yoga.js ***!\\n  \\\\********************************************/\\n/*! no static exports found */\\n/***/ (function(module, exports) {\\n\\neval(\\\"module.exports=function(e){var t={};function i(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,i),o.l=!0,o.exports}return i.m=e,i.c=t,i.d=function(e,t,n){i.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},i.r=function(e){\\\\\\\"undefined\\\\\\\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\\\\\\\"Module\\\\\\\"}),Object.defineProperty(e,\\\\\\\"__esModule\\\\\\\",{value:!0})},i.t=function(e,t){if(1&t&&(e=i(e)),8&t)return e;if(4&t&&\\\\\\\"object\\\\\\\"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(i.r(n),Object.defineProperty(n,\\\\\\\"default\\\\\\\",{enumerable:!0,value:e}),2&t&&\\\\\\\"string\\\\\\\"!=typeof e)for(var o in e)i.d(n,o,function(t){return e[t]}.bind(null,o));return n},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,\\\\\\\"a\\\\\\\",t),t},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p=\\\\\\\"\\\\\\\",i(i.s=8)}([function(e,t,i){\\\\\\\"use strict\\\\\\\";var n,o,r,a,s,l,u,d,g,G,c,Y,f,y,h,p;t.__esModule=!0,t.YGAlignCount=8,function(e){e[e.Auto=0]=\\\\\\\"Auto\\\\\\\",e[e.FlexStart=1]=\\\\\\\"FlexStart\\\\\\\",e[e.Center=2]=\\\\\\\"Center\\\\\\\",e[e.FlexEnd=3]=\\\\\\\"FlexEnd\\\\\\\",e[e.Stretch=4]=\\\\\\\"Stretch\\\\\\\",e[e.Baseline=5]=\\\\\\\"Baseline\\\\\\\",e[e.SpaceBetween=6]=\\\\\\\"SpaceBetween\\\\\\\",e[e.SpaceAround=7]=\\\\\\\"SpaceAround\\\\\\\"}(n=t.YGAlign||(t.YGAlign={})),t.YGAlignToString=function(e){switch(e){case n.Auto:return\\\\\\\"auto\\\\\\\";case n.FlexStart:return\\\\\\\"flex-start\\\\\\\";case n.Center:return\\\\\\\"center\\\\\\\";case n.FlexEnd:return\\\\\\\"flex-end\\\\\\\";case n.Stretch:return\\\\\\\"stretch\\\\\\\";case n.Baseline:return\\\\\\\"baseline\\\\\\\";case n.SpaceBetween:return\\\\\\\"space-between\\\\\\\";case n.SpaceAround:return\\\\\\\"space-around\\\\\\\"}return\\\\\\\"unknown\\\\\\\"},t.YGDimensionCount=2,function(e){e[e.Width=0]=\\\\\\\"Width\\\\\\\",e[e.Height=1]=\\\\\\\"Height\\\\\\\"}(o=t.YGDimension||(t.YGDimension={})),t.YGDimensionToString=function(e){switch(e){case o.Width:return\\\\\\\"width\\\\\\\";case o.Height:return\\\\\\\"height\\\\\\\"}return\\\\\\\"unknown\\\\\\\"},function(e){e[e.Inherit=0]=\\\\\\\"Inherit\\\\\\\",e[e.LTR=1]=\\\\\\\"LTR\\\\\\\",e[e.RTL=2]=\\\\\\\"RTL\\\\\\\"}(r=t.YGDirection||(t.YGDirection={})),t.YGDirectionToString=function(e){switch(e){case r.Inherit:return\\\\\\\"inherit\\\\\\\";case r.LTR:return\\\\\\\"ltr\\\\\\\";case r.RTL:return\\\\\\\"rtl\\\\\\\"}return\\\\\\\"unknown\\\\\\\"},t.YGDisplayCount=2,function(e){e[e.Flex=0]=\\\\\\\"Flex\\\\\\\",e[e.None=1]=\\\\\\\"None\\\\\\\"}(a=t.YGDisplay||(t.YGDisplay={})),t.YGDisplayToString=function(e){switch(e){case a.Flex:return\\\\\\\"flex\\\\\\\";case a.None:return\\\\\\\"none\\\\\\\"}return\\\\\\\"unknown\\\\\\\"},t.YGEdgeCount=9,function(e){e[e.Left=0]=\\\\\\\"Left\\\\\\\",e[e.Top=1]=\\\\\\\"Top\\\\\\\",e[e.Right=2]=\\\\\\\"Right\\\\\\\",e[e.Bottom=3]=\\\\\\\"Bottom\\\\\\\",e[e.Start=4]=\\\\\\\"Start\\\\\\\",e[e.End=5]=\\\\\\\"End\\\\\\\",e[e.Horizontal=6]=\\\\\\\"Horizontal\\\\\\\",e[e.Vertical=7]=\\\\\\\"Vertical\\\\\\\",e[e.All=8]=\\\\\\\"All\\\\\\\"}(s=t.YGEdge||(t.YGEdge={})),t.YGEdgeToString=function(e){switch(e){case s.Left:return\\\\\\\"left\\\\\\\";case s.Top:return\\\\\\\"top\\\\\\\";case s.Right:return\\\\\\\"right\\\\\\\";case s.Bottom:return\\\\\\\"bottom\\\\\\\";case s.Start:return\\\\\\\"start\\\\\\\";case s.End:return\\\\\\\"end\\\\\\\";case s.Horizontal:return\\\\\\\"horizontal\\\\\\\";case s.Vertical:return\\\\\\\"vertical\\\\\\\";case s.All:return\\\\\\\"all\\\\\\\"}return\\\\\\\"unknown\\\\\\\"},t.YGExperimentalFeatureCount=1,function(e){e[e.WebFlexBasis=0]=\\\\\\\"WebFlexBasis\\\\\\\"}(l=t.YGExperimentalFeature||(t.YGExperimentalFeature={})),t.YGExperimentalFeatureToString=function(e){switch(e){case l.WebFlexBasis:return\\\\\\\"web-flex-basis\\\\\\\"}return\\\\\\\"unknown\\\\\\\"},t.YGFlexDirectionCount=4,function(e){e[e.Column=0]=\\\\\\\"Column\\\\\\\",e[e.ColumnReverse=1]=\\\\\\\"ColumnReverse\\\\\\\",e[e.Row=2]=\\\\\\\"Row\\\\\\\",e[e.RowReverse=3]=\\\\\\\"RowReverse\\\\\\\"}(u=t.YGFlexDirection||(t.YGFlexDirection={})),t.YGFlexDirectionToString=function(e){switch(e){case u.Column:return\\\\\\\"column\\\\\\\";case u.ColumnReverse:return\\\\\\\"column-reverse\\\\\\\";case u.Row:return\\\\\\\"row\\\\\\\";case u.RowReverse:return\\\\\\\"row-reverse\\\\\\\"}return\\\\\\\"unknown\\\\\\\"},t.YGJustifyCount=6,function(e){e[e.FlexStart=0]=\\\\\\\"FlexStart\\\\\\\",e[e.Center=1]=\\\\\\\"Center\\\\\\\",e[e.FlexEnd=2]=\\\\\\\"FlexEnd\\\\\\\",e[e.SpaceBetween=3]=\\\\\\\"SpaceBetween\\\\\\\",e[e.SpaceAround=4]=\\\\\\\"SpaceAround\\\\\\\",e[e.SpaceEvenly=5]=\\\\\\\"SpaceEvenly\\\\\\\"}(d=t.YGJustify||(t.YGJustify={})),t.YGJustifyToString=function(e){switch(e){case d.FlexStart:return\\\\\\\"flex-start\\\\\\\";case d.Center:return\\\\\\\"center\\\\\\\";case d.FlexEnd:return\\\\\\\"flex-end\\\\\\\";case d.SpaceBetween:return\\\\\\\"space-between\\\\\\\";case d.SpaceAround:return\\\\\\\"space-around\\\\\\\";case d.SpaceEvenly:return\\\\\\\"space-evenly\\\\\\\"}return\\\\\\\"unknown\\\\\\\"},t.YGLogLevelCount=6,function(e){e[e.Error=0]=\\\\\\\"Error\\\\\\\",e[e.Warn=1]=\\\\\\\"Warn\\\\\\\",e[e.Info=2]=\\\\\\\"Info\\\\\\\",e[e.Debug=3]=\\\\\\\"Debug\\\\\\\",e[e.Verbose=4]=\\\\\\\"Verbose\\\\\\\",e[e.Fatal=5]=\\\\\\\"Fatal\\\\\\\"}(g=t.YGLogLevel||(t.YGLogLevel={})),t.YGLogLevelToString=function(e){switch(e){case g.Error:return\\\\\\\"error\\\\\\\";case g.Warn:return\\\\\\\"warn\\\\\\\";case g.Info:return\\\\\\\"info\\\\\\\";case g.Debug:return\\\\\\\"debug\\\\\\\";case g.Verbose:return\\\\\\\"verbose\\\\\\\";case g.Fatal:return\\\\\\\"fatal\\\\\\\"}return\\\\\\\"unknown\\\\\\\"},t.YGMeasureModeCount=3,function(e){e[e.Undefined=0]=\\\\\\\"Undefined\\\\\\\",e[e.Exactly=1]=\\\\\\\"Exactly\\\\\\\",e[e.AtMost=2]=\\\\\\\"AtMost\\\\\\\"}(G=t.YGMeasureMode||(t.YGMeasureMode={})),t.YGMeasureModeToString=function(e){switch(e){case G.Undefined:return\\\\\\\"undefined\\\\\\\";case G.Exactly:return\\\\\\\"exactly\\\\\\\";case G.AtMost:return\\\\\\\"at-most\\\\\\\"}return\\\\\\\"unknown\\\\\\\"},t.YGNodeTypeCount=2,function(e){e[e.Default=0]=\\\\\\\"Default\\\\\\\",e[e.Text=1]=\\\\\\\"Text\\\\\\\"}(c=t.YGNodeType||(t.YGNodeType={})),t.YGNodeTypeToString=function(e){switch(e){case c.Default:return\\\\\\\"default\\\\\\\";case c.Text:return\\\\\\\"text\\\\\\\"}return\\\\\\\"unknown\\\\\\\"},t.YGOverflowCount=3,function(e){e[e.Visible=0]=\\\\\\\"Visible\\\\\\\",e[e.Hidden=1]=\\\\\\\"Hidden\\\\\\\",e[e.Scroll=2]=\\\\\\\"Scroll\\\\\\\"}(Y=t.YGOverflow||(t.YGOverflow={})),t.YGOverflowToString=function(e){switch(e){case Y.Visible:return\\\\\\\"visible\\\\\\\";case Y.Hidden:return\\\\\\\"hidden\\\\\\\";case Y.Scroll:return\\\\\\\"scroll\\\\\\\"}return\\\\\\\"unknown\\\\\\\"},t.YGPositionTypeCount=2,function(e){e[e.Relative=0]=\\\\\\\"Relative\\\\\\\",e[e.Absolute=1]=\\\\\\\"Absolute\\\\\\\"}(f=t.YGPositionType||(t.YGPositionType={})),t.YGPositionTypeToString=function(e){switch(e){case f.Relative:return\\\\\\\"relative\\\\\\\";case f.Absolute:return\\\\\\\"absolute\\\\\\\"}return\\\\\\\"unknown\\\\\\\"},t.YGPrintOptionsCount=3,function(e){e[e.Layout=1]=\\\\\\\"Layout\\\\\\\",e[e.Style=2]=\\\\\\\"Style\\\\\\\",e[e.Children=4]=\\\\\\\"Children\\\\\\\"}(y=t.YGPrintOptions||(t.YGPrintOptions={})),t.YGPrintOptionsToString=function(e){switch(e){case y.Layout:return\\\\\\\"layout\\\\\\\";case y.Style:return\\\\\\\"style\\\\\\\";case y.Children:return\\\\\\\"children\\\\\\\"}return\\\\\\\"unknown\\\\\\\"},t.YGUnitCount=4,function(e){e[e.Undefined=0]=\\\\\\\"Undefined\\\\\\\",e[e.Point=1]=\\\\\\\"Point\\\\\\\",e[e.Percent=2]=\\\\\\\"Percent\\\\\\\",e[e.Auto=3]=\\\\\\\"Auto\\\\\\\"}(h=t.YGUnit||(t.YGUnit={})),t.YGUnitToString=function(e){switch(e){case h.Undefined:return\\\\\\\"undefined\\\\\\\";case h.Point:return\\\\\\\"point\\\\\\\";case h.Percent:return\\\\\\\"percent\\\\\\\";case h.Auto:return\\\\\\\"auto\\\\\\\"}return\\\\\\\"unknown\\\\\\\"},t.YGWrapCount=3,function(e){e[e.NoWrap=0]=\\\\\\\"NoWrap\\\\\\\",e[e.Wrap=1]=\\\\\\\"Wrap\\\\\\\",e[e.WrapReverse=2]=\\\\\\\"WrapReverse\\\\\\\"}(p=t.YGWrap||(t.YGWrap={})),t.YGWrapToString=function(e){switch(e){case p.NoWrap:return\\\\\\\"no-wrap\\\\\\\";case p.Wrap:return\\\\\\\"wrap\\\\\\\";case p.WrapReverse:return\\\\\\\"wrap-reverse\\\\\\\"}return\\\\\\\"unknown\\\\\\\"}},function(e,t,i){\\\\\\\"use strict\\\\\\\";t.__esModule=!0;var n=i(0),o=i(9),r=i(5),a=i(6),s=i(2),l=i(7),u=i(3),d=i(4),g=function(){return function(){}}();function G(e,t){for(var i=e,n=0,o=t[0][0];n<o.length;n++){var r=o[n];i=i.replace(/%[d|s|f]/,r)}return i}function c(e,t,i,o){for(var r=[],a=4;a<arguments.length;a++)r[a-4]=arguments[a];switch(i){case n.YGLogLevel.Error:case n.YGLogLevel.Fatal:return console.error(G(o,r));case n.YGLogLevel.Warn:case n.YGLogLevel.Info:case n.YGLogLevel.Debug:case n.YGLogLevel.Verbose:default:return console.log(G(o,r))}}function Y(e){return!(void 0!==e&&!isNaN(e))}t.YGSize=g,t.YGUndefined=void 0,t.YGValueUndefined=function(){return new l.YGValue(t.YGUndefined,n.YGUnit.Undefined)},t.YGValueAuto=function(){return new l.YGValue(t.YGUndefined,n.YGUnit.Auto)},t.YGValueZero=function(){return new l.YGValue(0,n.YGUnit.Point)},t.YGFloatIsUndefined=Y,t.YGComputedEdgeValue=function(e,i,o){return e[i].unit!=n.YGUnit.Undefined?e[i]:i!=n.YGEdge.Top&&i!=n.YGEdge.Bottom||e[n.YGEdge.Vertical].unit==n.YGUnit.Undefined?i!=n.YGEdge.Left&&i!=n.YGEdge.Right&&i!=n.YGEdge.Start&&i!=n.YGEdge.End||e[n.YGEdge.Horizontal].unit==n.YGUnit.Undefined?e[n.YGEdge.All].unit!=n.YGUnit.Undefined?e[n.YGEdge.All]:i==n.YGEdge.Start||i==n.YGEdge.End?t.YGValueUndefined():o:e[n.YGEdge.Horizontal]:e[n.YGEdge.Vertical]},t.YGNodeGetContext=function(e){return e.getContext()},t.YGNodeSetContext=function(e,t){return e.setContext(t)},t.YGNodeGetMeasureFunc=function(e){return e.getMeasure()},t.YGNodeSetMeasureFunc=function(e,t){e.setMeasureFunc(t)},t.YGNodeGetBaselineFunc=function(e){return e.getBaseline()},t.YGNodeSetBaselineFunc=function(e,t){e.setBaseLineFunc(t)},t.YGNodeGetDirtiedFunc=function(e){return e.getDirtied()},t.YGNodeSetDirtiedFunc=function(e,t){e.setDirtiedFunc(t)},t.YGNodeGetPrintFunc=function(e){return e.getPrintFunc()},t.YGNodeSetPrintFunc=function(e,t){e.setPrintFunc(t)},t.YGNodeGetHasNewLayout=function(e){return e.getHasNewLayout()},t.YGNodeSetHasNewLayout=function(e,t){e.setHasNewLayout(t)},t.YGNodeGetNodeType=function(e){return e.getNodeType()},t.YGNodeSetNodeType=function(e,t){e.setNodeType(t)},t.YGNodeIsDirty=function(e){return e.isDirty()},t.YGNodeLayoutGetDidUseLegacyFlag=function(e){return e.didUseLegacyFlag()},t.YGNodeMarkDirtyAndPropogateToDescendants=function(e){e.markDirtyAndPropogateDownwards()};var f=0,y=0;function h(e){var t=new o.YGNode;return f++,e.useWebDefaults&&(t.setStyleFlexDirection(n.YGFlexDirection.Row),t.setStyleAlignContent(n.YGAlign.Stretch)),t.setConfig(e),t}function p(){return M()}function m(e){console.log(\\\\\\\"clone?\\\\\\\");var t=new o.YGNode(e);return f++,t.setOwner(null),t}function S(e){var t=new r.YGConfig(e.logger);return y++,t}function F(e){for(var t=m(e),i=new Array(e.getChildren().length),n=null,o=0;o<e.getChildren().length;++o){(n=F(e.getChild(o))).setOwner(t),i.push(n)}return t.setChildren(i),null!=e.getConfig()&&t.setConfig(S(e.getConfig())),t}function v(e){var t=e.getOwner();null!=t&&(t.removeChild(e),e.setOwner(null));for(var i=E(e),n=0;n<i;n++){U(e,n).setOwner(null)}e.clearChildren(),f--}function D(e){null!=e.getConfig()&&(y--,e.setConfig(null));for(var t=0;t<e.getChildrenCount();++t)D(e.getChild(t))}function x(e){for(;E(e)>0;){var t=U(e,0);if(t.getOwner()!=e)break;L(e,t),x(t)}v(e)}function M(){var e=new r.YGConfig(c);return y++,e}function L(e,t){var i=E(e);if(0!=i)if(U(e,0).getOwner()!=e){for(var n=e.getConfig().cloneNodeCallback,o=0,r=0;r<i;r++){var s=e.getChild(r);if(t!=s){var l=null;n&&(l=n(s,e,o)),null==l&&(l=m(s)),e.replaceChildIndex(l,o),l.setOwner(e),o++}else e.markDirtyAndPropogate()}for(;o<i;)e.removeChildIndex(o),o++}else e.removeChild(t)&&(t.setLayout(new a.YGLayout),t.setOwner(null),e.markDirtyAndPropogate())}function w(e,t){if(e){var i=e.getChildren();if(0==t.length){if(i.length>0){for(var n=0;n<i.length;n++){var o=i[n];o.setLayout(new a.YGLayout),o.setOwner(null)}e.setChildren(new Array),e.markDirtyAndPropogate()}}else{if(i.length>0)for(n=0;n<i.length;n++){var r=i[n];t.indexOf(r)<0&&(r.setLayout(new a.YGLayout),r.setOwner(null))}e.setChildren(t);for(n=0;n<t.length;n++)t[n].setOwner(e);e.markDirtyAndPropogate()}}}function U(e,t){var i=e.getChildren();return t<i.length?i[t]:null}function E(e){return e.getChildrenCount()}t.YGNodeNewWithConfig=h,t.YGConfigGetDefault=p,t.YGNodeNew=function(){return h(p())},t.YGNodeClone=m,t.YGConfigClone=S,t.YGNodeDeepClone=F,t.YGNodeFree=v,t.YGConfigFreeRecursive=D,t.YGNodeFreeRecursive=x,t.YGNodeReset=function(e){ve(e,0==E(e),\\\\\\\"Cannot reset a node which still has children attached\\\\\\\"),ve(e,null==e.getOwner(),\\\\\\\"Cannot reset a node still attached to a owner\\\\\\\"),e.clearChildren();var t=e.getConfig();e.fromNode(new o.YGNode),t.useWebDefaults&&(e.setStyleFlexDirection(n.YGFlexDirection.Row),e.setStyleAlignContent(n.YGAlign.Stretch)),e.setConfig(t)},t.YGNodeGetInstanceCount=function(){return f},t.YGConfigGetInstanceCount=function(){return y},t.YGConfigNew=M,t.YGConfigFree=function(e){y--},t.YGConfigCopy=function(e,t){Object.assign(e,t)},t.YGNodeInsertChild=function(e,t,i){ve(e,null==t.getOwner(),\\\\\\\"Child already has a owner, it must be removed first.\\\\\\\"),ve(e,null==e.getMeasure(),\\\\\\\"Cannot add child: Nodes with measure functions cannot have children.\\\\\\\"),e.cloneChildrenIfNeeded(),e.insertChildIndex(t,i);var n=t.getOwner()?null:e;t.setOwner(n),e.markDirtyAndPropogate()},t.YGNodeInsertSharedChild=function(e,t,i){ve(e,null==e.getMeasure(),\\\\\\\"Cannot add child: Nodes with measure functions cannot have children.\\\\\\\"),e.insertChildIndex(t,i),t.setOwner(null),e.markDirtyAndPropogate()},t.YGNodeRemoveChild=L,t.YGNodeRemoveAllChildren=function(e){var t=E(e);if(0!=t){if(U(e,0).getOwner()==e){for(var i=0;i<t;i++){var n=U(e,i);n.setLayout(new a.YGLayout),n.setOwner(null)}return e.clearChildren(),void e.markDirtyAndPropogate()}e.setChildren(new Array),e.markDirtyAndPropogate()}},t.YGNodeSetChildrenInternal=w,t.YGNodeSetChildren=function(e,t){w(e,t)},t.YGNodeGetChild=U,t.YGNodeGetChildCount=E,t.YGNodeGetOwner=function(e){return e.getOwner()},t.YGNodeGetParent=function(e){return e.getOwner()},t.YGNodeMarkDirty=function(e){ve(e,null!=e.getMeasure(),\\\\\\\"Only leaf nodes with custom measure functions should manually mark themselves as dirty\\\\\\\"),e.markDirtyAndPropogate()},t.YGNodeCopyStyle=function(e,t){e.getStyle().isEqual(t.getStyle())||(e.setStyle(t.getStyle()),e.markDirtyAndPropogate())},t.YGNodeStyleGetFlexGrow=function(e){return e.getStyle().flexGrow.isUndefined()?d.kDefaultFlexGrow:e.getStyle().flexGrow.getValue()},t.YGNodeStyleGetFlexShrink=function(e){return e.getStyle().flexShrink.isUndefined()?e.getConfig().useWebDefaults?d.kWebDefaultFlexShrink:d.kDefaultFlexShrink:e.getStyle().flexShrink.getValue()},t.YGNodeStyleSetDirection=function(e,t){if(e.getStyle().direction!=t){var i=e.getStyle();i.direction=t,e.setStyle(i),e.markDirtyAndPropogate()}},t.YGNodeStyleGetDirection=function(e){return e.getStyle().direction},t.YGNodeStyleSetFlexDirection=function(e,t){if(e.getStyle().flexDirection!=t){var i=e.getStyle();i.flexDirection=t,e.setStyle(i),e.markDirtyAndPropogate()}},t.YGNodeStyleGetFlexDirection=function(e){return e.getStyle().flexDirection},t.YGNodeStyleSetJustifyContent=function(e,t){if(e.getStyle().justifyContent!=t){var i=e.getStyle();i.justifyContent=t,e.setStyle(i),e.markDirtyAndPropogate()}},t.YGNodeStyleGetJustifyContent=function(e){return e.getStyle().justifyContent},t.YGNodeStyleSetAlignContent=function(e,t){if(e.getStyle().alignContent!=t){var i=e.getStyle();i.alignContent=t,e.setStyle(i),e.markDirtyAndPropogate()}},t.YGNodeStyleGetAlignContent=function(e){return e.getStyle().alignContent},t.YGNodeStyleSetAlignItems=function(e,t){if(e.getStyle().alignItems!=t){var i=e.getStyle();i.alignItems=t,e.setStyle(i),e.markDirtyAndPropogate()}},t.YGNodeStyleGetAlignItems=function(e){return e.getStyle().alignItems},t.YGNodeStyleSetAlignSelf=function(e,t){if(e.getStyle().alignSelf!=t){var i=e.getStyle();i.alignSelf=t,e.setStyle(i),e.markDirtyAndPropogate()}},t.YGNodeStyleGetAlignSelf=function(e){return e.getStyle().alignSelf},t.YGNodeStyleSetPositionType=function(e,t){if(e.getStyle().positionType!=t){var i=e.getStyle();i.positionType=t,e.setStyle(i),e.markDirtyAndPropogate()}},t.YGNodeStyleGetPositionType=function(e){return e.getStyle().positionType},t.YGNodeStyleSetFlexWrap=function(e,t){if(e.getStyle().flexWrap!=t){var i=e.getStyle();i.flexWrap=t,e.setStyle(i),e.markDirtyAndPropogate()}},t.YGNodeStyleGetFlexWrap=function(e){return e.getStyle().flexWrap},t.YGNodeStyleSetOverflow=function(e,t){if(e.getStyle().overflow!=t){var i=e.getStyle();i.overflow=t,e.setStyle(i),e.markDirtyAndPropogate()}},t.YGNodeStyleGetOverflow=function(e){return e.getStyle().overflow},t.YGNodeStyleSetDisplay=function(e,t){if(e.getStyle().display!=t){var i=e.getStyle();i.display=t,e.setStyle(i),e.markDirtyAndPropogate()}},t.YGNodeStyleGetDisplay=function(e){return e.getStyle().display},t.YGNodeStyleSetPosition=function(e,t,i){var o=new l.YGValue(u.YGFloatSanitize(i),Y(i)?n.YGUnit.Undefined:n.YGUnit.Point);if(e.getStyle().position[t].value!=o.value&&o.unit!=n.YGUnit.Undefined||e.getStyle().position[t].unit!=o.unit){var r=e.getStyle();r.position[t]=o,e.setStyle(r),e.markDirtyAndPropogate()}},t.YGNodeStyleSetPositionPercent=function(e,t,i){var o=new l.YGValue(u.YGFloatSanitize(i),Y(i)?n.YGUnit.Undefined:n.YGUnit.Percent);if(e.getStyle().position[t].value!=o.value&&o.unit!=n.YGUnit.Undefined||e.getStyle().position[t].unit!=o.unit){var r=e.getStyle();r.position[t]=o,e.setStyle(r),e.markDirtyAndPropogate()}},t.YGNodeStyleGetPosition=function(e,i){var o=e.getStyle().position[i];return o.unit!=n.YGUnit.Undefined&&o.unit!=n.YGUnit.Auto||(o.value=t.YGUndefined),o},t.YGNodeStyleSetMargin=function(e,t,i){var o=new l.YGValue(u.YGFloatSanitize(i),Y(i)?n.YGUnit.Undefined:n.YGUnit.Point);if(e.getStyle().margin[t].value!=o.value&&o.unit!=n.YGUnit.Undefined||e.getStyle().margin[t].unit!=o.unit){var r=e.getStyle();r.margin[t]=o,e.setStyle(r),e.markDirtyAndPropogate()}},t.YGNodeStyleSetMarginPercent=function(e,t,i){var o=new l.YGValue(u.YGFloatSanitize(i),Y(i)?n.YGUnit.Undefined:n.YGUnit.Percent);if(e.getStyle().margin[t].value!=o.value&&o.unit!=n.YGUnit.Undefined||e.getStyle().margin[t].unit!=o.unit){var r=e.getStyle();r.margin[t]=o,e.setStyle(r),e.markDirtyAndPropogate()}},t.YGNodeStyleGetMargin=function(e,i){var o=e.getStyle().margin[i];return o.unit!=n.YGUnit.Undefined&&o.unit!=n.YGUnit.Auto||(o.value=t.YGUndefined),o},t.YGNodeStyleSetPadding=function(e,t,i){var o=new l.YGValue(u.YGFloatSanitize(i),Y(i)?n.YGUnit.Undefined:n.YGUnit.Point);if(e.getStyle().padding[t].value!=o.value&&o.unit!=n.YGUnit.Undefined||e.getStyle().padding[t].unit!=o.unit){var r=e.getStyle();r.padding[t]=o,e.setStyle(r),e.markDirtyAndPropogate()}},t.YGNodeStyleSetPaddingPercent=function(e,t,i){var o=new l.YGValue(u.YGFloatSanitize(i),Y(i)?n.YGUnit.Undefined:n.YGUnit.Percent);if(e.getStyle().padding[t].value!=o.value&&o.unit!=n.YGUnit.Undefined||e.getStyle().padding[t].unit!=o.unit){var r=e.getStyle();r.padding[t]=o,e.setStyle(r),e.markDirtyAndPropogate()}},t.YGNodeStyleGetPadding=function(e,i){var o=e.getStyle().padding[i];return o.unit!=n.YGUnit.Undefined&&o.unit!=n.YGUnit.Auto||(o.value=t.YGUndefined),o},t.YGNodeStyleSetMarginAuto=function(e,t){if(e.getStyle().margin[t].unit!=n.YGUnit.Auto){var i=e.getStyle();i.margin[t].value=0,i.margin[t].unit=n.YGUnit.Auto,e.setStyle(i),e.markDirtyAndPropogate()}},t.YGNodeStyleSetWidth=function(e,t){var i=new l.YGValue(u.YGFloatSanitize(t),Y(t)?n.YGUnit.Undefined:n.YGUnit.Point);if(e.getStyle().dimensions[n.YGDimension.Width].value!=i.value&&i.unit!=n.YGUnit.Undefined||e.getStyle().dimensions[n.YGDimension.Width].unit!=i.unit){var o=e.getStyle();o.dimensions[n.YGDimension.Width]=i,e.setStyle(o),e.markDirtyAndPropogate()}},t.YGNodeStyleSetWidthPercent=function(e,t){if(e.getStyle().dimensions[n.YGDimension.Width].value!=u.YGFloatSanitize(t)||e.getStyle().dimensions[n.YGDimension.Width].unit!=n.YGUnit.Percent){var i=e.getStyle();i.dimensions[n.YGDimension.Width].value=u.YGFloatSanitize(t),i.dimensions[n.YGDimension.Width].unit=Y(t)?n.YGUnit.Auto:n.YGUnit.Percent,e.setStyle(i),e.markDirtyAndPropogate()}},t.YGNodeStyleSetWidthAuto=function(e){if(e.getStyle().dimensions[n.YGDimension.Width].unit!=n.YGUnit.Auto){var t=e.getStyle();t.dimensions[n.YGDimension.Width].value=0,t.dimensions[n.YGDimension.Width].unit=n.YGUnit.Auto,e.setStyle(t),e.markDirtyAndPropogate()}},t.YGNodeStyleGetWidth=function(e){var i=e.getStyle().dimensions[n.YGDimension.Width];return i.unit!=n.YGUnit.Undefined&&i.unit!=n.YGUnit.Auto||(i.value=t.YGUndefined),i},t.YGNodeStyleSetHeight=function(e,t){var i=new l.YGValue(u.YGFloatSanitize(t),Y(t)?n.YGUnit.Undefined:n.YGUnit.Point);if(e.getStyle().dimensions[n.YGDimension.Height].value!=i.value&&i.unit!=n.YGUnit.Undefined||e.getStyle().dimensions[n.YGDimension.Height].unit!=i.unit){var o=e.getStyle();o.dimensions[n.YGDimension.Height]=i,e.setStyle(o),e.markDirtyAndPropogate()}},t.YGNodeStyleSetHeightPercent=function(e,t){if(e.getStyle().dimensions[n.YGDimension.Height].value!=u.YGFloatSanitize(t)||e.getStyle().dimensions[n.YGDimension.Height].unit!=n.YGUnit.Percent){var i=e.getStyle();i.dimensions[n.YGDimension.Height].value=u.YGFloatSanitize(t),i.dimensions[n.YGDimension.Height].unit=Y(t)?n.YGUnit.Auto:n.YGUnit.Percent,e.setStyle(i),e.markDirtyAndPropogate()}},t.YGNodeStyleSetHeightAuto=function(e){if(e.getStyle().dimensions[n.YGDimension.Height].unit!=n.YGUnit.Auto){var t=e.getStyle();t.dimensions[n.YGDimension.Height].value=0,t.dimensions[n.YGDimension.Height].unit=n.YGUnit.Auto,e.setStyle(t),e.markDirtyAndPropogate()}},t.YGNodeStyleGetHeight=function(e){var i=e.getStyle().dimensions[n.YGDimension.Height];return i.unit!=n.YGUnit.Undefined&&i.unit!=n.YGUnit.Auto||(i.value=t.YGUndefined),i},t.YGNodeStyleSetMinWidth=function(e,t){var i=new l.YGValue(u.YGFloatSanitize(t),Y(t)?n.YGUnit.Undefined:n.YGUnit.Point);if(e.getStyle().minDimensions[n.YGDimension.Width].value!=i.value&&i.unit!=n.YGUnit.Undefined||e.getStyle().minDimensions[n.YGDimension.Width].unit!=i.unit){var o=e.getStyle();o.minDimensions[n.YGDimension.Width]=i,e.setStyle(o),e.markDirtyAndPropogate()}},t.YGNodeStyleSetMinWidthPercent=function(e,t){var i=new l.YGValue(u.YGFloatSanitize(t),Y(t)?n.YGUnit.Undefined:n.YGUnit.Percent);if(e.getStyle().minDimensions[n.YGDimension.Width].value!=i.value&&i.unit!=n.YGUnit.Undefined||e.getStyle().minDimensions[n.YGDimension.Width].unit!=i.unit){var o=e.getStyle();o.minDimensions[n.YGDimension.Width]=i,e.setStyle(o),e.markDirtyAndPropogate()}},t.YGNodeStyleGetMinWidth=function(e){var i=e.getStyle().minDimensions[n.YGDimension.Width];return i.unit!=n.YGUnit.Undefined&&i.unit!=n.YGUnit.Auto||(i.value=t.YGUndefined),i},t.YGNodeStyleSetMinHeight=function(e,t){var i=new l.YGValue(u.YGFloatSanitize(t),Y(t)?n.YGUnit.Undefined:n.YGUnit.Point);if(e.getStyle().minDimensions[n.YGDimension.Height].value!=i.value&&i.unit!=n.YGUnit.Undefined||e.getStyle().minDimensions[n.YGDimension.Height].unit!=i.unit){var o=e.getStyle();o.minDimensions[n.YGDimension.Height]=i,e.setStyle(o),e.markDirtyAndPropogate()}},t.YGNodeStyleSetMinHeightPercent=function(e,t){var i=new l.YGValue(u.YGFloatSanitize(t),Y(t)?n.YGUnit.Undefined:n.YGUnit.Percent);if(e.getStyle().minDimensions[n.YGDimension.Height].value!=i.value&&i.unit!=n.YGUnit.Undefined||e.getStyle().minDimensions[n.YGDimension.Height].unit!=i.unit){var o=e.getStyle();o.minDimensions[n.YGDimension.Height]=i,e.setStyle(o),e.markDirtyAndPropogate()}},t.YGNodeStyleGetMinHeight=function(e){var i=e.getStyle().minDimensions[n.YGDimension.Height];return i.unit!=n.YGUnit.Undefined&&i.unit!=n.YGUnit.Auto||(i.value=t.YGUndefined),i},t.YGNodeStyleSetMaxWidth=function(e,t){var i=new l.YGValue(u.YGFloatSanitize(t),Y(t)?n.YGUnit.Undefined:n.YGUnit.Point);if(e.getStyle().maxDimensions[n.YGDimension.Width].value!=i.value&&i.unit!=n.YGUnit.Undefined||e.getStyle().maxDimensions[n.YGDimension.Width].unit!=i.unit){var o=e.getStyle();o.maxDimensions[n.YGDimension.Width]=i,e.setStyle(o),e.markDirtyAndPropogate()}},t.YGNodeStyleSetMaxWidthPercent=function(e,t){var i=new l.YGValue(u.YGFloatSanitize(t),Y(t)?n.YGUnit.Undefined:n.YGUnit.Percent);if(e.getStyle().maxDimensions[n.YGDimension.Width].value!=i.value&&i.unit!=n.YGUnit.Undefined||e.getStyle().maxDimensions[n.YGDimension.Width].unit!=i.unit){var o=e.getStyle();o.maxDimensions[n.YGDimension.Width]=i,e.setStyle(o),e.markDirtyAndPropogate()}},t.YGNodeStyleGetMaxWidth=function(e){var i=e.getStyle().maxDimensions[n.YGDimension.Width];return i.unit!=n.YGUnit.Undefined&&i.unit!=n.YGUnit.Auto||(i.value=t.YGUndefined),i},t.YGNodeStyleSetMaxHeight=function(e,t){var i=new l.YGValue(u.YGFloatSanitize(t),Y(t)?n.YGUnit.Undefined:n.YGUnit.Point);if(e.getStyle().maxDimensions[n.YGDimension.Height].value!=i.value&&i.unit!=n.YGUnit.Undefined||e.getStyle().maxDimensions[n.YGDimension.Height].unit!=i.unit){var o=e.getStyle();o.maxDimensions[n.YGDimension.Height]=i,e.setStyle(o),e.markDirtyAndPropogate()}},t.YGNodeStyleSetMaxHeightPercent=function(e,t){var i=new l.YGValue(u.YGFloatSanitize(t),Y(t)?n.YGUnit.Undefined:n.YGUnit.Percent);if(e.getStyle().maxDimensions[n.YGDimension.Height].value!=i.value&&i.unit!=n.YGUnit.Undefined||e.getStyle().maxDimensions[n.YGDimension.Height].unit!=i.unit){var o=e.getStyle();o.maxDimensions[n.YGDimension.Height]=i,e.setStyle(o),e.markDirtyAndPropogate()}},t.YGNodeStyleGetMaxHeight=function(e){var i=e.getStyle().maxDimensions[n.YGDimension.Height];return i.unit!=n.YGUnit.Undefined&&i.unit!=n.YGUnit.Auto||(i.value=t.YGUndefined),i},t.YGNodeLayoutGetLeft=function(e){return e.getLayout().position[n.YGEdge.Left]},t.YGNodeLayoutGetTop=function(e){return e.getLayout().position[n.YGEdge.Top]},t.YGNodeLayoutGetRight=function(e){return e.getLayout().position[n.YGEdge.Right]},t.YGNodeLayoutGetBottom=function(e){return e.getLayout().position[n.YGEdge.Bottom]},t.YGNodeLayoutGetWidth=function(e){return e.getLayout().dimensions[n.YGDimension.Width]},t.YGNodeLayoutGetHeight=function(e){return e.getLayout().dimensions[n.YGDimension.Height]},t.YGNodeLayoutGetDirection=function(e){return e.getLayout().direction},t.YGNodeLayoutGetHadOverflow=function(e){return e.getLayout().hadOverflow},t.YGNodeLayoutGetMargin=function(e,t){return ve(e,t<=n.YGEdge.End,\\\\\\\"Cannot get layout properties of multi-edge shorthands\\\\\\\"),t==n.YGEdge.Left?e.getLayout().direction==n.YGDirection.RTL?e.getLayout().margin[n.YGEdge.End]:e.getLayout().margin[n.YGEdge.Start]:t==n.YGEdge.Right?e.getLayout().direction==n.YGDirection.RTL?e.getLayout().margin[n.YGEdge.Start]:e.getLayout().margin[n.YGEdge.End]:e.getLayout().margin[t]},t.YGNodeLayoutGetBorder=function(e,t){return ve(e,t<=n.YGEdge.End,\\\\\\\"Cannot get layout properties of multi-edge shorthands\\\\\\\"),t==n.YGEdge.Left?e.getLayout().direction==n.YGDirection.RTL?e.getLayout().border[n.YGEdge.End]:e.getLayout().border[n.YGEdge.Start]:t==n.YGEdge.Right?e.getLayout().direction==n.YGDirection.RTL?e.getLayout().border[n.YGEdge.Start]:e.getLayout().border[n.YGEdge.End]:e.getLayout().border[t]},t.YGNodeLayoutGetPadding=function(e,t){return ve(e,t<=n.YGEdge.End,\\\\\\\"Cannot get layout properties of multi-edge shorthands\\\\\\\"),t==n.YGEdge.Left?e.getLayout().direction==n.YGDirection.RTL?e.getLayout().padding[n.YGEdge.End]:e.getLayout().padding[n.YGEdge.Start]:t==n.YGEdge.Right?e.getLayout().direction==n.YGDirection.RTL?e.getLayout().padding[n.YGEdge.Start]:e.getLayout().padding[n.YGEdge.End]:e.getLayout().padding[t]},t.YGNodeStyleSetFlex=function(e,t){if(e.getStyle().flex.isDiffValue(t)){var i=e.getStyle();Y(t)?i.flex=new s.YGFloatOptional:i.flex=new s.YGFloatOptional(t),e.setStyle(i),e.markDirtyAndPropogate()}},t.YGNodeStyleGetFlex=function(e){return e.getStyle().flex.isUndefined()?t.YGUndefined:e.getStyle().flex.getValue()},t.YGNodeStyleSetFlexGrow=function(e,t){if(e.getStyle().flexGrow.isDiffValue(t)){var i=e.getStyle();Y(t)?i.flexGrow=new s.YGFloatOptional:i.flexGrow=new s.YGFloatOptional(t),e.setStyle(i),e.markDirtyAndPropogate()}},t.YGNodeStyleSetFlexShrink=function(e,t){if(e.getStyle().flexShrink.isDiffValue(t)){var i=e.getStyle();Y(t)?i.flexShrink=new s.YGFloatOptional:i.flexShrink=new s.YGFloatOptional(t),e.setStyle(i),e.markDirtyAndPropogate()}},t.YGNodeStyleGetFlexBasis=function(e){var i=e.getStyle().flexBasis;return i.unit!=n.YGUnit.Undefined&&i.unit!=n.YGUnit.Auto||(i.value=t.YGUndefined),i},t.YGNodeStyleSetFlexBasis=function(e,t){var i=new l.YGValue(u.YGFloatSanitize(t),Y(t)?n.YGUnit.Undefined:n.YGUnit.Point);if(e.getStyle().flexBasis.value!=i.value&&i.unit!=n.YGUnit.Undefined||e.getStyle().flexBasis.unit!=i.unit){var o=e.getStyle();o.flexBasis=i,e.setStyle(o),e.markDirtyAndPropogate()}},t.YGNodeStyleSetFlexBasisPercent=function(e,t){if(e.getStyle().flexBasis.value!=t||e.getStyle().flexBasis.unit!=n.YGUnit.Percent){var i=e.getStyle();i.flexBasis.value=u.YGFloatSanitize(t),i.flexBasis.unit=Y(t)?n.YGUnit.Auto:n.YGUnit.Percent,e.setStyle(i),e.markDirtyAndPropogate()}},t.YGNodeStyleSetFlexBasisAuto=function(e){if(e.getStyle().flexBasis.unit!=n.YGUnit.Auto){var t=e.getStyle();t.flexBasis.value=0,t.flexBasis.unit=n.YGUnit.Auto,e.setStyle(t),e.markDirtyAndPropogate()}},t.YGNodeStyleSetBorder=function(e,t,i){var o=new l.YGValue(u.YGFloatSanitize(i),Y(i)?n.YGUnit.Undefined:n.YGUnit.Point);if(e.getStyle().border[t].value!=o.value&&o.unit!=n.YGUnit.Undefined||e.getStyle().border[t].unit!=o.unit){var r=e.getStyle();r.border[t]=o,e.setStyle(r),e.markDirtyAndPropogate()}},t.YGNodeStyleGetBorder=function(e,i){return e.getStyle().border[i].unit==n.YGUnit.Undefined||e.getStyle().border[i].unit==n.YGUnit.Auto?t.YGUndefined:e.getStyle().border[i].value},t.YGNodeStyleGetAspectRatio=function(e){var i=e.getStyle().aspectRatio;return i.isUndefined()?t.YGUndefined:i.getValue()},t.YGNodeStyleSetAspectRatio=function(e,t){if(e.getStyle().aspectRatio.isDiffValue(t)){var i=e.getStyle();i.aspectRatio=new s.YGFloatOptional(t),e.setStyle(i),e.markDirtyAndPropogate()}},t.YGNodeLayoutGetDidLegacyStretchFlagAffectLayout=function(e){return e.getLayout().doesLegacyStretchFlagAffectsLayout};var C=0;function A(e,t){}function N(e,t){}function _(e,t,i){return u.YGUnwrapFloatOptional(e.getLeadingPaddingAndBorder(t,i).add(e.getTrailingPaddingAndBorder(t,i)))}function P(e,t){var i=t.getStyle().alignSelf==n.YGAlign.Auto?e.getStyle().alignItems:t.getStyle().alignSelf;return i==n.YGAlign.Baseline&&u.YGFlexDirectionIsColumn(e.getStyle().flexDirection)?n.YGAlign.FlexStart:i}function R(e){if(null!=e.getBaseline()){var t=e.getBaseline()(e,e.getLayout().measuredDimensions[n.YGDimension.Width],e.getLayout().measuredDimensions[n.YGDimension.Height]);return ve(e,!Y(t),\\\\\\\"Expect custom baseline function to not return NaN\\\\\\\"),t}for(var i=null,o=E(e),r=0;r<o;r++){var a=U(e,r);if(a.getLineIndex()>0)break;if(a.getStyle().positionType!=n.YGPositionType.Absolute){if(P(e,a)==n.YGAlign.Baseline){i=a;break}null==i&&(i=a)}}return null==i?e.getLayout().measuredDimensions[n.YGDimension.Height]:R(i)+i.getLayout().position[n.YGEdge.Top]}function O(e){if(u.YGFlexDirectionIsColumn(e.getStyle().flexDirection))return!1;if(e.getStyle().alignItems==n.YGAlign.Baseline)return!0;for(var t=E(e),i=0;i<t;i++){var o=U(e,i);if(o.getStyle().positionType==n.YGPositionType.Relative&&o.getStyle().alignSelf==n.YGAlign.Baseline)return!0}return!1}function T(e,t,i){return e.getLayout().measuredDimensions[d.dim[t]]+u.YGUnwrapFloatOptional(e.getLeadingMargin(t,i).add(e.getTrailingMargin(t,i)))}function V(e,t,i){var o=Y(e.getResolvedDimension(d.dim[t]).value);return!(e.getResolvedDimension(d.dim[t]).unit==n.YGUnit.Auto||e.getResolvedDimension(d.dim[t]).unit==n.YGUnit.Undefined||e.getResolvedDimension(d.dim[t]).unit==n.YGUnit.Point&&!o&&e.getResolvedDimension(d.dim[t]).value<0||e.getResolvedDimension(d.dim[t]).unit==n.YGUnit.Percent&&!o&&(e.getResolvedDimension(d.dim[t]).value<0||Y(i)))}function W(e,t){var i=e.getLayout().measuredDimensions[d.dim[t]];return!Y(i)&&i>=0}function I(e,t,i,o){var r,a;return u.YGFlexDirectionIsColumn(t)?(r=u.YGResolveValue(e.getStyle().minDimensions[n.YGDimension.Height],o),a=u.YGResolveValue(e.getStyle().maxDimensions[n.YGDimension.Height],o)):u.YGFlexDirectionIsRow(t)&&(r=u.YGResolveValue(e.getStyle().minDimensions[n.YGDimension.Width],o),a=u.YGResolveValue(e.getStyle().maxDimensions[n.YGDimension.Width],o)),!a.isUndefined()&&a.getValue()>=0&&i>a.getValue()?a:!r.isUndefined()&&r.getValue()>=0&&i<r.getValue()?r:new s.YGFloatOptional(i)}function b(e,t,i,n,o){return u.YGFloatMax(u.YGUnwrapFloatOptional(I(e,t,i,n)),_(e,t,o))}function B(e,t,i){var n=t.getLayout().measuredDimensions[d.dim[i]];t.setLayoutPosition(e.getLayout().measuredDimensions[d.dim[i]]-n-t.getLayout().position[d.pos[i]],d.trailing[i])}function H(e,t,i,o,r,a){var s=u.YGResolveValue(e.getStyle().maxDimensions[d.dim[t]],i).add(e.getMarginForAxis(t,o));switch(r.value){case n.YGMeasureMode.Exactly:case n.YGMeasureMode.AtMost:a.value=s.isUndefined()||a.value<s.getValue()?a.value:s.getValue();break;case n.YGMeasureMode.Undefined:s.isUndefined()||(r.value=n.YGMeasureMode.AtMost,a.value=s.getValue())}}function k(e,i,o,r,a,l,g,G,c,f){var y,h,p,m,S=u.YGResolveFlexDirection(e.getStyle().flexDirection,c),F=u.YGFlexDirectionIsRow(S),v=F?o:a,D=F?l:g,x=u.YGResolveValue(i.resolveFlexBasisPtr(),D),M=V(i,n.YGFlexDirection.Row,l),L=V(i,n.YGFlexDirection.Column,g);if(x.isUndefined()||Y(v))if(F&&M){b=new s.YGFloatOptional(_(i,n.YGFlexDirection.Row,l));i.setLayoutComputedFlexBasis(u.YGFloatOptionalMax(u.YGResolveValue(i.getResolvedDimension(n.YGDimension.Width),l),b))}else if(!F&&L){b=new s.YGFloatOptional(_(i,n.YGFlexDirection.Column,l));i.setLayoutComputedFlexBasis(u.YGFloatOptionalMax(u.YGResolveValue(i.getResolvedDimension(n.YGDimension.Height),g),b))}else{y=t.YGUndefined,h=t.YGUndefined,p=n.YGMeasureMode.Undefined,m=n.YGMeasureMode.Undefined;var w=u.YGUnwrapFloatOptional(i.getMarginForAxis(n.YGFlexDirection.Row,l)),U=u.YGUnwrapFloatOptional(i.getMarginForAxis(n.YGFlexDirection.Column,l));M&&(y=u.YGUnwrapFloatOptional(u.YGResolveValue(i.getResolvedDimension(n.YGDimension.Width),l))+w,p=n.YGMeasureMode.Exactly),L&&(h=u.YGUnwrapFloatOptional(u.YGResolveValue(i.getResolvedDimension(n.YGDimension.Height),g))+U,m=n.YGMeasureMode.Exactly),(!F&&e.getStyle().overflow==n.YGOverflow.Scroll||e.getStyle().overflow!=n.YGOverflow.Scroll)&&Y(y)&&!Y(o)&&(y=o,p=n.YGMeasureMode.AtMost),(F&&e.getStyle().overflow==n.YGOverflow.Scroll||e.getStyle().overflow!=n.YGOverflow.Scroll)&&Y(h)&&!Y(a)&&(h=a,m=n.YGMeasureMode.AtMost),i.getStyle().aspectRatio.isUndefined()||(F||p!=n.YGMeasureMode.Exactly?F&&m==n.YGMeasureMode.Exactly&&(y=w+(h-U)*i.getStyle().aspectRatio.getValue(),p=n.YGMeasureMode.Exactly):(h=U+(y-w)/i.getStyle().aspectRatio.getValue(),m=n.YGMeasureMode.Exactly));var E=!Y(o)&&r==n.YGMeasureMode.Exactly,A=P(e,i)==n.YGAlign.Stretch&&p!=n.YGMeasureMode.Exactly;!F&&!M&&E&&A&&(y=o,p=n.YGMeasureMode.Exactly,i.getStyle().aspectRatio.isUndefined()||(h=(y-w)/i.getStyle().aspectRatio.getValue(),m=n.YGMeasureMode.Exactly));var N=!Y(a)&&G==n.YGMeasureMode.Exactly,R=P(e,i)==n.YGAlign.Stretch&&m!=n.YGMeasureMode.Exactly;F&&!L&&N&&R&&(h=a,m=n.YGMeasureMode.Exactly,i.getStyle().aspectRatio.isUndefined()||(y=(h-U)*i.getStyle().aspectRatio.getValue(),p=n.YGMeasureMode.Exactly));var O={value:p},T={value:y},W={value:m},I={value:h};H(i,n.YGFlexDirection.Row,l,l,O,T),H(i,n.YGFlexDirection.Column,g,l,W,I),ye(i,T.value,I.value,c,O.value,W.value,l,g,!1,\\\\\\\"measure\\\\\\\",f),i.setLayoutComputedFlexBasis(new s.YGFloatOptional(u.YGFloatMax(i.getLayout().measuredDimensions[d.dim[S]],_(i,S,l))))}else if(i.getLayout().computedFlexBasis.isUndefined()||xe(i.getConfig(),n.YGExperimentalFeature.WebFlexBasis)&&i.getLayout().computedFlexBasisGeneration!=C){var b=new s.YGFloatOptional(_(i,S,l));i.setLayoutComputedFlexBasis(u.YGFloatOptionalMax(x,b))}i.setLayoutComputedFlexBasisGeneration(C)}function q(e,i,o,r,a,s,l){var g=u.YGResolveFlexDirection(e.getStyle().flexDirection,s),G=u.YGFlexDirectionCross(g,s),c=u.YGFlexDirectionIsRow(g),f=t.YGUndefined,y=t.YGUndefined,h=n.YGMeasureMode.Undefined,p=n.YGMeasureMode.Undefined,m=u.YGUnwrapFloatOptional(i.getMarginForAxis(n.YGFlexDirection.Row,o)),S=u.YGUnwrapFloatOptional(i.getMarginForAxis(n.YGFlexDirection.Column,o));V(i,n.YGFlexDirection.Row,o)?f=u.YGUnwrapFloatOptional(u.YGResolveValue(i.getResolvedDimension(n.YGDimension.Width),o))+m:i.isLeadingPositionDefined(n.YGFlexDirection.Row)&&i.isTrailingPosDefined(n.YGFlexDirection.Row)&&(f=e.getLayout().measuredDimensions[n.YGDimension.Width]-(e.getLeadingBorder(n.YGFlexDirection.Row)+e.getTrailingBorder(n.YGFlexDirection.Row))-u.YGUnwrapFloatOptional(i.getLeadingPosition(n.YGFlexDirection.Row,o).add(i.getTrailingPosition(n.YGFlexDirection.Row,o))),f=b(i,n.YGFlexDirection.Row,f,o,o)),V(i,n.YGFlexDirection.Column,a)?y=u.YGUnwrapFloatOptional(u.YGResolveValue(i.getResolvedDimension(n.YGDimension.Height),a))+S:i.isLeadingPositionDefined(n.YGFlexDirection.Column)&&i.isTrailingPosDefined(n.YGFlexDirection.Column)&&(y=e.getLayout().measuredDimensions[n.YGDimension.Height]-(e.getLeadingBorder(n.YGFlexDirection.Column)+e.getTrailingBorder(n.YGFlexDirection.Column))-u.YGUnwrapFloatOptional(i.getLeadingPosition(n.YGFlexDirection.Column,a).add(i.getTrailingPosition(n.YGFlexDirection.Column,a))),y=b(i,n.YGFlexDirection.Column,y,a,o)),(Y(f)?!Y(y):Y(y))&&(i.getStyle().aspectRatio.isUndefined()||(Y(f)?f=m+(y-S)*i.getStyle().aspectRatio.getValue():Y(y)&&(y=S+(f-m)/i.getStyle().aspectRatio.getValue()))),(Y(f)||Y(y))&&(h=Y(f)?n.YGMeasureMode.Undefined:n.YGMeasureMode.Exactly,p=Y(y)?n.YGMeasureMode.Undefined:n.YGMeasureMode.Exactly,!c&&Y(f)&&r!=n.YGMeasureMode.Undefined&&!Y(o)&&o>0&&(f=o,h=n.YGMeasureMode.AtMost),ye(i,f,y,s,h,p,f,y,!1,\\\\\\\"abs-measure\\\\\\\",l),f=i.getLayout().measuredDimensions[n.YGDimension.Width]+u.YGUnwrapFloatOptional(i.getMarginForAxis(n.YGFlexDirection.Row,o)),y=i.getLayout().measuredDimensions[n.YGDimension.Height]+u.YGUnwrapFloatOptional(i.getMarginForAxis(n.YGFlexDirection.Column,o))),ye(i,f,y,s,n.YGMeasureMode.Exactly,n.YGMeasureMode.Exactly,f,y,!0,\\\\\\\"abs-layout\\\\\\\",l),i.isTrailingPosDefined(g)&&!i.isLeadingPositionDefined(g)?i.setLayoutPosition(e.getLayout().measuredDimensions[d.dim[g]]-i.getLayout().measuredDimensions[d.dim[g]]-e.getTrailingBorder(g)-u.YGUnwrapFloatOptional(i.getTrailingMargin(g,o))-u.YGUnwrapFloatOptional(i.getTrailingPosition(g,c?o:a)),d.leading[g]):i.isLeadingPositionDefined(g)||e.getStyle().justifyContent!=n.YGJustify.Center?i.isLeadingPositionDefined(g)||e.getStyle().justifyContent!=n.YGJustify.FlexEnd||i.setLayoutPosition(e.getLayout().measuredDimensions[d.dim[g]]-i.getLayout().measuredDimensions[d.dim[g]],d.leading[g]):i.setLayoutPosition((e.getLayout().measuredDimensions[d.dim[g]]-i.getLayout().measuredDimensions[d.dim[g]])/2,d.leading[g]),i.isTrailingPosDefined(G)&&!i.isLeadingPositionDefined(G)?i.setLayoutPosition(e.getLayout().measuredDimensions[d.dim[G]]-i.getLayout().measuredDimensions[d.dim[G]]-e.getTrailingBorder(G)-u.YGUnwrapFloatOptional(i.getTrailingMargin(G,o))-u.YGUnwrapFloatOptional(i.getTrailingPosition(G,c?a:o)),d.leading[G]):i.isLeadingPositionDefined(G)||P(e,i)!=n.YGAlign.Center?i.isLeadingPositionDefined(G)||(P(e,i)==n.YGAlign.FlexEnd?e.getStyle().flexWrap==n.YGWrap.WrapReverse:e.getStyle().flexWrap!=n.YGWrap.WrapReverse)||i.setLayoutPosition(e.getLayout().measuredDimensions[d.dim[G]]-i.getLayout().measuredDimensions[d.dim[G]],d.leading[G]):i.setLayoutPosition((e.getLayout().measuredDimensions[d.dim[G]]-i.getLayout().measuredDimensions[d.dim[G]])/2,d.leading[G])}function z(e,t,i,o,r,a,s){ve(e,null!=e.getMeasure(),\\\\\\\"Expected node to have custom measure function\\\\\\\");var l=_(e,n.YGFlexDirection.Row,t),d=_(e,n.YGFlexDirection.Column,t),g=u.YGUnwrapFloatOptional(e.getMarginForAxis(n.YGFlexDirection.Row,t)),G=u.YGUnwrapFloatOptional(e.getMarginForAxis(n.YGFlexDirection.Column,t)),c=Y(t)?t:u.YGFloatMax(0,t-g-l),f=Y(i)?i:u.YGFloatMax(0,i-G-d);if(o==n.YGMeasureMode.Exactly&&r==n.YGMeasureMode.Exactly)e.setLayoutMeasuredDimension(b(e,n.YGFlexDirection.Row,t-g,a,a),n.YGDimension.Width),e.setLayoutMeasuredDimension(b(e,n.YGFlexDirection.Column,i-G,s,a),n.YGDimension.Height);else{var y=e.getMeasure()(e,c,o,f,r);e.setLayoutMeasuredDimension(b(e,n.YGFlexDirection.Row,o==n.YGMeasureMode.Undefined||o==n.YGMeasureMode.AtMost?y.width+l:t-g,a,a),n.YGDimension.Width),e.setLayoutMeasuredDimension(b(e,n.YGFlexDirection.Column,r==n.YGMeasureMode.Undefined||r==n.YGMeasureMode.AtMost?y.height+d:i-G,s,a),n.YGDimension.Height)}}function J(e,t,i,o,r,a,s){var l=_(e,n.YGFlexDirection.Row,a),d=_(e,n.YGFlexDirection.Column,a),g=u.YGUnwrapFloatOptional(e.getMarginForAxis(n.YGFlexDirection.Row,a)),G=u.YGUnwrapFloatOptional(e.getMarginForAxis(n.YGFlexDirection.Column,a));e.setLayoutMeasuredDimension(b(e,n.YGFlexDirection.Row,o==n.YGMeasureMode.Undefined||o==n.YGMeasureMode.AtMost?l:t-g,a,a),n.YGDimension.Width),e.setLayoutMeasuredDimension(b(e,n.YGFlexDirection.Column,r==n.YGMeasureMode.Undefined||r==n.YGMeasureMode.AtMost?d:i-G,s,a),n.YGDimension.Height)}function j(e,t,i,o,r,a,s){if(!Y(t)&&o==n.YGMeasureMode.AtMost&&t<=0||!Y(i)&&r==n.YGMeasureMode.AtMost&&i<=0||o==n.YGMeasureMode.Exactly&&r==n.YGMeasureMode.Exactly){var l=u.YGUnwrapFloatOptional(e.getMarginForAxis(n.YGFlexDirection.Column,a)),d=u.YGUnwrapFloatOptional(e.getMarginForAxis(n.YGFlexDirection.Row,a));return e.setLayoutMeasuredDimension(b(e,n.YGFlexDirection.Row,Y(t)||o==n.YGMeasureMode.AtMost&&t<0?0:t-d,a,a),n.YGDimension.Width),e.setLayoutMeasuredDimension(b(e,n.YGFlexDirection.Column,Y(i)||r==n.YGMeasureMode.AtMost&&i<0?0:i-l,s,a),n.YGDimension.Height),!0}return!1}function X(e){e.getLayout().clean(),e.setHasNewLayout(!0),e.cloneChildrenIfNeeded();for(var t=E(e),i=0;i<t;i++){X(e.getChild(i))}}function Z(e,t,i,o){var r=u.YGFlexDirectionIsRow(t)?n.YGFlexDirection.Row:n.YGFlexDirection.Column,a=u.YGFlexDirectionIsRow(t)?n.YGDimension.Width:n.YGDimension.Height,s=u.YGUnwrapFloatOptional(e.getMarginForAxis(r,o)),l=_(e,r,o),d=i-s-l;if(!Y(d)){var g=u.YGResolveValue(e.getStyle().minDimensions[a],o),G=g.isUndefined()?0:g.getValue()-l,c=u.YGResolveValue(e.getStyle().maxDimensions[a],o),f=c.isUndefined()?Number.MAX_VALUE:c.getValue()-l;d=u.YGFloatMax(u.YGFloatMin(d,f),G)}return d}function K(e,t,i,o,r,a,l,d,g,G){var c=null,Y=e.getChildren();if((u.YGFlexDirectionIsRow(l)?o:r)==n.YGMeasureMode.Exactly)for(var f=0;f<Y.length;++f){if((y=Y[f]).isNodeFlexible()){if(null!=c||u.YGFloatsEqual(y.resolveFlexGrow(),0)||u.YGFloatsEqual(y.resolveFlexShrink(),0)){c=null;break}c=y}}for(f=0;f<Y.length;++f){var y;if((y=Y[f]).resolveDimension(),y.getStyle().display!=n.YGDisplay.None){if(g){var h=y.resolveDirection(a),p=u.YGFlexDirectionIsRow(l)?t:i,m=u.YGFlexDirectionIsRow(l)?i:t;y.setPosition(h,p,m,t)}y.getStyle().positionType!=n.YGPositionType.Absolute&&(y==c?(y.setLayoutComputedFlexBasisGeneration(C),y.setLayoutComputedFlexBasis(new s.YGFloatOptional(0))):k(e,y,t,o,i,t,i,r,a,d),G.value+=u.YGUnwrapFloatOptional(y.getLayout().computedFlexBasis.add(y.getMarginForAxis(l,t))))}else X(y),y.setHasNewLayout(!0),y.setDirty(!1)}}function Q(e,t,i,o,r,a,s){for(var l=new u.YGCollectFlexItemsRowValues,d=0,g=u.YGResolveFlexDirection(e.getStyle().flexDirection,e.resolveDirection(t)),G=e.getStyle().flexWrap!=n.YGWrap.NoWrap,c=a;c<e.getChildrenCount();c++){var Y=e.getChild(c);if(Y.getStyle().display!=n.YGDisplay.None&&Y.getStyle().positionType!=n.YGPositionType.Absolute){Y.setLineIndex(s);var f=u.YGUnwrapFloatOptional(Y.getMarginForAxis(g,o)),y=u.YGUnwrapFloatOptional(I(Y,g,u.YGUnwrapFloatOptional(Y.getLayout().computedFlexBasis),i));if(d+y+f>r&&G&&l.itemsOnLine>0)break;d+=y+f,l.sizeConsumedOnCurrentLine+=y+f,l.itemsOnLine++,Y.isNodeFlexible()&&(l.totalFlexGrowFactors+=Y.resolveFlexGrow(),l.totalFlexShrinkScaledFactors+=-Y.resolveFlexShrink()*u.YGUnwrapFloatOptional(Y.getLayout().computedFlexBasis)),l.relativeChildren.push(Y)}}return l.totalFlexGrowFactors>0&&l.totalFlexGrowFactors<1&&(l.totalFlexGrowFactors=1),l.totalFlexShrinkScaledFactors>0&&l.totalFlexShrinkScaledFactors<1&&(l.totalFlexShrinkScaledFactors=1),l.endOfLineIndex=c,l}function $(e,t,i,o,r,a,s,l,g,G,c,f,y){for(var h=0,p=0,m=0,S=0,F=u.YGFlexDirectionIsRow(i),v=t.getStyle().flexWrap!=n.YGWrap.NoWrap,D=0;D<e.relativeChildren.length;++D){var x=e.relativeChildren[D],M=h=u.YGUnwrapFloatOptional(I(x,i,u.YGUnwrapFloatOptional(x.getLayout().computedFlexBasis),r));if(!Y(e.remainingFreeSpace)&&e.remainingFreeSpace<0){if(0!=(p=-x.resolveFlexShrink()*h)){M=b(x,i,Y(e.totalFlexShrinkScaledFactors)||0!=e.totalFlexShrinkScaledFactors?h+e.remainingFreeSpace/e.totalFlexShrinkScaledFactors*p:h+p,a,l)}}else!Y(e.remainingFreeSpace)&&e.remainingFreeSpace>0&&(Y(m=x.resolveFlexGrow())||0==m||(M=b(x,i,h+e.remainingFreeSpace/e.totalFlexGrowFactors*m,a,l)));S+=M-h;var L=u.YGUnwrapFloatOptional(x.getMarginForAxis(i,l)),w=u.YGUnwrapFloatOptional(x.getMarginForAxis(o,l)),U=void 0,E=M+L,C=void 0,A=n.YGMeasureMode.Exactly;if(x.getStyle().aspectRatio.isUndefined())if(Y(s)||V(x,o,s)||c!=n.YGMeasureMode.Exactly||v&&G||P(t,x)!=n.YGAlign.Stretch||x.marginLeadingValue(o).unit==n.YGUnit.Auto||x.marginTrailingValue(o).unit==n.YGUnit.Auto)if(V(x,o,s)){U=u.YGUnwrapFloatOptional(u.YGResolveValue(x.getResolvedDimension(d.dim[o]),s))+w;var N=x.getResolvedDimension(d.dim[o]).unit==n.YGUnit.Percent&&c!=n.YGMeasureMode.Exactly;C=Y(U)||N?n.YGMeasureMode.Undefined:n.YGMeasureMode.Exactly}else C=Y(U=s)?n.YGMeasureMode.Undefined:n.YGMeasureMode.AtMost;else U=s,C=n.YGMeasureMode.Exactly;else U=F?(E-L)/x.getStyle().aspectRatio.getValue():(E-L)*x.getStyle().aspectRatio.getValue(),C=n.YGMeasureMode.Exactly,U+=w;var _={value:A},R={value:E},O={value:C},T={value:U};H(x,i,a,l,_,R),H(x,o,s,l,O,T),A=_.value,E=R.value,C=O.value,U=T.value;var W=!V(x,o,s)&&P(t,x)==n.YGAlign.Stretch&&x.marginLeadingValue(o).unit!=n.YGUnit.Auto&&x.marginTrailingValue(o).unit!=n.YGUnit.Auto,B=F?A:C,k=F?C:A;ye(x,F?E:U,F?U:E,t.getLayout().direction,B,k,l,g,f&&!W,\\\\\\\"flex\\\\\\\",y),t.setLayoutHadOverflow(t.getLayout().hadOverflow||x.getLayout().hadOverflow)}return S}function ee(e,t,i,n,o){for(var r=0,a=0,s=0,l=0,d=0,g=0;g<e.relativeChildren.length;++g){var G=e.relativeChildren[g],c=u.YGUnwrapFloatOptional(I(G,t,u.YGUnwrapFloatOptional(G.getLayout().computedFlexBasis),i));e.remainingFreeSpace<0?Y(r=-G.resolveFlexShrink()*c)||0==r||(l=b(G,t,s=c+e.remainingFreeSpace/e.totalFlexShrinkScaledFactors*r,n,o),Y(s)||Y(l)||s==l||(d+=l-c,e.totalFlexShrinkScaledFactors-=r)):!Y(e.remainingFreeSpace)&&e.remainingFreeSpace>0&&(Y(a=G.resolveFlexGrow())||0==a||(l=b(G,t,s=c+e.remainingFreeSpace/e.totalFlexGrowFactors*a,n,o),Y(s)||Y(l)||s==l||(d+=l-c,e.totalFlexGrowFactors-=a)))}e.remainingFreeSpace-=d}function te(e,t,i,n,o,r,a,s,l,u,d,g,G){var c=t.remainingFreeSpace;ee(t,i,o,r,s);var Y=$(t,e,i,n,o,r,a,s,l,u,d,g,G);t.remainingFreeSpace=c-Y}function ie(e,t,i,o,r,a,s,l,g,G,c,Y,f){var y=e.getStyle();a==n.YGMeasureMode.AtMost&&t.remainingFreeSpace>0&&(y.minDimensions[d.dim[o]].unit==n.YGUnit.Undefined||u.YGResolveValue(y.minDimensions[d.dim[o]],l).isUndefined()?t.remainingFreeSpace=0:t.remainingFreeSpace=u.YGFloatMax(0,u.YGUnwrapFloatOptional(u.YGResolveValue(y.minDimensions[d.dim[o]],l))-(G-t.remainingFreeSpace)));for(var h=0,p=i;p<t.endOfLineIndex;p++){(D=e.getChild(p)).getStyle().positionType==n.YGPositionType.Relative&&(D.marginLeadingValue(o).unit==n.YGUnit.Auto&&h++,D.marginTrailingValue(o).unit==n.YGUnit.Auto&&h++)}var m=0,S=0,F=e.getStyle().justifyContent;if(0==h)switch(F){case n.YGJustify.Center:m=t.remainingFreeSpace/2;break;case n.YGJustify.FlexEnd:m=t.remainingFreeSpace;break;case n.YGJustify.SpaceBetween:S=t.itemsOnLine>1?u.YGFloatMax(t.remainingFreeSpace,0)/(t.itemsOnLine-1):0;break;case n.YGJustify.SpaceEvenly:m=S=t.remainingFreeSpace/(t.itemsOnLine+1);break;case n.YGJustify.SpaceAround:m=(S=t.remainingFreeSpace/t.itemsOnLine)/2;break;case n.YGJustify.FlexStart:}var v=u.YGUnwrapFloatOptional(e.getLeadingPaddingAndBorder(o,g));t.mainDim=v+m,t.crossDim=0;for(p=i;p<t.endOfLineIndex;p++){var D,x=(D=e.getChild(p)).getStyle(),M=D.getLayout();if(x.display!=n.YGDisplay.None)if(x.positionType==n.YGPositionType.Absolute&&D.isLeadingPositionDefined(o))f&&D.setLayoutPosition(u.YGUnwrapFloatOptional(D.getLeadingPosition(o,G))+e.getLeadingBorder(o)+u.YGUnwrapFloatOptional(D.getLeadingMargin(o,Y)),d.pos[o]);else if(x.positionType==n.YGPositionType.Relative)D.marginLeadingValue(o).unit==n.YGUnit.Auto&&(t.mainDim+=t.remainingFreeSpace/h),f&&D.setLayoutPosition(M.position[d.pos[o]]+t.mainDim,d.pos[o]),D.marginTrailingValue(o).unit==n.YGUnit.Auto&&(t.mainDim+=t.remainingFreeSpace/h),!f&&s==n.YGMeasureMode.Exactly?(t.mainDim+=S+u.YGUnwrapFloatOptional(D.getMarginForAxis(o,Y))+u.YGUnwrapFloatOptional(M.computedFlexBasis),t.crossDim=c):(t.mainDim+=S+T(D,o,Y),t.crossDim=u.YGFloatMax(t.crossDim,T(D,r,Y)));else f&&D.setLayoutPosition(M.position[d.pos[o]]+e.getLeadingBorder(o)+m,d.pos[o])}t.mainDim+=u.YGUnwrapFloatOptional(e.getTrailingPaddingAndBorder(o,g))}function ne(e,t,i,o,r,a,s,l,g,G){ve(e,!Y(t)||r==n.YGMeasureMode.Undefined,\\\\\\\"availableWidth is indefinite so widthMeasureMode must be YGMeasureMode.Undefined\\\\\\\"),ve(e,!Y(i)||a==n.YGMeasureMode.Undefined,\\\\\\\"availableHeight is indefinite so heightMeasureMode must be YGMeasureMode.Undefined\\\\\\\");var c=e.resolveDirection(o);e.setLayoutDirection(c);var f=u.YGResolveFlexDirection(n.YGFlexDirection.Row,c),y=u.YGResolveFlexDirection(n.YGFlexDirection.Column,c);if(e.setLayoutMargin(u.YGUnwrapFloatOptional(e.getLeadingMargin(f,s)),n.YGEdge.Start),e.setLayoutMargin(u.YGUnwrapFloatOptional(e.getTrailingMargin(f,s)),n.YGEdge.End),e.setLayoutMargin(u.YGUnwrapFloatOptional(e.getLeadingMargin(y,s)),n.YGEdge.Top),e.setLayoutMargin(u.YGUnwrapFloatOptional(e.getTrailingMargin(y,s)),n.YGEdge.Bottom),e.setLayoutBorder(e.getLeadingBorder(f),n.YGEdge.Start),e.setLayoutBorder(e.getTrailingBorder(f),n.YGEdge.End),e.setLayoutBorder(e.getLeadingBorder(y),n.YGEdge.Top),e.setLayoutBorder(e.getTrailingBorder(y),n.YGEdge.Bottom),e.setLayoutPadding(u.YGUnwrapFloatOptional(e.getLeadingPadding(f,s)),n.YGEdge.Start),e.setLayoutPadding(u.YGUnwrapFloatOptional(e.getTrailingPadding(f,s)),n.YGEdge.End),e.setLayoutPadding(u.YGUnwrapFloatOptional(e.getLeadingPadding(y,s)),n.YGEdge.Top),e.setLayoutPadding(u.YGUnwrapFloatOptional(e.getTrailingPadding(y,s)),n.YGEdge.Bottom),null==e.getMeasure()){var h=E(e);if(0!=h){if(g||!j(e,t,i,r,a,s,l)){e.cloneChildrenIfNeeded(),e.setLayoutHadOverflow(!1);var p=u.YGResolveFlexDirection(e.getStyle().flexDirection,c),m=u.YGFlexDirectionCross(p,c),S=u.YGFlexDirectionIsRow(p),F=e.getStyle().flexWrap!=n.YGWrap.NoWrap,v=S?s:l,D=S?l:s,x=u.YGUnwrapFloatOptional(e.getLeadingPaddingAndBorder(m,s)),M=_(e,p,s),L=_(e,m,s),w=S?r:a,C=S?a:r,A=S?M:L,N=S?L:M,k=u.YGUnwrapFloatOptional(e.getMarginForAxis(n.YGFlexDirection.Row,s)),X=u.YGUnwrapFloatOptional(e.getMarginForAxis(n.YGFlexDirection.Column,s)),$=u.YGUnwrapFloatOptional(u.YGResolveValue(e.getStyle().minDimensions[n.YGDimension.Width],s))-A,ee=u.YGUnwrapFloatOptional(u.YGResolveValue(e.getStyle().maxDimensions[n.YGDimension.Width],s))-A,ne=u.YGUnwrapFloatOptional(u.YGResolveValue(e.getStyle().minDimensions[n.YGDimension.Height],l))-N,oe=u.YGUnwrapFloatOptional(u.YGResolveValue(e.getStyle().maxDimensions[n.YGDimension.Height],l))-N,re=S?$:ne,ae=S?ee:oe,se=Z(e,n.YGFlexDirection.Row,t,s),le=Z(e,n.YGFlexDirection.Column,i,l),ue=S?se:le,de=S?le:se,ge={value:0};K(e,se,le,r,a,c,p,G,g,ge);var Ge=w!=n.YGMeasureMode.Undefined&&ge.value>ue;F&&Ge&&w==n.YGMeasureMode.AtMost&&(w=n.YGMeasureMode.Exactly);for(var ce,Ye=0,fe=0,he=0,pe=0,me=0;fe<h;he++,Ye=fe){fe=(ce=Q(e,o,v,se,ue,Ye,he)).endOfLineIndex;var Se=!g&&C==n.YGMeasureMode.Exactly,Fe=!1;w!=n.YGMeasureMode.Exactly&&(!Y(re)&&ce.sizeConsumedOnCurrentLine<re?ue=re:!Y(ae)&&ce.sizeConsumedOnCurrentLine>ae?ue=ae:(!e.getConfig().useLegacyStretchBehaviour&&(Y(ce.totalFlexGrowFactors)&&0==ce.totalFlexGrowFactors||Y(e.resolveFlexGrow())&&0==e.resolveFlexGrow())&&(ue=ce.sizeConsumedOnCurrentLine),e.getConfig().useLegacyStretchBehaviour&&e.setLayoutDidUseLegacyFlag(!0),Fe=!e.getConfig().useLegacyStretchBehaviour)),Fe||Y(ue)?ce.sizeConsumedOnCurrentLine<0&&(ce.remainingFreeSpace=-ce.sizeConsumedOnCurrentLine):ce.remainingFreeSpace=ue-ce.sizeConsumedOnCurrentLine,Se||te(e,ce,p,m,v,ue,de,se,le,Ge,C,g,G),e.setLayoutHadOverflow(e.getLayout().hadOverflow||ce.remainingFreeSpace<0),ie(e,ce,Ye,p,m,w,C,v,s,ue,de,se,g);var De=de;if(C!=n.YGMeasureMode.Undefined&&C!=n.YGMeasureMode.AtMost||(De=b(e,m,ce.crossDim+L,D,s)-L),F||C!=n.YGMeasureMode.Exactly||(ce.crossDim=de),ce.crossDim=b(e,m,ce.crossDim+L,D,s)-L,g)for(var xe=Ye;xe<fe;xe++){if(($e=e.getChild(xe)).getStyle().display!=n.YGDisplay.None)if($e.getStyle().positionType==n.YGPositionType.Absolute){var Me=$e.isLeadingPositionDefined(m);Me&&$e.setLayoutPosition(u.YGUnwrapFloatOptional($e.getLeadingPosition(m,de))+e.getLeadingBorder(m)+u.YGUnwrapFloatOptional($e.getLeadingMargin(m,se)),d.pos[m]),Me&&!Y($e.getLayout().position[d.pos[m]])||$e.setLayoutPosition(e.getLeadingBorder(m)+u.YGUnwrapFloatOptional($e.getLeadingMargin(m,se)),d.pos[m])}else{var Le=x,we=P(e,$e);if(we==n.YGAlign.Stretch&&$e.marginLeadingValue(m).unit!=n.YGUnit.Auto&&$e.marginTrailingValue(m).unit!=n.YGUnit.Auto){if(!V($e,m,de)){var Ue=$e.getLayout().measuredDimensions[d.dim[p]],Ee=$e.getStyle().aspectRatio.isUndefined()?ce.crossDim:u.YGUnwrapFloatOptional($e.getMarginForAxis(m,se))+(S?Ue/$e.getStyle().aspectRatio.getValue():Ue*$e.getStyle().aspectRatio.getValue());Ue+=u.YGUnwrapFloatOptional($e.getMarginForAxis(p,se));var Ce=n.YGMeasureMode.Exactly,Ae=n.YGMeasureMode.Exactly,Ne={value:Ce},_e={value:Ue},Pe={value:Ae},Re={value:Ee};H($e,p,ue,se,Ne,_e),H($e,m,de,se,Pe,Re),Ce=Ne.value,Ue=_e.value,Ae=Pe.value,Ee=Re.value,ye($e,Xe=S?Ue:Ee,je=S?Ee:Ue,c,Y(Xe)?n.YGMeasureMode.Undefined:n.YGMeasureMode.Exactly,Y(je)?n.YGMeasureMode.Undefined:n.YGMeasureMode.Exactly,se,le,!0,\\\\\\\"stretch\\\\\\\",G)}}else{var Oe=De-T($e,m,se);$e.marginLeadingValue(m).unit==n.YGUnit.Auto&&$e.marginTrailingValue(m).unit==n.YGUnit.Auto?Le+=u.YGFloatMax(0,Oe/2):$e.marginTrailingValue(m).unit==n.YGUnit.Auto||($e.marginLeadingValue(m).unit==n.YGUnit.Auto?Le+=u.YGFloatMax(0,Oe):we==n.YGAlign.FlexStart||(we==n.YGAlign.Center?Le+=Oe/2:Le+=Oe))}$e.setLayoutPosition($e.getLayout().position[d.pos[m]]+pe+Le,d.pos[m])}}pe+=ce.crossDim,me=u.YGFloatMax(me,ce.mainDim)}if(g&&(he>1||O(e))&&!Y(de)){var Te=de-pe,Ve=0,We=x;switch(e.getStyle().alignContent){case n.YGAlign.FlexEnd:We+=Te;break;case n.YGAlign.Center:We+=Te/2;break;case n.YGAlign.Stretch:de>pe&&(Ve=Te/he);break;case n.YGAlign.SpaceAround:de>pe?(We+=Te/(2*he),he>1&&(Ve=Te/he)):We+=Te/2;break;case n.YGAlign.SpaceBetween:de>pe&&he>1&&(Ve=Te/(he-1));break;case n.YGAlign.Auto:case n.YGAlign.FlexStart:case n.YGAlign.Baseline:}var Ie=0;for(xe=0;xe<he;xe++){var be=Ie,Be=void 0,He=0,ke=0,qe=0;for(Be=be;Be<h;Be++){if(($e=e.getChild(Be)).getStyle().display!=n.YGDisplay.None&&$e.getStyle().positionType==n.YGPositionType.Relative){if($e.getLineIndex()!=xe)break;if(W($e,m)&&(He=u.YGFloatMax(He,$e.getLayout().measuredDimensions[d.dim[m]]+u.YGUnwrapFloatOptional($e.getMarginForAxis(m,se)))),P(e,$e)==n.YGAlign.Baseline){var ze=R($e)+u.YGUnwrapFloatOptional($e.getLeadingMargin(n.YGFlexDirection.Column,se)),Je=$e.getLayout().measuredDimensions[n.YGDimension.Height]+u.YGUnwrapFloatOptional($e.getMarginForAxis(n.YGFlexDirection.Column,se))-ze;ke=u.YGFloatMax(ke,ze),qe=u.YGFloatMax(qe,Je),He=u.YGFloatMax(He,ke+qe)}}}if(Ie=Be,He+=Ve,g)for(Be=be;Be<Ie;Be++){if(($e=e.getChild(Be)).getStyle().display!=n.YGDisplay.None&&$e.getStyle().positionType==n.YGPositionType.Relative)switch(P(e,$e)){case n.YGAlign.FlexStart:$e.setLayoutPosition(We+u.YGUnwrapFloatOptional($e.getLeadingMargin(m,se)),d.pos[m]);break;case n.YGAlign.FlexEnd:$e.setLayoutPosition(We+He-u.YGUnwrapFloatOptional($e.getTrailingMargin(m,se))-$e.getLayout().measuredDimensions[d.dim[m]],d.pos[m]);break;case n.YGAlign.Center:var je=$e.getLayout().measuredDimensions[d.dim[m]];$e.setLayoutPosition(We+(He-je)/2,d.pos[m]);break;case n.YGAlign.Stretch:if($e.setLayoutPosition(We+u.YGUnwrapFloatOptional($e.getLeadingMargin(m,se)),d.pos[m]),!V($e,m,de)){var Xe=S?$e.getLayout().measuredDimensions[n.YGDimension.Width]+u.YGUnwrapFloatOptional($e.getMarginForAxis(p,se)):He;je=S?He:$e.getLayout().measuredDimensions[n.YGDimension.Height]+u.YGUnwrapFloatOptional($e.getMarginForAxis(m,se));u.YGFloatsEqual(Xe,$e.getLayout().measuredDimensions[n.YGDimension.Width])&&u.YGFloatsEqual(je,$e.getLayout().measuredDimensions[n.YGDimension.Height])||ye($e,Xe,je,c,n.YGMeasureMode.Exactly,n.YGMeasureMode.Exactly,se,le,!0,\\\\\\\"multiline-stretch\\\\\\\",G)}break;case n.YGAlign.Baseline:$e.setLayoutPosition(We+ke-R($e)+u.YGUnwrapFloatOptional($e.getLeadingPosition(n.YGFlexDirection.Column,de)),n.YGEdge.Top);break;case n.YGAlign.Auto:case n.YGAlign.SpaceBetween:case n.YGAlign.SpaceAround:}}We+=He}}if(e.setLayoutMeasuredDimension(b(e,n.YGFlexDirection.Row,t-k,s,s),n.YGDimension.Width),e.setLayoutMeasuredDimension(b(e,n.YGFlexDirection.Column,i-X,l,s),n.YGDimension.Height),w==n.YGMeasureMode.Undefined||e.getStyle().overflow!=n.YGOverflow.Scroll&&w==n.YGMeasureMode.AtMost?e.setLayoutMeasuredDimension(b(e,p,me,v,s),d.dim[p]):w==n.YGMeasureMode.AtMost&&e.getStyle().overflow==n.YGOverflow.Scroll&&e.setLayoutMeasuredDimension(u.YGFloatMax(u.YGFloatMin(ue+M,u.YGUnwrapFloatOptional(I(e,p,me,v))),M),d.dim[p]),C==n.YGMeasureMode.Undefined||e.getStyle().overflow!=n.YGOverflow.Scroll&&C==n.YGMeasureMode.AtMost?e.setLayoutMeasuredDimension(b(e,m,pe+L,D,s),d.dim[m]):C==n.YGMeasureMode.AtMost&&e.getStyle().overflow==n.YGOverflow.Scroll&&e.setLayoutMeasuredDimension(u.YGFloatMax(u.YGFloatMin(de+L,u.YGUnwrapFloatOptional(I(e,m,pe+L,D))),L),d.dim[m]),g&&e.getStyle().flexWrap==n.YGWrap.WrapReverse)for(xe=0;xe<h;xe++){($e=U(e,xe)).getStyle().positionType==n.YGPositionType.Relative&&$e.setLayoutPosition(e.getLayout().measuredDimensions[d.dim[m]]-$e.getLayout().position[d.pos[m]]-$e.getLayout().measuredDimensions[d.dim[m]],d.pos[m])}if(g){var Ze=e.getChildren();for(xe=0;xe<Ze.length;++xe){($e=Ze[xe]).getStyle().positionType==n.YGPositionType.Absolute&&q(e,$e,se,S?w:C,le,c,G)}var Ke=p==n.YGFlexDirection.RowReverse||p==n.YGFlexDirection.ColumnReverse,Qe=m==n.YGFlexDirection.RowReverse||m==n.YGFlexDirection.ColumnReverse;if(Ke||Qe)for(xe=0;xe<h;xe++){var $e;($e=e.getChild(xe)).getStyle().display!=n.YGDisplay.None&&(Ke&&B(e,$e,p),Qe&&B(e,$e,m))}}}}else J(e,t,i,r,a,s,l)}else z(e,t,i,r,a,s,l)}t.YGNodePrintInternal=A,t.YGNodePrint=N,t.YGNodePaddingAndBorderForAxis=_,t.YGNodeAlignItem=P,t.YGBaseline=R,t.YGIsBaselineLayout=O,t.YGNodeDimWithMargin=T,t.YGNodeIsStyleDimDefined=V,t.YGNodeIsLayoutDimDefined=W,t.YGNodeBoundAxisWithinMinAndMax=I,t.YGNodeBoundAxis=b,t.YGNodeSetChildTrailingPosition=B,t.YGConstrainMaxSizeForMode=H,t.YGNodeComputeFlexBasisForChild=k,t.YGNodeAbsoluteLayoutChild=q,t.YGNodeWithMeasureFuncSetMeasuredDimensions=z,t.YGNodeEmptyContainerSetMeasuredDimensions=J,t.YGNodeFixedSizeSetMeasuredDimensions=j,t.YGZeroOutLayoutRecursivly=X,t.YGNodeCalculateAvailableInnerDim=Z,t.YGNodeComputeFlexBasisForChildren=K,t.YGCalculateCollectFlexItemsRowValues=Q,t.YGDistributeFreeSpaceSecondPass=$,t.YGDistributeFreeSpaceFirstPass=ee,t.YGResolveFlexibleLength=te,t.YGJustifyMainAxis=ie,t.YGNodelayoutImpl=ne;var oe=0,re=!1,ae=!1,se=!1,le=\\\\\\\"                                                            \\\\\\\";function ue(e){var t=le.length;return e>t?le:le.substr(t-e)}function de(e,t){return e>=n.YGMeasureModeCount?\\\\\\\"\\\\\\\":t?[\\\\\\\"LAY_UNDEFINED\\\\\\\",\\\\\\\"LAY_EXACTLY\\\\\\\",\\\\\\\"LAY_AT_\\\\\\\",\\\\\\\"MOST\\\\\\\"][e]:[\\\\\\\"UNDEFINED\\\\\\\",\\\\\\\"EXACTLY\\\\\\\",\\\\\\\"AT_MOST\\\\\\\"][e]}function ge(e,t,i){return e==n.YGMeasureMode.Exactly&&u.YGFloatsEqual(t,i)}function Ge(e,t,i,o){return e==n.YGMeasureMode.AtMost&&i==n.YGMeasureMode.Undefined&&(t>=o||u.YGFloatsEqual(t,o))}function ce(e,t,i,o,r){return i==n.YGMeasureMode.AtMost&&e==n.YGMeasureMode.AtMost&&!Y(o)&&!Y(t)&&!Y(r)&&o>t&&(r<=t||u.YGFloatsEqual(t,r))}function Ye(e,i,n,o){var r=e*i,a=r%1;return u.YGFloatsEqual(a,0)?r-=a:u.YGFloatsEqual(a,1)?r=r-a+1:n?r=r-a+1:o?r-=a:r=r-a+(!Y(a)&&(a>.5||u.YGFloatsEqual(a,.5))?1:0),Y(r)||Y(i)?t.YGUndefined:r/i}function fe(e,t,i,n,o,r,a,s,l,d,g,G,c){if(!Y(d)&&d<0||!Y(l)&&l<0)return!1;var f=null!=c&&0!=c.pointScaleFactor,y=f?Ye(t,c.pointScaleFactor,!1,!1):t,h=f?Ye(n,c.pointScaleFactor,!1,!1):n,p=f?Ye(r,c.pointScaleFactor,!1,!1):r,m=f?Ye(s,c.pointScaleFactor,!1,!1):s,S=o==e&&u.YGFloatsEqual(p,y),F=a==i&&u.YGFloatsEqual(m,h),v=S||ge(e,t-g,l)||Ge(e,t-g,o,l)||ce(e,t-g,o,r,l),D=F||ge(i,n-G,d)||Ge(i,n-G,a,d)||ce(i,n-G,a,s,d);return v&&D}function ye(e,t,i,o,r,a,s,l,g,G,c){var Y=e.getLayout();oe++;var f=e.isDirty()&&Y.generationCount!=C||Y.lastOwnerDirection!=o;f&&(Y.nextCachedMeasurementsIndex=0,Y.cachedLayout.widthMeasureMode=n.YGMeasureModeCount-1,Y.cachedLayout.heightMeasureMode=n.YGMeasureModeCount-1,Y.cachedLayout.computedWidth=-1,Y.cachedLayout.computedHeight=-1);var y=null;if(null!=e.getMeasure()){var h=u.YGUnwrapFloatOptional(e.getMarginForAxis(n.YGFlexDirection.Row,s)),p=u.YGUnwrapFloatOptional(e.getMarginForAxis(n.YGFlexDirection.Column,s));if(fe(r,t,a,i,Y.cachedLayout.widthMeasureMode,Y.cachedLayout.availableWidth,Y.cachedLayout.heightMeasureMode,Y.cachedLayout.availableHeight,Y.cachedLayout.computedWidth,Y.cachedLayout.computedHeight,h,p,c))y=Y.cachedLayout;else for(var m=0;m<Y.nextCachedMeasurementsIndex;m++)if(fe(r,t,a,i,Y.cachedMeasurements[m].widthMeasureMode,Y.cachedMeasurements[m].availableWidth,Y.cachedMeasurements[m].heightMeasureMode,Y.cachedMeasurements[m].availableHeight,Y.cachedMeasurements[m].computedWidth,Y.cachedMeasurements[m].computedHeight,h,p,c)){y=Y.cachedMeasurements[m];break}}else if(g)u.YGFloatsEqual(Y.cachedLayout.availableWidth,t)&&u.YGFloatsEqual(Y.cachedLayout.availableHeight,i)&&Y.cachedLayout.widthMeasureMode==r&&Y.cachedLayout.heightMeasureMode==a&&(y=Y.cachedLayout);else for(m=0;m<Y.nextCachedMeasurementsIndex;m++)if(u.YGFloatsEqual(Y.cachedMeasurements[m].availableWidth,t)&&u.YGFloatsEqual(Y.cachedMeasurements[m].availableHeight,i)&&Y.cachedMeasurements[m].widthMeasureMode==r&&Y.cachedMeasurements[m].heightMeasureMode==a){y=Y.cachedMeasurements[m];break}if(f||null==y){if(ae&&(Fe(e,n.YGLogLevel.Verbose,\\\\\\\"%s%d.{%s\\\\\\\",ue(oe),oe,f?\\\\\\\"*\\\\\\\":\\\\\\\"\\\\\\\"),null!=e.getPrintFunc()&&e.getPrintFunc()(e),Fe(e,n.YGLogLevel.Verbose,\\\\\\\"wm: %s, hm: %s, aw: %f ah: %f %s\\\\\\\\n\\\\\\\",de(r,g),de(a,g),t,i,G)),ne(e,t,i,o,r,a,s,l,g,c),ae&&(Fe(e,n.YGLogLevel.Verbose,\\\\\\\"%s%d.}%s\\\\\\\",ue(oe),oe,f?\\\\\\\"*\\\\\\\":\\\\\\\"\\\\\\\"),null!=e.getPrintFunc()&&e.getPrintFunc()(e),Fe(e,n.YGLogLevel.Verbose,\\\\\\\"wm: %s, hm: %s, d: (%f, %f) %s\\\\\\\\n\\\\\\\",de(r,g),de(a,g),Y.measuredDimensions[n.YGDimension.Width],Y.measuredDimensions[n.YGDimension.Height],G)),Y.lastOwnerDirection=o,null==y){Y.nextCachedMeasurementsIndex==d.YG_MAX_CACHED_RESULT_COUNT&&(ae&&Fe(e,n.YGLogLevel.Verbose,\\\\\\\"Out of cache entries!\\\\\\\\n\\\\\\\"),Y.nextCachedMeasurementsIndex=0);var S=void 0;g?S=Y.cachedLayout:(S=Y.cachedMeasurements[Y.nextCachedMeasurementsIndex],Y.nextCachedMeasurementsIndex++),S.availableWidth=t,S.availableHeight=i,S.widthMeasureMode=r,S.heightMeasureMode=a,S.computedWidth=Y.measuredDimensions[n.YGDimension.Width],S.computedHeight=Y.measuredDimensions[n.YGDimension.Height]}}else Y.measuredDimensions[n.YGDimension.Width]=y.computedWidth,Y.measuredDimensions[n.YGDimension.Height]=y.computedHeight,ae&&se&&(Fe(e,n.YGLogLevel.Verbose,\\\\\\\"%s%d.{[skipped] \\\\\\\",ue(oe),oe),null!=e.getPrintFunc()&&e.getPrintFunc()(e),Fe(e,n.YGLogLevel.Verbose,\\\\\\\"wm: %s, hm: %s, aw: %f ah: %f => d: (%f, %f) %s\\\\\\\\n\\\\\\\",de(r,g),de(a,g),t,i,y.computedWidth,y.computedHeight,G));return g&&(e.setLayoutDimension(e.getLayout().measuredDimensions[n.YGDimension.Width],n.YGDimension.Width),e.setLayoutDimension(e.getLayout().measuredDimensions[n.YGDimension.Height],n.YGDimension.Height),e.setHasNewLayout(!0),e.setDirty(!1)),oe--,Y.generationCount=C,f||null==y}function he(e,t){return e%t}function pe(e,t,i,o){if(0!=t){var r=e.getLayout().position[n.YGEdge.Left],a=e.getLayout().position[n.YGEdge.Top],s=e.getLayout().dimensions[n.YGDimension.Width],l=e.getLayout().dimensions[n.YGDimension.Height],d=i+r,g=o+a,G=d+s,c=g+l,Y=e.getNodeType()==n.YGNodeType.Text;e.setLayoutPosition(Ye(r,t,!1,Y),n.YGEdge.Left),e.setLayoutPosition(Ye(a,t,!1,Y),n.YGEdge.Top);var f=!u.YGFloatsEqual(he(s*t,1),0)&&!u.YGFloatsEqual(he(s*t,1),1),y=!u.YGFloatsEqual(he(l*t,1),0)&&!u.YGFloatsEqual(he(l*t,1),1);e.setLayoutDimension(Ye(G,t,Y&&f,Y&&!f)-Ye(d,t,!1,Y),n.YGDimension.Width),e.setLayoutDimension(Ye(c,t,Y&&y,Y&&!y)-Ye(g,t,!1,Y),n.YGDimension.Height);for(var h=E(e),p=0;p<h;p++)pe(U(e,p),t,d,g)}}function me(e,t,i,o){for(var r=[],a=4;a<arguments.length;a++)r[a-4]=arguments[a];var s=null!=e?e:p();if(s.logger(s,t,i,o,r),i==n.YGLogLevel.Fatal)throw new Error(\\\\\\\"Abort Yoga\\\\\\\")}function Se(e,t,i){for(var n=[],o=3;o<arguments.length;o++)n[o-3]=arguments[o];me(e,null,t,i,n)}function Fe(e,t,i){for(var n=[],o=3;o<arguments.length;o++)n[o-3]=arguments[o];me(null==e?null:e.getConfig(),e,t,i,n)}function ve(e,t,i){t||Fe(e,n.YGLogLevel.Fatal,\\\\\\\"%s\\\\\\\\n\\\\\\\",i)}function De(e,t,i){t||Se(e,n.YGLogLevel.Fatal,\\\\\\\"%s\\\\\\\\n\\\\\\\",i)}function xe(e,t){return e.experimentalFeatures[t]}function Me(e,t){for(var i=0;i<e.length;++i){var n=e[i];t(n),Me(n.getChildren(),t)}}t.YGSpacer=ue,t.YGMeasureModeName=de,t.YGMeasureModeSizeIsExactAndMatchesOldMeasuredSize=ge,t.YGMeasureModeOldSizeIsUnspecifiedAndStillFits=Ge,t.YGMeasureModeNewMeasureSizeIsStricterAndStillValid=ce,t.YGRoundValueToPixelGrid=Ye,t.YGNodeCanUseCachedMeasurement=fe,t.YGLayoutNodeInternal=ye,t.YGConfigSetPointScaleFactor=function(e,t){De(e,t>=0,\\\\\\\"Scale factor should not be less than zero\\\\\\\"),e.pointScaleFactor=0==t?0:t},t.YGRoundToPixelGrid=pe,t.YGNodeCalculateLayout=function(e,i,o,r){C++,e.resolveDimension();var a=t.YGUndefined,s=n.YGMeasureMode.Undefined;V(e,n.YGFlexDirection.Row,i)?(a=u.YGUnwrapFloatOptional(u.YGResolveValue(e.getResolvedDimension(d.dim[n.YGFlexDirection.Row]),i).add(e.getMarginForAxis(n.YGFlexDirection.Row,i))),s=n.YGMeasureMode.Exactly):u.YGResolveValue(e.getStyle().maxDimensions[n.YGDimension.Width],i).isUndefined()?s=Y(a=i)?n.YGMeasureMode.Undefined:n.YGMeasureMode.Exactly:(a=u.YGUnwrapFloatOptional(u.YGResolveValue(e.getStyle().maxDimensions[n.YGDimension.Width],i)),s=n.YGMeasureMode.AtMost);var l=t.YGUndefined,g=n.YGMeasureMode.Undefined;if(V(e,n.YGFlexDirection.Column,o)?(l=u.YGUnwrapFloatOptional(u.YGResolveValue(e.getResolvedDimension(d.dim[n.YGFlexDirection.Column]),o).add(e.getMarginForAxis(n.YGFlexDirection.Column,i))),g=n.YGMeasureMode.Exactly):u.YGResolveValue(e.getStyle().maxDimensions[n.YGDimension.Height],o).isUndefined()?g=Y(l=o)?n.YGMeasureMode.Undefined:n.YGMeasureMode.Exactly:(l=u.YGUnwrapFloatOptional(u.YGResolveValue(e.getStyle().maxDimensions[n.YGDimension.Height],o)),g=n.YGMeasureMode.AtMost),ye(e,a,l,r,s,g,i,o,!0,\\\\\\\"initial\\\\\\\",e.getConfig())&&(e.setPosition(e.getLayout().direction,i,o,i),pe(e,e.getConfig().pointScaleFactor,0,0),re&&(n.YGPrintOptions.Layout,n.YGPrintOptions.Children,n.YGPrintOptions.Style)),e.getConfig().shouldDiffLayoutWithoutLegacyStretchBehaviour&&e.didUseLegacyFlag()){console.log(\\\\\\\"legacy config\\\\\\\");var G=F(e);G.resolveDimension(),G.markDirtyAndPropogateDownwards(),C++,G.setAndPropogateUseLegacyFlag(!1),ye(G,a,l,r,s,g,i,o,!0,\\\\\\\"initial\\\\\\\",G.getConfig())&&(G.setPosition(G.getLayout().direction,i,o,i),pe(G,G.getConfig().pointScaleFactor,0,0),e.setLayoutDoesLegacyFlagAffectsLayout(!G.isLayoutTreeEqualToNode(e)),re&&(n.YGPrintOptions.Layout,n.YGPrintOptions.Children,n.YGPrintOptions.Style)),D(G),x(G)}},t.YGConfigSetLogger=function(e,t){e.logger=null!=t?t:c},t.YGConfigSetShouldDiffLayoutWithoutLegacyStretchBehaviour=function(e,t){e.shouldDiffLayoutWithoutLegacyStretchBehaviour=t},t.YGVLog=me,t.YGLogWithConfig=Se,t.YGLog=Fe,t.YGAssert=function(e,t){e||Fe(null,n.YGLogLevel.Fatal,\\\\\\\"%s\\\\\\\\n\\\\\\\",t)},t.YGAssertWithNode=ve,t.YGAssertWithConfig=De,t.YGConfigSetExperimentalFeatureEnabled=function(e,t,i){e.experimentalFeatures[t]=i},t.YGConfigIsExperimentalFeatureEnabled=xe,t.YGConfigSetUseWebDefaults=function(e,t){e.useWebDefaults=t},t.YGConfigSetUseLegacyStretchBehaviour=function(e,t){e.useLegacyStretchBehaviour=t},t.YGConfigGetUseWebDefaults=function(e){return e.useWebDefaults},t.YGConfigSetContext=function(e,t){e.context=t},t.YGConfigGetContext=function(e){return e.context},t.YGConfigSetCloneNodeFunc=function(e,t){e.cloneNodeCallback=t},t.YGTraverseChildrenPreOrder=Me,t.YGTraversePreOrder=function(e,t){e&&(t(e),Me(e.getChildren(),t))}},function(e,t,i){\\\\\\\"use strict\\\\\\\";t.__esModule=!0;var n=i(1),o=function(){function e(t){if(void 0===t&&(t=void 0),t instanceof e)return this.value_=t.getValue(),void(this.isUndefined_=t.isUndefined());n.YGFloatIsUndefined(t)?(this.value_=0,this.isUndefined_=!0):(this.value_=t,this.isUndefined_=!1)}return e.prototype.clone=function(){return new e(this.isUndefined_?void 0:this.value_)},e.prototype.getValue=function(){if(this.isUndefined_)throw\\\\\\\"Tried to get value of an undefined YGFloatOptional\\\\\\\";return this.value_},e.prototype.setValue=function(e){this.value_=e,this.isUndefined_=!1},e.prototype.isUndefined=function(){return this.isUndefined_},e.prototype.add=function(t){return this.isUndefined_||t.isUndefined()?new e:new e(this.value_+t.getValue())},e.prototype.isBigger=function(e){return!this.isUndefined_&&!e.isUndefined()&&this.value_>e.getValue()},e.prototype.isSmaller=function(e){return!this.isUndefined_&&!e.isUndefined()&&this.value_<e.getValue()},e.prototype.isBiggerEqual=function(e){return!!this.isEqual(e)||this.isBigger(e)},e.prototype.isSmallerEqual=function(e){return!!this.isEqual(e)||this.isSmaller(e)},e.prototype.isEqual=function(e){return this.isUndefined_==e.isUndefined()&&(!!this.isUndefined_||this.value_==e.getValue())},e.prototype.isDiff=function(e){return!this.isEqual(e)},e.prototype.isEqualValue=function(e){return n.YGFloatIsUndefined(e)==this.isUndefined_&&(this.isUndefined_||e==this.value_)},e.prototype.isDiffValue=function(e){return!this.isEqualValue(e)},e}();t.YGFloatOptional=o},function(e,t,i){\\\\\\\"use strict\\\\\\\";t.__esModule=!0;var n=i(0),o=i(2),r=i(1),a=function(){return function(){this.itemsOnLine=0,this.sizeConsumedOnCurrentLine=0,this.totalFlexGrowFactors=0,this.totalFlexShrinkScaledFactors=0,this.endOfLineIndex=0,this.relativeChildren=[],this.remainingFreeSpace=0,this.mainDim=0,this.crossDim=0}}();function s(e,t){return e.unit==t.unit&&(!!(e.unit==n.YGUnit.Undefined||r.YGFloatIsUndefined(e.value)&&r.YGFloatIsUndefined(t.value))||Math.abs(e.value-t.value)<1e-4)}function l(e,t){return r.YGFloatIsUndefined(e)||r.YGFloatIsUndefined(t)?r.YGFloatIsUndefined(e)&&r.YGFloatIsUndefined(t):Math.abs(e-t)<1e-4}function u(e,t){switch(e.unit){case n.YGUnit.Undefined:case n.YGUnit.Auto:return new o.YGFloatOptional;case n.YGUnit.Point:return new o.YGFloatOptional(e.value);case n.YGUnit.Percent:return new o.YGFloatOptional(e.value*t*.01)}return new o.YGFloatOptional}function d(e){return e==n.YGFlexDirection.Column||e==n.YGFlexDirection.ColumnReverse}function g(e,t){if(t==n.YGDirection.RTL){if(e==n.YGFlexDirection.Row)return n.YGFlexDirection.RowReverse;if(e==n.YGFlexDirection.RowReverse)return n.YGFlexDirection.Row}return e}t.YGCollectFlexItemsRowValues=a,t.YGValueEqual=s,t.YGFloatsEqual=l,t.YGFloatMax=function(e,t){return r.YGFloatIsUndefined(e)||r.YGFloatIsUndefined(t)?r.YGFloatIsUndefined(e)?t:e:Math.max(e,t)},t.YGFloatOptionalMax=function(e,t){return e.isUndefined()||t.isUndefined()?e.isUndefined()?t:e:e.getValue()>t.getValue()?e:t},t.YGFloatMin=function(e,t){return r.YGFloatIsUndefined(e)||r.YGFloatIsUndefined(t)?r.YGFloatIsUndefined(e)?t:e:Math.min(e,t)},t.YGFloatArrayEqual=function(e,t){for(var i=!0,n=0;n<e.length&&i;++n)i=l(e[n],t[n]);return i},t.YGValueArrayEqual=function(e,t){for(var i=!0,n=0;n<e.length&&i;++n)i=s(e[n],t[n]);return i},t.YGFloatSanitize=function(e){return r.YGFloatIsUndefined(e)?0:e},t.YGUnwrapFloatOptional=function(e){return e.isUndefined()?r.YGUndefined:e.getValue()},t.YGFlexDirectionCross=function(e,t){return d(e)?g(n.YGFlexDirection.Row,t):n.YGFlexDirection.Column},t.YGFlexDirectionIsRow=function(e){return e==n.YGFlexDirection.Row||e==n.YGFlexDirection.RowReverse},t.YGResolveValue=u,t.YGFlexDirectionIsColumn=d,t.YGResolveFlexDirection=g,t.YGResolveValueMargin=function(e,t){return e.unit==n.YGUnit.Auto?new o.YGFloatOptional(0):u(e,t)},t.cloneYGValueArray=function(e){for(var t=new Array(e.length),i=0;i<e.length;i++)t[i]=e[i].clone();return t}},function(e,t,i){\\\\\\\"use strict\\\\\\\";t.__esModule=!0;var n=i(0),o=i(1),r=function(){function e(){this.availableWidth=0,this.availableHeight=0,this.widthMeasureMode=n.YGMeasureMode.AtMost,this.heightMeasureMode=n.YGMeasureMode.AtMost,this.computedWidth=-1,this.computedHeight=-1}return e.prototype.isEqual=function(e){var t=this.widthMeasureMode==e.widthMeasureMode&&this.heightMeasureMode==e.heightMeasureMode;return o.YGFloatIsUndefined(this.availableWidth)&&o.YGFloatIsUndefined(e.availableWidth)||(t=t&&this.availableWidth==e.availableWidth),o.YGFloatIsUndefined(this.availableHeight)&&o.YGFloatIsUndefined(e.availableHeight)||(t=t&&this.availableHeight==e.availableHeight),o.YGFloatIsUndefined(this.computedWidth)&&o.YGFloatIsUndefined(e.computedWidth)||(t=t&&this.computedWidth==e.computedWidth),o.YGFloatIsUndefined(this.computedHeight)&&o.YGFloatIsUndefined(e.computedHeight)||(t=t&&this.computedHeight==e.computedHeight),t},e.prototype.clone=function(){var t=new e;return t.availableWidth=this.availableWidth,t.availableHeight=this.availableHeight,t.widthMeasureMode=this.widthMeasureMode,t.heightMeasureMode=this.heightMeasureMode,t.computedWidth=this.computedWidth,t.computedHeight=this.computedHeight,t},e}();t.YGCachedMeasurement=r,t.leading=[n.YGEdge.Top,n.YGEdge.Bottom,n.YGEdge.Left,n.YGEdge.Right],t.trailing=[n.YGEdge.Bottom,n.YGEdge.Top,n.YGEdge.Right,n.YGEdge.Left],t.pos=[n.YGEdge.Top,n.YGEdge.Bottom,n.YGEdge.Left,n.YGEdge.Right],t.dim=[n.YGDimension.Height,n.YGDimension.Height,n.YGDimension.Width,n.YGDimension.Width],t.YG_MAX_CACHED_RESULT_COUNT=16,t.kDefaultFlexGrow=0,t.kDefaultFlexShrink=0,t.kWebDefaultFlexShrink=1},function(e,t,i){\\\\\\\"use strict\\\\\\\";t.__esModule=!0;var n=function(){return[!1,!1,!1]},o=function(){return function(e){this.cloneNodeCallback=null,this.experimentalFeatures=n(),this.useWebDefaults=!1,this.useLegacyStretchBehaviour=!1,this.shouldDiffLayoutWithoutLegacyStretchBehaviour=!1,this.pointScaleFactor=1,this.logger=e,this.context=null}}();t.YGConfig=o},function(e,t,i){\\\\\\\"use strict\\\\\\\";t.__esModule=!0;var n=i(0),o=i(2),r=i(4),a=i(3),s=i(1),l=function(){return[void 0,void 0]},u=16;function d(e){for(var t=[],i=0;i<e;i++)t.push(new r.YGCachedMeasurement);return t}var g=function(){function e(){this.dimensions=l(),this.direction=n.YGDirection.Inherit,this.computedFlexBasisGeneration=0,this.computedFlexBasis=new o.YGFloatOptional,this.hadOverflow=!1,this.generationCount=0,this.lastOwnerDirection=n.YGDirection.RTL,this.nextCachedMeasurementsIndex=0,this.measuredDimensions=l(),this.cachedLayout=new r.YGCachedMeasurement,this.didUseLegacyFlag=!1,this.doesLegacyStretchFlagAffectsLayout=!1,this.position=[void 0,void 0,void 0,void 0],this.margin=[void 0,void 0,void 0,void 0,void 0,void 0],this.border=[void 0,void 0,void 0,void 0,void 0,void 0],this.padding=[void 0,void 0,void 0,void 0,void 0,void 0],this.cachedMeasurements=d(u)}return e.prototype.equal=function(e){for(var t=a.YGFloatArrayEqual(this.position,e.position)&&a.YGFloatArrayEqual(this.dimensions,e.dimensions)&&a.YGFloatArrayEqual(this.margin,e.margin)&&a.YGFloatArrayEqual(this.border,e.border)&&a.YGFloatArrayEqual(this.padding,e.padding)&&this.direction==e.direction&&this.hadOverflow==e.hadOverflow&&this.lastOwnerDirection==e.lastOwnerDirection&&this.nextCachedMeasurementsIndex==e.nextCachedMeasurementsIndex&&this.cachedLayout==e.cachedLayout&&this.computedFlexBasis==e.computedFlexBasis,i=0;i<u&&t;++i)t=t&&this.cachedMeasurements[i]==e.cachedMeasurements[i];return s.YGFloatIsUndefined(this.measuredDimensions[0])&&s.YGFloatIsUndefined(e.measuredDimensions[0])||(t=t&&this.measuredDimensions[0]==e.measuredDimensions[0]),s.YGFloatIsUndefined(this.measuredDimensions[1])&&s.YGFloatIsUndefined(e.measuredDimensions[1])||(t=t&&this.measuredDimensions[1]==e.measuredDimensions[1]),t},e.prototype.diff=function(e){return!this.equal(e)},e.prototype.clean=function(){this.dimensions=l(),this.direction=n.YGDirection.Inherit,this.computedFlexBasisGeneration=0,this.computedFlexBasis=new o.YGFloatOptional,this.hadOverflow=!1,this.generationCount=0,this.lastOwnerDirection=n.YGDirection.RTL,this.nextCachedMeasurementsIndex=0,this.measuredDimensions=l(),this.cachedLayout=new r.YGCachedMeasurement,this.didUseLegacyFlag=!1,this.doesLegacyStretchFlagAffectsLayout=!1,this.position=[void 0,void 0,void 0,void 0],this.margin=[void 0,void 0,void 0,void 0,void 0,void 0],this.border=[void 0,void 0,void 0,void 0,void 0,void 0],this.padding=[void 0,void 0,void 0,void 0,void 0,void 0],this.cachedMeasurements=d(u)},e.prototype.clone=function(){var t=new e;return t.dimensions=[this.dimensions[0],this.dimensions[1]],t.direction=this.direction,t.computedFlexBasisGeneration=this.computedFlexBasisGeneration,t.computedFlexBasis=this.computedFlexBasis.clone(),t.hadOverflow=this.hadOverflow,t.generationCount=this.generationCount,t.lastOwnerDirection=this.lastOwnerDirection,t.nextCachedMeasurementsIndex=this.nextCachedMeasurementsIndex,t.measuredDimensions=[this.measuredDimensions[0],this.measuredDimensions[1]],t.cachedLayout=this.cachedLayout.clone(),t.didUseLegacyFlag=this.didUseLegacyFlag,t.doesLegacyStretchFlagAffectsLayout=this.doesLegacyStretchFlagAffectsLayout,t.position=[this.position[0],this.position[1],this.position[2],this.position[3]],t.margin=[this.margin[0],this.margin[1],this.margin[2],this.margin[3],this.margin[4],this.margin[5]],t.border=[this.border[0],this.border[1],this.border[2],this.border[3],this.border[4],this.border[5]],t.padding=[this.padding[0],this.padding[1],this.padding[2],this.padding[3],this.padding[4],this.padding[5]],t.cachedMeasurements=d(u),t},e}();t.YGLayout=g},function(e,t,i){\\\\\\\"use strict\\\\\\\";t.__esModule=!0;var n=function(){function e(e,t){this.value=e,this.unit=t}return e.prototype.clone=function(){return new e(this.value,this.unit)},e}();t.YGValue=n},function(e,t,i){\\\\\\\"use strict\\\\\\\";t.__esModule=!0;var n=i(0),o=i(1),r=i(3);t.ALIGN_AUTO=n.YGAlign.Auto,t.ALIGN_FLEX_START=n.YGAlign.FlexStart,t.ALIGN_CENTER=n.YGAlign.Center,t.ALIGN_FLEX_END=n.YGAlign.FlexEnd,t.ALIGN_STRETCH=n.YGAlign.Stretch,t.ALIGN_BASELINE=n.YGAlign.Baseline,t.ALIGN_SPACE_BETWEEN=n.YGAlign.SpaceBetween,t.ALIGN_SPACE_AROUND=n.YGAlign.SpaceAround,t.DIMENSION_WIDTH=n.YGDimension.Width,t.DIMENSION_HEIGHT=n.YGDimension.Height,t.DIRECTION_INHERIT=n.YGDirection.Inherit,t.DIRECTION_LTR=n.YGDirection.LTR,t.DIRECTION_RTL=n.YGDirection.RTL,t.DISPLAY_FLEX=n.YGDisplay.Flex,t.DISPLAY_NONE=n.YGDisplay.None,t.EDGE_LEFT=n.YGEdge.Left,t.EDGE_TOP=n.YGEdge.Top,t.EDGE_RIGHT=n.YGEdge.Right,t.EDGE_BOTTOM=n.YGEdge.Bottom,t.EDGE_START=n.YGEdge.Start,t.EDGE_END=n.YGEdge.End,t.EDGE_HORIZONTAL=n.YGEdge.Horizontal,t.EDGE_VERTICAL=n.YGEdge.Vertical,t.EDGE_ALL=n.YGEdge.All,t.EXPERIMENTALFEATURE_WEBFLEXBASIS=n.YGExperimentalFeature.WebFlexBasis,t.FLEX_DIRECTION_COLUMN=n.YGFlexDirection.Column,t.FLEX_DIRECTION_COLUMN_REVERSE=n.YGFlexDirection.ColumnReverse,t.FLEX_DIRECTION_ROW=n.YGFlexDirection.Row,t.FLEX_DIRECTION_ROW_REVERSE=n.YGFlexDirection.RowReverse,t.JUSTIFY_FLEX_START=n.YGJustify.FlexStart,t.JUSTIFY_CENTER=n.YGJustify.Center,t.JUSTIFY_FLEX_END=n.YGJustify.FlexEnd,t.JUSTIFY_SPACE_BETWEEN=n.YGJustify.SpaceBetween,t.JUSTIFY_SPACE_AROUND=n.YGJustify.SpaceAround,t.JUSTIFY_SPACE_EVENLY=n.YGJustify.SpaceEvenly,t.LOGLEVEL_ERROR=n.YGLogLevel.Error,t.LOGLEVEL_WARN=n.YGLogLevel.Warn,t.LOGLEVEL_INFO=n.YGLogLevel.Info,t.LOGLEVEL_DEBUG=n.YGLogLevel.Debug,t.LOGLEVEL_VERBOSE=n.YGLogLevel.Verbose,t.LOGLEVEL_FATAL=n.YGLogLevel.Fatal,t.MEASURE_MODE_UNDEFINED=n.YGMeasureMode.Undefined,t.MEASURE_MODE_EXACTLY=n.YGMeasureMode.Exactly,t.MEASURE_MODE_AT_MOST=n.YGMeasureMode.AtMost,t.NODE_TYPE_DEFAULT=n.YGNodeType.Default,t.NODE_TYPE_TEXT=n.YGNodeType.Text,t.OVERFLOW_VISIBLE=n.YGOverflow.Visible,t.OVERFLOW_HIDDEN=n.YGOverflow.Hidden,t.OVERFLOW_SCROLL=n.YGOverflow.Scroll,t.POSITION_TYPE_RELATIVE=n.YGPositionType.Relative,t.POSITION_TYPE_ABSOLUTE=n.YGPositionType.Absolute,t.UNIT_UNDEFINED=n.YGUnit.Undefined,t.UNIT_POINT=n.YGUnit.Point,t.UNIT_PERCENT=n.YGUnit.Percent,t.UNIT_AUTO=n.YGUnit.Auto,t.WRAP_NO_WRAP=n.YGWrap.NoWrap,t.WRAP_WRAP=n.YGWrap.Wrap,t.WRAP_WRAP_REVERSE=n.YGWrap.WrapReverse,t.UNDEFINED=void 0;var a=function(){return function(){}}();t.Layout=a;var s=function(){function e(e,t){e?(this.width=e,this.height=t):(this.width=0,this.height=0)}return e.fromJS=function(t){return new e(t.width,t.height)},e}();t.Size=s;var l=function(){return function(e,t){e?(this.unit=e,this.value=t):(this.unit=n.YGUnit.Undefined,this.value=0)}}();t.Value=l;var u=function(){function e(){this.config=o.YGConfigNew()}return e.create=function(){return new e},e.prototype.free=function(){o.YGConfigFree(this.config)},e.prototype.setExperimentalFeatureEnabled=function(e,t){o.YGConfigSetExperimentalFeatureEnabled(this.config,e,t)},e.prototype.setPointScaleFactor=function(e){o.YGConfigSetPointScaleFactor(this.config,e)},e.prototype.isExperimentalFeatureEnabled=function(e){o.YGConfigIsExperimentalFeatureEnabled(this.config,e)},e}();function d(e){return o.YGNodeGetContext(e)}function g(e){return new l(e.unit,e.value)}t.Config=u;var G=function(){function e(e){this.node=e?o.YGNodeNewWithConfig(e.config):o.YGNodeNew(),o.YGNodeSetContext(this.node,this)}return e.create=function(t){return t?new e(t):new e},e.createDefault=function(){return new e(void 0)},e.createWithConfig=function(t){return new e(t)},e.prototype.calculateLayout=function(e,t,i){o.YGNodeCalculateLayout(this.node,e,t,i)},e.prototype.copyStyle=function(e){o.YGNodeCopyStyle(this.node,e)},e.prototype.free=function(){o.YGNodeFree(this.node)},e.prototype.freeRecursive=function(){o.YGNodeFreeRecursive(this.node)},e.prototype.getAlignContent=function(){return o.YGNodeStyleGetAlignContent(this.node)},e.prototype.getAlignItems=function(){return o.YGNodeStyleGetAlignItems(this.node)},e.prototype.getAlignSelf=function(){return o.YGNodeStyleGetAlignSelf(this.node)},e.prototype.getAspectRatio=function(){return o.YGNodeStyleGetAspectRatio(this.node)},e.prototype.getBorder=function(e){return o.YGNodeStyleGetBorder(this.node,e)},e.prototype.getChild=function(e){return d(o.YGNodeGetChild(this.node,e))},e.prototype.getChildCount=function(){return o.YGNodeGetChildCount(this.node)},e.prototype.getComputedBorder=function(e){return o.YGNodeLayoutGetBorder(this.node,e)},e.prototype.getComputedBottom=function(){return o.YGNodeLayoutGetBottom(this.node)},e.prototype.getComputedHeight=function(){return r.YGFloatSanitize(o.YGNodeLayoutGetHeight(this.node))},e.prototype.getComputedLayout=function(){var e=new a;return e.left=o.YGNodeLayoutGetLeft(this.node),e.right=o.YGNodeLayoutGetRight(this.node),e.top=o.YGNodeLayoutGetTop(this.node),e.bottom=o.YGNodeLayoutGetBottom(this.node),e.width=o.YGNodeLayoutGetWidth(this.node),e.height=o.YGNodeLayoutGetHeight(this.node),e},e.prototype.getComputedLeft=function(){return r.YGFloatSanitize(o.YGNodeLayoutGetLeft(this.node))},e.prototype.getComputedMargin=function(e){return r.YGFloatSanitize(o.YGNodeLayoutGetMargin(this.node,e))},e.prototype.getComputedPadding=function(e){return r.YGFloatSanitize(o.YGNodeLayoutGetPadding(this.node,e))},e.prototype.getComputedRight=function(){return r.YGFloatSanitize(o.YGNodeLayoutGetRight(this.node))},e.prototype.getComputedTop=function(){return r.YGFloatSanitize(o.YGNodeLayoutGetTop(this.node))},e.prototype.getComputedWidth=function(){return r.YGFloatSanitize(o.YGNodeLayoutGetWidth(this.node))},e.prototype.getDisplay=function(){return o.YGNodeStyleGetDisplay(this.node)},e.prototype.getFlexBasis=function(){return g(o.YGNodeStyleGetFlexBasis(this.node))},e.prototype.getFlexDirection=function(){return o.YGNodeStyleGetFlexDirection(this.node)},e.prototype.getFlexGrow=function(){return o.YGNodeStyleGetFlexGrow(this.node)},e.prototype.getFlexShrink=function(){return o.YGNodeStyleGetFlexShrink(this.node)},e.prototype.getFlexWrap=function(){return o.YGNodeStyleGetFlexWrap(this.node)},e.prototype.getHeight=function(){return g(o.YGNodeStyleGetHeight(this.node))},e.prototype.getJustifyContent=function(){return o.YGNodeStyleGetJustifyContent(this.node)},e.prototype.getMargin=function(e){return g(o.YGNodeStyleGetMargin(this.node,e))},e.prototype.getMaxHeight=function(){return g(o.YGNodeStyleGetMaxHeight(this.node))},e.prototype.getMaxWidth=function(){return g(o.YGNodeStyleGetMaxWidth(this.node))},e.prototype.getMinHeight=function(){return g(o.YGNodeStyleGetMinHeight(this.node))},e.prototype.getMinWidth=function(){return g(o.YGNodeStyleGetMinWidth(this.node))},e.prototype.getOverflow=function(){return o.YGNodeStyleGetOverflow(this.node)},e.prototype.getPadding=function(e){return g(o.YGNodeStyleGetPadding(this.node,e))},e.prototype.getParent=function(){var e=o.YGNodeGetParent(this.node);if(e)return d(e)},e.prototype.getPosition=function(e){return g(o.YGNodeStyleGetPosition(this.node,e))},e.prototype.getPositionType=function(){return o.YGNodeStyleGetPositionType(this.node)},e.prototype.getWidth=function(){return g(o.YGNodeStyleGetWidth(this.node))},e.prototype.insertChild=function(e,t){o.YGNodeInsertChild(this.node,e.node,t)},e.prototype.isDirty=function(){return o.YGNodeIsDirty(this.node)},e.prototype.markDirty=function(){o.YGNodeMarkDirty(this.node)},e.prototype.removeChild=function(e){o.YGNodeRemoveChild(this.node,e.node)},e.prototype.reset=function(){o.YGNodeReset(this.node)},e.prototype.setAlignContent=function(e){o.YGNodeStyleSetAlignContent(this.node,e)},e.prototype.setAlignItems=function(e){o.YGNodeStyleSetAlignItems(this.node,e)},e.prototype.setAlignSelf=function(e){o.YGNodeStyleSetAlignSelf(this.node,e)},e.prototype.setAspectRatio=function(e){o.YGNodeStyleSetAspectRatio(this.node,e)},e.prototype.setBorder=function(e,t){o.YGNodeStyleSetBorder(this.node,e,t)},e.prototype.setDisplay=function(e){o.YGNodeStyleSetDisplay(this.node,e)},e.prototype.setFlex=function(e){o.YGNodeStyleSetFlex(this.node,e)},e.prototype.setFlexBasis=function(e){if(\\\\\\\"string\\\\\\\"==typeof e){if(\\\\\\\"%\\\\\\\"!==e[e.length-1])throw new Error(\\\\\\\"Invalid input type\\\\\\\");this.setFlexBasisPercent(parseFloat(e))}else o.YGNodeStyleSetFlexBasis(this.node,e)},e.prototype.setFlexBasisPercent=function(e){o.YGNodeStyleSetFlexBasisPercent(this.node,e)},e.prototype.setFlexDirection=function(e){o.YGNodeStyleSetFlexDirection(this.node,e)},e.prototype.setFlexGrow=function(e){o.YGNodeStyleSetFlexGrow(this.node,e)},e.prototype.setFlexShrink=function(e){o.YGNodeStyleSetFlexShrink(this.node,e)},e.prototype.setFlexWrap=function(e){o.YGNodeStyleSetFlexWrap(this.node,e)},e.prototype.setHeight=function(e){if(\\\\\\\"string\\\\\\\"==typeof e)if(\\\\\\\"auto\\\\\\\"===e)this.setHeightAuto();else{if(\\\\\\\"%\\\\\\\"!==e[e.length-1])throw new Error(\\\\\\\"Invalid input type.\\\\\\\");this.setHeightPercent(parseFloat(e))}else o.YGNodeStyleSetHeight(this.node,e)},e.prototype.setHeightAuto=function(){o.YGNodeStyleSetHeightAuto(this.node)},e.prototype.setHeightPercent=function(e){o.YGNodeStyleSetHeightPercent(this.node,e)},e.prototype.setJustifyContent=function(e){o.YGNodeStyleSetJustifyContent(this.node,e)},e.prototype.setMargin=function(e,t){if(\\\\\\\"string\\\\\\\"==typeof t)if(\\\\\\\"auto\\\\\\\"===t)this.setMarginAuto(e);else{if(\\\\\\\"%\\\\\\\"!==t[t.length-1])throw new Error(\\\\\\\"Invalid input type.\\\\\\\");this.setMarginPercent(e,parseFloat(t))}else o.YGNodeStyleSetMargin(this.node,e,t)},e.prototype.setMarginAuto=function(e){o.YGNodeStyleSetMarginAuto(this.node,e)},e.prototype.setMarginPercent=function(e,t){o.YGNodeStyleSetMarginPercent(this.node,e,t)},e.prototype.setMaxHeight=function(e){if(\\\\\\\"string\\\\\\\"==typeof e){if(\\\\\\\"%\\\\\\\"!==e[e.length-1])throw new Error(\\\\\\\"Invalid input type.\\\\\\\");this.setMaxHeightPercent(parseFloat(e))}else o.YGNodeStyleSetMaxHeight(this.node,e)},e.prototype.setMaxHeightPercent=function(e){o.YGNodeStyleSetMaxHeightPercent(this.node,e)},e.prototype.setMaxWidth=function(e){if(\\\\\\\"string\\\\\\\"==typeof e){if(\\\\\\\"%\\\\\\\"!==e[e.length-1])throw new Error(\\\\\\\"Invalid input type.\\\\\\\");this.setMaxWidthPercent(parseFloat(e))}else o.YGNodeStyleSetMaxWidth(this.node,e)},e.prototype.setMaxWidthPercent=function(e){o.YGNodeStyleSetMaxWidthPercent(this.node,e)},e.prototype.setMeasureFunc=function(e){null==e?this.unsetMeasureFunc():o.YGNodeSetMeasureFunc(this.node,e)},e.prototype.unsetMeasureFunc=function(){o.YGNodeSetMeasureFunc(this.node,null)},e.prototype.setMinHeight=function(e){if(\\\\\\\"string\\\\\\\"==typeof e){if(\\\\\\\"%\\\\\\\"!==e[e.length-1])throw new Error(\\\\\\\"Invalid input type.\\\\\\\");this.setMinHeightPercent(parseFloat(e))}else o.YGNodeStyleSetMinHeight(this.node,e)},e.prototype.setMinHeightPercent=function(e){o.YGNodeStyleSetMinHeightPercent(this.node,e)},e.prototype.setMinWidth=function(e){if(\\\\\\\"string\\\\\\\"==typeof e){if(\\\\\\\"%\\\\\\\"!==e[e.length-1])throw new Error(\\\\\\\"Invalid input type.\\\\\\\");this.setMinWidthPercent(parseFloat(e))}else o.YGNodeStyleSetMinWidth(this.node,e)},e.prototype.setMinWidthPercent=function(e){o.YGNodeStyleSetMinWidthPercent(this.node,e)},e.prototype.setOverflow=function(e){o.YGNodeStyleSetOverflow(this.node,e)},e.prototype.setPadding=function(e,t){if(\\\\\\\"string\\\\\\\"==typeof t){if(\\\\\\\"%\\\\\\\"!==t[t.length-1])throw new Error(\\\\\\\"Invalid input type.\\\\\\\");this.setPaddingPercent(e,parseFloat(t))}else o.YGNodeStyleSetPadding(this.node,e,t)},e.prototype.setPaddingPercent=function(e,t){o.YGNodeStyleSetPaddingPercent(this.node,e,t)},e.prototype.setPosition=function(e,t){if(\\\\\\\"string\\\\\\\"==typeof t){if(\\\\\\\"%\\\\\\\"!==t[t.length-1])throw new Error(\\\\\\\"Invalid input type.\\\\\\\");this.setPositionPercent(e,parseFloat(t))}else o.YGNodeStyleSetPosition(this.node,e,t)},e.prototype.setPositionPercent=function(e,t){o.YGNodeStyleSetPositionPercent(this.node,e,t)},e.prototype.setPositionType=function(e){o.YGNodeStyleSetPositionType(this.node,e)},e.prototype.setWidth=function(e){if(\\\\\\\"string\\\\\\\"==typeof e)if(\\\\\\\"%\\\\\\\"===e[e.length-1])this.setWidthPercent(parseFloat(e));else{if(\\\\\\\"auto\\\\\\\"!==e)throw new Error(\\\\\\\"Invalid input type.\\\\\\\");this.setWidthAuto()}else o.YGNodeStyleSetWidth(this.node,e)},e.prototype.setWidthAuto=function(){o.YGNodeStyleSetWidthAuto(this.node)},e.prototype.setWidthPercent=function(e){o.YGNodeStyleSetWidthPercent(this.node,e)},e.prototype.unsetMeasureFun=function(){o.YGNodeSetMeasureFunc(this.node,void 0)},e}();t.Node=G,t.getInstanceCount=function(){return o.YGNodeGetInstanceCount()}},function(e,t,i){\\\\\\\"use strict\\\\\\\";t.__esModule=!0;var n=i(0),o=i(2),r=i(5),a=i(3),s=i(6),l=i(10),u=i(4),d=i(1),g=function(){function e(t,i,o,a,u,g,G,c,Y,f,y,h,p,m,S){if(void 0===t&&(t=null),void 0===i&&(i=null),void 0===o&&(o=!0),void 0===a&&(a=n.YGNodeType.Default),void 0===u&&(u=null),void 0===g&&(g=null),void 0===G&&(G=null),void 0===c&&(c=new l.YGStyle),void 0===Y&&(Y=new s.YGLayout),void 0===f&&(f=0),void 0===y&&(y=null),void 0===h&&(h=[]),void 0===p&&(p=null),void 0===m&&(m=!1),void 0===S&&(S=[d.YGValueUndefined(),d.YGValueUndefined()]),t instanceof e)return console.log(\\\\\\\"from node\\\\\\\"),void this.fromNode(t);this.print_=i,this.hasNewLayout_=o,this.nodeType_=a,this.measure_=u,this.baseline_=g,this.dirtied_=G,this.style_=c,this.layout_=Y,this.lineIndex_=f,this.owner_=y,this.children_=h,this.config_=p,this.isDirty_=m,this.resolvedDimensions_=S,t instanceof r.YGConfig?(this.config_=t,this.context_=null):this.context_=t}return e.prototype.relativePosition=function(e,t){if(this.isLeadingPositionDefined(e))return this.getLeadingPosition(e,t);var i=this.getTrailingPosition(e,t);return i.isUndefined()||i.setValue(-1*i.getValue()),i},e.prototype.operatorAtrib=function(e){return e==this?this:(this.clearChildren(),this.fromNode(e),this)},e.prototype.fromNode=function(e){console.log(e),this.context_=e.context_,this.print_=e.print_,this.hasNewLayout_=e.hasNewLayout_,this.nodeType_=e.nodeType_,this.measure_=e.measure_,this.baseline_=e.baseline_,this.dirtied_=e.dirtied_,this.style_=e.style_,this.layout_=e.layout_,this.lineIndex_=e.lineIndex_,this.owner_=e.owner_,this.children_=e.children_,this.config_=e.config_,this.isDirty_=e.isDirty_,this.resolvedDimensions_=e.resolvedDimensions_},e.prototype.getContext=function(){return this.context_},e.prototype.getPrintFunc=function(){return this.print_},e.prototype.getHasNewLayout=function(){return this.hasNewLayout_},e.prototype.getNodeType=function(){return this.nodeType_},e.prototype.getMeasure=function(){return this.measure_},e.prototype.getBaseline=function(){return this.baseline_},e.prototype.getDirtied=function(){return this.dirtied_},e.prototype.getStyle=function(){return this.style_},e.prototype.getLayout=function(){return this.layout_},e.prototype.getLineIndex=function(){return this.lineIndex_},e.prototype.getOwner=function(){return this.owner_},e.prototype.getParent=function(){return this.getOwner()},e.prototype.getChildren=function(){return this.children_},e.prototype.getChildrenCount=function(){return this.children_.length},e.prototype.getChild=function(e){return this.children_[e]},e.prototype.getConfig=function(){return this.config_},e.prototype.isDirty=function(){return this.isDirty_},e.prototype.getResolvedDimensions=function(){return this.resolvedDimensions_},e.prototype.getResolvedDimension=function(e){return this.resolvedDimensions_[e]},e.prototype.getLeadingPosition=function(e,t){if(a.YGFlexDirectionIsRow(e)){var i=d.YGComputedEdgeValue(this.style_.position,n.YGEdge.Start,d.YGValueUndefined());if(i.unit!=n.YGUnit.Undefined)return a.YGResolveValue(i,t)}var r=d.YGComputedEdgeValue(this.style_.position,u.leading[e],d.YGValueUndefined());return r.unit==n.YGUnit.Undefined?new o.YGFloatOptional(0):a.YGResolveValue(r,t)},e.prototype.isLeadingPositionDefined=function(e){return a.YGFlexDirectionIsRow(e)&&d.YGComputedEdgeValue(this.style_.position,n.YGEdge.Start,d.YGValueUndefined()).unit!=n.YGUnit.Undefined||d.YGComputedEdgeValue(this.style_.position,u.leading[e],d.YGValueUndefined()).unit!=n.YGUnit.Undefined},e.prototype.isTrailingPosDefined=function(e){return a.YGFlexDirectionIsRow(e)&&d.YGComputedEdgeValue(this.style_.position,n.YGEdge.End,d.YGValueUndefined()).unit!=n.YGUnit.Undefined||d.YGComputedEdgeValue(this.style_.position,u.trailing[e],d.YGValueUndefined()).unit!=n.YGUnit.Undefined},e.prototype.getTrailingPosition=function(e,t){if(a.YGFlexDirectionIsRow(e)){var i=d.YGComputedEdgeValue(this.style_.position,n.YGEdge.End,d.YGValueUndefined());if(i.unit!=n.YGUnit.Undefined)return a.YGResolveValue(i,t)}var r=d.YGComputedEdgeValue(this.style_.position,u.trailing[e],d.YGValueUndefined());return r.unit==n.YGUnit.Undefined?new o.YGFloatOptional(0):a.YGResolveValue(r,t)},e.prototype.getLeadingMargin=function(e,t){return a.YGFlexDirectionIsRow(e)&&this.style_.margin[n.YGEdge.Start].unit!=n.YGUnit.Undefined?a.YGResolveValueMargin(this.style_.margin[n.YGEdge.Start],t):a.YGResolveValueMargin(d.YGComputedEdgeValue(this.style_.margin,u.leading[e],d.YGValueZero()),t)},e.prototype.getTrailingMargin=function(e,t){return a.YGFlexDirectionIsRow(e)&&this.style_.margin[n.YGEdge.End].unit!=n.YGUnit.Undefined?a.YGResolveValueMargin(this.style_.margin[n.YGEdge.End],t):a.YGResolveValueMargin(d.YGComputedEdgeValue(this.style_.margin,u.trailing[e],d.YGValueZero()),t)},e.prototype.getLeadingBorder=function(e){if(a.YGFlexDirectionIsRow(e)&&this.style_.border[n.YGEdge.Start].unit!=n.YGUnit.Undefined&&!d.YGFloatIsUndefined(this.style_.border[n.YGEdge.Start].value)&&this.style_.border[n.YGEdge.Start].value>=0)return this.style_.border[n.YGEdge.Start].value;var t=d.YGComputedEdgeValue(this.style_.border,u.leading[e],d.YGValueZero()).value;return a.YGFloatMax(t,0)},e.prototype.getTrailingBorder=function(e){if(a.YGFlexDirectionIsRow(e)&&this.style_.border[n.YGEdge.End].unit!=n.YGUnit.Undefined&&!d.YGFloatIsUndefined(this.style_.border[n.YGEdge.End].value)&&this.style_.border[n.YGEdge.End].value>=0)return this.style_.border[n.YGEdge.End].value;var t=d.YGComputedEdgeValue(this.style_.border,u.trailing[e],d.YGValueZero()).value;return a.YGFloatMax(t,0)},e.prototype.getLeadingPadding=function(e,t){var i=a.YGResolveValue(this.style_.padding[n.YGEdge.Start],t);if(a.YGFlexDirectionIsRow(e)&&this.style_.padding[n.YGEdge.Start].unit!=n.YGUnit.Undefined&&!i.isUndefined()&&i.getValue()>0)return i;var r=a.YGResolveValue(d.YGComputedEdgeValue(this.style_.padding,u.leading[e],d.YGValueZero()),t);return a.YGFloatOptionalMax(r,new o.YGFloatOptional(0))},e.prototype.getTrailingPadding=function(e,t){var i=a.YGResolveValue(this.style_.padding[n.YGEdge.End],t);if(a.YGFlexDirectionIsRow(e)&&this.style_.padding[n.YGEdge.End].unit!=n.YGUnit.Undefined&&!i.isUndefined()&&i.getValue()>=0)return i;var r=a.YGResolveValue(d.YGComputedEdgeValue(this.style_.padding,u.trailing[e],d.YGValueZero()),t);return a.YGFloatOptionalMax(r,new o.YGFloatOptional(0))},e.prototype.getLeadingPaddingAndBorder=function(e,t){return this.getLeadingPadding(e,t).add(new o.YGFloatOptional(this.getLeadingBorder(e)))},e.prototype.getTrailingPaddingAndBorder=function(e,t){return this.getTrailingPadding(e,t).add(new o.YGFloatOptional(this.getTrailingBorder(e)))},e.prototype.getMarginForAxis=function(e,t){return this.getLeadingMargin(e,t).add(this.getTrailingMargin(e,t))},e.prototype.setContext=function(e){this.context_=e},e.prototype.setPrintFunc=function(e){this.print_=e},e.prototype.setHasNewLayout=function(e){this.hasNewLayout_=e},e.prototype.setNodeType=function(e){this.nodeType_=e},e.prototype.setMeasureFunc=function(e){null==e?(this.measure_=null,this.nodeType_=n.YGNodeType.Default):(0!=this.children_.length&&console.error(\\\\\\\"Cannot set measure function: Nodes with measure functions cannot have children.\\\\\\\"),this.measure_=e,this.setNodeType(n.YGNodeType.Text)),this.measure_=e},e.prototype.setBaseLineFunc=function(e){this.baseline_=e},e.prototype.setDirtiedFunc=function(e){this.dirtied_=e},e.prototype.setStyle=function(e){this.style_=e},e.prototype.setStyleFlexDirection=function(e){this.style_.flexDirection=e},e.prototype.setStyleAlignContent=function(e){this.style_.alignContent=e},e.prototype.setLayout=function(e){this.layout_=e},e.prototype.setLineIndex=function(e){this.lineIndex_=e},e.prototype.setOwner=function(e){this.owner_=e},e.prototype.setChildren=function(e){this.children_=e},e.prototype.setConfig=function(e){this.config_=e},e.prototype.setDirty=function(e){this.isDirty_=e},e.prototype.setLayoutLastOwnerDirection=function(e){this.layout_.lastOwnerDirection=e},e.prototype.setLayoutComputedFlexBasis=function(e){this.layout_.computedFlexBasis=e},e.prototype.setLayoutComputedFlexBasisGeneration=function(e){this.layout_.computedFlexBasisGeneration=e},e.prototype.setLayoutMeasuredDimension=function(e,t){this.layout_.measuredDimensions[t]=e},e.prototype.setLayoutHadOverflow=function(e){this.layout_.hadOverflow=e},e.prototype.setLayoutDimension=function(e,t){this.layout_.dimensions[t]=e},e.prototype.setLayoutDirection=function(e){this.layout_.direction=e},e.prototype.setLayoutMargin=function(e,t){this.layout_.margin[t]=e},e.prototype.setLayoutBorder=function(e,t){this.layout_.border[t]=e},e.prototype.setLayoutPadding=function(e,t){this.layout_.padding[t]=e},e.prototype.setLayoutPosition=function(e,t){this.layout_.position[t]=e},e.prototype.setPosition=function(e,t,i,o){var r=null!=this.owner_?e:n.YGDirection.LTR,s=a.YGResolveFlexDirection(this.style_.flexDirection,r),l=a.YGFlexDirectionCross(s,r),d=this.relativePosition(s,t),g=this.relativePosition(l,i);this.setLayoutPosition(a.YGUnwrapFloatOptional(this.getLeadingMargin(s,o).add(d)),u.leading[s]),this.setLayoutPosition(a.YGUnwrapFloatOptional(this.getTrailingMargin(s,o).add(d)),u.trailing[s]),this.setLayoutPosition(a.YGUnwrapFloatOptional(this.getLeadingMargin(l,o).add(g)),u.leading[l]),this.setLayoutPosition(a.YGUnwrapFloatOptional(this.getTrailingMargin(l,o).add(g)),u.trailing[l])},e.prototype.setAndPropogateUseLegacyFlag=function(e){this.config_.useLegacyStretchBehaviour=e;for(var t=0;t<this.children_.length;t++)this.children_[t].getConfig().useLegacyStretchBehaviour=e},e.prototype.setLayoutDoesLegacyFlagAffectsLayout=function(e){this.layout_.doesLegacyStretchFlagAffectsLayout=e},e.prototype.setLayoutDidUseLegacyFlag=function(e){this.layout_.didUseLegacyFlag=e},e.prototype.markDirtyAndPropogateDownwards=function(){this.isDirty_=!0;for(var e=0;e<this.children_.length;e++)this.children_[e].markDirtyAndPropogateDownwards()},e.prototype.marginLeadingValue=function(e){return a.YGFlexDirectionIsRow(e)&&this.style_.margin[n.YGEdge.Start].unit!=n.YGUnit.Undefined?this.style_.margin[n.YGEdge.Start]:this.style_.margin[u.leading[e]]},e.prototype.marginTrailingValue=function(e){return a.YGFlexDirectionIsRow(e)&&this.style_.margin[n.YGEdge.End].unit!=n.YGUnit.Undefined?this.style_.margin[n.YGEdge.End]:this.style_.margin[u.trailing[e]]},e.prototype.resolveFlexBasisPtr=function(){var e=this.style_.flexBasis;return e.unit!=n.YGUnit.Auto&&e.unit!=n.YGUnit.Undefined?e:!this.style_.flex.isUndefined()&&this.style_.flex.getValue()>0?this.config_.useWebDefaults?d.YGValueAuto():d.YGValueZero():d.YGValueAuto()},e.prototype.resolveDimension=function(){for(var e=n.YGDimension.Width;e<n.YGDimensionCount;++e)this.style_.maxDimensions[e].unit!=n.YGUnit.Undefined&&a.YGValueEqual(this.style_.maxDimensions[e],this.style_.minDimensions[e])?this.resolvedDimensions_[e]=this.style_.maxDimensions[e]:this.resolvedDimensions_[e]=this.style_.dimensions[e]},e.prototype.resolveDirection=function(e){return this.style_.direction==n.YGDirection.Inherit?e>n.YGDirection.Inherit?e:n.YGDirection.LTR:this.style_.direction},e.prototype.clearChildren=function(){for(;this.children_.length>0;)this.children_.pop()},e.prototype.replaceChild=function(e,t){var i=this.children_.indexOf(e);i>=0&&(this.children_[i]=t)},e.prototype.replaceChildIndex=function(e,t){this.children_[t]=e},e.prototype.insertChildIndex=function(e,t){this.children_.splice(t,0,e)},e.prototype.removeChild=function(e){var t=this.children_.indexOf(e);return t>=0&&(this.children_.splice(t,1),!0)},e.prototype.removeChildIndex=function(e){this.children_.splice(e,1)},e.prototype.cloneChildrenIfNeeded=function(){var e=this.children_.length;if(0!=e&&this.children_[0].getOwner()!=this)for(var t=this.config_.cloneNodeCallback,i=0;i<e;++i){var n=this.children_[i],o=null;t&&(o=t(n,this,i)),null==o&&(o=d.YGNodeClone(n)),this.replaceChildIndex(o,i),o.setOwner(this)}},e.prototype.markDirtyAndPropogate=function(){this.isDirty_||(this.setDirty(!0),this.setLayoutComputedFlexBasis(new o.YGFloatOptional),this.owner_&&this.owner_.markDirtyAndPropogate())},e.prototype.resolveFlexGrow=function(){return null==this.owner_?0:this.style_.flexGrow.isUndefined()?!this.style_.flex.isUndefined()&&this.style_.flex.getValue()>0?this.style_.flex.getValue():u.kDefaultFlexGrow:this.style_.flexGrow.getValue()},e.prototype.resolveFlexShrink=function(){return null==this.owner_?0:this.style_.flexShrink.isUndefined()?!this.config_.useWebDefaults&&!this.style_.flex.isUndefined()&&this.style_.flex.getValue()<0?-this.style_.flex.getValue():this.config_.useWebDefaults?u.kWebDefaultFlexShrink:u.kDefaultFlexShrink:this.style_.flexShrink.getValue()},e.prototype.isNodeFlexible=function(){return this.style_.positionType==n.YGPositionType.Relative&&(0!=this.resolveFlexGrow()||0!=this.resolveFlexShrink())},e.prototype.didUseLegacyFlag=function(){var e=this.layout_.didUseLegacyFlag;if(e)return!0;for(var t=0;t<this.children_.length;t++)if(this.children_[t].getLayout().didUseLegacyFlag){e=!0;break}return e},e.prototype.isLayoutTreeEqualToNode=function(e){if(this.children_.length!=e.getChildren().length)return!1;if(this.layout_.diff(e.getLayout()))return!1;if(0==this.children_.length)return!0;for(var t=!0,i=0;i<this.children_.length;++i){var n=e.getChild(i);if(!(t=this.children_[i].isLayoutTreeEqualToNode(n)))return!1}return t},e}();t.YGNode=g},function(e,t,i){\\\\\\\"use strict\\\\\\\";t.__esModule=!0;var n=i(0),o=i(3),r=i(7),a=i(2),s=function(){return new r.YGValue(0,n.YGUnit.Undefined)},l=function(){return new r.YGValue(0,n.YGUnit.Auto)},u=function(){return[s(),s(),s(),s(),s(),s(),s(),s(),s()]},d=function(){return[l(),l()]},g=function(){return[s(),s()]},G=function(){function e(){this.margin=new Array(n.YGEdgeCount),this.position=new Array(n.YGEdgeCount),this.padding=new Array(n.YGEdgeCount),this.border=new Array(n.YGEdgeCount),this.direction=n.YGDirection.Inherit,this.flexDirection=n.YGFlexDirection.Column,this.justifyContent=n.YGJustify.FlexStart,this.alignContent=n.YGAlign.FlexStart,this.alignItems=n.YGAlign.Stretch,this.alignSelf=n.YGAlign.Auto,this.positionType=n.YGPositionType.Relative,this.flexWrap=n.YGWrap.NoWrap,this.overflow=n.YGOverflow.Visible,this.display=n.YGDisplay.Flex,this.flex=new a.YGFloatOptional,this.flexGrow=new a.YGFloatOptional,this.flexShrink=new a.YGFloatOptional,this.flexBasis=l(),this.margin=u(),this.position=u(),this.padding=u(),this.border=u(),this.dimensions=d(),this.minDimensions=g(),this.maxDimensions=g(),this.aspectRatio=new a.YGFloatOptional}return e.prototype.isEqual=function(e){var t=this.direction==e.direction&&this.flexDirection==e.flexDirection&&this.justifyContent==e.justifyContent&&this.alignContent==e.alignContent&&this.alignItems==e.alignItems&&this.alignSelf==e.alignSelf&&this.positionType==e.positionType&&this.flexWrap==e.flexWrap&&this.overflow==e.overflow&&this.display==e.display&&o.YGValueEqual(this.flexBasis,e.flexBasis)&&o.YGValueArrayEqual(this.margin,e.margin)&&o.YGValueArrayEqual(this.position,e.position)&&o.YGValueArrayEqual(this.padding,e.padding)&&o.YGValueArrayEqual(this.border,e.border)&&o.YGValueArrayEqual(this.dimensions,e.dimensions)&&o.YGValueArrayEqual(this.minDimensions,e.minDimensions)&&o.YGValueArrayEqual(this.maxDimensions,e.maxDimensions);return!(t=t&&this.flex.isUndefined()==e.flex.isUndefined())||this.flex.isUndefined()||e.flex.isUndefined()||(t=t&&this.flex.getValue()==e.flex.getValue()),(t=t&&this.flexGrow.isUndefined()==e.flexGrow.isUndefined())&&!this.flexGrow.isUndefined()&&(t=t&&this.flexGrow.getValue()==e.flexGrow.getValue()),(t=t&&this.flexShrink.isUndefined()==e.flexShrink.isUndefined())&&!e.flexShrink.isUndefined()&&(t=t&&this.flexShrink.getValue()==e.flexShrink.getValue()),this.aspectRatio.isUndefined()&&e.aspectRatio.isUndefined()||(t=t&&this.aspectRatio.getValue()==e.aspectRatio.getValue()),t},e.prototype.isDiff=function(e){return!this.isEqual(e)},e.prototype.clone=function(){var t=new e;return t.direction=this.direction,t.flexDirection=this.flexDirection,t.justifyContent=this.justifyContent,t.alignContent=this.alignContent,t.alignItems=this.alignItems,t.alignSelf=this.alignSelf,t.positionType=this.positionType,t.flexWrap=this.flexWrap,t.overflow=this.overflow,t.display=this.display,t.flex=this.flex.clone(),t.flexGrow=this.flexGrow.clone(),t.flexShrink=this.flexShrink.clone(),t.flexBasis=this.flexBasis.clone(),t.margin=o.cloneYGValueArray(this.margin),t.position=o.cloneYGValueArray(this.position),t.padding=o.cloneYGValueArray(this.padding),t.border=o.cloneYGValueArray(this.border),t.dimensions=[this.dimensions[0].clone(),this.dimensions[1].clone()],t.minDimensions=[this.minDimensions[0].clone(),this.minDimensions[1].clone()],t.maxDimensions=[this.maxDimensions[0].clone(),this.maxDimensions[1].clone()],t.aspectRatio=this.aspectRatio.clone(),t},e}();t.YGStyle=G}]);//# sourceURL=[module]\\\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\\\n//# sourceURL=webpack-internal:///./node_modules/typeflex/dist/Yoga.js\\\\n\\\");\\n\\n/***/ })\\n\\n/******/ });\", __webpack_require__.p + \"yoga-worker.js\");\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/worker-loader/dist/cjs.js?inline=true&name=yoga-worker.js!./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/workers/yoga-worker.js\n");

/***/ }),

/***/ "./node_modules/worker-loader/dist/workers/InlineWorker.js":
/*!*****************************************************************!*\
  !*** ./node_modules/worker-loader/dist/workers/InlineWorker.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n// http://stackoverflow.com/questions/10343913/how-to-create-a-web-worker-from-a-string\n\nvar URL = window.URL || window.webkitURL;\n\nmodule.exports = function (content, url) {\n  try {\n    try {\n      var blob;\n\n      try {\n        // BlobBuilder = Deprecated, but widely implemented\n        var BlobBuilder = window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder || window.MSBlobBuilder;\n\n        blob = new BlobBuilder();\n\n        blob.append(content);\n\n        blob = blob.getBlob();\n      } catch (e) {\n        // The proposed API\n        blob = new Blob([content]);\n      }\n\n      return new Worker(URL.createObjectURL(blob));\n    } catch (e) {\n      return new Worker('data:application/javascript,' + encodeURIComponent(content));\n    }\n  } catch (e) {\n    if (!url) {\n      throw Error('Inline worker is not supported');\n    }\n\n    return new Worker(url);\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvd29ya2VyLWxvYWRlci9kaXN0L3dvcmtlcnMvSW5saW5lV29ya2VyLmpzPzc3ODUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBOztBQUVBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvd29ya2VyLWxvYWRlci9kaXN0L3dvcmtlcnMvSW5saW5lV29ya2VyLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG4vLyBodHRwOi8vc3RhY2tvdmVyZmxvdy5jb20vcXVlc3Rpb25zLzEwMzQzOTEzL2hvdy10by1jcmVhdGUtYS13ZWItd29ya2VyLWZyb20tYS1zdHJpbmdcblxudmFyIFVSTCA9IHdpbmRvdy5VUkwgfHwgd2luZG93LndlYmtpdFVSTDtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoY29udGVudCwgdXJsKSB7XG4gIHRyeSB7XG4gICAgdHJ5IHtcbiAgICAgIHZhciBibG9iO1xuXG4gICAgICB0cnkge1xuICAgICAgICAvLyBCbG9iQnVpbGRlciA9IERlcHJlY2F0ZWQsIGJ1dCB3aWRlbHkgaW1wbGVtZW50ZWRcbiAgICAgICAgdmFyIEJsb2JCdWlsZGVyID0gd2luZG93LkJsb2JCdWlsZGVyIHx8IHdpbmRvdy5XZWJLaXRCbG9iQnVpbGRlciB8fCB3aW5kb3cuTW96QmxvYkJ1aWxkZXIgfHwgd2luZG93Lk1TQmxvYkJ1aWxkZXI7XG5cbiAgICAgICAgYmxvYiA9IG5ldyBCbG9iQnVpbGRlcigpO1xuXG4gICAgICAgIGJsb2IuYXBwZW5kKGNvbnRlbnQpO1xuXG4gICAgICAgIGJsb2IgPSBibG9iLmdldEJsb2IoKTtcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgLy8gVGhlIHByb3Bvc2VkIEFQSVxuICAgICAgICBibG9iID0gbmV3IEJsb2IoW2NvbnRlbnRdKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIG5ldyBXb3JrZXIoVVJMLmNyZWF0ZU9iamVjdFVSTChibG9iKSk7XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgcmV0dXJuIG5ldyBXb3JrZXIoJ2RhdGE6YXBwbGljYXRpb24vamF2YXNjcmlwdCwnICsgZW5jb2RlVVJJQ29tcG9uZW50KGNvbnRlbnQpKTtcbiAgICB9XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICBpZiAoIXVybCkge1xuICAgICAgdGhyb3cgRXJyb3IoJ0lubGluZSB3b3JrZXIgaXMgbm90IHN1cHBvcnRlZCcpO1xuICAgIH1cblxuICAgIHJldHVybiBuZXcgV29ya2VyKHVybCk7XG4gIH1cbn07Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/worker-loader/dist/workers/InlineWorker.js\n");

/***/ }),

/***/ "./node_modules/xml-js/lib/array-helper.js":
/*!*************************************************!*\
  !*** ./node_modules/xml-js/lib/array-helper.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = {\r\n\r\n  isArray: function(value) {\r\n    if (Array.isArray) {\r\n      return Array.isArray(value);\r\n    }\r\n    // fallback for older browsers like  IE 8\r\n    return Object.prototype.toString.call( value ) === '[object Array]';\r\n  }\r\n\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMveG1sLWpzL2xpYi9hcnJheS1oZWxwZXIuanM/OWIxMiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy94bWwtanMvbGliL2FycmF5LWhlbHBlci5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0ge1xyXG5cclxuICBpc0FycmF5OiBmdW5jdGlvbih2YWx1ZSkge1xyXG4gICAgaWYgKEFycmF5LmlzQXJyYXkpIHtcclxuICAgICAgcmV0dXJuIEFycmF5LmlzQXJyYXkodmFsdWUpO1xyXG4gICAgfVxyXG4gICAgLy8gZmFsbGJhY2sgZm9yIG9sZGVyIGJyb3dzZXJzIGxpa2UgIElFIDhcclxuICAgIHJldHVybiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoIHZhbHVlICkgPT09ICdbb2JqZWN0IEFycmF5XSc7XHJcbiAgfVxyXG5cclxufTtcclxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/xml-js/lib/array-helper.js\n");

/***/ }),

/***/ "./node_modules/xml-js/lib/index.js":
/*!******************************************!*\
  !*** ./node_modules/xml-js/lib/index.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*jslint node:true */\r\n\r\nvar xml2js = __webpack_require__(/*! ./xml2js */ \"./node_modules/xml-js/lib/xml2js.js\");\r\nvar xml2json = __webpack_require__(/*! ./xml2json */ \"./node_modules/xml-js/lib/xml2json.js\");\r\nvar js2xml = __webpack_require__(/*! ./js2xml */ \"./node_modules/xml-js/lib/js2xml.js\");\r\nvar json2xml = __webpack_require__(/*! ./json2xml */ \"./node_modules/xml-js/lib/json2xml.js\");\r\n\r\nmodule.exports = {\r\n  xml2js: xml2js,\r\n  xml2json: xml2json,\r\n  js2xml: js2xml,\r\n  json2xml: json2xml\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMveG1sLWpzL2xpYi9pbmRleC5qcz9jNTFhIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBLGFBQWEsbUJBQU8sQ0FBQyxxREFBVTtBQUMvQixlQUFlLG1CQUFPLENBQUMseURBQVk7QUFDbkMsYUFBYSxtQkFBTyxDQUFDLHFEQUFVO0FBQy9CLGVBQWUsbUJBQU8sQ0FBQyx5REFBWTs7QUFFbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL3htbC1qcy9saWIvaW5kZXguanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKmpzbGludCBub2RlOnRydWUgKi9cclxuXHJcbnZhciB4bWwyanMgPSByZXF1aXJlKCcuL3htbDJqcycpO1xyXG52YXIgeG1sMmpzb24gPSByZXF1aXJlKCcuL3htbDJqc29uJyk7XHJcbnZhciBqczJ4bWwgPSByZXF1aXJlKCcuL2pzMnhtbCcpO1xyXG52YXIganNvbjJ4bWwgPSByZXF1aXJlKCcuL2pzb24yeG1sJyk7XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IHtcclxuICB4bWwyanM6IHhtbDJqcyxcclxuICB4bWwyanNvbjogeG1sMmpzb24sXHJcbiAganMyeG1sOiBqczJ4bWwsXHJcbiAganNvbjJ4bWw6IGpzb24yeG1sXHJcbn07XHJcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/xml-js/lib/index.js\n");

/***/ }),

/***/ "./node_modules/xml-js/lib/js2xml.js":
/*!*******************************************!*\
  !*** ./node_modules/xml-js/lib/js2xml.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var helper = __webpack_require__(/*! ./options-helper */ \"./node_modules/xml-js/lib/options-helper.js\");\nvar isArray = __webpack_require__(/*! ./array-helper */ \"./node_modules/xml-js/lib/array-helper.js\").isArray;\n\nvar currentElement, currentElementName;\n\nfunction validateOptions(userOptions) {\n  var options = helper.copyOptions(userOptions);\n  helper.ensureFlagExists('ignoreDeclaration', options);\n  helper.ensureFlagExists('ignoreInstruction', options);\n  helper.ensureFlagExists('ignoreAttributes', options);\n  helper.ensureFlagExists('ignoreText', options);\n  helper.ensureFlagExists('ignoreComment', options);\n  helper.ensureFlagExists('ignoreCdata', options);\n  helper.ensureFlagExists('ignoreDoctype', options);\n  helper.ensureFlagExists('compact', options);\n  helper.ensureFlagExists('indentText', options);\n  helper.ensureFlagExists('indentCdata', options);\n  helper.ensureFlagExists('indentAttributes', options);\n  helper.ensureFlagExists('indentInstruction', options);\n  helper.ensureFlagExists('fullTagEmptyElement', options);\n  helper.ensureFlagExists('noQuotesForNativeAttributes', options);\n  helper.ensureSpacesExists(options);\n  if (typeof options.spaces === 'number') {\n    options.spaces = Array(options.spaces + 1).join(' ');\n  }\n  helper.ensureKeyExists('declaration', options);\n  helper.ensureKeyExists('instruction', options);\n  helper.ensureKeyExists('attributes', options);\n  helper.ensureKeyExists('text', options);\n  helper.ensureKeyExists('comment', options);\n  helper.ensureKeyExists('cdata', options);\n  helper.ensureKeyExists('doctype', options);\n  helper.ensureKeyExists('type', options);\n  helper.ensureKeyExists('name', options);\n  helper.ensureKeyExists('elements', options);\n  helper.checkFnExists('doctype', options);\n  helper.checkFnExists('instruction', options);\n  helper.checkFnExists('cdata', options);\n  helper.checkFnExists('comment', options);\n  helper.checkFnExists('text', options);\n  helper.checkFnExists('instructionName', options);\n  helper.checkFnExists('elementName', options);\n  helper.checkFnExists('attributeName', options);\n  helper.checkFnExists('attributeValue', options);\n  helper.checkFnExists('attributes', options);\n  helper.checkFnExists('fullTagEmptyElement', options);\n  return options;\n}\n\nfunction writeIndentation(options, depth, firstLine) {\n  return (!firstLine && options.spaces ? '\\n' : '') + Array(depth + 1).join(options.spaces);\n}\n\nfunction writeAttributes(attributes, options, depth) {\n  if (options.ignoreAttributes) {\n    return '';\n  }\n  if ('attributesFn' in options) {\n    attributes = options.attributesFn(attributes, currentElementName, currentElement);\n  }\n  var key, attr, attrName, quote, result = [];\n  for (key in attributes) {\n    if (attributes.hasOwnProperty(key) && attributes[key] !== null && attributes[key] !== undefined) {\n      quote = options.noQuotesForNativeAttributes && typeof attributes[key] !== 'string' ? '' : '\"';\n      attr = '' + attributes[key]; // ensure number and boolean are converted to String\n      attr = attr.replace(/\"/g, '&quot;');\n      attrName = 'attributeNameFn' in options ? options.attributeNameFn(key, attr, currentElementName, currentElement) : key;\n      result.push((options.spaces && options.indentAttributes? writeIndentation(options, depth+1, false) : ' '));\n      result.push(attrName + '=' + quote + ('attributeValueFn' in options ? options.attributeValueFn(attr, key, currentElementName, currentElement) : attr) + quote);\n    }\n  }\n  if (attributes && Object.keys(attributes).length && options.spaces && options.indentAttributes) {\n    result.push(writeIndentation(options, depth, false));\n  }\n  return result.join('');\n}\n\nfunction writeDeclaration(declaration, options, depth) {\n  currentElement = declaration;\n  currentElementName = 'xml';\n  return options.ignoreDeclaration ? '' :  '<?' + 'xml' + writeAttributes(declaration[options.attributesKey], options, depth) + '?>';\n}\n\nfunction writeInstruction(instruction, options, depth) {\n  if (options.ignoreInstruction) {\n    return '';\n  }\n  var key;\n  for (key in instruction) {\n    if (instruction.hasOwnProperty(key)) {\n      break;\n    }\n  }\n  var instructionName = 'instructionNameFn' in options ? options.instructionNameFn(key, instruction[key], currentElementName, currentElement) : key;\n  if (typeof instruction[key] === 'object') {\n    currentElement = instruction;\n    currentElementName = instructionName;\n    return '<?' + instructionName + writeAttributes(instruction[key][options.attributesKey], options, depth) + '?>';\n  } else {\n    var instructionValue = instruction[key] ? instruction[key] : '';\n    if ('instructionFn' in options) instructionValue = options.instructionFn(instructionValue, key, currentElementName, currentElement);\n    return '<?' + instructionName + (instructionValue ? ' ' + instructionValue : '') + '?>';\n  }\n}\n\nfunction writeComment(comment, options) {\n  return options.ignoreComment ? '' : '<!--' + ('commentFn' in options ? options.commentFn(comment, currentElementName, currentElement) : comment) + '-->';\n}\n\nfunction writeCdata(cdata, options) {\n  return options.ignoreCdata ? '' : '<![CDATA[' + ('cdataFn' in options ? options.cdataFn(cdata, currentElementName, currentElement) : cdata.replace(']]>', ']]]]><![CDATA[>')) + ']]>';\n}\n\nfunction writeDoctype(doctype, options) {\n  return options.ignoreDoctype ? '' : '<!DOCTYPE ' + ('doctypeFn' in options ? options.doctypeFn(doctype, currentElementName, currentElement) : doctype) + '>';\n}\n\nfunction writeText(text, options) {\n  if (options.ignoreText) return '';\n  text = '' + text; // ensure Number and Boolean are converted to String\n  text = text.replace(/&amp;/g, '&'); // desanitize to avoid double sanitization\n  text = text.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n  return 'textFn' in options ? options.textFn(text, currentElementName, currentElement) : text;\n}\n\nfunction hasContent(element, options) {\n  var i;\n  if (element.elements && element.elements.length) {\n    for (i = 0; i < element.elements.length; ++i) {\n      switch (element.elements[i][options.typeKey]) {\n      case 'text':\n        if (options.indentText) {\n          return true;\n        }\n        break; // skip to next key\n      case 'cdata':\n        if (options.indentCdata) {\n          return true;\n        }\n        break; // skip to next key\n      case 'instruction':\n        if (options.indentInstruction) {\n          return true;\n        }\n        break; // skip to next key\n      case 'doctype':\n      case 'comment':\n      case 'element':\n        return true;\n      default:\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nfunction writeElement(element, options, depth) {\n  currentElement = element;\n  currentElementName = element.name;\n  var xml = [], elementName = 'elementNameFn' in options ? options.elementNameFn(element.name, element) : element.name;\n  xml.push('<' + elementName);\n  if (element[options.attributesKey]) {\n    xml.push(writeAttributes(element[options.attributesKey], options, depth));\n  }\n  var withClosingTag = element[options.elementsKey] && element[options.elementsKey].length || element[options.attributesKey] && element[options.attributesKey]['xml:space'] === 'preserve';\n  if (!withClosingTag) {\n    if ('fullTagEmptyElementFn' in options) {\n      withClosingTag = options.fullTagEmptyElementFn(element.name, element);\n    } else {\n      withClosingTag = options.fullTagEmptyElement;\n    }\n  }\n  if (withClosingTag) {\n    xml.push('>');\n    if (element[options.elementsKey] && element[options.elementsKey].length) {\n      xml.push(writeElements(element[options.elementsKey], options, depth + 1));\n      currentElement = element;\n      currentElementName = element.name;\n    }\n    xml.push(options.spaces && hasContent(element, options) ? '\\n' + Array(depth + 1).join(options.spaces) : '');\n    xml.push('</' + elementName + '>');\n  } else {\n    xml.push('/>');\n  }\n  return xml.join('');\n}\n\nfunction writeElements(elements, options, depth, firstLine) {\n  return elements.reduce(function (xml, element) {\n    var indent = writeIndentation(options, depth, firstLine && !xml);\n    switch (element.type) {\n    case 'element': return xml + indent + writeElement(element, options, depth);\n    case 'comment': return xml + indent + writeComment(element[options.commentKey], options);\n    case 'doctype': return xml + indent + writeDoctype(element[options.doctypeKey], options);\n    case 'cdata': return xml + (options.indentCdata ? indent : '') + writeCdata(element[options.cdataKey], options);\n    case 'text': return xml + (options.indentText ? indent : '') + writeText(element[options.textKey], options);\n    case 'instruction':\n      var instruction = {};\n      instruction[element[options.nameKey]] = element[options.attributesKey] ? element : element[options.instructionKey];\n      return xml + (options.indentInstruction ? indent : '') + writeInstruction(instruction, options, depth);\n    }\n  }, '');\n}\n\nfunction hasContentCompact(element, options, anyContent) {\n  var key;\n  for (key in element) {\n    if (element.hasOwnProperty(key)) {\n      switch (key) {\n      case options.parentKey:\n      case options.attributesKey:\n        break; // skip to next key\n      case options.textKey:\n        if (options.indentText || anyContent) {\n          return true;\n        }\n        break; // skip to next key\n      case options.cdataKey:\n        if (options.indentCdata || anyContent) {\n          return true;\n        }\n        break; // skip to next key\n      case options.instructionKey:\n        if (options.indentInstruction || anyContent) {\n          return true;\n        }\n        break; // skip to next key\n      case options.doctypeKey:\n      case options.commentKey:\n        return true;\n      default:\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nfunction writeElementCompact(element, name, options, depth, indent) {\n  currentElement = element;\n  currentElementName = name;\n  var elementName = 'elementNameFn' in options ? options.elementNameFn(name, element) : name;\n  if (typeof element === 'undefined' || element === null || element === '') {\n    return 'fullTagEmptyElementFn' in options && options.fullTagEmptyElementFn(name, element) || options.fullTagEmptyElement ? '<' + elementName + '></' + elementName + '>' : '<' + elementName + '/>';\n  }\n  var xml = [];\n  if (name) {\n    xml.push('<' + elementName);\n    if (typeof element !== 'object') {\n      xml.push('>' + writeText(element,options) + '</' + elementName + '>');\n      return xml.join('');\n    }\n    if (element[options.attributesKey]) {\n      xml.push(writeAttributes(element[options.attributesKey], options, depth));\n    }\n    var withClosingTag = hasContentCompact(element, options, true) || element[options.attributesKey] && element[options.attributesKey]['xml:space'] === 'preserve';\n    if (!withClosingTag) {\n      if ('fullTagEmptyElementFn' in options) {\n        withClosingTag = options.fullTagEmptyElementFn(name, element);\n      } else {\n        withClosingTag = options.fullTagEmptyElement;\n      }\n    }\n    if (withClosingTag) {\n      xml.push('>');\n    } else {\n      xml.push('/>');\n      return xml.join('');\n    }\n  }\n  xml.push(writeElementsCompact(element, options, depth + 1, false));\n  currentElement = element;\n  currentElementName = name;\n  if (name) {\n    xml.push((indent ? writeIndentation(options, depth, false) : '') + '</' + elementName + '>');\n  }\n  return xml.join('');\n}\n\nfunction writeElementsCompact(element, options, depth, firstLine) {\n  var i, key, nodes, xml = [];\n  for (key in element) {\n    if (element.hasOwnProperty(key)) {\n      nodes = isArray(element[key]) ? element[key] : [element[key]];\n      for (i = 0; i < nodes.length; ++i) {\n        switch (key) {\n        case options.declarationKey: xml.push(writeDeclaration(nodes[i], options, depth)); break;\n        case options.instructionKey: xml.push((options.indentInstruction ? writeIndentation(options, depth, firstLine) : '') + writeInstruction(nodes[i], options, depth)); break;\n        case options.attributesKey: case options.parentKey: break; // skip\n        case options.textKey: xml.push((options.indentText ? writeIndentation(options, depth, firstLine) : '') + writeText(nodes[i], options)); break;\n        case options.cdataKey: xml.push((options.indentCdata ? writeIndentation(options, depth, firstLine) : '') + writeCdata(nodes[i], options)); break;\n        case options.doctypeKey: xml.push(writeIndentation(options, depth, firstLine) + writeDoctype(nodes[i], options)); break;\n        case options.commentKey: xml.push(writeIndentation(options, depth, firstLine) + writeComment(nodes[i], options)); break;\n        default: xml.push(writeIndentation(options, depth, firstLine) + writeElementCompact(nodes[i], key, options, depth, hasContentCompact(nodes[i], options)));\n        }\n        firstLine = firstLine && !xml.length;\n      }\n    }\n  }\n  return xml.join('');\n}\n\nmodule.exports = function (js, options) {\n  options = validateOptions(options);\n  var xml = [];\n  currentElement = js;\n  currentElementName = '_root_';\n  if (options.compact) {\n    xml.push(writeElementsCompact(js, options, 0, true));\n  } else {\n    if (js[options.declarationKey]) {\n      xml.push(writeDeclaration(js[options.declarationKey], options, 0));\n    }\n    if (js[options.elementsKey] && js[options.elementsKey].length) {\n      xml.push(writeElements(js[options.elementsKey], options, 0, !xml.length));\n    }\n  }\n  return xml.join('');\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/xml-js/lib/js2xml.js\n");

/***/ }),

/***/ "./node_modules/xml-js/lib/json2xml.js":
/*!*********************************************!*\
  !*** ./node_modules/xml-js/lib/json2xml.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(Buffer) {var js2xml = __webpack_require__(/*! ./js2xml.js */ \"./node_modules/xml-js/lib/js2xml.js\");\r\n\r\nmodule.exports = function (json, options) {\r\n  if (json instanceof Buffer) {\r\n    json = json.toString();\r\n  }\r\n  var js = null;\r\n  if (typeof (json) === 'string') {\r\n    try {\r\n      js = JSON.parse(json);\r\n    } catch (e) {\r\n      throw new Error('The JSON structure is invalid');\r\n    }\r\n  } else {\r\n    js = json;\r\n  }\r\n  return js2xml(js, options);\r\n};\r\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node-libs-browser/node_modules/buffer/index.js */ \"./node_modules/node-libs-browser/node_modules/buffer/index.js\").Buffer))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMveG1sLWpzL2xpYi9qc29uMnhtbC5qcz80OTNiIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLDJEQUFhLG1CQUFPLENBQUMsd0RBQWE7O0FBRWxDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy94bWwtanMvbGliL2pzb24yeG1sLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGpzMnhtbCA9IHJlcXVpcmUoJy4vanMyeG1sLmpzJyk7XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChqc29uLCBvcHRpb25zKSB7XHJcbiAgaWYgKGpzb24gaW5zdGFuY2VvZiBCdWZmZXIpIHtcclxuICAgIGpzb24gPSBqc29uLnRvU3RyaW5nKCk7XHJcbiAgfVxyXG4gIHZhciBqcyA9IG51bGw7XHJcbiAgaWYgKHR5cGVvZiAoanNvbikgPT09ICdzdHJpbmcnKSB7XHJcbiAgICB0cnkge1xyXG4gICAgICBqcyA9IEpTT04ucGFyc2UoanNvbik7XHJcbiAgICB9IGNhdGNoIChlKSB7XHJcbiAgICAgIHRocm93IG5ldyBFcnJvcignVGhlIEpTT04gc3RydWN0dXJlIGlzIGludmFsaWQnKTtcclxuICAgIH1cclxuICB9IGVsc2Uge1xyXG4gICAganMgPSBqc29uO1xyXG4gIH1cclxuICByZXR1cm4ganMyeG1sKGpzLCBvcHRpb25zKTtcclxufTtcclxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/xml-js/lib/json2xml.js\n");

/***/ }),

/***/ "./node_modules/xml-js/lib/options-helper.js":
/*!***************************************************!*\
  !*** ./node_modules/xml-js/lib/options-helper.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var isArray = __webpack_require__(/*! ./array-helper */ \"./node_modules/xml-js/lib/array-helper.js\").isArray;\r\n\r\nmodule.exports = {\r\n\r\n  copyOptions: function (options) {\r\n    var key, copy = {};\r\n    for (key in options) {\r\n      if (options.hasOwnProperty(key)) {\r\n        copy[key] = options[key];\r\n      }\r\n    }\r\n    return copy;\r\n  },\r\n\r\n  ensureFlagExists: function (item, options) {\r\n    if (!(item in options) || typeof options[item] !== 'boolean') {\r\n      options[item] = false;\r\n    }\r\n  },\r\n\r\n  ensureSpacesExists: function (options) {\r\n    if (!('spaces' in options) || (typeof options.spaces !== 'number' && typeof options.spaces !== 'string')) {\r\n      options.spaces = 0;\r\n    }\r\n  },\r\n\r\n  ensureAlwaysArrayExists: function (options) {\r\n    if (!('alwaysArray' in options) || (typeof options.alwaysArray !== 'boolean' && !isArray(options.alwaysArray))) {\r\n      options.alwaysArray = false;\r\n    }\r\n  },\r\n\r\n  ensureKeyExists: function (key, options) {\r\n    if (!(key + 'Key' in options) || typeof options[key + 'Key'] !== 'string') {\r\n      options[key + 'Key'] = options.compact ? '_' + key : key;\r\n    }\r\n  },\r\n\r\n  checkFnExists: function (key, options) {\r\n    return key + 'Fn' in options;\r\n  }\r\n\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMveG1sLWpzL2xpYi9vcHRpb25zLWhlbHBlci5qcz85NmMxIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGNBQWMsbUJBQU8sQ0FBQyxpRUFBZ0I7O0FBRXRDOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7O0FBRUEiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMveG1sLWpzL2xpYi9vcHRpb25zLWhlbHBlci5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBpc0FycmF5ID0gcmVxdWlyZSgnLi9hcnJheS1oZWxwZXInKS5pc0FycmF5O1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSB7XHJcblxyXG4gIGNvcHlPcHRpb25zOiBmdW5jdGlvbiAob3B0aW9ucykge1xyXG4gICAgdmFyIGtleSwgY29weSA9IHt9O1xyXG4gICAgZm9yIChrZXkgaW4gb3B0aW9ucykge1xyXG4gICAgICBpZiAob3B0aW9ucy5oYXNPd25Qcm9wZXJ0eShrZXkpKSB7XHJcbiAgICAgICAgY29weVtrZXldID0gb3B0aW9uc1trZXldO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICByZXR1cm4gY29weTtcclxuICB9LFxyXG5cclxuICBlbnN1cmVGbGFnRXhpc3RzOiBmdW5jdGlvbiAoaXRlbSwgb3B0aW9ucykge1xyXG4gICAgaWYgKCEoaXRlbSBpbiBvcHRpb25zKSB8fCB0eXBlb2Ygb3B0aW9uc1tpdGVtXSAhPT0gJ2Jvb2xlYW4nKSB7XHJcbiAgICAgIG9wdGlvbnNbaXRlbV0gPSBmYWxzZTtcclxuICAgIH1cclxuICB9LFxyXG5cclxuICBlbnN1cmVTcGFjZXNFeGlzdHM6IGZ1bmN0aW9uIChvcHRpb25zKSB7XHJcbiAgICBpZiAoISgnc3BhY2VzJyBpbiBvcHRpb25zKSB8fCAodHlwZW9mIG9wdGlvbnMuc3BhY2VzICE9PSAnbnVtYmVyJyAmJiB0eXBlb2Ygb3B0aW9ucy5zcGFjZXMgIT09ICdzdHJpbmcnKSkge1xyXG4gICAgICBvcHRpb25zLnNwYWNlcyA9IDA7XHJcbiAgICB9XHJcbiAgfSxcclxuXHJcbiAgZW5zdXJlQWx3YXlzQXJyYXlFeGlzdHM6IGZ1bmN0aW9uIChvcHRpb25zKSB7XHJcbiAgICBpZiAoISgnYWx3YXlzQXJyYXknIGluIG9wdGlvbnMpIHx8ICh0eXBlb2Ygb3B0aW9ucy5hbHdheXNBcnJheSAhPT0gJ2Jvb2xlYW4nICYmICFpc0FycmF5KG9wdGlvbnMuYWx3YXlzQXJyYXkpKSkge1xyXG4gICAgICBvcHRpb25zLmFsd2F5c0FycmF5ID0gZmFsc2U7XHJcbiAgICB9XHJcbiAgfSxcclxuXHJcbiAgZW5zdXJlS2V5RXhpc3RzOiBmdW5jdGlvbiAoa2V5LCBvcHRpb25zKSB7XHJcbiAgICBpZiAoIShrZXkgKyAnS2V5JyBpbiBvcHRpb25zKSB8fCB0eXBlb2Ygb3B0aW9uc1trZXkgKyAnS2V5J10gIT09ICdzdHJpbmcnKSB7XHJcbiAgICAgIG9wdGlvbnNba2V5ICsgJ0tleSddID0gb3B0aW9ucy5jb21wYWN0ID8gJ18nICsga2V5IDoga2V5O1xyXG4gICAgfVxyXG4gIH0sXHJcblxyXG4gIGNoZWNrRm5FeGlzdHM6IGZ1bmN0aW9uIChrZXksIG9wdGlvbnMpIHtcclxuICAgIHJldHVybiBrZXkgKyAnRm4nIGluIG9wdGlvbnM7XHJcbiAgfVxyXG5cclxufTtcclxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/xml-js/lib/options-helper.js\n");

/***/ }),

/***/ "./node_modules/xml-js/lib/xml2js.js":
/*!*******************************************!*\
  !*** ./node_modules/xml-js/lib/xml2js.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var sax = __webpack_require__(/*! sax */ \"./node_modules/xml-js/node_modules/sax/lib/sax.js\");\r\nvar expat /*= require('node-expat');*/ = { on: function () { }, parse: function () { } };\r\nvar helper = __webpack_require__(/*! ./options-helper */ \"./node_modules/xml-js/lib/options-helper.js\");\r\nvar isArray = __webpack_require__(/*! ./array-helper */ \"./node_modules/xml-js/lib/array-helper.js\").isArray;\r\n\r\nvar options;\r\nvar pureJsParser = true;\r\nvar currentElement;\r\n\r\nfunction validateOptions(userOptions) {\r\n  options = helper.copyOptions(userOptions);\r\n  helper.ensureFlagExists('ignoreDeclaration', options);\r\n  helper.ensureFlagExists('ignoreInstruction', options);\r\n  helper.ensureFlagExists('ignoreAttributes', options);\r\n  helper.ensureFlagExists('ignoreText', options);\r\n  helper.ensureFlagExists('ignoreComment', options);\r\n  helper.ensureFlagExists('ignoreCdata', options);\r\n  helper.ensureFlagExists('ignoreDoctype', options);\r\n  helper.ensureFlagExists('compact', options);\r\n  helper.ensureFlagExists('alwaysChildren', options);\r\n  helper.ensureFlagExists('addParent', options);\r\n  helper.ensureFlagExists('trim', options);\r\n  helper.ensureFlagExists('nativeType', options);\r\n  helper.ensureFlagExists('nativeTypeAttributes', options);\r\n  helper.ensureFlagExists('sanitize', options);\r\n  helper.ensureFlagExists('instructionHasAttributes', options);\r\n  helper.ensureFlagExists('captureSpacesBetweenElements', options);\r\n  helper.ensureAlwaysArrayExists(options);\r\n  helper.ensureKeyExists('declaration', options);\r\n  helper.ensureKeyExists('instruction', options);\r\n  helper.ensureKeyExists('attributes', options);\r\n  helper.ensureKeyExists('text', options);\r\n  helper.ensureKeyExists('comment', options);\r\n  helper.ensureKeyExists('cdata', options);\r\n  helper.ensureKeyExists('doctype', options);\r\n  helper.ensureKeyExists('type', options);\r\n  helper.ensureKeyExists('name', options);\r\n  helper.ensureKeyExists('elements', options);\r\n  helper.ensureKeyExists('parent', options);\r\n  helper.checkFnExists('doctype', options);\r\n  helper.checkFnExists('instruction', options);\r\n  helper.checkFnExists('cdata', options);\r\n  helper.checkFnExists('comment', options);\r\n  helper.checkFnExists('text', options);\r\n  helper.checkFnExists('instructionName', options);\r\n  helper.checkFnExists('elementName', options);\r\n  helper.checkFnExists('attributeName', options);\r\n  helper.checkFnExists('attributeValue', options);\r\n  helper.checkFnExists('attributes', options);\r\n  return options;\r\n}\r\n\r\nfunction nativeType(value) {\r\n  var nValue = Number(value);\r\n  if (!isNaN(nValue)) {\r\n    return nValue;\r\n  }\r\n  var bValue = value.toLowerCase();\r\n  if (bValue === 'true') {\r\n    return true;\r\n  } else if (bValue === 'false') {\r\n    return false;\r\n  }\r\n  return value;\r\n}\r\n\r\nfunction addField(type, value) {\r\n  var key;\r\n  if (options.compact) {\r\n    if (\r\n      !currentElement[options[type + 'Key']] &&\r\n      (isArray(options.alwaysArray) ? options.alwaysArray.indexOf(options[type + 'Key']) !== -1 : options.alwaysArray)\r\n    ) {\r\n      currentElement[options[type + 'Key']] = [];\r\n    }\r\n    if (currentElement[options[type + 'Key']] && !isArray(currentElement[options[type + 'Key']])) {\r\n      currentElement[options[type + 'Key']] = [currentElement[options[type + 'Key']]];\r\n    }\r\n    if (type + 'Fn' in options && typeof value === 'string') {\r\n      value = options[type + 'Fn'](value, currentElement);\r\n    }\r\n    if (type === 'instruction' && ('instructionFn' in options || 'instructionNameFn' in options)) {\r\n      for (key in value) {\r\n        if (value.hasOwnProperty(key)) {\r\n          if ('instructionFn' in options) {\r\n            value[key] = options.instructionFn(value[key], key, currentElement);\r\n          } else {\r\n            var temp = value[key];\r\n            delete value[key];\r\n            value[options.instructionNameFn(key, temp, currentElement)] = temp;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (isArray(currentElement[options[type + 'Key']])) {\r\n      currentElement[options[type + 'Key']].push(value);\r\n    } else {\r\n      currentElement[options[type + 'Key']] = value;\r\n    }\r\n  } else {\r\n    if (!currentElement[options.elementsKey]) {\r\n      currentElement[options.elementsKey] = [];\r\n    }\r\n    var element = {};\r\n    element[options.typeKey] = type;\r\n    if (type === 'instruction') {\r\n      for (key in value) {\r\n        if (value.hasOwnProperty(key)) {\r\n          break;\r\n        }\r\n      }\r\n      element[options.nameKey] = 'instructionNameFn' in options ? options.instructionNameFn(key, value, currentElement) : key;\r\n      if (options.instructionHasAttributes) {\r\n        element[options.attributesKey] = value[key][options.attributesKey];\r\n        if ('instructionFn' in options) {\r\n          element[options.attributesKey] = options.instructionFn(element[options.attributesKey], key, currentElement);\r\n        }\r\n      } else {\r\n        if ('instructionFn' in options) {\r\n          value[key] = options.instructionFn(value[key], key, currentElement);\r\n        }\r\n        element[options.instructionKey] = value[key];\r\n      }\r\n    } else {\r\n      if (type + 'Fn' in options) {\r\n        value = options[type + 'Fn'](value, currentElement);\r\n      }\r\n      element[options[type + 'Key']] = value;\r\n    }\r\n    if (options.addParent) {\r\n      element[options.parentKey] = currentElement;\r\n    }\r\n    currentElement[options.elementsKey].push(element);\r\n  }\r\n}\r\n\r\nfunction manipulateAttributes(attributes) {\r\n  if ('attributesFn' in options && attributes) {\r\n    attributes = options.attributesFn(attributes, currentElement);\r\n  }\r\n  if ((options.trim || 'attributeValueFn' in options || 'attributeNameFn' in options || options.nativeTypeAttributes) && attributes) {\r\n    var key;\r\n    for (key in attributes) {\r\n      if (attributes.hasOwnProperty(key)) {\r\n        if (options.trim) attributes[key] = attributes[key].trim();\r\n        if (options.nativeTypeAttributes) {\r\n          attributes[key] = nativeType(attributes[key]);\r\n        }\r\n        if ('attributeValueFn' in options) attributes[key] = options.attributeValueFn(attributes[key], key, currentElement);\r\n        if ('attributeNameFn' in options) {\r\n          var temp = attributes[key];\r\n          delete attributes[key];\r\n          attributes[options.attributeNameFn(key, attributes[key], currentElement)] = temp;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return attributes;\r\n}\r\n\r\nfunction onInstruction(instruction) {\r\n  var attributes = {};\r\n  if (instruction.body && (instruction.name.toLowerCase() === 'xml' || options.instructionHasAttributes)) {\r\n    var attrsRegExp = /([\\w:-]+)\\s*=\\s*(?:\"([^\"]*)\"|'([^']*)'|(\\w+))\\s*/g;\r\n    var match;\r\n    while ((match = attrsRegExp.exec(instruction.body)) !== null) {\r\n      attributes[match[1]] = match[2] || match[3] || match[4];\r\n    }\r\n    attributes = manipulateAttributes(attributes);\r\n  }\r\n  if (instruction.name.toLowerCase() === 'xml') {\r\n    if (options.ignoreDeclaration) {\r\n      return;\r\n    }\r\n    currentElement[options.declarationKey] = {};\r\n    if (Object.keys(attributes).length) {\r\n      currentElement[options.declarationKey][options.attributesKey] = attributes;\r\n    }\r\n    if (options.addParent) {\r\n      currentElement[options.declarationKey][options.parentKey] = currentElement;\r\n    }\r\n  } else {\r\n    if (options.ignoreInstruction) {\r\n      return;\r\n    }\r\n    if (options.trim) {\r\n      instruction.body = instruction.body.trim();\r\n    }\r\n    var value = {};\r\n    if (options.instructionHasAttributes && Object.keys(attributes).length) {\r\n      value[instruction.name] = {};\r\n      value[instruction.name][options.attributesKey] = attributes;\r\n    } else {\r\n      value[instruction.name] = instruction.body;\r\n    }\r\n    addField('instruction', value);\r\n  }\r\n}\r\n\r\nfunction onStartElement(name, attributes) {\r\n  var element;\r\n  if (typeof name === 'object') {\r\n    attributes = name.attributes;\r\n    name = name.name;\r\n  }\r\n  attributes = manipulateAttributes(attributes);\r\n  if ('elementNameFn' in options) {\r\n    name = options.elementNameFn(name, currentElement);\r\n  }\r\n  if (options.compact) {\r\n    element = {};\r\n    if (!options.ignoreAttributes && attributes && Object.keys(attributes).length) {\r\n      element[options.attributesKey] = {};\r\n      var key;\r\n      for (key in attributes) {\r\n        if (attributes.hasOwnProperty(key)) {\r\n          element[options.attributesKey][key] = attributes[key];\r\n        }\r\n      }\r\n    }\r\n    if (\r\n      !(name in currentElement) &&\r\n      (isArray(options.alwaysArray) ? options.alwaysArray.indexOf(name) !== -1 : options.alwaysArray)\r\n    ) {\r\n      currentElement[name] = [];\r\n    }\r\n    if (currentElement[name] && !isArray(currentElement[name])) {\r\n      currentElement[name] = [currentElement[name]];\r\n    }\r\n    if (isArray(currentElement[name])) {\r\n      currentElement[name].push(element);\r\n    } else {\r\n      currentElement[name] = element;\r\n    }\r\n  } else {\r\n    if (!currentElement[options.elementsKey]) {\r\n      currentElement[options.elementsKey] = [];\r\n    }\r\n    element = {};\r\n    element[options.typeKey] = 'element';\r\n    element[options.nameKey] = name;\r\n    if (!options.ignoreAttributes && attributes && Object.keys(attributes).length) {\r\n      element[options.attributesKey] = attributes;\r\n    }\r\n    if (options.alwaysChildren) {\r\n      element[options.elementsKey] = [];\r\n    }\r\n    currentElement[options.elementsKey].push(element);\r\n  }\r\n  element[options.parentKey] = currentElement; // will be deleted in onEndElement() if !options.addParent\r\n  currentElement = element;\r\n}\r\n\r\nfunction onText(text) {\r\n  if (options.ignoreText) {\r\n    return;\r\n  }\r\n  if (!text.trim() && !options.captureSpacesBetweenElements) {\r\n    return;\r\n  }\r\n  if (options.trim) {\r\n    text = text.trim();\r\n  }\r\n  if (options.nativeType) {\r\n    text = nativeType(text);\r\n  }\r\n  if (options.sanitize) {\r\n    text = text.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\r\n  }\r\n  addField('text', text);\r\n}\r\n\r\nfunction onComment(comment) {\r\n  if (options.ignoreComment) {\r\n    return;\r\n  }\r\n  if (options.trim) {\r\n    comment = comment.trim();\r\n  }\r\n  addField('comment', comment);\r\n}\r\n\r\nfunction onEndElement(name) {\r\n  var parentElement = currentElement[options.parentKey];\r\n  if (!options.addParent) {\r\n    delete currentElement[options.parentKey];\r\n  }\r\n  currentElement = parentElement;\r\n}\r\n\r\nfunction onCdata(cdata) {\r\n  if (options.ignoreCdata) {\r\n    return;\r\n  }\r\n  if (options.trim) {\r\n    cdata = cdata.trim();\r\n  }\r\n  addField('cdata', cdata);\r\n}\r\n\r\nfunction onDoctype(doctype) {\r\n  if (options.ignoreDoctype) {\r\n    return;\r\n  }\r\n  doctype = doctype.replace(/^ /, '');\r\n  if (options.trim) {\r\n    doctype = doctype.trim();\r\n  }\r\n  addField('doctype', doctype);\r\n}\r\n\r\nfunction onError(error) {\r\n  error.note = error; //console.error(error);\r\n}\r\n\r\nmodule.exports = function (xml, userOptions) {\r\n\r\n  var parser = pureJsParser ? sax.parser(true, {}) : parser = new expat.Parser('UTF-8');\r\n  var result = {};\r\n  currentElement = result;\r\n\r\n  options = validateOptions(userOptions);\r\n\r\n  if (pureJsParser) {\r\n    parser.opt = {strictEntities: true};\r\n    parser.onopentag = onStartElement;\r\n    parser.ontext = onText;\r\n    parser.oncomment = onComment;\r\n    parser.onclosetag = onEndElement;\r\n    parser.onerror = onError;\r\n    parser.oncdata = onCdata;\r\n    parser.ondoctype = onDoctype;\r\n    parser.onprocessinginstruction = onInstruction;\r\n  } else {\r\n    parser.on('startElement', onStartElement);\r\n    parser.on('text', onText);\r\n    parser.on('comment', onComment);\r\n    parser.on('endElement', onEndElement);\r\n    parser.on('error', onError);\r\n    //parser.on('startCdata', onStartCdata);\r\n    //parser.on('endCdata', onEndCdata);\r\n    //parser.on('entityDecl', onEntityDecl);\r\n  }\r\n\r\n  if (pureJsParser) {\r\n    parser.write(xml).close();\r\n  } else {\r\n    if (!parser.parse(xml)) {\r\n      throw new Error('XML parsing error: ' + parser.getError());\r\n    }\r\n  }\r\n\r\n  if (result[options.elementsKey]) {\r\n    var temp = result[options.elementsKey];\r\n    delete result[options.elementsKey];\r\n    result[options.elementsKey] = temp;\r\n    delete result.text;\r\n  }\r\n\r\n  return result;\r\n\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/xml-js/lib/xml2js.js\n");

/***/ }),

/***/ "./node_modules/xml-js/lib/xml2json.js":
/*!*********************************************!*\
  !*** ./node_modules/xml-js/lib/xml2json.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var helper = __webpack_require__(/*! ./options-helper */ \"./node_modules/xml-js/lib/options-helper.js\");\r\nvar xml2js = __webpack_require__(/*! ./xml2js */ \"./node_modules/xml-js/lib/xml2js.js\");\r\n\r\nfunction validateOptions (userOptions) {\r\n  var options = helper.copyOptions(userOptions);\r\n  helper.ensureSpacesExists(options);\r\n  return options;\r\n}\r\n\r\nmodule.exports = function(xml, userOptions) {\r\n  var options, js, json, parentKey;\r\n  options = validateOptions(userOptions);\r\n  js = xml2js(xml, options);\r\n  parentKey = 'compact' in options && options.compact ? '_parent' : 'parent';\r\n  // parentKey = ptions.compact ? '_parent' : 'parent'; // consider this\r\n  if ('addParent' in options && options.addParent) {\r\n    json = JSON.stringify(js, function (k, v) { return k === parentKey? '_' : v; }, options.spaces);\r\n  } else {\r\n    json = JSON.stringify(js, null, options.spaces);\r\n  }\r\n  return json.replace(/\\u2028/g, '\\\\u2028').replace(/\\u2029/g, '\\\\u2029');\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMveG1sLWpzL2xpYi94bWwyanNvbi5qcz8wNzhhIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGFBQWEsbUJBQU8sQ0FBQyxxRUFBa0I7QUFDdkMsYUFBYSxtQkFBTyxDQUFDLHFEQUFVOztBQUUvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1REFBdUQ7QUFDdkQ7QUFDQSwrQ0FBK0MsaUNBQWlDLEVBQUU7QUFDbEYsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL3htbC1qcy9saWIveG1sMmpzb24uanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgaGVscGVyID0gcmVxdWlyZSgnLi9vcHRpb25zLWhlbHBlcicpO1xyXG52YXIgeG1sMmpzID0gcmVxdWlyZSgnLi94bWwyanMnKTtcclxuXHJcbmZ1bmN0aW9uIHZhbGlkYXRlT3B0aW9ucyAodXNlck9wdGlvbnMpIHtcclxuICB2YXIgb3B0aW9ucyA9IGhlbHBlci5jb3B5T3B0aW9ucyh1c2VyT3B0aW9ucyk7XHJcbiAgaGVscGVyLmVuc3VyZVNwYWNlc0V4aXN0cyhvcHRpb25zKTtcclxuICByZXR1cm4gb3B0aW9ucztcclxufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbih4bWwsIHVzZXJPcHRpb25zKSB7XHJcbiAgdmFyIG9wdGlvbnMsIGpzLCBqc29uLCBwYXJlbnRLZXk7XHJcbiAgb3B0aW9ucyA9IHZhbGlkYXRlT3B0aW9ucyh1c2VyT3B0aW9ucyk7XHJcbiAganMgPSB4bWwyanMoeG1sLCBvcHRpb25zKTtcclxuICBwYXJlbnRLZXkgPSAnY29tcGFjdCcgaW4gb3B0aW9ucyAmJiBvcHRpb25zLmNvbXBhY3QgPyAnX3BhcmVudCcgOiAncGFyZW50JztcclxuICAvLyBwYXJlbnRLZXkgPSBwdGlvbnMuY29tcGFjdCA/ICdfcGFyZW50JyA6ICdwYXJlbnQnOyAvLyBjb25zaWRlciB0aGlzXHJcbiAgaWYgKCdhZGRQYXJlbnQnIGluIG9wdGlvbnMgJiYgb3B0aW9ucy5hZGRQYXJlbnQpIHtcclxuICAgIGpzb24gPSBKU09OLnN0cmluZ2lmeShqcywgZnVuY3Rpb24gKGssIHYpIHsgcmV0dXJuIGsgPT09IHBhcmVudEtleT8gJ18nIDogdjsgfSwgb3B0aW9ucy5zcGFjZXMpO1xyXG4gIH0gZWxzZSB7XHJcbiAgICBqc29uID0gSlNPTi5zdHJpbmdpZnkoanMsIG51bGwsIG9wdGlvbnMuc3BhY2VzKTtcclxuICB9XHJcbiAgcmV0dXJuIGpzb24ucmVwbGFjZSgvXFx1MjAyOC9nLCAnXFxcXHUyMDI4JykucmVwbGFjZSgvXFx1MjAyOS9nLCAnXFxcXHUyMDI5Jyk7XHJcbn07XHJcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/xml-js/lib/xml2json.js\n");

/***/ }),

/***/ "./node_modules/xml-js/node_modules/sax/lib/sax.js":
/*!*********************************************************!*\
  !*** ./node_modules/xml-js/node_modules/sax/lib/sax.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(Buffer) {;(function (sax) { // wrapper for non-node envs\n  sax.parser = function (strict, opt) { return new SAXParser(strict, opt) }\n  sax.SAXParser = SAXParser\n  sax.SAXStream = SAXStream\n  sax.createStream = createStream\n\n  // When we pass the MAX_BUFFER_LENGTH position, start checking for buffer overruns.\n  // When we check, schedule the next check for MAX_BUFFER_LENGTH - (max(buffer lengths)),\n  // since that's the earliest that a buffer overrun could occur.  This way, checks are\n  // as rare as required, but as often as necessary to ensure never crossing this bound.\n  // Furthermore, buffers are only tested at most once per write(), so passing a very\n  // large string into write() might have undesirable effects, but this is manageable by\n  // the caller, so it is assumed to be safe.  Thus, a call to write() may, in the extreme\n  // edge case, result in creating at most one complete copy of the string passed in.\n  // Set to Infinity to have unlimited buffers.\n  sax.MAX_BUFFER_LENGTH = 64 * 1024\n\n  var buffers = [\n    'comment', 'sgmlDecl', 'textNode', 'tagName', 'doctype',\n    'procInstName', 'procInstBody', 'entity', 'attribName',\n    'attribValue', 'cdata', 'script'\n  ]\n\n  sax.EVENTS = [\n    'text',\n    'processinginstruction',\n    'sgmldeclaration',\n    'doctype',\n    'comment',\n    'opentagstart',\n    'attribute',\n    'opentag',\n    'closetag',\n    'opencdata',\n    'cdata',\n    'closecdata',\n    'error',\n    'end',\n    'ready',\n    'script',\n    'opennamespace',\n    'closenamespace'\n  ]\n\n  function SAXParser (strict, opt) {\n    if (!(this instanceof SAXParser)) {\n      return new SAXParser(strict, opt)\n    }\n\n    var parser = this\n    clearBuffers(parser)\n    parser.q = parser.c = ''\n    parser.bufferCheckPosition = sax.MAX_BUFFER_LENGTH\n    parser.opt = opt || {}\n    parser.opt.lowercase = parser.opt.lowercase || parser.opt.lowercasetags\n    parser.looseCase = parser.opt.lowercase ? 'toLowerCase' : 'toUpperCase'\n    parser.tags = []\n    parser.closed = parser.closedRoot = parser.sawRoot = false\n    parser.tag = parser.error = null\n    parser.strict = !!strict\n    parser.noscript = !!(strict || parser.opt.noscript)\n    parser.state = S.BEGIN\n    parser.strictEntities = parser.opt.strictEntities\n    parser.ENTITIES = parser.strictEntities ? Object.create(sax.XML_ENTITIES) : Object.create(sax.ENTITIES)\n    parser.attribList = []\n\n    // namespaces form a prototype chain.\n    // it always points at the current tag,\n    // which protos to its parent tag.\n    if (parser.opt.xmlns) {\n      parser.ns = Object.create(rootNS)\n    }\n\n    // mostly just for error reporting\n    parser.trackPosition = parser.opt.position !== false\n    if (parser.trackPosition) {\n      parser.position = parser.line = parser.column = 0\n    }\n    emit(parser, 'onready')\n  }\n\n  if (!Object.create) {\n    Object.create = function (o) {\n      function F () {}\n      F.prototype = o\n      var newf = new F()\n      return newf\n    }\n  }\n\n  if (!Object.keys) {\n    Object.keys = function (o) {\n      var a = []\n      for (var i in o) if (o.hasOwnProperty(i)) a.push(i)\n      return a\n    }\n  }\n\n  function checkBufferLength (parser) {\n    var maxAllowed = Math.max(sax.MAX_BUFFER_LENGTH, 10)\n    var maxActual = 0\n    for (var i = 0, l = buffers.length; i < l; i++) {\n      var len = parser[buffers[i]].length\n      if (len > maxAllowed) {\n        // Text/cdata nodes can get big, and since they're buffered,\n        // we can get here under normal conditions.\n        // Avoid issues by emitting the text node now,\n        // so at least it won't get any bigger.\n        switch (buffers[i]) {\n          case 'textNode':\n            closeText(parser)\n            break\n\n          case 'cdata':\n            emitNode(parser, 'oncdata', parser.cdata)\n            parser.cdata = ''\n            break\n\n          case 'script':\n            emitNode(parser, 'onscript', parser.script)\n            parser.script = ''\n            break\n\n          default:\n            error(parser, 'Max buffer length exceeded: ' + buffers[i])\n        }\n      }\n      maxActual = Math.max(maxActual, len)\n    }\n    // schedule the next check for the earliest possible buffer overrun.\n    var m = sax.MAX_BUFFER_LENGTH - maxActual\n    parser.bufferCheckPosition = m + parser.position\n  }\n\n  function clearBuffers (parser) {\n    for (var i = 0, l = buffers.length; i < l; i++) {\n      parser[buffers[i]] = ''\n    }\n  }\n\n  function flushBuffers (parser) {\n    closeText(parser)\n    if (parser.cdata !== '') {\n      emitNode(parser, 'oncdata', parser.cdata)\n      parser.cdata = ''\n    }\n    if (parser.script !== '') {\n      emitNode(parser, 'onscript', parser.script)\n      parser.script = ''\n    }\n  }\n\n  SAXParser.prototype = {\n    end: function () { end(this) },\n    write: write,\n    resume: function () { this.error = null; return this },\n    close: function () { return this.write(null) },\n    flush: function () { flushBuffers(this) }\n  }\n\n  var Stream\n  try {\n    Stream = __webpack_require__(/*! stream */ \"./node_modules/stream-browserify/index.js\").Stream\n  } catch (ex) {\n    Stream = function () {}\n  }\n\n  var streamWraps = sax.EVENTS.filter(function (ev) {\n    return ev !== 'error' && ev !== 'end'\n  })\n\n  function createStream (strict, opt) {\n    return new SAXStream(strict, opt)\n  }\n\n  function SAXStream (strict, opt) {\n    if (!(this instanceof SAXStream)) {\n      return new SAXStream(strict, opt)\n    }\n\n    Stream.apply(this)\n\n    this._parser = new SAXParser(strict, opt)\n    this.writable = true\n    this.readable = true\n\n    var me = this\n\n    this._parser.onend = function () {\n      me.emit('end')\n    }\n\n    this._parser.onerror = function (er) {\n      me.emit('error', er)\n\n      // if didn't throw, then means error was handled.\n      // go ahead and clear error, so we can write again.\n      me._parser.error = null\n    }\n\n    this._decoder = null\n\n    streamWraps.forEach(function (ev) {\n      Object.defineProperty(me, 'on' + ev, {\n        get: function () {\n          return me._parser['on' + ev]\n        },\n        set: function (h) {\n          if (!h) {\n            me.removeAllListeners(ev)\n            me._parser['on' + ev] = h\n            return h\n          }\n          me.on(ev, h)\n        },\n        enumerable: true,\n        configurable: false\n      })\n    })\n  }\n\n  SAXStream.prototype = Object.create(Stream.prototype, {\n    constructor: {\n      value: SAXStream\n    }\n  })\n\n  SAXStream.prototype.write = function (data) {\n    if (typeof Buffer === 'function' &&\n      typeof Buffer.isBuffer === 'function' &&\n      Buffer.isBuffer(data)) {\n      if (!this._decoder) {\n        var SD = __webpack_require__(/*! string_decoder */ \"./node_modules/string_decoder/lib/string_decoder.js\").StringDecoder\n        this._decoder = new SD('utf8')\n      }\n      data = this._decoder.write(data)\n    }\n\n    this._parser.write(data.toString())\n    this.emit('data', data)\n    return true\n  }\n\n  SAXStream.prototype.end = function (chunk) {\n    if (chunk && chunk.length) {\n      this.write(chunk)\n    }\n    this._parser.end()\n    return true\n  }\n\n  SAXStream.prototype.on = function (ev, handler) {\n    var me = this\n    if (!me._parser['on' + ev] && streamWraps.indexOf(ev) !== -1) {\n      me._parser['on' + ev] = function () {\n        var args = arguments.length === 1 ? [arguments[0]] : Array.apply(null, arguments)\n        args.splice(0, 0, ev)\n        me.emit.apply(me, args)\n      }\n    }\n\n    return Stream.prototype.on.call(me, ev, handler)\n  }\n\n  // this really needs to be replaced with character classes.\n  // XML allows all manner of ridiculous numbers and digits.\n  var CDATA = '[CDATA['\n  var DOCTYPE = 'DOCTYPE'\n  var XML_NAMESPACE = 'http://www.w3.org/XML/1998/namespace'\n  var XMLNS_NAMESPACE = 'http://www.w3.org/2000/xmlns/'\n  var rootNS = { xml: XML_NAMESPACE, xmlns: XMLNS_NAMESPACE }\n\n  // http://www.w3.org/TR/REC-xml/#NT-NameStartChar\n  // This implementation works on strings, a single character at a time\n  // as such, it cannot ever support astral-plane characters (10000-EFFFF)\n  // without a significant breaking change to either this  parser, or the\n  // JavaScript language.  Implementation of an emoji-capable xml parser\n  // is left as an exercise for the reader.\n  var nameStart = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/\n\n  var nameBody = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040.\\d-]/\n\n  var entityStart = /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/\n  var entityBody = /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040.\\d-]/\n\n  function isWhitespace (c) {\n    return c === ' ' || c === '\\n' || c === '\\r' || c === '\\t'\n  }\n\n  function isQuote (c) {\n    return c === '\"' || c === '\\''\n  }\n\n  function isAttribEnd (c) {\n    return c === '>' || isWhitespace(c)\n  }\n\n  function isMatch (regex, c) {\n    return regex.test(c)\n  }\n\n  function notMatch (regex, c) {\n    return !isMatch(regex, c)\n  }\n\n  var S = 0\n  sax.STATE = {\n    BEGIN: S++, // leading byte order mark or whitespace\n    BEGIN_WHITESPACE: S++, // leading whitespace\n    TEXT: S++, // general stuff\n    TEXT_ENTITY: S++, // &amp and such.\n    OPEN_WAKA: S++, // <\n    SGML_DECL: S++, // <!BLARG\n    SGML_DECL_QUOTED: S++, // <!BLARG foo \"bar\n    DOCTYPE: S++, // <!DOCTYPE\n    DOCTYPE_QUOTED: S++, // <!DOCTYPE \"//blah\n    DOCTYPE_DTD: S++, // <!DOCTYPE \"//blah\" [ ...\n    DOCTYPE_DTD_QUOTED: S++, // <!DOCTYPE \"//blah\" [ \"foo\n    COMMENT_STARTING: S++, // <!-\n    COMMENT: S++, // <!--\n    COMMENT_ENDING: S++, // <!-- blah -\n    COMMENT_ENDED: S++, // <!-- blah --\n    CDATA: S++, // <![CDATA[ something\n    CDATA_ENDING: S++, // ]\n    CDATA_ENDING_2: S++, // ]]\n    PROC_INST: S++, // <?hi\n    PROC_INST_BODY: S++, // <?hi there\n    PROC_INST_ENDING: S++, // <?hi \"there\" ?\n    OPEN_TAG: S++, // <strong\n    OPEN_TAG_SLASH: S++, // <strong /\n    ATTRIB: S++, // <a\n    ATTRIB_NAME: S++, // <a foo\n    ATTRIB_NAME_SAW_WHITE: S++, // <a foo _\n    ATTRIB_VALUE: S++, // <a foo=\n    ATTRIB_VALUE_QUOTED: S++, // <a foo=\"bar\n    ATTRIB_VALUE_CLOSED: S++, // <a foo=\"bar\"\n    ATTRIB_VALUE_UNQUOTED: S++, // <a foo=bar\n    ATTRIB_VALUE_ENTITY_Q: S++, // <foo bar=\"&quot;\"\n    ATTRIB_VALUE_ENTITY_U: S++, // <foo bar=&quot\n    CLOSE_TAG: S++, // </a\n    CLOSE_TAG_SAW_WHITE: S++, // </a   >\n    SCRIPT: S++, // <script> ...\n    SCRIPT_ENDING: S++ // <script> ... <\n  }\n\n  sax.XML_ENTITIES = {\n    'amp': '&',\n    'gt': '>',\n    'lt': '<',\n    'quot': '\"',\n    'apos': \"'\"\n  }\n\n  sax.ENTITIES = {\n    'amp': '&',\n    'gt': '>',\n    'lt': '<',\n    'quot': '\"',\n    'apos': \"'\",\n    'AElig': 198,\n    'Aacute': 193,\n    'Acirc': 194,\n    'Agrave': 192,\n    'Aring': 197,\n    'Atilde': 195,\n    'Auml': 196,\n    'Ccedil': 199,\n    'ETH': 208,\n    'Eacute': 201,\n    'Ecirc': 202,\n    'Egrave': 200,\n    'Euml': 203,\n    'Iacute': 205,\n    'Icirc': 206,\n    'Igrave': 204,\n    'Iuml': 207,\n    'Ntilde': 209,\n    'Oacute': 211,\n    'Ocirc': 212,\n    'Ograve': 210,\n    'Oslash': 216,\n    'Otilde': 213,\n    'Ouml': 214,\n    'THORN': 222,\n    'Uacute': 218,\n    'Ucirc': 219,\n    'Ugrave': 217,\n    'Uuml': 220,\n    'Yacute': 221,\n    'aacute': 225,\n    'acirc': 226,\n    'aelig': 230,\n    'agrave': 224,\n    'aring': 229,\n    'atilde': 227,\n    'auml': 228,\n    'ccedil': 231,\n    'eacute': 233,\n    'ecirc': 234,\n    'egrave': 232,\n    'eth': 240,\n    'euml': 235,\n    'iacute': 237,\n    'icirc': 238,\n    'igrave': 236,\n    'iuml': 239,\n    'ntilde': 241,\n    'oacute': 243,\n    'ocirc': 244,\n    'ograve': 242,\n    'oslash': 248,\n    'otilde': 245,\n    'ouml': 246,\n    'szlig': 223,\n    'thorn': 254,\n    'uacute': 250,\n    'ucirc': 251,\n    'ugrave': 249,\n    'uuml': 252,\n    'yacute': 253,\n    'yuml': 255,\n    'copy': 169,\n    'reg': 174,\n    'nbsp': 160,\n    'iexcl': 161,\n    'cent': 162,\n    'pound': 163,\n    'curren': 164,\n    'yen': 165,\n    'brvbar': 166,\n    'sect': 167,\n    'uml': 168,\n    'ordf': 170,\n    'laquo': 171,\n    'not': 172,\n    'shy': 173,\n    'macr': 175,\n    'deg': 176,\n    'plusmn': 177,\n    'sup1': 185,\n    'sup2': 178,\n    'sup3': 179,\n    'acute': 180,\n    'micro': 181,\n    'para': 182,\n    'middot': 183,\n    'cedil': 184,\n    'ordm': 186,\n    'raquo': 187,\n    'frac14': 188,\n    'frac12': 189,\n    'frac34': 190,\n    'iquest': 191,\n    'times': 215,\n    'divide': 247,\n    'OElig': 338,\n    'oelig': 339,\n    'Scaron': 352,\n    'scaron': 353,\n    'Yuml': 376,\n    'fnof': 402,\n    'circ': 710,\n    'tilde': 732,\n    'Alpha': 913,\n    'Beta': 914,\n    'Gamma': 915,\n    'Delta': 916,\n    'Epsilon': 917,\n    'Zeta': 918,\n    'Eta': 919,\n    'Theta': 920,\n    'Iota': 921,\n    'Kappa': 922,\n    'Lambda': 923,\n    'Mu': 924,\n    'Nu': 925,\n    'Xi': 926,\n    'Omicron': 927,\n    'Pi': 928,\n    'Rho': 929,\n    'Sigma': 931,\n    'Tau': 932,\n    'Upsilon': 933,\n    'Phi': 934,\n    'Chi': 935,\n    'Psi': 936,\n    'Omega': 937,\n    'alpha': 945,\n    'beta': 946,\n    'gamma': 947,\n    'delta': 948,\n    'epsilon': 949,\n    'zeta': 950,\n    'eta': 951,\n    'theta': 952,\n    'iota': 953,\n    'kappa': 954,\n    'lambda': 955,\n    'mu': 956,\n    'nu': 957,\n    'xi': 958,\n    'omicron': 959,\n    'pi': 960,\n    'rho': 961,\n    'sigmaf': 962,\n    'sigma': 963,\n    'tau': 964,\n    'upsilon': 965,\n    'phi': 966,\n    'chi': 967,\n    'psi': 968,\n    'omega': 969,\n    'thetasym': 977,\n    'upsih': 978,\n    'piv': 982,\n    'ensp': 8194,\n    'emsp': 8195,\n    'thinsp': 8201,\n    'zwnj': 8204,\n    'zwj': 8205,\n    'lrm': 8206,\n    'rlm': 8207,\n    'ndash': 8211,\n    'mdash': 8212,\n    'lsquo': 8216,\n    'rsquo': 8217,\n    'sbquo': 8218,\n    'ldquo': 8220,\n    'rdquo': 8221,\n    'bdquo': 8222,\n    'dagger': 8224,\n    'Dagger': 8225,\n    'bull': 8226,\n    'hellip': 8230,\n    'permil': 8240,\n    'prime': 8242,\n    'Prime': 8243,\n    'lsaquo': 8249,\n    'rsaquo': 8250,\n    'oline': 8254,\n    'frasl': 8260,\n    'euro': 8364,\n    'image': 8465,\n    'weierp': 8472,\n    'real': 8476,\n    'trade': 8482,\n    'alefsym': 8501,\n    'larr': 8592,\n    'uarr': 8593,\n    'rarr': 8594,\n    'darr': 8595,\n    'harr': 8596,\n    'crarr': 8629,\n    'lArr': 8656,\n    'uArr': 8657,\n    'rArr': 8658,\n    'dArr': 8659,\n    'hArr': 8660,\n    'forall': 8704,\n    'part': 8706,\n    'exist': 8707,\n    'empty': 8709,\n    'nabla': 8711,\n    'isin': 8712,\n    'notin': 8713,\n    'ni': 8715,\n    'prod': 8719,\n    'sum': 8721,\n    'minus': 8722,\n    'lowast': 8727,\n    'radic': 8730,\n    'prop': 8733,\n    'infin': 8734,\n    'ang': 8736,\n    'and': 8743,\n    'or': 8744,\n    'cap': 8745,\n    'cup': 8746,\n    'int': 8747,\n    'there4': 8756,\n    'sim': 8764,\n    'cong': 8773,\n    'asymp': 8776,\n    'ne': 8800,\n    'equiv': 8801,\n    'le': 8804,\n    'ge': 8805,\n    'sub': 8834,\n    'sup': 8835,\n    'nsub': 8836,\n    'sube': 8838,\n    'supe': 8839,\n    'oplus': 8853,\n    'otimes': 8855,\n    'perp': 8869,\n    'sdot': 8901,\n    'lceil': 8968,\n    'rceil': 8969,\n    'lfloor': 8970,\n    'rfloor': 8971,\n    'lang': 9001,\n    'rang': 9002,\n    'loz': 9674,\n    'spades': 9824,\n    'clubs': 9827,\n    'hearts': 9829,\n    'diams': 9830\n  }\n\n  Object.keys(sax.ENTITIES).forEach(function (key) {\n    var e = sax.ENTITIES[key]\n    var s = typeof e === 'number' ? String.fromCharCode(e) : e\n    sax.ENTITIES[key] = s\n  })\n\n  for (var s in sax.STATE) {\n    sax.STATE[sax.STATE[s]] = s\n  }\n\n  // shorthand\n  S = sax.STATE\n\n  function emit (parser, event, data) {\n    parser[event] && parser[event](data)\n  }\n\n  function emitNode (parser, nodeType, data) {\n    if (parser.textNode) closeText(parser)\n    emit(parser, nodeType, data)\n  }\n\n  function closeText (parser) {\n    parser.textNode = textopts(parser.opt, parser.textNode)\n    if (parser.textNode) emit(parser, 'ontext', parser.textNode)\n    parser.textNode = ''\n  }\n\n  function textopts (opt, text) {\n    if (opt.trim) text = text.trim()\n    if (opt.normalize) text = text.replace(/\\s+/g, ' ')\n    return text\n  }\n\n  function error (parser, er) {\n    closeText(parser)\n    if (parser.trackPosition) {\n      er += '\\nLine: ' + parser.line +\n        '\\nColumn: ' + parser.column +\n        '\\nChar: ' + parser.c\n    }\n    er = new Error(er)\n    parser.error = er\n    emit(parser, 'onerror', er)\n    return parser\n  }\n\n  function end (parser) {\n    if (parser.sawRoot && !parser.closedRoot) strictFail(parser, 'Unclosed root tag')\n    if ((parser.state !== S.BEGIN) &&\n      (parser.state !== S.BEGIN_WHITESPACE) &&\n      (parser.state !== S.TEXT)) {\n      error(parser, 'Unexpected end')\n    }\n    closeText(parser)\n    parser.c = ''\n    parser.closed = true\n    emit(parser, 'onend')\n    SAXParser.call(parser, parser.strict, parser.opt)\n    return parser\n  }\n\n  function strictFail (parser, message) {\n    if (typeof parser !== 'object' || !(parser instanceof SAXParser)) {\n      throw new Error('bad call to strictFail')\n    }\n    if (parser.strict) {\n      error(parser, message)\n    }\n  }\n\n  function newTag (parser) {\n    if (!parser.strict) parser.tagName = parser.tagName[parser.looseCase]()\n    var parent = parser.tags[parser.tags.length - 1] || parser\n    var tag = parser.tag = { name: parser.tagName, attributes: {} }\n\n    // will be overridden if tag contails an xmlns=\"foo\" or xmlns:foo=\"bar\"\n    if (parser.opt.xmlns) {\n      tag.ns = parent.ns\n    }\n    parser.attribList.length = 0\n    emitNode(parser, 'onopentagstart', tag)\n  }\n\n  function qname (name, attribute) {\n    var i = name.indexOf(':')\n    var qualName = i < 0 ? [ '', name ] : name.split(':')\n    var prefix = qualName[0]\n    var local = qualName[1]\n\n    // <x \"xmlns\"=\"http://foo\">\n    if (attribute && name === 'xmlns') {\n      prefix = 'xmlns'\n      local = ''\n    }\n\n    return { prefix: prefix, local: local }\n  }\n\n  function attrib (parser) {\n    if (!parser.strict) {\n      parser.attribName = parser.attribName[parser.looseCase]()\n    }\n\n    if (parser.attribList.indexOf(parser.attribName) !== -1 ||\n      parser.tag.attributes.hasOwnProperty(parser.attribName)) {\n      parser.attribName = parser.attribValue = ''\n      return\n    }\n\n    if (parser.opt.xmlns) {\n      var qn = qname(parser.attribName, true)\n      var prefix = qn.prefix\n      var local = qn.local\n\n      if (prefix === 'xmlns') {\n        // namespace binding attribute. push the binding into scope\n        if (local === 'xml' && parser.attribValue !== XML_NAMESPACE) {\n          strictFail(parser,\n            'xml: prefix must be bound to ' + XML_NAMESPACE + '\\n' +\n            'Actual: ' + parser.attribValue)\n        } else if (local === 'xmlns' && parser.attribValue !== XMLNS_NAMESPACE) {\n          strictFail(parser,\n            'xmlns: prefix must be bound to ' + XMLNS_NAMESPACE + '\\n' +\n            'Actual: ' + parser.attribValue)\n        } else {\n          var tag = parser.tag\n          var parent = parser.tags[parser.tags.length - 1] || parser\n          if (tag.ns === parent.ns) {\n            tag.ns = Object.create(parent.ns)\n          }\n          tag.ns[local] = parser.attribValue\n        }\n      }\n\n      // defer onattribute events until all attributes have been seen\n      // so any new bindings can take effect. preserve attribute order\n      // so deferred events can be emitted in document order\n      parser.attribList.push([parser.attribName, parser.attribValue])\n    } else {\n      // in non-xmlns mode, we can emit the event right away\n      parser.tag.attributes[parser.attribName] = parser.attribValue\n      emitNode(parser, 'onattribute', {\n        name: parser.attribName,\n        value: parser.attribValue\n      })\n    }\n\n    parser.attribName = parser.attribValue = ''\n  }\n\n  function openTag (parser, selfClosing) {\n    if (parser.opt.xmlns) {\n      // emit namespace binding events\n      var tag = parser.tag\n\n      // add namespace info to tag\n      var qn = qname(parser.tagName)\n      tag.prefix = qn.prefix\n      tag.local = qn.local\n      tag.uri = tag.ns[qn.prefix] || ''\n\n      if (tag.prefix && !tag.uri) {\n        strictFail(parser, 'Unbound namespace prefix: ' +\n          JSON.stringify(parser.tagName))\n        tag.uri = qn.prefix\n      }\n\n      var parent = parser.tags[parser.tags.length - 1] || parser\n      if (tag.ns && parent.ns !== tag.ns) {\n        Object.keys(tag.ns).forEach(function (p) {\n          emitNode(parser, 'onopennamespace', {\n            prefix: p,\n            uri: tag.ns[p]\n          })\n        })\n      }\n\n      // handle deferred onattribute events\n      // Note: do not apply default ns to attributes:\n      //   http://www.w3.org/TR/REC-xml-names/#defaulting\n      for (var i = 0, l = parser.attribList.length; i < l; i++) {\n        var nv = parser.attribList[i]\n        var name = nv[0]\n        var value = nv[1]\n        var qualName = qname(name, true)\n        var prefix = qualName.prefix\n        var local = qualName.local\n        var uri = prefix === '' ? '' : (tag.ns[prefix] || '')\n        var a = {\n          name: name,\n          value: value,\n          prefix: prefix,\n          local: local,\n          uri: uri\n        }\n\n        // if there's any attributes with an undefined namespace,\n        // then fail on them now.\n        if (prefix && prefix !== 'xmlns' && !uri) {\n          strictFail(parser, 'Unbound namespace prefix: ' +\n            JSON.stringify(prefix))\n          a.uri = prefix\n        }\n        parser.tag.attributes[name] = a\n        emitNode(parser, 'onattribute', a)\n      }\n      parser.attribList.length = 0\n    }\n\n    parser.tag.isSelfClosing = !!selfClosing\n\n    // process the tag\n    parser.sawRoot = true\n    parser.tags.push(parser.tag)\n    emitNode(parser, 'onopentag', parser.tag)\n    if (!selfClosing) {\n      // special case for <script> in non-strict mode.\n      if (!parser.noscript && parser.tagName.toLowerCase() === 'script') {\n        parser.state = S.SCRIPT\n      } else {\n        parser.state = S.TEXT\n      }\n      parser.tag = null\n      parser.tagName = ''\n    }\n    parser.attribName = parser.attribValue = ''\n    parser.attribList.length = 0\n  }\n\n  function closeTag (parser) {\n    if (!parser.tagName) {\n      strictFail(parser, 'Weird empty close tag.')\n      parser.textNode += '</>'\n      parser.state = S.TEXT\n      return\n    }\n\n    if (parser.script) {\n      if (parser.tagName !== 'script') {\n        parser.script += '</' + parser.tagName + '>'\n        parser.tagName = ''\n        parser.state = S.SCRIPT\n        return\n      }\n      emitNode(parser, 'onscript', parser.script)\n      parser.script = ''\n    }\n\n    // first make sure that the closing tag actually exists.\n    // <a><b></c></b></a> will close everything, otherwise.\n    var t = parser.tags.length\n    var tagName = parser.tagName\n    if (!parser.strict) {\n      tagName = tagName[parser.looseCase]()\n    }\n    var closeTo = tagName\n    while (t--) {\n      var close = parser.tags[t]\n      if (close.name !== closeTo) {\n        // fail the first time in strict mode\n        strictFail(parser, 'Unexpected close tag')\n      } else {\n        break\n      }\n    }\n\n    // didn't find it.  we already failed for strict, so just abort.\n    if (t < 0) {\n      strictFail(parser, 'Unmatched closing tag: ' + parser.tagName)\n      parser.textNode += '</' + parser.tagName + '>'\n      parser.state = S.TEXT\n      return\n    }\n    parser.tagName = tagName\n    var s = parser.tags.length\n    while (s-- > t) {\n      var tag = parser.tag = parser.tags.pop()\n      parser.tagName = parser.tag.name\n      emitNode(parser, 'onclosetag', parser.tagName)\n\n      var x = {}\n      for (var i in tag.ns) {\n        x[i] = tag.ns[i]\n      }\n\n      var parent = parser.tags[parser.tags.length - 1] || parser\n      if (parser.opt.xmlns && tag.ns !== parent.ns) {\n        // remove namespace bindings introduced by tag\n        Object.keys(tag.ns).forEach(function (p) {\n          var n = tag.ns[p]\n          emitNode(parser, 'onclosenamespace', { prefix: p, uri: n })\n        })\n      }\n    }\n    if (t === 0) parser.closedRoot = true\n    parser.tagName = parser.attribValue = parser.attribName = ''\n    parser.attribList.length = 0\n    parser.state = S.TEXT\n  }\n\n  function parseEntity (parser) {\n    var entity = parser.entity\n    var entityLC = entity.toLowerCase()\n    var num\n    var numStr = ''\n\n    if (parser.ENTITIES[entity]) {\n      return parser.ENTITIES[entity]\n    }\n    if (parser.ENTITIES[entityLC]) {\n      return parser.ENTITIES[entityLC]\n    }\n    entity = entityLC\n    if (entity.charAt(0) === '#') {\n      if (entity.charAt(1) === 'x') {\n        entity = entity.slice(2)\n        num = parseInt(entity, 16)\n        numStr = num.toString(16)\n      } else {\n        entity = entity.slice(1)\n        num = parseInt(entity, 10)\n        numStr = num.toString(10)\n      }\n    }\n    entity = entity.replace(/^0+/, '')\n    if (isNaN(num) || numStr.toLowerCase() !== entity) {\n      strictFail(parser, 'Invalid character entity')\n      return '&' + parser.entity + ';'\n    }\n\n    return String.fromCodePoint(num)\n  }\n\n  function beginWhiteSpace (parser, c) {\n    if (c === '<') {\n      parser.state = S.OPEN_WAKA\n      parser.startTagPosition = parser.position\n    } else if (!isWhitespace(c)) {\n      // have to process this as a text node.\n      // weird, but happens.\n      strictFail(parser, 'Non-whitespace before first tag.')\n      parser.textNode = c\n      parser.state = S.TEXT\n    }\n  }\n\n  function charAt (chunk, i) {\n    var result = ''\n    if (i < chunk.length) {\n      result = chunk.charAt(i)\n    }\n    return result\n  }\n\n  function write (chunk) {\n    var parser = this\n    if (this.error) {\n      throw this.error\n    }\n    if (parser.closed) {\n      return error(parser,\n        'Cannot write after close. Assign an onready handler.')\n    }\n    if (chunk === null) {\n      return end(parser)\n    }\n    if (typeof chunk === 'object') {\n      chunk = chunk.toString()\n    }\n    var i = 0\n    var c = ''\n    while (true) {\n      c = charAt(chunk, i++)\n      parser.c = c\n\n      if (!c) {\n        break\n      }\n\n      if (parser.trackPosition) {\n        parser.position++\n        if (c === '\\n') {\n          parser.line++\n          parser.column = 0\n        } else {\n          parser.column++\n        }\n      }\n\n      switch (parser.state) {\n        case S.BEGIN:\n          parser.state = S.BEGIN_WHITESPACE\n          if (c === '\\uFEFF') {\n            continue\n          }\n          beginWhiteSpace(parser, c)\n          continue\n\n        case S.BEGIN_WHITESPACE:\n          beginWhiteSpace(parser, c)\n          continue\n\n        case S.TEXT:\n          if (parser.sawRoot && !parser.closedRoot) {\n            var starti = i - 1\n            while (c && c !== '<' && c !== '&') {\n              c = charAt(chunk, i++)\n              if (c && parser.trackPosition) {\n                parser.position++\n                if (c === '\\n') {\n                  parser.line++\n                  parser.column = 0\n                } else {\n                  parser.column++\n                }\n              }\n            }\n            parser.textNode += chunk.substring(starti, i - 1)\n          }\n          if (c === '<' && !(parser.sawRoot && parser.closedRoot && !parser.strict)) {\n            parser.state = S.OPEN_WAKA\n            parser.startTagPosition = parser.position\n          } else {\n            if (!isWhitespace(c) && (!parser.sawRoot || parser.closedRoot)) {\n              strictFail(parser, 'Text data outside of root node.')\n            }\n            if (c === '&') {\n              parser.state = S.TEXT_ENTITY\n            } else {\n              parser.textNode += c\n            }\n          }\n          continue\n\n        case S.SCRIPT:\n          // only non-strict\n          if (c === '<') {\n            parser.state = S.SCRIPT_ENDING\n          } else {\n            parser.script += c\n          }\n          continue\n\n        case S.SCRIPT_ENDING:\n          if (c === '/') {\n            parser.state = S.CLOSE_TAG\n          } else {\n            parser.script += '<' + c\n            parser.state = S.SCRIPT\n          }\n          continue\n\n        case S.OPEN_WAKA:\n          // either a /, ?, !, or text is coming next.\n          if (c === '!') {\n            parser.state = S.SGML_DECL\n            parser.sgmlDecl = ''\n          } else if (isWhitespace(c)) {\n            // wait for it...\n          } else if (isMatch(nameStart, c)) {\n            parser.state = S.OPEN_TAG\n            parser.tagName = c\n          } else if (c === '/') {\n            parser.state = S.CLOSE_TAG\n            parser.tagName = ''\n          } else if (c === '?') {\n            parser.state = S.PROC_INST\n            parser.procInstName = parser.procInstBody = ''\n          } else {\n            strictFail(parser, 'Unencoded <')\n            // if there was some whitespace, then add that in.\n            if (parser.startTagPosition + 1 < parser.position) {\n              var pad = parser.position - parser.startTagPosition\n              c = new Array(pad).join(' ') + c\n            }\n            parser.textNode += '<' + c\n            parser.state = S.TEXT\n          }\n          continue\n\n        case S.SGML_DECL:\n          if ((parser.sgmlDecl + c).toUpperCase() === CDATA) {\n            emitNode(parser, 'onopencdata')\n            parser.state = S.CDATA\n            parser.sgmlDecl = ''\n            parser.cdata = ''\n          } else if (parser.sgmlDecl + c === '--') {\n            parser.state = S.COMMENT\n            parser.comment = ''\n            parser.sgmlDecl = ''\n          } else if ((parser.sgmlDecl + c).toUpperCase() === DOCTYPE) {\n            parser.state = S.DOCTYPE\n            if (parser.doctype || parser.sawRoot) {\n              strictFail(parser,\n                'Inappropriately located doctype declaration')\n            }\n            parser.doctype = ''\n            parser.sgmlDecl = ''\n          } else if (c === '>') {\n            emitNode(parser, 'onsgmldeclaration', parser.sgmlDecl)\n            parser.sgmlDecl = ''\n            parser.state = S.TEXT\n          } else if (isQuote(c)) {\n            parser.state = S.SGML_DECL_QUOTED\n            parser.sgmlDecl += c\n          } else {\n            parser.sgmlDecl += c\n          }\n          continue\n\n        case S.SGML_DECL_QUOTED:\n          if (c === parser.q) {\n            parser.state = S.SGML_DECL\n            parser.q = ''\n          }\n          parser.sgmlDecl += c\n          continue\n\n        case S.DOCTYPE:\n          if (c === '>') {\n            parser.state = S.TEXT\n            emitNode(parser, 'ondoctype', parser.doctype)\n            parser.doctype = true // just remember that we saw it.\n          } else {\n            parser.doctype += c\n            if (c === '[') {\n              parser.state = S.DOCTYPE_DTD\n            } else if (isQuote(c)) {\n              parser.state = S.DOCTYPE_QUOTED\n              parser.q = c\n            }\n          }\n          continue\n\n        case S.DOCTYPE_QUOTED:\n          parser.doctype += c\n          if (c === parser.q) {\n            parser.q = ''\n            parser.state = S.DOCTYPE\n          }\n          continue\n\n        case S.DOCTYPE_DTD:\n          parser.doctype += c\n          if (c === ']') {\n            parser.state = S.DOCTYPE\n          } else if (isQuote(c)) {\n            parser.state = S.DOCTYPE_DTD_QUOTED\n            parser.q = c\n          }\n          continue\n\n        case S.DOCTYPE_DTD_QUOTED:\n          parser.doctype += c\n          if (c === parser.q) {\n            parser.state = S.DOCTYPE_DTD\n            parser.q = ''\n          }\n          continue\n\n        case S.COMMENT:\n          if (c === '-') {\n            parser.state = S.COMMENT_ENDING\n          } else {\n            parser.comment += c\n          }\n          continue\n\n        case S.COMMENT_ENDING:\n          if (c === '-') {\n            parser.state = S.COMMENT_ENDED\n            parser.comment = textopts(parser.opt, parser.comment)\n            if (parser.comment) {\n              emitNode(parser, 'oncomment', parser.comment)\n            }\n            parser.comment = ''\n          } else {\n            parser.comment += '-' + c\n            parser.state = S.COMMENT\n          }\n          continue\n\n        case S.COMMENT_ENDED:\n          if (c !== '>') {\n            strictFail(parser, 'Malformed comment')\n            // allow <!-- blah -- bloo --> in non-strict mode,\n            // which is a comment of \" blah -- bloo \"\n            parser.comment += '--' + c\n            parser.state = S.COMMENT\n          } else {\n            parser.state = S.TEXT\n          }\n          continue\n\n        case S.CDATA:\n          if (c === ']') {\n            parser.state = S.CDATA_ENDING\n          } else {\n            parser.cdata += c\n          }\n          continue\n\n        case S.CDATA_ENDING:\n          if (c === ']') {\n            parser.state = S.CDATA_ENDING_2\n          } else {\n            parser.cdata += ']' + c\n            parser.state = S.CDATA\n          }\n          continue\n\n        case S.CDATA_ENDING_2:\n          if (c === '>') {\n            if (parser.cdata) {\n              emitNode(parser, 'oncdata', parser.cdata)\n            }\n            emitNode(parser, 'onclosecdata')\n            parser.cdata = ''\n            parser.state = S.TEXT\n          } else if (c === ']') {\n            parser.cdata += ']'\n          } else {\n            parser.cdata += ']]' + c\n            parser.state = S.CDATA\n          }\n          continue\n\n        case S.PROC_INST:\n          if (c === '?') {\n            parser.state = S.PROC_INST_ENDING\n          } else if (isWhitespace(c)) {\n            parser.state = S.PROC_INST_BODY\n          } else {\n            parser.procInstName += c\n          }\n          continue\n\n        case S.PROC_INST_BODY:\n          if (!parser.procInstBody && isWhitespace(c)) {\n            continue\n          } else if (c === '?') {\n            parser.state = S.PROC_INST_ENDING\n          } else {\n            parser.procInstBody += c\n          }\n          continue\n\n        case S.PROC_INST_ENDING:\n          if (c === '>') {\n            emitNode(parser, 'onprocessinginstruction', {\n              name: parser.procInstName,\n              body: parser.procInstBody\n            })\n            parser.procInstName = parser.procInstBody = ''\n            parser.state = S.TEXT\n          } else {\n            parser.procInstBody += '?' + c\n            parser.state = S.PROC_INST_BODY\n          }\n          continue\n\n        case S.OPEN_TAG:\n          if (isMatch(nameBody, c)) {\n            parser.tagName += c\n          } else {\n            newTag(parser)\n            if (c === '>') {\n              openTag(parser)\n            } else if (c === '/') {\n              parser.state = S.OPEN_TAG_SLASH\n            } else {\n              if (!isWhitespace(c)) {\n                strictFail(parser, 'Invalid character in tag name')\n              }\n              parser.state = S.ATTRIB\n            }\n          }\n          continue\n\n        case S.OPEN_TAG_SLASH:\n          if (c === '>') {\n            openTag(parser, true)\n            closeTag(parser)\n          } else {\n            strictFail(parser, 'Forward-slash in opening tag not followed by >')\n            parser.state = S.ATTRIB\n          }\n          continue\n\n        case S.ATTRIB:\n          // haven't read the attribute name yet.\n          if (isWhitespace(c)) {\n            continue\n          } else if (c === '>') {\n            openTag(parser)\n          } else if (c === '/') {\n            parser.state = S.OPEN_TAG_SLASH\n          } else if (isMatch(nameStart, c)) {\n            parser.attribName = c\n            parser.attribValue = ''\n            parser.state = S.ATTRIB_NAME\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_NAME:\n          if (c === '=') {\n            parser.state = S.ATTRIB_VALUE\n          } else if (c === '>') {\n            strictFail(parser, 'Attribute without value')\n            parser.attribValue = parser.attribName\n            attrib(parser)\n            openTag(parser)\n          } else if (isWhitespace(c)) {\n            parser.state = S.ATTRIB_NAME_SAW_WHITE\n          } else if (isMatch(nameBody, c)) {\n            parser.attribName += c\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_NAME_SAW_WHITE:\n          if (c === '=') {\n            parser.state = S.ATTRIB_VALUE\n          } else if (isWhitespace(c)) {\n            continue\n          } else {\n            strictFail(parser, 'Attribute without value')\n            parser.tag.attributes[parser.attribName] = ''\n            parser.attribValue = ''\n            emitNode(parser, 'onattribute', {\n              name: parser.attribName,\n              value: ''\n            })\n            parser.attribName = ''\n            if (c === '>') {\n              openTag(parser)\n            } else if (isMatch(nameStart, c)) {\n              parser.attribName = c\n              parser.state = S.ATTRIB_NAME\n            } else {\n              strictFail(parser, 'Invalid attribute name')\n              parser.state = S.ATTRIB\n            }\n          }\n          continue\n\n        case S.ATTRIB_VALUE:\n          if (isWhitespace(c)) {\n            continue\n          } else if (isQuote(c)) {\n            parser.q = c\n            parser.state = S.ATTRIB_VALUE_QUOTED\n          } else {\n            strictFail(parser, 'Unquoted attribute value')\n            parser.state = S.ATTRIB_VALUE_UNQUOTED\n            parser.attribValue = c\n          }\n          continue\n\n        case S.ATTRIB_VALUE_QUOTED:\n          if (c !== parser.q) {\n            if (c === '&') {\n              parser.state = S.ATTRIB_VALUE_ENTITY_Q\n            } else {\n              parser.attribValue += c\n            }\n            continue\n          }\n          attrib(parser)\n          parser.q = ''\n          parser.state = S.ATTRIB_VALUE_CLOSED\n          continue\n\n        case S.ATTRIB_VALUE_CLOSED:\n          if (isWhitespace(c)) {\n            parser.state = S.ATTRIB\n          } else if (c === '>') {\n            openTag(parser)\n          } else if (c === '/') {\n            parser.state = S.OPEN_TAG_SLASH\n          } else if (isMatch(nameStart, c)) {\n            strictFail(parser, 'No whitespace between attributes')\n            parser.attribName = c\n            parser.attribValue = ''\n            parser.state = S.ATTRIB_NAME\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_VALUE_UNQUOTED:\n          if (!isAttribEnd(c)) {\n            if (c === '&') {\n              parser.state = S.ATTRIB_VALUE_ENTITY_U\n            } else {\n              parser.attribValue += c\n            }\n            continue\n          }\n          attrib(parser)\n          if (c === '>') {\n            openTag(parser)\n          } else {\n            parser.state = S.ATTRIB\n          }\n          continue\n\n        case S.CLOSE_TAG:\n          if (!parser.tagName) {\n            if (isWhitespace(c)) {\n              continue\n            } else if (notMatch(nameStart, c)) {\n              if (parser.script) {\n                parser.script += '</' + c\n                parser.state = S.SCRIPT\n              } else {\n                strictFail(parser, 'Invalid tagname in closing tag.')\n              }\n            } else {\n              parser.tagName = c\n            }\n          } else if (c === '>') {\n            closeTag(parser)\n          } else if (isMatch(nameBody, c)) {\n            parser.tagName += c\n          } else if (parser.script) {\n            parser.script += '</' + parser.tagName\n            parser.tagName = ''\n            parser.state = S.SCRIPT\n          } else {\n            if (!isWhitespace(c)) {\n              strictFail(parser, 'Invalid tagname in closing tag')\n            }\n            parser.state = S.CLOSE_TAG_SAW_WHITE\n          }\n          continue\n\n        case S.CLOSE_TAG_SAW_WHITE:\n          if (isWhitespace(c)) {\n            continue\n          }\n          if (c === '>') {\n            closeTag(parser)\n          } else {\n            strictFail(parser, 'Invalid characters in closing tag')\n          }\n          continue\n\n        case S.TEXT_ENTITY:\n        case S.ATTRIB_VALUE_ENTITY_Q:\n        case S.ATTRIB_VALUE_ENTITY_U:\n          var returnState\n          var buffer\n          switch (parser.state) {\n            case S.TEXT_ENTITY:\n              returnState = S.TEXT\n              buffer = 'textNode'\n              break\n\n            case S.ATTRIB_VALUE_ENTITY_Q:\n              returnState = S.ATTRIB_VALUE_QUOTED\n              buffer = 'attribValue'\n              break\n\n            case S.ATTRIB_VALUE_ENTITY_U:\n              returnState = S.ATTRIB_VALUE_UNQUOTED\n              buffer = 'attribValue'\n              break\n          }\n\n          if (c === ';') {\n            parser[buffer] += parseEntity(parser)\n            parser.entity = ''\n            parser.state = returnState\n          } else if (isMatch(parser.entity.length ? entityBody : entityStart, c)) {\n            parser.entity += c\n          } else {\n            strictFail(parser, 'Invalid character in entity name')\n            parser[buffer] += '&' + parser.entity + c\n            parser.entity = ''\n            parser.state = returnState\n          }\n\n          continue\n\n        default:\n          throw new Error(parser, 'Unknown state: ' + parser.state)\n      }\n    } // while\n\n    if (parser.position >= parser.bufferCheckPosition) {\n      checkBufferLength(parser)\n    }\n    return parser\n  }\n\n  /*! http://mths.be/fromcodepoint v0.1.0 by @mathias */\n  /* istanbul ignore next */\n  if (!String.fromCodePoint) {\n    (function () {\n      var stringFromCharCode = String.fromCharCode\n      var floor = Math.floor\n      var fromCodePoint = function () {\n        var MAX_SIZE = 0x4000\n        var codeUnits = []\n        var highSurrogate\n        var lowSurrogate\n        var index = -1\n        var length = arguments.length\n        if (!length) {\n          return ''\n        }\n        var result = ''\n        while (++index < length) {\n          var codePoint = Number(arguments[index])\n          if (\n            !isFinite(codePoint) || // `NaN`, `+Infinity`, or `-Infinity`\n            codePoint < 0 || // not a valid Unicode code point\n            codePoint > 0x10FFFF || // not a valid Unicode code point\n            floor(codePoint) !== codePoint // not an integer\n          ) {\n            throw RangeError('Invalid code point: ' + codePoint)\n          }\n          if (codePoint <= 0xFFFF) { // BMP code point\n            codeUnits.push(codePoint)\n          } else { // Astral code point; split in surrogate halves\n            // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n            codePoint -= 0x10000\n            highSurrogate = (codePoint >> 10) + 0xD800\n            lowSurrogate = (codePoint % 0x400) + 0xDC00\n            codeUnits.push(highSurrogate, lowSurrogate)\n          }\n          if (index + 1 === length || codeUnits.length > MAX_SIZE) {\n            result += stringFromCharCode.apply(null, codeUnits)\n            codeUnits.length = 0\n          }\n        }\n        return result\n      }\n      /* istanbul ignore next */\n      if (Object.defineProperty) {\n        Object.defineProperty(String, 'fromCodePoint', {\n          value: fromCodePoint,\n          configurable: true,\n          writable: true\n        })\n      } else {\n        String.fromCodePoint = fromCodePoint\n      }\n    }())\n  }\n})( false ? undefined : exports)\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../node-libs-browser/node_modules/buffer/index.js */ \"./node_modules/node-libs-browser/node_modules/buffer/index.js\").Buffer))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/xml-js/node_modules/sax/lib/sax.js\n");

/***/ }),

/***/ "./src/browser/component/CodeRealityComponentController.ts":
/*!*****************************************************************!*\
  !*** ./src/browser/component/CodeRealityComponentController.ts ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst aframe_typescript_boilerplate_1 = __webpack_require__(/*! aframe-typescript-boilerplate */ \"./node_modules/aframe-typescript-boilerplate/built/index.js\");\nclass CodeRealityComponentController extends aframe_typescript_boilerplate_1.AbstractComponentController {\n    constructor(component, entity, data) {\n        super(component, entity, data);\n        this.interface = aframe_typescript_boilerplate_1.getSystemController(this.entity.sceneEl, \"interface\");\n    }\n}\nexports.CodeRealityComponentController = CodeRealityComponentController;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9jb21wb25lbnQvQ29kZVJlYWxpdHlDb21wb25lbnRDb250cm9sbGVyLnRzPzc1OWQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxnS0FBK0Y7QUFJL0YsTUFBc0IsOEJBQStCLFNBQVEsMkRBQTJCO0lBSXBGLFlBQVksU0FBb0IsRUFBRSxNQUFjLEVBQUUsSUFBUztRQUN2RCxLQUFLLENBQUMsU0FBUyxFQUFFLE1BQU0sRUFBRSxJQUFJLENBQUMsQ0FBQztRQUUvQixJQUFJLENBQUMsU0FBUyxHQUFHLG1EQUFtQixDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsT0FBUyxFQUFFLFdBQVcsQ0FBQyxDQUFDO0lBQzdFLENBQUM7Q0FFSjtBQVZELHdFQVVDIiwiZmlsZSI6Ii4vc3JjL2Jyb3dzZXIvY29tcG9uZW50L0NvZGVSZWFsaXR5Q29tcG9uZW50Q29udHJvbGxlci50cy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7QWJzdHJhY3RDb21wb25lbnRDb250cm9sbGVyLCBnZXRTeXN0ZW1Db250cm9sbGVyfSBmcm9tIFwiYWZyYW1lLXR5cGVzY3JpcHQtYm9pbGVycGxhdGVcIjtcbmltcG9ydCB7SW50ZXJmYWNlU3lzdGVtQ29udHJvbGxlcn0gZnJvbSBcIi4uLy4uXCI7XG5pbXBvcnQge0NvbXBvbmVudCwgRW50aXR5fSBmcm9tIFwiYWZyYW1lXCI7XG5cbmV4cG9ydCBhYnN0cmFjdCBjbGFzcyBDb2RlUmVhbGl0eUNvbXBvbmVudENvbnRyb2xsZXIgZXh0ZW5kcyBBYnN0cmFjdENvbXBvbmVudENvbnRyb2xsZXIge1xuXG4gICAgcHJvdGVjdGVkIGludGVyZmFjZTogSW50ZXJmYWNlU3lzdGVtQ29udHJvbGxlcjtcblxuICAgIGNvbnN0cnVjdG9yKGNvbXBvbmVudDogQ29tcG9uZW50LCBlbnRpdHk6IEVudGl0eSwgZGF0YTogYW55KSB7XG4gICAgICAgIHN1cGVyKGNvbXBvbmVudCwgZW50aXR5LCBkYXRhKTtcblxuICAgICAgICB0aGlzLmludGVyZmFjZSA9IGdldFN5c3RlbUNvbnRyb2xsZXIodGhpcy5lbnRpdHkuc2NlbmVFbCEhLCBcImludGVyZmFjZVwiKTtcbiAgICB9XG5cbn0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/browser/component/CodeRealityComponentController.ts\n");

/***/ }),

/***/ "./src/browser/component/animation/AnimatorController.ts":
/*!***************************************************************!*\
  !*** ./src/browser/component/animation/AnimatorController.ts ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst aframe_typescript_boilerplate_1 = __webpack_require__(/*! aframe-typescript-boilerplate */ \"./node_modules/aframe-typescript-boilerplate/built/index.js\");\nconst AnimationFeature_1 = __webpack_require__(/*! ../../feature/animation/AnimationFeature */ \"./src/browser/feature/animation/AnimationFeature.ts\");\nclass AnimatorController extends aframe_typescript_boilerplate_1.CompositeComponentController {\n    constructor(component, entity, data) {\n        super(component, entity, data);\n    }\n    init() {\n        this.addFeature(new AnimationFeature_1.AnimationFeature(this, this.entity));\n        super.init();\n    }\n}\nAnimatorController.DEFINITION = new aframe_typescript_boilerplate_1.ComponentControllerDefinition(\"animator\", {}, false, true, (component, entity, data) => new AnimatorController(component, entity, data));\nexports.AnimatorController = AnimatorController;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9jb21wb25lbnQvYW5pbWF0aW9uL0FuaW1hdG9yQ29udHJvbGxlci50cz82ZmYwIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQ0EsZ0tBQTBHO0FBQzFHLHNKQUEwRTtBQUUxRSxNQUFhLGtCQUFtQixTQUFRLDREQUE0QjtJQUloRSxZQUFZLFNBQW9CLEVBQUUsTUFBYyxFQUFFLElBQVM7UUFDdkQsS0FBSyxDQUFDLFNBQVMsRUFBRSxNQUFNLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDbkMsQ0FBQztJQUVELElBQUk7UUFDQSxJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksbUNBQWdCLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxNQUFRLENBQUMsQ0FBQyxDQUFDO1FBQzNELEtBQUssQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUNqQixDQUFDOztBQVRhLDZCQUFVLEdBQUcsSUFBSSw2REFBNkIsQ0FBQyxVQUFVLEVBQUUsRUFBRSxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsQ0FBQyxTQUFvQixFQUFFLE1BQWMsRUFBRSxJQUFTLEVBQUUsRUFBRSxDQUFDLElBQUksa0JBQWtCLENBQUMsU0FBUyxFQUFFLE1BQU0sRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUFDO0FBRnBNLGdEQWFDIiwiZmlsZSI6Ii4vc3JjL2Jyb3dzZXIvY29tcG9uZW50L2FuaW1hdGlvbi9BbmltYXRvckNvbnRyb2xsZXIudHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NvbXBvbmVudCwgRW50aXR5fSBmcm9tIFwiYWZyYW1lXCI7XG5pbXBvcnQge0NvbXBvbmVudENvbnRyb2xsZXJEZWZpbml0aW9uLCBDb21wb3NpdGVDb21wb25lbnRDb250cm9sbGVyfSBmcm9tIFwiYWZyYW1lLXR5cGVzY3JpcHQtYm9pbGVycGxhdGVcIjtcbmltcG9ydCB7QW5pbWF0aW9uRmVhdHVyZX0gZnJvbSBcIi4uLy4uL2ZlYXR1cmUvYW5pbWF0aW9uL0FuaW1hdGlvbkZlYXR1cmVcIjtcblxuZXhwb3J0IGNsYXNzIEFuaW1hdG9yQ29udHJvbGxlciBleHRlbmRzIENvbXBvc2l0ZUNvbXBvbmVudENvbnRyb2xsZXIge1xuXG4gICAgcHVibGljIHN0YXRpYyBERUZJTklUSU9OID0gbmV3IENvbXBvbmVudENvbnRyb2xsZXJEZWZpbml0aW9uKFwiYW5pbWF0b3JcIiwge30sIGZhbHNlLCB0cnVlLCAoY29tcG9uZW50OiBDb21wb25lbnQsIGVudGl0eTogRW50aXR5LCBkYXRhOiBhbnkpID0+IG5ldyBBbmltYXRvckNvbnRyb2xsZXIoY29tcG9uZW50LCBlbnRpdHksIGRhdGEpKTtcblxuICAgIGNvbnN0cnVjdG9yKGNvbXBvbmVudDogQ29tcG9uZW50LCBlbnRpdHk6IEVudGl0eSwgZGF0YTogYW55KSB7XG4gICAgICAgIHN1cGVyKGNvbXBvbmVudCwgZW50aXR5LCBkYXRhKTtcbiAgICB9XG5cbiAgICBpbml0KCk6IHZvaWQge1xuICAgICAgICB0aGlzLmFkZEZlYXR1cmUobmV3IEFuaW1hdGlvbkZlYXR1cmUodGhpcywgdGhpcy5lbnRpdHkhISkpO1xuICAgICAgICBzdXBlci5pbml0KCk7XG4gICAgfVxuXG59XG5cblxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/browser/component/animation/AnimatorController.ts\n");

/***/ }),

/***/ "./src/browser/component/avatar/AvatarActionLoggerFeature.ts":
/*!*******************************************************************!*\
  !*** ./src/browser/component/avatar/AvatarActionLoggerFeature.ts ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Events_1 = __webpack_require__(/*! ../../model/Events */ \"./src/browser/model/Events.ts\");\nconst aframe_typescript_boilerplate_1 = __webpack_require__(/*! aframe-typescript-boilerplate */ \"./node_modules/aframe-typescript-boilerplate/built/index.js\");\nclass AvatarActionLoggerFeature extends aframe_typescript_boilerplate_1.AbstractFeature {\n    constructor(controller, entity) {\n        super(\"expression-controller\", controller, entity);\n    }\n    init() {\n        this.addEventListener(Events_1.Events.EVENT_ACTION, (detail) => {\n            console.log(\"avatar action: \" + detail.action + \": \" + detail.description);\n        });\n    }\n    update(data, oldData) {\n    }\n    remove() {\n    }\n    pause() {\n    }\n    play() {\n    }\n    tick(time, timeDelta) {\n    }\n}\nAvatarActionLoggerFeature.DEFINITION = (controller, entity) => { return new AvatarActionLoggerFeature(controller, entity); };\nexports.AvatarActionLoggerFeature = AvatarActionLoggerFeature;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9jb21wb25lbnQvYXZhdGFyL0F2YXRhckFjdGlvbkxvZ2dlckZlYXR1cmUudHM/ZjMxOCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUdBLGdHQUEwQztBQUUxQyxnS0FBOEQ7QUFHOUQsTUFBYSx5QkFBMEIsU0FBUSwrQ0FBZTtJQUkxRCxZQUFZLFVBQStCLEVBQUUsTUFBYztRQUN2RCxLQUFLLENBQUMsdUJBQXVCLEVBQUUsVUFBVSxFQUFFLE1BQU0sQ0FBQyxDQUFDO0lBQ3ZELENBQUM7SUFFRCxJQUFJO1FBQ0EsSUFBSSxDQUFDLGdCQUFnQixDQUFDLGVBQU0sQ0FBQyxZQUFZLEVBQUUsQ0FBQyxNQUErQixFQUFFLEVBQUU7WUFDM0UsT0FBTyxDQUFDLEdBQUcsQ0FBQyxpQkFBaUIsR0FBRyxNQUFNLENBQUMsTUFBTSxHQUFJLElBQUksR0FBRyxNQUFNLENBQUMsV0FBVyxDQUFDLENBQUM7UUFDaEYsQ0FBQyxDQUFDLENBQUM7SUFDUCxDQUFDO0lBRUQsTUFBTSxDQUFDLElBQVMsRUFBRSxPQUFZO0lBQzlCLENBQUM7SUFFRCxNQUFNO0lBQ04sQ0FBQztJQUVELEtBQUs7SUFDTCxDQUFDO0lBRUQsSUFBSTtJQUNKLENBQUM7SUFFRCxJQUFJLENBQUMsSUFBWSxFQUFFLFNBQWlCO0lBQ3BDLENBQUM7O0FBekJlLG9DQUFVLEdBQUcsQ0FBQyxVQUErQixFQUFFLE1BQWMsRUFBRSxFQUFFLEdBQUcsT0FBTyxJQUFJLHlCQUF5QixDQUFDLFVBQVUsRUFBRSxNQUFNLENBQUMsR0FBQyxDQUFDO0FBRmxKLDhEQTRCQyIsImZpbGUiOiIuL3NyYy9icm93c2VyL2NvbXBvbmVudC9hdmF0YXIvQXZhdGFyQWN0aW9uTG9nZ2VyRmVhdHVyZS50cy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuXG5pbXBvcnQge0VudGl0eX0gZnJvbSBcIkFGcmFtZVwiO1xuaW1wb3J0IHtFdmVudHN9IGZyb20gXCIuLi8uLi9tb2RlbC9FdmVudHNcIjtcbmltcG9ydCB7RW50aXR5QWN0aW9uRXZlbnREZXRhaWx9IGZyb20gXCIuLi8uLi9tb2RlbC9FbnRpdHlBY3Rpb25FdmVudERldGFpbFwiO1xuaW1wb3J0IHtBYnN0cmFjdEZlYXR1cmV9IGZyb20gXCJhZnJhbWUtdHlwZXNjcmlwdC1ib2lsZXJwbGF0ZVwiO1xuaW1wb3J0IHtDb21wb25lbnRDb250cm9sbGVyfSBmcm9tIFwiYWZyYW1lLXR5cGVzY3JpcHQtYm9pbGVycGxhdGVcIjtcblxuZXhwb3J0IGNsYXNzIEF2YXRhckFjdGlvbkxvZ2dlckZlYXR1cmUgZXh0ZW5kcyBBYnN0cmFjdEZlYXR1cmUge1xuXG4gICAgc3RhdGljIHJlYWRvbmx5IERFRklOSVRJT04gPSAoY29udHJvbGxlcjogQ29tcG9uZW50Q29udHJvbGxlciwgZW50aXR5OiBFbnRpdHkpID0+IHsgcmV0dXJuIG5ldyBBdmF0YXJBY3Rpb25Mb2dnZXJGZWF0dXJlKGNvbnRyb2xsZXIsIGVudGl0eSl9O1xuXG4gICAgY29uc3RydWN0b3IoY29udHJvbGxlcjogQ29tcG9uZW50Q29udHJvbGxlciwgZW50aXR5OiBFbnRpdHkpIHtcbiAgICAgICAgc3VwZXIoXCJleHByZXNzaW9uLWNvbnRyb2xsZXJcIiwgY29udHJvbGxlciwgZW50aXR5KTtcbiAgICB9XG5cbiAgICBpbml0KCk6IHZvaWQge1xuICAgICAgICB0aGlzLmFkZEV2ZW50TGlzdGVuZXIoRXZlbnRzLkVWRU5UX0FDVElPTiwgKGRldGFpbDogRW50aXR5QWN0aW9uRXZlbnREZXRhaWwpID0+IHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiYXZhdGFyIGFjdGlvbjogXCIgKyBkZXRhaWwuYWN0aW9uICsgIFwiOiBcIiArIGRldGFpbC5kZXNjcmlwdGlvbik7XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIHVwZGF0ZShkYXRhOiBhbnksIG9sZERhdGE6IGFueSk6IHZvaWQge1xuICAgIH1cblxuICAgIHJlbW92ZSgpOiB2b2lkIHtcbiAgICB9XG5cbiAgICBwYXVzZSgpOiB2b2lkIHtcbiAgICB9XG5cbiAgICBwbGF5KCk6IHZvaWQge1xuICAgIH1cblxuICAgIHRpY2sodGltZTogbnVtYmVyLCB0aW1lRGVsdGE6IG51bWJlcik6IHZvaWQge1xuICAgIH1cbn1cblxuXG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/browser/component/avatar/AvatarActionLoggerFeature.ts\n");

/***/ }),

/***/ "./src/browser/component/avatar/AvatarController.ts":
/*!**********************************************************!*\
  !*** ./src/browser/component/avatar/AvatarController.ts ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst AnimationFeature_1 = __webpack_require__(/*! ../../feature/animation/AnimationFeature */ \"./src/browser/feature/animation/AnimationFeature.ts\");\nconst ExpressionFeature_1 = __webpack_require__(/*! ../../feature/animation/ExpressionFeature */ \"./src/browser/feature/animation/ExpressionFeature.ts\");\nconst aframe_typescript_boilerplate_1 = __webpack_require__(/*! aframe-typescript-boilerplate */ \"./node_modules/aframe-typescript-boilerplate/built/index.js\");\nclass AvatarController extends aframe_typescript_boilerplate_1.CompositeComponentController {\n    constructor(component, entity, data) {\n        super(component, entity, data);\n    }\n    init() {\n        this.addFeature(new ExpressionFeature_1.ExpressionFeature(this, this.entity));\n        this.addFeature(new AnimationFeature_1.AnimationFeature(this, this.entity));\n        super.init();\n    }\n    tick(time, timeDelta) {\n        super.tick(time, timeDelta);\n    }\n}\nAvatarController.DEFINITION = new aframe_typescript_boilerplate_1.ComponentControllerDefinition(\"avatar\", {}, false, true, (component, entity, data) => new AvatarController(component, entity, data));\nexports.AvatarController = AvatarController;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9jb21wb25lbnQvYXZhdGFyL0F2YXRhckNvbnRyb2xsZXIudHM/YjhkZiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHNKQUEwRTtBQUMxRSx5SkFBNEU7QUFFNUUsZ0tBQTBHO0FBRTFHLE1BQWEsZ0JBQWlCLFNBQVEsNERBQTRCO0lBSTlELFlBQVksU0FBb0IsRUFBRSxNQUFjLEVBQUUsSUFBUztRQUN2RCxLQUFLLENBQUMsU0FBUyxFQUFFLE1BQU0sRUFBRSxJQUFJLENBQUMsQ0FBQztJQUNuQyxDQUFDO0lBRUQsSUFBSTtRQUNBLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxxQ0FBaUIsQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLE1BQVEsQ0FBQyxDQUFDLENBQUM7UUFDNUQsSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLG1DQUFnQixDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsTUFBUSxDQUFDLENBQUMsQ0FBQztRQUMzRCxLQUFLLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDakIsQ0FBQztJQUVELElBQUksQ0FBQyxJQUFZLEVBQUUsU0FBaUI7UUFDaEMsS0FBSyxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsU0FBUyxDQUFDLENBQUM7SUFDaEMsQ0FBQzs7QUFkYSwyQkFBVSxHQUFHLElBQUksNkRBQTZCLENBQUMsUUFBUSxFQUFFLEVBQUUsRUFBRSxLQUFLLEVBQUUsSUFBSSxFQUFFLENBQUMsU0FBb0IsRUFBRSxNQUFjLEVBQUUsSUFBUyxFQUFFLEVBQUUsQ0FBQyxJQUFJLGdCQUFnQixDQUFDLFNBQVMsRUFBRSxNQUFNLEVBQUUsSUFBSSxDQUFDLENBQUMsQ0FBQztBQUZoTSw0Q0FrQkMiLCJmaWxlIjoiLi9zcmMvYnJvd3Nlci9jb21wb25lbnQvYXZhdGFyL0F2YXRhckNvbnRyb2xsZXIudHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0FuaW1hdGlvbkZlYXR1cmV9IGZyb20gXCIuLi8uLi9mZWF0dXJlL2FuaW1hdGlvbi9BbmltYXRpb25GZWF0dXJlXCI7XG5pbXBvcnQge0V4cHJlc3Npb25GZWF0dXJlfSBmcm9tIFwiLi4vLi4vZmVhdHVyZS9hbmltYXRpb24vRXhwcmVzc2lvbkZlYXR1cmVcIjtcbmltcG9ydCB7Q29tcG9uZW50LCBFbnRpdHl9IGZyb20gXCJhZnJhbWVcIjtcbmltcG9ydCB7Q29tcG9uZW50Q29udHJvbGxlckRlZmluaXRpb24sIENvbXBvc2l0ZUNvbXBvbmVudENvbnRyb2xsZXJ9IGZyb20gXCJhZnJhbWUtdHlwZXNjcmlwdC1ib2lsZXJwbGF0ZVwiO1xuXG5leHBvcnQgY2xhc3MgQXZhdGFyQ29udHJvbGxlciBleHRlbmRzIENvbXBvc2l0ZUNvbXBvbmVudENvbnRyb2xsZXIge1xuXG4gICAgcHVibGljIHN0YXRpYyBERUZJTklUSU9OID0gbmV3IENvbXBvbmVudENvbnRyb2xsZXJEZWZpbml0aW9uKFwiYXZhdGFyXCIsIHt9LCBmYWxzZSwgdHJ1ZSwgKGNvbXBvbmVudDogQ29tcG9uZW50LCBlbnRpdHk6IEVudGl0eSwgZGF0YTogYW55KSA9PiBuZXcgQXZhdGFyQ29udHJvbGxlcihjb21wb25lbnQsIGVudGl0eSwgZGF0YSkpO1xuXG4gICAgY29uc3RydWN0b3IoY29tcG9uZW50OiBDb21wb25lbnQsIGVudGl0eTogRW50aXR5LCBkYXRhOiBhbnkpIHtcbiAgICAgICAgc3VwZXIoY29tcG9uZW50LCBlbnRpdHksIGRhdGEpO1xuICAgIH1cblxuICAgIGluaXQoKTogdm9pZCB7XG4gICAgICAgIHRoaXMuYWRkRmVhdHVyZShuZXcgRXhwcmVzc2lvbkZlYXR1cmUodGhpcywgdGhpcy5lbnRpdHkhISkpO1xuICAgICAgICB0aGlzLmFkZEZlYXR1cmUobmV3IEFuaW1hdGlvbkZlYXR1cmUodGhpcywgdGhpcy5lbnRpdHkhISkpO1xuICAgICAgICBzdXBlci5pbml0KCk7XG4gICAgfVxuXG4gICAgdGljayh0aW1lOiBudW1iZXIsIHRpbWVEZWx0YTogbnVtYmVyKTogdm9pZCB7XG4gICAgICAgIHN1cGVyLnRpY2sodGltZSwgdGltZURlbHRhKTtcbiAgICB9XG5cbn1cblxuXG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/browser/component/avatar/AvatarController.ts\n");

/***/ }),

/***/ "./src/browser/component/collidable/CollidableController.ts":
/*!******************************************************************!*\
  !*** ./src/browser/component/collidable/CollidableController.ts ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst aframe_typescript_boilerplate_1 = __webpack_require__(/*! aframe-typescript-boilerplate */ \"./node_modules/aframe-typescript-boilerplate/built/index.js\");\nconst CodeRealityComponentController_1 = __webpack_require__(/*! ../CodeRealityComponentController */ \"./src/browser/component/CodeRealityComponentController.ts\");\nclass CollidableController extends CodeRealityComponentController_1.CodeRealityComponentController {\n    constructor(component, entity, data) {\n        super(component, entity, data);\n    }\n    init() {\n        //console.log(this.componentName + \" init: \" + JSON.stringify(this.data));\n        this.interface.addCollidable(this.entity.object3D);\n    }\n    update(data, oldData) {\n        //console.log(this.componentName + \" update: \" + JSON.stringify(this.data));\n    }\n    remove() {\n        //console.log(this.componentName + \" remove\");\n        this.interface.removeCollidable(this.entity.object3D);\n    }\n    pause() {\n        //console.log(this.componentName + \" pause\");\n    }\n    play() {\n        //console.log(this.componentName + \" play\");\n    }\n    tick(time, timeDelta) {\n    }\n}\nCollidableController.DEFINITION = new aframe_typescript_boilerplate_1.ComponentControllerDefinition(\"collidable\", {}, false, false, (component, entity, data) => new CollidableController(component, entity, data));\nexports.CollidableController = CollidableController;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9jb21wb25lbnQvY29sbGlkYWJsZS9Db2xsaWRhYmxlQ29udHJvbGxlci50cz8yNmQyIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQ0EsZ0tBQXlHO0FBQ3pHLG1LQUFpRjtBQUVqRixNQUFhLG9CQUFxQixTQUFRLCtEQUE4QjtJQUlwRSxZQUFZLFNBQW9CLEVBQUUsTUFBYyxFQUFFLElBQVM7UUFDdkQsS0FBSyxDQUFDLFNBQVMsRUFBRSxNQUFNLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDbkMsQ0FBQztJQUVELElBQUk7UUFDQSwwRUFBMEU7UUFDMUUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUN2RCxDQUFDO0lBRUQsTUFBTSxDQUFDLElBQVMsRUFBRSxPQUFZO1FBQzFCLDRFQUE0RTtJQUNoRixDQUFDO0lBRUQsTUFBTTtRQUNGLDhDQUE4QztRQUM5QyxJQUFJLENBQUMsU0FBUyxDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDMUQsQ0FBQztJQUVELEtBQUs7UUFDRCw2Q0FBNkM7SUFDakQsQ0FBQztJQUVELElBQUk7UUFDQSw0Q0FBNEM7SUFDaEQsQ0FBQztJQUVELElBQUksQ0FBQyxJQUFZLEVBQUUsU0FBaUI7SUFDcEMsQ0FBQzs7QUE3QmEsK0JBQVUsR0FBRyxJQUFJLDZEQUE2QixDQUFDLFlBQVksRUFBRSxFQUFFLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxDQUFDLFNBQW9CLEVBQUUsTUFBYyxFQUFFLElBQVMsRUFBRSxFQUFFLENBQUMsSUFBSSxvQkFBb0IsQ0FBQyxTQUFTLEVBQUUsTUFBTSxFQUFFLElBQUksQ0FBQyxDQUFDLENBQUM7QUFGek0sb0RBaUNDIiwiZmlsZSI6Ii4vc3JjL2Jyb3dzZXIvY29tcG9uZW50L2NvbGxpZGFibGUvQ29sbGlkYWJsZUNvbnRyb2xsZXIudHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NvbXBvbmVudCwgRW50aXR5fSBmcm9tIFwiYWZyYW1lXCI7XG5pbXBvcnQge0Fic3RyYWN0Q29tcG9uZW50Q29udHJvbGxlciwgQ29tcG9uZW50Q29udHJvbGxlckRlZmluaXRpb259IGZyb20gXCJhZnJhbWUtdHlwZXNjcmlwdC1ib2lsZXJwbGF0ZVwiO1xuaW1wb3J0IHtDb2RlUmVhbGl0eUNvbXBvbmVudENvbnRyb2xsZXJ9IGZyb20gXCIuLi9Db2RlUmVhbGl0eUNvbXBvbmVudENvbnRyb2xsZXJcIjtcblxuZXhwb3J0IGNsYXNzIENvbGxpZGFibGVDb250cm9sbGVyIGV4dGVuZHMgQ29kZVJlYWxpdHlDb21wb25lbnRDb250cm9sbGVyIHtcblxuICAgIHB1YmxpYyBzdGF0aWMgREVGSU5JVElPTiA9IG5ldyBDb21wb25lbnRDb250cm9sbGVyRGVmaW5pdGlvbihcImNvbGxpZGFibGVcIiwge30sIGZhbHNlLCBmYWxzZSwgKGNvbXBvbmVudDogQ29tcG9uZW50LCBlbnRpdHk6IEVudGl0eSwgZGF0YTogYW55KSA9PiBuZXcgQ29sbGlkYWJsZUNvbnRyb2xsZXIoY29tcG9uZW50LCBlbnRpdHksIGRhdGEpKTtcblxuICAgIGNvbnN0cnVjdG9yKGNvbXBvbmVudDogQ29tcG9uZW50LCBlbnRpdHk6IEVudGl0eSwgZGF0YTogYW55KSB7XG4gICAgICAgIHN1cGVyKGNvbXBvbmVudCwgZW50aXR5LCBkYXRhKTtcbiAgICB9XG5cbiAgICBpbml0KCk6IHZvaWQge1xuICAgICAgICAvL2NvbnNvbGUubG9nKHRoaXMuY29tcG9uZW50TmFtZSArIFwiIGluaXQ6IFwiICsgSlNPTi5zdHJpbmdpZnkodGhpcy5kYXRhKSk7XG4gICAgICAgIHRoaXMuaW50ZXJmYWNlLmFkZENvbGxpZGFibGUodGhpcy5lbnRpdHkub2JqZWN0M0QpO1xuICAgIH1cblxuICAgIHVwZGF0ZShkYXRhOiBhbnksIG9sZERhdGE6IGFueSk6IHZvaWQge1xuICAgICAgICAvL2NvbnNvbGUubG9nKHRoaXMuY29tcG9uZW50TmFtZSArIFwiIHVwZGF0ZTogXCIgKyBKU09OLnN0cmluZ2lmeSh0aGlzLmRhdGEpKTtcbiAgICB9XG5cbiAgICByZW1vdmUoKTogdm9pZCB7XG4gICAgICAgIC8vY29uc29sZS5sb2codGhpcy5jb21wb25lbnROYW1lICsgXCIgcmVtb3ZlXCIpO1xuICAgICAgICB0aGlzLmludGVyZmFjZS5yZW1vdmVDb2xsaWRhYmxlKHRoaXMuZW50aXR5Lm9iamVjdDNEKTtcbiAgICB9XG5cbiAgICBwYXVzZSgpOiB2b2lkIHtcbiAgICAgICAgLy9jb25zb2xlLmxvZyh0aGlzLmNvbXBvbmVudE5hbWUgKyBcIiBwYXVzZVwiKTtcbiAgICB9XG5cbiAgICBwbGF5KCk6IHZvaWQge1xuICAgICAgICAvL2NvbnNvbGUubG9nKHRoaXMuY29tcG9uZW50TmFtZSArIFwiIHBsYXlcIik7XG4gICAgfVxuXG4gICAgdGljayh0aW1lOiBudW1iZXIsIHRpbWVEZWx0YTogbnVtYmVyKTogdm9pZCB7XG4gICAgfVxuXG59XG5cblxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/browser/component/collidable/CollidableController.ts\n");

/***/ }),

/***/ "./src/browser/component/label/UserNameController.ts":
/*!***********************************************************!*\
  !*** ./src/browser/component/label/UserNameController.ts ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst aframe_typescript_boilerplate_1 = __webpack_require__(/*! aframe-typescript-boilerplate */ \"./node_modules/aframe-typescript-boilerplate/built/index.js\");\nconst three_1 = __webpack_require__(/*! three */ \"three\");\nconst CodeRealityComponentController_1 = __webpack_require__(/*! ../CodeRealityComponentController */ \"./src/browser/component/CodeRealityComponentController.ts\");\nclass UserNameController extends CodeRealityComponentController_1.CodeRealityComponentController {\n    constructor(component, entity, data) {\n        super(component, entity, data);\n        this.size = new three_1.Vector3(0, 0, 0);\n        this.initialized = false;\n        this.cameraPosition = new three_1.Vector3(0, 0, 0);\n        this.labelPosition = new three_1.Vector3(0, 0, 0);\n        this.lastDirection = new three_1.Vector3(0, 0, 0);\n        this.lastLabelNormal = new three_1.Vector3(0, 0, 0);\n    }\n    init() {\n        console.log(this.componentName + \" init: \" + JSON.stringify(this.data));\n    }\n    update(data, oldData) {\n        //console.log(this.componentName + \" update: \" + JSON.stringify(this.data));\n    }\n    remove() {\n        //console.log(this.componentName + \" remove\");\n    }\n    pause() {\n        //console.log(this.componentName + \" pause\");\n    }\n    play() {\n        //console.log(this.componentName + \" play\");\n    }\n    tick(time, timeDelta) {\n        if (!this.initialized && this.entity.getObject3D(\"mesh\")) {\n            this.initialized = true;\n            setTimeout(() => {\n                this.size = new three_1.Box3().setFromObject(this.entity.getObject3D(\"mesh\")).getSize(this.size);\n                const height = new three_1.Box3().setFromObject(this.entity.getObject3D(\"mesh\")).getSize(this.size).y;\n                const text = this.data;\n                const x = 0;\n                const y = 3 * (height + 0.4); // Remove x 3 when model scaling is removed.\n                const z = 0;\n                this.labelElement = document.createElement('a-text');\n                //this.labelElement.setAttribute(\"shadow\", \"castShadow: false; receiveShadow: false;\");\n                this.labelElement.setAttribute(\"transparent\", \"true\");\n                this.labelElement.setAttribute(\"value\", text);\n                this.labelElement.setAttribute(\"color\", \"#EFEFEF\");\n                this.labelElement.setAttribute(\"opacity\", \"0.9\");\n                this.labelElement.setAttribute(\"align\", \"center\");\n                this.labelElement.setAttribute(\"font\", \"kelsonsans\");\n                this.labelElement.setAttribute(\"scale\", \"1 1\");\n                this.labelElement.setAttribute(\"wrap-count\", \"30\");\n                this.labelElement.setAttribute(\"position\", x.toFixed(2) + \" \" + y.toFixed(2) + \" \" + z.toFixed(2));\n                this.entity.appendChild(this.labelElement);\n            }, 300);\n        }\n        else if (this.labelElement && this.labelElement.object3D) {\n            const labelObject = this.labelElement.object3D;\n            this.cameraPosition.copy(this.interface.cameraEntity.object3D.position);\n            this.cameraPosition = this.interface.cameraEntity.object3D.parent.localToWorld(this.cameraPosition);\n            this.labelPosition.copy(labelObject.position);\n            this.labelPosition = this.entity.object3D.localToWorld(this.labelPosition);\n            const direction = this.labelPosition.sub(this.cameraPosition).normalize();\n            direction.y = 0;\n            direction.normalize();\n            const labelNormal = labelObject.localToWorld(new three_1.Vector3(0, 0, -1)).sub(labelObject.localToWorld(new three_1.Vector3(0, 0, 0))).normalize();\n            labelNormal.y = 0;\n            labelNormal.normalize();\n            if (direction.x == this.lastDirection.x &&\n                direction.y == this.lastDirection.y &&\n                direction.z == this.lastDirection.z &&\n                labelNormal.x == this.lastLabelNormal.x &&\n                labelNormal.y == this.lastLabelNormal.y &&\n                labelNormal.z == this.lastLabelNormal.z) {\n                return;\n            }\n            this.lastDirection.copy(direction);\n            this.lastLabelNormal.copy(labelNormal);\n            const quaternion = new three_1.Quaternion(); // create one and reuse it\n            quaternion.setFromUnitVectors(labelNormal, direction);\n            const newLabelQuaternion = quaternion.multiply(labelObject.quaternion);\n            labelObject.quaternion.copy(newLabelQuaternion);\n        }\n    }\n}\nUserNameController.DEFINITION = new aframe_typescript_boilerplate_1.ComponentControllerDefinition(\"user-name\", {\n    type: 'string', default: '?'\n}, false, true, (component, entity, data) => new UserNameController(component, entity, data));\nexports.UserNameController = UserNameController;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/browser/component/label/UserNameController.ts\n");

/***/ }),

/***/ "./src/browser/component/quaternion/QuaternionController.ts":
/*!******************************************************************!*\
  !*** ./src/browser/component/quaternion/QuaternionController.ts ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst aframe_typescript_boilerplate_1 = __webpack_require__(/*! aframe-typescript-boilerplate */ \"./node_modules/aframe-typescript-boilerplate/built/index.js\");\nclass QuaternionController extends aframe_typescript_boilerplate_1.AbstractComponentController {\n    constructor(component, entity, data) {\n        super(component, entity, data);\n    }\n    init() {\n        //console.log(this.componentName + \" init: \" + JSON.stringify(this.data));\n        const x = this.data.x;\n        const y = this.data.y;\n        const z = this.data.z;\n        const w = this.data.w;\n        this.entity.object3D.quaternion.x = x;\n        this.entity.object3D.quaternion.y = y;\n        this.entity.object3D.quaternion.z = z;\n        this.entity.object3D.quaternion.w = w;\n    }\n    update(data, oldData) {\n        const x = data.x;\n        const y = data.y;\n        const z = data.z;\n        const w = data.w;\n        this.entity.object3D.quaternion.x = x;\n        this.entity.object3D.quaternion.y = y;\n        this.entity.object3D.quaternion.z = z;\n        this.entity.object3D.quaternion.w = w;\n    }\n    remove() {\n        //console.log(this.componentName + \" remove\");\n    }\n    pause() {\n        //console.log(this.componentName + \" pause\");\n    }\n    play() {\n        //console.log(this.componentName + \" play\");\n    }\n    tick(time, timeDelta) {\n    }\n}\nQuaternionController.DEFINITION = new aframe_typescript_boilerplate_1.ComponentControllerDefinition(\"quaternion\", {\n    type: 'vec4'\n}, false, false, (component, entity, data) => new QuaternionController(component, entity, data));\nexports.QuaternionController = QuaternionController;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9jb21wb25lbnQvcXVhdGVybmlvbi9RdWF0ZXJuaW9uQ29udHJvbGxlci50cz82ZjE1Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQ0EsZ0tBQXlHO0FBRXpHLE1BQWEsb0JBQXFCLFNBQVEsMkRBQTJCO0lBUWpFLFlBQVksU0FBb0IsRUFBRSxNQUFjLEVBQUUsSUFBUztRQUN2RCxLQUFLLENBQUMsU0FBUyxFQUFFLE1BQU0sRUFBRSxJQUFJLENBQUMsQ0FBQztJQUNuQyxDQUFDO0lBRUQsSUFBSTtRQUNBLDBFQUEwRTtRQUUxRSxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztRQUN0QixNQUFNLENBQUMsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztRQUN0QixNQUFNLENBQUMsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztRQUN0QixNQUFNLENBQUMsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztRQUV0QixJQUFJLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxVQUFVLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUN0QyxJQUFJLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxVQUFVLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUN0QyxJQUFJLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxVQUFVLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUN0QyxJQUFJLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxVQUFVLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUUxQyxDQUFDO0lBRUQsTUFBTSxDQUFDLElBQVMsRUFBRSxPQUFZO1FBQzFCLE1BQU0sQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDLENBQUM7UUFDakIsTUFBTSxDQUFDLEdBQUcsSUFBSSxDQUFDLENBQUMsQ0FBQztRQUNqQixNQUFNLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQyxDQUFDO1FBQ2pCLE1BQU0sQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDLENBQUM7UUFFakIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsVUFBVSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDdEMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsVUFBVSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDdEMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsVUFBVSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDdEMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsVUFBVSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDMUMsQ0FBQztJQUVELE1BQU07UUFDRiw4Q0FBOEM7SUFDbEQsQ0FBQztJQUVELEtBQUs7UUFDRCw2Q0FBNkM7SUFDakQsQ0FBQztJQUVELElBQUk7UUFDQSw0Q0FBNEM7SUFDaEQsQ0FBQztJQUVELElBQUksQ0FBQyxJQUFZLEVBQUUsU0FBaUI7SUFDcEMsQ0FBQzs7QUFsRGEsK0JBQVUsR0FBRyxJQUFJLDZEQUE2QixDQUFDLFlBQVksRUFBRTtJQUN2RSxJQUFJLEVBQUUsTUFBTTtDQUNmLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxDQUFDLFNBQW9CLEVBQUUsTUFBYyxFQUFFLElBQVMsRUFBRSxFQUFFLENBQUMsSUFBSSxvQkFBb0IsQ0FBQyxTQUFTLEVBQUUsTUFBTSxFQUFFLElBQUksQ0FBQyxDQUFDLENBQUM7QUFKN0gsb0RBc0RDIiwiZmlsZSI6Ii4vc3JjL2Jyb3dzZXIvY29tcG9uZW50L3F1YXRlcm5pb24vUXVhdGVybmlvbkNvbnRyb2xsZXIudHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NvbXBvbmVudCwgRW50aXR5fSBmcm9tIFwiYWZyYW1lXCI7XG5pbXBvcnQge0Fic3RyYWN0Q29tcG9uZW50Q29udHJvbGxlciwgQ29tcG9uZW50Q29udHJvbGxlckRlZmluaXRpb259IGZyb20gXCJhZnJhbWUtdHlwZXNjcmlwdC1ib2lsZXJwbGF0ZVwiO1xuXG5leHBvcnQgY2xhc3MgUXVhdGVybmlvbkNvbnRyb2xsZXIgZXh0ZW5kcyBBYnN0cmFjdENvbXBvbmVudENvbnRyb2xsZXIge1xuXG4gICAgcHVibGljIHN0YXRpYyBERUZJTklUSU9OID0gbmV3IENvbXBvbmVudENvbnRyb2xsZXJEZWZpbml0aW9uKFwicXVhdGVybmlvblwiLCB7XG4gICAgICAgIHR5cGU6ICd2ZWM0J1xuICAgIH0sIGZhbHNlLCBmYWxzZSwgKGNvbXBvbmVudDogQ29tcG9uZW50LCBlbnRpdHk6IEVudGl0eSwgZGF0YTogYW55KSA9PiBuZXcgUXVhdGVybmlvbkNvbnRyb2xsZXIoY29tcG9uZW50LCBlbnRpdHksIGRhdGEpKTtcblxuICAgIGxhYmVsRWxlbWVudDogRWxlbWVudCB8IHVuZGVmaW5lZDtcblxuICAgIGNvbnN0cnVjdG9yKGNvbXBvbmVudDogQ29tcG9uZW50LCBlbnRpdHk6IEVudGl0eSwgZGF0YTogYW55KSB7XG4gICAgICAgIHN1cGVyKGNvbXBvbmVudCwgZW50aXR5LCBkYXRhKTtcbiAgICB9XG5cbiAgICBpbml0KCk6IHZvaWQge1xuICAgICAgICAvL2NvbnNvbGUubG9nKHRoaXMuY29tcG9uZW50TmFtZSArIFwiIGluaXQ6IFwiICsgSlNPTi5zdHJpbmdpZnkodGhpcy5kYXRhKSk7XG5cbiAgICAgICAgY29uc3QgeCA9IHRoaXMuZGF0YS54O1xuICAgICAgICBjb25zdCB5ID0gdGhpcy5kYXRhLnk7XG4gICAgICAgIGNvbnN0IHogPSB0aGlzLmRhdGEuejtcbiAgICAgICAgY29uc3QgdyA9IHRoaXMuZGF0YS53O1xuXG4gICAgICAgIHRoaXMuZW50aXR5Lm9iamVjdDNELnF1YXRlcm5pb24ueCA9IHg7XG4gICAgICAgIHRoaXMuZW50aXR5Lm9iamVjdDNELnF1YXRlcm5pb24ueSA9IHk7XG4gICAgICAgIHRoaXMuZW50aXR5Lm9iamVjdDNELnF1YXRlcm5pb24ueiA9IHo7XG4gICAgICAgIHRoaXMuZW50aXR5Lm9iamVjdDNELnF1YXRlcm5pb24udyA9IHc7XG5cbiAgICB9XG5cbiAgICB1cGRhdGUoZGF0YTogYW55LCBvbGREYXRhOiBhbnkpOiB2b2lkIHtcbiAgICAgICAgY29uc3QgeCA9IGRhdGEueDtcbiAgICAgICAgY29uc3QgeSA9IGRhdGEueTtcbiAgICAgICAgY29uc3QgeiA9IGRhdGEuejtcbiAgICAgICAgY29uc3QgdyA9IGRhdGEudztcblxuICAgICAgICB0aGlzLmVudGl0eS5vYmplY3QzRC5xdWF0ZXJuaW9uLnggPSB4O1xuICAgICAgICB0aGlzLmVudGl0eS5vYmplY3QzRC5xdWF0ZXJuaW9uLnkgPSB5O1xuICAgICAgICB0aGlzLmVudGl0eS5vYmplY3QzRC5xdWF0ZXJuaW9uLnogPSB6O1xuICAgICAgICB0aGlzLmVudGl0eS5vYmplY3QzRC5xdWF0ZXJuaW9uLncgPSB3O1xuICAgIH1cblxuICAgIHJlbW92ZSgpOiB2b2lkIHtcbiAgICAgICAgLy9jb25zb2xlLmxvZyh0aGlzLmNvbXBvbmVudE5hbWUgKyBcIiByZW1vdmVcIik7XG4gICAgfVxuXG4gICAgcGF1c2UoKTogdm9pZCB7XG4gICAgICAgIC8vY29uc29sZS5sb2codGhpcy5jb21wb25lbnROYW1lICsgXCIgcGF1c2VcIik7XG4gICAgfVxuXG4gICAgcGxheSgpOiB2b2lkIHtcbiAgICAgICAgLy9jb25zb2xlLmxvZyh0aGlzLmNvbXBvbmVudE5hbWUgKyBcIiBwbGF5XCIpO1xuICAgIH1cblxuICAgIHRpY2sodGltZTogbnVtYmVyLCB0aW1lRGVsdGE6IG51bWJlcik6IHZvaWQge1xuICAgIH1cblxufVxuXG5cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/browser/component/quaternion/QuaternionController.ts\n");

/***/ }),

/***/ "./src/browser/component/texture/BillboardController.ts":
/*!**************************************************************!*\
  !*** ./src/browser/component/texture/BillboardController.ts ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst three_1 = __webpack_require__(/*! three */ \"three\");\nconst aframe_typescript_boilerplate_1 = __webpack_require__(/*! aframe-typescript-boilerplate */ \"./node_modules/aframe-typescript-boilerplate/built/index.js\");\nconst CodeRealityComponentController_1 = __webpack_require__(/*! ../CodeRealityComponentController */ \"./src/browser/component/CodeRealityComponentController.ts\");\n/**\n * Modified from https://github.com/nylki/aframe-fit-texture-component.\n */\nclass BillboardController extends CodeRealityComponentController_1.CodeRealityComponentController {\n    constructor(component, entity, data) {\n        super(component, entity, data);\n        this.cameraPosition = new three_1.Vector3(0, 0, 0);\n        this.billboardPosition = new three_1.Vector3(0, 0, 0);\n        this.cameraLastPosition = new three_1.Vector3(0, 0, 0);\n    }\n    init() {\n        const srcUrl = this.data.src;\n        this.width = this.data.width;\n        this.height = this.data.height;\n        //console.log(this.componentName + \" init: \" + srcUrl);\n        this.entity.setAttribute(\"material\", \"src: url(\" + srcUrl + \");  side: double; transparent: true; shader: flat;\");\n    }\n    update(data, oldData) {\n        if (this.data === false)\n            return;\n        if (this.geometryWidth != undefined || this.geometryHeight != undefined) {\n            this.applyTransformation();\n        }\n        else {\n            const textureLoaded = (e) => {\n                const width = e.detail.texture.image.videoWidth || e.detail.texture.image.width;\n                const height = e.detail.texture.image.videoHeight || e.detail.texture.image.height;\n                //console.log(\"texture loaded: \" + width + \", \" + height);\n                if (width === 0 || height === 0)\n                    return;\n                this.geometryWidth = width;\n                this.geometryHeight = height;\n                this.applyTransformation();\n            };\n            this.entity.addEventListener('materialvideoloadeddata', textureLoaded);\n            this.entity.addEventListener('materialtextureloaded', textureLoaded);\n        }\n    }\n    remove() {\n    }\n    pause() {\n    }\n    play() {\n    }\n    tick(time, timeDelta) {\n        this.cameraPosition.copy(this.interface.cameraEntity.object3D.position);\n        this.cameraPosition = this.interface.cameraEntity.object3D.parent.localToWorld(this.cameraPosition);\n        if (this.cameraPosition.x == this.cameraLastPosition.x &&\n            this.cameraPosition.y == this.cameraLastPosition.y &&\n            this.cameraPosition.z == this.cameraLastPosition.z) {\n            // No need to turn billboard.\n            return;\n        }\n        this.cameraLastPosition.copy(this.cameraPosition);\n        this.billboardPosition.copy(this.entity.object3D.position);\n        this.billboardPosition = this.entity.object3D.parent.localToWorld(this.billboardPosition);\n        const direction = this.billboardPosition.sub(this.cameraPosition).normalize();\n        direction.y = 0;\n        direction.normalize();\n        const billboardNormal = this.entity.object3D.localToWorld(new three_1.Vector3(0, 0, 1)).sub(this.entity.object3D.localToWorld(new three_1.Vector3(0, 0, 0))).normalize();\n        billboardNormal.y = 0;\n        billboardNormal.normalize();\n        const quaternion = new three_1.Quaternion(); // create one and reuse it\n        quaternion.setFromUnitVectors(billboardNormal, direction);\n        const newBillboardQuaternion = quaternion.multiply(this.entity.object3D.quaternion);\n        this.entity.object3D.quaternion.copy(newBillboardQuaternion);\n    }\n    applyTransformation() {\n        const heightWithRatio = this.geometryHeight / this.geometryWidth;\n        let width = this.width;\n        let height = this.height;\n        if (width) {\n            height = width * heightWithRatio;\n        }\n        else if (height) {\n            width = height / heightWithRatio;\n        }\n        else {\n            height = 1.8;\n            width = height / heightWithRatio;\n        }\n        this.entity.setAttribute('geometry', 'primitive: plane;width: ' + width + ';height: ' + height + ';');\n        if (this.heightCorrection) {\n            this.entity.object3D.position.y -= this.heightCorrection;\n        }\n        this.heightCorrection = height / 2;\n        this.entity.object3D.position.y += this.heightCorrection;\n    }\n}\nBillboardController.DEFINITION = new aframe_typescript_boilerplate_1.ComponentControllerDefinition(\"billboard\", {\n    src: { type: 'asset', default: 'https://66.media.tumblr.com/14a4d4777e95162bfd126f0c99228261/tumblr_n59pgipQxX1t0naplo1_500.jpg' },\n    width: { type: 'number' },\n    height: { type: 'number', default: 1.8 }\n}, false, true, (component, entity, data) => new BillboardController(component, entity, data));\nexports.BillboardController = BillboardController;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/browser/component/texture/BillboardController.ts\n");

/***/ }),

/***/ "./src/browser/component/texture/PictureController.ts":
/*!************************************************************!*\
  !*** ./src/browser/component/texture/PictureController.ts ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst aframe_typescript_boilerplate_1 = __webpack_require__(/*! aframe-typescript-boilerplate */ \"./node_modules/aframe-typescript-boilerplate/built/index.js\");\n/**\n * Modified from https://github.com/nylki/aframe-fit-texture-component.\n */\nclass PictureController extends aframe_typescript_boilerplate_1.AbstractComponentController {\n    constructor(component, entity, data) {\n        super(component, entity, data);\n    }\n    init() {\n        const srcUrl = this.data.src;\n        this.width = this.data.width;\n        this.height = this.data.height;\n        //console.log(this.componentName + \" init: \" + srcUrl);\n        this.entity.setAttribute(\"material\", \"src: url(\" + srcUrl + \");  side: double; transparent: true;\");\n    }\n    update(data, oldData) {\n        if (this.data === false)\n            return;\n        if (this.geometryWidth != undefined || this.geometryHeight != undefined) {\n            this.applyTransformation();\n        }\n        else {\n            const textureLoaded = (e) => {\n                const width = e.detail.texture.image.videoWidth || e.detail.texture.image.width;\n                const height = e.detail.texture.image.videoHeight || e.detail.texture.image.height;\n                //console.log(\"texture loaded: \" + width + \", \" + height);\n                if (width === 0 || height === 0)\n                    return;\n                this.geometryWidth = width;\n                this.geometryHeight = height;\n                this.applyTransformation();\n            };\n            this.entity.addEventListener('materialvideoloadeddata', textureLoaded);\n            this.entity.addEventListener('materialtextureloaded', textureLoaded);\n        }\n    }\n    remove() {\n    }\n    pause() {\n    }\n    play() {\n    }\n    tick(time, timeDelta) {\n    }\n    applyTransformation() {\n        const heightWithRatio = this.geometryHeight / this.geometryWidth;\n        let width = this.width;\n        let height = this.height;\n        if (width) {\n            height = width * heightWithRatio;\n        }\n        else if (height) {\n            width = height / heightWithRatio;\n        }\n        else {\n            height = 1.8;\n            width = height / heightWithRatio;\n        }\n        this.entity.setAttribute('geometry', 'primitive: plane;width: ' + width + '; height: ' + height + ';');\n        if (this.heightCorrection) {\n            this.entity.object3D.position.y -= this.heightCorrection;\n        }\n        this.heightCorrection = height / 2;\n        this.entity.object3D.position.y += this.heightCorrection;\n    }\n}\nPictureController.DEFINITION = new aframe_typescript_boilerplate_1.ComponentControllerDefinition(\"picture\", {\n    src: { type: 'asset', default: 'https://66.media.tumblr.com/14a4d4777e95162bfd126f0c99228261/tumblr_n59pgipQxX1t0naplo1_500.jpg' },\n    width: { type: 'number' },\n    height: { type: 'number', default: 1.8 }\n}, false, false, (component, entity, data) => new PictureController(component, entity, data));\nexports.PictureController = PictureController;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9jb21wb25lbnQvdGV4dHVyZS9QaWN0dXJlQ29udHJvbGxlci50cz85OWFkIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQ0EsZ0tBQXlHO0FBRXpHOztHQUVHO0FBQ0gsTUFBYSxpQkFBa0IsU0FBUSwyREFBMkI7SUFnQjlELFlBQVksU0FBb0IsRUFBRSxNQUFjLEVBQUUsSUFBUztRQUN2RCxLQUFLLENBQUMsU0FBUyxFQUFFLE1BQU0sRUFBRSxJQUFJLENBQUMsQ0FBQztJQUNuQyxDQUFDO0lBRUQsSUFBSTtRQUNBLE1BQU0sTUFBTSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDO1FBQzdCLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUM7UUFDN0IsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQztRQUMvQix1REFBdUQ7UUFDdkQsSUFBSSxDQUFDLE1BQU0sQ0FBQyxZQUFZLENBQUMsVUFBVSxFQUFFLFdBQVcsR0FBRyxNQUFNLEdBQUcsc0NBQXNDLENBQUMsQ0FBQztJQUN4RyxDQUFDO0lBRUQsTUFBTSxDQUFDLElBQVMsRUFBRSxPQUFZO1FBQzFCLElBQUksSUFBSSxDQUFDLElBQUksS0FBSyxLQUFLO1lBQUUsT0FBTztRQUVoQyxJQUFJLElBQUksQ0FBQyxhQUFhLElBQUksU0FBUyxJQUFJLElBQUksQ0FBQyxjQUFjLElBQUksU0FBUyxFQUFFO1lBQ3JFLElBQUksQ0FBQyxtQkFBbUIsRUFBRSxDQUFDO1NBQzlCO2FBQU07WUFDSCxNQUFNLGFBQWEsR0FBRyxDQUFDLENBQU0sRUFBRSxFQUFFO2dCQUU3QixNQUFNLEtBQUssR0FBRyxDQUFDLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsVUFBVSxJQUFJLENBQUMsQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUM7Z0JBQ2hGLE1BQU0sTUFBTSxHQUFHLENBQUMsQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxXQUFXLElBQUksQ0FBQyxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQztnQkFFbkYsMERBQTBEO2dCQUUxRCxJQUFHLEtBQUssS0FBSyxDQUFDLElBQUksTUFBTSxLQUFLLENBQUM7b0JBQUUsT0FBTztnQkFFdkMsSUFBSSxDQUFDLGFBQWEsR0FBRyxLQUFLLENBQUM7Z0JBQzNCLElBQUksQ0FBQyxjQUFjLEdBQUcsTUFBTSxDQUFDO2dCQUU3QixJQUFJLENBQUMsbUJBQW1CLEVBQUUsQ0FBQztZQUMvQixDQUFDLENBQUM7WUFDRixJQUFJLENBQUMsTUFBTSxDQUFDLGdCQUFnQixDQUFDLHlCQUF5QixFQUFFLGFBQWEsQ0FBQyxDQUFDO1lBQ3ZFLElBQUksQ0FBQyxNQUFNLENBQUMsZ0JBQWdCLENBQUMsdUJBQXVCLEVBQUUsYUFBYSxDQUFDLENBQUM7U0FDeEU7SUFDTCxDQUFDO0lBRUQsTUFBTTtJQUNOLENBQUM7SUFFRCxLQUFLO0lBQ0wsQ0FBQztJQUVELElBQUk7SUFDSixDQUFDO0lBRUQsSUFBSSxDQUFDLElBQVksRUFBRSxTQUFpQjtJQUNwQyxDQUFDO0lBRUQsbUJBQW1CO1FBQ2YsTUFBTSxlQUFlLEdBQUcsSUFBSSxDQUFDLGNBQWdCLEdBQUcsSUFBSSxDQUFDLGFBQWUsQ0FBQztRQUVyRSxJQUFJLEtBQUssR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDO1FBQ3ZCLElBQUksTUFBTSxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUM7UUFFekIsSUFBSSxLQUFLLEVBQUU7WUFDUCxNQUFNLEdBQUcsS0FBSyxHQUFHLGVBQWUsQ0FBQztTQUNwQzthQUFNLElBQUksTUFBTSxFQUFFO1lBQ2YsS0FBSyxHQUFHLE1BQU0sR0FBRyxlQUFlLENBQUM7U0FDcEM7YUFBTTtZQUNILE1BQU0sR0FBRyxHQUFHLENBQUM7WUFDYixLQUFLLEdBQUcsTUFBTSxHQUFHLGVBQWUsQ0FBQztTQUNwQztRQUVELElBQUksQ0FBQyxNQUFNLENBQUMsWUFBWSxDQUFDLFVBQVUsRUFBRSwwQkFBMEIsR0FBRyxLQUFLLEdBQUcsWUFBWSxHQUFDLE1BQU0sR0FBRSxHQUFHLENBQUMsQ0FBQztRQUVwRyxJQUFJLElBQUksQ0FBQyxnQkFBZ0IsRUFBRTtZQUN2QixJQUFJLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsQ0FBQyxJQUFJLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQztTQUM1RDtRQUVELElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxNQUFNLEdBQUcsQ0FBQyxDQUFDO1FBQ25DLElBQUksQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxDQUFDLElBQUksSUFBSSxDQUFDLGdCQUFnQixDQUFDO0lBQzdELENBQUM7O0FBdEZhLDRCQUFVLEdBQUcsSUFBSSw2REFBNkIsQ0FBQyxTQUFTLEVBQ2xFO0lBQ0ksR0FBRyxFQUFFLEVBQUMsSUFBSSxFQUFFLE9BQU8sRUFBRSxPQUFPLEVBQUUsaUdBQWlHLEVBQUM7SUFDaEksS0FBSyxFQUFFLEVBQUMsSUFBSSxFQUFFLFFBQVEsRUFBQztJQUN2QixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsUUFBUSxFQUFFLE9BQU8sRUFBRSxHQUFHLEVBQUM7Q0FDekMsRUFDRCxLQUFLLEVBQUUsS0FBSyxFQUFFLENBQUMsU0FBb0IsRUFBRSxNQUFjLEVBQUUsSUFBUyxFQUFFLEVBQUUsQ0FBQyxJQUFJLGlCQUFpQixDQUFDLFNBQVMsRUFBRSxNQUFNLEVBQUUsSUFBSSxDQUFDLENBQUMsQ0FBQztBQVIzSCw4Q0EwRkMiLCJmaWxlIjoiLi9zcmMvYnJvd3Nlci9jb21wb25lbnQvdGV4dHVyZS9QaWN0dXJlQ29udHJvbGxlci50cy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q29tcG9uZW50LCBFbnRpdHl9IGZyb20gXCJhZnJhbWVcIjtcbmltcG9ydCB7QWJzdHJhY3RDb21wb25lbnRDb250cm9sbGVyLCBDb21wb25lbnRDb250cm9sbGVyRGVmaW5pdGlvbn0gZnJvbSBcImFmcmFtZS10eXBlc2NyaXB0LWJvaWxlcnBsYXRlXCI7XG5cbi8qKlxuICogTW9kaWZpZWQgZnJvbSBodHRwczovL2dpdGh1Yi5jb20vbnlsa2kvYWZyYW1lLWZpdC10ZXh0dXJlLWNvbXBvbmVudC5cbiAqL1xuZXhwb3J0IGNsYXNzIFBpY3R1cmVDb250cm9sbGVyIGV4dGVuZHMgQWJzdHJhY3RDb21wb25lbnRDb250cm9sbGVyIHtcblxuICAgIHB1YmxpYyBzdGF0aWMgREVGSU5JVElPTiA9IG5ldyBDb21wb25lbnRDb250cm9sbGVyRGVmaW5pdGlvbihcInBpY3R1cmVcIixcbiAgICAgICAge1xuICAgICAgICAgICAgc3JjOiB7dHlwZTogJ2Fzc2V0JywgZGVmYXVsdDogJ2h0dHBzOi8vNjYubWVkaWEudHVtYmxyLmNvbS8xNGE0ZDQ3NzdlOTUxNjJiZmQxMjZmMGM5OTIyODI2MS90dW1ibHJfbjU5cGdpcFF4WDF0MG5hcGxvMV81MDAuanBnJ30sXG4gICAgICAgICAgICB3aWR0aDoge3R5cGU6ICdudW1iZXInfSxcbiAgICAgICAgICAgIGhlaWdodDoge3R5cGU6ICdudW1iZXInLCBkZWZhdWx0OiAxLjh9XG4gICAgICAgIH0sXG4gICAgICAgIGZhbHNlLCBmYWxzZSwgKGNvbXBvbmVudDogQ29tcG9uZW50LCBlbnRpdHk6IEVudGl0eSwgZGF0YTogYW55KSA9PiBuZXcgUGljdHVyZUNvbnRyb2xsZXIoY29tcG9uZW50LCBlbnRpdHksIGRhdGEpKTtcblxuICAgIHdpZHRoOiBudW1iZXIgfCB1bmRlZmluZWQ7XG4gICAgaGVpZ2h0OiBudW1iZXIgfCB1bmRlZmluZWQ7XG4gICAgZ2VvbWV0cnlXaWR0aDogbnVtYmVyIHwgdW5kZWZpbmVkO1xuICAgIGdlb21ldHJ5SGVpZ2h0OiBudW1iZXIgfCB1bmRlZmluZWQ7XG4gICAgaGVpZ2h0Q29ycmVjdGlvbjogbnVtYmVyIHwgdW5kZWZpbmVkO1xuXG4gICAgY29uc3RydWN0b3IoY29tcG9uZW50OiBDb21wb25lbnQsIGVudGl0eTogRW50aXR5LCBkYXRhOiBhbnkpIHtcbiAgICAgICAgc3VwZXIoY29tcG9uZW50LCBlbnRpdHksIGRhdGEpO1xuICAgIH1cblxuICAgIGluaXQoKTogdm9pZCB7XG4gICAgICAgIGNvbnN0IHNyY1VybCA9IHRoaXMuZGF0YS5zcmM7XG4gICAgICAgIHRoaXMud2lkdGggPSB0aGlzLmRhdGEud2lkdGg7XG4gICAgICAgIHRoaXMuaGVpZ2h0ID0gdGhpcy5kYXRhLmhlaWdodDtcbiAgICAgICAgLy9jb25zb2xlLmxvZyh0aGlzLmNvbXBvbmVudE5hbWUgKyBcIiBpbml0OiBcIiArIHNyY1VybCk7XG4gICAgICAgIHRoaXMuZW50aXR5LnNldEF0dHJpYnV0ZShcIm1hdGVyaWFsXCIsIFwic3JjOiB1cmwoXCIgKyBzcmNVcmwgKyBcIik7ICBzaWRlOiBkb3VibGU7IHRyYW5zcGFyZW50OiB0cnVlO1wiKTtcbiAgICB9XG5cbiAgICB1cGRhdGUoZGF0YTogYW55LCBvbGREYXRhOiBhbnkpOiB2b2lkIHtcbiAgICAgICAgaWYgKHRoaXMuZGF0YSA9PT0gZmFsc2UpIHJldHVybjtcblxuICAgICAgICBpZiAodGhpcy5nZW9tZXRyeVdpZHRoICE9IHVuZGVmaW5lZCB8fCB0aGlzLmdlb21ldHJ5SGVpZ2h0ICE9IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgdGhpcy5hcHBseVRyYW5zZm9ybWF0aW9uKCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjb25zdCB0ZXh0dXJlTG9hZGVkID0gKGU6IGFueSkgPT4ge1xuXG4gICAgICAgICAgICAgICAgY29uc3Qgd2lkdGggPSBlLmRldGFpbC50ZXh0dXJlLmltYWdlLnZpZGVvV2lkdGggfHwgZS5kZXRhaWwudGV4dHVyZS5pbWFnZS53aWR0aDtcbiAgICAgICAgICAgICAgICBjb25zdCBoZWlnaHQgPSBlLmRldGFpbC50ZXh0dXJlLmltYWdlLnZpZGVvSGVpZ2h0IHx8IGUuZGV0YWlsLnRleHR1cmUuaW1hZ2UuaGVpZ2h0O1xuXG4gICAgICAgICAgICAgICAgLy9jb25zb2xlLmxvZyhcInRleHR1cmUgbG9hZGVkOiBcIiArIHdpZHRoICsgXCIsIFwiICsgaGVpZ2h0KTtcblxuICAgICAgICAgICAgICAgIGlmKHdpZHRoID09PSAwIHx8IGhlaWdodCA9PT0gMCkgcmV0dXJuO1xuXG4gICAgICAgICAgICAgICAgdGhpcy5nZW9tZXRyeVdpZHRoID0gd2lkdGg7XG4gICAgICAgICAgICAgICAgdGhpcy5nZW9tZXRyeUhlaWdodCA9IGhlaWdodDtcblxuICAgICAgICAgICAgICAgIHRoaXMuYXBwbHlUcmFuc2Zvcm1hdGlvbigpO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIHRoaXMuZW50aXR5LmFkZEV2ZW50TGlzdGVuZXIoJ21hdGVyaWFsdmlkZW9sb2FkZWRkYXRhJywgdGV4dHVyZUxvYWRlZCk7XG4gICAgICAgICAgICB0aGlzLmVudGl0eS5hZGRFdmVudExpc3RlbmVyKCdtYXRlcmlhbHRleHR1cmVsb2FkZWQnLCB0ZXh0dXJlTG9hZGVkKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJlbW92ZSgpOiB2b2lkIHtcbiAgICB9XG5cbiAgICBwYXVzZSgpOiB2b2lkIHtcbiAgICB9XG5cbiAgICBwbGF5KCk6IHZvaWQge1xuICAgIH1cblxuICAgIHRpY2sodGltZTogbnVtYmVyLCB0aW1lRGVsdGE6IG51bWJlcik6IHZvaWQge1xuICAgIH1cblxuICAgIGFwcGx5VHJhbnNmb3JtYXRpb24oKSB7XG4gICAgICAgIGNvbnN0IGhlaWdodFdpdGhSYXRpbyA9IHRoaXMuZ2VvbWV0cnlIZWlnaHQhISAvIHRoaXMuZ2VvbWV0cnlXaWR0aCEhO1xuXG4gICAgICAgIGxldCB3aWR0aCA9IHRoaXMud2lkdGg7XG4gICAgICAgIGxldCBoZWlnaHQgPSB0aGlzLmhlaWdodDtcblxuICAgICAgICBpZiAod2lkdGgpIHtcbiAgICAgICAgICAgIGhlaWdodCA9IHdpZHRoICogaGVpZ2h0V2l0aFJhdGlvO1xuICAgICAgICB9IGVsc2UgaWYgKGhlaWdodCkge1xuICAgICAgICAgICAgd2lkdGggPSBoZWlnaHQgLyBoZWlnaHRXaXRoUmF0aW87XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBoZWlnaHQgPSAxLjg7XG4gICAgICAgICAgICB3aWR0aCA9IGhlaWdodCAvIGhlaWdodFdpdGhSYXRpbztcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuZW50aXR5LnNldEF0dHJpYnV0ZSgnZ2VvbWV0cnknLCAncHJpbWl0aXZlOiBwbGFuZTt3aWR0aDogJyArIHdpZHRoICsgJzsgaGVpZ2h0OiAnK2hlaWdodCsgJzsnKTtcblxuICAgICAgICBpZiAodGhpcy5oZWlnaHRDb3JyZWN0aW9uKSB7XG4gICAgICAgICAgICB0aGlzLmVudGl0eS5vYmplY3QzRC5wb3NpdGlvbi55IC09IHRoaXMuaGVpZ2h0Q29ycmVjdGlvbjtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuaGVpZ2h0Q29ycmVjdGlvbiA9IGhlaWdodCAvIDI7XG4gICAgICAgIHRoaXMuZW50aXR5Lm9iamVjdDNELnBvc2l0aW9uLnkgKz0gdGhpcy5oZWlnaHRDb3JyZWN0aW9uO1xuICAgIH1cblxufVxuXG5cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/browser/component/texture/PictureController.ts\n");

/***/ }),

/***/ "./src/browser/feature/animation/AnimationFeature.ts":
/*!***********************************************************!*\
  !*** ./src/browser/feature/animation/AnimationFeature.ts ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst three_1 = __webpack_require__(/*! three */ \"three\");\nconst AnimateEventDetail_1 = __webpack_require__(/*! ../../model/AnimateEventDetail */ \"./src/browser/model/AnimateEventDetail.ts\");\nconst AnimationFinishedEventDetail_1 = __webpack_require__(/*! ../../model/AnimationFinishedEventDetail */ \"./src/browser/model/AnimationFinishedEventDetail.ts\");\nconst Events_1 = __webpack_require__(/*! ../../model/Events */ \"./src/browser/model/Events.ts\");\nconst AnimationLoopStyle_1 = __webpack_require__(/*! ./AnimationLoopStyle */ \"./src/browser/feature/animation/AnimationLoopStyle.ts\");\nconst States_1 = __webpack_require__(/*! ../../model/States */ \"./src/browser/model/States.ts\");\nconst aframe_typescript_boilerplate_1 = __webpack_require__(/*! aframe-typescript-boilerplate */ \"./node_modules/aframe-typescript-boilerplate/built/index.js\");\nclass AnimationFeature extends aframe_typescript_boilerplate_1.AbstractFeature {\n    constructor(controller, entity) {\n        super(\"animation-controller\", controller, entity);\n        this.clips = new Map();\n        this.actions = new Map();\n        this.stateSystemController = controller.getSystemController(\"state\");\n        this.movementState = this.stateSystemController.getState(this.entity, States_1.States.STATE_MOVEMENT);\n    }\n    init() {\n        this.addEventListener(Events_1.Events.EVENT_MODEL_LOADED, () => {\n            this.initAnimation();\n        });\n        this.addEventListener(Events_1.Events.EVENT_ANIMATE_BEGIN, (detail) => {\n            this.beginAnimation(detail.clipName, detail.style, detail.repetitions);\n        });\n        this.addEventListener(Events_1.Events.EVENT_ANIMATE_END, (detail) => {\n            this.endAnimation(detail.clipName);\n        });\n    }\n    update(data, oldData) {\n    }\n    remove() {\n    }\n    pause() {\n    }\n    play() {\n    }\n    tick(time, timeDelta) {\n        if (this.mixer) {\n            if (this.actions.has(\"walking\")) {\n                const walkingAction = this.actions.get(\"walking\");\n                // TODO 0.3 scale factor and 1.9 animation walk speed are model specific\n                const walkingAnimationNormalSpeed = this.entity.getAttribute(\"scale\").x / 0.4 * 2; // 1 m/s\n                const entityActualSpeed = this.movementState.distanceDelta / this.movementState.timeDeltaSeconds;\n                const timeScale = this.movementState.facing * entityActualSpeed / walkingAnimationNormalSpeed;\n                walkingAction.setEffectiveTimeScale(timeScale);\n            }\n            this.mixer.update(timeDelta / 1000);\n        }\n    }\n    initAnimation() {\n        const mesh = this.entity.getObject3D('mesh');\n        const clips = mesh.animations;\n        if (!clips) {\n            return;\n        }\n        if (clips.length == 0) {\n            return;\n        }\n        this.mixer = new three_1.AnimationMixer(mesh);\n        this.mixer.addEventListener('finished', (event) => {\n            this.onAnimationFinished(event.action._clip.name);\n        });\n        this.clips.clear();\n        clips.forEach(clip => {\n            this.clips.set(clip.name.toLocaleLowerCase(), clip);\n        });\n        this.actions.clear();\n        this.dispatchEvent(Events_1.Events.EVENT_ANIMATE_BEGIN, new AnimateEventDetail_1.AnimationEventDetail(\"dance\", AnimationLoopStyle_1.AnimationLoopStyle.LOOP_REPEAT, 0));\n    }\n    onAnimationFinished(clipName) {\n        this.dispatchEvent(Events_1.Events.EVENT_ANIMATION_FINISHED, new AnimationFinishedEventDetail_1.AnimationFinishedEventDetails(clipName));\n        this.actions.delete(clipName);\n    }\n    beginAnimation(clipName, style, repetitions) {\n        // If clipNameOriginal is walking and walking does not exist in clips then switch to clipName walk.\n        const clipNameFinal = clipName != \"walking\" ? clipName : (this.clips.has(clipName) ? clipName : \"walk\");\n        if (!this.mixer) {\n            return;\n        }\n        if (!this.clips.has(clipNameFinal)) {\n            return;\n        }\n        const clip = this.clips.get(clipNameFinal);\n        if (clip) {\n            const action = this.actions.has(clipName) ? this.actions.get(clipName) : this.mixer.clipAction(clip);\n            if (style == AnimationLoopStyle_1.AnimationLoopStyle.ONCE) {\n                action.setLoop(three_1.LoopOnce, repetitions);\n            }\n            else if (style == AnimationLoopStyle_1.AnimationLoopStyle.LOOP_REPEAT) {\n                if (repetitions > -1) {\n                    action.setLoop(three_1.LoopRepeat, repetitions);\n                }\n            }\n            else {\n                action.setLoop(three_1.LoopPingPong, repetitions);\n            }\n            action.reset();\n            action.fadeIn(0.25);\n            action.play();\n            this.actions.set(clipName, action);\n        }\n    }\n    endAnimation(clipName) {\n        if (!this.actions.has(clipName)) {\n            return;\n        }\n        const action = this.actions.get(clipName);\n        action.fadeOut(0.25);\n        this.dispatchEvent(Events_1.Events.EVENT_ANIMATION_FINISHED, new AnimationFinishedEventDetail_1.AnimationFinishedEventDetails(clipName));\n        setTimeout(() => {\n            if (this.actions.has(clipName) && this.actions.get(clipName).weight == 0) {\n                action.stop();\n            }\n        }, 1000);\n    }\n}\nexports.AnimationFeature = AnimationFeature;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/browser/feature/animation/AnimationFeature.ts\n");

/***/ }),

/***/ "./src/browser/feature/animation/AnimationLoopStyle.ts":
/*!*************************************************************!*\
  !*** ./src/browser/feature/animation/AnimationLoopStyle.ts ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar AnimationLoopStyle;\n(function (AnimationLoopStyle) {\n    AnimationLoopStyle[AnimationLoopStyle[\"ONCE\"] = 0] = \"ONCE\";\n    AnimationLoopStyle[AnimationLoopStyle[\"LOOP_REPEAT\"] = 1] = \"LOOP_REPEAT\";\n    AnimationLoopStyle[AnimationLoopStyle[\"PINGPONG\"] = 2] = \"PINGPONG\";\n})(AnimationLoopStyle = exports.AnimationLoopStyle || (exports.AnimationLoopStyle = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9mZWF0dXJlL2FuaW1hdGlvbi9BbmltYXRpb25Mb29wU3R5bGUudHM/Y2MyMSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLElBQVksa0JBSVg7QUFKRCxXQUFZLGtCQUFrQjtJQUMxQiwyREFBSTtJQUNKLHlFQUFXO0lBQ1gsbUVBQVE7QUFDWixDQUFDLEVBSlcsa0JBQWtCLEdBQWxCLDBCQUFrQixLQUFsQiwwQkFBa0IsUUFJN0IiLCJmaWxlIjoiLi9zcmMvYnJvd3Nlci9mZWF0dXJlL2FuaW1hdGlvbi9BbmltYXRpb25Mb29wU3R5bGUudHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZW51bSBBbmltYXRpb25Mb29wU3R5bGUge1xuICAgIE9OQ0UsXG4gICAgTE9PUF9SRVBFQVQsXG4gICAgUElOR1BPTkdcbn0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/browser/feature/animation/AnimationLoopStyle.ts\n");

/***/ }),

/***/ "./src/browser/feature/animation/ExpressionFeature.ts":
/*!************************************************************!*\
  !*** ./src/browser/feature/animation/ExpressionFeature.ts ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst AnimateEventDetail_1 = __webpack_require__(/*! ../../model/AnimateEventDetail */ \"./src/browser/model/AnimateEventDetail.ts\");\nconst Events_1 = __webpack_require__(/*! ../../model/Events */ \"./src/browser/model/Events.ts\");\nconst AnimationLoopStyle_1 = __webpack_require__(/*! ./AnimationLoopStyle */ \"./src/browser/feature/animation/AnimationLoopStyle.ts\");\nconst aframe_typescript_boilerplate_1 = __webpack_require__(/*! aframe-typescript-boilerplate */ \"./node_modules/aframe-typescript-boilerplate/built/index.js\");\nclass ExpressionFeature extends aframe_typescript_boilerplate_1.AbstractFeature {\n    constructor(controller, entity) {\n        super(\"expression-controller\", controller, entity);\n        this.expressions = new Set();\n    }\n    init() {\n        this.addEventListener(Events_1.Events.EVENT_STATE_BEGIN, (detail) => {\n            if (detail.state === \"moving\") {\n                this.dispatchEvent(Events_1.Events.EVENT_ANIMATE_BEGIN, new AnimateEventDetail_1.AnimationEventDetail(\"walking\", AnimationLoopStyle_1.AnimationLoopStyle.LOOP_REPEAT, -1));\n            }\n        });\n        this.addEventListener(Events_1.Events.EVENT_STATE_END, (detail) => {\n            if (detail.state === \"moving\") {\n                this.dispatchEvent(Events_1.Events.EVENT_ANIMATE_END, new AnimateEventDetail_1.AnimationEventDetail(\"walking\", AnimationLoopStyle_1.AnimationLoopStyle.LOOP_REPEAT, 10));\n            }\n        });\n    }\n    update(data, oldData) {\n    }\n    remove() {\n    }\n    pause() {\n    }\n    play() {\n    }\n    tick(time, timeDelta) {\n    }\n}\nexports.ExpressionFeature = ExpressionFeature;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9mZWF0dXJlL2FuaW1hdGlvbi9FeHByZXNzaW9uRmVhdHVyZS50cz9kMDQ4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsb0lBQW9FO0FBQ3BFLGdHQUEwQztBQUMxQyxzSUFBd0Q7QUFHeEQsZ0tBQThEO0FBRzlELE1BQWEsaUJBQWtCLFNBQVEsK0NBQWU7SUFJbEQsWUFBWSxVQUErQixFQUFFLE1BQWM7UUFDdkQsS0FBSyxDQUFDLHVCQUF1QixFQUFFLFVBQVUsRUFBRSxNQUFNLENBQUMsQ0FBQztRQUh2RCxnQkFBVyxHQUFnQixJQUFJLEdBQUcsRUFBRSxDQUFDO0lBSXJDLENBQUM7SUFFRCxJQUFJO1FBQ0EsSUFBSSxDQUFDLGdCQUFnQixDQUFDLGVBQU0sQ0FBQyxpQkFBaUIsRUFBRSxDQUFDLE1BQThCLEVBQUUsRUFBRTtZQUMvRSxJQUFJLE1BQU0sQ0FBQyxLQUFLLEtBQUssUUFBUSxFQUFFO2dCQUMzQixJQUFJLENBQUMsYUFBYSxDQUFDLGVBQU0sQ0FBQyxtQkFBbUIsRUFBRSxJQUFJLHlDQUFvQixDQUFDLFNBQVMsRUFBRSx1Q0FBa0IsQ0FBQyxXQUFXLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO2FBQzNIO1FBQ0wsQ0FBQyxDQUFDLENBQUM7UUFDSCxJQUFJLENBQUMsZ0JBQWdCLENBQUMsZUFBTSxDQUFDLGVBQWUsRUFBRSxDQUFDLE1BQThCLEVBQUUsRUFBRTtZQUM3RSxJQUFJLE1BQU0sQ0FBQyxLQUFLLEtBQUssUUFBUSxFQUFFO2dCQUMzQixJQUFJLENBQUMsYUFBYSxDQUFDLGVBQU0sQ0FBQyxpQkFBaUIsRUFBRSxJQUFJLHlDQUFvQixDQUFDLFNBQVMsRUFBRSx1Q0FBa0IsQ0FBQyxXQUFXLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQzthQUN6SDtRQUNMLENBQUMsQ0FBQyxDQUFDO0lBQ1AsQ0FBQztJQUVELE1BQU0sQ0FBQyxJQUFTLEVBQUUsT0FBWTtJQUM5QixDQUFDO0lBRUQsTUFBTTtJQUNOLENBQUM7SUFFRCxLQUFLO0lBQ0wsQ0FBQztJQUVELElBQUk7SUFDSixDQUFDO0lBRUQsSUFBSSxDQUFDLElBQVksRUFBRSxTQUFpQjtJQUNwQyxDQUFDO0NBQ0o7QUFuQ0QsOENBbUNDIiwiZmlsZSI6Ii4vc3JjL2Jyb3dzZXIvZmVhdHVyZS9hbmltYXRpb24vRXhwcmVzc2lvbkZlYXR1cmUudHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0FuaW1hdGlvbkV2ZW50RGV0YWlsfSBmcm9tIFwiLi4vLi4vbW9kZWwvQW5pbWF0ZUV2ZW50RGV0YWlsXCI7XG5pbXBvcnQge0V2ZW50c30gZnJvbSBcIi4uLy4uL21vZGVsL0V2ZW50c1wiO1xuaW1wb3J0IHtBbmltYXRpb25Mb29wU3R5bGV9IGZyb20gXCIuL0FuaW1hdGlvbkxvb3BTdHlsZVwiO1xuaW1wb3J0IHtFbnRpdHl9IGZyb20gXCJhZnJhbWVcIjtcbmltcG9ydCB7RW50aXR5U3RhdGVFdmVudERldGFpbH0gZnJvbSBcIi4uLy4uL21vZGVsL0VudGl0eVN0YXRlRXZlbnREZXRhaWxcIjtcbmltcG9ydCB7QWJzdHJhY3RGZWF0dXJlfSBmcm9tIFwiYWZyYW1lLXR5cGVzY3JpcHQtYm9pbGVycGxhdGVcIjtcbmltcG9ydCB7Q29tcG9uZW50Q29udHJvbGxlcn0gZnJvbSBcImFmcmFtZS10eXBlc2NyaXB0LWJvaWxlcnBsYXRlXCI7XG5cbmV4cG9ydCBjbGFzcyBFeHByZXNzaW9uRmVhdHVyZSBleHRlbmRzIEFic3RyYWN0RmVhdHVyZSB7XG5cbiAgICBleHByZXNzaW9uczogU2V0PHN0cmluZz4gPSBuZXcgU2V0KCk7XG5cbiAgICBjb25zdHJ1Y3Rvcihjb250cm9sbGVyOiBDb21wb25lbnRDb250cm9sbGVyLCBlbnRpdHk6IEVudGl0eSkge1xuICAgICAgICBzdXBlcihcImV4cHJlc3Npb24tY29udHJvbGxlclwiLCBjb250cm9sbGVyLCBlbnRpdHkpO1xuICAgIH1cblxuICAgIGluaXQoKTogdm9pZCB7XG4gICAgICAgIHRoaXMuYWRkRXZlbnRMaXN0ZW5lcihFdmVudHMuRVZFTlRfU1RBVEVfQkVHSU4sIChkZXRhaWw6IEVudGl0eVN0YXRlRXZlbnREZXRhaWwpID0+IHtcbiAgICAgICAgICAgIGlmIChkZXRhaWwuc3RhdGUgPT09IFwibW92aW5nXCIpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmRpc3BhdGNoRXZlbnQoRXZlbnRzLkVWRU5UX0FOSU1BVEVfQkVHSU4sIG5ldyBBbmltYXRpb25FdmVudERldGFpbChcIndhbGtpbmdcIiwgQW5pbWF0aW9uTG9vcFN0eWxlLkxPT1BfUkVQRUFULCAtMSkpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5hZGRFdmVudExpc3RlbmVyKEV2ZW50cy5FVkVOVF9TVEFURV9FTkQsIChkZXRhaWw6IEVudGl0eVN0YXRlRXZlbnREZXRhaWwpID0+IHtcbiAgICAgICAgICAgIGlmIChkZXRhaWwuc3RhdGUgPT09IFwibW92aW5nXCIpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmRpc3BhdGNoRXZlbnQoRXZlbnRzLkVWRU5UX0FOSU1BVEVfRU5ELCBuZXcgQW5pbWF0aW9uRXZlbnREZXRhaWwoXCJ3YWxraW5nXCIsIEFuaW1hdGlvbkxvb3BTdHlsZS5MT09QX1JFUEVBVCwgMTApKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgdXBkYXRlKGRhdGE6IGFueSwgb2xkRGF0YTogYW55KTogdm9pZCB7XG4gICAgfVxuXG4gICAgcmVtb3ZlKCk6IHZvaWQge1xuICAgIH1cblxuICAgIHBhdXNlKCk6IHZvaWQge1xuICAgIH1cblxuICAgIHBsYXkoKTogdm9pZCB7XG4gICAgfVxuXG4gICAgdGljayh0aW1lOiBudW1iZXIsIHRpbWVEZWx0YTogbnVtYmVyKTogdm9pZCB7XG4gICAgfVxufVxuXG5cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/browser/feature/animation/ExpressionFeature.ts\n");

/***/ }),

/***/ "./src/browser/index.ts":
/*!******************************!*\
  !*** ./src/browser/index.ts ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst UserNameController_1 = __webpack_require__(/*! ./component/label/UserNameController */ \"./src/browser/component/label/UserNameController.ts\");\nconst KeyboardAndMouseDevice_1 = __webpack_require__(/*! ./system/interface/device/KeyboardAndMouseDevice */ \"./src/browser/system/interface/device/KeyboardAndMouseDevice.ts\");\nconst AnimatorController_1 = __webpack_require__(/*! ./component/animation/AnimatorController */ \"./src/browser/component/animation/AnimatorController.ts\");\nconst AvatarController_1 = __webpack_require__(/*! ./component/avatar/AvatarController */ \"./src/browser/component/avatar/AvatarController.ts\");\nconst SpaceSystemController_1 = __webpack_require__(/*! ./system/space/SpaceSystemController */ \"./src/browser/system/space/SpaceSystemController.ts\");\nconst StateSystemController_1 = __webpack_require__(/*! ./system/state/StateSystemController */ \"./src/browser/system/state/StateSystemController.ts\");\nconst States_1 = __webpack_require__(/*! ./model/States */ \"./src/browser/model/States.ts\");\nconst MovementState_1 = __webpack_require__(/*! ./model/MovementState */ \"./src/browser/model/MovementState.ts\");\nconst InterfaceSystemController_1 = __webpack_require__(/*! ./system/interface/InterfaceSystemController */ \"./src/browser/system/interface/InterfaceSystemController.ts\");\nconst InterfaceController_1 = __webpack_require__(/*! ./system/interface/InterfaceController */ \"./src/browser/system/interface/InterfaceController.ts\");\nconst WalkTool_1 = __webpack_require__(/*! ./system/interface/tool/WalkTool */ \"./src/browser/system/interface/tool/WalkTool.ts\");\nconst PrimaryControllerDevice_1 = __webpack_require__(/*! ./system/interface/device/PrimaryControllerDevice */ \"./src/browser/system/interface/device/PrimaryControllerDevice.ts\");\nconst AddObjectTool_1 = __webpack_require__(/*! ./system/interface/tool/AddObjectTool */ \"./src/browser/system/interface/tool/AddObjectTool.ts\");\nconst CollidableController_1 = __webpack_require__(/*! ./component/collidable/CollidableController */ \"./src/browser/component/collidable/CollidableController.ts\");\nconst QuaternionController_1 = __webpack_require__(/*! ./component/quaternion/QuaternionController */ \"./src/browser/component/quaternion/QuaternionController.ts\");\nconst TeleportTool_1 = __webpack_require__(/*! ./system/interface/tool/TeleportTool */ \"./src/browser/system/interface/tool/TeleportTool.ts\");\nconst ToolSelectorTool_1 = __webpack_require__(/*! ./system/interface/tool/ToolSelectorTool */ \"./src/browser/system/interface/tool/ToolSelectorTool.ts\");\nconst RemoveObjectTool_1 = __webpack_require__(/*! ./system/interface/tool/RemoveObjectTool */ \"./src/browser/system/interface/tool/RemoveObjectTool.ts\");\nconst ModelController_1 = __webpack_require__(/*! ./system/merge/ModelController */ \"./src/browser/system/merge/ModelController.ts\");\nconst MergeController_1 = __webpack_require__(/*! ./system/merge/MergeController */ \"./src/browser/system/merge/MergeController.ts\");\nconst MergeSystemController_1 = __webpack_require__(/*! ./system/merge/MergeSystemController */ \"./src/browser/system/merge/MergeSystemController.ts\");\nconst LoaderSystemController_1 = __webpack_require__(/*! ./system/loader/LoaderSystemController */ \"./src/browser/system/loader/LoaderSystemController.ts\");\nconst PictureController_1 = __webpack_require__(/*! ./component/texture/PictureController */ \"./src/browser/component/texture/PictureController.ts\");\nconst BillboardController_1 = __webpack_require__(/*! ./component/texture/BillboardController */ \"./src/browser/component/texture/BillboardController.ts\");\nconst ScaleObjectTool_1 = __webpack_require__(/*! ./system/interface/tool/ScaleObjectTool */ \"./src/browser/system/interface/tool/ScaleObjectTool.ts\");\nconst MoveObjectTool_1 = __webpack_require__(/*! ./system/interface/tool/MoveObjectTool */ \"./src/browser/system/interface/tool/MoveObjectTool.ts\");\nconst RotateObjectTool_1 = __webpack_require__(/*! ./system/interface/tool/RotateObjectTool */ \"./src/browser/system/interface/tool/RotateObjectTool.ts\");\nconst AvatarActionLoggerFeature_1 = __webpack_require__(/*! ./component/avatar/AvatarActionLoggerFeature */ \"./src/browser/component/avatar/AvatarActionLoggerFeature.ts\");\n__webpack_require__(/*! ./primitive/billboard */ \"./src/browser/primitive/billboard.ts\");\n__webpack_require__(/*! ./primitive/picture */ \"./src/browser/primitive/picture.ts\");\nconst aframe_typescript_boilerplate_1 = __webpack_require__(/*! aframe-typescript-boilerplate */ \"./node_modules/aframe-typescript-boilerplate/built/index.js\");\nconst ui_1 = __webpack_require__(/*! @tlaukkan/aframe-material-collection-ts/built/src/ui */ \"./node_modules/@tlaukkan/aframe-material-collection-ts/built/src/ui.js\");\nconst UiSystemController_1 = __webpack_require__(/*! ./system/ui/UiSystemController */ \"./src/browser/system/ui/UiSystemController.ts\");\nconst ExampleView_1 = __webpack_require__(/*! ./system/ui/view/ExampleView */ \"./src/browser/system/ui/view/ExampleView.ts\");\nui_1.registerMaterialUiSystem();\naframe_typescript_boilerplate_1.registerSystemController(LoaderSystemController_1.LoaderSystemController.DEFINITION);\naframe_typescript_boilerplate_1.registerSystemController(aframe_typescript_boilerplate_1.ExampleSystemController.DEFINITION);\naframe_typescript_boilerplate_1.registerSystemController(InterfaceSystemController_1.InterfaceSystemController.DEFINITION);\naframe_typescript_boilerplate_1.registerSystemController(StateSystemController_1.StateSystemController.DEFINITION);\naframe_typescript_boilerplate_1.registerSystemController(SpaceSystemController_1.SpaceSystemController.DEFINITION);\naframe_typescript_boilerplate_1.registerSystemController(MergeSystemController_1.MergeSystemController.DEFINITION);\naframe_typescript_boilerplate_1.registerSystemController(UiSystemController_1.UiSystemController.DEFINITION);\naframe_typescript_boilerplate_1.registerComponentController(ExampleView_1.ExampleView.DEFINITION);\naframe_typescript_boilerplate_1.registerComponentController(InterfaceController_1.InterfaceController.DEFINITION);\naframe_typescript_boilerplate_1.registerComponentController(ToolSelectorTool_1.ToolSelectorTool.DEFINITION);\naframe_typescript_boilerplate_1.registerComponentController(AddObjectTool_1.AddObjectTool.DEFINITION);\naframe_typescript_boilerplate_1.registerComponentController(ScaleObjectTool_1.ScaleObjectTool.DEFINITION);\naframe_typescript_boilerplate_1.registerComponentController(MoveObjectTool_1.MoveObjectTool.DEFINITION);\naframe_typescript_boilerplate_1.registerComponentController(RotateObjectTool_1.RotateObjectTool.DEFINITION);\naframe_typescript_boilerplate_1.registerComponentController(RemoveObjectTool_1.RemoveObjectTool.DEFINITION);\naframe_typescript_boilerplate_1.registerComponentController(WalkTool_1.WalkTool.DEFINITION);\naframe_typescript_boilerplate_1.registerComponentController(TeleportTool_1.TeleportTool.DEFINITION);\naframe_typescript_boilerplate_1.registerComponentController(PrimaryControllerDevice_1.PrimaryControllerDevice.DEFINITION);\naframe_typescript_boilerplate_1.registerComponentController(KeyboardAndMouseDevice_1.KeyboardAndMouseDevice.DEFINITION);\naframe_typescript_boilerplate_1.registerComponentController(aframe_typescript_boilerplate_1.ExampleController.DEFINITION);\naframe_typescript_boilerplate_1.registerComponentController(CollidableController_1.CollidableController.DEFINITION);\naframe_typescript_boilerplate_1.registerComponentController(AnimatorController_1.AnimatorController.DEFINITION);\naframe_typescript_boilerplate_1.registerComponentController(AvatarController_1.AvatarController.DEFINITION.add(AvatarActionLoggerFeature_1.AvatarActionLoggerFeature.DEFINITION));\naframe_typescript_boilerplate_1.registerComponentController(UserNameController_1.UserNameController.DEFINITION);\naframe_typescript_boilerplate_1.registerComponentController(QuaternionController_1.QuaternionController.DEFINITION);\naframe_typescript_boilerplate_1.registerComponentController(MergeController_1.MergeController.DEFINITION);\naframe_typescript_boilerplate_1.registerComponentController(ModelController_1.ModelController.DEFINITION);\naframe_typescript_boilerplate_1.registerComponentController(PictureController_1.PictureController.DEFINITION);\naframe_typescript_boilerplate_1.registerComponentController(BillboardController_1.BillboardController.DEFINITION);\nStateSystemController_1.registerStateFactory(States_1.States.STATE_MOVEMENT, () => { return new MovementState_1.MovementState(); });\n// Fix facebook bug adding hash to url\nif (window.location.hash && window.location.hash == '#_=_') {\n    history.pushState(\"\", document.title, window.location.pathname + window.location.search);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/browser/index.ts\n");

/***/ }),

/***/ "./src/browser/math/math.ts":
/*!**********************************!*\
  !*** ./src/browser/math/math.ts ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst three_1 = __webpack_require__(/*! three */ \"three\");\n/**\n * Snaps vector to axis aligned grid.\n * @param vector the vector\n * @param step the grid step\n */\nfunction snapVector3ToAxisAlignedGrid(vector, step) {\n    const snappedPosition = new three_1.Vector3();\n    snappedPosition.x = snapNumberToAxisAlignedGrid(vector.x, step);\n    snappedPosition.y = snapNumberToAxisAlignedGrid(vector.y, step);\n    snappedPosition.z = snapNumberToAxisAlignedGrid(vector.z, step);\n    return snappedPosition;\n}\nexports.snapVector3ToAxisAlignedGrid = snapVector3ToAxisAlignedGrid;\n/**\n * Snap number to grid.\n * @param number the number\n * @param step the grid step\n */\nfunction snapNumberToAxisAlignedGrid(number, step) {\n    return Math.floor(number / step) * step + step / 2;\n}\nexports.snapNumberToAxisAlignedGrid = snapNumberToAxisAlignedGrid;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9tYXRoL21hdGgudHM/NWNkMCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLDBEQUE4QjtBQUU5Qjs7OztHQUlHO0FBQ0gsU0FBZ0IsNEJBQTRCLENBQUMsTUFBZSxFQUFFLElBQVk7SUFDdEUsTUFBTSxlQUFlLEdBQUcsSUFBSSxlQUFPLEVBQUUsQ0FBQztJQUN0QyxlQUFlLENBQUMsQ0FBQyxHQUFHLDJCQUEyQixDQUFDLE1BQU0sQ0FBQyxDQUFDLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDaEUsZUFBZSxDQUFDLENBQUMsR0FBRywyQkFBMkIsQ0FBQyxNQUFNLENBQUMsQ0FBQyxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQ2hFLGVBQWUsQ0FBQyxDQUFDLEdBQUcsMkJBQTJCLENBQUMsTUFBTSxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQztJQUNoRSxPQUFPLGVBQWUsQ0FBQztBQUMzQixDQUFDO0FBTkQsb0VBTUM7QUFHRDs7OztHQUlHO0FBQ0gsU0FBZ0IsMkJBQTJCLENBQUMsTUFBYyxFQUFFLElBQVk7SUFDcEUsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUMsR0FBRyxJQUFJLEdBQUcsSUFBSSxHQUFHLENBQUMsQ0FBQztBQUN2RCxDQUFDO0FBRkQsa0VBRUMiLCJmaWxlIjoiLi9zcmMvYnJvd3Nlci9tYXRoL21hdGgudHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1ZlY3RvcjN9IGZyb20gXCJ0aHJlZVwiO1xuXG4vKipcbiAqIFNuYXBzIHZlY3RvciB0byBheGlzIGFsaWduZWQgZ3JpZC5cbiAqIEBwYXJhbSB2ZWN0b3IgdGhlIHZlY3RvclxuICogQHBhcmFtIHN0ZXAgdGhlIGdyaWQgc3RlcFxuICovXG5leHBvcnQgZnVuY3Rpb24gc25hcFZlY3RvcjNUb0F4aXNBbGlnbmVkR3JpZCh2ZWN0b3I6IFZlY3RvcjMsIHN0ZXA6IG51bWJlcik6IFZlY3RvcjMge1xuICAgIGNvbnN0IHNuYXBwZWRQb3NpdGlvbiA9IG5ldyBWZWN0b3IzKCk7XG4gICAgc25hcHBlZFBvc2l0aW9uLnggPSBzbmFwTnVtYmVyVG9BeGlzQWxpZ25lZEdyaWQodmVjdG9yLngsIHN0ZXApO1xuICAgIHNuYXBwZWRQb3NpdGlvbi55ID0gc25hcE51bWJlclRvQXhpc0FsaWduZWRHcmlkKHZlY3Rvci55LCBzdGVwKTtcbiAgICBzbmFwcGVkUG9zaXRpb24ueiA9IHNuYXBOdW1iZXJUb0F4aXNBbGlnbmVkR3JpZCh2ZWN0b3Iueiwgc3RlcCk7XG4gICAgcmV0dXJuIHNuYXBwZWRQb3NpdGlvbjtcbn1cblxuXG4vKipcbiAqIFNuYXAgbnVtYmVyIHRvIGdyaWQuXG4gKiBAcGFyYW0gbnVtYmVyIHRoZSBudW1iZXJcbiAqIEBwYXJhbSBzdGVwIHRoZSBncmlkIHN0ZXBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHNuYXBOdW1iZXJUb0F4aXNBbGlnbmVkR3JpZChudW1iZXI6IG51bWJlciwgc3RlcDogbnVtYmVyKTogbnVtYmVyIHtcbiAgICByZXR1cm4gTWF0aC5mbG9vcihudW1iZXIgLyBzdGVwKSAqIHN0ZXAgKyBzdGVwIC8gMjtcbn0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/browser/math/math.ts\n");

/***/ }),

/***/ "./src/browser/model/AnimateEventDetail.ts":
/*!*************************************************!*\
  !*** ./src/browser/model/AnimateEventDetail.ts ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass AnimationEventDetail {\n    constructor(animation, style, repeats) {\n        this.clipName = animation;\n        this.style = style;\n        this.repetitions = repeats;\n    }\n}\nexports.AnimationEventDetail = AnimationEventDetail;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9tb2RlbC9BbmltYXRlRXZlbnREZXRhaWwudHM/YTQ2YyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUVBLE1BQWEsb0JBQW9CO0lBTTdCLFlBQVksU0FBaUIsRUFBRSxLQUF5QixFQUFFLE9BQWU7UUFDckUsSUFBSSxDQUFDLFFBQVEsR0FBRyxTQUFTLENBQUM7UUFDMUIsSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7UUFDbkIsSUFBSSxDQUFDLFdBQVcsR0FBRyxPQUFPLENBQUM7SUFDL0IsQ0FBQztDQUNKO0FBWEQsb0RBV0MiLCJmaWxlIjoiLi9zcmMvYnJvd3Nlci9tb2RlbC9BbmltYXRlRXZlbnREZXRhaWwudHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0FuaW1hdGlvbkxvb3BTdHlsZX0gZnJvbSBcIi4uL2ZlYXR1cmUvYW5pbWF0aW9uL0FuaW1hdGlvbkxvb3BTdHlsZVwiO1xuXG5leHBvcnQgY2xhc3MgQW5pbWF0aW9uRXZlbnREZXRhaWwge1xuXG4gICAgY2xpcE5hbWU6IHN0cmluZztcbiAgICBzdHlsZTogQW5pbWF0aW9uTG9vcFN0eWxlO1xuICAgIHJlcGV0aXRpb25zOiBudW1iZXI7XG5cbiAgICBjb25zdHJ1Y3RvcihhbmltYXRpb246IHN0cmluZywgc3R5bGU6IEFuaW1hdGlvbkxvb3BTdHlsZSwgcmVwZWF0czogbnVtYmVyKSB7XG4gICAgICAgIHRoaXMuY2xpcE5hbWUgPSBhbmltYXRpb247XG4gICAgICAgIHRoaXMuc3R5bGUgPSBzdHlsZTtcbiAgICAgICAgdGhpcy5yZXBldGl0aW9ucyA9IHJlcGVhdHM7XG4gICAgfVxufSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/browser/model/AnimateEventDetail.ts\n");

/***/ }),

/***/ "./src/browser/model/AnimationFinishedEventDetail.ts":
/*!***********************************************************!*\
  !*** ./src/browser/model/AnimationFinishedEventDetail.ts ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass AnimationFinishedEventDetails {\n    constructor(clip) {\n        this.clipName = clip;\n    }\n}\nexports.AnimationFinishedEventDetails = AnimationFinishedEventDetails;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9tb2RlbC9BbmltYXRpb25GaW5pc2hlZEV2ZW50RGV0YWlsLnRzPzhjN2UiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxNQUFhLDZCQUE2QjtJQUl0QyxZQUFZLElBQVk7UUFDcEIsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUM7SUFDekIsQ0FBQztDQUNKO0FBUEQsc0VBT0MiLCJmaWxlIjoiLi9zcmMvYnJvd3Nlci9tb2RlbC9BbmltYXRpb25GaW5pc2hlZEV2ZW50RGV0YWlsLnRzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNsYXNzIEFuaW1hdGlvbkZpbmlzaGVkRXZlbnREZXRhaWxzIHtcblxuICAgIGNsaXBOYW1lOiBzdHJpbmc7XG5cbiAgICBjb25zdHJ1Y3RvcihjbGlwOiBzdHJpbmcpIHtcbiAgICAgICAgdGhpcy5jbGlwTmFtZSA9IGNsaXA7XG4gICAgfVxufSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/browser/model/AnimationFinishedEventDetail.ts\n");

/***/ }),

/***/ "./src/browser/model/EntityActionEventDetail.ts":
/*!******************************************************!*\
  !*** ./src/browser/model/EntityActionEventDetail.ts ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass EntityActionEventDetail {\n    constructor(action, state) {\n        this.action = action;\n        this.description = state;\n    }\n}\nexports.EntityActionEventDetail = EntityActionEventDetail;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9tb2RlbC9FbnRpdHlBY3Rpb25FdmVudERldGFpbC50cz9hNTc1Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsTUFBYSx1QkFBdUI7SUFHaEMsWUFBWSxNQUFjLEVBQUUsS0FBYTtRQUNyQyxJQUFJLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQztRQUNyQixJQUFJLENBQUMsV0FBVyxHQUFHLEtBQUssQ0FBQztJQUM3QixDQUFDO0NBQ0o7QUFQRCwwREFPQyIsImZpbGUiOiIuL3NyYy9icm93c2VyL21vZGVsL0VudGl0eUFjdGlvbkV2ZW50RGV0YWlsLnRzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNsYXNzIEVudGl0eUFjdGlvbkV2ZW50RGV0YWlsIHtcbiAgICBhY3Rpb246IHN0cmluZztcbiAgICBkZXNjcmlwdGlvbjogc3RyaW5nO1xuICAgIGNvbnN0cnVjdG9yKGFjdGlvbjogc3RyaW5nLCBzdGF0ZTogc3RyaW5nKSB7XG4gICAgICAgIHRoaXMuYWN0aW9uID0gYWN0aW9uO1xuICAgICAgICB0aGlzLmRlc2NyaXB0aW9uID0gc3RhdGU7XG4gICAgfVxufSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/browser/model/EntityActionEventDetail.ts\n");

/***/ }),

/***/ "./src/browser/model/EntityStateEventDetail.ts":
/*!*****************************************************!*\
  !*** ./src/browser/model/EntityStateEventDetail.ts ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass EntityStateEventDetail {\n    constructor(state) {\n        this.state = state;\n    }\n}\nexports.EntityStateEventDetail = EntityStateEventDetail;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9tb2RlbC9FbnRpdHlTdGF0ZUV2ZW50RGV0YWlsLnRzP2ZmMTciXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxNQUFhLHNCQUFzQjtJQUUvQixZQUFZLEtBQWE7UUFDckIsSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7SUFDdkIsQ0FBQztDQUNKO0FBTEQsd0RBS0MiLCJmaWxlIjoiLi9zcmMvYnJvd3Nlci9tb2RlbC9FbnRpdHlTdGF0ZUV2ZW50RGV0YWlsLnRzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNsYXNzIEVudGl0eVN0YXRlRXZlbnREZXRhaWwge1xuICAgIHN0YXRlOiBzdHJpbmc7XG4gICAgY29uc3RydWN0b3Ioc3RhdGU6IHN0cmluZykge1xuICAgICAgICB0aGlzLnN0YXRlID0gc3RhdGU7XG4gICAgfVxufSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/browser/model/EntityStateEventDetail.ts\n");

/***/ }),

/***/ "./src/browser/model/Events.ts":
/*!*************************************!*\
  !*** ./src/browser/model/Events.ts ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass Events {\n}\nEvents.EVENT_ANIMATE_BEGIN = 'animate-begin';\nEvents.EVENT_ANIMATE_END = 'animate-end';\nEvents.EVENT_ANIMATION_FINISHED = 'animation-finished';\nEvents.EVENT_STATE_BEGIN = 'state-begin';\nEvents.EVENT_STATE_END = 'state-end';\nEvents.EVENT_ACTION = 'action';\nEvents.EVENT_MODEL_LOADED = 'model-loaded';\nexports.Events = Events;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9tb2RlbC9FdmVudHMudHM/MWMzOSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLE1BQWEsTUFBTTs7QUFFUiwwQkFBbUIsR0FBRyxlQUFlLENBQUM7QUFFdEMsd0JBQWlCLEdBQUcsYUFBYSxDQUFDO0FBRWxDLCtCQUF3QixHQUFHLG9CQUFvQixDQUFDO0FBRWhELHdCQUFpQixHQUFHLGFBQWEsQ0FBQztBQUVsQyxzQkFBZSxHQUFHLFdBQVcsQ0FBQztBQUU5QixtQkFBWSxHQUFHLFFBQVEsQ0FBQztBQUV4Qix5QkFBa0IsR0FBRyxjQUFjLENBQUM7QUFkL0Msd0JBZUMiLCJmaWxlIjoiLi9zcmMvYnJvd3Nlci9tb2RlbC9FdmVudHMudHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY2xhc3MgRXZlbnRzIHtcblxuICAgIHN0YXRpYyBFVkVOVF9BTklNQVRFX0JFR0lOID0gJ2FuaW1hdGUtYmVnaW4nO1xuXG4gICAgc3RhdGljIEVWRU5UX0FOSU1BVEVfRU5EID0gJ2FuaW1hdGUtZW5kJztcblxuICAgIHN0YXRpYyBFVkVOVF9BTklNQVRJT05fRklOSVNIRUQgPSAnYW5pbWF0aW9uLWZpbmlzaGVkJztcblxuICAgIHN0YXRpYyBFVkVOVF9TVEFURV9CRUdJTiA9ICdzdGF0ZS1iZWdpbic7XG5cbiAgICBzdGF0aWMgRVZFTlRfU1RBVEVfRU5EID0gJ3N0YXRlLWVuZCc7XG5cbiAgICBzdGF0aWMgRVZFTlRfQUNUSU9OID0gJ2FjdGlvbic7XG5cbiAgICBzdGF0aWMgRVZFTlRfTU9ERUxfTE9BREVEID0gJ21vZGVsLWxvYWRlZCc7XG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/browser/model/Events.ts\n");

/***/ }),

/***/ "./src/browser/model/MovementState.ts":
/*!********************************************!*\
  !*** ./src/browser/model/MovementState.ts ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass MovementState {\n    constructor() {\n        this.distanceDelta = 0;\n        this.timeDeltaSeconds = 0;\n        this.facing = 0;\n    }\n}\nexports.MovementState = MovementState;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9tb2RlbC9Nb3ZlbWVudFN0YXRlLnRzPzk3MzYiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxNQUFhLGFBQWE7SUFBMUI7UUFDSSxrQkFBYSxHQUFXLENBQUMsQ0FBQztRQUMxQixxQkFBZ0IsR0FBVyxDQUFDLENBQUM7UUFDN0IsV0FBTSxHQUFXLENBQUMsQ0FBQztJQUN2QixDQUFDO0NBQUE7QUFKRCxzQ0FJQyIsImZpbGUiOiIuL3NyYy9icm93c2VyL21vZGVsL01vdmVtZW50U3RhdGUudHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY2xhc3MgTW92ZW1lbnRTdGF0ZSB7XG4gICAgZGlzdGFuY2VEZWx0YTogbnVtYmVyID0gMDtcbiAgICB0aW1lRGVsdGFTZWNvbmRzOiBudW1iZXIgPSAwO1xuICAgIGZhY2luZzogbnVtYmVyID0gMDtcbn0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/browser/model/MovementState.ts\n");

/***/ }),

/***/ "./src/browser/model/States.ts":
/*!*************************************!*\
  !*** ./src/browser/model/States.ts ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass States {\n}\nStates.STATE_MOVEMENT = 'movement';\nexports.States = States;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9tb2RlbC9TdGF0ZXMudHM/Mzc4OSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLE1BQWEsTUFBTTs7QUFDUixxQkFBYyxHQUFHLFVBQVUsQ0FBQztBQUR2Qyx3QkFFQyIsImZpbGUiOiIuL3NyYy9icm93c2VyL21vZGVsL1N0YXRlcy50cy5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjbGFzcyBTdGF0ZXMge1xuICAgIHN0YXRpYyBTVEFURV9NT1ZFTUVOVCA9ICdtb3ZlbWVudCc7XG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/browser/model/States.ts\n");

/***/ }),

/***/ "./src/browser/primitive/billboard.ts":
/*!********************************************!*\
  !*** ./src/browser/primitive/billboard.ts ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nconst aframe_1 = __webpack_require__(/*! aframe */ \"aframe\");\nconsole.log('registered a-billboard.');\nmodule.exports = aframe_1.registerPrimitive('a-billboard', aframe_1.utils.extendDeep({}, aframe_1.primitives.getMeshMixin(), {\n    defaultComponents: {\n        \"billboard\": {}\n    },\n    mappings: {\n        src: 'billboard.src',\n        width: 'billboard.width',\n        height: 'billboard.height'\n    }\n}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9wcmltaXRpdmUvYmlsbGJvYXJkLnRzPzdmMzMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLDZEQUE0RDtBQUU1RCxPQUFPLENBQUMsR0FBRyxDQUFDLHlCQUF5QixDQUFDLENBQUM7QUFDdkMsaUJBQVMsMEJBQWlCLENBQUMsYUFBYSxFQUFFLGNBQUssQ0FBQyxVQUFVLENBQUMsRUFBRSxFQUFFLG1CQUFVLENBQUMsWUFBWSxFQUFFLEVBQUU7SUFDdEYsaUJBQWlCLEVBQUU7UUFDZixXQUFXLEVBQUMsRUFBRTtLQUNqQjtJQUNELFFBQVEsRUFBRTtRQUNOLEdBQUcsRUFBRSxlQUFlO1FBQ3BCLEtBQUssRUFBRSxpQkFBaUI7UUFDeEIsTUFBTSxFQUFFLGtCQUFrQjtLQUM3QjtDQUNKLENBQUMsQ0FBQyxDQUFDIiwiZmlsZSI6Ii4vc3JjL2Jyb3dzZXIvcHJpbWl0aXZlL2JpbGxib2FyZC50cy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7cmVnaXN0ZXJQcmltaXRpdmUsIHByaW1pdGl2ZXMsIHV0aWxzfSBmcm9tIFwiYWZyYW1lXCI7XG5cbmNvbnNvbGUubG9nKCdyZWdpc3RlcmVkIGEtYmlsbGJvYXJkLicpO1xuZXhwb3J0ID0gcmVnaXN0ZXJQcmltaXRpdmUoJ2EtYmlsbGJvYXJkJywgdXRpbHMuZXh0ZW5kRGVlcCh7fSwgcHJpbWl0aXZlcy5nZXRNZXNoTWl4aW4oKSwge1xuICAgIGRlZmF1bHRDb21wb25lbnRzOiB7XG4gICAgICAgIFwiYmlsbGJvYXJkXCI6e31cbiAgICB9LFxuICAgIG1hcHBpbmdzOiB7XG4gICAgICAgIHNyYzogJ2JpbGxib2FyZC5zcmMnLFxuICAgICAgICB3aWR0aDogJ2JpbGxib2FyZC53aWR0aCcsXG4gICAgICAgIGhlaWdodDogJ2JpbGxib2FyZC5oZWlnaHQnXG4gICAgfVxufSkpOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/browser/primitive/billboard.ts\n");

/***/ }),

/***/ "./src/browser/primitive/picture.ts":
/*!******************************************!*\
  !*** ./src/browser/primitive/picture.ts ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nconst aframe_1 = __webpack_require__(/*! aframe */ \"aframe\");\nconsole.log('registered a-picture.');\nmodule.exports = aframe_1.registerPrimitive('a-picture', aframe_1.utils.extendDeep({}, aframe_1.primitives.getMeshMixin(), {\n    defaultComponents: {\n        \"picture\": {}\n    },\n    mappings: {\n        src: 'picture.src',\n        width: 'picture.width',\n        height: 'picture.height'\n    }\n}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9wcmltaXRpdmUvcGljdHVyZS50cz81ZDk1Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSw2REFBNEQ7QUFFNUQsT0FBTyxDQUFDLEdBQUcsQ0FBQyx1QkFBdUIsQ0FBQyxDQUFDO0FBQ3JDLGlCQUFTLDBCQUFpQixDQUFDLFdBQVcsRUFBRSxjQUFLLENBQUMsVUFBVSxDQUFDLEVBQUUsRUFBRSxtQkFBVSxDQUFDLFlBQVksRUFBRSxFQUFFO0lBQ3BGLGlCQUFpQixFQUFFO1FBQ2YsU0FBUyxFQUFDLEVBQUU7S0FDZjtJQUNELFFBQVEsRUFBRTtRQUNOLEdBQUcsRUFBRSxhQUFhO1FBQ2xCLEtBQUssRUFBRSxlQUFlO1FBQ3RCLE1BQU0sRUFBRSxnQkFBZ0I7S0FDM0I7Q0FDSixDQUFDLENBQUMsQ0FBQyIsImZpbGUiOiIuL3NyYy9icm93c2VyL3ByaW1pdGl2ZS9waWN0dXJlLnRzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtyZWdpc3RlclByaW1pdGl2ZSwgcHJpbWl0aXZlcywgdXRpbHN9IGZyb20gXCJhZnJhbWVcIjtcblxuY29uc29sZS5sb2coJ3JlZ2lzdGVyZWQgYS1waWN0dXJlLicpO1xuZXhwb3J0ID0gcmVnaXN0ZXJQcmltaXRpdmUoJ2EtcGljdHVyZScsIHV0aWxzLmV4dGVuZERlZXAoe30sIHByaW1pdGl2ZXMuZ2V0TWVzaE1peGluKCksIHtcbiAgICBkZWZhdWx0Q29tcG9uZW50czoge1xuICAgICAgICBcInBpY3R1cmVcIjp7fVxuICAgIH0sXG4gICAgbWFwcGluZ3M6IHtcbiAgICAgICAgc3JjOiAncGljdHVyZS5zcmMnLFxuICAgICAgICB3aWR0aDogJ3BpY3R1cmUud2lkdGgnLFxuICAgICAgICBoZWlnaHQ6ICdwaWN0dXJlLmhlaWdodCdcbiAgICB9XG59KSk7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/browser/primitive/picture.ts\n");

/***/ }),

/***/ "./src/browser/system/interface/InterfaceController.ts":
/*!*************************************************************!*\
  !*** ./src/browser/system/interface/InterfaceController.ts ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst aframe_typescript_boilerplate_1 = __webpack_require__(/*! aframe-typescript-boilerplate */ \"./node_modules/aframe-typescript-boilerplate/built/index.js\");\nconst CodeRealityComponentController_1 = __webpack_require__(/*! ../../component/CodeRealityComponentController */ \"./src/browser/component/CodeRealityComponentController.ts\");\nclass InterfaceController extends CodeRealityComponentController_1.CodeRealityComponentController {\n    constructor(component, entity, data) {\n        super(component, entity, data);\n        //console.log(this.componentName + \" init: \" + JSON.stringify(this.data));\n        this.interface.setInterfaceController(this);\n    }\n    init() {\n    }\n    update(data, oldData) {\n        //console.log(this.componentName + \" update: \" + JSON.stringify(this.data));\n    }\n    remove() {\n        //console.log(this.componentName + \" remove\");\n    }\n    pause() {\n        //console.log(this.componentName + \" pause\");\n    }\n    play() {\n        //console.log(this.componentName + \" play\");\n    }\n    tick(time, timeDelta) {\n    }\n}\nInterfaceController.DEFINITION = new aframe_typescript_boilerplate_1.ComponentControllerDefinition(\"interface\", {}, false, false, (component, entity, data) => new InterfaceController(component, entity, data));\nexports.InterfaceController = InterfaceController;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9zeXN0ZW0vaW50ZXJmYWNlL0ludGVyZmFjZUNvbnRyb2xsZXIudHM/ZmViNiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUNBLGdLQUF5RztBQUN6RyxnTEFBOEY7QUFFOUYsTUFBYSxtQkFBb0IsU0FBUSwrREFBOEI7SUFJbkUsWUFBWSxTQUFvQixFQUFFLE1BQWMsRUFBRSxJQUFTO1FBQ3ZELEtBQUssQ0FBQyxTQUFTLEVBQUUsTUFBTSxFQUFFLElBQUksQ0FBQyxDQUFDO1FBQy9CLDBFQUEwRTtRQUMxRSxJQUFJLENBQUMsU0FBUyxDQUFDLHNCQUFzQixDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ2hELENBQUM7SUFFRCxJQUFJO0lBQ0osQ0FBQztJQUVELE1BQU0sQ0FBQyxJQUFTLEVBQUUsT0FBWTtRQUMxQiw0RUFBNEU7SUFDaEYsQ0FBQztJQUVELE1BQU07UUFDRiw4Q0FBOEM7SUFDbEQsQ0FBQztJQUVELEtBQUs7UUFDRCw2Q0FBNkM7SUFDakQsQ0FBQztJQUVELElBQUk7UUFDQSw0Q0FBNEM7SUFDaEQsQ0FBQztJQUVELElBQUksQ0FBQyxJQUFZLEVBQUUsU0FBaUI7SUFDcEMsQ0FBQzs7QUE1QmEsOEJBQVUsR0FBRyxJQUFJLDZEQUE2QixDQUFDLFdBQVcsRUFBRSxFQUFFLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxDQUFDLFNBQW9CLEVBQUUsTUFBYyxFQUFFLElBQVMsRUFBRSxFQUFFLENBQUMsSUFBSSxtQkFBbUIsQ0FBQyxTQUFTLEVBQUUsTUFBTSxFQUFFLElBQUksQ0FBQyxDQUFDLENBQUM7QUFGdk0sa0RBZ0NDIiwiZmlsZSI6Ii4vc3JjL2Jyb3dzZXIvc3lzdGVtL2ludGVyZmFjZS9JbnRlcmZhY2VDb250cm9sbGVyLnRzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDb21wb25lbnQsIEVudGl0eX0gZnJvbSBcImFmcmFtZVwiO1xuaW1wb3J0IHtBYnN0cmFjdENvbXBvbmVudENvbnRyb2xsZXIsIENvbXBvbmVudENvbnRyb2xsZXJEZWZpbml0aW9ufSBmcm9tIFwiYWZyYW1lLXR5cGVzY3JpcHQtYm9pbGVycGxhdGVcIjtcbmltcG9ydCB7Q29kZVJlYWxpdHlDb21wb25lbnRDb250cm9sbGVyfSBmcm9tIFwiLi4vLi4vY29tcG9uZW50L0NvZGVSZWFsaXR5Q29tcG9uZW50Q29udHJvbGxlclwiO1xuXG5leHBvcnQgY2xhc3MgSW50ZXJmYWNlQ29udHJvbGxlciBleHRlbmRzIENvZGVSZWFsaXR5Q29tcG9uZW50Q29udHJvbGxlciB7XG5cbiAgICBwdWJsaWMgc3RhdGljIERFRklOSVRJT04gPSBuZXcgQ29tcG9uZW50Q29udHJvbGxlckRlZmluaXRpb24oXCJpbnRlcmZhY2VcIiwge30sIGZhbHNlLCBmYWxzZSwgKGNvbXBvbmVudDogQ29tcG9uZW50LCBlbnRpdHk6IEVudGl0eSwgZGF0YTogYW55KSA9PiBuZXcgSW50ZXJmYWNlQ29udHJvbGxlcihjb21wb25lbnQsIGVudGl0eSwgZGF0YSkpO1xuXG4gICAgY29uc3RydWN0b3IoY29tcG9uZW50OiBDb21wb25lbnQsIGVudGl0eTogRW50aXR5LCBkYXRhOiBhbnkpIHtcbiAgICAgICAgc3VwZXIoY29tcG9uZW50LCBlbnRpdHksIGRhdGEpO1xuICAgICAgICAvL2NvbnNvbGUubG9nKHRoaXMuY29tcG9uZW50TmFtZSArIFwiIGluaXQ6IFwiICsgSlNPTi5zdHJpbmdpZnkodGhpcy5kYXRhKSk7XG4gICAgICAgIHRoaXMuaW50ZXJmYWNlLnNldEludGVyZmFjZUNvbnRyb2xsZXIodGhpcyk7XG4gICAgfVxuXG4gICAgaW5pdCgpOiB2b2lkIHtcbiAgICB9XG5cbiAgICB1cGRhdGUoZGF0YTogYW55LCBvbGREYXRhOiBhbnkpOiB2b2lkIHtcbiAgICAgICAgLy9jb25zb2xlLmxvZyh0aGlzLmNvbXBvbmVudE5hbWUgKyBcIiB1cGRhdGU6IFwiICsgSlNPTi5zdHJpbmdpZnkodGhpcy5kYXRhKSk7XG4gICAgfVxuXG4gICAgcmVtb3ZlKCk6IHZvaWQge1xuICAgICAgICAvL2NvbnNvbGUubG9nKHRoaXMuY29tcG9uZW50TmFtZSArIFwiIHJlbW92ZVwiKTtcbiAgICB9XG5cbiAgICBwYXVzZSgpOiB2b2lkIHtcbiAgICAgICAgLy9jb25zb2xlLmxvZyh0aGlzLmNvbXBvbmVudE5hbWUgKyBcIiBwYXVzZVwiKTtcbiAgICB9XG5cbiAgICBwbGF5KCk6IHZvaWQge1xuICAgICAgICAvL2NvbnNvbGUubG9nKHRoaXMuY29tcG9uZW50TmFtZSArIFwiIHBsYXlcIik7XG4gICAgfVxuXG4gICAgdGljayh0aW1lOiBudW1iZXIsIHRpbWVEZWx0YTogbnVtYmVyKTogdm9pZCB7XG4gICAgfVxuXG59XG5cblxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/browser/system/interface/InterfaceController.ts\n");

/***/ }),

/***/ "./src/browser/system/interface/InterfaceSystemController.ts":
/*!*******************************************************************!*\
  !*** ./src/browser/system/interface/InterfaceSystemController.ts ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst DeviceSlot_1 = __webpack_require__(/*! ./model/DeviceSlot */ \"./src/browser/system/interface/model/DeviceSlot.ts\");\nconst Slot_1 = __webpack_require__(/*! ./model/Slot */ \"./src/browser/system/interface/model/Slot.ts\");\nconst three_1 = __webpack_require__(/*! three */ \"three\");\nconst aframe_typescript_boilerplate_1 = __webpack_require__(/*! aframe-typescript-boilerplate */ \"./node_modules/aframe-typescript-boilerplate/built/index.js\");\nconst InteractionMode_1 = __webpack_require__(/*! ./model/InteractionMode */ \"./src/browser/system/interface/model/InteractionMode.ts\");\nclass InterfaceSystemController extends aframe_typescript_boilerplate_1.AbstractSystemController {\n    constructor(system, scene, data) {\n        super(system, scene, data);\n        this.interactionMode = InteractionMode_1.InteractionMode.FP;\n        this.uiFocus = false;\n        this.selfScale = 1;\n        this.collidables = new Array();\n        this.devices = new Map();\n        this.tools = new Map();\n        this.toolNames = new Array();\n        this.slots = new Map();\n        this.slotListeners = new Map();\n        this.cameraPosition = new three_1.Vector3(0, 0, 0);\n        this.cameraDirection = new three_1.Vector3(0, 0, 0);\n        this.interfaceEntity = this.scene.querySelector('[interface]');\n        if (this.interfaceEntity) {\n            console.info(\"interface entity set.\");\n        }\n        else {\n            throw new Error(\"interface entity not found.\");\n        }\n        this.cameraEntity = this.interfaceEntity.querySelector('[camera]');\n        if (this.cameraEntity) {\n            console.info(\"interface camera entity set.\");\n        }\n        else {\n            throw new Error(\"interface camera entity not found.\");\n        }\n    }\n    init() {\n        const materialUiSystem = this.getSystemController(\"material-ui\");\n        materialUiSystem.onFocus = () => {\n            this.uiFocus = true;\n            const lookControls = this.cameraEntity.components[\"look-controls\"];\n            if (lookControls) {\n                lookControls.pause();\n            }\n        };\n        materialUiSystem.onFocusOut = () => {\n            this.uiFocus = false;\n            const lookControls = this.cameraEntity.components[\"look-controls\"];\n            if (lookControls) {\n                lookControls.play();\n            }\n        };\n    }\n    pause() {\n    }\n    play() {\n    }\n    tick(time, timeDelta) {\n        this.cameraPosition.copy(this.cameraEntity.object3D.position);\n        this.cameraPosition = this.cameraEntity.object3D.parent.localToWorld(this.cameraPosition);\n        this.cameraEntity.object3D.getWorldDirection(this.cameraDirection);\n        this.cameraDirection.multiplyScalar(-1);\n    }\n    getCollidables() {\n        return this.collidables;\n    }\n    addCollidable(object) {\n        this.collidables.push(object);\n    }\n    removeCollidable(object) {\n        const index = this.collidables.indexOf(object, 0);\n        if (index > -1) {\n            this.collidables.splice(index, 1);\n        }\n    }\n    setInterfaceController(interfaceController) {\n        this.interfaceController = interfaceController;\n    }\n    setDevice(slot, device) {\n        if (this.devices.has(slot)) {\n            console.warn(\"interface already has controls at: \" + DeviceSlot_1.DeviceSlot[slot]);\n        }\n        else {\n            this.devices.set(slot, device);\n            //console.log(\"interface controls \" + device.componentName + \" set at: \" + DeviceSlot[slot]);\n        }\n    }\n    getDevice(slot) {\n        return this.devices.get(slot);\n    }\n    registerTool(tool) {\n        if (!this.tools.has(tool.componentName)) {\n            //console.log(\"interface tool '\" + tool.componentName + \"' registered.\");\n            this.tools.set(tool.componentName, tool);\n            this.toolNames.push(tool.componentName);\n        }\n    }\n    registerSlotListener(slot, slotListener) {\n        if (!this.slotListeners.has(slot)) {\n            this.slotListeners.set(slot, new Array());\n        }\n        this.slotListeners.get(slot).push(slotListener);\n        // Notify slot listener of slotted tool if tool already slotted.\n        const slottedTool = this.getToolAtSlot(Slot_1.Slot.PRIMARY);\n        if (slottedTool) {\n            slotListener.onToolSlotted(Slot_1.Slot.PRIMARY, slottedTool.componentName);\n        }\n    }\n    getTool(name) {\n        if (this.tools.has(name)) {\n            return this.tools.get(name);\n        }\n        else {\n            throw new Error(\"Tool '\" + name + \"' not registered.\");\n        }\n    }\n    slotTool(slot, tool) {\n        this.slots.set(slot, tool);\n        //console.log(\"interface tool \" + tool.componentName + \" set at: \" + Slot[slot]);\n        if (this.slotListeners.has(slot)) {\n            this.slotListeners.get(slot).forEach((slotListener) => {\n                slotListener.onToolSlotted(slot, tool.componentName);\n            });\n        }\n    }\n    getToolAtSlot(slot) {\n        return this.slots.get(slot);\n    }\n    buttonUp(device, slot, button) {\n        if (this.slots.has(slot)) {\n            this.slots.get(slot).buttonUp(device, slot, button);\n        }\n    }\n    buttonDown(device, slot, button) {\n        if (this.slots.has(slot)) {\n            this.slots.get(slot).buttonDown(device, slot, button);\n        }\n    }\n    stickTwist(device, slot, stick, x, y) {\n        if (this.slots.has(slot)) {\n            this.slots.get(slot).stickTwist(device, slot, stick, x, y);\n        }\n    }\n    slotNextTool(slot) {\n        if (this.slots.has(slot)) {\n            const tool = this.slots.get(slot);\n            const toolIndex = this.toolNames.indexOf(tool.componentName);\n            const nextToolIndex = (toolIndex == this.toolNames.length - 1) ? 0 : toolIndex + 1;\n            //console.log(\"tool index: \" + toolIndex + \" next tool index: \" + nextToolIndex + \" lenght: \" + this.toolNames.length);\n            //console.log(this.toolNames);\n            const nextToolName = this.toolNames[nextToolIndex];\n            const nextTool = this.getTool(nextToolName);\n            this.slotTool(slot, nextTool);\n        }\n    }\n    slotPreviousTool(slot) {\n        if (this.slots.has(slot)) {\n            const tool = this.slots.get(slot);\n            const toolIndex = this.toolNames.indexOf(tool.componentName);\n            const previousToolIndex = (toolIndex == 0) ? this.toolNames.length - 1 : toolIndex - 1;\n            const previousToolName = this.toolNames[previousToolIndex];\n            const previousTool = this.getTool(previousToolName);\n            this.slotTool(slot, previousTool);\n        }\n    }\n    setSelfScale(selfScale) {\n        const scale = this.interfaceEntity.getAttribute(\"scale\");\n        this.selfScale = selfScale;\n        scale.x = this.selfScale;\n        scale.y = this.selfScale;\n        scale.z = this.selfScale;\n        const spaceSystem = this.getSystemController(\"space\");\n        spaceSystem.sendAvatarDescriptionUpdate();\n    }\n    getSelfScale() {\n        return this.selfScale;\n    }\n    isVrMode() {\n        return this.getToolAtSlot(Slot_1.Slot.PRIMARY_SELECTOR).vrMode;\n    }\n    isUiFocus() {\n        return this.uiFocus;\n    }\n    setVrMode(vrMode) {\n        if (this.isVrMode() === vrMode) {\n            return;\n        }\n        else {\n            if (vrMode) {\n                this.scene.enterVR();\n            }\n            else {\n                this.scene.exitVR();\n            }\n        }\n    }\n    getInteractionMode() {\n        return this.interactionMode;\n    }\n    setInteractionMode(interactionMode) {\n        if (interactionMode === this.interactionMode) {\n            return;\n        }\n        this.interactionMode = interactionMode;\n    }\n}\nInterfaceSystemController.DEFINITION = new aframe_typescript_boilerplate_1.SystemControllerDefinition(\"interface\", {}, (system, scene, data) => new InterfaceSystemController(system, scene, data));\nexports.InterfaceSystemController = InterfaceSystemController;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/browser/system/interface/InterfaceSystemController.ts\n");

/***/ }),

/***/ "./src/browser/system/interface/device/KeyboardAndMouseDevice.ts":
/*!***********************************************************************!*\
  !*** ./src/browser/system/interface/device/KeyboardAndMouseDevice.ts ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst DeviceSlot_1 = __webpack_require__(/*! ../model/DeviceSlot */ \"./src/browser/system/interface/model/DeviceSlot.ts\");\nconst Slot_1 = __webpack_require__(/*! ../model/Slot */ \"./src/browser/system/interface/model/Slot.ts\");\nconst Button_1 = __webpack_require__(/*! ../model/Button */ \"./src/browser/system/interface/model/Button.ts\");\nconst xml_js_1 = __webpack_require__(/*! xml-js */ \"./node_modules/xml-js/lib/index.js\");\nconst aframe_typescript_boilerplate_1 = __webpack_require__(/*! aframe-typescript-boilerplate */ \"./node_modules/aframe-typescript-boilerplate/built/index.js\");\nconst aframe_typescript_boilerplate_2 = __webpack_require__(/*! aframe-typescript-boilerplate */ \"./node_modules/aframe-typescript-boilerplate/built/index.js\");\nconst CodeRealityComponentController_1 = __webpack_require__(/*! ../../../component/CodeRealityComponentController */ \"./src/browser/component/CodeRealityComponentController.ts\");\nclass KeyboardAndMouseDevice extends CodeRealityComponentController_1.CodeRealityComponentController {\n    constructor(component, entity, data) {\n        super(component, entity, data);\n        this.movementForwardKey = 'w';\n        this.movementBackwardKey = 's';\n        this.movementLeftKey = 'a';\n        this.movementRightKey = 'd';\n        this.jumpKey = ' ';\n        this.rightKey = 'ArrowRight';\n        this.leftKey = 'ArrowLeft';\n        this.upKey = 'ArrowUp';\n        this.downKey = 'ArrowDown';\n        this.pointerLock = false;\n        this.lastWheelYTimeMillis = 0;\n        this.interface.setDevice(DeviceSlot_1.DeviceSlot.KEYBOARD_AND_MOUSE, this);\n    }\n    init() {\n        //console.log(this.componentName + \" init\");\n        aframe_typescript_boilerplate_2.addDocumentEventListener(\"pointerlockchange\", (detail) => {\n            this.pointerLock = document.pointerLockElement != null;\n        });\n        window.addEventListener('keydown', (e) => {\n            if (this.interface.isUiFocus()) {\n                return;\n            }\n            this.onKeyDown(e.key);\n        });\n        window.addEventListener('keyup', (e) => {\n            if (this.interface.isUiFocus()) {\n                return;\n            }\n            this.onKeyUp(e.key);\n        });\n        this.entity.sceneEl.addEventListener('mousedown', (e) => {\n            if (!this.pointerLock) {\n                return;\n            }\n            if (this.interface.isUiFocus()) {\n                return;\n            }\n            if (e.button == 0) {\n                this.interface.buttonDown(this, Slot_1.Slot.PRIMARY, Button_1.Button.TRIGGER);\n            }\n            if (e.button == 1) {\n                this.interface.buttonDown(this, Slot_1.Slot.PRIMARY, Button_1.Button.MENU);\n            }\n            if (e.button == 2) {\n                this.interface.buttonDown(this, Slot_1.Slot.PRIMARY, Button_1.Button.GRIP);\n            }\n        });\n        this.entity.sceneEl.addEventListener('mouseup', (e) => {\n            if (!this.pointerLock) {\n                return;\n            }\n            if (e.button == 0) {\n                this.interface.buttonUp(this, Slot_1.Slot.PRIMARY, Button_1.Button.TRIGGER);\n            }\n            if (e.button == 1) {\n                this.interface.buttonUp(this, Slot_1.Slot.PRIMARY, Button_1.Button.MENU);\n            }\n            if (e.button == 2) {\n                this.interface.buttonUp(this, Slot_1.Slot.PRIMARY, Button_1.Button.GRIP);\n            }\n        });\n        window.addEventListener(\"paste\", (event) => {\n            if (this.interface.isUiFocus()) {\n                return;\n            }\n            if (this.pointerLock) {\n                for (const item of event.clipboardData.items) {\n                    const itemTyped = item;\n                    if (itemTyped.kind == \"string\") {\n                        itemTyped.getAsString((pasteString) => {\n                            try {\n                                const pasteXml = xml_js_1.js2xml(xml_js_1.xml2js(pasteString));\n                                if (!pasteXml.startsWith(\"<html>\")) {\n                                    console.log(pasteXml);\n                                    const addObjectTool = this.interface.getTool(\"add-object-tool\");\n                                    addObjectTool.addEntityFromXml(pasteString);\n                                }\n                            }\n                            catch (error) {\n                                console.error(\"Error copy paste adding an object.\", error);\n                            }\n                        });\n                        return;\n                    }\n                }\n            }\n            // do something with url here\n        });\n        /*(this.entity.sceneEl!! as any).addEventListener('click', (e: MouseEvent) => {\n            console.log('mouse click ' + e.button);\n        });\n\n        */\n        /*(this.entity.sceneEl!! as any).addEventListener('wheel', (e: WheelEvent) => {\n            console.log('wheel: x=' + e.deltaX + ', y=' + e.deltaY + ', z=' + e.deltaZ);\n\n            if (new Date().getTime() - this.lastWheelYTimeMillis > 1000) {\n\n                if (e.deltaY != 0) {\n                    if (e.deltaY > 0) {\n                        this.interface.buttonDown(this, Slot.PRIMARY, Button.UP);\n                        this.interface.buttonUp(this, Slot.PRIMARY, Button.UP);\n                    } else {\n                        this.interface.buttonDown(this, Slot.PRIMARY, Button.DOWN);\n                        this.interface.buttonUp(this, Slot.PRIMARY, Button.DOWN);\n                    }\n\n                    this.lastWheelYTimeMillis = new Date().getTime();\n                }\n            }\n        });*/\n    }\n    update(data, oldData) {\n    }\n    remove() {\n    }\n    pause() {\n    }\n    play() {\n    }\n    tick(time, timeDelta) {\n    }\n    onKeyDown(key) {\n        if (key == this.movementForwardKey) {\n            this.interface.buttonDown(this, Slot_1.Slot.WALK, Button_1.Button.UP);\n        }\n        if (key == this.movementBackwardKey) {\n            this.interface.buttonDown(this, Slot_1.Slot.WALK, Button_1.Button.DOWN);\n        }\n        if (key == this.movementLeftKey) {\n            this.interface.buttonDown(this, Slot_1.Slot.WALK, Button_1.Button.LEFT);\n        }\n        if (key == this.movementRightKey) {\n            this.interface.buttonDown(this, Slot_1.Slot.WALK, Button_1.Button.RIGHT);\n        }\n        if (key == this.jumpKey) {\n            this.interface.buttonDown(this, Slot_1.Slot.WALK, Button_1.Button.TRIGGER);\n        }\n        if (key == this.upKey || key == 'r') {\n            this.interface.buttonDown(this, Slot_1.Slot.PRIMARY, Button_1.Button.UP);\n        }\n        if (key == this.downKey || key == 'f') {\n            this.interface.buttonDown(this, Slot_1.Slot.PRIMARY, Button_1.Button.DOWN);\n        }\n        if (key == this.rightKey || key == 'e') {\n            this.interface.buttonDown(this, Slot_1.Slot.PRIMARY_SELECTOR, Button_1.Button.RIGHT);\n        }\n        if (key == this.leftKey || key == 'q') {\n            this.interface.buttonDown(this, Slot_1.Slot.PRIMARY_SELECTOR, Button_1.Button.LEFT);\n        }\n    }\n    onKeyUp(key) {\n        if (key == this.movementForwardKey) {\n            this.interface.buttonUp(this, Slot_1.Slot.WALK, Button_1.Button.UP);\n        }\n        if (key == this.movementBackwardKey) {\n            this.interface.buttonUp(this, Slot_1.Slot.WALK, Button_1.Button.DOWN);\n        }\n        if (key == this.movementLeftKey) {\n            this.interface.buttonUp(this, Slot_1.Slot.WALK, Button_1.Button.LEFT);\n        }\n        if (key == this.movementRightKey) {\n            this.interface.buttonUp(this, Slot_1.Slot.WALK, Button_1.Button.RIGHT);\n        }\n        if (key == this.jumpKey) {\n            this.interface.buttonUp(this, Slot_1.Slot.WALK, Button_1.Button.TRIGGER);\n        }\n        if (key == this.upKey || key == 'r') {\n            this.interface.buttonUp(this, Slot_1.Slot.PRIMARY, Button_1.Button.UP);\n        }\n        if (key == this.downKey || key == 'f') {\n            this.interface.buttonUp(this, Slot_1.Slot.PRIMARY, Button_1.Button.DOWN);\n        }\n        if (key == this.rightKey || key == 'e') {\n            this.interface.buttonUp(this, Slot_1.Slot.PRIMARY_SELECTOR, Button_1.Button.RIGHT);\n        }\n        if (key == this.leftKey || key == 'q') {\n            this.interface.buttonUp(this, Slot_1.Slot.PRIMARY_SELECTOR, Button_1.Button.LEFT);\n        }\n        if (key == 'o') {\n            const uiSystem = this.getSystemController(\"ui\");\n            uiSystem.pushView(\"<a-example-view/>\");\n        }\n        if (key == 'i') {\n            const uiSystem = this.getSystemController(\"ui\");\n            uiSystem.popView();\n        }\n    }\n}\nKeyboardAndMouseDevice.DEFINITION = new aframe_typescript_boilerplate_1.ComponentControllerDefinition(\"keyboard-and-mouse\", {}, false, false, (component, entity, data) => new KeyboardAndMouseDevice(component, entity, data));\nexports.KeyboardAndMouseDevice = KeyboardAndMouseDevice;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/browser/system/interface/device/KeyboardAndMouseDevice.ts\n");

/***/ }),

/***/ "./src/browser/system/interface/device/PrimaryControllerDevice.ts":
/*!************************************************************************!*\
  !*** ./src/browser/system/interface/device/PrimaryControllerDevice.ts ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst DeviceSlot_1 = __webpack_require__(/*! ../model/DeviceSlot */ \"./src/browser/system/interface/model/DeviceSlot.ts\");\nconst Slot_1 = __webpack_require__(/*! ../model/Slot */ \"./src/browser/system/interface/model/Slot.ts\");\nconst Button_1 = __webpack_require__(/*! ../model/Button */ \"./src/browser/system/interface/model/Button.ts\");\nconst aframe_typescript_boilerplate_1 = __webpack_require__(/*! aframe-typescript-boilerplate */ \"./node_modules/aframe-typescript-boilerplate/built/index.js\");\nconst CodeRealityComponentController_1 = __webpack_require__(/*! ../../../component/CodeRealityComponentController */ \"./src/browser/component/CodeRealityComponentController.ts\");\nclass PrimaryControllerDevice extends CodeRealityComponentController_1.CodeRealityComponentController {\n    constructor(component, entity, data) {\n        super(component, entity, data);\n        this.controllerName = \"\";\n    }\n    init() {\n        //console.log(this.componentName + \" init\");\n        this.interface.setDevice(DeviceSlot_1.DeviceSlot.PRIMARY_HAND, this);\n        this.addEventListener(\"controllerconnected\", (detail) => {\n            this.controllerName = detail.name;\n            console.log(\"controllerconnected \" + this.controllerName);\n        });\n        this.addEventListener(\"controllerdisconnected\", (detail) => {\n            console.log(\"controllerdisconnected \" + this.controllerName);\n        });\n        this.addEventListener(\"triggerup\", (detail) => {\n            this.interface.buttonUp(this, Slot_1.Slot.PRIMARY, Button_1.Button.TRIGGER);\n            console.log(\"triggerup \" + detail);\n        });\n        this.addEventListener(\"triggerdown\", (detail) => {\n            this.interface.buttonDown(this, Slot_1.Slot.PRIMARY, Button_1.Button.TRIGGER);\n            console.log(\"triggerdown \" + detail);\n        });\n        this.addEventListener(\"gripup\", (detail) => {\n            this.interface.buttonUp(this, Slot_1.Slot.PRIMARY, Button_1.Button.GRIP);\n            console.log(\"gripup \" + detail);\n        });\n        this.addEventListener(\"gripdown\", (detail) => {\n            this.interface.buttonDown(this, Slot_1.Slot.PRIMARY, Button_1.Button.GRIP);\n            console.log(\"gripdown \" + detail);\n        });\n        this.addEventListener(\"menuup\", (detail) => {\n            this.interface.buttonUp(this, Slot_1.Slot.PRIMARY, Button_1.Button.MENU);\n            console.log(\"menuup \" + detail);\n        });\n        this.addEventListener(\"menudown\", (detail) => {\n            this.interface.buttonDown(this, Slot_1.Slot.PRIMARY, Button_1.Button.MENU);\n            console.log(\"menudown \" + detail);\n        });\n        this.addEventListener(\"trackpaddown\", (detail) => { this.trackPadDown(detail); });\n        this.addEventListener(\"thumbstickdown\", (detail) => { this.trackPadDown(detail); });\n        this.addEventListener(\"trackpadup\", (detail) => { this.trackPadUp(detail); });\n        this.addEventListener(\"thumbstickup\", (detail) => { this.trackPadUp(detail); });\n        this.addEventListener(\"axismove\", (detail) => { this.axisMove(detail); });\n    }\n    trackPadDown(detail) {\n        console.log(\"trackpaddown \" + detail);\n        if (this.axis) {\n            const button = this.getStickButton(this.axis[0], this.axis[1]);\n            if (button == Button_1.Button.UP || button == Button_1.Button.DOWN) {\n                this.interface.buttonDown(this, Slot_1.Slot.PRIMARY, button);\n            }\n            else {\n                this.interface.buttonDown(this, Slot_1.Slot.PRIMARY_SELECTOR, button);\n            }\n            this.lastStickButton = button;\n            console.log(\"button down: \" + Button_1.Button[button]);\n        }\n    }\n    trackPadUp(detail) {\n        console.log(\"trackpadup \" + detail);\n        if (this.axis) {\n            if (this.lastStickButton) {\n                const button = this.lastStickButton;\n                if (button == Button_1.Button.UP || button == Button_1.Button.DOWN) {\n                    this.interface.buttonUp(this, Slot_1.Slot.PRIMARY, button);\n                }\n                else {\n                    this.interface.buttonUp(this, Slot_1.Slot.PRIMARY_SELECTOR, button);\n                }\n                console.log(\"button up: \" + Button_1.Button[button]);\n            }\n        }\n    }\n    axisMove(detail) {\n        const axis = detail.axis;\n        this.axis = Object.assign([], axis);\n        if (this.controllerName === \"oculus-go-controls\") {\n            this.axis[1] = -1 * this.axis[1];\n        }\n        //console.log(\"axismove \" + axis);\n        //this.interface.stickTwist(this, Slot.PRIMARY, Stick.PRIMARY, this.axis[1], this.axis[0]);\n    }\n    getStickButton(x, y) {\n        var angle = Math.atan2(y, x) * 180 / Math.PI;\n        if (angle >= -45 && angle < 45) {\n            return Button_1.Button.RIGHT;\n        }\n        else if (angle >= 45 && angle < 135) {\n            return Button_1.Button.UP;\n        }\n        else if (angle >= 135 || angle <= -135) {\n            return Button_1.Button.LEFT;\n        }\n        else {\n            return Button_1.Button.DOWN;\n        }\n    }\n    update(data, oldData) {\n    }\n    remove() {\n    }\n    pause() {\n    }\n    play() {\n    }\n    tick(time, timeDelta) {\n    }\n}\nPrimaryControllerDevice.DEFINITION = new aframe_typescript_boilerplate_1.ComponentControllerDefinition(\"primary-controller\", {}, false, false, (component, entity, data) => new PrimaryControllerDevice(component, entity, data));\nexports.PrimaryControllerDevice = PrimaryControllerDevice;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/browser/system/interface/device/PrimaryControllerDevice.ts\n");

/***/ }),

/***/ "./src/browser/system/interface/model/Button.ts":
/*!******************************************************!*\
  !*** ./src/browser/system/interface/model/Button.ts ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Button;\n(function (Button) {\n    Button[Button[\"TRIGGER\"] = 0] = \"TRIGGER\";\n    Button[Button[\"GRIP\"] = 1] = \"GRIP\";\n    Button[Button[\"MENU\"] = 2] = \"MENU\";\n    Button[Button[\"UP\"] = 3] = \"UP\";\n    Button[Button[\"DOWN\"] = 4] = \"DOWN\";\n    Button[Button[\"LEFT\"] = 5] = \"LEFT\";\n    Button[Button[\"RIGHT\"] = 6] = \"RIGHT\";\n})(Button = exports.Button || (exports.Button = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9zeXN0ZW0vaW50ZXJmYWNlL21vZGVsL0J1dHRvbi50cz9mNjQzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBWSxNQVFYO0FBUkQsV0FBWSxNQUFNO0lBQ2QseUNBQU87SUFDUCxtQ0FBSTtJQUNKLG1DQUFJO0lBQ0osK0JBQUU7SUFDRixtQ0FBSTtJQUNKLG1DQUFJO0lBQ0oscUNBQUs7QUFDVCxDQUFDLEVBUlcsTUFBTSxHQUFOLGNBQU0sS0FBTixjQUFNLFFBUWpCIiwiZmlsZSI6Ii4vc3JjL2Jyb3dzZXIvc3lzdGVtL2ludGVyZmFjZS9tb2RlbC9CdXR0b24udHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZW51bSBCdXR0b24ge1xuICAgIFRSSUdHRVIsXG4gICAgR1JJUCxcbiAgICBNRU5VLFxuICAgIFVQLFxuICAgIERPV04sXG4gICAgTEVGVCxcbiAgICBSSUdIVFxufSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/browser/system/interface/model/Button.ts\n");

/***/ }),

/***/ "./src/browser/system/interface/model/DeviceSlot.ts":
/*!**********************************************************!*\
  !*** ./src/browser/system/interface/model/DeviceSlot.ts ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar DeviceSlot;\n(function (DeviceSlot) {\n    DeviceSlot[DeviceSlot[\"KEYBOARD_AND_MOUSE\"] = 0] = \"KEYBOARD_AND_MOUSE\";\n    DeviceSlot[DeviceSlot[\"GAMEPAD\"] = 1] = \"GAMEPAD\";\n    DeviceSlot[DeviceSlot[\"PRIMARY_HAND\"] = 2] = \"PRIMARY_HAND\";\n    DeviceSlot[DeviceSlot[\"SECONDARY_HAND\"] = 3] = \"SECONDARY_HAND\";\n})(DeviceSlot = exports.DeviceSlot || (exports.DeviceSlot = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9zeXN0ZW0vaW50ZXJmYWNlL21vZGVsL0RldmljZVNsb3QudHM/NzJhNCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLElBQVksVUFLWDtBQUxELFdBQVksVUFBVTtJQUNsQix1RUFBa0I7SUFDbEIsaURBQU87SUFDUCwyREFBWTtJQUNaLCtEQUFjO0FBQ2xCLENBQUMsRUFMVyxVQUFVLEdBQVYsa0JBQVUsS0FBVixrQkFBVSxRQUtyQiIsImZpbGUiOiIuL3NyYy9icm93c2VyL3N5c3RlbS9pbnRlcmZhY2UvbW9kZWwvRGV2aWNlU2xvdC50cy5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBlbnVtIERldmljZVNsb3Qge1xuICAgIEtFWUJPQVJEX0FORF9NT1VTRSxcbiAgICBHQU1FUEFELFxuICAgIFBSSU1BUllfSEFORCxcbiAgICBTRUNPTkRBUllfSEFORFxufSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/browser/system/interface/model/DeviceSlot.ts\n");

/***/ }),

/***/ "./src/browser/system/interface/model/InteractionMode.ts":
/*!***************************************************************!*\
  !*** ./src/browser/system/interface/model/InteractionMode.ts ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar InteractionMode;\n(function (InteractionMode) {\n    InteractionMode[InteractionMode[\"FP\"] = 0] = \"FP\";\n    InteractionMode[InteractionMode[\"UI\"] = 1] = \"UI\";\n})(InteractionMode = exports.InteractionMode || (exports.InteractionMode = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9zeXN0ZW0vaW50ZXJmYWNlL21vZGVsL0ludGVyYWN0aW9uTW9kZS50cz9mMDA2Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBWSxlQUdYO0FBSEQsV0FBWSxlQUFlO0lBQ3ZCLGlEQUFFO0lBQ0YsaURBQUU7QUFDTixDQUFDLEVBSFcsZUFBZSxHQUFmLHVCQUFlLEtBQWYsdUJBQWUsUUFHMUIiLCJmaWxlIjoiLi9zcmMvYnJvd3Nlci9zeXN0ZW0vaW50ZXJmYWNlL21vZGVsL0ludGVyYWN0aW9uTW9kZS50cy5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBlbnVtIEludGVyYWN0aW9uTW9kZSB7XG4gICAgRlAsXG4gICAgVUlcbn0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/browser/system/interface/model/InteractionMode.ts\n");

/***/ }),

/***/ "./src/browser/system/interface/model/Slot.ts":
/*!****************************************************!*\
  !*** ./src/browser/system/interface/model/Slot.ts ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Slot;\n(function (Slot) {\n    Slot[Slot[\"PRIMARY\"] = 0] = \"PRIMARY\";\n    Slot[Slot[\"SECONDARY\"] = 1] = \"SECONDARY\";\n    Slot[Slot[\"PRIMARY_SELECTOR\"] = 2] = \"PRIMARY_SELECTOR\";\n    Slot[Slot[\"SECONDARY_SELECTOR\"] = 3] = \"SECONDARY_SELECTOR\";\n    Slot[Slot[\"WALK\"] = 4] = \"WALK\";\n})(Slot = exports.Slot || (exports.Slot = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9zeXN0ZW0vaW50ZXJmYWNlL21vZGVsL1Nsb3QudHM/Mjk2NyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLElBQVksSUFNWDtBQU5ELFdBQVksSUFBSTtJQUNaLHFDQUFPO0lBQ1AseUNBQVM7SUFDVCx1REFBZ0I7SUFDaEIsMkRBQWtCO0lBQ2xCLCtCQUFJO0FBQ1IsQ0FBQyxFQU5XLElBQUksR0FBSixZQUFJLEtBQUosWUFBSSxRQU1mIiwiZmlsZSI6Ii4vc3JjL2Jyb3dzZXIvc3lzdGVtL2ludGVyZmFjZS9tb2RlbC9TbG90LnRzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGVudW0gU2xvdCB7XG4gICAgUFJJTUFSWSxcbiAgICBTRUNPTkRBUlksXG4gICAgUFJJTUFSWV9TRUxFQ1RPUixcbiAgICBTRUNPTkRBUllfU0VMRUNUT1IsXG4gICAgV0FMS1xufSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/browser/system/interface/model/Slot.ts\n");

/***/ }),

/***/ "./src/browser/system/interface/model/Stick.ts":
/*!*****************************************************!*\
  !*** ./src/browser/system/interface/model/Stick.ts ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Stick;\n(function (Stick) {\n    Stick[Stick[\"PRIMARY\"] = 0] = \"PRIMARY\";\n    Stick[Stick[\"SECONDARY\"] = 1] = \"SECONDARY\";\n})(Stick = exports.Stick || (exports.Stick = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9zeXN0ZW0vaW50ZXJmYWNlL21vZGVsL1N0aWNrLnRzPzAxMzAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFZLEtBR1g7QUFIRCxXQUFZLEtBQUs7SUFDYix1Q0FBTztJQUNQLDJDQUFTO0FBQ2IsQ0FBQyxFQUhXLEtBQUssR0FBTCxhQUFLLEtBQUwsYUFBSyxRQUdoQiIsImZpbGUiOiIuL3NyYy9icm93c2VyL3N5c3RlbS9pbnRlcmZhY2UvbW9kZWwvU3RpY2sudHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZW51bSBTdGljayB7XG4gICAgUFJJTUFSWSxcbiAgICBTRUNPTkRBUllcbn0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/browser/system/interface/model/Stick.ts\n");

/***/ }),

/***/ "./src/browser/system/interface/tool/AddObjectTool.ts":
/*!************************************************************!*\
  !*** ./src/browser/system/interface/tool/AddObjectTool.ts ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst three_1 = __webpack_require__(/*! three */ \"three\");\nconst Slot_1 = __webpack_require__(/*! ../model/Slot */ \"./src/browser/system/interface/model/Slot.ts\");\nconst Button_1 = __webpack_require__(/*! ../model/Button */ \"./src/browser/system/interface/model/Button.ts\");\nconst PointerTool_1 = __webpack_require__(/*! ./PointerTool */ \"./src/browser/system/interface/tool/PointerTool.ts\");\nconst math_1 = __webpack_require__(/*! ../../../math/math */ \"./src/browser/math/math.ts\");\nconst aframe_typescript_boilerplate_1 = __webpack_require__(/*! aframe-typescript-boilerplate */ \"./node_modules/aframe-typescript-boilerplate/built/index.js\");\nclass AddObjectTool extends PointerTool_1.PointerTool {\n    constructor(component, entity, data) {\n        super(component, entity, data);\n        this.entityTemplateScale = 1;\n        this.entityReviewScale = 0.05;\n        this.entityTemplates = [\n            '<a-entity model=\"#cube_wood\" collidable/>',\n            '<a-entity model=\"#cube_brick\" collidable/>',\n            '<a-entity model=\"#cube_grass\" collidable/>',\n            '<a-entity model=\"#cube_sand\" collidable/>',\n            '<a-entity model=\"#cube_marble\" collidable/>',\n            '<a-entity model=\"#cube_stone\" collidable/>',\n            '<a-entity model=\"#slab_sand\" collidable/>',\n            '<a-entity model=\"#slab_marble\" collidable/>',\n            '<a-entity model=\"#slab_stone\" collidable/>',\n            '<a-entity model=\"#pedestal\" collidable/>'\n        ];\n        this.entityTemplateIndex = 0;\n        this.entityTemplate = this.entityTemplates[this.entityTemplateIndex];\n        this.raycaster = new three_1.Raycaster();\n    }\n    init() {\n        //console.log(this.componentName + \" init\");\n        super.init();\n    }\n    tick(time, timeDelta) {\n        super.tick(time, timeDelta);\n    }\n    buttonDown(device, toolSlot, button) {\n        if (!this.pressed.has(button)) {\n        }\n        super.buttonDown(device, toolSlot, button);\n    }\n    buttonUp(device, toolSlot, button) {\n        if (this.pressed.has(button)) {\n            if (button == Button_1.Button.TRIGGER) {\n                this.addEntityFromTemplate();\n            }\n            if (button == Button_1.Button.UP) {\n                if (this.pressed.has(Button_1.Button.TRIGGER)) {\n                    this.cloneEntity();\n                }\n                else {\n                    this.entityTemplateIndex++;\n                    if (this.entityTemplateIndex >= this.entityTemplates.length) {\n                        this.entityTemplateIndex = 0;\n                    }\n                    this.entityTemplate = this.entityTemplates[this.entityTemplateIndex];\n                    this.setReviewEntity();\n                }\n            }\n            if (button == Button_1.Button.DOWN) {\n                this.entityTemplateIndex--;\n                if (this.entityTemplateIndex <= 0) {\n                    this.entityTemplateIndex = this.entityTemplates.length - 1;\n                }\n                this.entityTemplate = this.entityTemplates[this.entityTemplateIndex];\n                this.setReviewEntity();\n            }\n        }\n        super.buttonUp(device, toolSlot, button);\n    }\n    setReviewEntity() {\n        const toolSelectorTool = this.interface.getToolAtSlot(Slot_1.Slot.PRIMARY_SELECTOR);\n        if (this.reviewEntity) {\n            toolSelectorTool.entity.removeChild(this.reviewEntity);\n        }\n        this.reviewEntity = aframe_typescript_boilerplate_1.createElement(this.entityTemplate);\n        this.reviewEntity.setAttribute(\"scale\", this.entityReviewScale + \" \" + this.entityReviewScale + \" \" + this.entityReviewScale);\n        this.reviewEntity.setAttribute(\"rotation\", \"60 0 0\");\n        this.reviewEntity.setAttribute(\"position\", \"0 0 -0.1\");\n        toolSelectorTool.entity.appendChild(this.reviewEntity);\n    }\n    cloneEntity() {\n        //console.log(\"clone entity.\");\n        const gridStep = 1;\n        const pointedObject = this.pointedObject;\n        const pointerPosition = this.pointedPosition;\n        const pointedFace = this.pointedFace;\n        if (pointedObject && pointerPosition && pointedFace) {\n            const entity = aframe_typescript_boilerplate_1.getEntity(pointedObject);\n            const entityXml = entity.outerHTML;\n            const currentOrientation = entity.object3D.quaternion.clone();\n            const currentScale = entity.object3D.scale;\n            const tempEntity = aframe_typescript_boilerplate_1.createElement(entityXml);\n            tempEntity.setAttribute(\"quaternion\", currentOrientation.x + \" \" + currentOrientation.y + \" \" + currentOrientation.z + \" \" + currentOrientation.w);\n            this.recursiveClearSidAndServer(tempEntity);\n            //const pointedObjectPosition = pointedObject.position.clone();\n            //pointedObject.getWorldPosition(pointedObjectPosition);\n            const template = tempEntity.outerHTML;\n            const templateScale = pointedObject.scale.x;\n            const entityPosition = pointedObject.localToWorld(pointedObject.position.clone());\n            const normal = pointedObject.localToWorld(pointedFace.normal.clone()).sub(pointedObject.localToWorld(pointedObject.position.clone()));\n            const newPosition = entityPosition.add(normal.multiplyScalar(templateScale));\n            const spaceSystem = this.getSystemController(\"space\");\n            spaceSystem.addEntity(template, newPosition, currentScale);\n        }\n    }\n    addEntityFromXml(xml) {\n        const gridStep = 1;\n        const pointedObject = this.pointedObject;\n        const pointerPosition = this.pointedPosition;\n        const pointedFace = this.pointedFace;\n        if (pointedObject && pointerPosition && pointedFace) {\n            const entityXml = xml;\n            const tempEntity = aframe_typescript_boilerplate_1.createElement(entityXml);\n            this.recursiveClearSidAndServer(tempEntity);\n            const template = tempEntity.outerHTML;\n            const templateScale = this.interface.getSelfScale() * this.entityTemplateScale;\n            const entityPosition = pointerPosition.clone();\n            const normal = pointedObject.localToWorld(pointedFace.normal.clone()).sub(pointedObject.localToWorld(pointedObject.position.clone()));\n            const newPosition = math_1.snapVector3ToAxisAlignedGrid(entityPosition.add(normal.multiplyScalar(this.interface.getSelfScale() * gridStep / 2)), this.interface.getSelfScale() * gridStep);\n            const spaceSystem = this.getSystemController(\"space\");\n            spaceSystem.addEntity(template, newPosition, new three_1.Vector3(templateScale, templateScale, templateScale));\n        }\n    }\n    addEntityFromTemplate() {\n        const gridStep = 1;\n        const pointedObject = this.pointedObject;\n        const pointerPosition = this.pointedPosition;\n        const pointedFace = this.pointedFace;\n        if (pointedObject && pointerPosition && pointedFace) {\n            //const pointedObjectPosition = pointedObject.position.clone();\n            //pointedObject.getWorldPosition(pointedObjectPosition);\n            const template = this.entityTemplate;\n            const templateScale = this.interface.getSelfScale() * this.entityTemplateScale;\n            const entityPosition = pointerPosition.clone();\n            const normal = pointedObject.localToWorld(pointedFace.normal.clone()).sub(pointedObject.localToWorld(pointedObject.position.clone()));\n            const newPosition = math_1.snapVector3ToAxisAlignedGrid(entityPosition.add(normal.multiplyScalar(this.interface.getSelfScale() * gridStep / 2)), this.interface.getSelfScale() * gridStep);\n            const spaceSystem = this.getSystemController(\"space\");\n            spaceSystem.addEntity(template, newPosition, new three_1.Vector3(templateScale, templateScale, templateScale));\n        }\n    }\n    recursiveClearSidAndServer(entity) {\n        entity.removeAttribute(\"sid\");\n        entity.removeAttribute(\"server\");\n        if (entity.children && entity.children.length > 0) {\n            for (const child of entity.children) {\n                this.recursiveClearSidAndServer(child);\n            }\n        }\n    }\n}\nAddObjectTool.DEFINITION = new aframe_typescript_boilerplate_1.ComponentControllerDefinition(\"add-object-tool\", {}, false, true, (component, entity, data) => new AddObjectTool(component, entity, data));\nexports.AddObjectTool = AddObjectTool;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/browser/system/interface/tool/AddObjectTool.ts\n");

/***/ }),

/***/ "./src/browser/system/interface/tool/MoveObjectTool.ts":
/*!*************************************************************!*\
  !*** ./src/browser/system/interface/tool/MoveObjectTool.ts ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst three_1 = __webpack_require__(/*! three */ \"three\");\nconst Button_1 = __webpack_require__(/*! ../model/Button */ \"./src/browser/system/interface/model/Button.ts\");\nconst PointerTool_1 = __webpack_require__(/*! ./PointerTool */ \"./src/browser/system/interface/tool/PointerTool.ts\");\nconst aframe_typescript_boilerplate_1 = __webpack_require__(/*! aframe-typescript-boilerplate */ \"./node_modules/aframe-typescript-boilerplate/built/index.js\");\nclass MoveObjectTool extends PointerTool_1.PointerTool {\n    constructor(component, entity, data) {\n        super(component, entity, data);\n        this.moveStep = 0.25;\n        this.raycaster = new three_1.Raycaster();\n    }\n    init() {\n        super.init();\n    }\n    tick(time, timeDelta) {\n        super.tick(time, timeDelta);\n    }\n    buttonDown(device, toolSlot, button) {\n        if (!this.pressed.has(button)) {\n            if (button == Button_1.Button.UP) {\n                if (this.pressed.has(Button_1.Button.TRIGGER)) {\n                    this.moveForward();\n                }\n            }\n        }\n        super.buttonDown(device, toolSlot, button);\n    }\n    buttonUp(device, toolSlot, button) {\n        if (this.pressed.has(button)) {\n            if (button == Button_1.Button.DOWN) {\n                if (this.pressed.has(Button_1.Button.TRIGGER)) {\n                    this.moveBackward();\n                }\n            }\n        }\n        super.buttonUp(device, toolSlot, button);\n    }\n    moveForward() {\n        const object = this.pointedObject;\n        if (object) {\n            const entity = aframe_typescript_boilerplate_1.getEntity(object);\n            this.move(entity, this.moveStep);\n        }\n    }\n    moveBackward() {\n        const object = this.pointedObject;\n        if (object) {\n            const entity = aframe_typescript_boilerplate_1.getEntity(object);\n            this.move(entity, -this.moveStep);\n        }\n    }\n    move(entity, moveStep) {\n        const spaceSystem = this.getSystemController(\"space\");\n        const gridStep = 1;\n        const pointedObject = this.pointedObject;\n        const pointerPosition = this.pointedPosition;\n        const pointedFace = this.pointedFace;\n        if (pointedObject && pointerPosition && pointedFace) {\n            const currentPosition = entity.object3D.getWorldPosition(entity.object3D.position.clone());\n            const currentOrientation = entity.object3D.quaternion.clone();\n            const normal = pointedObject.localToWorld(pointedFace.normal.clone()).sub(pointedObject.localToWorld(pointedObject.position.clone()));\n            const newPosition = currentPosition.add(normal.multiplyScalar(-this.interface.getSelfScale() * gridStep * moveStep));\n            const scale = entity.getAttribute(\"scale\");\n            spaceSystem.updateEntity(entity, newPosition, currentOrientation, scale);\n        }\n    }\n}\nMoveObjectTool.DEFINITION = new aframe_typescript_boilerplate_1.ComponentControllerDefinition(\"move-object-tool\", {}, false, true, (component, entity, data) => new MoveObjectTool(component, entity, data));\nexports.MoveObjectTool = MoveObjectTool;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/browser/system/interface/tool/MoveObjectTool.ts\n");

/***/ }),

/***/ "./src/browser/system/interface/tool/PointerTool.ts":
/*!**********************************************************!*\
  !*** ./src/browser/system/interface/tool/PointerTool.ts ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst three_1 = __webpack_require__(/*! three */ \"three\");\nconst Button_1 = __webpack_require__(/*! ../model/Button */ \"./src/browser/system/interface/model/Button.ts\");\nconst raycast_1 = __webpack_require__(/*! ../../../three/raycast */ \"./src/browser/three/raycast.ts\");\nconst aframe_typescript_boilerplate_1 = __webpack_require__(/*! aframe-typescript-boilerplate */ \"./node_modules/aframe-typescript-boilerplate/built/index.js\");\nconst CodeRealityComponentController_1 = __webpack_require__(/*! ../../../component/CodeRealityComponentController */ \"./src/browser/component/CodeRealityComponentController.ts\");\nclass PointerTool extends CodeRealityComponentController_1.CodeRealityComponentController {\n    constructor(component, entity, data) {\n        super(component, entity, data);\n        this.pointerMaterial = new three_1.LineBasicMaterial({ color: 0xffffff, transparent: true, opacity: 0.5 });\n        this.pressed = new Set();\n        this.time = 0;\n        this.pointerLine = this.constructPointerLine();\n        this.pointerCursor = this.constructPointerCursor();\n        this.pointerDevicePosition = new three_1.Vector3(0, 0, 0);\n        this.pointerDirection = new three_1.Vector3(0, 0, 0);\n        this.raycaster = new three_1.Raycaster();\n        this.interface.registerTool(this);\n    }\n    init() {\n        //console.log(this.componentName + \" init\");\n    }\n    update(data, oldData) { }\n    remove() { }\n    pause() { }\n    play() { }\n    tick(time, timeDelta) {\n        if (this.pointerDevice) {\n            this.pointerTick(time, timeDelta);\n        }\n    }\n    buttonDown(device, toolSlot, button) {\n        if (!this.pressed.has(button)) {\n            if (button == Button_1.Button.TRIGGER && !this.pointerDevice) {\n                this.pointerOn(device);\n            }\n            this.pressed.add(button);\n        }\n    }\n    buttonUp(device, toolSlot, button) {\n        if (this.pressed.has(button)) {\n            if (button == Button_1.Button.TRIGGER && this.pointerDevice) {\n                this.pointerOff(device);\n            }\n            this.pressed.delete(button);\n        }\n    }\n    stickTwist(device, toolSlot, stick, x, y) {\n    }\n    constructPointerLine() {\n        var geometry = new three_1.Geometry();\n        geometry.vertices.push(new three_1.Vector3(0, 0, -100), new three_1.Vector3(0, 0, 0));\n        return new three_1.Line(geometry, this.pointerMaterial);\n    }\n    constructPointerCursor() {\n        return new three_1.Mesh(new three_1.SphereGeometry(0.01, 32, 32), this.pointerMaterial);\n    }\n    pointerOn(device) {\n        device.entity.object3D.add(this.pointerLine);\n        this.pointerDevice = device;\n    }\n    pointerOff(device) {\n        if (this.pointedPosition) {\n            this.removeCursor();\n        }\n        device.entity.object3D.remove(this.pointerLine);\n        this.pointerDevice = undefined;\n    }\n    pointerTick(time, timeDelta) {\n        this.pointerDevice.entity.object3D.getWorldDirection(this.pointerDirection);\n        this.pointerDirection.multiplyScalar(-1);\n        this.pointerDevice.entity.object3D.getWorldPosition(this.pointerDevicePosition);\n        this.raycaster.near = 0;\n        this.raycaster.far = 100;\n        this.raycaster.set(this.pointerDevicePosition, this.pointerDirection);\n        //const intersects = this.raycaster!!.intersectObjects(this.interface.getCollidables(), true);\n        const intersects = raycast_1.raycast(this.interface.getCollidables(), this.raycaster);\n        if (intersects.length > 0) {\n            if (intersects[0].object === this.pointerCursor) {\n                intersects.splice(0, 1);\n            }\n        }\n        if (intersects.length > 0) {\n            const intersectionPoint = intersects[0].point;\n            //console.log(JSON.stringify(intersects[0]));\n            this.pointerCursor.position.copy(intersectionPoint);\n            if (!this.pointedPosition) {\n                this.addCursor(intersects[0].object);\n            }\n            this.pointedPosition = intersectionPoint;\n            this.pointedObject = intersects[0].object;\n            this.pointedFace = intersects[0].face;\n        }\n        else {\n            if (this.pointedPosition) {\n                this.removeCursor();\n            }\n        }\n    }\n    addCursor(object) {\n        this.pointerCursor.scale.x = this.interface.getSelfScale();\n        this.pointerCursor.scale.y = this.interface.getSelfScale();\n        this.pointerCursor.scale.z = this.interface.getSelfScale();\n        this.scene.object3D.add(this.pointerCursor);\n        //console.log(\"add pointer cursor.\");\n    }\n    removeCursor() {\n        this.scene.object3D.remove(this.pointerCursor);\n        //console.log(\"remove pointer cursor.\");\n        this.pointedObject = undefined;\n        this.pointedPosition = undefined;\n        this.pointedFace = undefined;\n    }\n}\nPointerTool.DEFINITION = new aframe_typescript_boilerplate_1.ComponentControllerDefinition(\"pointer-tool\", {}, false, true, (component, entity, data) => new PointerTool(component, entity, data));\nexports.PointerTool = PointerTool;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/browser/system/interface/tool/PointerTool.ts\n");

/***/ }),

/***/ "./src/browser/system/interface/tool/RemoveObjectTool.ts":
/*!***************************************************************!*\
  !*** ./src/browser/system/interface/tool/RemoveObjectTool.ts ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst three_1 = __webpack_require__(/*! three */ \"three\");\nconst Button_1 = __webpack_require__(/*! ../model/Button */ \"./src/browser/system/interface/model/Button.ts\");\nconst PointerTool_1 = __webpack_require__(/*! ./PointerTool */ \"./src/browser/system/interface/tool/PointerTool.ts\");\nconst aframe_typescript_boilerplate_1 = __webpack_require__(/*! aframe-typescript-boilerplate */ \"./node_modules/aframe-typescript-boilerplate/built/index.js\");\nclass RemoveObjectTool extends PointerTool_1.PointerTool {\n    constructor(component, entity, data) {\n        super(component, entity, data);\n        this.raycaster = new three_1.Raycaster();\n    }\n    init() {\n        //console.log(this.componentName + \" init\");\n        super.init();\n    }\n    tick(time, timeDelta) {\n        super.tick(time, timeDelta);\n    }\n    buttonDown(device, toolSlot, button) {\n        if (!this.pressed.has(button)) {\n        }\n        super.buttonDown(device, toolSlot, button);\n    }\n    buttonUp(device, toolSlot, button) {\n        if (this.pressed.has(button)) {\n            if (button == Button_1.Button.TRIGGER) {\n                this.removeEntity(device);\n            }\n        }\n        super.buttonUp(device, toolSlot, button);\n    }\n    removeEntity(device) {\n        const pointedObject = this.pointedObject;\n        const pointerPosition = this.pointedPosition;\n        const spaceSystem = this.getSystemController(\"space\");\n        if (pointedObject && pointerPosition) {\n            const pointedEntity = aframe_typescript_boilerplate_1.getEntity(pointedObject);\n            if (pointedEntity) {\n                spaceSystem.removeEntity(pointedEntity);\n            }\n        }\n    }\n}\nRemoveObjectTool.DEFINITION = new aframe_typescript_boilerplate_1.ComponentControllerDefinition(\"remove-object-tool\", {}, false, true, (component, entity, data) => new RemoveObjectTool(component, entity, data));\nexports.RemoveObjectTool = RemoveObjectTool;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9zeXN0ZW0vaW50ZXJmYWNlL3Rvb2wvUmVtb3ZlT2JqZWN0VG9vbC50cz9jZGQ2Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsMERBQWdDO0FBSWhDLDhHQUF1QztBQUN2QyxxSEFBMEM7QUFFMUMsZ0tBQXVGO0FBRXZGLE1BQWEsZ0JBQWlCLFNBQVEseUJBQVc7SUFJN0MsWUFBWSxTQUFvQixFQUFFLE1BQWMsRUFBRSxJQUFTO1FBQ3ZELEtBQUssQ0FBQyxTQUFTLEVBQUUsTUFBTSxFQUFFLElBQUksQ0FBQyxDQUFDO1FBQy9CLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxpQkFBUyxFQUFFLENBQUM7SUFDckMsQ0FBQztJQUVELElBQUk7UUFDQSw0Q0FBNEM7UUFDNUMsS0FBSyxDQUFDLElBQUksRUFBRSxDQUFDO0lBQ2pCLENBQUM7SUFFRCxJQUFJLENBQUMsSUFBWSxFQUFFLFNBQWlCO1FBQ2hDLEtBQUssQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLFNBQVMsQ0FBQyxDQUFDO0lBQ2hDLENBQUM7SUFFRCxVQUFVLENBQUMsTUFBYyxFQUFFLFFBQWMsRUFBRSxNQUFjO1FBQ3JELElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsRUFBRTtTQUM5QjtRQUNELEtBQUssQ0FBQyxVQUFVLENBQUMsTUFBTSxFQUFFLFFBQVEsRUFBRSxNQUFNLENBQUMsQ0FBQztJQUMvQyxDQUFDO0lBRUQsUUFBUSxDQUFDLE1BQWMsRUFBRSxRQUFjLEVBQUUsTUFBYztRQUNuRCxJQUFJLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxFQUFFO1lBQzFCLElBQUksTUFBTSxJQUFJLGVBQU0sQ0FBQyxPQUFPLEVBQUU7Z0JBQzFCLElBQUksQ0FBQyxZQUFZLENBQUMsTUFBTSxDQUFDLENBQUM7YUFDN0I7U0FDSjtRQUNELEtBQUssQ0FBQyxRQUFRLENBQUMsTUFBTSxFQUFFLFFBQVEsRUFBRSxNQUFNLENBQUMsQ0FBQztJQUM3QyxDQUFDO0lBRU8sWUFBWSxDQUFDLE1BQWM7UUFFL0IsTUFBTSxhQUFhLEdBQUcsSUFBSSxDQUFDLGFBQWEsQ0FBQztRQUN6QyxNQUFNLGVBQWUsR0FBRyxJQUFJLENBQUMsZUFBZSxDQUFDO1FBRTdDLE1BQU0sV0FBVyxHQUFHLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxPQUFPLENBQTBCLENBQUM7UUFFL0UsSUFBSSxhQUFhLElBQUksZUFBZSxFQUFFO1lBQ2xDLE1BQU0sYUFBYSxHQUFHLHlDQUFTLENBQUMsYUFBYSxDQUFDLENBQUM7WUFDL0MsSUFBSSxhQUFhLEVBQUU7Z0JBQ2YsV0FBVyxDQUFDLFlBQVksQ0FBQyxhQUFhLENBQUMsQ0FBQzthQUMzQztTQUNKO0lBQ0wsQ0FBQzs7QUE1Q2EsMkJBQVUsR0FBRyxJQUFJLDZEQUE2QixDQUFDLG9CQUFvQixFQUFFLEVBQUUsRUFBRSxLQUFLLEVBQUUsSUFBSSxFQUFFLENBQUMsU0FBb0IsRUFBRSxNQUFjLEVBQUUsSUFBUyxFQUFFLEVBQUUsQ0FBQyxJQUFJLGdCQUFnQixDQUFDLFNBQVMsRUFBRSxNQUFNLEVBQUUsSUFBSSxDQUFDLENBQUMsQ0FBQztBQUY1TSw0Q0FpREMiLCJmaWxlIjoiLi9zcmMvYnJvd3Nlci9zeXN0ZW0vaW50ZXJmYWNlL3Rvb2wvUmVtb3ZlT2JqZWN0VG9vbC50cy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7UmF5Y2FzdGVyfSBmcm9tIFwidGhyZWVcIjtcbmltcG9ydCB7Q29tcG9uZW50LCBFbnRpdHl9IGZyb20gXCJhZnJhbWVcIjtcbmltcG9ydCB7RGV2aWNlfSBmcm9tIFwiLi4vRGV2aWNlXCI7XG5pbXBvcnQge1Nsb3R9IGZyb20gXCIuLi9tb2RlbC9TbG90XCI7XG5pbXBvcnQge0J1dHRvbn0gZnJvbSBcIi4uL21vZGVsL0J1dHRvblwiO1xuaW1wb3J0IHtQb2ludGVyVG9vbH0gZnJvbSBcIi4vUG9pbnRlclRvb2xcIjtcbmltcG9ydCB7U3BhY2VTeXN0ZW1Db250cm9sbGVyfSBmcm9tIFwiLi4vLi4vLi4vLi5cIjtcbmltcG9ydCB7Q29tcG9uZW50Q29udHJvbGxlckRlZmluaXRpb24sIGdldEVudGl0eX0gZnJvbSBcImFmcmFtZS10eXBlc2NyaXB0LWJvaWxlcnBsYXRlXCI7XG5cbmV4cG9ydCBjbGFzcyBSZW1vdmVPYmplY3RUb29sIGV4dGVuZHMgUG9pbnRlclRvb2wge1xuXG4gICAgcHVibGljIHN0YXRpYyBERUZJTklUSU9OID0gbmV3IENvbXBvbmVudENvbnRyb2xsZXJEZWZpbml0aW9uKFwicmVtb3ZlLW9iamVjdC10b29sXCIsIHt9LCBmYWxzZSwgdHJ1ZSwgKGNvbXBvbmVudDogQ29tcG9uZW50LCBlbnRpdHk6IEVudGl0eSwgZGF0YTogYW55KSA9PiBuZXcgUmVtb3ZlT2JqZWN0VG9vbChjb21wb25lbnQsIGVudGl0eSwgZGF0YSkpO1xuXG4gICAgY29uc3RydWN0b3IoY29tcG9uZW50OiBDb21wb25lbnQsIGVudGl0eTogRW50aXR5LCBkYXRhOiBhbnkpIHtcbiAgICAgICAgc3VwZXIoY29tcG9uZW50LCBlbnRpdHksIGRhdGEpO1xuICAgICAgICB0aGlzLnJheWNhc3RlciA9IG5ldyBSYXljYXN0ZXIoKTtcbiAgICB9XG5cbiAgICBpbml0KCk6IHZvaWQge1xuICAgICAgICAvL2NvbnNvbGUubG9nKHRoaXMuY29tcG9uZW50TmFtZSArIFwiIGluaXRcIik7XG4gICAgICAgIHN1cGVyLmluaXQoKTtcbiAgICB9XG5cbiAgICB0aWNrKHRpbWU6IG51bWJlciwgdGltZURlbHRhOiBudW1iZXIpOiB2b2lkIHtcbiAgICAgICAgc3VwZXIudGljayh0aW1lLCB0aW1lRGVsdGEpO1xuICAgIH1cblxuICAgIGJ1dHRvbkRvd24oZGV2aWNlOiBEZXZpY2UsIHRvb2xTbG90OiBTbG90LCBidXR0b246IEJ1dHRvbik6IHZvaWQge1xuICAgICAgICBpZiAoIXRoaXMucHJlc3NlZC5oYXMoYnV0dG9uKSkge1xuICAgICAgICB9XG4gICAgICAgIHN1cGVyLmJ1dHRvbkRvd24oZGV2aWNlLCB0b29sU2xvdCwgYnV0dG9uKTtcbiAgICB9XG5cbiAgICBidXR0b25VcChkZXZpY2U6IERldmljZSwgdG9vbFNsb3Q6IFNsb3QsIGJ1dHRvbjogQnV0dG9uKTogdm9pZCB7XG4gICAgICAgIGlmICh0aGlzLnByZXNzZWQuaGFzKGJ1dHRvbikpIHtcbiAgICAgICAgICAgIGlmIChidXR0b24gPT0gQnV0dG9uLlRSSUdHRVIpIHtcbiAgICAgICAgICAgICAgICB0aGlzLnJlbW92ZUVudGl0eShkZXZpY2UpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHN1cGVyLmJ1dHRvblVwKGRldmljZSwgdG9vbFNsb3QsIGJ1dHRvbik7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSByZW1vdmVFbnRpdHkoZGV2aWNlOiBEZXZpY2UpIHtcblxuICAgICAgICBjb25zdCBwb2ludGVkT2JqZWN0ID0gdGhpcy5wb2ludGVkT2JqZWN0O1xuICAgICAgICBjb25zdCBwb2ludGVyUG9zaXRpb24gPSB0aGlzLnBvaW50ZWRQb3NpdGlvbjtcblxuICAgICAgICBjb25zdCBzcGFjZVN5c3RlbSA9IHRoaXMuZ2V0U3lzdGVtQ29udHJvbGxlcihcInNwYWNlXCIpIGFzIFNwYWNlU3lzdGVtQ29udHJvbGxlcjtcblxuICAgICAgICBpZiAocG9pbnRlZE9iamVjdCAmJiBwb2ludGVyUG9zaXRpb24pIHtcbiAgICAgICAgICAgIGNvbnN0IHBvaW50ZWRFbnRpdHkgPSBnZXRFbnRpdHkocG9pbnRlZE9iamVjdCk7XG4gICAgICAgICAgICBpZiAocG9pbnRlZEVudGl0eSkge1xuICAgICAgICAgICAgICAgIHNwYWNlU3lzdGVtLnJlbW92ZUVudGl0eShwb2ludGVkRW50aXR5KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuXG59XG5cblxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/browser/system/interface/tool/RemoveObjectTool.ts\n");

/***/ }),

/***/ "./src/browser/system/interface/tool/RotateObjectTool.ts":
/*!***************************************************************!*\
  !*** ./src/browser/system/interface/tool/RotateObjectTool.ts ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst three_1 = __webpack_require__(/*! three */ \"three\");\nconst Button_1 = __webpack_require__(/*! ../model/Button */ \"./src/browser/system/interface/model/Button.ts\");\nconst PointerTool_1 = __webpack_require__(/*! ./PointerTool */ \"./src/browser/system/interface/tool/PointerTool.ts\");\nconst aframe_typescript_boilerplate_1 = __webpack_require__(/*! aframe-typescript-boilerplate */ \"./node_modules/aframe-typescript-boilerplate/built/index.js\");\nclass RotateObjectTool extends PointerTool_1.PointerTool {\n    constructor(component, entity, data) {\n        super(component, entity, data);\n        this.rotateDegrees = 22.5;\n        this.raycaster = new three_1.Raycaster();\n    }\n    init() {\n        super.init();\n    }\n    tick(time, timeDelta) {\n        super.tick(time, timeDelta);\n    }\n    buttonDown(device, toolSlot, button) {\n        if (!this.pressed.has(button)) {\n        }\n        super.buttonDown(device, toolSlot, button);\n    }\n    buttonUp(device, toolSlot, button) {\n        if (this.pressed.has(button)) {\n            if (button == Button_1.Button.UP) {\n                if (this.pressed.has(Button_1.Button.TRIGGER)) {\n                    this.rotateForward();\n                }\n            }\n            if (button == Button_1.Button.DOWN) {\n                if (this.pressed.has(Button_1.Button.TRIGGER)) {\n                    this.resetRotation();\n                }\n            }\n        }\n        super.buttonUp(device, toolSlot, button);\n    }\n    rotateForward() {\n        const object = this.pointedObject;\n        if (object) {\n            const entity = aframe_typescript_boilerplate_1.getEntity(object);\n            this.rotate(entity, this.rotateDegrees);\n        }\n    }\n    rotateBackward() {\n        const object = this.pointedObject;\n        if (object) {\n            const entity = aframe_typescript_boilerplate_1.getEntity(object);\n            this.rotate(entity, -this.rotateDegrees);\n        }\n    }\n    rotate(entity, rotateDegrees) {\n        const spaceSystem = this.getSystemController(\"space\");\n        const gridStep = 1;\n        const pointedObject = this.pointedObject;\n        const pointerPosition = this.pointedPosition;\n        const pointedFace = this.pointedFace;\n        if (pointedObject && pointerPosition && pointedFace) {\n            const normal = pointedObject.localToWorld(pointedFace.normal.clone()).sub(pointedObject.localToWorld(pointedObject.position.clone()));\n            const axis = normal;\n            const angle = rotateDegrees * (2 * Math.PI) / 360;\n            const quaternionRotation = new three_1.Quaternion();\n            quaternionRotation.setFromAxisAngle(axis, angle);\n            const currentPosition = entity.object3D.getWorldPosition(entity.object3D.position.clone());\n            const currentScale = entity.getAttribute(\"scale\");\n            const currentOrientation = entity.object3D.quaternion.clone();\n            const newOrientation = quaternionRotation.multiply(currentOrientation);\n            spaceSystem.updateEntity(entity, currentPosition, newOrientation.normalize(), currentScale);\n        }\n    }\n    resetRotation() {\n        const object = this.pointedObject;\n        if (object) {\n            const entity = aframe_typescript_boilerplate_1.getEntity(object);\n            const spaceSystem = this.getSystemController(\"space\");\n            const currentPosition = entity.object3D.getWorldPosition(entity.object3D.position.clone());\n            const currentScale = entity.getAttribute(\"scale\");\n            const newOrientation = new three_1.Quaternion(0, 0, 0, 1);\n            spaceSystem.updateEntity(entity, currentPosition, newOrientation, currentScale);\n        }\n    }\n}\nRotateObjectTool.DEFINITION = new aframe_typescript_boilerplate_1.ComponentControllerDefinition(\"rotate-object-tool\", {}, false, true, (component, entity, data) => new RotateObjectTool(component, entity, data));\nexports.RotateObjectTool = RotateObjectTool;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/browser/system/interface/tool/RotateObjectTool.ts\n");

/***/ }),

/***/ "./src/browser/system/interface/tool/ScaleObjectTool.ts":
/*!**************************************************************!*\
  !*** ./src/browser/system/interface/tool/ScaleObjectTool.ts ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst three_1 = __webpack_require__(/*! three */ \"three\");\nconst Button_1 = __webpack_require__(/*! ../model/Button */ \"./src/browser/system/interface/model/Button.ts\");\nconst PointerTool_1 = __webpack_require__(/*! ./PointerTool */ \"./src/browser/system/interface/tool/PointerTool.ts\");\nconst aframe_typescript_boilerplate_1 = __webpack_require__(/*! aframe-typescript-boilerplate */ \"./node_modules/aframe-typescript-boilerplate/built/index.js\");\nclass ScaleObjectTool extends PointerTool_1.PointerTool {\n    constructor(component, entity, data) {\n        super(component, entity, data);\n        this.scaleMultiplier = 2;\n        this.raycaster = new three_1.Raycaster();\n    }\n    init() {\n        super.init();\n    }\n    tick(time, timeDelta) {\n        super.tick(time, timeDelta);\n    }\n    buttonDown(device, toolSlot, button) {\n        if (!this.pressed.has(button)) {\n            if (button == Button_1.Button.UP) {\n                if (this.pressed.has(Button_1.Button.TRIGGER)) {\n                    this.scaleEntityUp();\n                }\n                else {\n                    this.scaleSelfUp();\n                }\n            }\n        }\n        super.buttonDown(device, toolSlot, button);\n    }\n    buttonUp(device, toolSlot, button) {\n        if (this.pressed.has(button)) {\n            if (button == Button_1.Button.DOWN) {\n                if (this.pressed.has(Button_1.Button.TRIGGER)) {\n                    this.scaleEntityDown();\n                }\n                else {\n                    this.scaleSelfDown();\n                }\n            }\n        }\n        super.buttonUp(device, toolSlot, button);\n    }\n    scaleSelfUp() {\n        this.scaleSelf(this.scaleMultiplier);\n    }\n    scaleSelfDown() {\n        this.scaleSelf(1 / this.scaleMultiplier);\n    }\n    scaleSelf(multiplier) {\n        this.interface.setSelfScale(this.interface.getSelfScale() * multiplier);\n    }\n    scaleEntityUp() {\n        const object = this.pointedObject;\n        if (object) {\n            const entity = aframe_typescript_boilerplate_1.getEntity(object);\n            this.scaleEntity(entity, this.scaleMultiplier);\n        }\n    }\n    scaleEntityDown() {\n        const object = this.pointedObject;\n        if (object) {\n            const entity = aframe_typescript_boilerplate_1.getEntity(object);\n            this.scaleEntity(entity, 1 / this.scaleMultiplier);\n        }\n    }\n    scaleEntity(entity, multiplier) {\n        const spaceSystem = this.getSystemController(\"space\");\n        const position = entity.object3D.getWorldPosition(entity.object3D.position.clone());\n        const currentOrientation = entity.object3D.quaternion.clone();\n        const scale = entity.getAttribute(\"scale\").clone();\n        scale.multiplyScalar(multiplier);\n        spaceSystem.updateEntity(entity, position, currentOrientation, scale);\n    }\n}\nScaleObjectTool.DEFINITION = new aframe_typescript_boilerplate_1.ComponentControllerDefinition(\"scale-object-tool\", {}, false, true, (component, entity, data) => new ScaleObjectTool(component, entity, data));\nexports.ScaleObjectTool = ScaleObjectTool;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9zeXN0ZW0vaW50ZXJmYWNlL3Rvb2wvU2NhbGVPYmplY3RUb29sLnRzP2U1ZDIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwwREFBeUM7QUFJekMsOEdBQXVDO0FBQ3ZDLHFIQUEwQztBQUUxQyxnS0FBdUY7QUFFdkYsTUFBYSxlQUFnQixTQUFRLHlCQUFXO0lBTTVDLFlBQVksU0FBb0IsRUFBRSxNQUFjLEVBQUUsSUFBUztRQUN2RCxLQUFLLENBQUMsU0FBUyxFQUFFLE1BQU0sRUFBRSxJQUFJLENBQUMsQ0FBQztRQUhuQyxvQkFBZSxHQUFHLENBQUMsQ0FBQztRQUloQixJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksaUJBQVMsRUFBRSxDQUFDO0lBQ3JDLENBQUM7SUFFRCxJQUFJO1FBQ0EsS0FBSyxDQUFDLElBQUksRUFBRSxDQUFDO0lBQ2pCLENBQUM7SUFFRCxJQUFJLENBQUMsSUFBWSxFQUFFLFNBQWlCO1FBQ2hDLEtBQUssQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLFNBQVMsQ0FBQyxDQUFDO0lBQ2hDLENBQUM7SUFFRCxVQUFVLENBQUMsTUFBYyxFQUFFLFFBQWMsRUFBRSxNQUFjO1FBQ3JELElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsRUFBRTtZQUMzQixJQUFJLE1BQU0sSUFBSSxlQUFNLENBQUMsRUFBRSxFQUFFO2dCQUNyQixJQUFJLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLGVBQU0sQ0FBQyxPQUFPLENBQUMsRUFBRTtvQkFDbEMsSUFBSSxDQUFDLGFBQWEsRUFBRSxDQUFDO2lCQUN4QjtxQkFBTTtvQkFDSCxJQUFJLENBQUMsV0FBVyxFQUFFLENBQUM7aUJBQ3RCO2FBQ0o7U0FDSjtRQUNELEtBQUssQ0FBQyxVQUFVLENBQUMsTUFBTSxFQUFFLFFBQVEsRUFBRSxNQUFNLENBQUMsQ0FBQztJQUMvQyxDQUFDO0lBRUQsUUFBUSxDQUFDLE1BQWMsRUFBRSxRQUFjLEVBQUUsTUFBYztRQUNuRCxJQUFJLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxFQUFFO1lBQzFCLElBQUksTUFBTSxJQUFJLGVBQU0sQ0FBQyxJQUFJLEVBQUU7Z0JBQ3ZCLElBQUksSUFBSSxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsZUFBTSxDQUFDLE9BQU8sQ0FBQyxFQUFFO29CQUNsQyxJQUFJLENBQUMsZUFBZSxFQUFFLENBQUM7aUJBQzFCO3FCQUFNO29CQUNILElBQUksQ0FBQyxhQUFhLEVBQUUsQ0FBQztpQkFDeEI7YUFDSjtTQUNKO1FBQ0QsS0FBSyxDQUFDLFFBQVEsQ0FBQyxNQUFNLEVBQUUsUUFBUSxFQUFFLE1BQU0sQ0FBQyxDQUFDO0lBQzdDLENBQUM7SUFFTyxXQUFXO1FBQ2YsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsZUFBZSxDQUFDLENBQUM7SUFDekMsQ0FBQztJQUVPLGFBQWE7UUFDakIsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLGVBQWUsQ0FBQyxDQUFDO0lBQzdDLENBQUM7SUFFTyxTQUFTLENBQUMsVUFBa0I7UUFDaEMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxZQUFZLEVBQUUsR0FBRyxVQUFVLENBQUMsQ0FBQztJQUM1RSxDQUFDO0lBRU8sYUFBYTtRQUNqQixNQUFNLE1BQU0sR0FBRyxJQUFJLENBQUMsYUFBYSxDQUFDO1FBQ2xDLElBQUksTUFBTSxFQUFFO1lBQ1IsTUFBTSxNQUFNLEdBQUcseUNBQVMsQ0FBQyxNQUFNLENBQUcsQ0FBQztZQUNuQyxJQUFJLENBQUMsV0FBVyxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsZUFBZSxDQUFDLENBQUM7U0FDbEQ7SUFDTCxDQUFDO0lBRU8sZUFBZTtRQUNuQixNQUFNLE1BQU0sR0FBRyxJQUFJLENBQUMsYUFBYSxDQUFDO1FBQ2xDLElBQUksTUFBTSxFQUFFO1lBQ1IsTUFBTSxNQUFNLEdBQUcseUNBQVMsQ0FBQyxNQUFNLENBQUcsQ0FBQztZQUNuQyxJQUFJLENBQUMsV0FBVyxDQUFDLE1BQU0sRUFBRSxDQUFDLEdBQUcsSUFBSSxDQUFDLGVBQWUsQ0FBQyxDQUFDO1NBQ3REO0lBQ0wsQ0FBQztJQUVPLFdBQVcsQ0FBQyxNQUFjLEVBQUUsVUFBa0I7UUFDbEQsTUFBTSxXQUFXLEdBQUcsSUFBSSxDQUFDLG1CQUFtQixDQUFDLE9BQU8sQ0FBMEIsQ0FBQztRQUMvRSxNQUFNLFFBQVEsR0FBSSxNQUFNLENBQUMsUUFBUSxDQUFDLGdCQUFnQixDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLEtBQUssRUFBRSxDQUFDLENBQUM7UUFDckYsTUFBTSxrQkFBa0IsR0FBRyxNQUFNLENBQUMsUUFBUSxDQUFDLFVBQVUsQ0FBQyxLQUFLLEVBQUUsQ0FBQztRQUM5RCxNQUFNLEtBQUssR0FBSSxNQUFNLENBQUMsWUFBWSxDQUFDLE9BQU8sQ0FBYSxDQUFDLEtBQUssRUFBRSxDQUFDO1FBRWhFLEtBQUssQ0FBQyxjQUFjLENBQUMsVUFBVSxDQUFDLENBQUM7UUFFakMsV0FBVyxDQUFDLFlBQVksQ0FBQyxNQUFNLEVBQUUsUUFBUSxFQUFFLGtCQUFrQixFQUFFLEtBQUssQ0FBQyxDQUFDO0lBQzFFLENBQUM7O0FBaEZhLDBCQUFVLEdBQUcsSUFBSSw2REFBNkIsQ0FBQyxtQkFBbUIsRUFBRSxFQUFFLEVBQUUsS0FBSyxFQUFFLElBQUksRUFBRSxDQUFDLFNBQW9CLEVBQUUsTUFBYyxFQUFFLElBQVMsRUFBRSxFQUFFLENBQUMsSUFBSSxlQUFlLENBQUMsU0FBUyxFQUFFLE1BQU0sRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUFDO0FBRjFNLDBDQW1GQyIsImZpbGUiOiIuL3NyYy9icm93c2VyL3N5c3RlbS9pbnRlcmZhY2UvdG9vbC9TY2FsZU9iamVjdFRvb2wudHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1JheWNhc3RlciwgVmVjdG9yM30gZnJvbSBcInRocmVlXCI7XG5pbXBvcnQge0NvbXBvbmVudCwgRW50aXR5fSBmcm9tIFwiYWZyYW1lXCI7XG5pbXBvcnQge0RldmljZX0gZnJvbSBcIi4uL0RldmljZVwiO1xuaW1wb3J0IHtTbG90fSBmcm9tIFwiLi4vbW9kZWwvU2xvdFwiO1xuaW1wb3J0IHtCdXR0b259IGZyb20gXCIuLi9tb2RlbC9CdXR0b25cIjtcbmltcG9ydCB7UG9pbnRlclRvb2x9IGZyb20gXCIuL1BvaW50ZXJUb29sXCI7XG5pbXBvcnQge1NwYWNlU3lzdGVtQ29udHJvbGxlcn0gZnJvbSBcIi4uLy4uLy4uLy4uXCI7XG5pbXBvcnQge0NvbXBvbmVudENvbnRyb2xsZXJEZWZpbml0aW9uLCBnZXRFbnRpdHl9IGZyb20gXCJhZnJhbWUtdHlwZXNjcmlwdC1ib2lsZXJwbGF0ZVwiO1xuXG5leHBvcnQgY2xhc3MgU2NhbGVPYmplY3RUb29sIGV4dGVuZHMgUG9pbnRlclRvb2wge1xuXG4gICAgcHVibGljIHN0YXRpYyBERUZJTklUSU9OID0gbmV3IENvbXBvbmVudENvbnRyb2xsZXJEZWZpbml0aW9uKFwic2NhbGUtb2JqZWN0LXRvb2xcIiwge30sIGZhbHNlLCB0cnVlLCAoY29tcG9uZW50OiBDb21wb25lbnQsIGVudGl0eTogRW50aXR5LCBkYXRhOiBhbnkpID0+IG5ldyBTY2FsZU9iamVjdFRvb2woY29tcG9uZW50LCBlbnRpdHksIGRhdGEpKTtcblxuICAgIHNjYWxlTXVsdGlwbGllciA9IDI7XG5cbiAgICBjb25zdHJ1Y3Rvcihjb21wb25lbnQ6IENvbXBvbmVudCwgZW50aXR5OiBFbnRpdHksIGRhdGE6IGFueSkge1xuICAgICAgICBzdXBlcihjb21wb25lbnQsIGVudGl0eSwgZGF0YSk7XG4gICAgICAgIHRoaXMucmF5Y2FzdGVyID0gbmV3IFJheWNhc3RlcigpO1xuICAgIH1cblxuICAgIGluaXQoKTogdm9pZCB7XG4gICAgICAgIHN1cGVyLmluaXQoKTtcbiAgICB9XG5cbiAgICB0aWNrKHRpbWU6IG51bWJlciwgdGltZURlbHRhOiBudW1iZXIpOiB2b2lkIHtcbiAgICAgICAgc3VwZXIudGljayh0aW1lLCB0aW1lRGVsdGEpO1xuICAgIH1cblxuICAgIGJ1dHRvbkRvd24oZGV2aWNlOiBEZXZpY2UsIHRvb2xTbG90OiBTbG90LCBidXR0b246IEJ1dHRvbik6IHZvaWQge1xuICAgICAgICBpZiAoIXRoaXMucHJlc3NlZC5oYXMoYnV0dG9uKSkge1xuICAgICAgICAgICAgaWYgKGJ1dHRvbiA9PSBCdXR0b24uVVApIHtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5wcmVzc2VkLmhhcyhCdXR0b24uVFJJR0dFUikpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5zY2FsZUVudGl0eVVwKCk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5zY2FsZVNlbGZVcCgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBzdXBlci5idXR0b25Eb3duKGRldmljZSwgdG9vbFNsb3QsIGJ1dHRvbik7XG4gICAgfVxuXG4gICAgYnV0dG9uVXAoZGV2aWNlOiBEZXZpY2UsIHRvb2xTbG90OiBTbG90LCBidXR0b246IEJ1dHRvbik6IHZvaWQge1xuICAgICAgICBpZiAodGhpcy5wcmVzc2VkLmhhcyhidXR0b24pKSB7XG4gICAgICAgICAgICBpZiAoYnV0dG9uID09IEJ1dHRvbi5ET1dOKSB7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMucHJlc3NlZC5oYXMoQnV0dG9uLlRSSUdHRVIpKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuc2NhbGVFbnRpdHlEb3duKCk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5zY2FsZVNlbGZEb3duKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHN1cGVyLmJ1dHRvblVwKGRldmljZSwgdG9vbFNsb3QsIGJ1dHRvbik7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBzY2FsZVNlbGZVcCgpIHtcbiAgICAgICAgdGhpcy5zY2FsZVNlbGYodGhpcy5zY2FsZU11bHRpcGxpZXIpO1xuICAgIH1cblxuICAgIHByaXZhdGUgc2NhbGVTZWxmRG93bigpIHtcbiAgICAgICAgdGhpcy5zY2FsZVNlbGYoMSAvIHRoaXMuc2NhbGVNdWx0aXBsaWVyKTtcbiAgICB9XG5cbiAgICBwcml2YXRlIHNjYWxlU2VsZihtdWx0aXBsaWVyOiBudW1iZXIpIHtcbiAgICAgICAgdGhpcy5pbnRlcmZhY2Uuc2V0U2VsZlNjYWxlKHRoaXMuaW50ZXJmYWNlLmdldFNlbGZTY2FsZSgpICogbXVsdGlwbGllcik7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBzY2FsZUVudGl0eVVwKCkge1xuICAgICAgICBjb25zdCBvYmplY3QgPSB0aGlzLnBvaW50ZWRPYmplY3Q7XG4gICAgICAgIGlmIChvYmplY3QpIHtcbiAgICAgICAgICAgIGNvbnN0IGVudGl0eSA9IGdldEVudGl0eShvYmplY3QpISE7XG4gICAgICAgICAgICB0aGlzLnNjYWxlRW50aXR5KGVudGl0eSwgdGhpcy5zY2FsZU11bHRpcGxpZXIpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBzY2FsZUVudGl0eURvd24oKSB7XG4gICAgICAgIGNvbnN0IG9iamVjdCA9IHRoaXMucG9pbnRlZE9iamVjdDtcbiAgICAgICAgaWYgKG9iamVjdCkge1xuICAgICAgICAgICAgY29uc3QgZW50aXR5ID0gZ2V0RW50aXR5KG9iamVjdCkhITtcbiAgICAgICAgICAgIHRoaXMuc2NhbGVFbnRpdHkoZW50aXR5LCAxIC8gdGhpcy5zY2FsZU11bHRpcGxpZXIpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBzY2FsZUVudGl0eShlbnRpdHk6IEVudGl0eSwgbXVsdGlwbGllcjogbnVtYmVyKSB7XG4gICAgICAgIGNvbnN0IHNwYWNlU3lzdGVtID0gdGhpcy5nZXRTeXN0ZW1Db250cm9sbGVyKFwic3BhY2VcIikgYXMgU3BhY2VTeXN0ZW1Db250cm9sbGVyO1xuICAgICAgICBjb25zdCBwb3NpdGlvbiA9ICBlbnRpdHkub2JqZWN0M0QuZ2V0V29ybGRQb3NpdGlvbihlbnRpdHkub2JqZWN0M0QucG9zaXRpb24uY2xvbmUoKSk7XG4gICAgICAgIGNvbnN0IGN1cnJlbnRPcmllbnRhdGlvbiA9IGVudGl0eS5vYmplY3QzRC5xdWF0ZXJuaW9uLmNsb25lKCk7XG4gICAgICAgIGNvbnN0IHNjYWxlID0gKGVudGl0eS5nZXRBdHRyaWJ1dGUoXCJzY2FsZVwiKSBhcyBWZWN0b3IzKS5jbG9uZSgpO1xuXG4gICAgICAgIHNjYWxlLm11bHRpcGx5U2NhbGFyKG11bHRpcGxpZXIpO1xuXG4gICAgICAgIHNwYWNlU3lzdGVtLnVwZGF0ZUVudGl0eShlbnRpdHksIHBvc2l0aW9uLCBjdXJyZW50T3JpZW50YXRpb24sIHNjYWxlKTtcbiAgICB9XG59XG5cblxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/browser/system/interface/tool/ScaleObjectTool.ts\n");

/***/ }),

/***/ "./src/browser/system/interface/tool/TeleportTool.ts":
/*!***********************************************************!*\
  !*** ./src/browser/system/interface/tool/TeleportTool.ts ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst three_1 = __webpack_require__(/*! three */ \"three\");\nconst Slot_1 = __webpack_require__(/*! ../model/Slot */ \"./src/browser/system/interface/model/Slot.ts\");\nconst Button_1 = __webpack_require__(/*! ../model/Button */ \"./src/browser/system/interface/model/Button.ts\");\nconst PointerTool_1 = __webpack_require__(/*! ./PointerTool */ \"./src/browser/system/interface/tool/PointerTool.ts\");\nconst aframe_typescript_boilerplate_1 = __webpack_require__(/*! aframe-typescript-boilerplate */ \"./node_modules/aframe-typescript-boilerplate/built/index.js\");\nclass TeleportTool extends PointerTool_1.PointerTool {\n    constructor(component, entity, data) {\n        super(component, entity, data);\n        //this.interface.setTool(ToolSlot.PRIMARY, this);\n        this.raycaster = new three_1.Raycaster();\n        this.interface.registerTool(this);\n        this.interface.slotTool(Slot_1.Slot.PRIMARY, this);\n    }\n    init() {\n        //console.log(this.componentName + \" init\");\n        super.init();\n    }\n    tick(time, timeDelta) {\n        super.tick(time, timeDelta);\n    }\n    buttonDown(device, toolSlot, button) {\n        if (!this.pressed.has(button)) {\n        }\n        super.buttonDown(device, toolSlot, button);\n    }\n    buttonUp(device, toolSlot, button) {\n        if (this.pressed.has(button)) {\n            if (button == Button_1.Button.TRIGGER) {\n                if (this.pointedPosition) {\n                    const movementTool = this.interface.getToolAtSlot(Slot_1.Slot.WALK);\n                    this.interface.interfaceEntity.object3D.position.x = this.pointedPosition.x;\n                    this.interface.interfaceEntity.object3D.position.y = this.pointedPosition.y;\n                    this.interface.interfaceEntity.object3D.position.z = this.pointedPosition.z;\n                    movementTool.setCenterOfMassFromInterfaceEntity();\n                }\n            }\n        }\n        super.buttonUp(device, toolSlot, button);\n    }\n}\nTeleportTool.DEFINITION = new aframe_typescript_boilerplate_1.ComponentControllerDefinition(\"teleport-tool\", {}, false, true, (component, entity, data) => new TeleportTool(component, entity, data));\nexports.TeleportTool = TeleportTool;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9zeXN0ZW0vaW50ZXJmYWNlL3Rvb2wvVGVsZXBvcnRUb29sLnRzP2EzYjUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwwREFBZ0M7QUFHaEMsd0dBQW1DO0FBQ25DLDhHQUF1QztBQUN2QyxxSEFBMEM7QUFFMUMsZ0tBQTRFO0FBRTVFLE1BQWEsWUFBYSxTQUFRLHlCQUFXO0lBSXpDLFlBQVksU0FBb0IsRUFBRSxNQUFjLEVBQUUsSUFBUztRQUN2RCxLQUFLLENBQUMsU0FBUyxFQUFFLE1BQU0sRUFBRSxJQUFJLENBQUMsQ0FBQztRQUMvQixpREFBaUQ7UUFDakQsSUFBSSxDQUFDLFNBQVMsR0FBRyxJQUFJLGlCQUFTLEVBQUUsQ0FBQztRQUNqQyxJQUFJLENBQUMsU0FBUyxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNsQyxJQUFJLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQyxXQUFJLENBQUMsT0FBTyxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQ2hELENBQUM7SUFFRCxJQUFJO1FBQ0EsNENBQTRDO1FBQzVDLEtBQUssQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUNqQixDQUFDO0lBRUQsSUFBSSxDQUFDLElBQVksRUFBRSxTQUFpQjtRQUNoQyxLQUFLLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxTQUFTLENBQUMsQ0FBQztJQUNoQyxDQUFDO0lBRUQsVUFBVSxDQUFDLE1BQWMsRUFBRSxRQUFjLEVBQUUsTUFBYztRQUNyRCxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLEVBQUU7U0FFOUI7UUFDRCxLQUFLLENBQUMsVUFBVSxDQUFDLE1BQU0sRUFBRSxRQUFRLEVBQUUsTUFBTSxDQUFDLENBQUM7SUFDL0MsQ0FBQztJQUVELFFBQVEsQ0FBQyxNQUFjLEVBQUUsUUFBYyxFQUFFLE1BQWM7UUFDbkQsSUFBSSxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsRUFBRTtZQUMxQixJQUFJLE1BQU0sSUFBSSxlQUFNLENBQUMsT0FBTyxFQUFFO2dCQUMxQixJQUFJLElBQUksQ0FBQyxlQUFlLEVBQUU7b0JBQ3RCLE1BQU0sWUFBWSxHQUFhLElBQUksQ0FBQyxTQUFTLENBQUMsYUFBYSxDQUFDLFdBQUksQ0FBQyxJQUFJLENBQWEsQ0FBQztvQkFDbkYsSUFBSSxDQUFDLFNBQVMsQ0FBQyxlQUFlLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLGVBQWUsQ0FBQyxDQUFDLENBQUM7b0JBQzVFLElBQUksQ0FBQyxTQUFTLENBQUMsZUFBZSxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxlQUFlLENBQUMsQ0FBQyxDQUFDO29CQUM1RSxJQUFJLENBQUMsU0FBUyxDQUFDLGVBQWUsQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsZUFBZSxDQUFDLENBQUMsQ0FBQztvQkFDNUUsWUFBWSxDQUFDLGtDQUFrQyxFQUFFLENBQUM7aUJBQ3JEO2FBQ0o7U0FDSjtRQUNELEtBQUssQ0FBQyxRQUFRLENBQUMsTUFBTSxFQUFFLFFBQVEsRUFBRSxNQUFNLENBQUMsQ0FBQztJQUM3QyxDQUFDOztBQXZDYSx1QkFBVSxHQUFHLElBQUksNkRBQTZCLENBQUMsZUFBZSxFQUFFLEVBQUUsRUFBRSxLQUFLLEVBQUUsSUFBSSxFQUFFLENBQUMsU0FBb0IsRUFBRSxNQUFjLEVBQUUsSUFBUyxFQUFFLEVBQUUsQ0FBQyxJQUFJLFlBQVksQ0FBQyxTQUFTLEVBQUUsTUFBTSxFQUFFLElBQUksQ0FBQyxDQUFDLENBQUM7QUFGbk0sb0NBMkNDIiwiZmlsZSI6Ii4vc3JjL2Jyb3dzZXIvc3lzdGVtL2ludGVyZmFjZS90b29sL1RlbGVwb3J0VG9vbC50cy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7UmF5Y2FzdGVyfSBmcm9tIFwidGhyZWVcIjtcbmltcG9ydCB7Q29tcG9uZW50LCBFbnRpdHl9IGZyb20gXCJhZnJhbWVcIjtcbmltcG9ydCB7RGV2aWNlfSBmcm9tIFwiLi4vRGV2aWNlXCI7XG5pbXBvcnQge1Nsb3R9IGZyb20gXCIuLi9tb2RlbC9TbG90XCI7XG5pbXBvcnQge0J1dHRvbn0gZnJvbSBcIi4uL21vZGVsL0J1dHRvblwiO1xuaW1wb3J0IHtQb2ludGVyVG9vbH0gZnJvbSBcIi4vUG9pbnRlclRvb2xcIjtcbmltcG9ydCB7V2Fsa1Rvb2x9IGZyb20gXCIuL1dhbGtUb29sXCI7XG5pbXBvcnQge0NvbXBvbmVudENvbnRyb2xsZXJEZWZpbml0aW9ufSBmcm9tIFwiYWZyYW1lLXR5cGVzY3JpcHQtYm9pbGVycGxhdGVcIjtcblxuZXhwb3J0IGNsYXNzIFRlbGVwb3J0VG9vbCBleHRlbmRzIFBvaW50ZXJUb29sIHtcblxuICAgIHB1YmxpYyBzdGF0aWMgREVGSU5JVElPTiA9IG5ldyBDb21wb25lbnRDb250cm9sbGVyRGVmaW5pdGlvbihcInRlbGVwb3J0LXRvb2xcIiwge30sIGZhbHNlLCB0cnVlLCAoY29tcG9uZW50OiBDb21wb25lbnQsIGVudGl0eTogRW50aXR5LCBkYXRhOiBhbnkpID0+IG5ldyBUZWxlcG9ydFRvb2woY29tcG9uZW50LCBlbnRpdHksIGRhdGEpKTtcblxuICAgIGNvbnN0cnVjdG9yKGNvbXBvbmVudDogQ29tcG9uZW50LCBlbnRpdHk6IEVudGl0eSwgZGF0YTogYW55KSB7XG4gICAgICAgIHN1cGVyKGNvbXBvbmVudCwgZW50aXR5LCBkYXRhKTtcbiAgICAgICAgLy90aGlzLmludGVyZmFjZS5zZXRUb29sKFRvb2xTbG90LlBSSU1BUlksIHRoaXMpO1xuICAgICAgICB0aGlzLnJheWNhc3RlciA9IG5ldyBSYXljYXN0ZXIoKTtcbiAgICAgICAgdGhpcy5pbnRlcmZhY2UucmVnaXN0ZXJUb29sKHRoaXMpO1xuICAgICAgICB0aGlzLmludGVyZmFjZS5zbG90VG9vbChTbG90LlBSSU1BUlksIHRoaXMpO1xuICAgIH1cblxuICAgIGluaXQoKTogdm9pZCB7XG4gICAgICAgIC8vY29uc29sZS5sb2codGhpcy5jb21wb25lbnROYW1lICsgXCIgaW5pdFwiKTtcbiAgICAgICAgc3VwZXIuaW5pdCgpO1xuICAgIH1cblxuICAgIHRpY2sodGltZTogbnVtYmVyLCB0aW1lRGVsdGE6IG51bWJlcik6IHZvaWQge1xuICAgICAgICBzdXBlci50aWNrKHRpbWUsIHRpbWVEZWx0YSk7XG4gICAgfVxuXG4gICAgYnV0dG9uRG93bihkZXZpY2U6IERldmljZSwgdG9vbFNsb3Q6IFNsb3QsIGJ1dHRvbjogQnV0dG9uKTogdm9pZCB7XG4gICAgICAgIGlmICghdGhpcy5wcmVzc2VkLmhhcyhidXR0b24pKSB7XG5cbiAgICAgICAgfVxuICAgICAgICBzdXBlci5idXR0b25Eb3duKGRldmljZSwgdG9vbFNsb3QsIGJ1dHRvbik7XG4gICAgfVxuXG4gICAgYnV0dG9uVXAoZGV2aWNlOiBEZXZpY2UsIHRvb2xTbG90OiBTbG90LCBidXR0b246IEJ1dHRvbik6IHZvaWQge1xuICAgICAgICBpZiAodGhpcy5wcmVzc2VkLmhhcyhidXR0b24pKSB7XG4gICAgICAgICAgICBpZiAoYnV0dG9uID09IEJ1dHRvbi5UUklHR0VSKSB7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMucG9pbnRlZFBvc2l0aW9uKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IG1vdmVtZW50VG9vbDogV2Fsa1Rvb2wgPSB0aGlzLmludGVyZmFjZS5nZXRUb29sQXRTbG90KFNsb3QuV0FMSykgYXMgV2Fsa1Rvb2w7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuaW50ZXJmYWNlLmludGVyZmFjZUVudGl0eS5vYmplY3QzRC5wb3NpdGlvbi54ID0gdGhpcy5wb2ludGVkUG9zaXRpb24ueDtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5pbnRlcmZhY2UuaW50ZXJmYWNlRW50aXR5Lm9iamVjdDNELnBvc2l0aW9uLnkgPSB0aGlzLnBvaW50ZWRQb3NpdGlvbi55O1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmludGVyZmFjZS5pbnRlcmZhY2VFbnRpdHkub2JqZWN0M0QucG9zaXRpb24ueiA9IHRoaXMucG9pbnRlZFBvc2l0aW9uLno7XG4gICAgICAgICAgICAgICAgICAgIG1vdmVtZW50VG9vbC5zZXRDZW50ZXJPZk1hc3NGcm9tSW50ZXJmYWNlRW50aXR5KCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHN1cGVyLmJ1dHRvblVwKGRldmljZSwgdG9vbFNsb3QsIGJ1dHRvbik7XG4gICAgfVxuXG59XG5cblxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/browser/system/interface/tool/TeleportTool.ts\n");

/***/ }),

/***/ "./src/browser/system/interface/tool/ToolSelectorTool.ts":
/*!***************************************************************!*\
  !*** ./src/browser/system/interface/tool/ToolSelectorTool.ts ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Button_1 = __webpack_require__(/*! ../model/Button */ \"./src/browser/system/interface/model/Button.ts\");\nconst Slot_1 = __webpack_require__(/*! ../model/Slot */ \"./src/browser/system/interface/model/Slot.ts\");\nconst EntityActionEventDetail_1 = __webpack_require__(/*! ../../../model/EntityActionEventDetail */ \"./src/browser/model/EntityActionEventDetail.ts\");\nconst Events_1 = __webpack_require__(/*! ../../../model/Events */ \"./src/browser/model/Events.ts\");\nconst aframe_typescript_boilerplate_1 = __webpack_require__(/*! aframe-typescript-boilerplate */ \"./node_modules/aframe-typescript-boilerplate/built/index.js\");\nconst CodeRealityComponentController_1 = __webpack_require__(/*! ../../../component/CodeRealityComponentController */ \"./src/browser/component/CodeRealityComponentController.ts\");\nclass ToolSelectorTool extends CodeRealityComponentController_1.CodeRealityComponentController {\n    constructor(component, entity, data) {\n        super(component, entity, data);\n        this.toolSymbolEntities = new Map();\n        this.vrMode = false;\n        //console.log(this.componentName + \" init: \" + JSON.stringify(this.data));\n        this.interface.slotTool(Slot_1.Slot.PRIMARY_SELECTOR, this);\n    }\n    init() {\n        this.interface.registerSlotListener(Slot_1.Slot.PRIMARY, this);\n        aframe_typescript_boilerplate_1.addEntityEventListener(this.scene, \"enter-vr\", (detail) => {\n            this.vrMode = true;\n            const toolSelectorObject = this.entity.object3D;\n            const vrModePlaceholderObject = document.getElementById(\"tool-selector-vr-placeholder\");\n            const desktopModePlaceholderObject = document.getElementById(\"tool-selector-desktop-placeholder\");\n            if (vrModePlaceholderObject && desktopModePlaceholderObject) {\n                desktopModePlaceholderObject.object3D.remove(toolSelectorObject);\n                vrModePlaceholderObject.object3D.add(toolSelectorObject);\n            }\n            else {\n                console.warn(\"tool-selector placeholders not found.\");\n            }\n        });\n        aframe_typescript_boilerplate_1.addEntityEventListener(this.scene, \"exit-vr\", (detail) => {\n            this.vrMode = false;\n            const toolSelectorObject = this.entity.object3D;\n            const vrModePlaceholderObject = document.getElementById(\"tool-selector-vr-placeholder\");\n            const desktopModePlaceholderObject = document.getElementById(\"tool-selector-desktop-placeholder\");\n            if (vrModePlaceholderObject && desktopModePlaceholderObject) {\n                vrModePlaceholderObject.object3D.remove(toolSelectorObject);\n                desktopModePlaceholderObject.object3D.add(toolSelectorObject);\n            }\n            else {\n                console.warn(\"tool-selector placeholders not found.\");\n            }\n        });\n    }\n    update(data, oldData) {\n        //console.log(this.componentName + \" update: \" + JSON.stringify(this.data));\n    }\n    remove() {\n        //console.log(this.componentName + \" remove\");\n    }\n    pause() {\n        //console.log(this.componentName + \" pause\");\n    }\n    play() {\n        //console.log(this.componentName + \" play\");\n    }\n    tick(time, timeDelta) {\n    }\n    buttonDown(device, toolSlot, button) {\n    }\n    buttonUp(device, toolSlot, button) {\n        if (button === Button_1.Button.LEFT) {\n            this.interface.slotPreviousTool(Slot_1.Slot.PRIMARY);\n        }\n        if (button === Button_1.Button.RIGHT) {\n            this.interface.slotNextTool(Slot_1.Slot.PRIMARY);\n        }\n    }\n    stickTwist(device, toolSlot, stick, x, y) {\n    }\n    onToolSlotted(slot, toolName) {\n        if (!this.toolSymbolEntities.has(toolName)) {\n            const toolSymbolEntity = aframe_typescript_boilerplate_1.createElement('<a-entity gltf-model=\"#' + toolName + '\" visible=\"false\"></a-entity>');\n            this.entity.appendChild(toolSymbolEntity);\n            this.toolSymbolEntities.set(toolName, toolSymbolEntity);\n        }\n        if (this.currentToolName) {\n            this.toolSymbolEntities.get(this.currentToolName).setAttribute(\"visible\", false);\n        }\n        this.toolSymbolEntities.get(toolName).setAttribute(\"visible\", true);\n        this.currentToolName = toolName;\n        this.interface.interfaceEntity.dispatchEvent(new CustomEvent(Events_1.Events.EVENT_ACTION, { detail: new EntityActionEventDetail_1.EntityActionEventDetail(\"change-tool\", toolName) }));\n    }\n}\nToolSelectorTool.DEFINITION = new aframe_typescript_boilerplate_1.ComponentControllerDefinition(\"tool-selector-tool\", {}, false, false, (component, entity, data) => new ToolSelectorTool(component, entity, data));\nexports.ToolSelectorTool = ToolSelectorTool;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/browser/system/interface/tool/ToolSelectorTool.ts\n");

/***/ }),

/***/ "./src/browser/system/interface/tool/WalkTool.ts":
/*!*******************************************************!*\
  !*** ./src/browser/system/interface/tool/WalkTool.ts ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst three_1 = __webpack_require__(/*! three */ \"three\");\nconst EntityStateEventDetail_1 = __webpack_require__(/*! ../../../model/EntityStateEventDetail */ \"./src/browser/model/EntityStateEventDetail.ts\");\nconst Events_1 = __webpack_require__(/*! ../../../model/Events */ \"./src/browser/model/Events.ts\");\nconst Slot_1 = __webpack_require__(/*! ../model/Slot */ \"./src/browser/system/interface/model/Slot.ts\");\nconst Button_1 = __webpack_require__(/*! ../model/Button */ \"./src/browser/system/interface/model/Button.ts\");\nconst Stick_1 = __webpack_require__(/*! ../model/Stick */ \"./src/browser/system/interface/model/Stick.ts\");\nconst raycast_1 = __webpack_require__(/*! ../../../three/raycast */ \"./src/browser/three/raycast.ts\");\nconst aframe_typescript_boilerplate_1 = __webpack_require__(/*! aframe-typescript-boilerplate */ \"./node_modules/aframe-typescript-boilerplate/built/index.js\");\nconst CodeRealityComponentController_1 = __webpack_require__(/*! ../../../component/CodeRealityComponentController */ \"./src/browser/component/CodeRealityComponentController.ts\");\nclass WalkTool extends CodeRealityComponentController_1.CodeRealityComponentController {\n    constructor(component, entity, data) {\n        super(component, entity, data);\n        this.movementSpeed = 0;\n        this.rotationSpeed = 0;\n        this.height = 0;\n        this.width = 0;\n        this.jumpStartSpeed = 0;\n        this.minY = 0;\n        this.forwardKey = Button_1.Button.UP;\n        this.backwardKey = Button_1.Button.DOWN;\n        this.leftKey = Button_1.Button.LEFT;\n        this.rightKey = Button_1.Button.RIGHT;\n        this.jumpKey = Button_1.Button.TRIGGER;\n        this.yAxisPositive = new three_1.Vector3(0, 1, 0);\n        this.yAxisNegative = new three_1.Vector3(0, -1, 0);\n        this.xzPlane = new three_1.Plane(this.yAxisPositive);\n        this.jumping = false;\n        this.airborne = false;\n        this.time = 0;\n        this.yVelocity = 0;\n        this.pressed = new Map();\n        this.centerOfMassPosition = new three_1.Vector3(0, 0, 0);\n        this.highCenterOfMassPosition = new three_1.Vector3(0, 0, 0);\n        this.lowCenterOfMassPosition = new three_1.Vector3(0, 0, 0);\n        this.forwardPositionStep = new three_1.Vector3(0, 0, 0);\n        this.rightPositionStep = new three_1.Vector3(0, 0, 0);\n        this.forwardPosition = new three_1.Vector3(0, 0, 0);\n        this.backwardPosition = new three_1.Vector3(0, 0, 0);\n        this.rightPosition = new three_1.Vector3(0, 0, 0);\n        this.leftPosition = new three_1.Vector3(0, 0, 0);\n        this.stickTranslation = new three_1.Vector3(0, 0, 0);\n        this.stickRotation = new three_1.Vector3(0, 0, 0);\n        this.cameraDirection = new three_1.Vector3(0, 0, 0);\n        this.xzCameraDirection = new three_1.Vector3(0, 0, 0);\n        this.xDirection = new three_1.Vector3(0, 0, 0);\n        this.zDirection = new three_1.Vector3(0, 0, 0);\n        this.direction = new three_1.Vector3(0, 0, 0);\n        this.interface.registerTool(this);\n        this.interface.slotTool(Slot_1.Slot.WALK, this);\n    }\n    init() {\n        //console.log(this.componentName + \" init\");\n        // Configuration\n        this.movementSpeed = this.data.movementSpeed;\n        this.rotationSpeed = this.data.rotationSpeed;\n        this.minY = this.data.minY;\n        this.height = this.data.height;\n        this.width = this.data.width;\n        this.jumpStartSpeed = this.data.jumpStartSpeed;\n        // Utility objects\n        this.raycaster = new three_1.Raycaster();\n        // Constants\n        this.yAxisPositive = new three_1.Vector3(0, 1, 0);\n        this.yAxisNegative = new three_1.Vector3(0, -1, 0);\n        this.xzPlane = new three_1.Plane(this.yAxisPositive);\n        // State booleans\n        this.jumping = false;\n        this.airborne = false;\n        // State variables\n        this.time = 0;\n        this.yVelocity = 0;\n        this.cameraDirection = new three_1.Vector3(0, 0, 0);\n        this.xzCameraDirection = new three_1.Vector3(0, 0, 0);\n        this.xDirection = new three_1.Vector3(0, 0, 0);\n        this.zDirection = new three_1.Vector3(0, 0, 0);\n    }\n    setJumping(state) {\n        if (this.jumping !== state) {\n            this.jumping = state;\n            this.entityStateChange(\"jumping\", this.jumping);\n        }\n    }\n    setAirborne(state) {\n        if (this.airborne !== state) {\n            this.airborne = state;\n            this.entityStateChange(\"airborne\", this.airborne);\n        }\n    }\n    entityStateChange(state, enabled) {\n        if (enabled) {\n            this.interface.interfaceEntity.dispatchEvent(new CustomEvent(Events_1.Events.EVENT_STATE_BEGIN, { detail: new EntityStateEventDetail_1.EntityStateEventDetail(state) }));\n        }\n        else {\n            this.interface.interfaceEntity.dispatchEvent(new CustomEvent(Events_1.Events.EVENT_STATE_END, { detail: new EntityStateEventDetail_1.EntityStateEventDetail(state) }));\n        }\n    }\n    update(data, oldData) {\n    }\n    remove() {\n    }\n    pause() {\n    }\n    play() {\n        // Reused vector variables.\n        this.setCenterOfMassFromInterfaceEntity();\n    }\n    setCenterOfMassFromInterfaceEntity() {\n        this.centerOfMassPosition = new three_1.Vector3(0, 0, 0); // Center of mass for collision checks\n        this.centerOfMassPosition.x = this.interface.interfaceEntity.object3D.position.x;\n        this.centerOfMassPosition.y = this.interface.interfaceEntity.object3D.position.y + this.interface.getSelfScale() * this.height / 2;\n        this.centerOfMassPosition.z = this.interface.interfaceEntity.object3D.position.z;\n    }\n    tick(time, timeDelta) {\n        this.time = time;\n        if (timeDelta > 40) {\n            timeDelta = 40;\n        }\n        let collidables = this.interface.getCollidables();\n        let position = this.interface.interfaceEntity.object3D.position;\n        const x = this.centerOfMassPosition.x;\n        const z = this.centerOfMassPosition.z;\n        this.updateXZ(timeDelta, collidables);\n        const blocked = this.updateY(timeDelta, collidables);\n        if (blocked) {\n            this.centerOfMassPosition.x = x;\n            this.centerOfMassPosition.z = z;\n        }\n        else {\n            position.x = this.centerOfMassPosition.x;\n            position.z = this.centerOfMassPosition.z;\n        }\n        if (this.stickRotation.x != 0 || this.stickRotation.y != 0 || this.stickRotation.z != 0) {\n            let delta = this.rotationSpeed * timeDelta / 1000.0;\n            this.interface.interfaceEntity.object3D.rotation.y -= this.stickRotation.y * delta;\n        }\n    }\n    buttonDown(device, toolSlot, button) {\n        if (!this.pressed.has(button)) {\n            if (button == this.backwardKey) {\n                this.entityStateChange(\"backward\", true);\n                this.stickTranslation.x = -1;\n            }\n            if (button == this.forwardKey) {\n                this.entityStateChange(\"forward\", true);\n                this.stickTranslation.x = 1;\n            }\n            if (button == this.leftKey) {\n                this.entityStateChange(\"left\", true);\n                this.stickTranslation.z = -1;\n            }\n            if (button == this.rightKey) {\n                this.entityStateChange(\"right\", true);\n                this.stickTranslation.z = 1;\n            }\n        }\n        this.pressed.set(button, this.time);\n    }\n    buttonUp(device, toolSlot, button) {\n        if (this.pressed.has(button)) {\n            if (button == this.backwardKey) {\n                this.entityStateChange(\"backward\", false);\n                this.stickTranslation.x = 0;\n            }\n            if (button == this.forwardKey) {\n                this.entityStateChange(\"forward\", false);\n                this.stickTranslation.x = 0;\n            }\n            if (button == this.leftKey) {\n                this.entityStateChange(\"left\", false);\n                this.stickTranslation.z = 0;\n            }\n            if (button == this.rightKey) {\n                this.entityStateChange(\"right\", false);\n                this.stickTranslation.z = 0;\n            }\n            this.pressed.delete(button);\n        }\n    }\n    stickTwist(device, toolSlot, stick, x, y) {\n        if (stick == Stick_1.Stick.PRIMARY) {\n            this.stickTranslation.x = 1.5 * x;\n            this.stickTranslation.z = 1.5 * y;\n        }\n        if (stick == Stick_1.Stick.SECONDARY) {\n            this.stickRotation.x = 1.0 * x;\n            this.stickRotation.y = 1.0 * y;\n        }\n    }\n    updateXZ(timeDelta, collidables) {\n        this.computeXZDirectionFromCamera();\n        if (this.stickTranslation.x != 0 || this.stickTranslation.z != 0) {\n            let delta = this.interface.getSelfScale() * this.movementSpeed * timeDelta / 1000.0;\n            this.xDirection.copy(this.xzCameraDirection);\n            this.zDirection.copy(this.xzCameraDirection);\n            this.zDirection.cross(this.yAxisPositive);\n            this.xDirection.multiplyScalar(this.stickTranslation.x * delta);\n            this.zDirection.multiplyScalar(this.stickTranslation.z * delta);\n            this.direction.copy(this.xDirection);\n            this.direction.add(this.zDirection);\n            if (!this.testCollision(this.direction, collidables)) {\n                this.centerOfMassPosition.x += this.direction.x;\n                this.centerOfMassPosition.z += this.direction.z;\n            }\n        }\n    }\n    updateY(timeDelta, collidables) {\n        let position = this.interface.interfaceEntity.object3D.position;\n        //this.computeXZDirectionFromCamera();\n        this.forwardPositionStep.copy(this.xzCameraDirection);\n        this.forwardPositionStep.multiplyScalar(0.25 * this.width * this.interface.getSelfScale());\n        this.rightPositionStep.copy(this.xzCameraDirection);\n        this.rightPositionStep.cross(this.yAxisPositive);\n        this.rightPositionStep.multiplyScalar(0.25 * this.width * this.interface.getSelfScale());\n        this.forwardPosition.copy(this.centerOfMassPosition).add(this.forwardPositionStep);\n        this.backwardPosition.copy(this.centerOfMassPosition).add(this.forwardPositionStep.multiplyScalar(-1));\n        this.rightPosition.copy(this.centerOfMassPosition).add(this.rightPositionStep);\n        this.leftPosition.copy(this.centerOfMassPosition).add(this.rightPositionStep.multiplyScalar(-1));\n        const distanceToNearestBelow = this.findDistanceToNearestFromPositions([this.centerOfMassPosition,\n            this.forwardPosition,\n            this.backwardPosition,\n            this.rightPosition,\n            this.leftPosition\n        ], this.yAxisNegative, collidables);\n        //console.log(distanceToNearestBelow);\n        if (this.pressed.has(this.jumpKey) && !this.jumping && !this.airborne) {\n            this.setJumping(true);\n            this.yVelocity = this.interface.getSelfScale() * this.jumpStartSpeed;\n        }\n        let freeDropDelta = this.yVelocity * timeDelta / 1000.0;\n        let delta;\n        if (distanceToNearestBelow && !this.jumping) {\n            let distanceFromBottom = distanceToNearestBelow - this.interface.getSelfScale() * this.height / 2;\n            if (distanceFromBottom < 0 && -distanceFromBottom > this.height * this.interface.getSelfScale() * 0.25) {\n                // Too high obstacle to climb (greater than 0.25 height)\n                return true;\n            }\n            if (Math.abs(freeDropDelta) > Math.abs(distanceFromBottom) || Math.abs(distanceFromBottom) < 0.1 * this.interface.getSelfScale()) {\n                delta = -distanceFromBottom;\n                this.setAirborne(false);\n            }\n            else {\n                if (distanceFromBottom && distanceFromBottom < 0) {\n                    delta = -freeDropDelta;\n                }\n                else {\n                    delta = freeDropDelta;\n                }\n                this.setAirborne(true);\n            }\n        }\n        else {\n            delta = freeDropDelta;\n            this.setAirborne(true);\n        }\n        if (this.airborne) {\n            this.yVelocity -= this.interface.getSelfScale() * 9.81 * timeDelta / 1000.0;\n        }\n        else {\n            this.yVelocity = 0;\n        }\n        if (this.yVelocity < 0) {\n            this.setJumping(false);\n        }\n        this.centerOfMassPosition.y = this.centerOfMassPosition.y + delta;\n        if (this.centerOfMassPosition.y - this.interface.getSelfScale() * this.height / 2 < this.minY) {\n            this.centerOfMassPosition.y = this.minY + this.interface.getSelfScale() * this.height / 2;\n        }\n        position.y = this.centerOfMassPosition.y - this.interface.getSelfScale() * this.height / 2;\n        return false;\n    }\n    computeXZDirectionFromCamera() {\n        this.interface.cameraEntity.object3D.getWorldDirection(this.cameraDirection);\n        this.cameraDirection.multiplyScalar(-1);\n        this.xzPlane.projectPoint(this.cameraDirection, this.xzCameraDirection);\n        this.xzCameraDirection.normalize();\n    }\n    findDistanceToNearestFromPositions(positions, rayDirection, objects) {\n        const distances = positions.map(position => {\n            return this.findDistanceToNearestFromPosition(position, rayDirection, objects);\n        }).filter(distance => distance != null);\n        distances.sort(function sortNumber(a, b) {\n            return a - b;\n        });\n        if (distances.length > 0) {\n            return distances[0];\n        }\n        else {\n            return undefined;\n        }\n    }\n    findDistanceToNearestFromPosition(position, rayDirection, objects) {\n        this.raycaster.near = 0;\n        this.raycaster.far = this.height * this.interface.getSelfScale();\n        this.raycaster.set(position, rayDirection);\n        const caster = this.raycaster;\n        const intersects = raycast_1.raycast(objects, caster);\n        if (intersects.length > 0) {\n            return intersects[0].distance;\n        }\n        else {\n            return null;\n        }\n    }\n    testCollision(direction, objects) {\n        this.highCenterOfMassPosition.copy(this.centerOfMassPosition);\n        this.highCenterOfMassPosition.y += this.height * this.interface.getSelfScale() / 2;\n        this.lowCenterOfMassPosition.copy(this.centerOfMassPosition);\n        this.lowCenterOfMassPosition.y -= this.height * this.interface.getSelfScale() / 4;\n        let distanceToNearestAhead = this.findDistanceToNearestFromPositions([this.centerOfMassPosition,\n            this.highCenterOfMassPosition,\n            this.centerOfMassPosition,\n            this.lowCenterOfMassPosition\n        ], direction, objects);\n        let collisionAhead = distanceToNearestAhead && distanceToNearestAhead < this.interface.getSelfScale() * this.width / 2;\n        return collisionAhead;\n    }\n}\nWalkTool.DEFINITION = new aframe_typescript_boilerplate_1.ComponentControllerDefinition(\"walk-tool\", {\n    movementSpeed: { type: 'number', default: 2 },\n    rotationSpeed: { type: 'number', default: 1 },\n    height: { type: 'number', default: 2 },\n    width: { type: 'number', default: 0.5 },\n    jumpStartSpeed: { type: 'number', default: 5.0 },\n    minY: { type: 'number', default: -1 }\n}, false, true, (component, entity, data) => new WalkTool(component, entity, data));\nexports.WalkTool = WalkTool;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/browser/system/interface/tool/WalkTool.ts\n");

/***/ }),

/***/ "./src/browser/system/loader/LoaderSystemController.ts":
/*!*************************************************************!*\
  !*** ./src/browser/system/loader/LoaderSystemController.ts ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst three_1 = __webpack_require__(/*! three */ \"three\");\nconst aframe_typescript_boilerplate_1 = __webpack_require__(/*! aframe-typescript-boilerplate */ \"./node_modules/aframe-typescript-boilerplate/built/index.js\");\nclass LoaderSystemController extends aframe_typescript_boilerplate_1.AbstractSystemController {\n    constructor(system, scene, data) {\n        super(system, scene, data);\n        this.loadingCounter = 0;\n        this.added = false;\n        this.loaderGeometry = new three_1.SphereGeometry(1, 36, 18, 0, 2 * Math.PI, 0, Math.PI);\n        this.loaderMaterial = new three_1.MeshBasicMaterial({ color: 'white', side: three_1.DoubleSide, depthTest: false, transparent: true });\n        this.loaderObject = new three_1.Mesh(this.loaderGeometry, this.loaderMaterial);\n        this.sphereGeometry = new three_1.SphereGeometry(0.01, 36, 18, 0, 2 * Math.PI, 0, Math.PI);\n        this.sphereMaterial = new three_1.MeshBasicMaterial({ color: 'gray', depthTest: false, transparent: true });\n        this.sphereMesh1 = new three_1.Mesh(this.sphereGeometry, this.sphereMaterial);\n        this.sphereMesh2 = this.sphereMesh1.clone();\n        this.sphereMesh3 = this.sphereMesh1.clone();\n        this.progressTime = 0;\n        this.sceneEl = scene;\n        this.loaderObject.renderOrder = 1;\n        this.loaderObject.position.set(0, 0, 0);\n        this.sphereMesh1.position.set(-0.05, 0, -0.3);\n        this.sphereMesh1.renderOrder = 2;\n        this.sphereMesh2.position.set(0, 0, -0.3);\n        this.sphereMesh2.renderOrder = 2;\n        this.sphereMesh3.position.set(0.05, 0, -0.3);\n        this.sphereMesh3.renderOrder = 2;\n        this.loaderObject.add(this.sphereMesh1);\n        this.loaderObject.add(this.sphereMesh2);\n        this.loaderObject.add(this.sphereMesh3);\n    }\n    init() {\n    }\n    pause() {\n    }\n    play() {\n    }\n    tick(time, timeDelta) {\n        this.progressTime += timeDelta < 25 ? timeDelta : 25;\n        if (this.loadingCounter > 0) {\n            if (!this.added) {\n                this.added = true;\n                this.sceneEl.camera.add(this.loaderObject);\n            }\n            this.sphereMesh1.visible = Math.floor(this.progressTime / 150) % 3 == 0;\n            this.sphereMesh2.visible = Math.floor(this.progressTime / 150) % 3 == 1;\n            this.sphereMesh3.visible = Math.floor(this.progressTime / 150) % 3 == 2;\n        }\n        else {\n            if (this.added) {\n                this.added = false;\n                this.sceneEl.camera.remove(this.loaderObject);\n            }\n        }\n    }\n    increaseLoadingCounter() {\n        this.loadingCounter++;\n        console.log(\"loading counter increase: \" + this.loadingCounter);\n    }\n    ;\n    decreaseLoadingCounter() {\n        if (this.loadingCounter == 0) {\n            console.warn(\"Notify loaded attempting to drop loading counter lower than zero.\");\n        }\n        this.loadingCounter--;\n        console.log(\"loading counter decrease: \" + this.loadingCounter);\n    }\n    ;\n}\nLoaderSystemController.DEFINITION = new aframe_typescript_boilerplate_1.SystemControllerDefinition(\"loader-system\", {}, (system, scene, data) => new LoaderSystemController(system, scene, data));\nexports.LoaderSystemController = LoaderSystemController;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/browser/system/loader/LoaderSystemController.ts\n");

/***/ }),

/***/ "./src/browser/system/merge/MergeController.ts":
/*!*****************************************************!*\
  !*** ./src/browser/system/merge/MergeController.ts ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst aframe_typescript_boilerplate_1 = __webpack_require__(/*! aframe-typescript-boilerplate */ \"./node_modules/aframe-typescript-boilerplate/built/index.js\");\nclass MergeController extends aframe_typescript_boilerplate_1.AbstractComponentController {\n    constructor(component, entity, data) {\n        super(component, entity, data);\n        this.mergeSystem = aframe_typescript_boilerplate_1.getSystemController(this.entity.sceneEl, \"merge\");\n    }\n    init() {\n        //console.log(this.componentName + \" init: \" + JSON.stringify(this.data));\n        this.mergeSystem.addMerge(this.entity);\n    }\n    update(data, oldData) {\n        //console.log(this.componentName + \" update: \" + JSON.stringify(this.data));\n    }\n    remove() {\n        this.mergeSystem.removeMerge(this.entity);\n        //console.log(this.componentName + \" remove\");\n    }\n    pause() {\n        //console.log(this.componentName + \" pause\");\n    }\n    play() {\n        //console.log(this.componentName + \" play\");\n    }\n    tick(time, timeDelta) {\n    }\n}\nMergeController.DEFINITION = new aframe_typescript_boilerplate_1.ComponentControllerDefinition(\"merge\", {}, false, false, (component, entity, data) => new MergeController(component, entity, data));\nexports.MergeController = MergeController;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9zeXN0ZW0vbWVyZ2UvTWVyZ2VDb250cm9sbGVyLnRzPzQwMWMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFFQSxnS0FJdUM7QUFFdkMsTUFBYSxlQUFnQixTQUFRLDJEQUEyQjtJQU01RCxZQUFZLFNBQW9CLEVBQUUsTUFBYyxFQUFFLElBQVM7UUFDdkQsS0FBSyxDQUFDLFNBQVMsRUFBRSxNQUFNLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFFL0IsSUFBSSxDQUFDLFdBQVcsR0FBRyxtREFBbUIsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLE9BQVMsRUFBRSxPQUFPLENBQUMsQ0FBQztJQUMzRSxDQUFDO0lBRUQsSUFBSTtRQUNBLDBFQUEwRTtRQUMxRSxJQUFJLENBQUMsV0FBVyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDM0MsQ0FBQztJQUVELE1BQU0sQ0FBQyxJQUFTLEVBQUUsT0FBWTtRQUMxQiw0RUFBNEU7SUFDaEYsQ0FBQztJQUVELE1BQU07UUFDRixJQUFJLENBQUMsV0FBVyxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDMUMsOENBQThDO0lBQ2xELENBQUM7SUFFRCxLQUFLO1FBQ0QsNkNBQTZDO0lBQ2pELENBQUM7SUFFRCxJQUFJO1FBQ0EsNENBQTRDO0lBQ2hELENBQUM7SUFFRCxJQUFJLENBQUMsSUFBWSxFQUFFLFNBQWlCO0lBQ3BDLENBQUM7O0FBL0JhLDBCQUFVLEdBQUcsSUFBSSw2REFBNkIsQ0FBQyxPQUFPLEVBQUUsRUFBRSxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsQ0FBQyxTQUFvQixFQUFFLE1BQWMsRUFBRSxJQUFTLEVBQUUsRUFBRSxDQUFDLElBQUksZUFBZSxDQUFDLFNBQVMsRUFBRSxNQUFNLEVBQUUsSUFBSSxDQUFDLENBQUMsQ0FBQztBQUovTCwwQ0FxQ0MiLCJmaWxlIjoiLi9zcmMvYnJvd3Nlci9zeXN0ZW0vbWVyZ2UvTWVyZ2VDb250cm9sbGVyLnRzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDb21wb25lbnQsIEVudGl0eX0gZnJvbSBcImFmcmFtZVwiO1xuaW1wb3J0IHtNZXJnZVN5c3RlbUNvbnRyb2xsZXJ9IGZyb20gXCIuL01lcmdlU3lzdGVtQ29udHJvbGxlclwiO1xuaW1wb3J0IHtcbiAgICBBYnN0cmFjdENvbXBvbmVudENvbnRyb2xsZXIsXG4gICAgQ29tcG9uZW50Q29udHJvbGxlckRlZmluaXRpb24sXG4gICAgZ2V0U3lzdGVtQ29udHJvbGxlclxufSBmcm9tIFwiYWZyYW1lLXR5cGVzY3JpcHQtYm9pbGVycGxhdGVcIjtcblxuZXhwb3J0IGNsYXNzIE1lcmdlQ29udHJvbGxlciBleHRlbmRzIEFic3RyYWN0Q29tcG9uZW50Q29udHJvbGxlciB7XG5cbiAgICByZWFkb25seSBtZXJnZVN5c3RlbTogTWVyZ2VTeXN0ZW1Db250cm9sbGVyO1xuXG4gICAgcHVibGljIHN0YXRpYyBERUZJTklUSU9OID0gbmV3IENvbXBvbmVudENvbnRyb2xsZXJEZWZpbml0aW9uKFwibWVyZ2VcIiwge30sIGZhbHNlLCBmYWxzZSwgKGNvbXBvbmVudDogQ29tcG9uZW50LCBlbnRpdHk6IEVudGl0eSwgZGF0YTogYW55KSA9PiBuZXcgTWVyZ2VDb250cm9sbGVyKGNvbXBvbmVudCwgZW50aXR5LCBkYXRhKSk7XG5cbiAgICBjb25zdHJ1Y3Rvcihjb21wb25lbnQ6IENvbXBvbmVudCwgZW50aXR5OiBFbnRpdHksIGRhdGE6IGFueSkge1xuICAgICAgICBzdXBlcihjb21wb25lbnQsIGVudGl0eSwgZGF0YSk7XG5cbiAgICAgICAgdGhpcy5tZXJnZVN5c3RlbSA9IGdldFN5c3RlbUNvbnRyb2xsZXIodGhpcy5lbnRpdHkuc2NlbmVFbCEhLCBcIm1lcmdlXCIpO1xuICAgIH1cblxuICAgIGluaXQoKTogdm9pZCB7XG4gICAgICAgIC8vY29uc29sZS5sb2codGhpcy5jb21wb25lbnROYW1lICsgXCIgaW5pdDogXCIgKyBKU09OLnN0cmluZ2lmeSh0aGlzLmRhdGEpKTtcbiAgICAgICAgdGhpcy5tZXJnZVN5c3RlbS5hZGRNZXJnZSh0aGlzLmVudGl0eSk7XG4gICAgfVxuXG4gICAgdXBkYXRlKGRhdGE6IGFueSwgb2xkRGF0YTogYW55KTogdm9pZCB7XG4gICAgICAgIC8vY29uc29sZS5sb2codGhpcy5jb21wb25lbnROYW1lICsgXCIgdXBkYXRlOiBcIiArIEpTT04uc3RyaW5naWZ5KHRoaXMuZGF0YSkpO1xuICAgIH1cblxuICAgIHJlbW92ZSgpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5tZXJnZVN5c3RlbS5yZW1vdmVNZXJnZSh0aGlzLmVudGl0eSk7XG4gICAgICAgIC8vY29uc29sZS5sb2codGhpcy5jb21wb25lbnROYW1lICsgXCIgcmVtb3ZlXCIpO1xuICAgIH1cblxuICAgIHBhdXNlKCk6IHZvaWQge1xuICAgICAgICAvL2NvbnNvbGUubG9nKHRoaXMuY29tcG9uZW50TmFtZSArIFwiIHBhdXNlXCIpO1xuICAgIH1cblxuICAgIHBsYXkoKTogdm9pZCB7XG4gICAgICAgIC8vY29uc29sZS5sb2codGhpcy5jb21wb25lbnROYW1lICsgXCIgcGxheVwiKTtcbiAgICB9XG5cbiAgICB0aWNrKHRpbWU6IG51bWJlciwgdGltZURlbHRhOiBudW1iZXIpOiB2b2lkIHtcbiAgICB9XG5cbn1cblxuXG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/browser/system/merge/MergeController.ts\n");

/***/ }),

/***/ "./src/browser/system/merge/MergeData.ts":
/*!***********************************************!*\
  !*** ./src/browser/system/merge/MergeData.ts ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst merge_util_1 = __webpack_require__(/*! ../../three/merge_util */ \"./src/browser/three/merge_util.ts\");\nclass MergeData {\n    constructor(entity) {\n        this.childEntities = new Set();\n        this.loadingChildEntities = new Set();\n        this.mergingChildEntities = new Set();\n        this.removingChildEntities = new Set();\n        this.updatingChildEntities = new Set();\n        this.objectMerge = new merge_util_1.ObjectMerge();\n        this.lastModificationTimeMillis = 1;\n        this.lastMergeTimeMillis = 0;\n        this.entity = entity;\n    }\n}\nexports.MergeData = MergeData;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9zeXN0ZW0vbWVyZ2UvTWVyZ2VEYXRhLnRzPzZmNTQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFFQSw0R0FBbUQ7QUFFbkQsTUFBYSxTQUFTO0lBaUJsQixZQUFZLE1BQWM7UUFiMUIsa0JBQWEsR0FBZ0IsSUFBSSxHQUFHLEVBQVUsQ0FBQztRQUMvQyx5QkFBb0IsR0FBZ0IsSUFBSSxHQUFHLEVBQVUsQ0FBQztRQUN0RCx5QkFBb0IsR0FBZ0IsSUFBSSxHQUFHLEVBQVUsQ0FBQztRQUN0RCwwQkFBcUIsR0FBZ0IsSUFBSSxHQUFHLEVBQVUsQ0FBQztRQUN2RCwwQkFBcUIsR0FBZ0IsSUFBSSxHQUFHLEVBQVUsQ0FBQztRQUl2RCxnQkFBVyxHQUFnQixJQUFJLHdCQUFXLEVBQUUsQ0FBQztRQUU3QywrQkFBMEIsR0FBRyxDQUFDLENBQUM7UUFDL0Isd0JBQW1CLEdBQUcsQ0FBQyxDQUFDO1FBR3BCLElBQUksQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDO0lBQ3pCLENBQUM7Q0FFSjtBQXJCRCw4QkFxQkMiLCJmaWxlIjoiLi9zcmMvYnJvd3Nlci9zeXN0ZW0vbWVyZ2UvTWVyZ2VEYXRhLnRzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtFbnRpdHl9IGZyb20gXCJhZnJhbWVcIjtcbmltcG9ydCB7R3JvdXAsIE9iamVjdDNEfSBmcm9tIFwidGhyZWVcIjtcbmltcG9ydCB7T2JqZWN0TWVyZ2V9IGZyb20gXCIuLi8uLi90aHJlZS9tZXJnZV91dGlsXCI7XG5cbmV4cG9ydCBjbGFzcyBNZXJnZURhdGEge1xuXG4gICAgZW50aXR5OiBFbnRpdHk7XG5cbiAgICBjaGlsZEVudGl0aWVzOiBTZXQ8RW50aXR5PiA9IG5ldyBTZXQ8RW50aXR5PigpO1xuICAgIGxvYWRpbmdDaGlsZEVudGl0aWVzOiBTZXQ8RW50aXR5PiA9IG5ldyBTZXQ8RW50aXR5PigpO1xuICAgIG1lcmdpbmdDaGlsZEVudGl0aWVzOiBTZXQ8RW50aXR5PiA9IG5ldyBTZXQ8RW50aXR5PigpO1xuICAgIHJlbW92aW5nQ2hpbGRFbnRpdGllczogU2V0PEVudGl0eT4gPSBuZXcgU2V0PEVudGl0eT4oKTtcbiAgICB1cGRhdGluZ0NoaWxkRW50aXRpZXM6IFNldDxFbnRpdHk+ID0gbmV3IFNldDxFbnRpdHk+KCk7XG5cbiAgICBncm91cDogR3JvdXAgfCB1bmRlZmluZWQ7XG5cbiAgICBvYmplY3RNZXJnZTogT2JqZWN0TWVyZ2UgPSBuZXcgT2JqZWN0TWVyZ2UoKTtcblxuICAgIGxhc3RNb2RpZmljYXRpb25UaW1lTWlsbGlzID0gMTtcbiAgICBsYXN0TWVyZ2VUaW1lTWlsbGlzID0gMDtcblxuICAgIGNvbnN0cnVjdG9yKGVudGl0eTogRW50aXR5KSB7XG4gICAgICAgIHRoaXMuZW50aXR5ID0gZW50aXR5O1xuICAgIH1cblxufSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/browser/system/merge/MergeData.ts\n");

/***/ }),

/***/ "./src/browser/system/merge/MergeSystemController.ts":
/*!***********************************************************!*\
  !*** ./src/browser/system/merge/MergeSystemController.ts ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst MergeData_1 = __webpack_require__(/*! ./MergeData */ \"./src/browser/system/merge/MergeData.ts\");\nconst three_1 = __webpack_require__(/*! three */ \"three\");\nconst merge_util_1 = __webpack_require__(/*! ../../three/merge_util */ \"./src/browser/three/merge_util.ts\");\nconst aframe_typescript_boilerplate_1 = __webpack_require__(/*! aframe-typescript-boilerplate */ \"./node_modules/aframe-typescript-boilerplate/built/index.js\");\nclass MergeSystemController extends aframe_typescript_boilerplate_1.AbstractSystemController {\n    constructor(system, scene, data) {\n        super(system, scene, data);\n        this.merges = new Map();\n        this.startTime = 0;\n        this.loadingRegistered = false;\n        this.merging = false;\n        this.niceTimeoutCounter = 0;\n    }\n    init() {\n        //        (this.getSystemController(\"loader-system\") as LoaderSystemController).increaseLoadingCounter();\n        this.startTime = new Date().getTime();\n    }\n    pause() {\n    }\n    play() {\n    }\n    tick(time, timeDelta) {\n        /*const timeMillis = new Date().getTime();\n        for (const merge of this.merges.values()) {\n            if (merge.lastMergeTimeMillis != 0 && merge.lastModificationTimeMillis > merge.lastMergeTimeMillis && timeMillis - merge.lastModificationTimeMillis > 60000) {\n                this.merge(merge);\n            }\n        }\n        */\n        let loading = new Date().getTime() - this.startTime < 3000;\n        for (const merge of this.merges.values()) {\n            if (this.merging || merge.loadingChildEntities.size > 3 || merge.mergingChildEntities.size > 3) {\n                loading = true;\n            }\n        }\n        if (loading) {\n            if (!this.loadingRegistered) {\n                this.loadingRegistered = true;\n                this.getSystemController(\"loader-system\").increaseLoadingCounter();\n                console.log(\"merge system increases loading counter.\");\n            }\n        }\n        else {\n            if (this.loadingRegistered) {\n                this.getSystemController(\"loader-system\").decreaseLoadingCounter();\n                this.loadingRegistered = false;\n                console.log(\"merge system decreases loading counter.\");\n            }\n        }\n    }\n    addMerge(mergeEntity) {\n        //console.log(\"merge added.\");\n        if (!this.merges.has(mergeEntity)) {\n            this.merges.set(mergeEntity, new MergeData_1.MergeData(mergeEntity));\n        }\n    }\n    addLoadingMergeChild(mergeEntity, mergeChildEntity) {\n        ////console.log(\"merge child loading...\");\n        if (!this.merges.has(mergeEntity)) {\n            this.merges.set(mergeEntity, new MergeData_1.MergeData(mergeEntity));\n        }\n        const merge = this.merges.get(mergeEntity);\n        merge.lastModificationTimeMillis = new Date().getTime();\n        merge.childEntities.add(mergeChildEntity);\n        merge.loadingChildEntities.add(mergeChildEntity);\n    }\n    setMergeChildLoaded(mergeEntity, mergeChildEntity) {\n        ////console.log(\"merge child loaded.\");\n        const merge = this.merges.get(mergeEntity);\n        if (!merge) {\n            return;\n        }\n        merge.loadingChildEntities.delete(mergeChildEntity);\n        merge.mergingChildEntities.add(mergeChildEntity);\n        if (merge.loadingChildEntities.size > 0) {\n            ////console.log(\"merge child entities still loading: \" + merge.loadingChildEntities.size);\n            return;\n        }\n        //console.log(\"merge child entities loaded.\");\n        //if (merge.lastMergeTimeMillis == 0) {\n        this.merge(merge);\n        //}\n    }\n    merge(merge) {\n        if (this.merging) {\n            return;\n        }\n        this.merging = true;\n        //console.log(\"merging...\");\n        const startTimeMillis = new Date().getTime();\n        // Collect objects to merge.\n        this.collectObjectsToMerge(merge).then((objectsToMerge) => {\n            merge.mergingChildEntities.clear();\n            //console.log(\"merging object...\");\n            merge_util_1.mergeObject3Ds(merge.objectMerge, objectsToMerge).then(() => {\n                if (!merge.group) {\n                    merge.group = merge.objectMerge.group;\n                    merge.entity.object3D.add(merge.group);\n                }\n                merge.lastMergeTimeMillis = new Date().getTime();\n                //console.log(\"merge done: \" + (new Date().getTime() - startTimeMillis) + \" ms.\");\n                this.merging = false;\n                //                (this.getSystemController(\"loader-system\") as LoaderSystemController).decreaseLoadingCounter();\n            });\n        });\n    }\n    collectObjectsToMerge(merge) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const objectsToMerge = new Array();\n            //console.log(\"collecting objects to merge from child entities: \" + merge.mergingChildEntities.size);\n            for (const entity of merge.mergingChildEntities) {\n                const clone = yield this.cloneObjectToMergeWithWait(entity, merge);\n                objectsToMerge.push(clone);\n            }\n            return objectsToMerge;\n        });\n    }\n    cloneObjectToMergeWithWait(entity, merge) {\n        return new Promise((resolve, reject) => {\n            const originalObject = entity.object3D;\n            this.allocateMergeObjectIndex(merge.objectMerge, originalObject);\n            originalObject.visible = false;\n            const clone = this.cloneAndSwitchToRegionCoordinates(originalObject, merge);\n            this.niceTimeoutCounter++;\n            if (this.niceTimeoutCounter % 25 == 0) {\n                setTimeout(() => {\n                    resolve(clone);\n                }, 1);\n            }\n            else {\n                resolve(clone);\n            }\n        });\n    }\n    allocateMergeObjectIndex(objectMerge, object) {\n        object.userData.mergeObjectIndex = objectMerge.objectOffset;\n        objectMerge.objectOffset++;\n        if (object.children) {\n            for (const child of object.children) {\n                this.allocateMergeObjectIndex(objectMerge, child);\n            }\n        }\n    }\n    remove(merge) {\n        const startTimeMillis = new Date().getTime();\n        merge.lastMergeTimeMillis = startTimeMillis;\n        //console.log(\"removing from merge...\");\n        //console.log(\"child entities to remove size: \" + merge.removingChildEntities.size);\n        // Collect objects to merge.\n        const objectsToRemove = new Array();\n        for (const entity of merge.removingChildEntities) {\n            const originalObject = entity.object3D;\n            originalObject.visible = true;\n            objectsToRemove.push(originalObject);\n        }\n        merge.removingChildEntities.clear();\n        merge_util_1.clearObject3Ds(merge.objectMerge, objectsToRemove).then(() => {\n            //console.log(\"removing from merge done: \" + (new Date().getTime() - startTimeMillis) + \" ms.\");\n        });\n    }\n    update(merge) {\n        const startTimeMillis = new Date().getTime();\n        merge.lastMergeTimeMillis = startTimeMillis;\n        //console.log(\"updating merge...\");\n        //console.log(\"child entities to update size: \" + merge.updatingChildEntities.size);\n        // Collect objects to merge.\n        const objectsToUpdate = new Array();\n        for (const entity of merge.updatingChildEntities) {\n            const originalObject = entity.object3D;\n            const objectToMerge = this.cloneAndSwitchToRegionCoordinates(originalObject, merge);\n            objectsToUpdate.push(objectToMerge);\n        }\n        merge.updatingChildEntities.clear();\n        merge_util_1.updateObject3Ds(merge.objectMerge, objectsToUpdate).then(() => {\n            //console.log(\"updating merge done: \" + (new Date().getTime() - startTimeMillis) + \" ms.\");\n        });\n    }\n    cloneAndSwitchToRegionCoordinates(object, merge) {\n        // Clone object to merge and setup coordinates.\n        //const objectToMerge = originalObject;\n        const clone = merge_util_1.cloneObject3D(object);\n        // Transfer to world coordinates as clone does not have parent\n        // get world position\n        let position = new three_1.Vector3();\n        object.updateMatrixWorld(true);\n        position.setFromMatrixPosition(object.matrixWorld);\n        // convert to merge entity world local coordinates\n        merge.entity.object3D.updateMatrixWorld(true);\n        position = merge.entity.object3D.worldToLocal(position);\n        clone.position.x = position.x;\n        clone.position.y = position.y;\n        clone.position.z = position.z;\n        return clone;\n    }\n    removeMergeChild(mergeEntity, mergeChildEntity) {\n        ////console.log(\"merge child remove.\");\n        if (this.merges.has(mergeEntity)) {\n            const merge = this.merges.get(mergeEntity);\n            merge.childEntities.delete(mergeChildEntity);\n            merge.loadingChildEntities.delete(mergeChildEntity);\n            merge.removingChildEntities.add(mergeChildEntity);\n            this.remove(merge);\n        }\n    }\n    updateMergeChild(mergeEntity, mergeChildEntity) {\n        ////console.log(\"merge child remove.\");\n        if (this.merges.has(mergeEntity)) {\n            const merge = this.merges.get(mergeEntity);\n            merge.updatingChildEntities.add(mergeChildEntity);\n            this.update(merge);\n        }\n    }\n    removeMerge(mergeEntity) {\n        //console.log(\"merge remove.\");\n        const merge = this.merges.get(mergeEntity);\n        if (merge) {\n            this.merges.delete(mergeEntity);\n            // Remove old merge object.\n            if (merge.group) {\n                merge.entity.object3D.remove(merge.group);\n            }\n        }\n    }\n}\nMergeSystemController.DEFINITION = new aframe_typescript_boilerplate_1.SystemControllerDefinition(\"merge\", {}, (system, scene, data) => new MergeSystemController(system, scene, data));\nexports.MergeSystemController = MergeSystemController;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/browser/system/merge/MergeSystemController.ts\n");

/***/ }),

/***/ "./src/browser/system/merge/ModelController.ts":
/*!*****************************************************!*\
  !*** ./src/browser/system/merge/ModelController.ts ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst gltf_load_1 = __webpack_require__(/*! ../../three/gltf_load */ \"./src/browser/three/gltf_load.ts\");\nconst aframe_typescript_boilerplate_1 = __webpack_require__(/*! aframe-typescript-boilerplate */ \"./node_modules/aframe-typescript-boilerplate/built/index.js\");\nclass ModelController extends aframe_typescript_boilerplate_1.AbstractComponentController {\n    constructor(component, entity, data) {\n        super(component, entity, data);\n        this.mergeSystem = aframe_typescript_boilerplate_1.getSystemController(this.entity.sceneEl, \"merge\");\n    }\n    init() {\n        //console.log(this.componentName + \" init: \" + JSON.stringify(this.data));\n        this.merge = this.recursiveFindMergeParent(this.entity);\n        if (this.merge) {\n            this.mergeSystem.addLoadingMergeChild(this.merge, this.entity);\n        }\n    }\n    update(data, oldData) {\n        //console.log(this.componentName + \" update: \" + JSON.stringify(this.data));\n        gltf_load_1.setEntityGltfModel(this.entity, data).then(() => {\n            //console.log(\"Static model loaded: \" + data);\n            if (this.merge) {\n                this.entity.object3D.visible = false;\n                this.mergeSystem.setMergeChildLoaded(this.merge, this.entity);\n            }\n        }).catch((error) => {\n            console.error(\"Error loading static model:\" + data, error);\n            if (this.merge) {\n                this.entity.object3D.visible = false;\n                this.mergeSystem.setMergeChildLoaded(this.merge, this.entity);\n            }\n        });\n    }\n    remove() {\n        if (this.merge) {\n            //console.log(\"Removing merge child due to model removal.\");\n            this.mergeSystem.removeMergeChild(this.merge, this.entity);\n        }\n    }\n    pause() {\n    }\n    play() {\n    }\n    tick(time, timeDelta) {\n        console.error(\"model tick should not happen.\");\n    }\n    recursiveFindMergeParent(entity) {\n        const parent = entity.parentElement;\n        if (!parent) {\n            return undefined;\n        }\n        if (parent.hasAttribute(\"merge\")) {\n            return parent;\n        }\n        else {\n            return this.recursiveFindMergeParent(parent);\n        }\n    }\n}\nModelController.DEFINITION = new aframe_typescript_boilerplate_1.ComponentControllerDefinition(\"model\", { type: 'model' }, false, false, (component, entity, data) => new ModelController(component, entity, data));\nexports.ModelController = ModelController;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9zeXN0ZW0vbWVyZ2UvTW9kZWxDb250cm9sbGVyLnRzPzI2ZTEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFDQSx5R0FBeUQ7QUFFekQsZ0tBSXVDO0FBRXZDLE1BQWEsZUFBZ0IsU0FBUSwyREFBMkI7SUFPNUQsWUFBWSxTQUFvQixFQUFFLE1BQWMsRUFBRSxJQUFTO1FBQ3ZELEtBQUssQ0FBQyxTQUFTLEVBQUUsTUFBTSxFQUFFLElBQUksQ0FBQyxDQUFDO1FBQy9CLElBQUksQ0FBQyxXQUFXLEdBQUcsbURBQW1CLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxPQUFTLEVBQUUsT0FBTyxDQUFDLENBQUM7SUFDM0UsQ0FBQztJQUVELElBQUk7UUFDQSwwRUFBMEU7UUFDMUUsSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsd0JBQXdCLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ3hELElBQUksSUFBSSxDQUFDLEtBQUssRUFBRTtZQUNaLElBQUksQ0FBQyxXQUFXLENBQUMsb0JBQW9CLENBQUMsSUFBSSxDQUFDLEtBQU8sRUFBRSxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDcEU7SUFDTCxDQUFDO0lBRUQsTUFBTSxDQUFDLElBQVMsRUFBRSxPQUFZO1FBQzFCLDRFQUE0RTtRQUM1RSw4QkFBa0IsQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLElBQUksQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUU7WUFDNUMsOENBQThDO1lBQzlDLElBQUksSUFBSSxDQUFDLEtBQUssRUFBRTtnQkFDWixJQUFJLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxPQUFPLEdBQUcsS0FBSyxDQUFDO2dCQUNyQyxJQUFJLENBQUMsV0FBVyxDQUFDLG1CQUFtQixDQUFDLElBQUksQ0FBQyxLQUFPLEVBQUUsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO2FBQ25FO1FBQ0wsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsS0FBSyxFQUFFLEVBQUU7WUFDZixPQUFPLENBQUMsS0FBSyxDQUFDLDZCQUE2QixHQUFHLElBQUksRUFBRSxLQUFLLENBQUMsQ0FBQztZQUMzRCxJQUFJLElBQUksQ0FBQyxLQUFLLEVBQUU7Z0JBQ1osSUFBSSxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsT0FBTyxHQUFHLEtBQUssQ0FBQztnQkFDckMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxtQkFBbUIsQ0FBQyxJQUFJLENBQUMsS0FBTyxFQUFFLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQzthQUNuRTtRQUNMLENBQUMsQ0FBQyxDQUFDO0lBQ1AsQ0FBQztJQUVELE1BQU07UUFDRixJQUFJLElBQUksQ0FBQyxLQUFLLEVBQUU7WUFDWiw0REFBNEQ7WUFDNUQsSUFBSSxDQUFDLFdBQVcsQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsS0FBTyxFQUFFLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztTQUNoRTtJQUVMLENBQUM7SUFFRCxLQUFLO0lBQ0wsQ0FBQztJQUVELElBQUk7SUFDSixDQUFDO0lBRUQsSUFBSSxDQUFDLElBQVksRUFBRSxTQUFpQjtRQUNoQyxPQUFPLENBQUMsS0FBSyxDQUFDLCtCQUErQixDQUFDLENBQUM7SUFDbkQsQ0FBQztJQUVELHdCQUF3QixDQUFDLE1BQWM7UUFDbkMsTUFBTSxNQUFNLEdBQUcsTUFBTSxDQUFDLGFBQXVCLENBQUM7UUFDOUMsSUFBSSxDQUFDLE1BQU0sRUFBRTtZQUNULE9BQU8sU0FBUyxDQUFDO1NBQ3BCO1FBQ0QsSUFBSSxNQUFNLENBQUMsWUFBWSxDQUFDLE9BQU8sQ0FBQyxFQUFFO1lBQzlCLE9BQU8sTUFBTSxDQUFDO1NBQ2pCO2FBQU07WUFDSCxPQUFPLElBQUksQ0FBQyx3QkFBd0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztTQUNoRDtJQUNMLENBQUM7O0FBNURhLDBCQUFVLEdBQUcsSUFBSSw2REFBNkIsQ0FBQyxPQUFPLEVBQUUsRUFBQyxJQUFJLEVBQUUsT0FBTyxFQUFDLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxDQUFDLFNBQW9CLEVBQUUsTUFBYyxFQUFFLElBQVMsRUFBRSxFQUFFLENBQUMsSUFBSSxlQUFlLENBQUMsU0FBUyxFQUFFLE1BQU0sRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUFDO0FBTDVNLDBDQW1FQyIsImZpbGUiOiIuL3NyYy9icm93c2VyL3N5c3RlbS9tZXJnZS9Nb2RlbENvbnRyb2xsZXIudHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NvbXBvbmVudCwgRW50aXR5fSBmcm9tIFwiYWZyYW1lXCI7XG5pbXBvcnQge3NldEVudGl0eUdsdGZNb2RlbH0gZnJvbSBcIi4uLy4uL3RocmVlL2dsdGZfbG9hZFwiO1xuaW1wb3J0IHtNZXJnZVN5c3RlbUNvbnRyb2xsZXJ9IGZyb20gXCIuL01lcmdlU3lzdGVtQ29udHJvbGxlclwiO1xuaW1wb3J0IHtcbiAgICBBYnN0cmFjdENvbXBvbmVudENvbnRyb2xsZXIsXG4gICAgQ29tcG9uZW50Q29udHJvbGxlckRlZmluaXRpb24sXG4gICAgZ2V0U3lzdGVtQ29udHJvbGxlclxufSBmcm9tIFwiYWZyYW1lLXR5cGVzY3JpcHQtYm9pbGVycGxhdGVcIjtcblxuZXhwb3J0IGNsYXNzIE1vZGVsQ29udHJvbGxlciBleHRlbmRzIEFic3RyYWN0Q29tcG9uZW50Q29udHJvbGxlciB7XG5cbiAgICByZWFkb25seSBtZXJnZVN5c3RlbTogTWVyZ2VTeXN0ZW1Db250cm9sbGVyO1xuICAgIG1lcmdlOiBFbnRpdHkgfCB1bmRlZmluZWQ7XG5cbiAgICBwdWJsaWMgc3RhdGljIERFRklOSVRJT04gPSBuZXcgQ29tcG9uZW50Q29udHJvbGxlckRlZmluaXRpb24oXCJtb2RlbFwiLCB7dHlwZTogJ21vZGVsJ30sIGZhbHNlLCBmYWxzZSwgKGNvbXBvbmVudDogQ29tcG9uZW50LCBlbnRpdHk6IEVudGl0eSwgZGF0YTogYW55KSA9PiBuZXcgTW9kZWxDb250cm9sbGVyKGNvbXBvbmVudCwgZW50aXR5LCBkYXRhKSk7XG5cbiAgICBjb25zdHJ1Y3Rvcihjb21wb25lbnQ6IENvbXBvbmVudCwgZW50aXR5OiBFbnRpdHksIGRhdGE6IGFueSkge1xuICAgICAgICBzdXBlcihjb21wb25lbnQsIGVudGl0eSwgZGF0YSk7XG4gICAgICAgIHRoaXMubWVyZ2VTeXN0ZW0gPSBnZXRTeXN0ZW1Db250cm9sbGVyKHRoaXMuZW50aXR5LnNjZW5lRWwhISwgXCJtZXJnZVwiKTtcbiAgICB9XG5cbiAgICBpbml0KCk6IHZvaWQge1xuICAgICAgICAvL2NvbnNvbGUubG9nKHRoaXMuY29tcG9uZW50TmFtZSArIFwiIGluaXQ6IFwiICsgSlNPTi5zdHJpbmdpZnkodGhpcy5kYXRhKSk7XG4gICAgICAgIHRoaXMubWVyZ2UgPSB0aGlzLnJlY3Vyc2l2ZUZpbmRNZXJnZVBhcmVudCh0aGlzLmVudGl0eSk7XG4gICAgICAgIGlmICh0aGlzLm1lcmdlKSB7XG4gICAgICAgICAgICB0aGlzLm1lcmdlU3lzdGVtLmFkZExvYWRpbmdNZXJnZUNoaWxkKHRoaXMubWVyZ2UhISwgdGhpcy5lbnRpdHkpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgdXBkYXRlKGRhdGE6IGFueSwgb2xkRGF0YTogYW55KTogdm9pZCB7XG4gICAgICAgIC8vY29uc29sZS5sb2codGhpcy5jb21wb25lbnROYW1lICsgXCIgdXBkYXRlOiBcIiArIEpTT04uc3RyaW5naWZ5KHRoaXMuZGF0YSkpO1xuICAgICAgICBzZXRFbnRpdHlHbHRmTW9kZWwodGhpcy5lbnRpdHksIGRhdGEpLnRoZW4oKCkgPT4ge1xuICAgICAgICAgICAgLy9jb25zb2xlLmxvZyhcIlN0YXRpYyBtb2RlbCBsb2FkZWQ6IFwiICsgZGF0YSk7XG4gICAgICAgICAgICBpZiAodGhpcy5tZXJnZSkge1xuICAgICAgICAgICAgICAgIHRoaXMuZW50aXR5Lm9iamVjdDNELnZpc2libGUgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICB0aGlzLm1lcmdlU3lzdGVtLnNldE1lcmdlQ2hpbGRMb2FkZWQodGhpcy5tZXJnZSEhLCB0aGlzLmVudGl0eSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pLmNhdGNoKChlcnJvcikgPT4ge1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcihcIkVycm9yIGxvYWRpbmcgc3RhdGljIG1vZGVsOlwiICsgZGF0YSwgZXJyb3IpO1xuICAgICAgICAgICAgaWYgKHRoaXMubWVyZ2UpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmVudGl0eS5vYmplY3QzRC52aXNpYmxlID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgdGhpcy5tZXJnZVN5c3RlbS5zZXRNZXJnZUNoaWxkTG9hZGVkKHRoaXMubWVyZ2UhISwgdGhpcy5lbnRpdHkpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICByZW1vdmUoKTogdm9pZCB7XG4gICAgICAgIGlmICh0aGlzLm1lcmdlKSB7XG4gICAgICAgICAgICAvL2NvbnNvbGUubG9nKFwiUmVtb3ZpbmcgbWVyZ2UgY2hpbGQgZHVlIHRvIG1vZGVsIHJlbW92YWwuXCIpO1xuICAgICAgICAgICAgdGhpcy5tZXJnZVN5c3RlbS5yZW1vdmVNZXJnZUNoaWxkKHRoaXMubWVyZ2UhISwgdGhpcy5lbnRpdHkpO1xuICAgICAgICB9XG5cbiAgICB9XG5cbiAgICBwYXVzZSgpOiB2b2lkIHtcbiAgICB9XG5cbiAgICBwbGF5KCk6IHZvaWQge1xuICAgIH1cblxuICAgIHRpY2sodGltZTogbnVtYmVyLCB0aW1lRGVsdGE6IG51bWJlcik6IHZvaWQge1xuICAgICAgICBjb25zb2xlLmVycm9yKFwibW9kZWwgdGljayBzaG91bGQgbm90IGhhcHBlbi5cIik7XG4gICAgfVxuXG4gICAgcmVjdXJzaXZlRmluZE1lcmdlUGFyZW50KGVudGl0eTogRW50aXR5KSA6IEVudGl0eSB8IHVuZGVmaW5lZCB7XG4gICAgICAgIGNvbnN0IHBhcmVudCA9IGVudGl0eS5wYXJlbnRFbGVtZW50IGFzIEVudGl0eTtcbiAgICAgICAgaWYgKCFwYXJlbnQpIHtcbiAgICAgICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHBhcmVudC5oYXNBdHRyaWJ1dGUoXCJtZXJnZVwiKSkge1xuICAgICAgICAgICAgcmV0dXJuIHBhcmVudDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLnJlY3Vyc2l2ZUZpbmRNZXJnZVBhcmVudChwYXJlbnQpO1xuICAgICAgICB9XG4gICAgfVxuXG59XG5cblxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/browser/system/merge/ModelController.ts\n");

/***/ }),

/***/ "./src/browser/system/space/Actuator.ts":
/*!**********************************************!*\
  !*** ./src/browser/system/space/Actuator.ts ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst three_1 = __webpack_require__(/*! three */ \"three\");\nconst Spring_1 = __webpack_require__(/*! ./Spring */ \"./src/browser/system/space/Spring.ts\");\nconst Events_1 = __webpack_require__(/*! ../../model/Events */ \"./src/browser/model/Events.ts\");\nconst EntityStateEventDetail_1 = __webpack_require__(/*! ../../model/EntityStateEventDetail */ \"./src/browser/model/EntityStateEventDetail.ts\");\nconst States_1 = __webpack_require__(/*! ../../model/States */ \"./src/browser/model/States.ts\");\nconst xml_js_1 = __webpack_require__(/*! xml-js */ \"./node_modules/xml-js/lib/index.js\");\nconst EntityActionEventDetail_1 = __webpack_require__(/*! ../../model/EntityActionEventDetail */ \"./src/browser/model/EntityActionEventDetail.ts\");\nconst aframe_typescript_boilerplate_1 = __webpack_require__(/*! aframe-typescript-boilerplate */ \"./node_modules/aframe-typescript-boilerplate/built/index.js\");\nclass Actuator {\n    constructor(scene, region, id, index, description) {\n        this.springOne = new Spring_1.Spring();\n        this.springTwo = new Spring_1.Spring();\n        this.lastPosition = new three_1.Vector3();\n        this.facingDirection = new three_1.Vector3(0, 0, -1);\n        this.targetOrientation = new three_1.Quaternion();\n        this.currentOrientation = new three_1.Quaternion();\n        this.lastUpdateTime = 0;\n        this.averageUpdateInterval = 0.200;\n        this.moving = false;\n        this.turning = false;\n        this.firstSimulate = true;\n        this.cameraPosition = new three_1.Vector3(0, 0, 0);\n        this.scene = scene;\n        this.region = region;\n        this.id = id;\n        this.index = index;\n        this.description = description;\n        this.entity = aframe_typescript_boilerplate_1.createElement(description);\n        this.entity.setAttribute(\"did\", id);\n        this.entity.setAttribute(\"server\", region);\n        this.entity.setAttribute(\"shadow\", \"\");\n        this.springOne.relaxationTime = 0.2;\n        this.springTwo.relaxationTime = 0.2;\n        this.stateSystemController = aframe_typescript_boilerplate_1.getSystemController(this.scene, \"state\");\n        this.movementState = this.stateSystemController.getState(this.entity, States_1.States.STATE_MOVEMENT);\n    }\n    changeRegion(region, index) {\n        this.entity.setAttribute(\"server\", region);\n        this.region = region;\n        this.index = index;\n    }\n    added(x, y, z, rx, ry, rz, rw) {\n        this.scene.appendChild(this.entity);\n        this.springOne.currentPosition.x = x;\n        this.springOne.currentPosition.y = y;\n        this.springOne.currentPosition.z = z;\n        this.springOne.targetPosition.x = x;\n        this.springOne.targetPosition.y = y;\n        this.springOne.targetPosition.z = z;\n        this.springOne.currentOrientation.x = rx;\n        this.springOne.currentOrientation.y = ry;\n        this.springOne.currentOrientation.z = rz;\n        this.springOne.currentOrientation.w = rw;\n        this.springOne.targetOrientation.x = rx;\n        this.springOne.targetOrientation.y = ry;\n        this.springOne.targetOrientation.z = rz;\n        this.springOne.targetOrientation.w = rw;\n        this.springTwo.currentPosition.x = x;\n        this.springTwo.currentPosition.y = y;\n        this.springTwo.currentPosition.z = z;\n        this.springTwo.targetPosition.x = x;\n        this.springTwo.targetPosition.y = y;\n        this.springTwo.targetPosition.z = z;\n        this.springTwo.currentOrientation.x = rx;\n        this.springTwo.currentOrientation.y = ry;\n        this.springTwo.currentOrientation.z = rz;\n        this.springTwo.currentOrientation.w = rw;\n        this.springTwo.targetOrientation.x = rx;\n        this.springTwo.targetOrientation.y = ry;\n        this.springTwo.targetOrientation.z = rz;\n        this.springTwo.targetOrientation.w = rw;\n        this.lastPosition.x = this.springTwo.currentPosition.x;\n        this.lastPosition.y = this.springTwo.currentPosition.y;\n        this.lastPosition.z = this.springTwo.currentPosition.z;\n        //this.moving = true;\n        //this.turning = true;\n        //this.entity.dispatchEvent(new CustomEvent(Events.EVENT_STATE_BEGIN, {detail: new EntityStateEventDetail(\"moving\")}));\n        //console.log(this.entity.tagName + \":\" + \"start moving\");\n        /*this.entity.object3D.position.x = this.springTwo.currentPosition.x;\n        this.entity.object3D.position.y = this.springTwo.currentPosition.y;\n        this.entity.object3D.position.z = this.springTwo.currentPosition.z;\n        this.entity.object3D.rotation.setFromQuaternion(this.springTwo.currentOrientation);\n\n        if (this.entity.tagName != \"A-DODECAHEDRON\") {\n            console.log(this.entity.tagName + \":\" + JSON.stringify(this.entity.object3D.position));\n        }*/\n        //this.moving = true;\n        //this.entity.dispatchEvent(new CustomEvent(Events.EVENT_STATE_BEGIN, {detail: new EntityStateEventDetail(\"moving\")}));\n        //console.log(\"start moving\");\n        //this.simulate(1);\n    }\n    updated(x, y, z, rx, ry, rz, rw) {\n        const time = new Date().getTime() / 1000.0;\n        if (this.lastUpdateTime != 0) {\n            this.averageUpdateInterval = (this.averageUpdateInterval * 9 + (time - this.lastUpdateTime)) / 10;\n            this.springOne.relaxationTime = 2 * this.averageUpdateInterval;\n            this.springTwo.relaxationTime = 2 * this.averageUpdateInterval;\n        }\n        this.lastUpdateTime = time;\n        //this.entity.setAttribute(\"position\", x + \" \" + y + \" \" + z);\n        this.springOne.targetPosition.x = x;\n        this.springOne.targetPosition.y = y;\n        this.springOne.targetPosition.z = z;\n        this.springOne.targetOrientation.x = rx;\n        this.springOne.targetOrientation.y = ry;\n        this.springOne.targetOrientation.z = rz;\n        this.springOne.targetOrientation.w = rw;\n        if (!this.moving) {\n            this.checkIfMoving();\n        }\n    }\n    removed() {\n        if (this.entity.parentElement) {\n            this.entity.parentElement.removeChild(this.entity);\n        }\n    }\n    described(description) {\n        this.description = description;\n        const element = xml_js_1.xml2js(description).elements[0];\n        if (element.attributes) {\n            // TODO recursive updates.\n            for (const attributeName in element.attributes) {\n                const attributeValue = element.attributes[attributeName];\n                if (attributeName == 'gltf-model') {\n                    continue;\n                }\n                if (attributeName == 'avatar') {\n                    continue;\n                }\n                this.entity.setAttribute(attributeName, attributeValue);\n            }\n        }\n    }\n    acted(action, description) {\n        if (action === 'state-begin') {\n            this.entity.dispatchEvent(new CustomEvent(Events_1.Events.EVENT_STATE_BEGIN, { detail: new EntityStateEventDetail_1.EntityStateEventDetail(description) }));\n        }\n        else if (action === 'state-end') {\n            this.entity.dispatchEvent(new CustomEvent(Events_1.Events.EVENT_STATE_END, { detail: new EntityStateEventDetail_1.EntityStateEventDetail(description) }));\n        }\n        else {\n            this.entity.dispatchEvent(new CustomEvent(Events_1.Events.EVENT_ACTION, { detail: new EntityActionEventDetail_1.EntityActionEventDetail(action, description) }));\n        }\n    }\n    simulate(t) {\n        if (this.moving || this.turning || this.firstSimulate) {\n            this.firstSimulate = false;\n            this.lastPosition.x = this.springTwo.currentPosition.x;\n            this.lastPosition.y = this.springTwo.currentPosition.y;\n            this.lastPosition.z = this.springTwo.currentPosition.z;\n            this.springOne.simulate(t);\n            this.springTwo.targetPosition.x = this.springOne.currentPosition.x;\n            this.springTwo.targetPosition.y = this.springOne.currentPosition.y;\n            this.springTwo.targetPosition.z = this.springOne.currentPosition.z;\n            this.springTwo.targetOrientation.x = this.springOne.currentOrientation.x;\n            this.springTwo.targetOrientation.y = this.springOne.currentOrientation.y;\n            this.springTwo.targetOrientation.z = this.springOne.currentOrientation.z;\n            this.springTwo.targetOrientation.w = this.springOne.currentOrientation.w;\n            this.springTwo.simulate(t);\n            if (this.entity.object3D) {\n                // Update location only after 3d presentation is ready.\n                this.entity.object3D.position.x = this.springTwo.currentPosition.x;\n                this.entity.object3D.position.y = this.springTwo.currentPosition.y;\n                this.entity.object3D.position.z = this.springTwo.currentPosition.z;\n                /*if (this.entity.tagName != \"A-DODECAHEDRON\") {\n                    console.log(this.entity.tagName + \":\" + t + \":\" + JSON.stringify(this.entity.object3D.position));\n                }*/\n                this.entity.object3D.rotation.setFromQuaternion(this.springTwo.currentOrientation);\n                this.movementState.distanceDelta = Math.abs(this.lastPosition.distanceTo(this.springTwo.currentPosition));\n                this.movementState.timeDeltaSeconds = t;\n                const movementDirection = this.lastPosition.sub(this.springTwo.currentPosition);\n                this.facingDirection.x = 0;\n                this.facingDirection.y = 0;\n                this.facingDirection.z = -1;\n                this.facingDirection = this.facingDirection.applyQuaternion(this.entity.object3D.quaternion);\n                this.movementState.facing = movementDirection.angleTo(this.facingDirection) < Math.PI / 2 ? 1 : -1;\n            }\n            this.checkIfMoving();\n        }\n        // Check if dynamic object is in observation range. Do this every round to keep the cost independent of whether user is moving or not.\n        /*const spaceSystem = getSystemController(this.scene, \"space\") as SpaceSystemController;\n        const interfaceSystem = getSystemController(this.scene, \"interface\") as InterfaceSystemController;\n        const range = spaceSystem.getObservationRange();\n        //console.log(\"Observation range: \"+ range);\n        this.cameraPosition.copy(interfaceSystem.cameraPosition);\n        this.cameraPosition.sub(this.entity.object3D.position);\n        const distanceToCamera = this.cameraPosition.length();\n        this.entity.object3D.visible = distanceToCamera < range;*/\n    }\n    checkIfMoving() {\n        const positionDelta = this.springOne.targetPosition.distanceTo(this.springTwo.currentPosition);\n        this.targetOrientation.x = this.springOne.targetOrientation.x;\n        this.targetOrientation.y = this.springOne.targetOrientation.y;\n        this.targetOrientation.z = this.springOne.targetOrientation.z;\n        this.targetOrientation.w = this.springOne.targetOrientation.w;\n        this.currentOrientation.x = this.springTwo.currentOrientation.x;\n        this.currentOrientation.y = this.springTwo.currentOrientation.y;\n        this.currentOrientation.z = this.springTwo.currentOrientation.z;\n        this.currentOrientation.w = this.springTwo.currentOrientation.w;\n        const dot = this.targetOrientation.dot(this.currentOrientation);\n        const orientationDelta = Math.acos(2 * dot * dot - 1);\n        //console.log(orientationDelta);\n        //const orientationDelta = ((this.springOne.targetOrientation) as any).angleTo(this.springTwo.currentOrientation) as number;\n        const moving = positionDelta > 0.2;\n        const turning = orientationDelta > 0.2;\n        //console.log(positionDelta);\n        if (!this.moving && moving) {\n            this.entity.dispatchEvent(new CustomEvent(Events_1.Events.EVENT_STATE_BEGIN, { detail: new EntityStateEventDetail_1.EntityStateEventDetail(\"moving\") }));\n            //console.log(this.entity.tagName + \":\" + \"start moving\");\n        }\n        if (this.moving && !moving) {\n            this.entity.dispatchEvent(new CustomEvent(Events_1.Events.EVENT_STATE_END, { detail: new EntityStateEventDetail_1.EntityStateEventDetail(\"moving\") }));\n            //console.log(this.entity.tagName + \":\" + \"end moving\");\n        }\n        this.moving = moving;\n        this.turning = turning;\n    }\n}\nexports.Actuator = Actuator;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/browser/system/space/Actuator.ts\n");

/***/ }),

/***/ "./src/browser/system/space/DynamicSpace.ts":
/*!**************************************************!*\
  !*** ./src/browser/system/space/DynamicSpace.ts ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Actuator_1 = __webpack_require__(/*! ./Actuator */ \"./src/browser/system/space/Actuator.ts\");\nconst aframe_typescript_boilerplate_1 = __webpack_require__(/*! aframe-typescript-boilerplate */ \"./node_modules/aframe-typescript-boilerplate/built/index.js\");\nclass DynamicSpace {\n    constructor(scene, avatarId) {\n        this.avatarIndex = -1;\n        this.actuatorsMap = new Map();\n        this.actuatorRemoves = new Map();\n        this.avatarId = avatarId;\n        this.scene = scene;\n    }\n    connected(region) {\n        this.actuatorsMap.set(region, new Map());\n    }\n    disconnected(region) {\n        if (!this.actuatorsMap.has(region)) {\n            return;\n        }\n        this.actuatorsMap.get(region).forEach((value, key) => {\n            value.removed();\n        });\n        this.actuatorsMap.delete(region);\n    }\n    added(region, index, id, x, y, z, rx, ry, rz, rw, description) {\n        if (id === this.avatarId) {\n            this.avatarIndex = index;\n            return;\n        }\n        if (this.actuatorRemoves.has(id)) {\n            // In case of fast reconnect remove actuator from removal set and move actuator to new region.\n            const actuator = this.actuatorRemoves.get(id);\n            if (actuator) {\n                this.actuatorRemoves.delete(id);\n                // Change region.\n                this.actuatorsMap.get(actuator.region).delete(actuator.index);\n                this.actuatorsMap.get(region).set(index, actuator);\n                actuator.changeRegion(region, index);\n                return;\n            }\n        }\n        const actuators = this.actuatorsMap.get(region);\n        if (!actuators) {\n            console.log(\"Region does not have actuators map i.e. client not connected: \" + region);\n            return;\n        }\n        if (actuators.has(index)) {\n            console.log(\"object already added.\");\n            return;\n        }\n        const actuator = new Actuator_1.Actuator(this.scene, region, id, index, description);\n        actuators.set(index, actuator);\n        actuator.added(x, y, z, rx, ry, rz, rw);\n    }\n    updated(region, index, x, y, z, rx, ry, rz, rw) {\n        if (index === this.avatarIndex) {\n            //console.log(\"dataspace - observed own avatar update.\");\n            return;\n        }\n        const actuators = this.actuatorsMap.get(region);\n        if (!actuators) {\n            return;\n        }\n        const actuator = actuators.get(index);\n        if (!actuator) {\n            return;\n        }\n        actuator.updated(x, y, z, rx, ry, rz, rw);\n    }\n    removed(region, index, id) {\n        if (index == this.avatarIndex) {\n            //console.log(\"dataspace - observed own avatar remove.\")\n            return;\n        }\n        const actuators = this.actuatorsMap.get(region);\n        if (!actuators) {\n            return;\n        }\n        const actuator = actuators.get(index);\n        if (!actuator) {\n            return;\n        }\n        this.actuatorRemoves.set(id, actuator);\n        setTimeout(() => {\n            if (this.actuatorRemoves.has(id)) {\n                this.actuatorRemoves.delete(id);\n                const actuators = this.actuatorsMap.get(region);\n                if (!actuators) {\n                    return;\n                }\n                const actuator = actuators.get(index);\n                if (!actuator) {\n                    return;\n                }\n                actuator.removed();\n                aframe_typescript_boilerplate_1.getSystemController(this.scene, \"state\").removeStates(actuator.entity);\n                actuators.delete(index);\n            }\n        }, 1000);\n    }\n    described(region, index, description) {\n        if (index == this.avatarIndex) {\n            return;\n        }\n        const actuators = this.actuatorsMap.get(region);\n        if (!actuators) {\n            return;\n        }\n        const actuator = actuators.get(index);\n        if (!actuator) {\n            return;\n        }\n        actuator.described(description);\n    }\n    acted(region, index, action, description) {\n        if (index == this.avatarIndex) {\n            return;\n        }\n        const actuators = this.actuatorsMap.get(region);\n        if (!actuators) {\n            return;\n        }\n        const actuator = actuators.get(index);\n        if (!actuator) {\n            return;\n        }\n        actuator.acted(action, description);\n    }\n    simulate(t) {\n        this.actuatorsMap.forEach(((actuators) => {\n            actuators.forEach((actuator => {\n                actuator.simulate(t);\n            }));\n        }));\n    }\n}\nexports.DynamicSpace = DynamicSpace;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/browser/system/space/DynamicSpace.ts\n");

/***/ }),

/***/ "./src/browser/system/space/SpaceSystemController.ts":
/*!***********************************************************!*\
  !*** ./src/browser/system/space/SpaceSystemController.ts ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst uuid = __webpack_require__(/*! uuid */ \"./node_modules/uuid/index.js\");\nconst three_1 = __webpack_require__(/*! three */ \"three\");\nconst Events_1 = __webpack_require__(/*! ../../model/Events */ \"./src/browser/model/Events.ts\");\nconst DynamicSpace_1 = __webpack_require__(/*! ./DynamicSpace */ \"./src/browser/system/space/DynamicSpace.ts\");\nconst StaticSpace_1 = __webpack_require__(/*! ./StaticSpace */ \"./src/browser/system/space/StaticSpace.ts\");\nconst reality_space_1 = __webpack_require__(/*! reality-space */ \"./node_modules/reality-space/lib/src/index.js\");\nconst aframe_typescript_boilerplate_1 = __webpack_require__(/*! aframe-typescript-boilerplate */ \"./node_modules/aframe-typescript-boilerplate/built/index.js\");\nclass SpaceSystemController extends aframe_typescript_boilerplate_1.AbstractSystemController {\n    constructor(system, scene, data) {\n        super(system, scene, data);\n        this.clusterUrl = undefined;\n        this.avatarId = uuid.v4();\n        this.playerElement = null;\n        this.cameraElement = null;\n        this.playerObject = undefined;\n        this.client = undefined;\n        this.dynamicSpace = undefined;\n        this.staticSpace = undefined;\n        this.lastRefresh = 0;\n        this.yAxisPositive = new three_1.Vector3(0, 1, 0);\n        this.xzPlane = new three_1.Plane(this.yAxisPositive);\n        this.cameraDirection = new three_1.Vector3(0, 0, 0);\n        this.xzDirection = new three_1.Vector3(0, 0, 0);\n        this.directionMatrix = new three_1.Matrix4();\n        this.directionQuaternion = new three_1.Quaternion();\n        this.observationRange = 0;\n        this.staticSpace = new StaticSpace_1.StaticSpace(this.scene);\n        fetch('/api/context', {\n            credentials: 'same-origin'\n        }).then((response) => {\n            response.json().then((responseData) => {\n                const context = responseData;\n                this.clusterUrl = context.clusterUrl;\n                this.space = context.space;\n                this.idToken = context.idToken;\n                this.context = context;\n                this.dynamicSpace = new DynamicSpace_1.DynamicSpace(this.scene, this.context.userId + \":\" + this.avatarId);\n                //console.log(\"cluster URL: \" + this.clusterUrl);\n            });\n        }).catch((err) => {\n            console.error(err);\n        });\n        /*fetch('/api/users/current/cluster-url', {\n            credentials: 'same-origin'\n        })\n            .then((response) => {\n                response.text().then((responseData) => {\n                    this.clusterUrl = responseData;\n                    //console.log(\"cluster URL: \" + this.clusterUrl);\n                });\n            }).catch((err) => {\n            console.error(err);\n        });\n        fetch('/api/users/current/space', {\n            credentials: 'same-origin'\n        })\n            .then((response) => {\n                response.text().then((responseData) => {\n                    this.space = responseData;\n                    //console.log(\"current space: \" + this.space);\n                });\n            }).catch((err) => {\n            console.error(err);\n        });\n        fetch('/api/users/current/id-token', {\n            credentials: 'same-origin'\n        })\n            .then((response) => {\n                response.text().then((responseData) => {\n                    this.idToken = responseData;\n                });\n            }).catch((err) => {\n            console.error(err);\n        });*/\n    }\n    init() {\n    }\n    pause() {\n        if (this.client) {\n            this.client.close();\n            this.client = undefined;\n        }\n    }\n    play() {\n    }\n    tick(time, timeDelta) {\n        if (!this.client) {\n            this.setupClient();\n        }\n        else {\n            this.dynamicSpace.simulate(timeDelta / 1000);\n            if (time - this.lastRefresh > 150) {\n                if (this.playerObject && this.cameraObject) {\n                    if (this.client.clusterConfiguration) {\n                        this.cameraObject.getWorldDirection(this.cameraDirection);\n                        //this.cameraDirection.multiplyScalar(-1);\n                        this.xzPlane.projectPoint(this.cameraDirection, this.xzDirection);\n                        this.xzDirection.normalize();\n                        this.directionMatrix.lookAt(new three_1.Vector3(0, 0, 0), this.xzDirection, this.yAxisPositive);\n                        this.directionQuaternion.setFromRotationMatrix(this.directionMatrix);\n                        this.client.refresh(this.playerObject.position.x, this.playerObject.position.y, this.playerObject.position.z, this.directionQuaternion.x, this.directionQuaternion.y, this.directionQuaternion.z, this.directionQuaternion.w);\n                    }\n                }\n                this.lastRefresh = time;\n            }\n        }\n    }\n    setupClient() {\n        if (!this.clusterUrl || !this.idToken || !this.space) {\n            return;\n        }\n        this.playerElement = document.querySelector(\"[interface]\");\n        this.cameraElement = this.playerElement.querySelector('[camera]');\n        if (!this.playerElement) {\n            //console.log(\"dataspace - did not find player element in dom.\");\n        }\n        else {\n            this.playerElement.addEventListener(Events_1.Events.EVENT_STATE_BEGIN, ((e) => __awaiter(this, void 0, void 0, function* () {\n                if (this.client && this.client.clusterConfiguration) {\n                    ////console.log(e.detail);\n                    yield this.client.act(this.avatarId, Events_1.Events.EVENT_STATE_BEGIN, e.detail.state);\n                }\n            })));\n            this.playerElement.addEventListener(Events_1.Events.EVENT_STATE_END, ((e) => __awaiter(this, void 0, void 0, function* () {\n                if (this.client && this.client.clusterConfiguration) {\n                    ////console.log(e.detail);\n                    yield this.client.act(this.avatarId, Events_1.Events.EVENT_STATE_END, e.detail.state);\n                }\n            })));\n            this.playerElement.addEventListener(Events_1.Events.EVENT_ACTION, ((e) => __awaiter(this, void 0, void 0, function* () {\n                if (this.client && this.client.clusterConfiguration) {\n                    ////console.log(e.detail);\n                    const actionEventDetail = e.detail;\n                    yield this.client.act(this.avatarId, actionEventDetail.action, actionEventDetail.description);\n                }\n            })));\n        }\n        if (!this.cameraElement) {\n            //console.log(\"dataspace - did not find camera element in dom.\");\n        }\n        //console.log(this.systemName + \" setting up client...\");\n        if (this.playerElement && this.cameraElement) {\n            if (!this.playerObject || !this.cameraObject) {\n                this.playerObject = this.playerElement.object3D;\n                if (this.cameraElement) {\n                    this.cameraObject = this.cameraElement.object3D;\n                }\n                if (!this.playerObject) {\n                    //console.log(\"No player object.\");\n                }\n                if (!this.cameraObject) {\n                    //console.log(\"No camera object.\");\n                }\n            }\n        }\n        if (this.playerObject && this.cameraObject) {\n            this.client = new reality_space_1.ClusterClient(this.clusterUrl, this.space, this.avatarId, this.playerObject.position.x, this.playerObject.position.y, this.playerObject.position.z, this.cameraObject.quaternion.x, this.cameraObject.quaternion.y, this.cameraObject.quaternion.z, this.cameraObject.quaternion.w, this.getAvatarDescription(), this.idToken);\n            this.client.onReceive = (region, type, message) => {\n                ////console.log(message);\n                if (type === reality_space_1.Encode.ADDED) {\n                    const m = reality_space_1.Decode.added(message);\n                    this.dynamicSpace.added(region, m[0], m[1], m[2], m[3], m[4], m[5], m[6], m[7], m[8], m[9]);\n                }\n                if (type === reality_space_1.Encode.UPDATED) {\n                    const m = reality_space_1.Decode.updated(message);\n                    this.dynamicSpace.updated(region, m[0], m[1], m[2], m[3], m[4], m[5], m[6], m[7]);\n                }\n                if (type === reality_space_1.Encode.REMOVED) {\n                    const m = reality_space_1.Decode.removed(message);\n                    this.dynamicSpace.removed(region, m[0], m[1]);\n                }\n                if (type === reality_space_1.Encode.DESCRIBED) {\n                    const m = reality_space_1.Decode.described(message);\n                    this.dynamicSpace.described(region, m[0], m[1]);\n                }\n                if (type === reality_space_1.Encode.ACTED) {\n                    const m = reality_space_1.Decode.acted(message);\n                    this.dynamicSpace.acted(region, m[0], m[1], m[2]);\n                }\n            };\n            this.client.onStoredRootEntityReceived = (region, sid, entityXml) => {\n                this.staticSpace.setRootEntity(region, sid, entityXml);\n            };\n            this.client.onStoredChildEntityReceived = (region, parentSid, sid, entityXml) => {\n                this.staticSpace.setChildEntity(region, parentSid, sid, entityXml);\n            };\n            this.client.onStoredEntityRemoved = (region, sid) => {\n                this.staticSpace.removeEntity(region, sid);\n            };\n            this.client.onLoaded = (region) => {\n                this.staticSpace.loaded(region);\n            };\n            this.client.onConnectError = (region, error) => {\n                document.location.href = \"/connection_error.html\";\n            };\n            this.client.onConnect = (region) => {\n                //console.log(\"dataspace - connected: \" + region);\n                const regionConfiguration = this.client.getRegionConfiguration(region);\n                const regionX = regionConfiguration.x;\n                const regionY = regionConfiguration.y;\n                const regionZ = regionConfiguration.z - 2; // TODO Remove this test\n                this.dynamicSpace.connected(region);\n                this.staticSpace.connected(region, new three_1.Vector3(regionX, regionY, regionZ));\n            };\n            this.client.onDisconnect = (region) => {\n                //console.log(\"dataspace - disconnected: \" + region)\n                this.dynamicSpace.disconnected(region);\n                this.staticSpace.disconnected(region);\n            };\n            this.client.connect().then(() => {\n                if (this.client && this.client.clusterConfiguration) {\n                    this.observationRange = Math.trunc(this.client.clusterConfiguration.range / this.client.clusterConfiguration.step) * this.client.clusterConfiguration.step;\n                    const interfaceSystem = aframe_typescript_boilerplate_1.getSystemController(this.scene, \"interface\");\n                    const observationRange = this.getObservationRange();\n                    console.log(\"Set camera far to: \" + observationRange);\n                    interfaceSystem.cameraEntity.object3D.far = observationRange;\n                }\n            }).catch((error) => {\n                console.warn(\"dataspace - cluster client connect error.\", error);\n                this.client = undefined;\n            });\n        }\n    }\n    getObservationRange() {\n        return this.observationRange;\n    }\n    sendAvatarDescriptionUpdate() {\n        if (this.client) {\n            const avatarDescription = this.getAvatarDescription();\n            //console.log(\"Describing avatar: \" + avatarDescription);\n            this.client.describe(this.avatarId, this.getAvatarDescription()).catch((error) => {\n                //console.log(\"Error describing avatar: \" + error);\n            });\n        }\n    }\n    getAvatarDescription() {\n        const interfaceSystem = this.getSystemController(\"interface\");\n        const selfScale = interfaceSystem ? interfaceSystem.getSelfScale() : 1;\n        const avatarScale = selfScale * 0.4; // TODO fix the model size.\n        return '<a-entity gltf-model=\"#male_suit\" scale=\"' + avatarScale + ' ' + avatarScale + ' ' + avatarScale + '\" avatar=\"\"></a-entity>';\n    }\n    addEntity(template, position, scale) {\n        if (this.client) {\n            const region = this.client.getRegion(position.x, position.y, position.z);\n            const regionConfiguration = this.client.getRegionConfiguration(region);\n            const localPosition = position.clone();\n            localPosition.sub(new three_1.Vector3(regionConfiguration.x, regionConfiguration.y, regionConfiguration.z));\n            localPosition.z = localPosition.z + 2;\n            const newEntity = aframe_typescript_boilerplate_1.createElement(template);\n            newEntity.setAttribute(\"scale\", scale.x + \" \" + scale.y + \" \" + scale.z);\n            newEntity.setAttribute(\"position\", localPosition.x + \" \" + localPosition.y + \" \" + localPosition.z);\n            newEntity.setAttribute(\"oid\", uuid.v4().toString());\n            if (newEntity.flushToDOM) {\n                newEntity.flushToDOM(true);\n            }\n            this.staticSpace.regionElements.get(region).appendChild(newEntity);\n            this.client.storeEntity(newEntity.outerHTML, position.x, position.y, position.z).catch(error => {\n                console.error(\"Error saving entity\", error);\n            });\n        }\n    }\n    updateEntity(entity, position, orientation, scale) {\n        if (this.client) {\n            const sid = entity.getAttribute(\"sid\");\n            this.staticSpace.ignoreNextSetSids.push(sid);\n            const region = this.client.getRegion(position.x, position.y, position.z);\n            const regionConfiguration = this.client.getRegionConfiguration(region);\n            const localPosition = position.clone();\n            localPosition.sub(new three_1.Vector3(regionConfiguration.x, regionConfiguration.y, regionConfiguration.z));\n            localPosition.z = localPosition.z + 2;\n            const modelController = aframe_typescript_boilerplate_1.getComponentController(entity, \"model\");\n            if (modelController && modelController.merge) {\n                //console.log(\"updating merge as entity is part of merge.\");\n                entity.setAttribute(\"position\", localPosition.x + \" \" + localPosition.y + \" \" + localPosition.z);\n                entity.setAttribute(\"quaternion\", orientation.x + \" \" + orientation.y + \" \" + orientation.z + \" \" + orientation.w);\n                entity.setAttribute(\"scale\", scale.x + \" \" + scale.y + \" \" + scale.z);\n                const mergeSystem = this.getSystemController(\"merge\");\n                mergeSystem.updateMergeChild(modelController.merge, entity);\n            }\n            const entityXml = entity.outerHTML;\n            const newEntity = aframe_typescript_boilerplate_1.createElement(entityXml);\n            newEntity.setAttribute(\"position\", localPosition.x + \" \" + localPosition.y + \" \" + localPosition.z);\n            newEntity.setAttribute(\"quaternion\", orientation.x + \" \" + orientation.y + \" \" + orientation.z + \" \" + orientation.w);\n            newEntity.setAttribute(\"scale\", scale.x + \" \" + scale.y + \" \" + scale.z);\n            newEntity.setAttribute(\"oid\", uuid.v4().toString());\n            if (newEntity.flushToDOM) {\n                newEntity.flushToDOM(true);\n            }\n            this.client.storeEntity(newEntity.outerHTML, position.x, position.y, position.z).catch(error => {\n                console.error(\"Error saving entity\", error);\n            });\n        }\n    }\n    removeEntity(entity) {\n        if (this.client) {\n            const entitySid = entity.getAttribute(\"sid\");\n            if (entitySid) {\n                //console.log(\"removing from storage\");\n                const position = entity.object3D.position.clone();\n                const worldPosition = entity.object3D.getWorldPosition(position);\n                this.client.removeStoredEntity(entitySid, worldPosition.x, worldPosition.y, worldPosition.z).catch(error => {\n                    //console.log(\"Error removing entity.\", error);\n                });\n            }\n            //console.log(\"removing locally\");\n            entity.parentElement.removeChild(entity);\n        }\n    }\n}\nSpaceSystemController.DEFINITION = new aframe_typescript_boilerplate_1.SystemControllerDefinition(\"space\", {}, (system, scene, data) => new SpaceSystemController(system, scene, data));\nexports.SpaceSystemController = SpaceSystemController;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/browser/system/space/SpaceSystemController.ts\n");

/***/ }),

/***/ "./src/browser/system/space/Spring.ts":
/*!********************************************!*\
  !*** ./src/browser/system/space/Spring.ts ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst three_1 = __webpack_require__(/*! three */ \"three\");\nclass Spring {\n    constructor() {\n        this.relaxationTime = 0.45;\n        this.currentPosition = new three_1.Vector3();\n        this.targetPosition = new three_1.Vector3();\n        this.temporary = new three_1.Vector3();\n        this.currentOrientation = new three_1.Quaternion();\n        this.targetOrientation = new three_1.Quaternion();\n    }\n    simulate(t) {\n        if (t > 0.04) {\n            t = 0.04;\n        }\n        // Calculate distance between current position and target position.\n        const totalDistance = this.currentPosition.distanceTo(this.targetPosition);\n        let v = Math.pow(totalDistance / this.relaxationTime, 2);\n        if (v < 0.3) {\n            v = 0.3;\n        }\n        let s = v * t;\n        if (s > totalDistance * 0.5) {\n            s = totalDistance * 0.5;\n        }\n        // Calculate normalized direction vector between current position and target position.\n        this.temporary.copy(this.targetPosition);\n        this.temporary.sub(this.currentPosition).normalize();\n        // Calculate delta vector.\n        this.temporary.multiplyScalar(s);\n        // Add delta to current position-\n        this.currentPosition.add(this.temporary);\n        // Interpolate orientation change\n        this.currentOrientation.slerp(this.targetOrientation, t / this.relaxationTime);\n        this.currentOrientation.normalize();\n    }\n}\nexports.Spring = Spring;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9zeXN0ZW0vc3BhY2UvU3ByaW5nLnRzPzcwOTciXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwwREFBMEM7QUFFMUMsTUFBYSxNQUFNO0lBQW5CO1FBR0ksbUJBQWMsR0FBVyxJQUFJLENBQUM7UUFDOUIsb0JBQWUsR0FBWSxJQUFJLGVBQU8sRUFBRSxDQUFDO1FBQ3pDLG1CQUFjLEdBQVksSUFBSSxlQUFPLEVBQUUsQ0FBQztRQUN4QyxjQUFTLEdBQVksSUFBSSxlQUFPLEVBQUUsQ0FBQztRQUVuQyx1QkFBa0IsR0FBZSxJQUFJLGtCQUFVLEVBQUUsQ0FBQztRQUNsRCxzQkFBaUIsR0FBZSxJQUFJLGtCQUFVLEVBQUUsQ0FBQztJQW1DckQsQ0FBQztJQWhDRyxRQUFRLENBQUMsQ0FBUztRQUNkLElBQUksQ0FBQyxHQUFHLElBQUksRUFBRTtZQUNWLENBQUMsR0FBRyxJQUFJLENBQUM7U0FDWjtRQUVELG1FQUFtRTtRQUNuRSxNQUFNLGFBQWEsR0FBRyxJQUFJLENBQUMsZUFBZSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDLENBQUM7UUFDM0UsSUFBSSxDQUFDLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxhQUFhLEdBQUcsSUFBSSxDQUFDLGNBQWMsRUFBRSxDQUFDLENBQUMsQ0FBQztRQUN6RCxJQUFJLENBQUMsR0FBRyxHQUFHLEVBQUU7WUFDVCxDQUFDLEdBQUcsR0FBRyxDQUFDO1NBQ1g7UUFDRCxJQUFJLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ2QsSUFBSSxDQUFDLEdBQUcsYUFBYSxHQUFHLEdBQUcsRUFBRTtZQUN6QixDQUFDLEdBQUcsYUFBYSxHQUFHLEdBQUcsQ0FBQztTQUMzQjtRQUVELHNGQUFzRjtRQUN0RixJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDLENBQUM7UUFDekMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLGVBQWUsQ0FBQyxDQUFDLFNBQVMsRUFBRSxDQUFDO1FBRXJELDBCQUEwQjtRQUMxQixJQUFJLENBQUMsU0FBUyxDQUFDLGNBQWMsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUVqQyxpQ0FBaUM7UUFDakMsSUFBSSxDQUFDLGVBQWUsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBRXpDLGlDQUFpQztRQUNqQyxJQUFJLENBQUMsa0JBQWtCLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxpQkFBaUIsRUFBRSxDQUFDLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FBQyxDQUFDO1FBQy9FLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxTQUFTLEVBQUUsQ0FBQztJQUV4QyxDQUFDO0NBRUo7QUE1Q0Qsd0JBNENDIiwiZmlsZSI6Ii4vc3JjL2Jyb3dzZXIvc3lzdGVtL3NwYWNlL1NwcmluZy50cy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7UXVhdGVybmlvbiwgVmVjdG9yM30gZnJvbSBcInRocmVlXCI7XG5cbmV4cG9ydCBjbGFzcyBTcHJpbmcge1xuXG5cbiAgICByZWxheGF0aW9uVGltZTogbnVtYmVyID0gMC40NTtcbiAgICBjdXJyZW50UG9zaXRpb246IFZlY3RvcjMgPSBuZXcgVmVjdG9yMygpO1xuICAgIHRhcmdldFBvc2l0aW9uOiBWZWN0b3IzID0gbmV3IFZlY3RvcjMoKTtcbiAgICB0ZW1wb3Jhcnk6IFZlY3RvcjMgPSBuZXcgVmVjdG9yMygpO1xuXG4gICAgY3VycmVudE9yaWVudGF0aW9uOiBRdWF0ZXJuaW9uID0gbmV3IFF1YXRlcm5pb24oKTtcbiAgICB0YXJnZXRPcmllbnRhdGlvbjogUXVhdGVybmlvbiA9IG5ldyBRdWF0ZXJuaW9uKCk7XG5cblxuICAgIHNpbXVsYXRlKHQ6IG51bWJlcikge1xuICAgICAgICBpZiAodCA+IDAuMDQpIHtcbiAgICAgICAgICAgIHQgPSAwLjA0O1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gQ2FsY3VsYXRlIGRpc3RhbmNlIGJldHdlZW4gY3VycmVudCBwb3NpdGlvbiBhbmQgdGFyZ2V0IHBvc2l0aW9uLlxuICAgICAgICBjb25zdCB0b3RhbERpc3RhbmNlID0gdGhpcy5jdXJyZW50UG9zaXRpb24uZGlzdGFuY2VUbyh0aGlzLnRhcmdldFBvc2l0aW9uKTtcbiAgICAgICAgbGV0IHYgPSBNYXRoLnBvdyh0b3RhbERpc3RhbmNlIC8gdGhpcy5yZWxheGF0aW9uVGltZSwgMik7XG4gICAgICAgIGlmICh2IDwgMC4zKSB7XG4gICAgICAgICAgICB2ID0gMC4zO1xuICAgICAgICB9XG4gICAgICAgIGxldCBzID0gdiAqIHQ7XG4gICAgICAgIGlmIChzID4gdG90YWxEaXN0YW5jZSAqIDAuNSkge1xuICAgICAgICAgICAgcyA9IHRvdGFsRGlzdGFuY2UgKiAwLjU7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBDYWxjdWxhdGUgbm9ybWFsaXplZCBkaXJlY3Rpb24gdmVjdG9yIGJldHdlZW4gY3VycmVudCBwb3NpdGlvbiBhbmQgdGFyZ2V0IHBvc2l0aW9uLlxuICAgICAgICB0aGlzLnRlbXBvcmFyeS5jb3B5KHRoaXMudGFyZ2V0UG9zaXRpb24pO1xuICAgICAgICB0aGlzLnRlbXBvcmFyeS5zdWIodGhpcy5jdXJyZW50UG9zaXRpb24pLm5vcm1hbGl6ZSgpO1xuXG4gICAgICAgIC8vIENhbGN1bGF0ZSBkZWx0YSB2ZWN0b3IuXG4gICAgICAgIHRoaXMudGVtcG9yYXJ5Lm11bHRpcGx5U2NhbGFyKHMpO1xuXG4gICAgICAgIC8vIEFkZCBkZWx0YSB0byBjdXJyZW50IHBvc2l0aW9uLVxuICAgICAgICB0aGlzLmN1cnJlbnRQb3NpdGlvbi5hZGQodGhpcy50ZW1wb3JhcnkpO1xuXG4gICAgICAgIC8vIEludGVycG9sYXRlIG9yaWVudGF0aW9uIGNoYW5nZVxuICAgICAgICB0aGlzLmN1cnJlbnRPcmllbnRhdGlvbi5zbGVycCh0aGlzLnRhcmdldE9yaWVudGF0aW9uLCB0IC8gdGhpcy5yZWxheGF0aW9uVGltZSk7XG4gICAgICAgIHRoaXMuY3VycmVudE9yaWVudGF0aW9uLm5vcm1hbGl6ZSgpO1xuXG4gICAgfVxuXG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/browser/system/space/Spring.ts\n");

/***/ }),

/***/ "./src/browser/system/space/StaticSpace.ts":
/*!*************************************************!*\
  !*** ./src/browser/system/space/StaticSpace.ts ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst xml_js_1 = __webpack_require__(/*! xml-js */ \"./node_modules/xml-js/lib/index.js\");\nconst aframe_typescript_boilerplate_1 = __webpack_require__(/*! aframe-typescript-boilerplate */ \"./node_modules/aframe-typescript-boilerplate/built/index.js\");\nclass StaticSpace {\n    constructor(scene) {\n        this.regionElements = new Map();\n        this.loadingRegions = new Set();\n        this.ignoreNextSetSids = [];\n        this.scene = scene;\n    }\n    connected(region, regionOrigo) {\n        if (!this.regionElements.has(region)) {\n            const regionElement = aframe_typescript_boilerplate_1.createElement('<a-entity merge shadow region=\"' + region + '\" position=\"' + regionOrigo.x + ' ' + regionOrigo.y + ' ' + regionOrigo.z + '\"/>');\n            this.regionElements.set(region, regionElement);\n            this.scene.appendChild(regionElement);\n        }\n        this.addToLoadingRegions(region);\n    }\n    loaded(region) {\n        this.removeFromLoadingRegions(region);\n    }\n    disconnected(region) {\n        if (this.regionElements.has(region)) {\n            const regionElement = this.regionElements.get(region);\n            if (regionElement.parentElement) {\n                regionElement.parentElement.removeChild(regionElement);\n            }\n            this.regionElements.delete(region);\n        }\n        const elements = document.querySelectorAll('[server=\"' + region + '\"]');\n        elements.forEach(element => {\n            if (element.parentElement) {\n                element.parentElement.removeChild(element);\n            }\n        });\n        this.removeFromLoadingRegions(region);\n    }\n    addToLoadingRegions(region) {\n        if (!this.loadingRegions.has(region)) {\n            this.loadingRegions.add(region);\n            aframe_typescript_boilerplate_1.getSystemController(this.scene, \"loader-system\").increaseLoadingCounter();\n            console.log(\"added to loading regions: \" + region);\n        }\n    }\n    removeFromLoadingRegions(region) {\n        if (this.loadingRegions.has(region)) {\n            this.loadingRegions.delete(region);\n            aframe_typescript_boilerplate_1.getSystemController(this.scene, \"loader-system\").decreaseLoadingCounter();\n            console.log(\"removed from loading regions: \" + region);\n        }\n    }\n    setRootEntity(region, sid, entityXml) {\n        if (this.ignoreNextSetSids.indexOf(sid) > -1) {\n            this.ignoreNextSetSids.splice(this.ignoreNextSetSids.indexOf(sid), 1);\n            return;\n        }\n        //console.log(\"Set root entity \" + region + \"/\" + sid + \": \" + entityXml);\n        const existingElement = this.getElement(sid);\n        if (existingElement) {\n            // Remove old element as it is being replaced.\n            //existingElement.parentElement!!.removeChild(existingElement);\n            const newElement = xml_js_1.xml2js(entityXml).elements[0];\n            this.recursiveUpdate(existingElement, newElement);\n            const modelController = aframe_typescript_boilerplate_1.getComponentController(existingElement, \"model\");\n            if (modelController && modelController.merge) {\n                const mergeSystem = aframe_typescript_boilerplate_1.getSystemController(this.scene, \"merge\");\n                mergeSystem.updateMergeChild(modelController.merge, existingElement);\n            }\n        }\n        else {\n            // If element exists with oid then update that element.\n            const newElement = aframe_typescript_boilerplate_1.createElement(entityXml);\n            const oid = newElement.getAttribute(\"oid\");\n            newElement.setAttribute(\"server\", region);\n            newElement.setAttribute(\"collidable\", \"\");\n            if (oid) {\n                const elements = document.querySelectorAll('[oid=\"' + oid + '\"]');\n                for (const element of elements) {\n                    element.setAttribute(\"sid\", sid);\n                    element.setAttribute(\"server\", region);\n                    return;\n                }\n            }\n            // Add element as element does not exist yet.\n            this.regionElements.get(region).appendChild(newElement);\n        }\n    }\n    recursiveUpdate(existingElement, newElement) {\n        const existingAttributeNames = new Set(existingElement.getAttributeNames());\n        if (newElement.attributes) {\n            for (const attributeName in newElement.attributes) {\n                const value = newElement.attributes[attributeName].toString();\n                if (attributeName != \"model\") {\n                    existingElement.setAttribute(attributeName, value);\n                }\n                existingAttributeNames.delete(attributeName);\n            }\n        }\n        // Remove attribute names not present in new element.\n        for (const attributeName of existingAttributeNames) {\n            existingElement.removeAttribute(attributeName);\n        }\n        const existingChildElements = new Map();\n        for (const child of existingElement.children) {\n            const sid = child.getAttribute(\"sid\");\n            if (sid) {\n                existingChildElements.set(sid, child);\n            }\n        }\n        if (newElement.elements) {\n            for (const newChild of newElement.elements) {\n                const sid = newChild.attributes[\"sid\"].toString();\n                if (existingChildElements.has(sid)) {\n                    const existingChild = existingChildElements.get(\"sid\");\n                    // Update child recursively.\n                    this.recursiveUpdate(existingChild, newChild);\n                    existingChildElements.delete(sid);\n                }\n                else {\n                    // Append child as new element.\n                    existingElement.appendChild(aframe_typescript_boilerplate_1.createElement(xml_js_1.js2xml(newChild)));\n                }\n            }\n        }\n        // Remove existing children with sid not present in new element.\n        for (const existingChild of existingChildElements.values()) {\n            existingElement.removeChild(existingChild);\n        }\n    }\n    setChildEntity(region, parentSid, sid, entityXml) {\n        if (this.ignoreNextSetSids.indexOf(sid) > -1) {\n            this.ignoreNextSetSids.splice(this.ignoreNextSetSids.indexOf(sid), 1);\n            return;\n        }\n        //console.log(\"Set child entity \" + region + \"/\" + parentSid + \"/\" + sid + \": \" + entityXml);\n        const parentElement = this.getElement(parentSid);\n        if (parentElement === undefined) {\n            //console.log(\"Parent element not found sid: \" + sid);\n            return;\n        }\n        const oldElement = this.getElement(sid);\n        if (oldElement) {\n            // Remove old element as it is being replaced.\n            parentElement.removeChild(oldElement);\n        }\n        const newElement = aframe_typescript_boilerplate_1.createElement(entityXml);\n        newElement.setAttribute(\"server\", region);\n        parentElement.appendChild(newElement);\n    }\n    removeEntity(region, sid) {\n        //console.log(\"Removed entity \" + region + \"/\" + sid);\n        const element = this.getElement(sid);\n        if (element === undefined) {\n            //console.log(\"Element to be removed not found sid: \" + sid);\n            return;\n        }\n        if (element.parentElement) {\n            element.parentElement.removeChild(element);\n        }\n        aframe_typescript_boilerplate_1.getSystemController(this.scene, \"state\").removeStates(element);\n    }\n    getElement(sid) {\n        const elements = document.querySelectorAll('[sid=\"' + sid + '\"]');\n        if (!elements || elements.length == 0) {\n            return undefined;\n        }\n        if (elements.length > 1) {\n            //console.log(\"More than one element found with sid: \" + sid);\n            return undefined;\n        }\n        return elements.item(0);\n    }\n}\nexports.StaticSpace = StaticSpace;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/browser/system/space/StaticSpace.ts\n");

/***/ }),

/***/ "./src/browser/system/state/StateSystemController.ts":
/*!***********************************************************!*\
  !*** ./src/browser/system/state/StateSystemController.ts ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst aframe_typescript_boilerplate_1 = __webpack_require__(/*! aframe-typescript-boilerplate */ \"./node_modules/aframe-typescript-boilerplate/built/index.js\");\nconst factories = new Map();\nfunction registerStateFactory(state, factory) {\n    factories.set(state, factory);\n}\nexports.registerStateFactory = registerStateFactory;\nclass StateSystemController extends aframe_typescript_boilerplate_1.AbstractSystemController {\n    constructor(system, scene, data) {\n        super(system, scene, data);\n        this.states = new Map();\n    }\n    init() {\n    }\n    pause() {\n    }\n    play() {\n    }\n    tick(time, timeDelta) {\n    }\n    getState(entity, state) {\n        if (!factories.has(state)) {\n            throw new Error(\"Unknown state type: \" + state);\n        }\n        if (!this.states.has(entity)) {\n            this.states.set(entity, new Map());\n        }\n        const entityStates = this.states.get(entity);\n        if (!entityStates.has(state)) {\n            entityStates.set(state, factories.get(state)());\n            //console.log(entity.tagName + \" added state: \" + state);\n        }\n        return entityStates.get(state);\n    }\n    removeStates(entity) {\n        this.states.delete(entity);\n        //console.log(entity.tagName + \" removed states.\");\n    }\n    removeState(entity, state) {\n        if (this.states.has(entity)) {\n            this.states.get(entity).delete(state);\n        }\n        //console.log(entity.tagName + \" removed state: \" + state);\n    }\n}\nStateSystemController.DEFINITION = new aframe_typescript_boilerplate_1.SystemControllerDefinition(\"state\", {}, (system, scene, data) => new StateSystemController(system, scene, data));\nexports.StateSystemController = StateSystemController;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9zeXN0ZW0vc3RhdGUvU3RhdGVTeXN0ZW1Db250cm9sbGVyLnRzP2IzNjIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFDQSxnS0FBbUc7QUFFbkcsTUFBTSxTQUFTLEdBQTJCLElBQUksR0FBRyxFQUFFLENBQUM7QUFFcEQsU0FBZ0Isb0JBQW9CLENBQUksS0FBYSxFQUFFLE9BQWdCO0lBQ25FLFNBQVMsQ0FBQyxHQUFHLENBQUMsS0FBSyxFQUFFLE9BQU8sQ0FBQyxDQUFDO0FBQ2xDLENBQUM7QUFGRCxvREFFQztBQUdELE1BQWEscUJBQXNCLFNBQVEsd0RBQXdCO0lBUy9ELFlBQVksTUFBYyxFQUFFLEtBQVksRUFBRSxJQUFTO1FBQy9DLEtBQUssQ0FBQyxNQUFNLEVBQUUsS0FBSyxFQUFFLElBQUksQ0FBQyxDQUFDO1FBSHZCLFdBQU0sR0FBa0MsSUFBSSxHQUFHLEVBQUUsQ0FBQztJQUkxRCxDQUFDO0lBRUQsSUFBSTtJQUNKLENBQUM7SUFFRCxLQUFLO0lBQ0wsQ0FBQztJQUVELElBQUk7SUFDSixDQUFDO0lBRUQsSUFBSSxDQUFDLElBQVksRUFBRSxTQUFpQjtJQUNwQyxDQUFDO0lBRUQsUUFBUSxDQUFJLE1BQWMsRUFBRSxLQUFhO1FBQ3JDLElBQUksQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxFQUFFO1lBQ3ZCLE1BQU0sSUFBSSxLQUFLLENBQUMsc0JBQXNCLEdBQUcsS0FBSyxDQUFDLENBQUM7U0FDbkQ7UUFDRCxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLEVBQUU7WUFDMUIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsTUFBTSxFQUFFLElBQUksR0FBRyxFQUFFLENBQUMsQ0FBQztTQUN0QztRQUNELE1BQU0sWUFBWSxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBRyxDQUFDO1FBQy9DLElBQUksQ0FBQyxZQUFZLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxFQUFFO1lBQzFCLFlBQVksQ0FBQyxHQUFHLENBQUMsS0FBSyxFQUFFLFNBQVMsQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFHLEVBQUUsQ0FBQyxDQUFDO1lBQ2xELHlEQUF5RDtTQUM1RDtRQUNELE9BQU8sWUFBWSxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUcsQ0FBQztJQUNyQyxDQUFDO0lBRUQsWUFBWSxDQUFDLE1BQWM7UUFDdkIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDM0IsbURBQW1EO0lBQ3ZELENBQUM7SUFFRCxXQUFXLENBQUMsTUFBYyxFQUFFLEtBQWE7UUFDckMsSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsRUFBRTtZQUN6QixJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUcsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUM7U0FDM0M7UUFDRCwyREFBMkQ7SUFDL0QsQ0FBQzs7QUFoRGEsZ0NBQVUsR0FBRyxJQUFJLDBEQUEwQixDQUNyRCxPQUFPLEVBQUUsRUFBRSxFQUNYLENBQUMsTUFBYyxFQUFFLEtBQVksRUFBRSxJQUFTLEVBQUUsRUFBRSxDQUFDLElBQUkscUJBQXFCLENBQUMsTUFBTSxFQUFFLEtBQUssRUFBRSxJQUFJLENBQUMsQ0FDOUYsQ0FBQztBQUxOLHNEQW9EQyIsImZpbGUiOiIuL3NyYy9icm93c2VyL3N5c3RlbS9zdGF0ZS9TdGF0ZVN5c3RlbUNvbnRyb2xsZXIudHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NvbXBvbmVudCwgRW50aXR5LCBTY2VuZSwgU3lzdGVtfSBmcm9tIFwiYWZyYW1lXCI7XG5pbXBvcnQge0Fic3RyYWN0U3lzdGVtQ29udHJvbGxlciwgU3lzdGVtQ29udHJvbGxlckRlZmluaXRpb259IGZyb20gXCJhZnJhbWUtdHlwZXNjcmlwdC1ib2lsZXJwbGF0ZVwiO1xuXG5jb25zdCBmYWN0b3JpZXM6IE1hcDxzdHJpbmcsICgpID0+IGFueT4gPSBuZXcgTWFwKCk7XG5cbmV4cG9ydCBmdW5jdGlvbiByZWdpc3RlclN0YXRlRmFjdG9yeTxUPihzdGF0ZTogc3RyaW5nLCBmYWN0b3J5OiAoKSA9PiBUKSB7XG4gICAgZmFjdG9yaWVzLnNldChzdGF0ZSwgZmFjdG9yeSk7XG59XG5cblxuZXhwb3J0IGNsYXNzIFN0YXRlU3lzdGVtQ29udHJvbGxlciBleHRlbmRzIEFic3RyYWN0U3lzdGVtQ29udHJvbGxlciB7XG5cbiAgICBwdWJsaWMgc3RhdGljIERFRklOSVRJT04gPSBuZXcgU3lzdGVtQ29udHJvbGxlckRlZmluaXRpb24oXG4gICAgICAgIFwic3RhdGVcIiwge30sXG4gICAgICAgIChzeXN0ZW06IFN5c3RlbSwgc2NlbmU6IFNjZW5lLCBkYXRhOiBhbnkpID0+IG5ldyBTdGF0ZVN5c3RlbUNvbnRyb2xsZXIoc3lzdGVtLCBzY2VuZSwgZGF0YSlcbiAgICApO1xuXG4gICAgcHJpdmF0ZSBzdGF0ZXM6IE1hcDxFbnRpdHksIE1hcDxzdHJpbmcsIGFueT4+ID0gbmV3IE1hcCgpO1xuXG4gICAgY29uc3RydWN0b3Ioc3lzdGVtOiBTeXN0ZW0sIHNjZW5lOiBTY2VuZSwgZGF0YTogYW55KSB7XG4gICAgICAgIHN1cGVyKHN5c3RlbSwgc2NlbmUsIGRhdGEpO1xuICAgIH1cblxuICAgIGluaXQoKTogdm9pZCB7XG4gICAgfVxuXG4gICAgcGF1c2UoKTogdm9pZCB7XG4gICAgfVxuXG4gICAgcGxheSgpOiB2b2lkIHtcbiAgICB9XG5cbiAgICB0aWNrKHRpbWU6IG51bWJlciwgdGltZURlbHRhOiBudW1iZXIpOiB2b2lkIHtcbiAgICB9XG5cbiAgICBnZXRTdGF0ZTxUPihlbnRpdHk6IEVudGl0eSwgc3RhdGU6IHN0cmluZyk6IFQge1xuICAgICAgICBpZiAoIWZhY3Rvcmllcy5oYXMoc3RhdGUpKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJVbmtub3duIHN0YXRlIHR5cGU6IFwiICsgc3RhdGUpO1xuICAgICAgICB9XG4gICAgICAgIGlmICghdGhpcy5zdGF0ZXMuaGFzKGVudGl0eSkpIHtcbiAgICAgICAgICAgIHRoaXMuc3RhdGVzLnNldChlbnRpdHksIG5ldyBNYXAoKSk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgZW50aXR5U3RhdGVzID0gdGhpcy5zdGF0ZXMuZ2V0KGVudGl0eSkhITtcbiAgICAgICAgaWYgKCFlbnRpdHlTdGF0ZXMuaGFzKHN0YXRlKSkge1xuICAgICAgICAgICAgZW50aXR5U3RhdGVzLnNldChzdGF0ZSwgZmFjdG9yaWVzLmdldChzdGF0ZSkhISgpKTtcbiAgICAgICAgICAgIC8vY29uc29sZS5sb2coZW50aXR5LnRhZ05hbWUgKyBcIiBhZGRlZCBzdGF0ZTogXCIgKyBzdGF0ZSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGVudGl0eVN0YXRlcy5nZXQoc3RhdGUpISE7XG4gICAgfVxuXG4gICAgcmVtb3ZlU3RhdGVzKGVudGl0eTogRW50aXR5KTogdm9pZCB7XG4gICAgICAgIHRoaXMuc3RhdGVzLmRlbGV0ZShlbnRpdHkpO1xuICAgICAgICAvL2NvbnNvbGUubG9nKGVudGl0eS50YWdOYW1lICsgXCIgcmVtb3ZlZCBzdGF0ZXMuXCIpO1xuICAgIH1cblxuICAgIHJlbW92ZVN0YXRlKGVudGl0eTogRW50aXR5LCBzdGF0ZTogc3RyaW5nKTogdm9pZCB7XG4gICAgICAgIGlmICh0aGlzLnN0YXRlcy5oYXMoZW50aXR5KSkge1xuICAgICAgICAgICAgdGhpcy5zdGF0ZXMuZ2V0KGVudGl0eSkhIS5kZWxldGUoc3RhdGUpO1xuICAgICAgICB9XG4gICAgICAgIC8vY29uc29sZS5sb2coZW50aXR5LnRhZ05hbWUgKyBcIiByZW1vdmVkIHN0YXRlOiBcIiArIHN0YXRlKTtcbiAgICB9XG5cbn1cblxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/browser/system/state/StateSystemController.ts\n");

/***/ }),

/***/ "./src/browser/system/ui/UiSystemController.ts":
/*!*****************************************************!*\
  !*** ./src/browser/system/ui/UiSystemController.ts ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst aframe_typescript_boilerplate_1 = __webpack_require__(/*! aframe-typescript-boilerplate */ \"./node_modules/aframe-typescript-boilerplate/built/index.js\");\nconst three_1 = __webpack_require__(/*! three */ \"three\");\nclass UiSystemController extends aframe_typescript_boilerplate_1.AbstractSystemController {\n    constructor(system, scene, data) {\n        super(system, scene, data);\n        this.uiFrame = undefined;\n        this.viewStack = new Array();\n    }\n    init() {\n        this.uiFrame = aframe_typescript_boilerplate_1.createElement(\"<a-entity id='ui-frame'/>\");\n        this.scene.appendChild(this.uiFrame);\n    }\n    pause() {\n    }\n    play() {\n    }\n    tick(time, timeDelta) {\n    }\n    show() {\n        this.uiFrame.setAttribute(\"visible\", true);\n        const interfaceSystem = this.getSystemController(\"interface\");\n        const cameraPosition = interfaceSystem.cameraPosition;\n        const cameraDirection = interfaceSystem.cameraDirection;\n        const uiPosition = new three_1.Vector3(cameraDirection.x, 0, cameraDirection.z);\n        uiPosition.multiplyScalar(0.8);\n        uiPosition.add(cameraPosition);\n        const uiObject = this.uiFrame.object3D;\n        const direction = new three_1.Vector3().copy(uiPosition).sub(cameraPosition).normalize();\n        direction.y = 0;\n        direction.normalize();\n        const uiNormal = uiObject.localToWorld(new three_1.Vector3(0, 0, -1)).sub(uiObject.localToWorld(new three_1.Vector3(0, 0, 0))).normalize();\n        uiNormal.y = 0;\n        uiNormal.normalize();\n        const quaternion = new three_1.Quaternion(); // create one and reuse it\n        quaternion.setFromUnitVectors(uiNormal, direction);\n        uiObject.position.copy(uiPosition);\n        uiObject.quaternion.copy(quaternion.multiply(uiObject.quaternion));\n    }\n    hide() {\n        this.uiFrame.setAttribute(\"visible\", false);\n    }\n    pushView(viewTemplate) {\n        const first = this.viewStack.length == 0;\n        if (this.viewStack.length > 0) {\n            const currentView = this.viewStack[this.viewStack.length - 1];\n            this.uiFrame.removeChild(currentView);\n        }\n        const newView = aframe_typescript_boilerplate_1.createElement(viewTemplate);\n        this.viewStack.push(newView);\n        this.uiFrame.appendChild(newView);\n        if (first) {\n            this.show();\n        }\n    }\n    popView() {\n        if (this.viewStack.length > 0) {\n            const currentView = this.viewStack.pop();\n            this.uiFrame.removeChild(currentView);\n        }\n        if (this.viewStack.length > 0) {\n            const currentView = this.viewStack[this.viewStack.length - 1];\n            this.uiFrame.appendChild(currentView);\n        }\n        const last = this.viewStack.length == 0;\n        if (last) {\n            this.hide();\n        }\n    }\n}\nUiSystemController.DEFINITION = new aframe_typescript_boilerplate_1.SystemControllerDefinition(\"ui\", {}, (system, scene, data) => new UiSystemController(system, scene, data));\nexports.UiSystemController = UiSystemController;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/browser/system/ui/UiSystemController.ts\n");

/***/ }),

/***/ "./src/browser/system/ui/view/ExampleView.html":
/*!*****************************************************!*\
  !*** ./src/browser/system/ui/view/ExampleView.html ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (\"<a-ui panel-size=\\\"1 1\\\" render-size=\\\"3.3 3.3\\\" render-resolution=\\\"2048 2048\\\">\\n\\n    <a-ui-scroll-pane position=\\\"0 0 0\\\" width=\\\"3.0\\\" height=\\\"3.0\\\" scroll-z-offset=\\\"0.001\\\" look-controls-el=\\\"#camera\\\">\\n\\n        <a-entity class=\\\"container\\\">\\n\\n            <!--Introduction-->\\n            <a-entity width=\\\"2.9\\\">\\n\\n                <a-ui-text font-size=\\\"20\\\" value=\\\"Introduction\\\"></a-ui-text>\\n                <a-ui-text font-size=\\\"14\\\" value=\\\"Here we have some material UI based primitives and components for use in your aframe projects.\\\"></a-ui-text>\\n                <a-ui-text font-size=\\\"20\\\" value=\\\"Scroll Pane\\\"></a-ui-text>\\n                <a-ui-text font-size=\\\"14\\\" value=\\\"All of these primitive elements are enclosed inside a scroll pane. Elements out of view are automatically clipped. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\\\"></a-ui-text>\\n\\n            </a-entity>\\n\\n            <!-- Left Panel -->\\n            <a-entity width=\\\"1.35\\\">\\n\\n                <!-- Buttons -->\\n                <a-entity width=\\\"1.25\\\">\\n\\n                    <a-ui-text font-size=\\\"20\\\" value=\\\"Buttons\\\"></a-ui-text>\\n\\n                    <a-ui-button class=\\\"intersectable\\\" text-value=\\\"Button\\\" ui-rounded=\\\"borderRadius:0.025;\\\"></a-ui-button>\\n                    <a-ui-button class=\\\"intersectable\\\" text-value=\\\"Disabled\\\" ui-rounded=\\\"borderRadius:0.025;\\\" disabled=\\\"true\\\" font-color=\\\"#cfcfcf\\\" color=\\\"#efefef\\\"></a-ui-button>\\n\\n                </a-entity>\\n\\n                <!--Checkbox-->\\n                <a-entity width=\\\"1.25\\\">\\n                    <a-ui-text font-size=\\\"20\\\" value=\\\"Checkbox\\\"></a-ui-text>\\n                    <a-ui-checkbox ></a-ui-checkbox>\\n                    <a-ui-checkbox value=\\\"true\\\" ></a-ui-checkbox>\\n                    <a-ui-checkbox indeterminate=\\\"true\\\" ></a-ui-checkbox>\\n                    <a-ui-checkbox disabled=\\\"true\\\" ></a-ui-checkbox>\\n                </a-entity>\\n\\n                <!--Switch-->\\n                <a-entity width=\\\"1.25\\\">\\n                    <a-ui-text font-size=\\\"20\\\" value=\\\"Switch\\\"></a-ui-text>\\n                    <a-ui-switch></a-ui-switch>\\n                    <a-ui-switch disabled=\\\"true\\\"></a-ui-switch>\\n                </a-entity>\\n\\n                <!--Radio Group-->\\n                <a-entity width=\\\"1.25\\\">\\n                    <a-ui-text font-size=\\\"20\\\" value=\\\"Radio\\\"></a-ui-text>\\n                    <a-ui-radio></a-ui-radio>\\n                    <a-ui-radio selected=\\\"true\\\"></a-ui-radio>\\n                    <a-ui-radio></a-ui-radio>\\n                    <a-ui-radio disabled=\\\"true\\\"></a-ui-radio>\\n                </a-entity>\\n\\n                <!-- Slider -->\\n                <a-entity width=\\\"1.25\\\">\\n\\n                    <a-ui-text font-size=\\\"20\\\" value=\\\"Slider\\\"></a-ui-text>\\n\\n                    <a-ui-slider camera-el=\\\"#camera\\\" value=\\\"0.5\\\"></a-ui-slider>\\n\\n                </a-entity>\\n\\n            </a-entity>\\n\\n            <!-- Right Panel -->\\n            <a-entity width=\\\"1.35\\\">\\n\\n                <!--Text Input-->\\n                <a-entity width=\\\"1.25\\\">\\n                    <a-ui-text font-size=\\\"20\\\" value=\\\"Text\\\"></a-ui-text>\\n                    <a-ui-input-text camera-el=\\\"#camera\\\" width=\\\"1\\\" height=\\\"0.2\\\" value=\\\"\\\"></a-ui-input-text>\\n                </a-entity>\\n\\n                <!--Number Input-->\\n                <a-entity width=\\\"1.25\\\">\\n                    <a-ui-text font-size=\\\"20\\\" value=\\\"Number\\\"></a-ui-text>\\n                    <a-ui-input-text camera-el=\\\"#camera\\\" width=\\\"0.45\\\" height=\\\"0.2\\\" type=\\\"number\\\" value=\\\"0.00\\\" place-holder=\\\"Number...\\\"></a-ui-input-text>\\n                    <a-ui-number></a-ui-number>\\n                </a-entity>\\n\\n                <!--Int Input-->\\n                <a-entity width=\\\"1.25\\\">\\n                    <a-ui-text font-size=\\\"20\\\" value=\\\"Integer\\\"></a-ui-text>\\n                    <a-ui-input-text camera-el=\\\"#camera\\\" width=\\\"1\\\" height=\\\"0.2\\\" type=\\\"int\\\" value=\\\"10\\\" place-holder=\\\"Whole Number...\\\"></a-ui-input-text>\\n                </a-entity>\\n\\n                <!--Password Input-->\\n                <a-entity width=\\\"1.25\\\">\\n                    <a-ui-text font-size=\\\"20\\\" value=\\\"Password\\\"></a-ui-text>\\n                    <a-ui-input-text camera-el=\\\"#camera\\\" width=\\\"1\\\" height=\\\"0.2\\\" type=\\\"password\\\" place-holder=\\\"Password...\\\"></a-ui-input-text>\\n                </a-entity>\\n\\n                <!--Ripple-->\\n                <a-entity width=\\\"1.25\\\">\\n                    <a-ui-text font-size=\\\"20\\\" value=\\\"Ripple\\\"></a-ui-text>\\n                    <a-plane class=\\\"intersectable\\\" shader=\\\"flat\\\" width=\\\"0.25\\\" height=\\\"0.2\\\" color=\\\"#673ab7\\\" ui-ripple=\\\"size:0.25 0.2;clampToSquare:true;zIndex:0.001;color:white;\\\"></a-plane>\\n                    <a-triangle class=\\\"intersectable\\\" shader=\\\"flat\\\" vertex-a=\\\"0 0.075 0\\\" vertex-b=\\\"-0.075 -0.075 0\\\" vertex-c=\\\"0.075 -0.075 0\\\" color=\\\"#ec407a\\\" ui-ripple=\\\"size:0.15 0.15;zIndex:-0.001;color:#f48fb1; duration:500;fadeDuration:250;\\\"  width=\\\"0.25\\\" height=\\\"0.2\\\"></a-triangle>\\n                </a-entity>\\n\\n                <a-entity width=\\\"1.25\\\">\\n                    <a-ui-text font-size=\\\"20\\\" value=\\\"Floating Action Buttons\\\"></a-ui-text>\\n                    <a-ui-fab-button class=\\\"intersectable\\\" color=\\\"#f44336\\\"></a-ui-fab-button>\\n                    <a-ui-fab-button-small class=\\\"intersectable\\\" color=\\\"#2196f3\\\"></a-ui-fab-button-small>\\n                    <a-ui-fab-button-small class=\\\"intersectable\\\" disabled=\\\"true\\\" color=\\\"#afafaf\\\" ripple-color=\\\"#afafaf\\\"></a-ui-fab-button-small>\\n                </a-entity>\\n\\n            </a-entity>\\n\\n        </a-entity>\\n\\n    </a-ui-scroll-pane>\\n\\n</a-ui>\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/browser/system/ui/view/ExampleView.html\n");

/***/ }),

/***/ "./src/browser/system/ui/view/ExampleView.ts":
/*!***************************************************!*\
  !*** ./src/browser/system/ui/view/ExampleView.ts ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst aframe_1 = __importDefault(__webpack_require__(/*! aframe */ \"aframe\"));\nconst aframe_typescript_boilerplate_1 = __webpack_require__(/*! aframe-typescript-boilerplate */ \"./node_modules/aframe-typescript-boilerplate/built/index.js\");\nconst ExampleView_html_1 = __importDefault(__webpack_require__(/*! ./ExampleView.html */ \"./src/browser/system/ui/view/ExampleView.html\"));\nconst util_1 = __webpack_require__(/*! ../../../util */ \"./src/browser/util.ts\");\nclass ExampleView extends aframe_typescript_boilerplate_1.AbstractComponentController {\n    constructor(component, entity, data) {\n        super(component, entity, data);\n        this.template = ExampleView_html_1.default;\n    }\n    init() {\n        const elements = util_1.createElements(this.template);\n        for (const element of elements) {\n            this.entity.append(element);\n        }\n    }\n    update(data, oldData) {\n    }\n    remove() {\n        //console.log(this.componentName + \" remove\");\n    }\n    pause() {\n        //console.log(this.componentName + \" pause\");\n    }\n    play() {\n        //console.log(this.componentName + \" play\");\n    }\n    tick(time, timeDelta) {\n    }\n}\nExampleView.DEFINITION = new aframe_typescript_boilerplate_1.ComponentControllerDefinition(\"example-view\", {}, false, false, (component, entity, data) => new ExampleView(component, entity, data));\nexports.ExampleView = ExampleView;\naframe_1.default.registerPrimitive('a-example-view', aframe_1.default.utils.extendDeep({}, aframe_1.default.primitives.getMeshMixin(), {\n    defaultComponents: {\n        \"example-view\": {}\n    },\n    mappings: {}\n}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9zeXN0ZW0vdWkvdmlldy9FeGFtcGxlVmlldy50cz8wZTA3Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsOEVBQTRCO0FBRTVCLGdLQUF3SDtBQUN4SCwySUFBOEM7QUFDOUMsaUZBQTZDO0FBRTdDLE1BQWEsV0FBWSxTQUFRLDJEQUEyQjtJQVF4RCxZQUFZLFNBQW9CLEVBQUUsTUFBYyxFQUFFLElBQVM7UUFDdkQsS0FBSyxDQUFDLFNBQVMsRUFBRSxNQUFNLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFIbkMsYUFBUSxHQUFHLDBCQUFZLENBQUM7SUFJeEIsQ0FBQztJQUVELElBQUk7UUFDQSxNQUFNLFFBQVEsR0FBRyxxQkFBYyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUMvQyxLQUFLLE1BQU0sT0FBTyxJQUFJLFFBQVEsRUFBRTtZQUM1QixJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsQ0FBQztTQUMvQjtJQUNMLENBQUM7SUFFRCxNQUFNLENBQUMsSUFBUyxFQUFFLE9BQVk7SUFFOUIsQ0FBQztJQUVELE1BQU07UUFDRiw4Q0FBOEM7SUFDbEQsQ0FBQztJQUVELEtBQUs7UUFDRCw2Q0FBNkM7SUFDakQsQ0FBQztJQUVELElBQUk7UUFDQSw0Q0FBNEM7SUFDaEQsQ0FBQztJQUVELElBQUksQ0FBQyxJQUFZLEVBQUUsU0FBaUI7SUFFcEMsQ0FBQzs7QUFuQ2Esc0JBQVUsR0FBRyxJQUFJLDZEQUE2QixDQUFDLGNBQWMsRUFBRSxFQUFFLEVBQzNFLEtBQUssRUFBRSxLQUFLLEVBQUUsQ0FBQyxTQUFvQixFQUFFLE1BQWMsRUFBRSxJQUFTLEVBQUUsRUFBRSxDQUFDLElBQUksV0FBVyxDQUFDLFNBQVMsRUFBRSxNQUFNLEVBQUUsSUFBSSxDQUFDLENBQUMsQ0FBQztBQUhySCxrQ0F1Q0M7QUFFRCxnQkFBTSxDQUFDLGlCQUFpQixDQUFDLGdCQUFnQixFQUFFLGdCQUFNLENBQUMsS0FBSyxDQUFDLFVBQVUsQ0FBQyxFQUFFLEVBQUUsZ0JBQU0sQ0FBQyxVQUFVLENBQUMsWUFBWSxFQUFFLEVBQUU7SUFDckcsaUJBQWlCLEVBQUU7UUFDZixjQUFjLEVBQUMsRUFBRTtLQUNwQjtJQUNELFFBQVEsRUFBRSxFQUNUO0NBQ0osQ0FBQyxDQUFDLENBQUMiLCJmaWxlIjoiLi9zcmMvYnJvd3Nlci9zeXN0ZW0vdWkvdmlldy9FeGFtcGxlVmlldy50cy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBBRlJBTUUgZnJvbSBcImFmcmFtZVwiO1xuaW1wb3J0IHtDb21wb25lbnQsIEVudGl0eX0gZnJvbSBcImFmcmFtZVwiO1xuaW1wb3J0IHtBYnN0cmFjdENvbXBvbmVudENvbnRyb2xsZXIsIENvbXBvbmVudENvbnRyb2xsZXJEZWZpbml0aW9uLCBjcmVhdGVFbGVtZW50fSBmcm9tIFwiYWZyYW1lLXR5cGVzY3JpcHQtYm9pbGVycGxhdGVcIjtcbmltcG9ydCB0ZW1wbGF0ZUh0bWwgZnJvbSAnLi9FeGFtcGxlVmlldy5odG1sJztcbmltcG9ydCB7Y3JlYXRlRWxlbWVudHN9IGZyb20gXCIuLi8uLi8uLi91dGlsXCI7XG5cbmV4cG9ydCBjbGFzcyBFeGFtcGxlVmlldyBleHRlbmRzIEFic3RyYWN0Q29tcG9uZW50Q29udHJvbGxlciB7XG5cbiAgICBwdWJsaWMgc3RhdGljIERFRklOSVRJT04gPSBuZXcgQ29tcG9uZW50Q29udHJvbGxlckRlZmluaXRpb24oXCJleGFtcGxlLXZpZXdcIiwge30sXG4gICAgICAgIGZhbHNlLCBmYWxzZSwgKGNvbXBvbmVudDogQ29tcG9uZW50LCBlbnRpdHk6IEVudGl0eSwgZGF0YTogYW55KSA9PiBuZXcgRXhhbXBsZVZpZXcoY29tcG9uZW50LCBlbnRpdHksIGRhdGEpKTtcblxuXG4gICAgdGVtcGxhdGUgPSB0ZW1wbGF0ZUh0bWw7XG5cbiAgICBjb25zdHJ1Y3Rvcihjb21wb25lbnQ6IENvbXBvbmVudCwgZW50aXR5OiBFbnRpdHksIGRhdGE6IGFueSkge1xuICAgICAgICBzdXBlcihjb21wb25lbnQsIGVudGl0eSwgZGF0YSk7XG4gICAgfVxuXG4gICAgaW5pdCgpOiB2b2lkIHtcbiAgICAgICAgY29uc3QgZWxlbWVudHMgPSBjcmVhdGVFbGVtZW50cyh0aGlzLnRlbXBsYXRlKTtcbiAgICAgICAgZm9yIChjb25zdCBlbGVtZW50IG9mIGVsZW1lbnRzKSB7XG4gICAgICAgICAgICB0aGlzLmVudGl0eS5hcHBlbmQoZWxlbWVudCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICB1cGRhdGUoZGF0YTogYW55LCBvbGREYXRhOiBhbnkpOiB2b2lkIHtcblxuICAgIH1cblxuICAgIHJlbW92ZSgpOiB2b2lkIHtcbiAgICAgICAgLy9jb25zb2xlLmxvZyh0aGlzLmNvbXBvbmVudE5hbWUgKyBcIiByZW1vdmVcIik7XG4gICAgfVxuXG4gICAgcGF1c2UoKTogdm9pZCB7XG4gICAgICAgIC8vY29uc29sZS5sb2codGhpcy5jb21wb25lbnROYW1lICsgXCIgcGF1c2VcIik7XG4gICAgfVxuXG4gICAgcGxheSgpOiB2b2lkIHtcbiAgICAgICAgLy9jb25zb2xlLmxvZyh0aGlzLmNvbXBvbmVudE5hbWUgKyBcIiBwbGF5XCIpO1xuICAgIH1cblxuICAgIHRpY2sodGltZTogbnVtYmVyLCB0aW1lRGVsdGE6IG51bWJlcik6IHZvaWQge1xuXG4gICAgfVxuXG59XG5cbkFGUkFNRS5yZWdpc3RlclByaW1pdGl2ZSgnYS1leGFtcGxlLXZpZXcnLCBBRlJBTUUudXRpbHMuZXh0ZW5kRGVlcCh7fSwgQUZSQU1FLnByaW1pdGl2ZXMuZ2V0TWVzaE1peGluKCksIHtcbiAgICBkZWZhdWx0Q29tcG9uZW50czoge1xuICAgICAgICBcImV4YW1wbGUtdmlld1wiOnt9XG4gICAgfSxcbiAgICBtYXBwaW5nczoge1xuICAgIH1cbn0pKTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/browser/system/ui/view/ExampleView.ts\n");

/***/ }),

/***/ "./src/browser/three/geometry_merge_util.ts":
/*!**************************************************!*\
  !*** ./src/browser/three/geometry_merge_util.ts ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/**\n * @author mrdoob, tlaukkan (copied from threejs BufferGeometryUtil.js typescript and added extendability, dropped morph attributes support)\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst three_1 = __webpack_require__(/*! three */ \"three\");\nclass BufferGeometryMerge {\n    constructor(material) {\n        this.groupOffset = 0;\n        this.indexOffset = 0;\n        this.indexMerge = new Array();\n        this.attributeMerges = new Map();\n        this.geometry = new three_1.BufferGeometry();\n        this.freeObjectIndexes = new Set();\n        this.material = material;\n    }\n}\nexports.BufferGeometryMerge = BufferGeometryMerge;\nclass BufferAttributeMerge {\n    constructor(attribute, offset) {\n        this.objectIndexAttributeRanges = new Map();\n        this.offset = offset;\n        this.attribute = attribute;\n    }\n}\nfunction mergeBufferGeometries(merge, geometries, useGroups) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const mergedGeometry = merge.geometry;\n        if (geometries.length > 0) {\n            const isIndexed = geometries[0].index !== null;\n            const attributeNames = new Set(Object.keys(geometries[0].attributes));\n            const attributes = {};\n            for (let i = 0; i < geometries.length; ++i) {\n                const geometry = geometries[i];\n                // ensure that all geometries are indexed, or none\n                if (isIndexed !== (geometry.index !== null))\n                    throw new Error(\"Inconsistent indexed in merged geometries.\");\n                // gather attributes, exit early if they're different\n                for (const name in geometry.attributes) {\n                    if (!attributeNames.has(name))\n                        throw new Error(\"Inconsistent attributes in merged geometries.\");\n                    if (attributes[name] === undefined)\n                        attributes[name] = [];\n                    if (geometry.mergeObjectIndex === undefined) {\n                        throw new Error(\"Merge object index not defined for merging geometry.\");\n                    }\n                    geometry.attributes[name].mergeObjectIndex = geometry.mergeObjectIndex;\n                    attributes[name].push(geometry.attributes[name]);\n                }\n                mergedGeometry.userData.mergedUserData = mergedGeometry.userData.mergedUserData || [];\n                mergedGeometry.userData.mergedUserData.push(mergedGeometry.userData);\n                if (useGroups) {\n                    let count;\n                    if (isIndexed) {\n                        count = geometry.index.count;\n                    }\n                    else if (geometry.attributes.position !== undefined) {\n                        count = geometry.attributes.position.count;\n                    }\n                    else {\n                        throw new Error(\"Groups used in geometry merging but group count could not be resolved\");\n                    }\n                    mergedGeometry.addGroup(merge.groupOffset, count, i);\n                    merge.groupOffset += count;\n                }\n            }\n            // merge indices\n            if (isIndexed) {\n                for (let i = 0; i < geometries.length; ++i) {\n                    const index = geometries[i].index;\n                    for (let j = 0; j < index.count; ++j) {\n                        merge.indexMerge.push(index.getX(j) + merge.indexOffset);\n                    }\n                    merge.indexOffset += geometries[i].attributes.position.count;\n                }\n                mergedGeometry.setIndex(merge.indexMerge);\n            }\n            for (const name in attributes) {\n                //console.log(name);\n                const arrayLength = sumArrayLength(attributes[name]);\n                if (!merge.attributeMerges.has(name)) {\n                    // Lets add build capacity for 1000 more geometries.\n                    const extendedArrayLength = arrayLength + attributes[name][0].array.length * 1000;\n                    const attributeMerge = createBufferAttributeMerge(attributes[name], extendedArrayLength);\n                    merge.attributeMerges.set(name, attributeMerge);\n                }\n                else {\n                    const attributeMerge = merge.attributeMerges.get(name);\n                    if (attributeMerge.offset + arrayLength >= attributeMerge.attribute.array.length) {\n                        throw new Error(\"merge out of capacity\");\n                    }\n                }\n            }\n            for (const name in attributes) {\n                const mergedAttribute = yield mergeBufferAttributes(merge.attributeMerges.get(name), name, attributes[name]);\n                if (!mergedGeometry.attributes[name]) {\n                    mergedGeometry.addAttribute(name, mergedAttribute.attribute);\n                }\n            }\n        }\n        for (const attributeMerge of merge.attributeMerges.values()) {\n            attributeMerge.attribute.needsUpdate = true;\n        }\n        mergedGeometry.computeBoundingSphere();\n        mergedGeometry.computeVertexNormals();\n        return mergedGeometry;\n    });\n}\nexports.mergeBufferGeometries = mergeBufferGeometries;\nfunction createBufferAttributeMerge(attributes, arrayLength) {\n    const array = new attributes[0].array.constructor(arrayLength);\n    const merge = new BufferAttributeMerge(new three_1.BufferAttribute(array, attributes[0].itemSize, attributes[0].normalized), 0);\n    // Zero as no attributes added yet.\n    merge.attribute.count = 0;\n    return merge;\n}\nfunction sumArrayLength(attributes) {\n    let arrayLength = 0;\n    for (let i = 0; i < attributes.length; ++i) {\n        arrayLength += attributes[i].array.length;\n    }\n    return arrayLength;\n}\nfunction mergeBufferAttributes(merge, name, attributes) {\n    return __awaiter(this, void 0, void 0, function* () {\n        for (const attribute of attributes) {\n            if (attribute.isInterleavedBufferAttribute)\n                throw new Error(\"Attributes had interleaved attributes..\");\n            yield mergeBufferAttributeWithDelay(merge, attribute);\n        }\n        return merge;\n    });\n}\nlet niceTimeoutCounter = 0;\nfunction mergeBufferAttributeWithDelay(merge, attribute) {\n    return new Promise(function (resolve, reject) {\n        mergeBufferAttribute(merge, attribute).then(() => {\n            niceTimeoutCounter++;\n            if (niceTimeoutCounter % 100 == 0) {\n                setTimeout(() => {\n                    resolve();\n                }, 1);\n            }\n            else {\n                resolve();\n            }\n        }).catch((error) => {\n            reject(error);\n        });\n    });\n}\nfunction mergeBufferAttribute(merge, attribute) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (merge.attribute.itemSize !== attribute.itemSize)\n            throw new Error(\"Inconsistent item size in merged attributes.\");\n        if (merge.attribute.normalized !== attribute.normalized)\n            throw new Error(\"Inconsistent normalized in merged attributes.\");\n        const mergeObjectIndex = attribute.mergeObjectIndex;\n        if (mergeObjectIndex === undefined) {\n            throw new Error(\"Merge object index not defined for merging attribute.\");\n        }\n        if (!merge.objectIndexAttributeRanges.has(mergeObjectIndex)) {\n            merge.objectIndexAttributeRanges.set(mergeObjectIndex, []);\n        }\n        merge.objectIndexAttributeRanges.get(mergeObjectIndex).push([merge.offset, attribute.array.length]);\n        merge.attribute.array.set(attribute.array, merge.offset);\n        merge.attribute.count = merge.attribute.count + attribute.array.length / attribute.itemSize;\n        merge.offset += attribute.array.length;\n    });\n}\nfunction clearBufferGeometries(merge, geometries) {\n    const mergedGeometry = merge.geometry;\n    if (geometries.length > 0) {\n        const attributes = {};\n        for (let i = 0; i < geometries.length; ++i) {\n            const geometry = geometries[i];\n            for (const name in geometry.attributes) {\n                if (attributes[name] === undefined)\n                    attributes[name] = [];\n                if (geometry.mergeObjectIndex === undefined) {\n                    throw new Error(\"Merge object index not defined for merging geometry.\");\n                }\n                // Store merge object index to free object indexes.\n                if (!merge.freeObjectIndexes.has(geometry.mergeObjectIndex)) {\n                    merge.freeObjectIndexes.add(geometry.mergeObjectIndex);\n                }\n                geometry.attributes[name].mergeObjectIndex = geometry.mergeObjectIndex;\n                attributes[name].push(geometry.attributes[name]);\n            }\n        }\n        for (const name in attributes) {\n            if (name == \"position\") { // clear only positions to disable the geometry\n                clearBufferAttributes(merge.attributeMerges.get(name), name, attributes[name]);\n            }\n        }\n    }\n    for (const attributeMerge of merge.attributeMerges.values()) {\n        attributeMerge.attribute.needsUpdate = true;\n    }\n    return mergedGeometry;\n}\nexports.clearBufferGeometries = clearBufferGeometries;\nfunction clearBufferAttributes(merge, name, attributes) {\n    for (const attribute of attributes) {\n        clearBufferAttribute(merge, attribute);\n    }\n}\nfunction clearBufferAttribute(merge, attribute) {\n    if (merge.attribute.itemSize !== attribute.itemSize)\n        throw new Error(\"Inconsistent item size in merged attributes.\");\n    if (merge.attribute.normalized !== attribute.normalized)\n        throw new Error(\"Inconsistent normalized in merged attributes.\");\n    const mergeObjectIndex = attribute.mergeObjectIndex;\n    if (mergeObjectIndex === undefined) {\n        throw new Error(\"Merge object index not defined for merging attribute.\");\n    }\n    if (!merge.objectIndexAttributeRanges.has(mergeObjectIndex)) {\n        throw new Error(\"Merge object index does not have attribute ranges to clear.\");\n    }\n    for (const range of merge.objectIndexAttributeRanges.get(mergeObjectIndex)) {\n        const offset = range[0];\n        const length = range[1];\n        for (let i = 0; i < length; i++) {\n            merge.attribute.array[offset + i] = 0;\n        }\n    }\n}\nfunction updateBufferGeometries(merge, geometries) {\n    const mergedGeometry = merge.geometry;\n    if (geometries.length > 0) {\n        const attributes = {};\n        for (let i = 0; i < geometries.length; ++i) {\n            const geometry = geometries[i];\n            for (const name in geometry.attributes) {\n                if (attributes[name] === undefined)\n                    attributes[name] = [];\n                if (geometry.mergeObjectIndex === undefined) {\n                    throw new Error(\"Merge object index not defined for merging geometry.\");\n                }\n                geometry.attributes[name].mergeObjectIndex = geometry.mergeObjectIndex;\n                attributes[name].push(geometry.attributes[name]);\n            }\n        }\n        for (const name in attributes) {\n            if (name == \"position\") { // update only positions to disable the geometry\n                updateBufferAttributes(merge.attributeMerges.get(name), name, attributes[name]);\n            }\n        }\n    }\n    for (const attributeMerge of merge.attributeMerges.values()) {\n        attributeMerge.attribute.needsUpdate = true;\n    }\n    mergedGeometry.computeBoundingSphere();\n    mergedGeometry.computeVertexNormals();\n    return mergedGeometry;\n}\nexports.updateBufferGeometries = updateBufferGeometries;\nfunction updateBufferAttributes(merge, name, attributes) {\n    for (const attribute of attributes) {\n        updateBufferAttribute(merge, attribute);\n    }\n}\nfunction updateBufferAttribute(merge, attribute) {\n    if (merge.attribute.itemSize !== attribute.itemSize)\n        throw new Error(\"Inconsistent item size in merged attributes.\");\n    if (merge.attribute.normalized !== attribute.normalized)\n        throw new Error(\"Inconsistent normalized in merged attributes.\");\n    const mergeObjectIndex = attribute.mergeObjectIndex;\n    if (mergeObjectIndex === undefined) {\n        throw new Error(\"Merge object index not defined for merging attribute.\");\n    }\n    if (!merge.objectIndexAttributeRanges.has(mergeObjectIndex)) {\n        throw new Error(\"Merge object index does not have attribute ranges to clear.\");\n    }\n    for (const range of merge.objectIndexAttributeRanges.get(mergeObjectIndex)) {\n        const offset = range[0];\n        const length = range[1];\n        for (let i = 0; i < length; i++) {\n            merge.attribute.array[offset + i] = attribute.array[i];\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/browser/three/geometry_merge_util.ts\n");

/***/ }),

/***/ "./src/browser/three/gltf_load.ts":
/*!****************************************!*\
  !*** ./src/browser/three/gltf_load.ts ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst three_1 = __webpack_require__(/*! three */ \"three\");\nconst merge_util_1 = __webpack_require__(/*! ./merge_util */ \"./src/browser/three/merge_util.ts\");\nconst models = new Map();\nconst modelLoadedCallbacks = new Map();\nfunction setEntityGltfModel(entity, src) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const gltf = yield getGltfModel(src);\n        let mesh = merge_util_1.cloneObject3D(gltf.scene) || merge_util_1.cloneObject3D(gltf.scenes[0]);\n        mesh.animations = gltf.animations;\n        entity.setObject3D('mesh', mesh);\n        entity.emit('model-loaded', { format: 'gltf', model: mesh });\n    });\n}\nexports.setEntityGltfModel = setEntityGltfModel;\nfunction getGltfModel(src) {\n    return new Promise(function (resolve, reject) {\n        if (!models.has(src)) {\n            if (!modelLoadedCallbacks.has(src)) {\n                modelLoadedCallbacks.set(src, []);\n                loadGltfModelQueue(src).then(() => {\n                    modelLoadedCallbacks.get(src).push(() => {\n                        invokeCallbackWithDelay(src, reject, resolve);\n                    });\n                });\n            }\n            else {\n                modelLoadedCallbacks.get(src).push(() => {\n                    invokeCallbackWithDelay(src, reject, resolve);\n                });\n            }\n        }\n        else {\n            setTimeout(() => {\n                resolve(models.get(src));\n            }, 50);\n        }\n    });\n}\nexports.getGltfModel = getGltfModel;\nfunction invokeCallbackWithDelay(src, reject, resolve) {\n    if (!models.has(src)) {\n        console.error(\"GLTF manager - reporting to waiter that loading failed: \" + src);\n        reject(new Error(\"Loading has failed: \" + src));\n    }\n    else {\n        setTimeout(() => {\n            resolve(models.get(src));\n        }, 50);\n    }\n}\nfunction loadGltfModelQueue(src) {\n    return __awaiter(this, void 0, void 0, function* () {\n        while (!(yield attemptGltfModelWithDelay(src))) { }\n    });\n}\nfunction attemptGltfModelWithDelay(src) {\n    return new Promise(function (resolve, reject) {\n        try {\n            setTimeout(() => __awaiter(this, void 0, void 0, function* () {\n                if (loading) {\n                    resolve(false);\n                    return;\n                }\n                yield loadGltfModel(src);\n                resolve(true);\n            }), Math.random() * 300);\n        }\n        catch (error) {\n            reject(error);\n        }\n    });\n}\nlet loading = false;\nfunction setMaterialAnisotropy(material) {\n    if (material.map) {\n        console.log('disabled mipmaps.');\n        material.map.anisotropy = 2;\n        material.map.generateMipmaps = false;\n        material.map.minFilter = three_1.LinearFilter;\n    }\n}\nfunction setObjectMaterialAnisotropy(object) {\n    if (object.type == \"Mesh\") {\n        const mesh = object;\n        if (mesh.material instanceof Array) {\n            const materials = mesh.material;\n            for (const material of materials) {\n                setMaterialAnisotropy(material);\n            }\n        }\n        else if (mesh.material) {\n            setMaterialAnisotropy(mesh.material);\n        }\n    }\n    if (object.children) {\n        for (const child of object.children) {\n            setObjectMaterialAnisotropy(child);\n        }\n    }\n}\nfunction loadGltfModel(src) {\n    return __awaiter(this, void 0, void 0, function* () {\n        loading = true;\n        const loader = new three_1.GLTFLoader();\n        loader.load(src, function (gltf) {\n            let scene = (gltf.scene || gltf.scenes[0]);\n            setObjectMaterialAnisotropy(scene);\n            //console.log(\"GLTF manager - loaded: \" + src);\n            models.set(src, gltf);\n            for (const modelLoaded of modelLoadedCallbacks.get(src)) {\n                modelLoaded();\n            }\n            modelLoadedCallbacks.delete(src);\n            loading = false;\n        }, undefined /* onProgress */, function (error) {\n            console.error(\"GLTF manager - loading failed: \" + src, error);\n            for (const modelLoaded of modelLoadedCallbacks.get(src)) {\n                modelLoaded();\n            }\n            modelLoadedCallbacks.delete(src);\n            loading = false;\n        });\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/browser/three/gltf_load.ts\n");

/***/ }),

/***/ "./src/browser/three/merge_util.ts":
/*!*****************************************!*\
  !*** ./src/browser/three/merge_util.ts ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst three_1 = __webpack_require__(/*! three */ \"three\");\nconst geometry_merge_util_1 = __webpack_require__(/*! ./geometry_merge_util */ \"./src/browser/three/geometry_merge_util.ts\");\nclass ObjectMerge {\n    constructor() {\n        this.group = new three_1.Group();\n        this.geometryMerges = new Map();\n        this.objectOffset = 0;\n    }\n}\nexports.ObjectMerge = ObjectMerge;\nfunction mergeObject3Ds(merge, objects) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const geometryDataMap = new Map();\n        for (const object of objects) {\n            yield collectBufferGeometries(merge, object, geometryDataMap);\n        }\n        const allGeometryIds = new Set();\n        for (const geometryId of geometryDataMap.keys()) {\n            allGeometryIds.add(geometryId);\n        }\n        for (const geometryId of merge.geometryMerges.keys()) {\n            allGeometryIds.add(geometryId);\n        }\n        for (const geometryId of allGeometryIds) {\n            const geometries = new Array();\n            const geometryDataArray = geometryDataMap.get(geometryId);\n            if (geometryDataArray) {\n                //console.log(geometryId + \": \" + geometryDataMap.get(geometryId)!!.length);\n                const material = geometryDataArray[0].material;\n                for (const geometryData of geometryDataArray) {\n                    geometries.push(geometryData.geometry);\n                }\n                if (!merge.geometryMerges.has(geometryId)) {\n                    //console.log(\"adding geometry merge: \" + geometryId);\n                    const geometryMerge = new geometry_merge_util_1.BufferGeometryMerge(material);\n                    merge.geometryMerges.set(geometryId, geometryMerge);\n                    const mesh = new three_1.Mesh(geometryMerge.geometry, geometryMerge.material);\n                    mesh.castShadow = true;\n                    mesh.receiveShadow = true;\n                    merge.group.add(mesh);\n                }\n            }\n            const geometryMerge = merge.geometryMerges.get(geometryId);\n            yield geometry_merge_util_1.mergeBufferGeometries(geometryMerge, geometries, false);\n        }\n    });\n}\nexports.mergeObject3Ds = mergeObject3Ds;\nfunction clearObject3Ds(merge, objects) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const geometryDataMap = new Map();\n        // TODO Optimize this for clearing so that geometries are not cloned.\n        for (const object of objects) {\n            yield collectBufferGeometries(merge, object, geometryDataMap);\n        }\n        for (const geometryId of geometryDataMap.keys()) {\n            const geometries = new Array();\n            const geometryDataArray = geometryDataMap.get(geometryId);\n            if (geometryDataArray) {\n                for (const geometryData of geometryDataArray) {\n                    geometries.push(geometryData.geometry);\n                }\n            }\n            geometry_merge_util_1.clearBufferGeometries(merge.geometryMerges.get(geometryId), geometries);\n        }\n    });\n}\nexports.clearObject3Ds = clearObject3Ds;\nfunction updateObject3Ds(merge, objects) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const geometryDataMap = new Map();\n        for (const object of objects) {\n            yield collectBufferGeometries(merge, object, geometryDataMap);\n        }\n        for (const geometryId of geometryDataMap.keys()) {\n            const geometries = new Array();\n            const geometryDataArray = geometryDataMap.get(geometryId);\n            if (geometryDataArray) {\n                for (const geometryData of geometryDataArray) {\n                    geometries.push(geometryData.geometry);\n                }\n            }\n            geometry_merge_util_1.updateBufferGeometries(merge.geometryMerges.get(geometryId), geometries);\n        }\n    });\n}\nexports.updateObject3Ds = updateObject3Ds;\nclass GeometryData {\n    constructor(geometry, material) {\n        this.geometry = geometry;\n        this.material = material;\n    }\n}\nfunction collectChildBufferGeometries(merge, children, geometries) {\n    return __awaiter(this, void 0, void 0, function* () {\n        for (const child of children) {\n            yield collectBufferGeometriesWithDelay(merge, child, geometries);\n        }\n    });\n}\nlet niceTimeoutCounter = 0;\nfunction collectBufferGeometriesWithDelay(merge, object, geometries) {\n    return new Promise(function (resolve, reject) {\n        collectBufferGeometries(merge, object, geometries).then(() => {\n            niceTimeoutCounter++;\n            if (niceTimeoutCounter % 50 == 0) {\n                setTimeout(() => {\n                    resolve();\n                }, 1);\n            }\n            else {\n                resolve();\n            }\n        }).catch((error) => {\n            reject(error);\n        });\n    });\n}\nfunction collectBufferGeometries(merge, object, geometries) {\n    return __awaiter(this, void 0, void 0, function* () {\n        //console.log(\"collecting buffer geometries...\");\n        object.updateMatrix();\n        object.updateMatrixWorld(true);\n        //console.log(child.type);\n        if (object.type == \"Mesh\") {\n            const mesh = object;\n            const geometryUuid = mesh.geometry.uuid;\n            const geometry = mesh.geometry.clone();\n            if (object.userData.mergeObjectIndex === undefined) {\n                throw new Error(\"Merge object index of merging object is undefined.\");\n            }\n            geometry.mergeObjectIndex = object.userData.mergeObjectIndex;\n            if (geometry.type == \"BufferGeometry\") {\n                const bufferGeometry = geometry;\n                const material = mesh.material;\n                geometry.applyMatrix(mesh.matrixWorld);\n                if (!geometries.has(geometryUuid)) {\n                    geometries.set(geometryUuid, []);\n                }\n                geometries.get(geometryUuid).push(new GeometryData(bufferGeometry, material));\n            }\n        }\n        if (object.children && object.children.length > 0) {\n            yield collectChildBufferGeometries(merge, object.children, geometries);\n        }\n    });\n}\nfunction cloneObject3D(source) {\n    const target = cloneObject3DCore(source);\n    target.name = source.name;\n    target.up.copy(source.up);\n    target.position.copy(source.position);\n    target.quaternion.copy(source.quaternion);\n    target.scale.copy(source.scale);\n    target.matrix.copy(source.matrix);\n    target.matrixWorld.copy(source.matrixWorld);\n    target.matrixAutoUpdate = source.matrixAutoUpdate;\n    target.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n    target.layers.mask = source.layers.mask;\n    target.visible = source.visible;\n    target.castShadow = source.castShadow;\n    target.receiveShadow = source.receiveShadow;\n    target.frustumCulled = source.frustumCulled;\n    target.renderOrder = source.renderOrder;\n    target.userData = JSON.parse(JSON.stringify(source.userData));\n    for (let i = 0; i < source.children.length; i++) {\n        const child = source.children[i];\n        target.add(cloneObject3D(child));\n    }\n    return target;\n}\nexports.cloneObject3D = cloneObject3D;\nfunction cloneObject3DCore(source) {\n    if (source.type == \"Mesh\") {\n        const target = new three_1.Mesh(source.geometry, source.material);\n        three_1.Object3D.prototype.clone.call(source, target);\n        return target;\n    }\n    else {\n        return new source.constructor();\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci90aHJlZS9tZXJnZV91dGlsLnRzP2UwNmQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBLDBEQUE0RztBQUM1Ryw2SEFLK0I7QUFFL0IsTUFBYSxXQUFXO0lBQXhCO1FBRUksVUFBSyxHQUFVLElBQUksYUFBSyxFQUFFLENBQUM7UUFDM0IsbUJBQWMsR0FBcUMsSUFBSSxHQUFHLEVBQUUsQ0FBQztRQUU3RCxpQkFBWSxHQUFHLENBQUMsQ0FBQztJQUNyQixDQUFDO0NBQUE7QUFORCxrQ0FNQztBQUVELFNBQXNCLGNBQWMsQ0FBQyxLQUFrQixFQUFFLE9BQXdCOztRQUM3RSxNQUFNLGVBQWUsR0FBRyxJQUFJLEdBQUcsRUFBK0IsQ0FBQztRQUMvRCxLQUFLLE1BQU0sTUFBTSxJQUFJLE9BQU8sRUFBRTtZQUMxQixNQUFNLHVCQUF1QixDQUFDLEtBQUssRUFBRSxNQUFNLEVBQUUsZUFBZSxDQUFDLENBQUM7U0FDakU7UUFFRCxNQUFNLGNBQWMsR0FBZ0IsSUFBSSxHQUFHLEVBQUUsQ0FBQztRQUM5QyxLQUFLLE1BQU0sVUFBVSxJQUFJLGVBQWUsQ0FBQyxJQUFJLEVBQUUsRUFBRTtZQUM3QyxjQUFjLENBQUMsR0FBRyxDQUFDLFVBQVUsQ0FBQyxDQUFDO1NBQ2xDO1FBRUQsS0FBSyxNQUFNLFVBQVUsSUFBSSxLQUFLLENBQUMsY0FBYyxDQUFDLElBQUksRUFBRSxFQUFFO1lBQ2xELGNBQWMsQ0FBQyxHQUFHLENBQUMsVUFBVSxDQUFDLENBQUM7U0FDbEM7UUFFRCxLQUFLLE1BQU0sVUFBVSxJQUFJLGNBQWMsRUFBRTtZQUVyQyxNQUFNLFVBQVUsR0FBRyxJQUFJLEtBQUssRUFBa0IsQ0FBQztZQUUvQyxNQUFNLGlCQUFpQixHQUFHLGVBQWUsQ0FBQyxHQUFHLENBQUMsVUFBVSxDQUFDLENBQUM7WUFDMUQsSUFBSSxpQkFBaUIsRUFBRTtnQkFDbkIsNEVBQTRFO2dCQUM1RSxNQUFNLFFBQVEsR0FBRyxpQkFBaUIsQ0FBQyxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUM7Z0JBQy9DLEtBQUssTUFBTSxZQUFZLElBQUksaUJBQWlCLEVBQUU7b0JBQzFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLFFBQVEsQ0FBQyxDQUFDO2lCQUMxQztnQkFDRCxJQUFJLENBQUMsS0FBSyxDQUFDLGNBQWMsQ0FBQyxHQUFHLENBQUMsVUFBVSxDQUFDLEVBQUU7b0JBQ3ZDLHNEQUFzRDtvQkFDdEQsTUFBTSxhQUFhLEdBQUcsSUFBSSx5Q0FBbUIsQ0FBQyxRQUFRLENBQUMsQ0FBQztvQkFDeEQsS0FBSyxDQUFDLGNBQWMsQ0FBQyxHQUFHLENBQUMsVUFBVSxFQUFFLGFBQWEsQ0FBQyxDQUFDO29CQUNwRCxNQUFNLElBQUksR0FBRyxJQUFJLFlBQUksQ0FBQyxhQUFhLENBQUMsUUFBUSxFQUFFLGFBQWEsQ0FBQyxRQUFRLENBQUMsQ0FBQztvQkFDdEUsSUFBSSxDQUFDLFVBQVUsR0FBRyxJQUFJLENBQUM7b0JBQ3ZCLElBQUksQ0FBQyxhQUFhLEdBQUcsSUFBSSxDQUFDO29CQUMxQixLQUFLLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQztpQkFDekI7YUFDSjtZQUVELE1BQU0sYUFBYSxHQUFHLEtBQUssQ0FBQyxjQUFjLENBQUMsR0FBRyxDQUFDLFVBQVUsQ0FBRyxDQUFDO1lBQzdELE1BQU0sMkNBQXFCLENBQUMsYUFBYSxFQUFFLFVBQVUsRUFBRSxLQUFLLENBQUMsQ0FBQztTQUNqRTtJQUNMLENBQUM7Q0FBQTtBQXhDRCx3Q0F3Q0M7QUFFRCxTQUFzQixjQUFjLENBQUMsS0FBa0IsRUFBRSxPQUF3Qjs7UUFDN0UsTUFBTSxlQUFlLEdBQUcsSUFBSSxHQUFHLEVBQStCLENBQUM7UUFFL0QscUVBQXFFO1FBQ3JFLEtBQUssTUFBTSxNQUFNLElBQUksT0FBTyxFQUFFO1lBQzFCLE1BQU0sdUJBQXVCLENBQUMsS0FBSyxFQUFFLE1BQU0sRUFBRSxlQUFlLENBQUMsQ0FBQztTQUNqRTtRQUVELEtBQUssTUFBTSxVQUFVLElBQUksZUFBZSxDQUFDLElBQUksRUFBRSxFQUFFO1lBRTdDLE1BQU0sVUFBVSxHQUFHLElBQUksS0FBSyxFQUFrQixDQUFDO1lBRS9DLE1BQU0saUJBQWlCLEdBQUcsZUFBZSxDQUFDLEdBQUcsQ0FBQyxVQUFVLENBQUMsQ0FBQztZQUMxRCxJQUFJLGlCQUFpQixFQUFFO2dCQUNuQixLQUFLLE1BQU0sWUFBWSxJQUFJLGlCQUFpQixFQUFFO29CQUMxQyxVQUFVLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxRQUFRLENBQUMsQ0FBQztpQkFDMUM7YUFDSjtZQUVELDJDQUFxQixDQUFDLEtBQUssQ0FBQyxjQUFjLENBQUMsR0FBRyxDQUFDLFVBQVUsQ0FBRyxFQUFFLFVBQVUsQ0FBQyxDQUFDO1NBQzdFO0lBQ0wsQ0FBQztDQUFBO0FBckJELHdDQXFCQztBQUVELFNBQXNCLGVBQWUsQ0FBQyxLQUFrQixFQUFFLE9BQXdCOztRQUM5RSxNQUFNLGVBQWUsR0FBRyxJQUFJLEdBQUcsRUFBK0IsQ0FBQztRQUUvRCxLQUFLLE1BQU0sTUFBTSxJQUFJLE9BQU8sRUFBRTtZQUMxQixNQUFNLHVCQUF1QixDQUFDLEtBQUssRUFBRSxNQUFNLEVBQUUsZUFBZSxDQUFDLENBQUM7U0FDakU7UUFFRCxLQUFLLE1BQU0sVUFBVSxJQUFJLGVBQWUsQ0FBQyxJQUFJLEVBQUUsRUFBRTtZQUU3QyxNQUFNLFVBQVUsR0FBRyxJQUFJLEtBQUssRUFBa0IsQ0FBQztZQUUvQyxNQUFNLGlCQUFpQixHQUFHLGVBQWUsQ0FBQyxHQUFHLENBQUMsVUFBVSxDQUFDLENBQUM7WUFDMUQsSUFBSSxpQkFBaUIsRUFBRTtnQkFDbkIsS0FBSyxNQUFNLFlBQVksSUFBSSxpQkFBaUIsRUFBRTtvQkFDMUMsVUFBVSxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsUUFBUSxDQUFDLENBQUM7aUJBQzFDO2FBQ0o7WUFFRCw0Q0FBc0IsQ0FBQyxLQUFLLENBQUMsY0FBYyxDQUFDLEdBQUcsQ0FBQyxVQUFVLENBQUcsRUFBRSxVQUFVLENBQUMsQ0FBQztTQUM5RTtJQUNMLENBQUM7Q0FBQTtBQXBCRCwwQ0FvQkM7QUFFRCxNQUFNLFlBQVk7SUFLZCxZQUFZLFFBQXdCLEVBQUUsUUFBZ0M7UUFDbEUsSUFBSSxDQUFDLFFBQVEsR0FBRyxRQUFRLENBQUM7UUFDekIsSUFBSSxDQUFDLFFBQVEsR0FBRyxRQUFRLENBQUM7SUFDN0IsQ0FBQztDQUNKO0FBR0QsU0FBZSw0QkFBNEIsQ0FBQyxLQUFrQixFQUFFLFFBQW9CLEVBQUUsVUFBNEM7O1FBQzlILEtBQUssTUFBTSxLQUFLLElBQUksUUFBUSxFQUFFO1lBQzFCLE1BQU0sZ0NBQWdDLENBQUMsS0FBSyxFQUFFLEtBQUssRUFBRSxVQUFVLENBQUMsQ0FBQztTQUNwRTtJQUNMLENBQUM7Q0FBQTtBQUVELElBQUksa0JBQWtCLEdBQUcsQ0FBQyxDQUFDO0FBRTNCLFNBQVMsZ0NBQWdDLENBQUMsS0FBa0IsRUFBRSxNQUFnQixFQUFFLFVBQTRDO0lBQ3hILE9BQU8sSUFBSSxPQUFPLENBQUMsVUFBVSxPQUFPLEVBQUUsTUFBTTtRQUN4Qyx1QkFBdUIsQ0FBQyxLQUFLLEVBQUUsTUFBTSxFQUFFLFVBQVUsQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUU7WUFDekQsa0JBQWtCLEVBQUUsQ0FBQztZQUNyQixJQUFJLGtCQUFrQixHQUFHLEVBQUUsSUFBSSxDQUFDLEVBQUU7Z0JBQzlCLFVBQVUsQ0FBQyxHQUFHLEVBQUU7b0JBQ1osT0FBTyxFQUFFLENBQUM7Z0JBQ2QsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO2FBQ1Q7aUJBQU07Z0JBQ0gsT0FBTyxFQUFFLENBQUM7YUFDYjtRQUNMLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLEtBQUssRUFBRSxFQUFFO1lBQ2YsTUFBTSxDQUFDLEtBQUssQ0FBQztRQUNqQixDQUFDLENBQUMsQ0FBQztJQUNQLENBQUMsQ0FBQyxDQUFDO0FBQ1AsQ0FBQztBQUVELFNBQWUsdUJBQXVCLENBQUMsS0FBa0IsRUFBRSxNQUFnQixFQUFFLFVBQTRDOztRQUNySCxpREFBaUQ7UUFDakQsTUFBTSxDQUFDLFlBQVksRUFBRSxDQUFDO1FBQ3RCLE1BQU0sQ0FBQyxpQkFBaUIsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUMvQiwwQkFBMEI7UUFDMUIsSUFBSSxNQUFNLENBQUMsSUFBSSxJQUFJLE1BQU0sRUFBRTtZQUN2QixNQUFNLElBQUksR0FBRyxNQUFjLENBQUM7WUFDNUIsTUFBTSxZQUFZLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUM7WUFDeEMsTUFBTSxRQUFRLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxLQUFLLEVBQUUsQ0FBQztZQUN2QyxJQUFJLE1BQU0sQ0FBQyxRQUFRLENBQUMsZ0JBQWdCLEtBQUssU0FBUyxFQUFFO2dCQUNoRCxNQUFNLElBQUksS0FBSyxDQUFDLG9EQUFvRCxDQUFDLENBQUM7YUFDekU7WUFDQSxRQUFnQixDQUFDLGdCQUFnQixHQUFHLE1BQU0sQ0FBQyxRQUFRLENBQUMsZ0JBQWdCLENBQUM7WUFFdEUsSUFBSSxRQUFRLENBQUMsSUFBSSxJQUFJLGdCQUFnQixFQUFFO2dCQUNuQyxNQUFNLGNBQWMsR0FBRyxRQUEwQixDQUFDO2dCQUNsRCxNQUFNLFFBQVEsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDO2dCQUUvQixRQUFRLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztnQkFFdkMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxHQUFHLENBQUMsWUFBWSxDQUFDLEVBQUU7b0JBQy9CLFVBQVUsQ0FBQyxHQUFHLENBQUMsWUFBWSxFQUFFLEVBQUUsQ0FBQyxDQUFDO2lCQUNwQztnQkFDRCxVQUFVLENBQUMsR0FBRyxDQUFDLFlBQVksQ0FBRyxDQUFDLElBQUksQ0FBQyxJQUFJLFlBQVksQ0FBQyxjQUFjLEVBQUUsUUFBUSxDQUFDLENBQUMsQ0FBQzthQUNuRjtTQUNKO1FBRUQsSUFBSSxNQUFNLENBQUMsUUFBUSxJQUFJLE1BQU0sQ0FBQyxRQUFRLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBRTtZQUMvQyxNQUFNLDRCQUE0QixDQUFDLEtBQUssRUFBRSxNQUFNLENBQUMsUUFBUSxFQUFFLFVBQVUsQ0FBQyxDQUFDO1NBQzFFO0lBQ0wsQ0FBQztDQUFBO0FBRUQsU0FBZ0IsYUFBYSxDQUFDLE1BQWdCO0lBRTFDLE1BQU0sTUFBTSxHQUFHLGlCQUFpQixDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBRXpDLE1BQU0sQ0FBQyxJQUFJLEdBQUcsTUFBTSxDQUFDLElBQUksQ0FBQztJQUMxQixNQUFNLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBRSxNQUFNLENBQUMsRUFBRSxDQUFFLENBQUM7SUFDNUIsTUFBTSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUUsTUFBTSxDQUFDLFFBQVEsQ0FBRSxDQUFDO0lBQ3hDLE1BQU0sQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFFLE1BQU0sQ0FBQyxVQUFVLENBQUUsQ0FBQztJQUM1QyxNQUFNLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBRSxNQUFNLENBQUMsS0FBSyxDQUFFLENBQUM7SUFDbEMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUUsTUFBTSxDQUFDLE1BQU0sQ0FBRSxDQUFDO0lBQ3BDLE1BQU0sQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFFLE1BQU0sQ0FBQyxXQUFXLENBQUUsQ0FBQztJQUM5QyxNQUFNLENBQUMsZ0JBQWdCLEdBQUcsTUFBTSxDQUFDLGdCQUFnQixDQUFDO0lBQ2xELE1BQU0sQ0FBQyxzQkFBc0IsR0FBRyxNQUFNLENBQUMsc0JBQXNCLENBQUM7SUFDOUQsTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUM7SUFDeEMsTUFBTSxDQUFDLE9BQU8sR0FBRyxNQUFNLENBQUMsT0FBTyxDQUFDO0lBQ2hDLE1BQU0sQ0FBQyxVQUFVLEdBQUcsTUFBTSxDQUFDLFVBQVUsQ0FBQztJQUN0QyxNQUFNLENBQUMsYUFBYSxHQUFHLE1BQU0sQ0FBQyxhQUFhLENBQUM7SUFDNUMsTUFBTSxDQUFDLGFBQWEsR0FBRyxNQUFNLENBQUMsYUFBYSxDQUFDO0lBQzVDLE1BQU0sQ0FBQyxXQUFXLEdBQUcsTUFBTSxDQUFDLFdBQVcsQ0FBQztJQUN4QyxNQUFNLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBRSxNQUFNLENBQUMsUUFBUSxDQUFFLENBQUUsQ0FBQztJQUVsRSxLQUFNLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsTUFBTSxDQUFDLFFBQVEsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFHLEVBQUc7UUFDaEQsTUFBTSxLQUFLLEdBQUcsTUFBTSxDQUFDLFFBQVEsQ0FBRSxDQUFDLENBQUUsQ0FBQztRQUNuQyxNQUFNLENBQUMsR0FBRyxDQUFDLGFBQWEsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO0tBQ3BDO0lBRUQsT0FBTyxNQUFNLENBQUM7QUFFbEIsQ0FBQztBQTVCRCxzQ0E0QkM7QUFFRCxTQUFTLGlCQUFpQixDQUFDLE1BQWdCO0lBQ3ZDLElBQUksTUFBTSxDQUFDLElBQUksSUFBSSxNQUFNLEVBQUU7UUFDdkIsTUFBTSxNQUFNLEdBQUcsSUFBSSxZQUFJLENBQUUsTUFBZSxDQUFDLFFBQVEsRUFBRyxNQUFlLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDOUUsZ0JBQVEsQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsTUFBTSxDQUFDLENBQUM7UUFDOUMsT0FBTyxNQUFNLENBQUM7S0FDakI7U0FBTTtRQUNILE9BQU8sSUFBSyxNQUFjLENBQUMsV0FBVyxFQUFFLENBQUM7S0FDNUM7QUFDTCxDQUFDIiwiZmlsZSI6Ii4vc3JjL2Jyb3dzZXIvdGhyZWUvbWVyZ2VfdXRpbC50cy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7QnVmZmVyQXR0cmlidXRlLCBCdWZmZXJHZW9tZXRyeSwgQnVmZmVyR2VvbWV0cnlVdGlscywgR3JvdXAsIE1hdGVyaWFsLCBNZXNoLCBPYmplY3QzRH0gZnJvbSBcInRocmVlXCI7XG5pbXBvcnQge1xuICAgIEJ1ZmZlckdlb21ldHJ5TWVyZ2UsXG4gICAgY2xlYXJCdWZmZXJHZW9tZXRyaWVzLFxuICAgIG1lcmdlQnVmZmVyR2VvbWV0cmllcyxcbiAgICB1cGRhdGVCdWZmZXJHZW9tZXRyaWVzXG59IGZyb20gXCIuL2dlb21ldHJ5X21lcmdlX3V0aWxcIjtcblxuZXhwb3J0IGNsYXNzIE9iamVjdE1lcmdlIHtcblxuICAgIGdyb3VwOiBHcm91cCA9IG5ldyBHcm91cCgpO1xuICAgIGdlb21ldHJ5TWVyZ2VzOiBNYXA8c3RyaW5nLCBCdWZmZXJHZW9tZXRyeU1lcmdlPiA9IG5ldyBNYXAoKTtcblxuICAgIG9iamVjdE9mZnNldCA9IDA7XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtZXJnZU9iamVjdDNEcyhtZXJnZTogT2JqZWN0TWVyZ2UsIG9iamVjdHM6IEFycmF5PE9iamVjdDNEPik6IFByb21pc2U8dm9pZD4ge1xuICAgIGNvbnN0IGdlb21ldHJ5RGF0YU1hcCA9IG5ldyBNYXA8c3RyaW5nLCBBcnJheTxHZW9tZXRyeURhdGE+PigpO1xuICAgIGZvciAoY29uc3Qgb2JqZWN0IG9mIG9iamVjdHMpIHtcbiAgICAgICAgYXdhaXQgY29sbGVjdEJ1ZmZlckdlb21ldHJpZXMobWVyZ2UsIG9iamVjdCwgZ2VvbWV0cnlEYXRhTWFwKTtcbiAgICB9XG5cbiAgICBjb25zdCBhbGxHZW9tZXRyeUlkczogU2V0PHN0cmluZz4gPSBuZXcgU2V0KCk7XG4gICAgZm9yIChjb25zdCBnZW9tZXRyeUlkIG9mIGdlb21ldHJ5RGF0YU1hcC5rZXlzKCkpIHtcbiAgICAgICAgYWxsR2VvbWV0cnlJZHMuYWRkKGdlb21ldHJ5SWQpO1xuICAgIH1cblxuICAgIGZvciAoY29uc3QgZ2VvbWV0cnlJZCBvZiBtZXJnZS5nZW9tZXRyeU1lcmdlcy5rZXlzKCkpIHtcbiAgICAgICAgYWxsR2VvbWV0cnlJZHMuYWRkKGdlb21ldHJ5SWQpO1xuICAgIH1cblxuICAgIGZvciAoY29uc3QgZ2VvbWV0cnlJZCBvZiBhbGxHZW9tZXRyeUlkcykge1xuXG4gICAgICAgIGNvbnN0IGdlb21ldHJpZXMgPSBuZXcgQXJyYXk8QnVmZmVyR2VvbWV0cnk+KCk7XG5cbiAgICAgICAgY29uc3QgZ2VvbWV0cnlEYXRhQXJyYXkgPSBnZW9tZXRyeURhdGFNYXAuZ2V0KGdlb21ldHJ5SWQpO1xuICAgICAgICBpZiAoZ2VvbWV0cnlEYXRhQXJyYXkpIHtcbiAgICAgICAgICAgIC8vY29uc29sZS5sb2coZ2VvbWV0cnlJZCArIFwiOiBcIiArIGdlb21ldHJ5RGF0YU1hcC5nZXQoZ2VvbWV0cnlJZCkhIS5sZW5ndGgpO1xuICAgICAgICAgICAgY29uc3QgbWF0ZXJpYWwgPSBnZW9tZXRyeURhdGFBcnJheVswXS5tYXRlcmlhbDtcbiAgICAgICAgICAgIGZvciAoY29uc3QgZ2VvbWV0cnlEYXRhIG9mIGdlb21ldHJ5RGF0YUFycmF5KSB7XG4gICAgICAgICAgICAgICAgZ2VvbWV0cmllcy5wdXNoKGdlb21ldHJ5RGF0YS5nZW9tZXRyeSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoIW1lcmdlLmdlb21ldHJ5TWVyZ2VzLmhhcyhnZW9tZXRyeUlkKSkge1xuICAgICAgICAgICAgICAgIC8vY29uc29sZS5sb2coXCJhZGRpbmcgZ2VvbWV0cnkgbWVyZ2U6IFwiICsgZ2VvbWV0cnlJZCk7XG4gICAgICAgICAgICAgICAgY29uc3QgZ2VvbWV0cnlNZXJnZSA9IG5ldyBCdWZmZXJHZW9tZXRyeU1lcmdlKG1hdGVyaWFsKTtcbiAgICAgICAgICAgICAgICBtZXJnZS5nZW9tZXRyeU1lcmdlcy5zZXQoZ2VvbWV0cnlJZCwgZ2VvbWV0cnlNZXJnZSk7XG4gICAgICAgICAgICAgICAgY29uc3QgbWVzaCA9IG5ldyBNZXNoKGdlb21ldHJ5TWVyZ2UuZ2VvbWV0cnksIGdlb21ldHJ5TWVyZ2UubWF0ZXJpYWwpO1xuICAgICAgICAgICAgICAgIG1lc2guY2FzdFNoYWRvdyA9IHRydWU7XG4gICAgICAgICAgICAgICAgbWVzaC5yZWNlaXZlU2hhZG93ID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICBtZXJnZS5ncm91cC5hZGQobWVzaCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCBnZW9tZXRyeU1lcmdlID0gbWVyZ2UuZ2VvbWV0cnlNZXJnZXMuZ2V0KGdlb21ldHJ5SWQpISE7XG4gICAgICAgIGF3YWl0IG1lcmdlQnVmZmVyR2VvbWV0cmllcyhnZW9tZXRyeU1lcmdlLCBnZW9tZXRyaWVzLCBmYWxzZSk7XG4gICAgfVxufVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gY2xlYXJPYmplY3QzRHMobWVyZ2U6IE9iamVjdE1lcmdlLCBvYmplY3RzOiBBcnJheTxPYmplY3QzRD4pOiBQcm9taXNlPHZvaWQ+IHtcbiAgICBjb25zdCBnZW9tZXRyeURhdGFNYXAgPSBuZXcgTWFwPHN0cmluZywgQXJyYXk8R2VvbWV0cnlEYXRhPj4oKTtcblxuICAgIC8vIFRPRE8gT3B0aW1pemUgdGhpcyBmb3IgY2xlYXJpbmcgc28gdGhhdCBnZW9tZXRyaWVzIGFyZSBub3QgY2xvbmVkLlxuICAgIGZvciAoY29uc3Qgb2JqZWN0IG9mIG9iamVjdHMpIHtcbiAgICAgICAgYXdhaXQgY29sbGVjdEJ1ZmZlckdlb21ldHJpZXMobWVyZ2UsIG9iamVjdCwgZ2VvbWV0cnlEYXRhTWFwKTtcbiAgICB9XG5cbiAgICBmb3IgKGNvbnN0IGdlb21ldHJ5SWQgb2YgZ2VvbWV0cnlEYXRhTWFwLmtleXMoKSkge1xuXG4gICAgICAgIGNvbnN0IGdlb21ldHJpZXMgPSBuZXcgQXJyYXk8QnVmZmVyR2VvbWV0cnk+KCk7XG5cbiAgICAgICAgY29uc3QgZ2VvbWV0cnlEYXRhQXJyYXkgPSBnZW9tZXRyeURhdGFNYXAuZ2V0KGdlb21ldHJ5SWQpO1xuICAgICAgICBpZiAoZ2VvbWV0cnlEYXRhQXJyYXkpIHtcbiAgICAgICAgICAgIGZvciAoY29uc3QgZ2VvbWV0cnlEYXRhIG9mIGdlb21ldHJ5RGF0YUFycmF5KSB7XG4gICAgICAgICAgICAgICAgZ2VvbWV0cmllcy5wdXNoKGdlb21ldHJ5RGF0YS5nZW9tZXRyeSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBjbGVhckJ1ZmZlckdlb21ldHJpZXMobWVyZ2UuZ2VvbWV0cnlNZXJnZXMuZ2V0KGdlb21ldHJ5SWQpISEsIGdlb21ldHJpZXMpO1xuICAgIH1cbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHVwZGF0ZU9iamVjdDNEcyhtZXJnZTogT2JqZWN0TWVyZ2UsIG9iamVjdHM6IEFycmF5PE9iamVjdDNEPik6IFByb21pc2U8dm9pZD4ge1xuICAgIGNvbnN0IGdlb21ldHJ5RGF0YU1hcCA9IG5ldyBNYXA8c3RyaW5nLCBBcnJheTxHZW9tZXRyeURhdGE+PigpO1xuXG4gICAgZm9yIChjb25zdCBvYmplY3Qgb2Ygb2JqZWN0cykge1xuICAgICAgICBhd2FpdCBjb2xsZWN0QnVmZmVyR2VvbWV0cmllcyhtZXJnZSwgb2JqZWN0LCBnZW9tZXRyeURhdGFNYXApO1xuICAgIH1cblxuICAgIGZvciAoY29uc3QgZ2VvbWV0cnlJZCBvZiBnZW9tZXRyeURhdGFNYXAua2V5cygpKSB7XG5cbiAgICAgICAgY29uc3QgZ2VvbWV0cmllcyA9IG5ldyBBcnJheTxCdWZmZXJHZW9tZXRyeT4oKTtcblxuICAgICAgICBjb25zdCBnZW9tZXRyeURhdGFBcnJheSA9IGdlb21ldHJ5RGF0YU1hcC5nZXQoZ2VvbWV0cnlJZCk7XG4gICAgICAgIGlmIChnZW9tZXRyeURhdGFBcnJheSkge1xuICAgICAgICAgICAgZm9yIChjb25zdCBnZW9tZXRyeURhdGEgb2YgZ2VvbWV0cnlEYXRhQXJyYXkpIHtcbiAgICAgICAgICAgICAgICBnZW9tZXRyaWVzLnB1c2goZ2VvbWV0cnlEYXRhLmdlb21ldHJ5KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHVwZGF0ZUJ1ZmZlckdlb21ldHJpZXMobWVyZ2UuZ2VvbWV0cnlNZXJnZXMuZ2V0KGdlb21ldHJ5SWQpISEsIGdlb21ldHJpZXMpO1xuICAgIH1cbn1cblxuY2xhc3MgR2VvbWV0cnlEYXRhIHtcbiAgICBnZW9tZXRyeTogQnVmZmVyR2VvbWV0cnk7XG4gICAgbWF0ZXJpYWw6IE1hdGVyaWFsIHwgTWF0ZXJpYWwgW107XG5cblxuICAgIGNvbnN0cnVjdG9yKGdlb21ldHJ5OiBCdWZmZXJHZW9tZXRyeSwgbWF0ZXJpYWw6IE1hdGVyaWFsIHwgTWF0ZXJpYWwgW10pIHtcbiAgICAgICAgdGhpcy5nZW9tZXRyeSA9IGdlb21ldHJ5O1xuICAgICAgICB0aGlzLm1hdGVyaWFsID0gbWF0ZXJpYWw7XG4gICAgfVxufVxuXG5cbmFzeW5jIGZ1bmN0aW9uIGNvbGxlY3RDaGlsZEJ1ZmZlckdlb21ldHJpZXMobWVyZ2U6IE9iamVjdE1lcmdlLCBjaGlsZHJlbjogT2JqZWN0M0RbXSwgZ2VvbWV0cmllczogTWFwPHN0cmluZywgQXJyYXk8R2VvbWV0cnlEYXRhPj4pIHtcbiAgICBmb3IgKGNvbnN0IGNoaWxkIG9mIGNoaWxkcmVuKSB7XG4gICAgICAgIGF3YWl0IGNvbGxlY3RCdWZmZXJHZW9tZXRyaWVzV2l0aERlbGF5KG1lcmdlLCBjaGlsZCwgZ2VvbWV0cmllcyk7XG4gICAgfVxufVxuXG5sZXQgbmljZVRpbWVvdXRDb3VudGVyID0gMDtcblxuZnVuY3Rpb24gY29sbGVjdEJ1ZmZlckdlb21ldHJpZXNXaXRoRGVsYXkobWVyZ2U6IE9iamVjdE1lcmdlLCBvYmplY3Q6IE9iamVjdDNELCBnZW9tZXRyaWVzOiBNYXA8c3RyaW5nLCBBcnJheTxHZW9tZXRyeURhdGE+Pikge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICAgIGNvbGxlY3RCdWZmZXJHZW9tZXRyaWVzKG1lcmdlLCBvYmplY3QsIGdlb21ldHJpZXMpLnRoZW4oKCkgPT4ge1xuICAgICAgICAgICAgbmljZVRpbWVvdXRDb3VudGVyKys7XG4gICAgICAgICAgICBpZiAobmljZVRpbWVvdXRDb3VudGVyICUgNTAgPT0gMCkge1xuICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICByZXNvbHZlKCk7XG4gICAgICAgICAgICAgICAgfSwgMSk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHJlc29sdmUoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSkuY2F0Y2goKGVycm9yKSA9PiB7XG4gICAgICAgICAgICByZWplY3QoZXJyb3IpXG4gICAgICAgIH0pO1xuICAgIH0pO1xufVxuXG5hc3luYyBmdW5jdGlvbiBjb2xsZWN0QnVmZmVyR2VvbWV0cmllcyhtZXJnZTogT2JqZWN0TWVyZ2UsIG9iamVjdDogT2JqZWN0M0QsIGdlb21ldHJpZXM6IE1hcDxzdHJpbmcsIEFycmF5PEdlb21ldHJ5RGF0YT4+KSB7XG4gICAgLy9jb25zb2xlLmxvZyhcImNvbGxlY3RpbmcgYnVmZmVyIGdlb21ldHJpZXMuLi5cIik7XG4gICAgb2JqZWN0LnVwZGF0ZU1hdHJpeCgpO1xuICAgIG9iamVjdC51cGRhdGVNYXRyaXhXb3JsZCh0cnVlKTtcbiAgICAvL2NvbnNvbGUubG9nKGNoaWxkLnR5cGUpO1xuICAgIGlmIChvYmplY3QudHlwZSA9PSBcIk1lc2hcIikge1xuICAgICAgICBjb25zdCBtZXNoID0gb2JqZWN0IGFzIE1lc2g7XG4gICAgICAgIGNvbnN0IGdlb21ldHJ5VXVpZCA9IG1lc2guZ2VvbWV0cnkudXVpZDtcbiAgICAgICAgY29uc3QgZ2VvbWV0cnkgPSBtZXNoLmdlb21ldHJ5LmNsb25lKCk7XG4gICAgICAgIGlmIChvYmplY3QudXNlckRhdGEubWVyZ2VPYmplY3RJbmRleCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJNZXJnZSBvYmplY3QgaW5kZXggb2YgbWVyZ2luZyBvYmplY3QgaXMgdW5kZWZpbmVkLlwiKTtcbiAgICAgICAgfVxuICAgICAgICAoZ2VvbWV0cnkgYXMgYW55KS5tZXJnZU9iamVjdEluZGV4ID0gb2JqZWN0LnVzZXJEYXRhLm1lcmdlT2JqZWN0SW5kZXg7XG5cbiAgICAgICAgaWYgKGdlb21ldHJ5LnR5cGUgPT0gXCJCdWZmZXJHZW9tZXRyeVwiKSB7XG4gICAgICAgICAgICBjb25zdCBidWZmZXJHZW9tZXRyeSA9IGdlb21ldHJ5IGFzIEJ1ZmZlckdlb21ldHJ5O1xuICAgICAgICAgICAgY29uc3QgbWF0ZXJpYWwgPSBtZXNoLm1hdGVyaWFsO1xuXG4gICAgICAgICAgICBnZW9tZXRyeS5hcHBseU1hdHJpeChtZXNoLm1hdHJpeFdvcmxkKTtcblxuICAgICAgICAgICAgaWYgKCFnZW9tZXRyaWVzLmhhcyhnZW9tZXRyeVV1aWQpKSB7XG4gICAgICAgICAgICAgICAgZ2VvbWV0cmllcy5zZXQoZ2VvbWV0cnlVdWlkLCBbXSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBnZW9tZXRyaWVzLmdldChnZW9tZXRyeVV1aWQpISEucHVzaChuZXcgR2VvbWV0cnlEYXRhKGJ1ZmZlckdlb21ldHJ5LCBtYXRlcmlhbCkpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgaWYgKG9iamVjdC5jaGlsZHJlbiAmJiBvYmplY3QuY2hpbGRyZW4ubGVuZ3RoID4gMCkge1xuICAgICAgICBhd2FpdCBjb2xsZWN0Q2hpbGRCdWZmZXJHZW9tZXRyaWVzKG1lcmdlLCBvYmplY3QuY2hpbGRyZW4sIGdlb21ldHJpZXMpO1xuICAgIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNsb25lT2JqZWN0M0Qoc291cmNlOiBPYmplY3QzRCkge1xuXG4gICAgY29uc3QgdGFyZ2V0ID0gY2xvbmVPYmplY3QzRENvcmUoc291cmNlKTtcblxuICAgIHRhcmdldC5uYW1lID0gc291cmNlLm5hbWU7XG4gICAgdGFyZ2V0LnVwLmNvcHkoIHNvdXJjZS51cCApO1xuICAgIHRhcmdldC5wb3NpdGlvbi5jb3B5KCBzb3VyY2UucG9zaXRpb24gKTtcbiAgICB0YXJnZXQucXVhdGVybmlvbi5jb3B5KCBzb3VyY2UucXVhdGVybmlvbiApO1xuICAgIHRhcmdldC5zY2FsZS5jb3B5KCBzb3VyY2Uuc2NhbGUgKTtcbiAgICB0YXJnZXQubWF0cml4LmNvcHkoIHNvdXJjZS5tYXRyaXggKTtcbiAgICB0YXJnZXQubWF0cml4V29ybGQuY29weSggc291cmNlLm1hdHJpeFdvcmxkICk7XG4gICAgdGFyZ2V0Lm1hdHJpeEF1dG9VcGRhdGUgPSBzb3VyY2UubWF0cml4QXV0b1VwZGF0ZTtcbiAgICB0YXJnZXQubWF0cml4V29ybGROZWVkc1VwZGF0ZSA9IHNvdXJjZS5tYXRyaXhXb3JsZE5lZWRzVXBkYXRlO1xuICAgIHRhcmdldC5sYXllcnMubWFzayA9IHNvdXJjZS5sYXllcnMubWFzaztcbiAgICB0YXJnZXQudmlzaWJsZSA9IHNvdXJjZS52aXNpYmxlO1xuICAgIHRhcmdldC5jYXN0U2hhZG93ID0gc291cmNlLmNhc3RTaGFkb3c7XG4gICAgdGFyZ2V0LnJlY2VpdmVTaGFkb3cgPSBzb3VyY2UucmVjZWl2ZVNoYWRvdztcbiAgICB0YXJnZXQuZnJ1c3R1bUN1bGxlZCA9IHNvdXJjZS5mcnVzdHVtQ3VsbGVkO1xuICAgIHRhcmdldC5yZW5kZXJPcmRlciA9IHNvdXJjZS5yZW5kZXJPcmRlcjtcbiAgICB0YXJnZXQudXNlckRhdGEgPSBKU09OLnBhcnNlKCBKU09OLnN0cmluZ2lmeSggc291cmNlLnVzZXJEYXRhICkgKTtcblxuICAgIGZvciAoIGxldCBpID0gMDsgaSA8IHNvdXJjZS5jaGlsZHJlbi5sZW5ndGg7IGkgKysgKSB7XG4gICAgICAgIGNvbnN0IGNoaWxkID0gc291cmNlLmNoaWxkcmVuWyBpIF07XG4gICAgICAgIHRhcmdldC5hZGQoY2xvbmVPYmplY3QzRChjaGlsZCkpO1xuICAgIH1cblxuICAgIHJldHVybiB0YXJnZXQ7XG5cbn1cblxuZnVuY3Rpb24gY2xvbmVPYmplY3QzRENvcmUoc291cmNlOiBPYmplY3QzRCk6IE9iamVjdDNEIHtcbiAgICBpZiAoc291cmNlLnR5cGUgPT0gXCJNZXNoXCIpIHtcbiAgICAgICAgY29uc3QgdGFyZ2V0ID0gbmV3IE1lc2goKHNvdXJjZSBhcyBNZXNoKS5nZW9tZXRyeSwgKHNvdXJjZSBhcyBNZXNoKS5tYXRlcmlhbCk7XG4gICAgICAgIE9iamVjdDNELnByb3RvdHlwZS5jbG9uZS5jYWxsKHNvdXJjZSwgdGFyZ2V0KTtcbiAgICAgICAgcmV0dXJuIHRhcmdldDtcbiAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gbmV3IChzb3VyY2UgYXMgYW55KS5jb25zdHJ1Y3RvcigpO1xuICAgIH1cbn1cblxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/browser/three/merge_util.ts\n");

/***/ }),

/***/ "./src/browser/three/raycast.ts":
/*!**************************************!*\
  !*** ./src/browser/three/raycast.ts ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction raycast(objects, raycaster) {\n    const intersects = new Array();\n    raycastRecursive(objects, raycaster, intersects);\n    intersects.sort(ascSort);\n    return intersects;\n}\nexports.raycast = raycast;\nfunction raycastRecursive(objects, caster, intersects) {\n    for (const object of objects) {\n        object.raycast(caster, intersects);\n        if (object.children && object.children.length > 0) {\n            raycastRecursive(object.children, caster, intersects);\n        }\n    }\n}\nfunction ascSort(a, b) {\n    return a.distance - b.distance;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci90aHJlZS9yYXljYXN0LnRzPzEyYmUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFFQSxTQUFnQixPQUFPLENBQUMsT0FBd0IsRUFBRSxTQUFvQjtJQUNsRSxNQUFNLFVBQVUsR0FBRyxJQUFJLEtBQUssRUFBZ0IsQ0FBQztJQUM3QyxnQkFBZ0IsQ0FBQyxPQUFPLEVBQUUsU0FBUyxFQUFFLFVBQVUsQ0FBQyxDQUFDO0lBQ2pELFVBQVUsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDekIsT0FBTyxVQUFVLENBQUM7QUFDdEIsQ0FBQztBQUxELDBCQUtDO0FBRUQsU0FBUyxnQkFBZ0IsQ0FBQyxPQUF3QixFQUFFLE1BQWlCLEVBQUUsVUFBK0I7SUFDbEcsS0FBSyxNQUFNLE1BQU0sSUFBSSxPQUFPLEVBQUU7UUFDMUIsTUFBTSxDQUFDLE9BQU8sQ0FBQyxNQUFNLEVBQUUsVUFBVSxDQUFDLENBQUM7UUFDbkMsSUFBSSxNQUFNLENBQUMsUUFBUSxJQUFJLE1BQU0sQ0FBQyxRQUFRLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBRTtZQUMvQyxnQkFBZ0IsQ0FBQyxNQUFNLENBQUMsUUFBUSxFQUFFLE1BQU0sRUFBRSxVQUFVLENBQUMsQ0FBQztTQUN6RDtLQUNKO0FBQ0wsQ0FBQztBQUVELFNBQVMsT0FBTyxDQUFFLENBQWUsRUFBRSxDQUFlO0lBRTlDLE9BQU8sQ0FBQyxDQUFDLFFBQVEsR0FBRyxDQUFDLENBQUMsUUFBUSxDQUFDO0FBRW5DLENBQUMiLCJmaWxlIjoiLi9zcmMvYnJvd3Nlci90aHJlZS9yYXljYXN0LnRzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtJbnRlcnNlY3Rpb24sIE9iamVjdDNELCBSYXljYXN0ZXJ9IGZyb20gXCJ0aHJlZVwiO1xuXG5leHBvcnQgZnVuY3Rpb24gcmF5Y2FzdChvYmplY3RzOiBBcnJheTxPYmplY3QzRD4sIHJheWNhc3RlcjogUmF5Y2FzdGVyKSB7XG4gICAgY29uc3QgaW50ZXJzZWN0cyA9IG5ldyBBcnJheTxJbnRlcnNlY3Rpb24+KCk7XG4gICAgcmF5Y2FzdFJlY3Vyc2l2ZShvYmplY3RzLCByYXljYXN0ZXIsIGludGVyc2VjdHMpO1xuICAgIGludGVyc2VjdHMuc29ydChhc2NTb3J0KTtcbiAgICByZXR1cm4gaW50ZXJzZWN0cztcbn1cblxuZnVuY3Rpb24gcmF5Y2FzdFJlY3Vyc2l2ZShvYmplY3RzOiBBcnJheTxPYmplY3QzRD4sIGNhc3RlcjogUmF5Y2FzdGVyLCBpbnRlcnNlY3RzOiBBcnJheTxJbnRlcnNlY3Rpb24+KSB7XG4gICAgZm9yIChjb25zdCBvYmplY3Qgb2Ygb2JqZWN0cykge1xuICAgICAgICBvYmplY3QucmF5Y2FzdChjYXN0ZXIsIGludGVyc2VjdHMpO1xuICAgICAgICBpZiAob2JqZWN0LmNoaWxkcmVuICYmIG9iamVjdC5jaGlsZHJlbi5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICByYXljYXN0UmVjdXJzaXZlKG9iamVjdC5jaGlsZHJlbiwgY2FzdGVyLCBpbnRlcnNlY3RzKTtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuZnVuY3Rpb24gYXNjU29ydCggYTogSW50ZXJzZWN0aW9uLCBiOiBJbnRlcnNlY3Rpb24gKSB7XG5cbiAgICByZXR1cm4gYS5kaXN0YW5jZSAtIGIuZGlzdGFuY2U7XG5cbn0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/browser/three/raycast.ts\n");

/***/ }),

/***/ "./src/browser/util.ts":
/*!*****************************!*\
  !*** ./src/browser/util.ts ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction createElements(html) {\n    const template = document.createElement('div');\n    template.innerHTML = html.trim();\n    return [...template.children];\n}\nexports.createElements = createElements;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci91dGlsLnRzPzc5ZTkiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxTQUFnQixjQUFjLENBQUMsSUFBWTtJQUN2QyxNQUFNLFFBQVEsR0FBRyxRQUFRLENBQUMsYUFBYSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQy9DLFFBQVEsQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDO0lBQ2pDLE9BQU8sQ0FBQyxHQUFHLFFBQVEsQ0FBQyxRQUFRLENBQUMsQ0FBQztBQUNsQyxDQUFDO0FBSkQsd0NBSUMiLCJmaWxlIjoiLi9zcmMvYnJvd3Nlci91dGlsLnRzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUVsZW1lbnRzKGh0bWw6IHN0cmluZyk6IEFycmF5PEVsZW1lbnQ+IHtcbiAgICBjb25zdCB0ZW1wbGF0ZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIHRlbXBsYXRlLmlubmVySFRNTCA9IGh0bWwudHJpbSgpO1xuICAgIHJldHVybiBbLi4udGVtcGxhdGUuY2hpbGRyZW5dO1xufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/browser/util.ts\n");

/***/ }),

/***/ 0:
/*!**********************!*\
  !*** util (ignored) ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/* (ignored) *///# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vdXRpbCAoaWdub3JlZCk/YTkzMCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiIwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyogKGlnbm9yZWQpICovIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///0\n");

/***/ }),

/***/ 1:
/*!**********************!*\
  !*** util (ignored) ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/* (ignored) *///# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vdXRpbCAoaWdub3JlZCk/OGY0MSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiIxLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyogKGlnbm9yZWQpICovIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///1\n");

/***/ }),

/***/ "aframe":
/*!*************************!*\
  !*** external "AFRAME" ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = AFRAME;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJBRlJBTUVcIj9kZGYxIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6ImFmcmFtZS5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gQUZSQU1FOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///aframe\n");

/***/ }),

/***/ "three":
/*!************************!*\
  !*** external "THREE" ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = THREE;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJUSFJFRVwiP2ZjMDAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoidGhyZWUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IFRIUkVFOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///three\n");

/***/ })

/******/ });