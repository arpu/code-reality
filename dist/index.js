/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/browser/index.ts");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/aframe-typescript-boilerplate/built/component/AbstractComponentController.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/aframe-typescript-boilerplate/built/component/AbstractComponentController.js ***!
  \***************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Abstract base class for component implementations.\n */\nclass AbstractComponentController {\n    constructor(component, entity, data) {\n        this.componentName = component.name;\n        this.entity = entity;\n        this.scene = entity.sceneEl;\n        this.data = data;\n        this.component = component;\n    }\n    setData(data) {\n        this.data = data;\n    }\n    getSystemController(systemName) {\n        if (!this.entity.sceneEl) {\n            throw new Error(\"Scene is undefined.\");\n        }\n        const system = this.entity.sceneEl.systems[systemName];\n        if (!system) {\n            throw new Error(\"System is not registered to scene: \" + system);\n        }\n        return system.controller;\n    }\n    getComponentController(componentName) {\n        const component = this.entity.components[componentName];\n        if (!component) {\n            throw new Error(\"Component is not registered to entity: \" + componentName);\n        }\n        return component.controller;\n    }\n    addEventListener(type, listener) {\n        this.entity.addEventListener(type, ((e) => {\n            listener(e.detail);\n        }));\n    }\n    dispatchEvent(eventType, detail) {\n        this.entity.dispatchEvent(new CustomEvent(eventType, { detail: detail }));\n    }\n}\nexports.AbstractComponentController = AbstractComponentController;\n//# sourceMappingURL=AbstractComponentController.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYWZyYW1lLXR5cGVzY3JpcHQtYm9pbGVycGxhdGUvYnVpbHQvY29tcG9uZW50L0Fic3RyYWN0Q29tcG9uZW50Q29udHJvbGxlci5qcz85NTdkIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQThDLGNBQWM7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLDhEQUE4RCxpQkFBaUI7QUFDL0U7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYWZyYW1lLXR5cGVzY3JpcHQtYm9pbGVycGxhdGUvYnVpbHQvY29tcG9uZW50L0Fic3RyYWN0Q29tcG9uZW50Q29udHJvbGxlci5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLyoqXG4gKiBBYnN0cmFjdCBiYXNlIGNsYXNzIGZvciBjb21wb25lbnQgaW1wbGVtZW50YXRpb25zLlxuICovXG5jbGFzcyBBYnN0cmFjdENvbXBvbmVudENvbnRyb2xsZXIge1xuICAgIGNvbnN0cnVjdG9yKGNvbXBvbmVudCwgZW50aXR5LCBkYXRhKSB7XG4gICAgICAgIHRoaXMuY29tcG9uZW50TmFtZSA9IGNvbXBvbmVudC5uYW1lO1xuICAgICAgICB0aGlzLmVudGl0eSA9IGVudGl0eTtcbiAgICAgICAgdGhpcy5zY2VuZSA9IGVudGl0eS5zY2VuZUVsO1xuICAgICAgICB0aGlzLmRhdGEgPSBkYXRhO1xuICAgICAgICB0aGlzLmNvbXBvbmVudCA9IGNvbXBvbmVudDtcbiAgICB9XG4gICAgc2V0RGF0YShkYXRhKSB7XG4gICAgICAgIHRoaXMuZGF0YSA9IGRhdGE7XG4gICAgfVxuICAgIGdldFN5c3RlbUNvbnRyb2xsZXIoc3lzdGVtTmFtZSkge1xuICAgICAgICBpZiAoIXRoaXMuZW50aXR5LnNjZW5lRWwpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIlNjZW5lIGlzIHVuZGVmaW5lZC5cIik7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3Qgc3lzdGVtID0gdGhpcy5lbnRpdHkuc2NlbmVFbC5zeXN0ZW1zW3N5c3RlbU5hbWVdO1xuICAgICAgICBpZiAoIXN5c3RlbSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiU3lzdGVtIGlzIG5vdCByZWdpc3RlcmVkIHRvIHNjZW5lOiBcIiArIHN5c3RlbSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHN5c3RlbS5jb250cm9sbGVyO1xuICAgIH1cbiAgICBnZXRDb21wb25lbnRDb250cm9sbGVyKGNvbXBvbmVudE5hbWUpIHtcbiAgICAgICAgY29uc3QgY29tcG9uZW50ID0gdGhpcy5lbnRpdHkuY29tcG9uZW50c1tjb21wb25lbnROYW1lXTtcbiAgICAgICAgaWYgKCFjb21wb25lbnQpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkNvbXBvbmVudCBpcyBub3QgcmVnaXN0ZXJlZCB0byBlbnRpdHk6IFwiICsgY29tcG9uZW50TmFtZSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGNvbXBvbmVudC5jb250cm9sbGVyO1xuICAgIH1cbiAgICBhZGRFdmVudExpc3RlbmVyKHR5cGUsIGxpc3RlbmVyKSB7XG4gICAgICAgIHRoaXMuZW50aXR5LmFkZEV2ZW50TGlzdGVuZXIodHlwZSwgKChlKSA9PiB7XG4gICAgICAgICAgICBsaXN0ZW5lcihlLmRldGFpbCk7XG4gICAgICAgIH0pKTtcbiAgICB9XG4gICAgZGlzcGF0Y2hFdmVudChldmVudFR5cGUsIGRldGFpbCkge1xuICAgICAgICB0aGlzLmVudGl0eS5kaXNwYXRjaEV2ZW50KG5ldyBDdXN0b21FdmVudChldmVudFR5cGUsIHsgZGV0YWlsOiBkZXRhaWwgfSkpO1xuICAgIH1cbn1cbmV4cG9ydHMuQWJzdHJhY3RDb21wb25lbnRDb250cm9sbGVyID0gQWJzdHJhY3RDb21wb25lbnRDb250cm9sbGVyO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9QWJzdHJhY3RDb21wb25lbnRDb250cm9sbGVyLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/aframe-typescript-boilerplate/built/component/AbstractComponentController.js\n");

/***/ }),

/***/ "./node_modules/aframe-typescript-boilerplate/built/component/ComponentControllerDefinition.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/aframe-typescript-boilerplate/built/component/ComponentControllerDefinition.js ***!
  \*****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass ComponentControllerDefinition {\n    constructor(componentName, schema, multiple, tick, constructComponentController) {\n        this.features = [];\n        this.componentName = componentName;\n        this.schema = schema;\n        this.multiple = multiple;\n        this.tick = tick;\n        this.constructComponentController = constructComponentController;\n    }\n    add(feature) {\n        this.features.push(feature);\n        return this;\n    }\n}\nexports.ComponentControllerDefinition = ComponentControllerDefinition;\n//# sourceMappingURL=ComponentControllerDefinition.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYWZyYW1lLXR5cGVzY3JpcHQtYm9pbGVycGxhdGUvYnVpbHQvY29tcG9uZW50L0NvbXBvbmVudENvbnRyb2xsZXJEZWZpbml0aW9uLmpzP2M1ZTAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBOEMsY0FBYztBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9hZnJhbWUtdHlwZXNjcmlwdC1ib2lsZXJwbGF0ZS9idWlsdC9jb21wb25lbnQvQ29tcG9uZW50Q29udHJvbGxlckRlZmluaXRpb24uanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNsYXNzIENvbXBvbmVudENvbnRyb2xsZXJEZWZpbml0aW9uIHtcbiAgICBjb25zdHJ1Y3Rvcihjb21wb25lbnROYW1lLCBzY2hlbWEsIG11bHRpcGxlLCB0aWNrLCBjb25zdHJ1Y3RDb21wb25lbnRDb250cm9sbGVyKSB7XG4gICAgICAgIHRoaXMuZmVhdHVyZXMgPSBbXTtcbiAgICAgICAgdGhpcy5jb21wb25lbnROYW1lID0gY29tcG9uZW50TmFtZTtcbiAgICAgICAgdGhpcy5zY2hlbWEgPSBzY2hlbWE7XG4gICAgICAgIHRoaXMubXVsdGlwbGUgPSBtdWx0aXBsZTtcbiAgICAgICAgdGhpcy50aWNrID0gdGljaztcbiAgICAgICAgdGhpcy5jb25zdHJ1Y3RDb21wb25lbnRDb250cm9sbGVyID0gY29uc3RydWN0Q29tcG9uZW50Q29udHJvbGxlcjtcbiAgICB9XG4gICAgYWRkKGZlYXR1cmUpIHtcbiAgICAgICAgdGhpcy5mZWF0dXJlcy5wdXNoKGZlYXR1cmUpO1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG59XG5leHBvcnRzLkNvbXBvbmVudENvbnRyb2xsZXJEZWZpbml0aW9uID0gQ29tcG9uZW50Q29udHJvbGxlckRlZmluaXRpb247XG4vLyMgc291cmNlTWFwcGluZ1VSTD1Db21wb25lbnRDb250cm9sbGVyRGVmaW5pdGlvbi5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/aframe-typescript-boilerplate/built/component/ComponentControllerDefinition.js\n");

/***/ }),

/***/ "./node_modules/aframe-typescript-boilerplate/built/component/CompositeComponentController.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/aframe-typescript-boilerplate/built/component/CompositeComponentController.js ***!
  \****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst AbstractComponentController_1 = __webpack_require__(/*! ./AbstractComponentController */ \"./node_modules/aframe-typescript-boilerplate/built/component/AbstractComponentController.js\");\n/**\n * Enabled composing one component from many features which can encapsulate same functionality as components.\n */\nclass CompositeComponentController extends AbstractComponentController_1.AbstractComponentController {\n    constructor(component, entity, data) {\n        super(component, entity, data);\n        this.features = [];\n    }\n    init() {\n        this.features.forEach(controller => {\n            controller.init();\n        });\n    }\n    update(data, oldData) {\n        this.features.forEach(controller => {\n            controller.update(data, oldData);\n        });\n    }\n    remove() {\n        this.features.forEach(controller => {\n            controller.remove();\n        });\n    }\n    pause() {\n        this.features.forEach(controller => {\n            controller.pause();\n        });\n    }\n    play() {\n        this.features.forEach(controller => {\n            controller.play();\n        });\n    }\n    tick(time, timeDelta) {\n        this.features.forEach(controller => {\n            controller.tick(time, timeDelta);\n        });\n    }\n    addFeature(feature) {\n        this.features.push(feature);\n    }\n}\nexports.CompositeComponentController = CompositeComponentController;\n//# sourceMappingURL=CompositeComponentController.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYWZyYW1lLXR5cGVzY3JpcHQtYm9pbGVycGxhdGUvYnVpbHQvY29tcG9uZW50L0NvbXBvc2l0ZUNvbXBvbmVudENvbnRyb2xsZXIuanM/NTVmYyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE4QyxjQUFjO0FBQzVELHNDQUFzQyxtQkFBTyxDQUFDLGtJQUErQjtBQUM3RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL2FmcmFtZS10eXBlc2NyaXB0LWJvaWxlcnBsYXRlL2J1aWx0L2NvbXBvbmVudC9Db21wb3NpdGVDb21wb25lbnRDb250cm9sbGVyLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCBBYnN0cmFjdENvbXBvbmVudENvbnRyb2xsZXJfMSA9IHJlcXVpcmUoXCIuL0Fic3RyYWN0Q29tcG9uZW50Q29udHJvbGxlclwiKTtcbi8qKlxuICogRW5hYmxlZCBjb21wb3Npbmcgb25lIGNvbXBvbmVudCBmcm9tIG1hbnkgZmVhdHVyZXMgd2hpY2ggY2FuIGVuY2Fwc3VsYXRlIHNhbWUgZnVuY3Rpb25hbGl0eSBhcyBjb21wb25lbnRzLlxuICovXG5jbGFzcyBDb21wb3NpdGVDb21wb25lbnRDb250cm9sbGVyIGV4dGVuZHMgQWJzdHJhY3RDb21wb25lbnRDb250cm9sbGVyXzEuQWJzdHJhY3RDb21wb25lbnRDb250cm9sbGVyIHtcbiAgICBjb25zdHJ1Y3Rvcihjb21wb25lbnQsIGVudGl0eSwgZGF0YSkge1xuICAgICAgICBzdXBlcihjb21wb25lbnQsIGVudGl0eSwgZGF0YSk7XG4gICAgICAgIHRoaXMuZmVhdHVyZXMgPSBbXTtcbiAgICB9XG4gICAgaW5pdCgpIHtcbiAgICAgICAgdGhpcy5mZWF0dXJlcy5mb3JFYWNoKGNvbnRyb2xsZXIgPT4ge1xuICAgICAgICAgICAgY29udHJvbGxlci5pbml0KCk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICB1cGRhdGUoZGF0YSwgb2xkRGF0YSkge1xuICAgICAgICB0aGlzLmZlYXR1cmVzLmZvckVhY2goY29udHJvbGxlciA9PiB7XG4gICAgICAgICAgICBjb250cm9sbGVyLnVwZGF0ZShkYXRhLCBvbGREYXRhKTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHJlbW92ZSgpIHtcbiAgICAgICAgdGhpcy5mZWF0dXJlcy5mb3JFYWNoKGNvbnRyb2xsZXIgPT4ge1xuICAgICAgICAgICAgY29udHJvbGxlci5yZW1vdmUoKTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHBhdXNlKCkge1xuICAgICAgICB0aGlzLmZlYXR1cmVzLmZvckVhY2goY29udHJvbGxlciA9PiB7XG4gICAgICAgICAgICBjb250cm9sbGVyLnBhdXNlKCk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBwbGF5KCkge1xuICAgICAgICB0aGlzLmZlYXR1cmVzLmZvckVhY2goY29udHJvbGxlciA9PiB7XG4gICAgICAgICAgICBjb250cm9sbGVyLnBsYXkoKTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHRpY2sodGltZSwgdGltZURlbHRhKSB7XG4gICAgICAgIHRoaXMuZmVhdHVyZXMuZm9yRWFjaChjb250cm9sbGVyID0+IHtcbiAgICAgICAgICAgIGNvbnRyb2xsZXIudGljayh0aW1lLCB0aW1lRGVsdGEpO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgYWRkRmVhdHVyZShmZWF0dXJlKSB7XG4gICAgICAgIHRoaXMuZmVhdHVyZXMucHVzaChmZWF0dXJlKTtcbiAgICB9XG59XG5leHBvcnRzLkNvbXBvc2l0ZUNvbXBvbmVudENvbnRyb2xsZXIgPSBDb21wb3NpdGVDb21wb25lbnRDb250cm9sbGVyO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Q29tcG9zaXRlQ29tcG9uZW50Q29udHJvbGxlci5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/aframe-typescript-boilerplate/built/component/CompositeComponentController.js\n");

/***/ }),

/***/ "./node_modules/aframe-typescript-boilerplate/built/component/ExampleController.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/aframe-typescript-boilerplate/built/component/ExampleController.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst AbstractComponentController_1 = __webpack_require__(/*! ./AbstractComponentController */ \"./node_modules/aframe-typescript-boilerplate/built/component/AbstractComponentController.js\");\nconst ComponentControllerDefinition_1 = __webpack_require__(/*! ./ComponentControllerDefinition */ \"./node_modules/aframe-typescript-boilerplate/built/component/ComponentControllerDefinition.js\");\nclass ExampleController extends AbstractComponentController_1.AbstractComponentController {\n    constructor(component, entity, data) {\n        super(component, entity, data);\n    }\n    init() { }\n    update(data, oldData) { }\n    remove() { }\n    pause() { }\n    play() { }\n    tick(time, timeDelta) { }\n}\nExampleController.DEFINITION = new ComponentControllerDefinition_1.ComponentControllerDefinition(\n/* Name */ \"example\", \n/* Schema */ {}, \n/* Multiple */ false, \n/* Receive ticks */ false, \n/* Factory function */ (component, entity, data) => new ExampleController(component, entity, data));\nexports.ExampleController = ExampleController;\n//# sourceMappingURL=ExampleController.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYWZyYW1lLXR5cGVzY3JpcHQtYm9pbGVycGxhdGUvYnVpbHQvY29tcG9uZW50L0V4YW1wbGVDb250cm9sbGVyLmpzPzRmNDMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBOEMsY0FBYztBQUM1RCxzQ0FBc0MsbUJBQU8sQ0FBQyxrSUFBK0I7QUFDN0Usd0NBQXdDLG1CQUFPLENBQUMsc0lBQWlDO0FBQ2pGO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaLDJCQUEyQjtBQUMzQixjQUFjO0FBQ2QsYUFBYTtBQUNiLFlBQVk7QUFDWiwyQkFBMkI7QUFDM0I7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYWZyYW1lLXR5cGVzY3JpcHQtYm9pbGVycGxhdGUvYnVpbHQvY29tcG9uZW50L0V4YW1wbGVDb250cm9sbGVyLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCBBYnN0cmFjdENvbXBvbmVudENvbnRyb2xsZXJfMSA9IHJlcXVpcmUoXCIuL0Fic3RyYWN0Q29tcG9uZW50Q29udHJvbGxlclwiKTtcbmNvbnN0IENvbXBvbmVudENvbnRyb2xsZXJEZWZpbml0aW9uXzEgPSByZXF1aXJlKFwiLi9Db21wb25lbnRDb250cm9sbGVyRGVmaW5pdGlvblwiKTtcbmNsYXNzIEV4YW1wbGVDb250cm9sbGVyIGV4dGVuZHMgQWJzdHJhY3RDb21wb25lbnRDb250cm9sbGVyXzEuQWJzdHJhY3RDb21wb25lbnRDb250cm9sbGVyIHtcbiAgICBjb25zdHJ1Y3Rvcihjb21wb25lbnQsIGVudGl0eSwgZGF0YSkge1xuICAgICAgICBzdXBlcihjb21wb25lbnQsIGVudGl0eSwgZGF0YSk7XG4gICAgfVxuICAgIGluaXQoKSB7IH1cbiAgICB1cGRhdGUoZGF0YSwgb2xkRGF0YSkgeyB9XG4gICAgcmVtb3ZlKCkgeyB9XG4gICAgcGF1c2UoKSB7IH1cbiAgICBwbGF5KCkgeyB9XG4gICAgdGljayh0aW1lLCB0aW1lRGVsdGEpIHsgfVxufVxuRXhhbXBsZUNvbnRyb2xsZXIuREVGSU5JVElPTiA9IG5ldyBDb21wb25lbnRDb250cm9sbGVyRGVmaW5pdGlvbl8xLkNvbXBvbmVudENvbnRyb2xsZXJEZWZpbml0aW9uKFxuLyogTmFtZSAqLyBcImV4YW1wbGVcIiwgXG4vKiBTY2hlbWEgKi8ge30sIFxuLyogTXVsdGlwbGUgKi8gZmFsc2UsIFxuLyogUmVjZWl2ZSB0aWNrcyAqLyBmYWxzZSwgXG4vKiBGYWN0b3J5IGZ1bmN0aW9uICovIChjb21wb25lbnQsIGVudGl0eSwgZGF0YSkgPT4gbmV3IEV4YW1wbGVDb250cm9sbGVyKGNvbXBvbmVudCwgZW50aXR5LCBkYXRhKSk7XG5leHBvcnRzLkV4YW1wbGVDb250cm9sbGVyID0gRXhhbXBsZUNvbnRyb2xsZXI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1FeGFtcGxlQ29udHJvbGxlci5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/aframe-typescript-boilerplate/built/component/ExampleController.js\n");

/***/ }),

/***/ "./node_modules/aframe-typescript-boilerplate/built/feature/AbstractFeature.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/aframe-typescript-boilerplate/built/feature/AbstractFeature.js ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Features allows implementing component sub functionalities in smaller units and be reused in several systems or components.\n */\nclass AbstractFeature {\n    constructor(name, controller, entity) {\n        this.name = name;\n        this.entity = entity;\n        this.controller = controller;\n    }\n    addEventListener(type, listener) {\n        this.entity.addEventListener(type, ((e) => {\n            listener(e.detail);\n        }));\n    }\n    dispatchEvent(eventType, detail) {\n        this.entity.dispatchEvent(new CustomEvent(eventType, { detail: detail }));\n    }\n}\nexports.AbstractFeature = AbstractFeature;\n//# sourceMappingURL=AbstractFeature.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYWZyYW1lLXR5cGVzY3JpcHQtYm9pbGVycGxhdGUvYnVpbHQvZmVhdHVyZS9BYnN0cmFjdEZlYXR1cmUuanM/Y2Y3ZCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE4QyxjQUFjO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsOERBQThELGlCQUFpQjtBQUMvRTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9hZnJhbWUtdHlwZXNjcmlwdC1ib2lsZXJwbGF0ZS9idWlsdC9mZWF0dXJlL0Fic3RyYWN0RmVhdHVyZS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLyoqXG4gKiBGZWF0dXJlcyBhbGxvd3MgaW1wbGVtZW50aW5nIGNvbXBvbmVudCBzdWIgZnVuY3Rpb25hbGl0aWVzIGluIHNtYWxsZXIgdW5pdHMgYW5kIGJlIHJldXNlZCBpbiBzZXZlcmFsIHN5c3RlbXMgb3IgY29tcG9uZW50cy5cbiAqL1xuY2xhc3MgQWJzdHJhY3RGZWF0dXJlIHtcbiAgICBjb25zdHJ1Y3RvcihuYW1lLCBjb250cm9sbGVyLCBlbnRpdHkpIHtcbiAgICAgICAgdGhpcy5uYW1lID0gbmFtZTtcbiAgICAgICAgdGhpcy5lbnRpdHkgPSBlbnRpdHk7XG4gICAgICAgIHRoaXMuY29udHJvbGxlciA9IGNvbnRyb2xsZXI7XG4gICAgfVxuICAgIGFkZEV2ZW50TGlzdGVuZXIodHlwZSwgbGlzdGVuZXIpIHtcbiAgICAgICAgdGhpcy5lbnRpdHkuYWRkRXZlbnRMaXN0ZW5lcih0eXBlLCAoKGUpID0+IHtcbiAgICAgICAgICAgIGxpc3RlbmVyKGUuZGV0YWlsKTtcbiAgICAgICAgfSkpO1xuICAgIH1cbiAgICBkaXNwYXRjaEV2ZW50KGV2ZW50VHlwZSwgZGV0YWlsKSB7XG4gICAgICAgIHRoaXMuZW50aXR5LmRpc3BhdGNoRXZlbnQobmV3IEN1c3RvbUV2ZW50KGV2ZW50VHlwZSwgeyBkZXRhaWw6IGRldGFpbCB9KSk7XG4gICAgfVxufVxuZXhwb3J0cy5BYnN0cmFjdEZlYXR1cmUgPSBBYnN0cmFjdEZlYXR1cmU7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1BYnN0cmFjdEZlYXR1cmUuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/aframe-typescript-boilerplate/built/feature/AbstractFeature.js\n");

/***/ }),

/***/ "./node_modules/aframe-typescript-boilerplate/built/index.js":
/*!*******************************************************************!*\
  !*** ./node_modules/aframe-typescript-boilerplate/built/index.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar AbstractComponentController_1 = __webpack_require__(/*! ./component/AbstractComponentController */ \"./node_modules/aframe-typescript-boilerplate/built/component/AbstractComponentController.js\");\nexports.AbstractComponentController = AbstractComponentController_1.AbstractComponentController;\nvar ComponentControllerDefinition_1 = __webpack_require__(/*! ./component/ComponentControllerDefinition */ \"./node_modules/aframe-typescript-boilerplate/built/component/ComponentControllerDefinition.js\");\nexports.ComponentControllerDefinition = ComponentControllerDefinition_1.ComponentControllerDefinition;\nvar CompositeComponentController_1 = __webpack_require__(/*! ./component/CompositeComponentController */ \"./node_modules/aframe-typescript-boilerplate/built/component/CompositeComponentController.js\");\nexports.CompositeComponentController = CompositeComponentController_1.CompositeComponentController;\nvar ExampleController_1 = __webpack_require__(/*! ./component/ExampleController */ \"./node_modules/aframe-typescript-boilerplate/built/component/ExampleController.js\");\nexports.ExampleController = ExampleController_1.ExampleController;\nvar AbstractFeature_1 = __webpack_require__(/*! ./feature/AbstractFeature */ \"./node_modules/aframe-typescript-boilerplate/built/feature/AbstractFeature.js\");\nexports.AbstractFeature = AbstractFeature_1.AbstractFeature;\nvar AbstractSystemController_1 = __webpack_require__(/*! ./system/AbstractSystemController */ \"./node_modules/aframe-typescript-boilerplate/built/system/AbstractSystemController.js\");\nexports.AbstractSystemController = AbstractSystemController_1.AbstractSystemController;\nvar CompositeSystemController_1 = __webpack_require__(/*! ./system/CompositeSystemController */ \"./node_modules/aframe-typescript-boilerplate/built/system/CompositeSystemController.js\");\nexports.CompositeSystemController = CompositeSystemController_1.CompositeSystemController;\nvar ExampleSystemController_1 = __webpack_require__(/*! ./system/ExampleSystemController */ \"./node_modules/aframe-typescript-boilerplate/built/system/ExampleSystemController.js\");\nexports.ExampleSystemController = ExampleSystemController_1.ExampleSystemController;\nvar SystemControllerDefinition_1 = __webpack_require__(/*! ./system/SystemControllerDefinition */ \"./node_modules/aframe-typescript-boilerplate/built/system/SystemControllerDefinition.js\");\nexports.SystemControllerDefinition = SystemControllerDefinition_1.SystemControllerDefinition;\nfunction registerComponentController(definition) {\n    if (typeof AFRAME !== 'undefined') {\n        if (definition.tick) {\n            AFRAME.registerComponent(definition.componentName, {\n                schema: definition.schema,\n                multiple: definition.multiple,\n                init: function () {\n                    const controller = definition.constructComponentController(this, this.el, this.data);\n                    this.controller = controller;\n                    if (controller.addFeature) {\n                        const compositeController = controller;\n                        for (const feature of definition.features) {\n                            compositeController.addFeature(feature(compositeController, controller.entity));\n                        }\n                    }\n                    else {\n                        if (definition.features.length > 0) {\n                            throw new Error(\"Attempt to add features to non composite component controller: \" + definition.componentName);\n                        }\n                    }\n                    this.controller.init();\n                },\n                update: function (oldData) {\n                    this.controller.setData(this.data);\n                    this.controller.update(this.data, oldData);\n                },\n                remove: function () {\n                    this.controller.remove();\n                },\n                tick: function (time, timeDelta) {\n                    this.controller.tick(time, timeDelta);\n                },\n                pause: function () {\n                    this.controller.pause();\n                },\n                play: function () {\n                    this.controller.play();\n                }\n            });\n        }\n        else {\n            AFRAME.registerComponent(definition.componentName, {\n                schema: definition.schema,\n                multiple: definition.multiple,\n                init: function () {\n                    this.controller = definition.constructComponentController(this, this.el, this.data);\n                    this.controller.init();\n                },\n                update: function (oldData) {\n                    this.controller.setData(this.data);\n                    this.controller.update(this.data, oldData);\n                },\n                remove: function () {\n                    this.controller.remove();\n                },\n                pause: function () {\n                    this.controller.pause();\n                },\n                play: function () {\n                    this.controller.play();\n                }\n            });\n        }\n    }\n}\nexports.registerComponentController = registerComponentController;\nfunction createElement(html) {\n    const template = document.createElement('div');\n    template.innerHTML = html.trim();\n    return template.firstChild;\n}\nexports.createElement = createElement;\nfunction addEntityEventListener(entity, type, listener) {\n    entity.addEventListener(type, ((e) => {\n        listener(e.detail);\n    }));\n}\nexports.addEntityEventListener = addEntityEventListener;\nfunction addDocumentEventListener(type, listener) {\n    document.addEventListener(type, ((e) => {\n        listener(e.detail);\n    }));\n}\nexports.addDocumentEventListener = addDocumentEventListener;\nfunction getEntity(object) {\n    if (object.el) {\n        return object.el;\n    }\n    let parentObject = undefined;\n    object.traverseAncestors((a) => {\n        if (parentObject === undefined && a.el) {\n            parentObject = a;\n        }\n    });\n    if (parentObject) {\n        return parentObject.el;\n    }\n    return undefined;\n}\nexports.getEntity = getEntity;\nfunction registerSystemController(definition) {\n    if (typeof AFRAME !== 'undefined') {\n        AFRAME.registerSystem(definition.systemName, {\n            schema: definition.schema,\n            init: function () {\n                this.controller = definition.constructSystemController(this, this.el, this.data);\n                //console.log(definition.systemName + \" system init\");\n                this.controller.init();\n            },\n            tick: function (time, timeDelta) {\n                this.controller.tick(time, timeDelta);\n            },\n            pause: function () {\n                //console.log(definition.systemName + \" system pause\");\n                this.controller.pause();\n            },\n            play: function () {\n                //console.log(definition.systemName + \" system play\");\n                this.controller.play();\n            }\n        });\n    }\n}\nexports.registerSystemController = registerSystemController;\nfunction getSystemController(scene, systemName) {\n    if (!scene) {\n        throw new Error(\"Scene is undefined.\");\n    }\n    if (!scene.systems) {\n        throw new Error(\"Scene systems is undefined.\");\n    }\n    const system = scene.systems[systemName];\n    if (!system) {\n        throw new Error(\"System is not registered to scene: \" + system);\n    }\n    return system.controller;\n}\nexports.getSystemController = getSystemController;\nfunction getComponentController(entity, componentName) {\n    const component = entity.components[componentName];\n    if (!component) {\n        return undefined;\n    }\n    return component.controller;\n}\nexports.getComponentController = getComponentController;\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/aframe-typescript-boilerplate/built/index.js\n");

/***/ }),

/***/ "./node_modules/aframe-typescript-boilerplate/built/system/AbstractSystemController.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/aframe-typescript-boilerplate/built/system/AbstractSystemController.js ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Abstract base class for system controller implementations.\n */\nclass AbstractSystemController {\n    constructor(system, entity, data) {\n        this.systemName = system.name;\n        this.scene = entity;\n        this.data = data;\n        this.system = system;\n    }\n    getSystemController(systemName) {\n        const system = this.scene.systems[systemName];\n        if (!system) {\n            throw new Error(\"System is not registered to scene: \" + system);\n        }\n        return system.controller;\n    }\n}\nexports.AbstractSystemController = AbstractSystemController;\n//# sourceMappingURL=AbstractSystemController.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYWZyYW1lLXR5cGVzY3JpcHQtYm9pbGVycGxhdGUvYnVpbHQvc3lzdGVtL0Fic3RyYWN0U3lzdGVtQ29udHJvbGxlci5qcz80Mjg1Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQThDLGNBQWM7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9hZnJhbWUtdHlwZXNjcmlwdC1ib2lsZXJwbGF0ZS9idWlsdC9zeXN0ZW0vQWJzdHJhY3RTeXN0ZW1Db250cm9sbGVyLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vKipcbiAqIEFic3RyYWN0IGJhc2UgY2xhc3MgZm9yIHN5c3RlbSBjb250cm9sbGVyIGltcGxlbWVudGF0aW9ucy5cbiAqL1xuY2xhc3MgQWJzdHJhY3RTeXN0ZW1Db250cm9sbGVyIHtcbiAgICBjb25zdHJ1Y3RvcihzeXN0ZW0sIGVudGl0eSwgZGF0YSkge1xuICAgICAgICB0aGlzLnN5c3RlbU5hbWUgPSBzeXN0ZW0ubmFtZTtcbiAgICAgICAgdGhpcy5zY2VuZSA9IGVudGl0eTtcbiAgICAgICAgdGhpcy5kYXRhID0gZGF0YTtcbiAgICAgICAgdGhpcy5zeXN0ZW0gPSBzeXN0ZW07XG4gICAgfVxuICAgIGdldFN5c3RlbUNvbnRyb2xsZXIoc3lzdGVtTmFtZSkge1xuICAgICAgICBjb25zdCBzeXN0ZW0gPSB0aGlzLnNjZW5lLnN5c3RlbXNbc3lzdGVtTmFtZV07XG4gICAgICAgIGlmICghc3lzdGVtKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJTeXN0ZW0gaXMgbm90IHJlZ2lzdGVyZWQgdG8gc2NlbmU6IFwiICsgc3lzdGVtKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gc3lzdGVtLmNvbnRyb2xsZXI7XG4gICAgfVxufVxuZXhwb3J0cy5BYnN0cmFjdFN5c3RlbUNvbnRyb2xsZXIgPSBBYnN0cmFjdFN5c3RlbUNvbnRyb2xsZXI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1BYnN0cmFjdFN5c3RlbUNvbnRyb2xsZXIuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/aframe-typescript-boilerplate/built/system/AbstractSystemController.js\n");

/***/ }),

/***/ "./node_modules/aframe-typescript-boilerplate/built/system/CompositeSystemController.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/aframe-typescript-boilerplate/built/system/CompositeSystemController.js ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst AbstractSystemController_1 = __webpack_require__(/*! ./AbstractSystemController */ \"./node_modules/aframe-typescript-boilerplate/built/system/AbstractSystemController.js\");\n/**\n * Enabled composing one system from many features which can encapsulate same functionality as system.\n */\nclass CompositeSystemController extends AbstractSystemController_1.AbstractSystemController {\n    constructor(systemName, schema, multiple, system, scene, data) {\n        super(system, scene, data);\n        this.features = [];\n    }\n    init() {\n        //console.log(this.systemName + \" init: \" + JSON.stringify(this.data));\n        this.features.forEach(controller => {\n            controller.init();\n        });\n    }\n    pause() {\n        //console.log(this.systemName + \" pause\");\n        this.features.forEach(controller => {\n            controller.pause();\n        });\n    }\n    play() {\n        //console.log(this.systemName + \" play\");\n        this.features.forEach(controller => {\n            controller.play();\n        });\n    }\n    tick(time, timeDelta) {\n        this.features.forEach(controller => {\n            controller.tick(time, timeDelta);\n        });\n    }\n    addFeature(feature) {\n        this.features.push(feature);\n    }\n}\nexports.CompositeSystemController = CompositeSystemController;\n//# sourceMappingURL=CompositeSystemController.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYWZyYW1lLXR5cGVzY3JpcHQtYm9pbGVycGxhdGUvYnVpbHQvc3lzdGVtL0NvbXBvc2l0ZVN5c3RlbUNvbnRyb2xsZXIuanM/OWE5ZCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE4QyxjQUFjO0FBQzVELG1DQUFtQyxtQkFBTyxDQUFDLHlIQUE0QjtBQUN2RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL2FmcmFtZS10eXBlc2NyaXB0LWJvaWxlcnBsYXRlL2J1aWx0L3N5c3RlbS9Db21wb3NpdGVTeXN0ZW1Db250cm9sbGVyLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCBBYnN0cmFjdFN5c3RlbUNvbnRyb2xsZXJfMSA9IHJlcXVpcmUoXCIuL0Fic3RyYWN0U3lzdGVtQ29udHJvbGxlclwiKTtcbi8qKlxuICogRW5hYmxlZCBjb21wb3Npbmcgb25lIHN5c3RlbSBmcm9tIG1hbnkgZmVhdHVyZXMgd2hpY2ggY2FuIGVuY2Fwc3VsYXRlIHNhbWUgZnVuY3Rpb25hbGl0eSBhcyBzeXN0ZW0uXG4gKi9cbmNsYXNzIENvbXBvc2l0ZVN5c3RlbUNvbnRyb2xsZXIgZXh0ZW5kcyBBYnN0cmFjdFN5c3RlbUNvbnRyb2xsZXJfMS5BYnN0cmFjdFN5c3RlbUNvbnRyb2xsZXIge1xuICAgIGNvbnN0cnVjdG9yKHN5c3RlbU5hbWUsIHNjaGVtYSwgbXVsdGlwbGUsIHN5c3RlbSwgc2NlbmUsIGRhdGEpIHtcbiAgICAgICAgc3VwZXIoc3lzdGVtLCBzY2VuZSwgZGF0YSk7XG4gICAgICAgIHRoaXMuZmVhdHVyZXMgPSBbXTtcbiAgICB9XG4gICAgaW5pdCgpIHtcbiAgICAgICAgLy9jb25zb2xlLmxvZyh0aGlzLnN5c3RlbU5hbWUgKyBcIiBpbml0OiBcIiArIEpTT04uc3RyaW5naWZ5KHRoaXMuZGF0YSkpO1xuICAgICAgICB0aGlzLmZlYXR1cmVzLmZvckVhY2goY29udHJvbGxlciA9PiB7XG4gICAgICAgICAgICBjb250cm9sbGVyLmluaXQoKTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHBhdXNlKCkge1xuICAgICAgICAvL2NvbnNvbGUubG9nKHRoaXMuc3lzdGVtTmFtZSArIFwiIHBhdXNlXCIpO1xuICAgICAgICB0aGlzLmZlYXR1cmVzLmZvckVhY2goY29udHJvbGxlciA9PiB7XG4gICAgICAgICAgICBjb250cm9sbGVyLnBhdXNlKCk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBwbGF5KCkge1xuICAgICAgICAvL2NvbnNvbGUubG9nKHRoaXMuc3lzdGVtTmFtZSArIFwiIHBsYXlcIik7XG4gICAgICAgIHRoaXMuZmVhdHVyZXMuZm9yRWFjaChjb250cm9sbGVyID0+IHtcbiAgICAgICAgICAgIGNvbnRyb2xsZXIucGxheSgpO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgdGljayh0aW1lLCB0aW1lRGVsdGEpIHtcbiAgICAgICAgdGhpcy5mZWF0dXJlcy5mb3JFYWNoKGNvbnRyb2xsZXIgPT4ge1xuICAgICAgICAgICAgY29udHJvbGxlci50aWNrKHRpbWUsIHRpbWVEZWx0YSk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBhZGRGZWF0dXJlKGZlYXR1cmUpIHtcbiAgICAgICAgdGhpcy5mZWF0dXJlcy5wdXNoKGZlYXR1cmUpO1xuICAgIH1cbn1cbmV4cG9ydHMuQ29tcG9zaXRlU3lzdGVtQ29udHJvbGxlciA9IENvbXBvc2l0ZVN5c3RlbUNvbnRyb2xsZXI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1Db21wb3NpdGVTeXN0ZW1Db250cm9sbGVyLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/aframe-typescript-boilerplate/built/system/CompositeSystemController.js\n");

/***/ }),

/***/ "./node_modules/aframe-typescript-boilerplate/built/system/ExampleSystemController.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/aframe-typescript-boilerplate/built/system/ExampleSystemController.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst AbstractSystemController_1 = __webpack_require__(/*! ./AbstractSystemController */ \"./node_modules/aframe-typescript-boilerplate/built/system/AbstractSystemController.js\");\nconst SystemControllerDefinition_1 = __webpack_require__(/*! ./SystemControllerDefinition */ \"./node_modules/aframe-typescript-boilerplate/built/system/SystemControllerDefinition.js\");\nclass ExampleSystemController extends AbstractSystemController_1.AbstractSystemController {\n    constructor(system, scene, data) {\n        super(system, scene, data);\n    }\n    init() {\n    }\n    pause() {\n    }\n    play() {\n    }\n    tick(time, timeDelta) {\n    }\n}\nExampleSystemController.DEFINITION = new SystemControllerDefinition_1.SystemControllerDefinition(\"example\", {}, (system, scene, data) => new ExampleSystemController(system, scene, data));\nexports.ExampleSystemController = ExampleSystemController;\n//# sourceMappingURL=ExampleSystemController.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYWZyYW1lLXR5cGVzY3JpcHQtYm9pbGVycGxhdGUvYnVpbHQvc3lzdGVtL0V4YW1wbGVTeXN0ZW1Db250cm9sbGVyLmpzP2RlYTkiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBOEMsY0FBYztBQUM1RCxtQ0FBbUMsbUJBQU8sQ0FBQyx5SEFBNEI7QUFDdkUscUNBQXFDLG1CQUFPLENBQUMsNkhBQThCO0FBQzNFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEdBQThHO0FBQzlHO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYWZyYW1lLXR5cGVzY3JpcHQtYm9pbGVycGxhdGUvYnVpbHQvc3lzdGVtL0V4YW1wbGVTeXN0ZW1Db250cm9sbGVyLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCBBYnN0cmFjdFN5c3RlbUNvbnRyb2xsZXJfMSA9IHJlcXVpcmUoXCIuL0Fic3RyYWN0U3lzdGVtQ29udHJvbGxlclwiKTtcbmNvbnN0IFN5c3RlbUNvbnRyb2xsZXJEZWZpbml0aW9uXzEgPSByZXF1aXJlKFwiLi9TeXN0ZW1Db250cm9sbGVyRGVmaW5pdGlvblwiKTtcbmNsYXNzIEV4YW1wbGVTeXN0ZW1Db250cm9sbGVyIGV4dGVuZHMgQWJzdHJhY3RTeXN0ZW1Db250cm9sbGVyXzEuQWJzdHJhY3RTeXN0ZW1Db250cm9sbGVyIHtcbiAgICBjb25zdHJ1Y3RvcihzeXN0ZW0sIHNjZW5lLCBkYXRhKSB7XG4gICAgICAgIHN1cGVyKHN5c3RlbSwgc2NlbmUsIGRhdGEpO1xuICAgIH1cbiAgICBpbml0KCkge1xuICAgIH1cbiAgICBwYXVzZSgpIHtcbiAgICB9XG4gICAgcGxheSgpIHtcbiAgICB9XG4gICAgdGljayh0aW1lLCB0aW1lRGVsdGEpIHtcbiAgICB9XG59XG5FeGFtcGxlU3lzdGVtQ29udHJvbGxlci5ERUZJTklUSU9OID0gbmV3IFN5c3RlbUNvbnRyb2xsZXJEZWZpbml0aW9uXzEuU3lzdGVtQ29udHJvbGxlckRlZmluaXRpb24oXCJleGFtcGxlXCIsIHt9LCAoc3lzdGVtLCBzY2VuZSwgZGF0YSkgPT4gbmV3IEV4YW1wbGVTeXN0ZW1Db250cm9sbGVyKHN5c3RlbSwgc2NlbmUsIGRhdGEpKTtcbmV4cG9ydHMuRXhhbXBsZVN5c3RlbUNvbnRyb2xsZXIgPSBFeGFtcGxlU3lzdGVtQ29udHJvbGxlcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUV4YW1wbGVTeXN0ZW1Db250cm9sbGVyLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/aframe-typescript-boilerplate/built/system/ExampleSystemController.js\n");

/***/ }),

/***/ "./node_modules/aframe-typescript-boilerplate/built/system/SystemControllerDefinition.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/aframe-typescript-boilerplate/built/system/SystemControllerDefinition.js ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass SystemControllerDefinition {\n    constructor(systemName, schema, constructSystemController) {\n        this.systemName = systemName;\n        this.schema = schema;\n        this.constructSystemController = constructSystemController;\n    }\n}\nexports.SystemControllerDefinition = SystemControllerDefinition;\n//# sourceMappingURL=SystemControllerDefinition.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYWZyYW1lLXR5cGVzY3JpcHQtYm9pbGVycGxhdGUvYnVpbHQvc3lzdGVtL1N5c3RlbUNvbnRyb2xsZXJEZWZpbml0aW9uLmpzP2JlZmUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBOEMsY0FBYztBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYWZyYW1lLXR5cGVzY3JpcHQtYm9pbGVycGxhdGUvYnVpbHQvc3lzdGVtL1N5c3RlbUNvbnRyb2xsZXJEZWZpbml0aW9uLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jbGFzcyBTeXN0ZW1Db250cm9sbGVyRGVmaW5pdGlvbiB7XG4gICAgY29uc3RydWN0b3Ioc3lzdGVtTmFtZSwgc2NoZW1hLCBjb25zdHJ1Y3RTeXN0ZW1Db250cm9sbGVyKSB7XG4gICAgICAgIHRoaXMuc3lzdGVtTmFtZSA9IHN5c3RlbU5hbWU7XG4gICAgICAgIHRoaXMuc2NoZW1hID0gc2NoZW1hO1xuICAgICAgICB0aGlzLmNvbnN0cnVjdFN5c3RlbUNvbnRyb2xsZXIgPSBjb25zdHJ1Y3RTeXN0ZW1Db250cm9sbGVyO1xuICAgIH1cbn1cbmV4cG9ydHMuU3lzdGVtQ29udHJvbGxlckRlZmluaXRpb24gPSBTeXN0ZW1Db250cm9sbGVyRGVmaW5pdGlvbjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVN5c3RlbUNvbnRyb2xsZXJEZWZpbml0aW9uLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/aframe-typescript-boilerplate/built/system/SystemControllerDefinition.js\n");

/***/ }),

/***/ "./node_modules/base64-js/index.js":
/*!*****************************************!*\
  !*** ./node_modules/base64-js/index.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYmFzZTY0LWpzL2luZGV4LmpzPzFmYjUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQVk7O0FBRVo7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGtDQUFrQyxTQUFTO0FBQzNDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxpQkFBaUIsU0FBUztBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLFNBQVM7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSwwQ0FBMEMsVUFBVTtBQUNwRDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9iYXNlNjQtanMvaW5kZXguanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxuZXhwb3J0cy5ieXRlTGVuZ3RoID0gYnl0ZUxlbmd0aFxuZXhwb3J0cy50b0J5dGVBcnJheSA9IHRvQnl0ZUFycmF5XG5leHBvcnRzLmZyb21CeXRlQXJyYXkgPSBmcm9tQnl0ZUFycmF5XG5cbnZhciBsb29rdXAgPSBbXVxudmFyIHJldkxvb2t1cCA9IFtdXG52YXIgQXJyID0gdHlwZW9mIFVpbnQ4QXJyYXkgIT09ICd1bmRlZmluZWQnID8gVWludDhBcnJheSA6IEFycmF5XG5cbnZhciBjb2RlID0gJ0FCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXowMTIzNDU2Nzg5Ky8nXG5mb3IgKHZhciBpID0gMCwgbGVuID0gY29kZS5sZW5ndGg7IGkgPCBsZW47ICsraSkge1xuICBsb29rdXBbaV0gPSBjb2RlW2ldXG4gIHJldkxvb2t1cFtjb2RlLmNoYXJDb2RlQXQoaSldID0gaVxufVxuXG4vLyBTdXBwb3J0IGRlY29kaW5nIFVSTC1zYWZlIGJhc2U2NCBzdHJpbmdzLCBhcyBOb2RlLmpzIGRvZXMuXG4vLyBTZWU6IGh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL0Jhc2U2NCNVUkxfYXBwbGljYXRpb25zXG5yZXZMb29rdXBbJy0nLmNoYXJDb2RlQXQoMCldID0gNjJcbnJldkxvb2t1cFsnXycuY2hhckNvZGVBdCgwKV0gPSA2M1xuXG5mdW5jdGlvbiBnZXRMZW5zIChiNjQpIHtcbiAgdmFyIGxlbiA9IGI2NC5sZW5ndGhcblxuICBpZiAobGVuICUgNCA+IDApIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgc3RyaW5nLiBMZW5ndGggbXVzdCBiZSBhIG11bHRpcGxlIG9mIDQnKVxuICB9XG5cbiAgLy8gVHJpbSBvZmYgZXh0cmEgYnl0ZXMgYWZ0ZXIgcGxhY2Vob2xkZXIgYnl0ZXMgYXJlIGZvdW5kXG4gIC8vIFNlZTogaHR0cHM6Ly9naXRodWIuY29tL2JlYXRnYW1taXQvYmFzZTY0LWpzL2lzc3Vlcy80MlxuICB2YXIgdmFsaWRMZW4gPSBiNjQuaW5kZXhPZignPScpXG4gIGlmICh2YWxpZExlbiA9PT0gLTEpIHZhbGlkTGVuID0gbGVuXG5cbiAgdmFyIHBsYWNlSG9sZGVyc0xlbiA9IHZhbGlkTGVuID09PSBsZW5cbiAgICA/IDBcbiAgICA6IDQgLSAodmFsaWRMZW4gJSA0KVxuXG4gIHJldHVybiBbdmFsaWRMZW4sIHBsYWNlSG9sZGVyc0xlbl1cbn1cblxuLy8gYmFzZTY0IGlzIDQvMyArIHVwIHRvIHR3byBjaGFyYWN0ZXJzIG9mIHRoZSBvcmlnaW5hbCBkYXRhXG5mdW5jdGlvbiBieXRlTGVuZ3RoIChiNjQpIHtcbiAgdmFyIGxlbnMgPSBnZXRMZW5zKGI2NClcbiAgdmFyIHZhbGlkTGVuID0gbGVuc1swXVxuICB2YXIgcGxhY2VIb2xkZXJzTGVuID0gbGVuc1sxXVxuICByZXR1cm4gKCh2YWxpZExlbiArIHBsYWNlSG9sZGVyc0xlbikgKiAzIC8gNCkgLSBwbGFjZUhvbGRlcnNMZW5cbn1cblxuZnVuY3Rpb24gX2J5dGVMZW5ndGggKGI2NCwgdmFsaWRMZW4sIHBsYWNlSG9sZGVyc0xlbikge1xuICByZXR1cm4gKCh2YWxpZExlbiArIHBsYWNlSG9sZGVyc0xlbikgKiAzIC8gNCkgLSBwbGFjZUhvbGRlcnNMZW5cbn1cblxuZnVuY3Rpb24gdG9CeXRlQXJyYXkgKGI2NCkge1xuICB2YXIgdG1wXG4gIHZhciBsZW5zID0gZ2V0TGVucyhiNjQpXG4gIHZhciB2YWxpZExlbiA9IGxlbnNbMF1cbiAgdmFyIHBsYWNlSG9sZGVyc0xlbiA9IGxlbnNbMV1cblxuICB2YXIgYXJyID0gbmV3IEFycihfYnl0ZUxlbmd0aChiNjQsIHZhbGlkTGVuLCBwbGFjZUhvbGRlcnNMZW4pKVxuXG4gIHZhciBjdXJCeXRlID0gMFxuXG4gIC8vIGlmIHRoZXJlIGFyZSBwbGFjZWhvbGRlcnMsIG9ubHkgZ2V0IHVwIHRvIHRoZSBsYXN0IGNvbXBsZXRlIDQgY2hhcnNcbiAgdmFyIGxlbiA9IHBsYWNlSG9sZGVyc0xlbiA+IDBcbiAgICA/IHZhbGlkTGVuIC0gNFxuICAgIDogdmFsaWRMZW5cblxuICBmb3IgKHZhciBpID0gMDsgaSA8IGxlbjsgaSArPSA0KSB7XG4gICAgdG1wID1cbiAgICAgIChyZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSldIDw8IDE4KSB8XG4gICAgICAocmV2TG9va3VwW2I2NC5jaGFyQ29kZUF0KGkgKyAxKV0gPDwgMTIpIHxcbiAgICAgIChyZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSArIDIpXSA8PCA2KSB8XG4gICAgICByZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSArIDMpXVxuICAgIGFycltjdXJCeXRlKytdID0gKHRtcCA+PiAxNikgJiAweEZGXG4gICAgYXJyW2N1ckJ5dGUrK10gPSAodG1wID4+IDgpICYgMHhGRlxuICAgIGFycltjdXJCeXRlKytdID0gdG1wICYgMHhGRlxuICB9XG5cbiAgaWYgKHBsYWNlSG9sZGVyc0xlbiA9PT0gMikge1xuICAgIHRtcCA9XG4gICAgICAocmV2TG9va3VwW2I2NC5jaGFyQ29kZUF0KGkpXSA8PCAyKSB8XG4gICAgICAocmV2TG9va3VwW2I2NC5jaGFyQ29kZUF0KGkgKyAxKV0gPj4gNClcbiAgICBhcnJbY3VyQnl0ZSsrXSA9IHRtcCAmIDB4RkZcbiAgfVxuXG4gIGlmIChwbGFjZUhvbGRlcnNMZW4gPT09IDEpIHtcbiAgICB0bXAgPVxuICAgICAgKHJldkxvb2t1cFtiNjQuY2hhckNvZGVBdChpKV0gPDwgMTApIHxcbiAgICAgIChyZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSArIDEpXSA8PCA0KSB8XG4gICAgICAocmV2TG9va3VwW2I2NC5jaGFyQ29kZUF0KGkgKyAyKV0gPj4gMilcbiAgICBhcnJbY3VyQnl0ZSsrXSA9ICh0bXAgPj4gOCkgJiAweEZGXG4gICAgYXJyW2N1ckJ5dGUrK10gPSB0bXAgJiAweEZGXG4gIH1cblxuICByZXR1cm4gYXJyXG59XG5cbmZ1bmN0aW9uIHRyaXBsZXRUb0Jhc2U2NCAobnVtKSB7XG4gIHJldHVybiBsb29rdXBbbnVtID4+IDE4ICYgMHgzRl0gK1xuICAgIGxvb2t1cFtudW0gPj4gMTIgJiAweDNGXSArXG4gICAgbG9va3VwW251bSA+PiA2ICYgMHgzRl0gK1xuICAgIGxvb2t1cFtudW0gJiAweDNGXVxufVxuXG5mdW5jdGlvbiBlbmNvZGVDaHVuayAodWludDgsIHN0YXJ0LCBlbmQpIHtcbiAgdmFyIHRtcFxuICB2YXIgb3V0cHV0ID0gW11cbiAgZm9yICh2YXIgaSA9IHN0YXJ0OyBpIDwgZW5kOyBpICs9IDMpIHtcbiAgICB0bXAgPVxuICAgICAgKCh1aW50OFtpXSA8PCAxNikgJiAweEZGMDAwMCkgK1xuICAgICAgKCh1aW50OFtpICsgMV0gPDwgOCkgJiAweEZGMDApICtcbiAgICAgICh1aW50OFtpICsgMl0gJiAweEZGKVxuICAgIG91dHB1dC5wdXNoKHRyaXBsZXRUb0Jhc2U2NCh0bXApKVxuICB9XG4gIHJldHVybiBvdXRwdXQuam9pbignJylcbn1cblxuZnVuY3Rpb24gZnJvbUJ5dGVBcnJheSAodWludDgpIHtcbiAgdmFyIHRtcFxuICB2YXIgbGVuID0gdWludDgubGVuZ3RoXG4gIHZhciBleHRyYUJ5dGVzID0gbGVuICUgMyAvLyBpZiB3ZSBoYXZlIDEgYnl0ZSBsZWZ0LCBwYWQgMiBieXRlc1xuICB2YXIgcGFydHMgPSBbXVxuICB2YXIgbWF4Q2h1bmtMZW5ndGggPSAxNjM4MyAvLyBtdXN0IGJlIG11bHRpcGxlIG9mIDNcblxuICAvLyBnbyB0aHJvdWdoIHRoZSBhcnJheSBldmVyeSB0aHJlZSBieXRlcywgd2UnbGwgZGVhbCB3aXRoIHRyYWlsaW5nIHN0dWZmIGxhdGVyXG4gIGZvciAodmFyIGkgPSAwLCBsZW4yID0gbGVuIC0gZXh0cmFCeXRlczsgaSA8IGxlbjI7IGkgKz0gbWF4Q2h1bmtMZW5ndGgpIHtcbiAgICBwYXJ0cy5wdXNoKGVuY29kZUNodW5rKFxuICAgICAgdWludDgsIGksIChpICsgbWF4Q2h1bmtMZW5ndGgpID4gbGVuMiA/IGxlbjIgOiAoaSArIG1heENodW5rTGVuZ3RoKVxuICAgICkpXG4gIH1cblxuICAvLyBwYWQgdGhlIGVuZCB3aXRoIHplcm9zLCBidXQgbWFrZSBzdXJlIHRvIG5vdCBmb3JnZXQgdGhlIGV4dHJhIGJ5dGVzXG4gIGlmIChleHRyYUJ5dGVzID09PSAxKSB7XG4gICAgdG1wID0gdWludDhbbGVuIC0gMV1cbiAgICBwYXJ0cy5wdXNoKFxuICAgICAgbG9va3VwW3RtcCA+PiAyXSArXG4gICAgICBsb29rdXBbKHRtcCA8PCA0KSAmIDB4M0ZdICtcbiAgICAgICc9PSdcbiAgICApXG4gIH0gZWxzZSBpZiAoZXh0cmFCeXRlcyA9PT0gMikge1xuICAgIHRtcCA9ICh1aW50OFtsZW4gLSAyXSA8PCA4KSArIHVpbnQ4W2xlbiAtIDFdXG4gICAgcGFydHMucHVzaChcbiAgICAgIGxvb2t1cFt0bXAgPj4gMTBdICtcbiAgICAgIGxvb2t1cFsodG1wID4+IDQpICYgMHgzRl0gK1xuICAgICAgbG9va3VwWyh0bXAgPDwgMikgJiAweDNGXSArXG4gICAgICAnPSdcbiAgICApXG4gIH1cblxuICByZXR1cm4gcGFydHMuam9pbignJylcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/base64-js/index.js\n");

/***/ }),

/***/ "./node_modules/core-util-is/lib/util.js":
/*!***********************************************!*\
  !*** ./node_modules/core-util-is/lib/util.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(Buffer) {// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\n\nfunction isArray(arg) {\n  if (Array.isArray) {\n    return Array.isArray(arg);\n  }\n  return objectToString(arg) === '[object Array]';\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = Buffer.isBuffer;\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node-libs-browser/node_modules/buffer/index.js */ \"./node_modules/node-libs-browser/node_modules/buffer/index.js\").Buffer))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS11dGlsLWlzL2xpYi91dGlsLmpzPzNhN2MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY29yZS11dGlsLWlzL2xpYi91dGlsLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IEpveWVudCwgSW5jLiBhbmQgb3RoZXIgTm9kZSBjb250cmlidXRvcnMuXG4vL1xuLy8gUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGFcbi8vIGNvcHkgb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGVcbi8vIFwiU29mdHdhcmVcIiksIHRvIGRlYWwgaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZ1xuLy8gd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHMgdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLFxuLy8gZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGwgY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdFxuLy8gcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpcyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlXG4vLyBmb2xsb3dpbmcgY29uZGl0aW9uczpcbi8vXG4vLyBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZFxuLy8gaW4gYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuXG4vL1xuLy8gVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIFwiQVMgSVNcIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTU1xuLy8gT1IgSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRlxuLy8gTUVSQ0hBTlRBQklMSVRZLCBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiBJTlxuLy8gTk8gRVZFTlQgU0hBTEwgVEhFIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sXG4vLyBEQU1BR0VTIE9SIE9USEVSIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1Jcbi8vIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLCBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEVcbi8vIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTiBUSEUgU09GVFdBUkUuXG5cbi8vIE5PVEU6IFRoZXNlIHR5cGUgY2hlY2tpbmcgZnVuY3Rpb25zIGludGVudGlvbmFsbHkgZG9uJ3QgdXNlIGBpbnN0YW5jZW9mYFxuLy8gYmVjYXVzZSBpdCBpcyBmcmFnaWxlIGFuZCBjYW4gYmUgZWFzaWx5IGZha2VkIHdpdGggYE9iamVjdC5jcmVhdGUoKWAuXG5cbmZ1bmN0aW9uIGlzQXJyYXkoYXJnKSB7XG4gIGlmIChBcnJheS5pc0FycmF5KSB7XG4gICAgcmV0dXJuIEFycmF5LmlzQXJyYXkoYXJnKTtcbiAgfVxuICByZXR1cm4gb2JqZWN0VG9TdHJpbmcoYXJnKSA9PT0gJ1tvYmplY3QgQXJyYXldJztcbn1cbmV4cG9ydHMuaXNBcnJheSA9IGlzQXJyYXk7XG5cbmZ1bmN0aW9uIGlzQm9vbGVhbihhcmcpIHtcbiAgcmV0dXJuIHR5cGVvZiBhcmcgPT09ICdib29sZWFuJztcbn1cbmV4cG9ydHMuaXNCb29sZWFuID0gaXNCb29sZWFuO1xuXG5mdW5jdGlvbiBpc051bGwoYXJnKSB7XG4gIHJldHVybiBhcmcgPT09IG51bGw7XG59XG5leHBvcnRzLmlzTnVsbCA9IGlzTnVsbDtcblxuZnVuY3Rpb24gaXNOdWxsT3JVbmRlZmluZWQoYXJnKSB7XG4gIHJldHVybiBhcmcgPT0gbnVsbDtcbn1cbmV4cG9ydHMuaXNOdWxsT3JVbmRlZmluZWQgPSBpc051bGxPclVuZGVmaW5lZDtcblxuZnVuY3Rpb24gaXNOdW1iZXIoYXJnKSB7XG4gIHJldHVybiB0eXBlb2YgYXJnID09PSAnbnVtYmVyJztcbn1cbmV4cG9ydHMuaXNOdW1iZXIgPSBpc051bWJlcjtcblxuZnVuY3Rpb24gaXNTdHJpbmcoYXJnKSB7XG4gIHJldHVybiB0eXBlb2YgYXJnID09PSAnc3RyaW5nJztcbn1cbmV4cG9ydHMuaXNTdHJpbmcgPSBpc1N0cmluZztcblxuZnVuY3Rpb24gaXNTeW1ib2woYXJnKSB7XG4gIHJldHVybiB0eXBlb2YgYXJnID09PSAnc3ltYm9sJztcbn1cbmV4cG9ydHMuaXNTeW1ib2wgPSBpc1N5bWJvbDtcblxuZnVuY3Rpb24gaXNVbmRlZmluZWQoYXJnKSB7XG4gIHJldHVybiBhcmcgPT09IHZvaWQgMDtcbn1cbmV4cG9ydHMuaXNVbmRlZmluZWQgPSBpc1VuZGVmaW5lZDtcblxuZnVuY3Rpb24gaXNSZWdFeHAocmUpIHtcbiAgcmV0dXJuIG9iamVjdFRvU3RyaW5nKHJlKSA9PT0gJ1tvYmplY3QgUmVnRXhwXSc7XG59XG5leHBvcnRzLmlzUmVnRXhwID0gaXNSZWdFeHA7XG5cbmZ1bmN0aW9uIGlzT2JqZWN0KGFyZykge1xuICByZXR1cm4gdHlwZW9mIGFyZyA9PT0gJ29iamVjdCcgJiYgYXJnICE9PSBudWxsO1xufVxuZXhwb3J0cy5pc09iamVjdCA9IGlzT2JqZWN0O1xuXG5mdW5jdGlvbiBpc0RhdGUoZCkge1xuICByZXR1cm4gb2JqZWN0VG9TdHJpbmcoZCkgPT09ICdbb2JqZWN0IERhdGVdJztcbn1cbmV4cG9ydHMuaXNEYXRlID0gaXNEYXRlO1xuXG5mdW5jdGlvbiBpc0Vycm9yKGUpIHtcbiAgcmV0dXJuIChvYmplY3RUb1N0cmluZyhlKSA9PT0gJ1tvYmplY3QgRXJyb3JdJyB8fCBlIGluc3RhbmNlb2YgRXJyb3IpO1xufVxuZXhwb3J0cy5pc0Vycm9yID0gaXNFcnJvcjtcblxuZnVuY3Rpb24gaXNGdW5jdGlvbihhcmcpIHtcbiAgcmV0dXJuIHR5cGVvZiBhcmcgPT09ICdmdW5jdGlvbic7XG59XG5leHBvcnRzLmlzRnVuY3Rpb24gPSBpc0Z1bmN0aW9uO1xuXG5mdW5jdGlvbiBpc1ByaW1pdGl2ZShhcmcpIHtcbiAgcmV0dXJuIGFyZyA9PT0gbnVsbCB8fFxuICAgICAgICAgdHlwZW9mIGFyZyA9PT0gJ2Jvb2xlYW4nIHx8XG4gICAgICAgICB0eXBlb2YgYXJnID09PSAnbnVtYmVyJyB8fFxuICAgICAgICAgdHlwZW9mIGFyZyA9PT0gJ3N0cmluZycgfHxcbiAgICAgICAgIHR5cGVvZiBhcmcgPT09ICdzeW1ib2wnIHx8ICAvLyBFUzYgc3ltYm9sXG4gICAgICAgICB0eXBlb2YgYXJnID09PSAndW5kZWZpbmVkJztcbn1cbmV4cG9ydHMuaXNQcmltaXRpdmUgPSBpc1ByaW1pdGl2ZTtcblxuZXhwb3J0cy5pc0J1ZmZlciA9IEJ1ZmZlci5pc0J1ZmZlcjtcblxuZnVuY3Rpb24gb2JqZWN0VG9TdHJpbmcobykge1xuICByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKG8pO1xufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/core-util-is/lib/util.js\n");

/***/ }),

/***/ "./node_modules/ieee754/index.js":
/*!***************************************!*\
  !*** ./node_modules/ieee754/index.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaWVlZTc1NC9pbmRleC5qcz85MTUyIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLFdBQVc7O0FBRW5CO0FBQ0E7QUFDQTtBQUNBLFFBQVEsV0FBVzs7QUFFbkI7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBOztBQUVBLFFBQVEsV0FBVzs7QUFFbkI7QUFDQTtBQUNBLFFBQVEsVUFBVTs7QUFFbEI7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9pZWVlNzU0L2luZGV4LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0cy5yZWFkID0gZnVuY3Rpb24gKGJ1ZmZlciwgb2Zmc2V0LCBpc0xFLCBtTGVuLCBuQnl0ZXMpIHtcbiAgdmFyIGUsIG1cbiAgdmFyIGVMZW4gPSAobkJ5dGVzICogOCkgLSBtTGVuIC0gMVxuICB2YXIgZU1heCA9ICgxIDw8IGVMZW4pIC0gMVxuICB2YXIgZUJpYXMgPSBlTWF4ID4+IDFcbiAgdmFyIG5CaXRzID0gLTdcbiAgdmFyIGkgPSBpc0xFID8gKG5CeXRlcyAtIDEpIDogMFxuICB2YXIgZCA9IGlzTEUgPyAtMSA6IDFcbiAgdmFyIHMgPSBidWZmZXJbb2Zmc2V0ICsgaV1cblxuICBpICs9IGRcblxuICBlID0gcyAmICgoMSA8PCAoLW5CaXRzKSkgLSAxKVxuICBzID4+PSAoLW5CaXRzKVxuICBuQml0cyArPSBlTGVuXG4gIGZvciAoOyBuQml0cyA+IDA7IGUgPSAoZSAqIDI1NikgKyBidWZmZXJbb2Zmc2V0ICsgaV0sIGkgKz0gZCwgbkJpdHMgLT0gOCkge31cblxuICBtID0gZSAmICgoMSA8PCAoLW5CaXRzKSkgLSAxKVxuICBlID4+PSAoLW5CaXRzKVxuICBuQml0cyArPSBtTGVuXG4gIGZvciAoOyBuQml0cyA+IDA7IG0gPSAobSAqIDI1NikgKyBidWZmZXJbb2Zmc2V0ICsgaV0sIGkgKz0gZCwgbkJpdHMgLT0gOCkge31cblxuICBpZiAoZSA9PT0gMCkge1xuICAgIGUgPSAxIC0gZUJpYXNcbiAgfSBlbHNlIGlmIChlID09PSBlTWF4KSB7XG4gICAgcmV0dXJuIG0gPyBOYU4gOiAoKHMgPyAtMSA6IDEpICogSW5maW5pdHkpXG4gIH0gZWxzZSB7XG4gICAgbSA9IG0gKyBNYXRoLnBvdygyLCBtTGVuKVxuICAgIGUgPSBlIC0gZUJpYXNcbiAgfVxuICByZXR1cm4gKHMgPyAtMSA6IDEpICogbSAqIE1hdGgucG93KDIsIGUgLSBtTGVuKVxufVxuXG5leHBvcnRzLndyaXRlID0gZnVuY3Rpb24gKGJ1ZmZlciwgdmFsdWUsIG9mZnNldCwgaXNMRSwgbUxlbiwgbkJ5dGVzKSB7XG4gIHZhciBlLCBtLCBjXG4gIHZhciBlTGVuID0gKG5CeXRlcyAqIDgpIC0gbUxlbiAtIDFcbiAgdmFyIGVNYXggPSAoMSA8PCBlTGVuKSAtIDFcbiAgdmFyIGVCaWFzID0gZU1heCA+PiAxXG4gIHZhciBydCA9IChtTGVuID09PSAyMyA/IE1hdGgucG93KDIsIC0yNCkgLSBNYXRoLnBvdygyLCAtNzcpIDogMClcbiAgdmFyIGkgPSBpc0xFID8gMCA6IChuQnl0ZXMgLSAxKVxuICB2YXIgZCA9IGlzTEUgPyAxIDogLTFcbiAgdmFyIHMgPSB2YWx1ZSA8IDAgfHwgKHZhbHVlID09PSAwICYmIDEgLyB2YWx1ZSA8IDApID8gMSA6IDBcblxuICB2YWx1ZSA9IE1hdGguYWJzKHZhbHVlKVxuXG4gIGlmIChpc05hTih2YWx1ZSkgfHwgdmFsdWUgPT09IEluZmluaXR5KSB7XG4gICAgbSA9IGlzTmFOKHZhbHVlKSA/IDEgOiAwXG4gICAgZSA9IGVNYXhcbiAgfSBlbHNlIHtcbiAgICBlID0gTWF0aC5mbG9vcihNYXRoLmxvZyh2YWx1ZSkgLyBNYXRoLkxOMilcbiAgICBpZiAodmFsdWUgKiAoYyA9IE1hdGgucG93KDIsIC1lKSkgPCAxKSB7XG4gICAgICBlLS1cbiAgICAgIGMgKj0gMlxuICAgIH1cbiAgICBpZiAoZSArIGVCaWFzID49IDEpIHtcbiAgICAgIHZhbHVlICs9IHJ0IC8gY1xuICAgIH0gZWxzZSB7XG4gICAgICB2YWx1ZSArPSBydCAqIE1hdGgucG93KDIsIDEgLSBlQmlhcylcbiAgICB9XG4gICAgaWYgKHZhbHVlICogYyA+PSAyKSB7XG4gICAgICBlKytcbiAgICAgIGMgLz0gMlxuICAgIH1cblxuICAgIGlmIChlICsgZUJpYXMgPj0gZU1heCkge1xuICAgICAgbSA9IDBcbiAgICAgIGUgPSBlTWF4XG4gICAgfSBlbHNlIGlmIChlICsgZUJpYXMgPj0gMSkge1xuICAgICAgbSA9ICgodmFsdWUgKiBjKSAtIDEpICogTWF0aC5wb3coMiwgbUxlbilcbiAgICAgIGUgPSBlICsgZUJpYXNcbiAgICB9IGVsc2Uge1xuICAgICAgbSA9IHZhbHVlICogTWF0aC5wb3coMiwgZUJpYXMgLSAxKSAqIE1hdGgucG93KDIsIG1MZW4pXG4gICAgICBlID0gMFxuICAgIH1cbiAgfVxuXG4gIGZvciAoOyBtTGVuID49IDg7IGJ1ZmZlcltvZmZzZXQgKyBpXSA9IG0gJiAweGZmLCBpICs9IGQsIG0gLz0gMjU2LCBtTGVuIC09IDgpIHt9XG5cbiAgZSA9IChlIDw8IG1MZW4pIHwgbVxuICBlTGVuICs9IG1MZW5cbiAgZm9yICg7IGVMZW4gPiAwOyBidWZmZXJbb2Zmc2V0ICsgaV0gPSBlICYgMHhmZiwgaSArPSBkLCBlIC89IDI1NiwgZUxlbiAtPSA4KSB7fVxuXG4gIGJ1ZmZlcltvZmZzZXQgKyBpIC0gZF0gfD0gcyAqIDEyOFxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/ieee754/index.js\n");

/***/ }),

/***/ "./node_modules/inherits/inherits_browser.js":
/*!***************************************************!*\
  !*** ./node_modules/inherits/inherits_browser.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaW5oZXJpdHMvaW5oZXJpdHNfYnJvd3Nlci5qcz8zZmI1Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL2luaGVyaXRzL2luaGVyaXRzX2Jyb3dzZXIuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpZiAodHlwZW9mIE9iamVjdC5jcmVhdGUgPT09ICdmdW5jdGlvbicpIHtcbiAgLy8gaW1wbGVtZW50YXRpb24gZnJvbSBzdGFuZGFyZCBub2RlLmpzICd1dGlsJyBtb2R1bGVcbiAgbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBpbmhlcml0cyhjdG9yLCBzdXBlckN0b3IpIHtcbiAgICBjdG9yLnN1cGVyXyA9IHN1cGVyQ3RvclxuICAgIGN0b3IucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckN0b3IucHJvdG90eXBlLCB7XG4gICAgICBjb25zdHJ1Y3Rvcjoge1xuICAgICAgICB2YWx1ZTogY3RvcixcbiAgICAgICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICAgIH1cbiAgICB9KTtcbiAgfTtcbn0gZWxzZSB7XG4gIC8vIG9sZCBzY2hvb2wgc2hpbSBmb3Igb2xkIGJyb3dzZXJzXG4gIG1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gaW5oZXJpdHMoY3Rvciwgc3VwZXJDdG9yKSB7XG4gICAgY3Rvci5zdXBlcl8gPSBzdXBlckN0b3JcbiAgICB2YXIgVGVtcEN0b3IgPSBmdW5jdGlvbiAoKSB7fVxuICAgIFRlbXBDdG9yLnByb3RvdHlwZSA9IHN1cGVyQ3Rvci5wcm90b3R5cGVcbiAgICBjdG9yLnByb3RvdHlwZSA9IG5ldyBUZW1wQ3RvcigpXG4gICAgY3Rvci5wcm90b3R5cGUuY29uc3RydWN0b3IgPSBjdG9yXG4gIH1cbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/inherits/inherits_browser.js\n");

/***/ }),

/***/ "./node_modules/isarray/index.js":
/*!***************************************!*\
  !*** ./node_modules/isarray/index.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaXNhcnJheS9pbmRleC5qcz9lM2RiIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGlCQUFpQjs7QUFFakI7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL2lzYXJyYXkvaW5kZXguanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgdG9TdHJpbmcgPSB7fS50b1N0cmluZztcblxubW9kdWxlLmV4cG9ydHMgPSBBcnJheS5pc0FycmF5IHx8IGZ1bmN0aW9uIChhcnIpIHtcbiAgcmV0dXJuIHRvU3RyaW5nLmNhbGwoYXJyKSA9PSAnW29iamVjdCBBcnJheV0nO1xufTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/isarray/index.js\n");

/***/ }),

/***/ "./node_modules/isomorphic-fetch/fetch-npm-browserify.js":
/*!***************************************************************!*\
  !*** ./node_modules/isomorphic-fetch/fetch-npm-browserify.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// the whatwg-fetch polyfill installs the fetch() function\n// on the global object (window or self)\n//\n// Return that as the export for use in Webpack, Browserify etc.\n__webpack_require__(/*! whatwg-fetch */ \"./node_modules/whatwg-fetch/fetch.js\");\nmodule.exports = self.fetch.bind(self);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaXNvbW9ycGhpYy1mZXRjaC9mZXRjaC1ucG0tYnJvd3NlcmlmeS5qcz8yZTk0Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQU8sQ0FBQywwREFBYztBQUN0QiIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9pc29tb3JwaGljLWZldGNoL2ZldGNoLW5wbS1icm93c2VyaWZ5LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gdGhlIHdoYXR3Zy1mZXRjaCBwb2x5ZmlsbCBpbnN0YWxscyB0aGUgZmV0Y2goKSBmdW5jdGlvblxuLy8gb24gdGhlIGdsb2JhbCBvYmplY3QgKHdpbmRvdyBvciBzZWxmKVxuLy9cbi8vIFJldHVybiB0aGF0IGFzIHRoZSBleHBvcnQgZm9yIHVzZSBpbiBXZWJwYWNrLCBCcm93c2VyaWZ5IGV0Yy5cbnJlcXVpcmUoJ3doYXR3Zy1mZXRjaCcpO1xubW9kdWxlLmV4cG9ydHMgPSBzZWxmLmZldGNoLmJpbmQoc2VsZik7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/isomorphic-fetch/fetch-npm-browserify.js\n");

/***/ }),

/***/ "./node_modules/node-libs-browser/node_modules/buffer/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/node-libs-browser/node_modules/buffer/index.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n\n\nvar base64 = __webpack_require__(/*! base64-js */ \"./node_modules/base64-js/index.js\")\nvar ieee754 = __webpack_require__(/*! ieee754 */ \"./node_modules/ieee754/index.js\")\nvar isArray = __webpack_require__(/*! isarray */ \"./node_modules/isarray/index.js\")\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/node-libs-browser/node_modules/buffer/index.js\n");

/***/ }),

/***/ "./node_modules/node-libs-browser/node_modules/events/events.js":
/*!**********************************************************************!*\
  !*** ./node_modules/node-libs-browser/node_modules/events/events.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/node-libs-browser/node_modules/events/events.js\n");

/***/ }),

/***/ "./node_modules/node-libs-browser/node_modules/timers-browserify/main.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/node-libs-browser/node_modules/timers-browserify/main.js ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global) {var scope = (typeof global !== \"undefined\" && global) ||\n            (typeof self !== \"undefined\" && self) ||\n            window;\nvar apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(scope, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\n__webpack_require__(/*! setimmediate */ \"./node_modules/setimmediate/setImmediate.js\");\n// On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbm9kZS1saWJzLWJyb3dzZXIvbm9kZV9tb2R1bGVzL3RpbWVycy1icm93c2VyaWZ5L21haW4uanM/MDlmYyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBO0FBQ0EsbUJBQU8sQ0FBQyxpRUFBYztBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbm9kZS1saWJzLWJyb3dzZXIvbm9kZV9tb2R1bGVzL3RpbWVycy1icm93c2VyaWZ5L21haW4uanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgc2NvcGUgPSAodHlwZW9mIGdsb2JhbCAhPT0gXCJ1bmRlZmluZWRcIiAmJiBnbG9iYWwpIHx8XG4gICAgICAgICAgICAodHlwZW9mIHNlbGYgIT09IFwidW5kZWZpbmVkXCIgJiYgc2VsZikgfHxcbiAgICAgICAgICAgIHdpbmRvdztcbnZhciBhcHBseSA9IEZ1bmN0aW9uLnByb3RvdHlwZS5hcHBseTtcblxuLy8gRE9NIEFQSXMsIGZvciBjb21wbGV0ZW5lc3NcblxuZXhwb3J0cy5zZXRUaW1lb3V0ID0gZnVuY3Rpb24oKSB7XG4gIHJldHVybiBuZXcgVGltZW91dChhcHBseS5jYWxsKHNldFRpbWVvdXQsIHNjb3BlLCBhcmd1bWVudHMpLCBjbGVhclRpbWVvdXQpO1xufTtcbmV4cG9ydHMuc2V0SW50ZXJ2YWwgPSBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIG5ldyBUaW1lb3V0KGFwcGx5LmNhbGwoc2V0SW50ZXJ2YWwsIHNjb3BlLCBhcmd1bWVudHMpLCBjbGVhckludGVydmFsKTtcbn07XG5leHBvcnRzLmNsZWFyVGltZW91dCA9XG5leHBvcnRzLmNsZWFySW50ZXJ2YWwgPSBmdW5jdGlvbih0aW1lb3V0KSB7XG4gIGlmICh0aW1lb3V0KSB7XG4gICAgdGltZW91dC5jbG9zZSgpO1xuICB9XG59O1xuXG5mdW5jdGlvbiBUaW1lb3V0KGlkLCBjbGVhckZuKSB7XG4gIHRoaXMuX2lkID0gaWQ7XG4gIHRoaXMuX2NsZWFyRm4gPSBjbGVhckZuO1xufVxuVGltZW91dC5wcm90b3R5cGUudW5yZWYgPSBUaW1lb3V0LnByb3RvdHlwZS5yZWYgPSBmdW5jdGlvbigpIHt9O1xuVGltZW91dC5wcm90b3R5cGUuY2xvc2UgPSBmdW5jdGlvbigpIHtcbiAgdGhpcy5fY2xlYXJGbi5jYWxsKHNjb3BlLCB0aGlzLl9pZCk7XG59O1xuXG4vLyBEb2VzIG5vdCBzdGFydCB0aGUgdGltZSwganVzdCBzZXRzIHVwIHRoZSBtZW1iZXJzIG5lZWRlZC5cbmV4cG9ydHMuZW5yb2xsID0gZnVuY3Rpb24oaXRlbSwgbXNlY3MpIHtcbiAgY2xlYXJUaW1lb3V0KGl0ZW0uX2lkbGVUaW1lb3V0SWQpO1xuICBpdGVtLl9pZGxlVGltZW91dCA9IG1zZWNzO1xufTtcblxuZXhwb3J0cy51bmVucm9sbCA9IGZ1bmN0aW9uKGl0ZW0pIHtcbiAgY2xlYXJUaW1lb3V0KGl0ZW0uX2lkbGVUaW1lb3V0SWQpO1xuICBpdGVtLl9pZGxlVGltZW91dCA9IC0xO1xufTtcblxuZXhwb3J0cy5fdW5yZWZBY3RpdmUgPSBleHBvcnRzLmFjdGl2ZSA9IGZ1bmN0aW9uKGl0ZW0pIHtcbiAgY2xlYXJUaW1lb3V0KGl0ZW0uX2lkbGVUaW1lb3V0SWQpO1xuXG4gIHZhciBtc2VjcyA9IGl0ZW0uX2lkbGVUaW1lb3V0O1xuICBpZiAobXNlY3MgPj0gMCkge1xuICAgIGl0ZW0uX2lkbGVUaW1lb3V0SWQgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uIG9uVGltZW91dCgpIHtcbiAgICAgIGlmIChpdGVtLl9vblRpbWVvdXQpXG4gICAgICAgIGl0ZW0uX29uVGltZW91dCgpO1xuICAgIH0sIG1zZWNzKTtcbiAgfVxufTtcblxuLy8gc2V0aW1tZWRpYXRlIGF0dGFjaGVzIGl0c2VsZiB0byB0aGUgZ2xvYmFsIG9iamVjdFxucmVxdWlyZShcInNldGltbWVkaWF0ZVwiKTtcbi8vIE9uIHNvbWUgZXhvdGljIGVudmlyb25tZW50cywgaXQncyBub3QgY2xlYXIgd2hpY2ggb2JqZWN0IGBzZXRpbW1lZGlhdGVgIHdhc1xuLy8gYWJsZSB0byBpbnN0YWxsIG9udG8uICBTZWFyY2ggZWFjaCBwb3NzaWJpbGl0eSBpbiB0aGUgc2FtZSBvcmRlciBhcyB0aGVcbi8vIGBzZXRpbW1lZGlhdGVgIGxpYnJhcnkuXG5leHBvcnRzLnNldEltbWVkaWF0ZSA9ICh0eXBlb2Ygc2VsZiAhPT0gXCJ1bmRlZmluZWRcIiAmJiBzZWxmLnNldEltbWVkaWF0ZSkgfHxcbiAgICAgICAgICAgICAgICAgICAgICAgKHR5cGVvZiBnbG9iYWwgIT09IFwidW5kZWZpbmVkXCIgJiYgZ2xvYmFsLnNldEltbWVkaWF0ZSkgfHxcbiAgICAgICAgICAgICAgICAgICAgICAgKHRoaXMgJiYgdGhpcy5zZXRJbW1lZGlhdGUpO1xuZXhwb3J0cy5jbGVhckltbWVkaWF0ZSA9ICh0eXBlb2Ygc2VsZiAhPT0gXCJ1bmRlZmluZWRcIiAmJiBzZWxmLmNsZWFySW1tZWRpYXRlKSB8fFxuICAgICAgICAgICAgICAgICAgICAgICAgICh0eXBlb2YgZ2xvYmFsICE9PSBcInVuZGVmaW5lZFwiICYmIGdsb2JhbC5jbGVhckltbWVkaWF0ZSkgfHxcbiAgICAgICAgICAgICAgICAgICAgICAgICAodGhpcyAmJiB0aGlzLmNsZWFySW1tZWRpYXRlKTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/node-libs-browser/node_modules/timers-browserify/main.js\n");

/***/ }),

/***/ "./node_modules/process-nextick-args/index.js":
/*!****************************************************!*\
  !*** ./node_modules/process-nextick-args/index.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(process) {\n\nif (!process.version ||\n    process.version.indexOf('v0.') === 0 ||\n    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {\n  module.exports = { nextTick: nextTick };\n} else {\n  module.exports = process\n}\n\nfunction nextTick(fn, arg1, arg2, arg3) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('\"callback\" argument must be a function');\n  }\n  var len = arguments.length;\n  var args, i;\n  switch (len) {\n  case 0:\n  case 1:\n    return process.nextTick(fn);\n  case 2:\n    return process.nextTick(function afterTickOne() {\n      fn.call(null, arg1);\n    });\n  case 3:\n    return process.nextTick(function afterTickTwo() {\n      fn.call(null, arg1, arg2);\n    });\n  case 4:\n    return process.nextTick(function afterTickThree() {\n      fn.call(null, arg1, arg2, arg3);\n    });\n  default:\n    args = new Array(len - 1);\n    i = 0;\n    while (i < args.length) {\n      args[i++] = arguments[i];\n    }\n    return process.nextTick(function afterTick() {\n      fn.apply(null, args);\n    });\n  }\n}\n\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../process/browser.js */ \"./node_modules/process/browser.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcHJvY2Vzcy1uZXh0aWNrLWFyZ3MvaW5kZXguanM/OTY2ZCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSwrQ0FBYTs7QUFFYjtBQUNBO0FBQ0E7QUFDQSxvQkFBb0I7QUFDcEIsQ0FBQztBQUNEO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvY2Vzcy1uZXh0aWNrLWFyZ3MvaW5kZXguanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmlmICghcHJvY2Vzcy52ZXJzaW9uIHx8XG4gICAgcHJvY2Vzcy52ZXJzaW9uLmluZGV4T2YoJ3YwLicpID09PSAwIHx8XG4gICAgcHJvY2Vzcy52ZXJzaW9uLmluZGV4T2YoJ3YxLicpID09PSAwICYmIHByb2Nlc3MudmVyc2lvbi5pbmRleE9mKCd2MS44LicpICE9PSAwKSB7XG4gIG1vZHVsZS5leHBvcnRzID0geyBuZXh0VGljazogbmV4dFRpY2sgfTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcHJvY2Vzc1xufVxuXG5mdW5jdGlvbiBuZXh0VGljayhmbiwgYXJnMSwgYXJnMiwgYXJnMykge1xuICBpZiAodHlwZW9mIGZuICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignXCJjYWxsYmFja1wiIGFyZ3VtZW50IG11c3QgYmUgYSBmdW5jdGlvbicpO1xuICB9XG4gIHZhciBsZW4gPSBhcmd1bWVudHMubGVuZ3RoO1xuICB2YXIgYXJncywgaTtcbiAgc3dpdGNoIChsZW4pIHtcbiAgY2FzZSAwOlxuICBjYXNlIDE6XG4gICAgcmV0dXJuIHByb2Nlc3MubmV4dFRpY2soZm4pO1xuICBjYXNlIDI6XG4gICAgcmV0dXJuIHByb2Nlc3MubmV4dFRpY2soZnVuY3Rpb24gYWZ0ZXJUaWNrT25lKCkge1xuICAgICAgZm4uY2FsbChudWxsLCBhcmcxKTtcbiAgICB9KTtcbiAgY2FzZSAzOlxuICAgIHJldHVybiBwcm9jZXNzLm5leHRUaWNrKGZ1bmN0aW9uIGFmdGVyVGlja1R3bygpIHtcbiAgICAgIGZuLmNhbGwobnVsbCwgYXJnMSwgYXJnMik7XG4gICAgfSk7XG4gIGNhc2UgNDpcbiAgICByZXR1cm4gcHJvY2Vzcy5uZXh0VGljayhmdW5jdGlvbiBhZnRlclRpY2tUaHJlZSgpIHtcbiAgICAgIGZuLmNhbGwobnVsbCwgYXJnMSwgYXJnMiwgYXJnMyk7XG4gICAgfSk7XG4gIGRlZmF1bHQ6XG4gICAgYXJncyA9IG5ldyBBcnJheShsZW4gLSAxKTtcbiAgICBpID0gMDtcbiAgICB3aGlsZSAoaSA8IGFyZ3MubGVuZ3RoKSB7XG4gICAgICBhcmdzW2krK10gPSBhcmd1bWVudHNbaV07XG4gICAgfVxuICAgIHJldHVybiBwcm9jZXNzLm5leHRUaWNrKGZ1bmN0aW9uIGFmdGVyVGljaygpIHtcbiAgICAgIGZuLmFwcGx5KG51bGwsIGFyZ3MpO1xuICAgIH0pO1xuICB9XG59XG5cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/process-nextick-args/index.js\n");

/***/ }),

/***/ "./node_modules/process/browser.js":
/*!*****************************************!*\
  !*** ./node_modules/process/browser.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/process/browser.js\n");

/***/ }),

/***/ "./node_modules/readable-stream/duplex-browser.js":
/*!********************************************************!*\
  !*** ./node_modules/readable-stream/duplex-browser.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! ./lib/_stream_duplex.js */ \"./node_modules/readable-stream/lib/_stream_duplex.js\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhZGFibGUtc3RyZWFtL2R1cGxleC1icm93c2VyLmpzPzA5NjAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsaUJBQWlCLG1CQUFPLENBQUMscUZBQXlCIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL3JlYWRhYmxlLXN0cmVhbS9kdXBsZXgtYnJvd3Nlci5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9saWIvX3N0cmVhbV9kdXBsZXguanMnKTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/readable-stream/duplex-browser.js\n");

/***/ }),

/***/ "./node_modules/readable-stream/lib/_stream_duplex.js":
/*!************************************************************!*\
  !*** ./node_modules/readable-stream/lib/_stream_duplex.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n\n\n/*<replacement>*/\n\nvar pna = __webpack_require__(/*! process-nextick-args */ \"./node_modules/process-nextick-args/index.js\");\n/*</replacement>*/\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    keys.push(key);\n  }return keys;\n};\n/*</replacement>*/\n\nmodule.exports = Duplex;\n\n/*<replacement>*/\nvar util = __webpack_require__(/*! core-util-is */ \"./node_modules/core-util-is/lib/util.js\");\nutil.inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\");\n/*</replacement>*/\n\nvar Readable = __webpack_require__(/*! ./_stream_readable */ \"./node_modules/readable-stream/lib/_stream_readable.js\");\nvar Writable = __webpack_require__(/*! ./_stream_writable */ \"./node_modules/readable-stream/lib/_stream_writable.js\");\n\nutil.inherits(Duplex, Readable);\n\n{\n  // avoid scope creep, the keys array can then be collected\n  var keys = objectKeys(Writable.prototype);\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false) this.readable = false;\n\n  if (options && options.writable === false) this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;\n\n  this.once('end', onend);\n}\n\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  pna.nextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});\n\nDuplex.prototype._destroy = function (err, cb) {\n  this.push(null);\n  this.end();\n\n  pna.nextTick(cb, err);\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhZGFibGUtc3RyZWFtL2xpYi9fc3RyZWFtX2R1cGxleC5qcz9iMTlhIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRWE7O0FBRWI7O0FBRUEsVUFBVSxtQkFBTyxDQUFDLDBFQUFzQjtBQUN4Qzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQSxXQUFXLG1CQUFPLENBQUMsNkRBQWM7QUFDakMsZ0JBQWdCLG1CQUFPLENBQUMsNkRBQVU7QUFDbEM7O0FBRUEsZUFBZSxtQkFBTyxDQUFDLGtGQUFvQjtBQUMzQyxlQUFlLG1CQUFPLENBQUMsa0ZBQW9COztBQUUzQzs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsaUJBQWlCO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7O0FBRUE7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9yZWFkYWJsZS1zdHJlYW0vbGliL19zdHJlYW1fZHVwbGV4LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IEpveWVudCwgSW5jLiBhbmQgb3RoZXIgTm9kZSBjb250cmlidXRvcnMuXG4vL1xuLy8gUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGFcbi8vIGNvcHkgb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGVcbi8vIFwiU29mdHdhcmVcIiksIHRvIGRlYWwgaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZ1xuLy8gd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHMgdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLFxuLy8gZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGwgY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdFxuLy8gcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpcyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlXG4vLyBmb2xsb3dpbmcgY29uZGl0aW9uczpcbi8vXG4vLyBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZFxuLy8gaW4gYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuXG4vL1xuLy8gVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIFwiQVMgSVNcIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTU1xuLy8gT1IgSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRlxuLy8gTUVSQ0hBTlRBQklMSVRZLCBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiBJTlxuLy8gTk8gRVZFTlQgU0hBTEwgVEhFIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sXG4vLyBEQU1BR0VTIE9SIE9USEVSIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1Jcbi8vIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLCBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEVcbi8vIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTiBUSEUgU09GVFdBUkUuXG5cbi8vIGEgZHVwbGV4IHN0cmVhbSBpcyBqdXN0IGEgc3RyZWFtIHRoYXQgaXMgYm90aCByZWFkYWJsZSBhbmQgd3JpdGFibGUuXG4vLyBTaW5jZSBKUyBkb2Vzbid0IGhhdmUgbXVsdGlwbGUgcHJvdG90eXBhbCBpbmhlcml0YW5jZSwgdGhpcyBjbGFzc1xuLy8gcHJvdG90eXBhbGx5IGluaGVyaXRzIGZyb20gUmVhZGFibGUsIGFuZCB0aGVuIHBhcmFzaXRpY2FsbHkgZnJvbVxuLy8gV3JpdGFibGUuXG5cbid1c2Ugc3RyaWN0JztcblxuLyo8cmVwbGFjZW1lbnQ+Ki9cblxudmFyIHBuYSA9IHJlcXVpcmUoJ3Byb2Nlc3MtbmV4dGljay1hcmdzJyk7XG4vKjwvcmVwbGFjZW1lbnQ+Ki9cblxuLyo8cmVwbGFjZW1lbnQ+Ki9cbnZhciBvYmplY3RLZXlzID0gT2JqZWN0LmtleXMgfHwgZnVuY3Rpb24gKG9iaikge1xuICB2YXIga2V5cyA9IFtdO1xuICBmb3IgKHZhciBrZXkgaW4gb2JqKSB7XG4gICAga2V5cy5wdXNoKGtleSk7XG4gIH1yZXR1cm4ga2V5cztcbn07XG4vKjwvcmVwbGFjZW1lbnQ+Ki9cblxubW9kdWxlLmV4cG9ydHMgPSBEdXBsZXg7XG5cbi8qPHJlcGxhY2VtZW50PiovXG52YXIgdXRpbCA9IHJlcXVpcmUoJ2NvcmUtdXRpbC1pcycpO1xudXRpbC5pbmhlcml0cyA9IHJlcXVpcmUoJ2luaGVyaXRzJyk7XG4vKjwvcmVwbGFjZW1lbnQ+Ki9cblxudmFyIFJlYWRhYmxlID0gcmVxdWlyZSgnLi9fc3RyZWFtX3JlYWRhYmxlJyk7XG52YXIgV3JpdGFibGUgPSByZXF1aXJlKCcuL19zdHJlYW1fd3JpdGFibGUnKTtcblxudXRpbC5pbmhlcml0cyhEdXBsZXgsIFJlYWRhYmxlKTtcblxue1xuICAvLyBhdm9pZCBzY29wZSBjcmVlcCwgdGhlIGtleXMgYXJyYXkgY2FuIHRoZW4gYmUgY29sbGVjdGVkXG4gIHZhciBrZXlzID0gb2JqZWN0S2V5cyhXcml0YWJsZS5wcm90b3R5cGUpO1xuICBmb3IgKHZhciB2ID0gMDsgdiA8IGtleXMubGVuZ3RoOyB2KyspIHtcbiAgICB2YXIgbWV0aG9kID0ga2V5c1t2XTtcbiAgICBpZiAoIUR1cGxleC5wcm90b3R5cGVbbWV0aG9kXSkgRHVwbGV4LnByb3RvdHlwZVttZXRob2RdID0gV3JpdGFibGUucHJvdG90eXBlW21ldGhvZF07XG4gIH1cbn1cblxuZnVuY3Rpb24gRHVwbGV4KG9wdGlvbnMpIHtcbiAgaWYgKCEodGhpcyBpbnN0YW5jZW9mIER1cGxleCkpIHJldHVybiBuZXcgRHVwbGV4KG9wdGlvbnMpO1xuXG4gIFJlYWRhYmxlLmNhbGwodGhpcywgb3B0aW9ucyk7XG4gIFdyaXRhYmxlLmNhbGwodGhpcywgb3B0aW9ucyk7XG5cbiAgaWYgKG9wdGlvbnMgJiYgb3B0aW9ucy5yZWFkYWJsZSA9PT0gZmFsc2UpIHRoaXMucmVhZGFibGUgPSBmYWxzZTtcblxuICBpZiAob3B0aW9ucyAmJiBvcHRpb25zLndyaXRhYmxlID09PSBmYWxzZSkgdGhpcy53cml0YWJsZSA9IGZhbHNlO1xuXG4gIHRoaXMuYWxsb3dIYWxmT3BlbiA9IHRydWU7XG4gIGlmIChvcHRpb25zICYmIG9wdGlvbnMuYWxsb3dIYWxmT3BlbiA9PT0gZmFsc2UpIHRoaXMuYWxsb3dIYWxmT3BlbiA9IGZhbHNlO1xuXG4gIHRoaXMub25jZSgnZW5kJywgb25lbmQpO1xufVxuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoRHVwbGV4LnByb3RvdHlwZSwgJ3dyaXRhYmxlSGlnaFdhdGVyTWFyaycsIHtcbiAgLy8gbWFraW5nIGl0IGV4cGxpY2l0IHRoaXMgcHJvcGVydHkgaXMgbm90IGVudW1lcmFibGVcbiAgLy8gYmVjYXVzZSBvdGhlcndpc2Ugc29tZSBwcm90b3R5cGUgbWFuaXB1bGF0aW9uIGluXG4gIC8vIHVzZXJsYW5kIHdpbGwgZmFpbFxuICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIHRoaXMuX3dyaXRhYmxlU3RhdGUuaGlnaFdhdGVyTWFyaztcbiAgfVxufSk7XG5cbi8vIHRoZSBuby1oYWxmLW9wZW4gZW5mb3JjZXJcbmZ1bmN0aW9uIG9uZW5kKCkge1xuICAvLyBpZiB3ZSBhbGxvdyBoYWxmLW9wZW4gc3RhdGUsIG9yIGlmIHRoZSB3cml0YWJsZSBzaWRlIGVuZGVkLFxuICAvLyB0aGVuIHdlJ3JlIG9rLlxuICBpZiAodGhpcy5hbGxvd0hhbGZPcGVuIHx8IHRoaXMuX3dyaXRhYmxlU3RhdGUuZW5kZWQpIHJldHVybjtcblxuICAvLyBubyBtb3JlIGRhdGEgY2FuIGJlIHdyaXR0ZW4uXG4gIC8vIEJ1dCBhbGxvdyBtb3JlIHdyaXRlcyB0byBoYXBwZW4gaW4gdGhpcyB0aWNrLlxuICBwbmEubmV4dFRpY2sob25FbmROVCwgdGhpcyk7XG59XG5cbmZ1bmN0aW9uIG9uRW5kTlQoc2VsZikge1xuICBzZWxmLmVuZCgpO1xufVxuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoRHVwbGV4LnByb3RvdHlwZSwgJ2Rlc3Ryb3llZCcsIHtcbiAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgaWYgKHRoaXMuX3JlYWRhYmxlU3RhdGUgPT09IHVuZGVmaW5lZCB8fCB0aGlzLl93cml0YWJsZVN0YXRlID09PSB1bmRlZmluZWQpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgcmV0dXJuIHRoaXMuX3JlYWRhYmxlU3RhdGUuZGVzdHJveWVkICYmIHRoaXMuX3dyaXRhYmxlU3RhdGUuZGVzdHJveWVkO1xuICB9LFxuICBzZXQ6IGZ1bmN0aW9uICh2YWx1ZSkge1xuICAgIC8vIHdlIGlnbm9yZSB0aGUgdmFsdWUgaWYgdGhlIHN0cmVhbVxuICAgIC8vIGhhcyBub3QgYmVlbiBpbml0aWFsaXplZCB5ZXRcbiAgICBpZiAodGhpcy5fcmVhZGFibGVTdGF0ZSA9PT0gdW5kZWZpbmVkIHx8IHRoaXMuX3dyaXRhYmxlU3RhdGUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIC8vIGJhY2t3YXJkIGNvbXBhdGliaWxpdHksIHRoZSB1c2VyIGlzIGV4cGxpY2l0bHlcbiAgICAvLyBtYW5hZ2luZyBkZXN0cm95ZWRcbiAgICB0aGlzLl9yZWFkYWJsZVN0YXRlLmRlc3Ryb3llZCA9IHZhbHVlO1xuICAgIHRoaXMuX3dyaXRhYmxlU3RhdGUuZGVzdHJveWVkID0gdmFsdWU7XG4gIH1cbn0pO1xuXG5EdXBsZXgucHJvdG90eXBlLl9kZXN0cm95ID0gZnVuY3Rpb24gKGVyciwgY2IpIHtcbiAgdGhpcy5wdXNoKG51bGwpO1xuICB0aGlzLmVuZCgpO1xuXG4gIHBuYS5uZXh0VGljayhjYiwgZXJyKTtcbn07Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/readable-stream/lib/_stream_duplex.js\n");

/***/ }),

/***/ "./node_modules/readable-stream/lib/_stream_passthrough.js":
/*!*****************************************************************!*\
  !*** ./node_modules/readable-stream/lib/_stream_passthrough.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n\n\nmodule.exports = PassThrough;\n\nvar Transform = __webpack_require__(/*! ./_stream_transform */ \"./node_modules/readable-stream/lib/_stream_transform.js\");\n\n/*<replacement>*/\nvar util = __webpack_require__(/*! core-util-is */ \"./node_modules/core-util-is/lib/util.js\");\nutil.inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\");\n/*</replacement>*/\n\nutil.inherits(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhZGFibGUtc3RyZWFtL2xpYi9fc3RyZWFtX3Bhc3N0aHJvdWdoLmpzPzc4MGYiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRWE7O0FBRWI7O0FBRUEsZ0JBQWdCLG1CQUFPLENBQUMsb0ZBQXFCOztBQUU3QztBQUNBLFdBQVcsbUJBQU8sQ0FBQyw2REFBYztBQUNqQyxnQkFBZ0IsbUJBQU8sQ0FBQyw2REFBVTtBQUNsQzs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL3JlYWRhYmxlLXN0cmVhbS9saWIvX3N0cmVhbV9wYXNzdGhyb3VnaC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCBKb3llbnQsIEluYy4gYW5kIG90aGVyIE5vZGUgY29udHJpYnV0b3JzLlxuLy9cbi8vIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhXG4vLyBjb3B5IG9mIHRoaXMgc29mdHdhcmUgYW5kIGFzc29jaWF0ZWQgZG9jdW1lbnRhdGlvbiBmaWxlcyAodGhlXG4vLyBcIlNvZnR3YXJlXCIpLCB0byBkZWFsIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmdcbi8vIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCxcbi8vIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vciBzZWxsIGNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXRcbi8vIHBlcnNvbnMgdG8gd2hvbSB0aGUgU29mdHdhcmUgaXMgZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvIHRoZVxuLy8gZm9sbG93aW5nIGNvbmRpdGlvbnM6XG4vL1xuLy8gVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWRcbi8vIGluIGFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLlxuLy9cbi8vIFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCBcIkFTIElTXCIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1Ncbi8vIE9SIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0Zcbi8vIE1FUkNIQU5UQUJJTElUWSwgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gSU5cbi8vIE5PIEVWRU5UIFNIQUxMIFRIRSBBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLFxuLy8gREFNQUdFUyBPUiBPVEhFUiBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SXG4vLyBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSwgT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFXG4vLyBVU0UgT1IgT1RIRVIgREVBTElOR1MgSU4gVEhFIFNPRlRXQVJFLlxuXG4vLyBhIHBhc3N0aHJvdWdoIHN0cmVhbS5cbi8vIGJhc2ljYWxseSBqdXN0IHRoZSBtb3N0IG1pbmltYWwgc29ydCBvZiBUcmFuc2Zvcm0gc3RyZWFtLlxuLy8gRXZlcnkgd3JpdHRlbiBjaHVuayBnZXRzIG91dHB1dCBhcy1pcy5cblxuJ3VzZSBzdHJpY3QnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFBhc3NUaHJvdWdoO1xuXG52YXIgVHJhbnNmb3JtID0gcmVxdWlyZSgnLi9fc3RyZWFtX3RyYW5zZm9ybScpO1xuXG4vKjxyZXBsYWNlbWVudD4qL1xudmFyIHV0aWwgPSByZXF1aXJlKCdjb3JlLXV0aWwtaXMnKTtcbnV0aWwuaW5oZXJpdHMgPSByZXF1aXJlKCdpbmhlcml0cycpO1xuLyo8L3JlcGxhY2VtZW50PiovXG5cbnV0aWwuaW5oZXJpdHMoUGFzc1Rocm91Z2gsIFRyYW5zZm9ybSk7XG5cbmZ1bmN0aW9uIFBhc3NUaHJvdWdoKG9wdGlvbnMpIHtcbiAgaWYgKCEodGhpcyBpbnN0YW5jZW9mIFBhc3NUaHJvdWdoKSkgcmV0dXJuIG5ldyBQYXNzVGhyb3VnaChvcHRpb25zKTtcblxuICBUcmFuc2Zvcm0uY2FsbCh0aGlzLCBvcHRpb25zKTtcbn1cblxuUGFzc1Rocm91Z2gucHJvdG90eXBlLl90cmFuc2Zvcm0gPSBmdW5jdGlvbiAoY2h1bmssIGVuY29kaW5nLCBjYikge1xuICBjYihudWxsLCBjaHVuayk7XG59OyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/readable-stream/lib/_stream_passthrough.js\n");

/***/ }),

/***/ "./node_modules/readable-stream/lib/_stream_readable.js":
/*!**************************************************************!*\
  !*** ./node_modules/readable-stream/lib/_stream_readable.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global, process) {// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n/*<replacement>*/\n\nvar pna = __webpack_require__(/*! process-nextick-args */ \"./node_modules/process-nextick-args/index.js\");\n/*</replacement>*/\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar isArray = __webpack_require__(/*! isarray */ \"./node_modules/isarray/index.js\");\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = __webpack_require__(/*! events */ \"./node_modules/node-libs-browser/node_modules/events/events.js\").EventEmitter;\n\nvar EElistenerCount = function (emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = __webpack_require__(/*! ./internal/streams/stream */ \"./node_modules/readable-stream/lib/internal/streams/stream-browser.js\");\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"./node_modules/safe-buffer/index.js\").Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\n/*<replacement>*/\nvar util = __webpack_require__(/*! core-util-is */ \"./node_modules/core-util-is/lib/util.js\");\nutil.inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\");\n/*</replacement>*/\n\n/*<replacement>*/\nvar debugUtil = __webpack_require__(/*! util */ 0);\nvar debug = void 0;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function () {};\n}\n/*</replacement>*/\n\nvar BufferList = __webpack_require__(/*! ./internal/streams/BufferList */ \"./node_modules/readable-stream/lib/internal/streams/BufferList.js\");\nvar destroyImpl = __webpack_require__(/*! ./internal/streams/destroy */ \"./node_modules/readable-stream/lib/internal/streams/destroy.js\");\nvar StringDecoder;\n\nutil.inherits(Readable, Stream);\n\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\n\nfunction ReadableState(options, stream) {\n  Duplex = Duplex || __webpack_require__(/*! ./_stream_duplex */ \"./node_modules/readable-stream/lib/_stream_duplex.js\");\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  var readableHwm = options.readableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (readableHwm || readableHwm === 0)) this.highWaterMark = readableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = __webpack_require__(/*! string_decoder/ */ \"./node_modules/string_decoder/lib/string_decoder.js\").StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  Duplex = Duplex || __webpack_require__(/*! ./_stream_duplex */ \"./node_modules/readable-stream/lib/_stream_duplex.js\");\n\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n\n  Stream.call(this);\n}\n\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n  }\n});\n\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function (err, cb) {\n  this.push(null);\n  cb(err);\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\n\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  var state = stream._readableState;\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n    if (er) {\n      stream.emit('error', er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n\n      if (addToFront) {\n        if (state.endEmitted) stream.emit('error', new Error('stream.unshift() after end event'));else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        stream.emit('error', new Error('stream.push() after EOF'));\n      } else {\n        state.reading = false;\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n    }\n  }\n\n  return needMoreData(state);\n}\n\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    stream.emit('data', chunk);\n    stream.read(0);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n\n    if (state.needReadable) emitReadable(stream);\n  }\n  maybeReadMore(stream, state);\n}\n\nfunction chunkInvalid(state, chunk) {\n  var er;\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);\n}\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = __webpack_require__(/*! string_decoder/ */ \"./node_modules/string_decoder/lib/string_decoder.js\").StringDecoder;\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n  return this;\n};\n\n// Don't raise the hwm > 8MB\nvar MAX_HWM = 0x800000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = true;\n    n = 0;\n  } else {\n    state.length -= n;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n\n  return ret;\n};\n\nfunction onEofChunk(stream, state) {\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // emit 'readable' now to make sure it gets picked up.\n  emitReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    if (state.sync) pna.nextTick(emitReadable_, stream);else emitReadable_(stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  debug('emit readable');\n  stream.emit('readable');\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    pna.nextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;else len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  this.emit('error', new Error('_read() is not implemented'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) pna.nextTick(endFn);else src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  // If the user pushes more data while we're writing to dest then we'll end up\n  // in ondata again. However, we only want to increase awaitDrain once because\n  // dest will only emit one 'drain' event for the multiple writes.\n  // => Introduce a guard on increasing awaitDrain.\n  var increasedAwaitDrain = false;\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    increasedAwaitDrain = false;\n    var ret = dest.write(chunk);\n    if (false === ret && !increasedAwaitDrain) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', src._readableState.awaitDrain);\n        src._readableState.awaitDrain++;\n        increasedAwaitDrain = true;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function () {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = { hasUnpiped: false };\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++) {\n      dests[i].emit('unpipe', this, unpipeInfo);\n    }return this;\n  }\n\n  // try to find the right one.\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this, unpipeInfo);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n\n  if (ev === 'data') {\n    // Start flowing on next tick if stream isn't explicitly paused\n    if (this._readableState.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    var state = this._readableState;\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.emittedReadable = false;\n      if (!state.reading) {\n        pna.nextTick(nReadingNextTick, this);\n      } else if (state.length) {\n        emitReadable(this);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    state.flowing = true;\n    resume(this, state);\n  }\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    pna.nextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  if (!state.reading) {\n    debug('resume read 0');\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  state.awaitDrain = 0;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (false !== this._readableState.flowing) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null) {}\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n\n  var state = this._readableState;\n  var paused = false;\n\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n\n    _this.push(null);\n  });\n\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = _this.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function (method) {\n        return function () {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  }\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  this._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return this;\n};\n\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._readableState.highWaterMark;\n  }\n});\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = fromListPartial(n, state.buffer, state.decoder);\n  }\n\n  return ret;\n}\n\n// Extracts only enough buffered data to satisfy the amount requested.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromListPartial(n, list, hasStrings) {\n  var ret;\n  if (n < list.head.data.length) {\n    // slice is the same for buffers and strings\n    ret = list.head.data.slice(0, n);\n    list.head.data = list.head.data.slice(n);\n  } else if (n === list.head.data.length) {\n    // first chunk is a perfect match\n    ret = list.shift();\n  } else {\n    // result spans more than one buffer\n    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);\n  }\n  return ret;\n}\n\n// Copies a specified amount of characters from the list of buffered data\n// chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBufferString(n, list) {\n  var p = list.head;\n  var c = 1;\n  var ret = p.data;\n  n -= ret.length;\n  while (p = p.next) {\n    var str = p.data;\n    var nb = n > str.length ? str.length : n;\n    if (nb === str.length) ret += str;else ret += str.slice(0, n);\n    n -= nb;\n    if (n === 0) {\n      if (nb === str.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = str.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\n// Copies a specified amount of bytes from the list of buffered data chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBuffer(n, list) {\n  var ret = Buffer.allocUnsafe(n);\n  var p = list.head;\n  var c = 1;\n  p.data.copy(ret);\n  n -= p.data.length;\n  while (p = p.next) {\n    var buf = p.data;\n    var nb = n > buf.length ? buf.length : n;\n    buf.copy(ret, ret.length - n, 0, nb);\n    n -= nb;\n    if (n === 0) {\n      if (nb === buf.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = buf.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0) throw new Error('\"endReadable()\" called on non-empty stream');\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    pna.nextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n  }\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\"), __webpack_require__(/*! ./../../process/browser.js */ \"./node_modules/process/browser.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhZGFibGUtc3RyZWFtL2xpYi9fc3RyZWFtX3JlYWRhYmxlLmpzP2FkNzEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFYTs7QUFFYjs7QUFFQSxVQUFVLG1CQUFPLENBQUMsMEVBQXNCO0FBQ3hDOztBQUVBOztBQUVBO0FBQ0EsY0FBYyxtQkFBTyxDQUFDLGdEQUFTO0FBQy9COztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBLFNBQVMsbUJBQU8sQ0FBQyw4RUFBUTs7QUFFekI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxhQUFhLG1CQUFPLENBQUMsd0dBQTJCO0FBQ2hEOztBQUVBOztBQUVBLGFBQWEsbUJBQU8sQ0FBQyx3REFBYTtBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBLFdBQVcsbUJBQU8sQ0FBQyw2REFBYztBQUNqQyxnQkFBZ0IsbUJBQU8sQ0FBQyw2REFBVTtBQUNsQzs7QUFFQTtBQUNBLGdCQUFnQixtQkFBTyxDQUFDLGFBQU07QUFDOUI7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTs7QUFFQSxpQkFBaUIsbUJBQU8sQ0FBQyx3R0FBK0I7QUFDeEQsa0JBQWtCLG1CQUFPLENBQUMsa0dBQTRCO0FBQ3REOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUVBQXlFLDZFQUE2RTtBQUN0Sjs7QUFFQTtBQUNBLHFCQUFxQixtQkFBTyxDQUFDLDhFQUFrQjs7QUFFL0M7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGlEQUFpRCwwRkFBMEY7O0FBRTNJO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSx3Q0FBd0MsbUJBQU8sQ0FBQyw0RUFBaUI7QUFDakU7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxxQkFBcUIsbUJBQU8sQ0FBQyw4RUFBa0I7O0FBRS9DOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxrR0FBa0c7QUFDbEcsT0FBTztBQUNQO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBLDRGQUE0RjtBQUM1RixTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxnREFBZ0Q7O0FBRWhEO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0Esc0NBQXNDLG1CQUFPLENBQUMsNEVBQWlCO0FBQy9EO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEVBQTRFO0FBQzVFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2REFBNkQ7QUFDN0Q7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLHNDQUFzQzs7QUFFdEM7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdEQUF3RDtBQUN4RDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQSw0Q0FBNEM7O0FBRTVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLG9CQUFvQjs7QUFFcEI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxtQkFBbUIsU0FBUztBQUM1QjtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBOztBQUVBO0FBQ0EsNEVBQTRFOztBQUU1RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7O0FBRUE7QUFDQSxpQkFBaUIseUJBQXlCO0FBQzFDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLG1EQUFtRDtBQUNuRDtBQUNBLG1EQUFtRCxpRUFBaUU7QUFDcEg7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQ0FBc0M7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1Q0FBdUM7QUFDdkMsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1Q0FBdUM7QUFDdkMsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGdDQUFnQyxPQUFPO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBLEMiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhZGFibGUtc3RyZWFtL2xpYi9fc3RyZWFtX3JlYWRhYmxlLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IEpveWVudCwgSW5jLiBhbmQgb3RoZXIgTm9kZSBjb250cmlidXRvcnMuXG4vL1xuLy8gUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGFcbi8vIGNvcHkgb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGVcbi8vIFwiU29mdHdhcmVcIiksIHRvIGRlYWwgaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZ1xuLy8gd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHMgdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLFxuLy8gZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGwgY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdFxuLy8gcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpcyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlXG4vLyBmb2xsb3dpbmcgY29uZGl0aW9uczpcbi8vXG4vLyBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZFxuLy8gaW4gYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuXG4vL1xuLy8gVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIFwiQVMgSVNcIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTU1xuLy8gT1IgSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRlxuLy8gTUVSQ0hBTlRBQklMSVRZLCBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiBJTlxuLy8gTk8gRVZFTlQgU0hBTEwgVEhFIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sXG4vLyBEQU1BR0VTIE9SIE9USEVSIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1Jcbi8vIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLCBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEVcbi8vIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTiBUSEUgU09GVFdBUkUuXG5cbid1c2Ugc3RyaWN0JztcblxuLyo8cmVwbGFjZW1lbnQ+Ki9cblxudmFyIHBuYSA9IHJlcXVpcmUoJ3Byb2Nlc3MtbmV4dGljay1hcmdzJyk7XG4vKjwvcmVwbGFjZW1lbnQ+Ki9cblxubW9kdWxlLmV4cG9ydHMgPSBSZWFkYWJsZTtcblxuLyo8cmVwbGFjZW1lbnQ+Ki9cbnZhciBpc0FycmF5ID0gcmVxdWlyZSgnaXNhcnJheScpO1xuLyo8L3JlcGxhY2VtZW50PiovXG5cbi8qPHJlcGxhY2VtZW50PiovXG52YXIgRHVwbGV4O1xuLyo8L3JlcGxhY2VtZW50PiovXG5cblJlYWRhYmxlLlJlYWRhYmxlU3RhdGUgPSBSZWFkYWJsZVN0YXRlO1xuXG4vKjxyZXBsYWNlbWVudD4qL1xudmFyIEVFID0gcmVxdWlyZSgnZXZlbnRzJykuRXZlbnRFbWl0dGVyO1xuXG52YXIgRUVsaXN0ZW5lckNvdW50ID0gZnVuY3Rpb24gKGVtaXR0ZXIsIHR5cGUpIHtcbiAgcmV0dXJuIGVtaXR0ZXIubGlzdGVuZXJzKHR5cGUpLmxlbmd0aDtcbn07XG4vKjwvcmVwbGFjZW1lbnQ+Ki9cblxuLyo8cmVwbGFjZW1lbnQ+Ki9cbnZhciBTdHJlYW0gPSByZXF1aXJlKCcuL2ludGVybmFsL3N0cmVhbXMvc3RyZWFtJyk7XG4vKjwvcmVwbGFjZW1lbnQ+Ki9cblxuLyo8cmVwbGFjZW1lbnQ+Ki9cblxudmFyIEJ1ZmZlciA9IHJlcXVpcmUoJ3NhZmUtYnVmZmVyJykuQnVmZmVyO1xudmFyIE91clVpbnQ4QXJyYXkgPSBnbG9iYWwuVWludDhBcnJheSB8fCBmdW5jdGlvbiAoKSB7fTtcbmZ1bmN0aW9uIF91aW50OEFycmF5VG9CdWZmZXIoY2h1bmspIHtcbiAgcmV0dXJuIEJ1ZmZlci5mcm9tKGNodW5rKTtcbn1cbmZ1bmN0aW9uIF9pc1VpbnQ4QXJyYXkob2JqKSB7XG4gIHJldHVybiBCdWZmZXIuaXNCdWZmZXIob2JqKSB8fCBvYmogaW5zdGFuY2VvZiBPdXJVaW50OEFycmF5O1xufVxuXG4vKjwvcmVwbGFjZW1lbnQ+Ki9cblxuLyo8cmVwbGFjZW1lbnQ+Ki9cbnZhciB1dGlsID0gcmVxdWlyZSgnY29yZS11dGlsLWlzJyk7XG51dGlsLmluaGVyaXRzID0gcmVxdWlyZSgnaW5oZXJpdHMnKTtcbi8qPC9yZXBsYWNlbWVudD4qL1xuXG4vKjxyZXBsYWNlbWVudD4qL1xudmFyIGRlYnVnVXRpbCA9IHJlcXVpcmUoJ3V0aWwnKTtcbnZhciBkZWJ1ZyA9IHZvaWQgMDtcbmlmIChkZWJ1Z1V0aWwgJiYgZGVidWdVdGlsLmRlYnVnbG9nKSB7XG4gIGRlYnVnID0gZGVidWdVdGlsLmRlYnVnbG9nKCdzdHJlYW0nKTtcbn0gZWxzZSB7XG4gIGRlYnVnID0gZnVuY3Rpb24gKCkge307XG59XG4vKjwvcmVwbGFjZW1lbnQ+Ki9cblxudmFyIEJ1ZmZlckxpc3QgPSByZXF1aXJlKCcuL2ludGVybmFsL3N0cmVhbXMvQnVmZmVyTGlzdCcpO1xudmFyIGRlc3Ryb3lJbXBsID0gcmVxdWlyZSgnLi9pbnRlcm5hbC9zdHJlYW1zL2Rlc3Ryb3knKTtcbnZhciBTdHJpbmdEZWNvZGVyO1xuXG51dGlsLmluaGVyaXRzKFJlYWRhYmxlLCBTdHJlYW0pO1xuXG52YXIga1Byb3h5RXZlbnRzID0gWydlcnJvcicsICdjbG9zZScsICdkZXN0cm95JywgJ3BhdXNlJywgJ3Jlc3VtZSddO1xuXG5mdW5jdGlvbiBwcmVwZW5kTGlzdGVuZXIoZW1pdHRlciwgZXZlbnQsIGZuKSB7XG4gIC8vIFNhZGx5IHRoaXMgaXMgbm90IGNhY2hlYWJsZSBhcyBzb21lIGxpYnJhcmllcyBidW5kbGUgdGhlaXIgb3duXG4gIC8vIGV2ZW50IGVtaXR0ZXIgaW1wbGVtZW50YXRpb24gd2l0aCB0aGVtLlxuICBpZiAodHlwZW9mIGVtaXR0ZXIucHJlcGVuZExpc3RlbmVyID09PSAnZnVuY3Rpb24nKSByZXR1cm4gZW1pdHRlci5wcmVwZW5kTGlzdGVuZXIoZXZlbnQsIGZuKTtcblxuICAvLyBUaGlzIGlzIGEgaGFjayB0byBtYWtlIHN1cmUgdGhhdCBvdXIgZXJyb3IgaGFuZGxlciBpcyBhdHRhY2hlZCBiZWZvcmUgYW55XG4gIC8vIHVzZXJsYW5kIG9uZXMuICBORVZFUiBETyBUSElTLiBUaGlzIGlzIGhlcmUgb25seSBiZWNhdXNlIHRoaXMgY29kZSBuZWVkc1xuICAvLyB0byBjb250aW51ZSB0byB3b3JrIHdpdGggb2xkZXIgdmVyc2lvbnMgb2YgTm9kZS5qcyB0aGF0IGRvIG5vdCBpbmNsdWRlXG4gIC8vIHRoZSBwcmVwZW5kTGlzdGVuZXIoKSBtZXRob2QuIFRoZSBnb2FsIGlzIHRvIGV2ZW50dWFsbHkgcmVtb3ZlIHRoaXMgaGFjay5cbiAgaWYgKCFlbWl0dGVyLl9ldmVudHMgfHwgIWVtaXR0ZXIuX2V2ZW50c1tldmVudF0pIGVtaXR0ZXIub24oZXZlbnQsIGZuKTtlbHNlIGlmIChpc0FycmF5KGVtaXR0ZXIuX2V2ZW50c1tldmVudF0pKSBlbWl0dGVyLl9ldmVudHNbZXZlbnRdLnVuc2hpZnQoZm4pO2Vsc2UgZW1pdHRlci5fZXZlbnRzW2V2ZW50XSA9IFtmbiwgZW1pdHRlci5fZXZlbnRzW2V2ZW50XV07XG59XG5cbmZ1bmN0aW9uIFJlYWRhYmxlU3RhdGUob3B0aW9ucywgc3RyZWFtKSB7XG4gIER1cGxleCA9IER1cGxleCB8fCByZXF1aXJlKCcuL19zdHJlYW1fZHVwbGV4Jyk7XG5cbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG5cbiAgLy8gRHVwbGV4IHN0cmVhbXMgYXJlIGJvdGggcmVhZGFibGUgYW5kIHdyaXRhYmxlLCBidXQgc2hhcmVcbiAgLy8gdGhlIHNhbWUgb3B0aW9ucyBvYmplY3QuXG4gIC8vIEhvd2V2ZXIsIHNvbWUgY2FzZXMgcmVxdWlyZSBzZXR0aW5nIG9wdGlvbnMgdG8gZGlmZmVyZW50XG4gIC8vIHZhbHVlcyBmb3IgdGhlIHJlYWRhYmxlIGFuZCB0aGUgd3JpdGFibGUgc2lkZXMgb2YgdGhlIGR1cGxleCBzdHJlYW0uXG4gIC8vIFRoZXNlIG9wdGlvbnMgY2FuIGJlIHByb3ZpZGVkIHNlcGFyYXRlbHkgYXMgcmVhZGFibGVYWFggYW5kIHdyaXRhYmxlWFhYLlxuICB2YXIgaXNEdXBsZXggPSBzdHJlYW0gaW5zdGFuY2VvZiBEdXBsZXg7XG5cbiAgLy8gb2JqZWN0IHN0cmVhbSBmbGFnLiBVc2VkIHRvIG1ha2UgcmVhZChuKSBpZ25vcmUgbiBhbmQgdG9cbiAgLy8gbWFrZSBhbGwgdGhlIGJ1ZmZlciBtZXJnaW5nIGFuZCBsZW5ndGggY2hlY2tzIGdvIGF3YXlcbiAgdGhpcy5vYmplY3RNb2RlID0gISFvcHRpb25zLm9iamVjdE1vZGU7XG5cbiAgaWYgKGlzRHVwbGV4KSB0aGlzLm9iamVjdE1vZGUgPSB0aGlzLm9iamVjdE1vZGUgfHwgISFvcHRpb25zLnJlYWRhYmxlT2JqZWN0TW9kZTtcblxuICAvLyB0aGUgcG9pbnQgYXQgd2hpY2ggaXQgc3RvcHMgY2FsbGluZyBfcmVhZCgpIHRvIGZpbGwgdGhlIGJ1ZmZlclxuICAvLyBOb3RlOiAwIGlzIGEgdmFsaWQgdmFsdWUsIG1lYW5zIFwiZG9uJ3QgY2FsbCBfcmVhZCBwcmVlbXB0aXZlbHkgZXZlclwiXG4gIHZhciBod20gPSBvcHRpb25zLmhpZ2hXYXRlck1hcms7XG4gIHZhciByZWFkYWJsZUh3bSA9IG9wdGlvbnMucmVhZGFibGVIaWdoV2F0ZXJNYXJrO1xuICB2YXIgZGVmYXVsdEh3bSA9IHRoaXMub2JqZWN0TW9kZSA/IDE2IDogMTYgKiAxMDI0O1xuXG4gIGlmIChod20gfHwgaHdtID09PSAwKSB0aGlzLmhpZ2hXYXRlck1hcmsgPSBod207ZWxzZSBpZiAoaXNEdXBsZXggJiYgKHJlYWRhYmxlSHdtIHx8IHJlYWRhYmxlSHdtID09PSAwKSkgdGhpcy5oaWdoV2F0ZXJNYXJrID0gcmVhZGFibGVId207ZWxzZSB0aGlzLmhpZ2hXYXRlck1hcmsgPSBkZWZhdWx0SHdtO1xuXG4gIC8vIGNhc3QgdG8gaW50cy5cbiAgdGhpcy5oaWdoV2F0ZXJNYXJrID0gTWF0aC5mbG9vcih0aGlzLmhpZ2hXYXRlck1hcmspO1xuXG4gIC8vIEEgbGlua2VkIGxpc3QgaXMgdXNlZCB0byBzdG9yZSBkYXRhIGNodW5rcyBpbnN0ZWFkIG9mIGFuIGFycmF5IGJlY2F1c2UgdGhlXG4gIC8vIGxpbmtlZCBsaXN0IGNhbiByZW1vdmUgZWxlbWVudHMgZnJvbSB0aGUgYmVnaW5uaW5nIGZhc3RlciB0aGFuXG4gIC8vIGFycmF5LnNoaWZ0KClcbiAgdGhpcy5idWZmZXIgPSBuZXcgQnVmZmVyTGlzdCgpO1xuICB0aGlzLmxlbmd0aCA9IDA7XG4gIHRoaXMucGlwZXMgPSBudWxsO1xuICB0aGlzLnBpcGVzQ291bnQgPSAwO1xuICB0aGlzLmZsb3dpbmcgPSBudWxsO1xuICB0aGlzLmVuZGVkID0gZmFsc2U7XG4gIHRoaXMuZW5kRW1pdHRlZCA9IGZhbHNlO1xuICB0aGlzLnJlYWRpbmcgPSBmYWxzZTtcblxuICAvLyBhIGZsYWcgdG8gYmUgYWJsZSB0byB0ZWxsIGlmIHRoZSBldmVudCAncmVhZGFibGUnLydkYXRhJyBpcyBlbWl0dGVkXG4gIC8vIGltbWVkaWF0ZWx5LCBvciBvbiBhIGxhdGVyIHRpY2suICBXZSBzZXQgdGhpcyB0byB0cnVlIGF0IGZpcnN0LCBiZWNhdXNlXG4gIC8vIGFueSBhY3Rpb25zIHRoYXQgc2hvdWxkbid0IGhhcHBlbiB1bnRpbCBcImxhdGVyXCIgc2hvdWxkIGdlbmVyYWxseSBhbHNvXG4gIC8vIG5vdCBoYXBwZW4gYmVmb3JlIHRoZSBmaXJzdCByZWFkIGNhbGwuXG4gIHRoaXMuc3luYyA9IHRydWU7XG5cbiAgLy8gd2hlbmV2ZXIgd2UgcmV0dXJuIG51bGwsIHRoZW4gd2Ugc2V0IGEgZmxhZyB0byBzYXlcbiAgLy8gdGhhdCB3ZSdyZSBhd2FpdGluZyBhICdyZWFkYWJsZScgZXZlbnQgZW1pc3Npb24uXG4gIHRoaXMubmVlZFJlYWRhYmxlID0gZmFsc2U7XG4gIHRoaXMuZW1pdHRlZFJlYWRhYmxlID0gZmFsc2U7XG4gIHRoaXMucmVhZGFibGVMaXN0ZW5pbmcgPSBmYWxzZTtcbiAgdGhpcy5yZXN1bWVTY2hlZHVsZWQgPSBmYWxzZTtcblxuICAvLyBoYXMgaXQgYmVlbiBkZXN0cm95ZWRcbiAgdGhpcy5kZXN0cm95ZWQgPSBmYWxzZTtcblxuICAvLyBDcnlwdG8gaXMga2luZCBvZiBvbGQgYW5kIGNydXN0eS4gIEhpc3RvcmljYWxseSwgaXRzIGRlZmF1bHQgc3RyaW5nXG4gIC8vIGVuY29kaW5nIGlzICdiaW5hcnknIHNvIHdlIGhhdmUgdG8gbWFrZSB0aGlzIGNvbmZpZ3VyYWJsZS5cbiAgLy8gRXZlcnl0aGluZyBlbHNlIGluIHRoZSB1bml2ZXJzZSB1c2VzICd1dGY4JywgdGhvdWdoLlxuICB0aGlzLmRlZmF1bHRFbmNvZGluZyA9IG9wdGlvbnMuZGVmYXVsdEVuY29kaW5nIHx8ICd1dGY4JztcblxuICAvLyB0aGUgbnVtYmVyIG9mIHdyaXRlcnMgdGhhdCBhcmUgYXdhaXRpbmcgYSBkcmFpbiBldmVudCBpbiAucGlwZSgpc1xuICB0aGlzLmF3YWl0RHJhaW4gPSAwO1xuXG4gIC8vIGlmIHRydWUsIGEgbWF5YmVSZWFkTW9yZSBoYXMgYmVlbiBzY2hlZHVsZWRcbiAgdGhpcy5yZWFkaW5nTW9yZSA9IGZhbHNlO1xuXG4gIHRoaXMuZGVjb2RlciA9IG51bGw7XG4gIHRoaXMuZW5jb2RpbmcgPSBudWxsO1xuICBpZiAob3B0aW9ucy5lbmNvZGluZykge1xuICAgIGlmICghU3RyaW5nRGVjb2RlcikgU3RyaW5nRGVjb2RlciA9IHJlcXVpcmUoJ3N0cmluZ19kZWNvZGVyLycpLlN0cmluZ0RlY29kZXI7XG4gICAgdGhpcy5kZWNvZGVyID0gbmV3IFN0cmluZ0RlY29kZXIob3B0aW9ucy5lbmNvZGluZyk7XG4gICAgdGhpcy5lbmNvZGluZyA9IG9wdGlvbnMuZW5jb2Rpbmc7XG4gIH1cbn1cblxuZnVuY3Rpb24gUmVhZGFibGUob3B0aW9ucykge1xuICBEdXBsZXggPSBEdXBsZXggfHwgcmVxdWlyZSgnLi9fc3RyZWFtX2R1cGxleCcpO1xuXG4gIGlmICghKHRoaXMgaW5zdGFuY2VvZiBSZWFkYWJsZSkpIHJldHVybiBuZXcgUmVhZGFibGUob3B0aW9ucyk7XG5cbiAgdGhpcy5fcmVhZGFibGVTdGF0ZSA9IG5ldyBSZWFkYWJsZVN0YXRlKG9wdGlvbnMsIHRoaXMpO1xuXG4gIC8vIGxlZ2FjeVxuICB0aGlzLnJlYWRhYmxlID0gdHJ1ZTtcblxuICBpZiAob3B0aW9ucykge1xuICAgIGlmICh0eXBlb2Ygb3B0aW9ucy5yZWFkID09PSAnZnVuY3Rpb24nKSB0aGlzLl9yZWFkID0gb3B0aW9ucy5yZWFkO1xuXG4gICAgaWYgKHR5cGVvZiBvcHRpb25zLmRlc3Ryb3kgPT09ICdmdW5jdGlvbicpIHRoaXMuX2Rlc3Ryb3kgPSBvcHRpb25zLmRlc3Ryb3k7XG4gIH1cblxuICBTdHJlYW0uY2FsbCh0aGlzKTtcbn1cblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KFJlYWRhYmxlLnByb3RvdHlwZSwgJ2Rlc3Ryb3llZCcsIHtcbiAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgaWYgKHRoaXMuX3JlYWRhYmxlU3RhdGUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICByZXR1cm4gdGhpcy5fcmVhZGFibGVTdGF0ZS5kZXN0cm95ZWQ7XG4gIH0sXG4gIHNldDogZnVuY3Rpb24gKHZhbHVlKSB7XG4gICAgLy8gd2UgaWdub3JlIHRoZSB2YWx1ZSBpZiB0aGUgc3RyZWFtXG4gICAgLy8gaGFzIG5vdCBiZWVuIGluaXRpYWxpemVkIHlldFxuICAgIGlmICghdGhpcy5fcmVhZGFibGVTdGF0ZSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIC8vIGJhY2t3YXJkIGNvbXBhdGliaWxpdHksIHRoZSB1c2VyIGlzIGV4cGxpY2l0bHlcbiAgICAvLyBtYW5hZ2luZyBkZXN0cm95ZWRcbiAgICB0aGlzLl9yZWFkYWJsZVN0YXRlLmRlc3Ryb3llZCA9IHZhbHVlO1xuICB9XG59KTtcblxuUmVhZGFibGUucHJvdG90eXBlLmRlc3Ryb3kgPSBkZXN0cm95SW1wbC5kZXN0cm95O1xuUmVhZGFibGUucHJvdG90eXBlLl91bmRlc3Ryb3kgPSBkZXN0cm95SW1wbC51bmRlc3Ryb3k7XG5SZWFkYWJsZS5wcm90b3R5cGUuX2Rlc3Ryb3kgPSBmdW5jdGlvbiAoZXJyLCBjYikge1xuICB0aGlzLnB1c2gobnVsbCk7XG4gIGNiKGVycik7XG59O1xuXG4vLyBNYW51YWxseSBzaG92ZSBzb21ldGhpbmcgaW50byB0aGUgcmVhZCgpIGJ1ZmZlci5cbi8vIFRoaXMgcmV0dXJucyB0cnVlIGlmIHRoZSBoaWdoV2F0ZXJNYXJrIGhhcyBub3QgYmVlbiBoaXQgeWV0LFxuLy8gc2ltaWxhciB0byBob3cgV3JpdGFibGUud3JpdGUoKSByZXR1cm5zIHRydWUgaWYgeW91IHNob3VsZFxuLy8gd3JpdGUoKSBzb21lIG1vcmUuXG5SZWFkYWJsZS5wcm90b3R5cGUucHVzaCA9IGZ1bmN0aW9uIChjaHVuaywgZW5jb2RpbmcpIHtcbiAgdmFyIHN0YXRlID0gdGhpcy5fcmVhZGFibGVTdGF0ZTtcbiAgdmFyIHNraXBDaHVua0NoZWNrO1xuXG4gIGlmICghc3RhdGUub2JqZWN0TW9kZSkge1xuICAgIGlmICh0eXBlb2YgY2h1bmsgPT09ICdzdHJpbmcnKSB7XG4gICAgICBlbmNvZGluZyA9IGVuY29kaW5nIHx8IHN0YXRlLmRlZmF1bHRFbmNvZGluZztcbiAgICAgIGlmIChlbmNvZGluZyAhPT0gc3RhdGUuZW5jb2RpbmcpIHtcbiAgICAgICAgY2h1bmsgPSBCdWZmZXIuZnJvbShjaHVuaywgZW5jb2RpbmcpO1xuICAgICAgICBlbmNvZGluZyA9ICcnO1xuICAgICAgfVxuICAgICAgc2tpcENodW5rQ2hlY2sgPSB0cnVlO1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICBza2lwQ2h1bmtDaGVjayA9IHRydWU7XG4gIH1cblxuICByZXR1cm4gcmVhZGFibGVBZGRDaHVuayh0aGlzLCBjaHVuaywgZW5jb2RpbmcsIGZhbHNlLCBza2lwQ2h1bmtDaGVjayk7XG59O1xuXG4vLyBVbnNoaWZ0IHNob3VsZCAqYWx3YXlzKiBiZSBzb21ldGhpbmcgZGlyZWN0bHkgb3V0IG9mIHJlYWQoKVxuUmVhZGFibGUucHJvdG90eXBlLnVuc2hpZnQgPSBmdW5jdGlvbiAoY2h1bmspIHtcbiAgcmV0dXJuIHJlYWRhYmxlQWRkQ2h1bmsodGhpcywgY2h1bmssIG51bGwsIHRydWUsIGZhbHNlKTtcbn07XG5cbmZ1bmN0aW9uIHJlYWRhYmxlQWRkQ2h1bmsoc3RyZWFtLCBjaHVuaywgZW5jb2RpbmcsIGFkZFRvRnJvbnQsIHNraXBDaHVua0NoZWNrKSB7XG4gIHZhciBzdGF0ZSA9IHN0cmVhbS5fcmVhZGFibGVTdGF0ZTtcbiAgaWYgKGNodW5rID09PSBudWxsKSB7XG4gICAgc3RhdGUucmVhZGluZyA9IGZhbHNlO1xuICAgIG9uRW9mQ2h1bmsoc3RyZWFtLCBzdGF0ZSk7XG4gIH0gZWxzZSB7XG4gICAgdmFyIGVyO1xuICAgIGlmICghc2tpcENodW5rQ2hlY2spIGVyID0gY2h1bmtJbnZhbGlkKHN0YXRlLCBjaHVuayk7XG4gICAgaWYgKGVyKSB7XG4gICAgICBzdHJlYW0uZW1pdCgnZXJyb3InLCBlcik7XG4gICAgfSBlbHNlIGlmIChzdGF0ZS5vYmplY3RNb2RlIHx8IGNodW5rICYmIGNodW5rLmxlbmd0aCA+IDApIHtcbiAgICAgIGlmICh0eXBlb2YgY2h1bmsgIT09ICdzdHJpbmcnICYmICFzdGF0ZS5vYmplY3RNb2RlICYmIE9iamVjdC5nZXRQcm90b3R5cGVPZihjaHVuaykgIT09IEJ1ZmZlci5wcm90b3R5cGUpIHtcbiAgICAgICAgY2h1bmsgPSBfdWludDhBcnJheVRvQnVmZmVyKGNodW5rKTtcbiAgICAgIH1cblxuICAgICAgaWYgKGFkZFRvRnJvbnQpIHtcbiAgICAgICAgaWYgKHN0YXRlLmVuZEVtaXR0ZWQpIHN0cmVhbS5lbWl0KCdlcnJvcicsIG5ldyBFcnJvcignc3RyZWFtLnVuc2hpZnQoKSBhZnRlciBlbmQgZXZlbnQnKSk7ZWxzZSBhZGRDaHVuayhzdHJlYW0sIHN0YXRlLCBjaHVuaywgdHJ1ZSk7XG4gICAgICB9IGVsc2UgaWYgKHN0YXRlLmVuZGVkKSB7XG4gICAgICAgIHN0cmVhbS5lbWl0KCdlcnJvcicsIG5ldyBFcnJvcignc3RyZWFtLnB1c2goKSBhZnRlciBFT0YnKSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBzdGF0ZS5yZWFkaW5nID0gZmFsc2U7XG4gICAgICAgIGlmIChzdGF0ZS5kZWNvZGVyICYmICFlbmNvZGluZykge1xuICAgICAgICAgIGNodW5rID0gc3RhdGUuZGVjb2Rlci53cml0ZShjaHVuayk7XG4gICAgICAgICAgaWYgKHN0YXRlLm9iamVjdE1vZGUgfHwgY2h1bmsubGVuZ3RoICE9PSAwKSBhZGRDaHVuayhzdHJlYW0sIHN0YXRlLCBjaHVuaywgZmFsc2UpO2Vsc2UgbWF5YmVSZWFkTW9yZShzdHJlYW0sIHN0YXRlKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBhZGRDaHVuayhzdHJlYW0sIHN0YXRlLCBjaHVuaywgZmFsc2UpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSBlbHNlIGlmICghYWRkVG9Gcm9udCkge1xuICAgICAgc3RhdGUucmVhZGluZyA9IGZhbHNlO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBuZWVkTW9yZURhdGEoc3RhdGUpO1xufVxuXG5mdW5jdGlvbiBhZGRDaHVuayhzdHJlYW0sIHN0YXRlLCBjaHVuaywgYWRkVG9Gcm9udCkge1xuICBpZiAoc3RhdGUuZmxvd2luZyAmJiBzdGF0ZS5sZW5ndGggPT09IDAgJiYgIXN0YXRlLnN5bmMpIHtcbiAgICBzdHJlYW0uZW1pdCgnZGF0YScsIGNodW5rKTtcbiAgICBzdHJlYW0ucmVhZCgwKTtcbiAgfSBlbHNlIHtcbiAgICAvLyB1cGRhdGUgdGhlIGJ1ZmZlciBpbmZvLlxuICAgIHN0YXRlLmxlbmd0aCArPSBzdGF0ZS5vYmplY3RNb2RlID8gMSA6IGNodW5rLmxlbmd0aDtcbiAgICBpZiAoYWRkVG9Gcm9udCkgc3RhdGUuYnVmZmVyLnVuc2hpZnQoY2h1bmspO2Vsc2Ugc3RhdGUuYnVmZmVyLnB1c2goY2h1bmspO1xuXG4gICAgaWYgKHN0YXRlLm5lZWRSZWFkYWJsZSkgZW1pdFJlYWRhYmxlKHN0cmVhbSk7XG4gIH1cbiAgbWF5YmVSZWFkTW9yZShzdHJlYW0sIHN0YXRlKTtcbn1cblxuZnVuY3Rpb24gY2h1bmtJbnZhbGlkKHN0YXRlLCBjaHVuaykge1xuICB2YXIgZXI7XG4gIGlmICghX2lzVWludDhBcnJheShjaHVuaykgJiYgdHlwZW9mIGNodW5rICE9PSAnc3RyaW5nJyAmJiBjaHVuayAhPT0gdW5kZWZpbmVkICYmICFzdGF0ZS5vYmplY3RNb2RlKSB7XG4gICAgZXIgPSBuZXcgVHlwZUVycm9yKCdJbnZhbGlkIG5vbi1zdHJpbmcvYnVmZmVyIGNodW5rJyk7XG4gIH1cbiAgcmV0dXJuIGVyO1xufVxuXG4vLyBpZiBpdCdzIHBhc3QgdGhlIGhpZ2ggd2F0ZXIgbWFyaywgd2UgY2FuIHB1c2ggaW4gc29tZSBtb3JlLlxuLy8gQWxzbywgaWYgd2UgaGF2ZSBubyBkYXRhIHlldCwgd2UgY2FuIHN0YW5kIHNvbWVcbi8vIG1vcmUgYnl0ZXMuICBUaGlzIGlzIHRvIHdvcmsgYXJvdW5kIGNhc2VzIHdoZXJlIGh3bT0wLFxuLy8gc3VjaCBhcyB0aGUgcmVwbC4gIEFsc28sIGlmIHRoZSBwdXNoKCkgdHJpZ2dlcmVkIGFcbi8vIHJlYWRhYmxlIGV2ZW50LCBhbmQgdGhlIHVzZXIgY2FsbGVkIHJlYWQobGFyZ2VOdW1iZXIpIHN1Y2ggdGhhdFxuLy8gbmVlZFJlYWRhYmxlIHdhcyBzZXQsIHRoZW4gd2Ugb3VnaHQgdG8gcHVzaCBtb3JlLCBzbyB0aGF0IGFub3RoZXJcbi8vICdyZWFkYWJsZScgZXZlbnQgd2lsbCBiZSB0cmlnZ2VyZWQuXG5mdW5jdGlvbiBuZWVkTW9yZURhdGEoc3RhdGUpIHtcbiAgcmV0dXJuICFzdGF0ZS5lbmRlZCAmJiAoc3RhdGUubmVlZFJlYWRhYmxlIHx8IHN0YXRlLmxlbmd0aCA8IHN0YXRlLmhpZ2hXYXRlck1hcmsgfHwgc3RhdGUubGVuZ3RoID09PSAwKTtcbn1cblxuUmVhZGFibGUucHJvdG90eXBlLmlzUGF1c2VkID0gZnVuY3Rpb24gKCkge1xuICByZXR1cm4gdGhpcy5fcmVhZGFibGVTdGF0ZS5mbG93aW5nID09PSBmYWxzZTtcbn07XG5cbi8vIGJhY2t3YXJkcyBjb21wYXRpYmlsaXR5LlxuUmVhZGFibGUucHJvdG90eXBlLnNldEVuY29kaW5nID0gZnVuY3Rpb24gKGVuYykge1xuICBpZiAoIVN0cmluZ0RlY29kZXIpIFN0cmluZ0RlY29kZXIgPSByZXF1aXJlKCdzdHJpbmdfZGVjb2Rlci8nKS5TdHJpbmdEZWNvZGVyO1xuICB0aGlzLl9yZWFkYWJsZVN0YXRlLmRlY29kZXIgPSBuZXcgU3RyaW5nRGVjb2RlcihlbmMpO1xuICB0aGlzLl9yZWFkYWJsZVN0YXRlLmVuY29kaW5nID0gZW5jO1xuICByZXR1cm4gdGhpcztcbn07XG5cbi8vIERvbid0IHJhaXNlIHRoZSBod20gPiA4TUJcbnZhciBNQVhfSFdNID0gMHg4MDAwMDA7XG5mdW5jdGlvbiBjb21wdXRlTmV3SGlnaFdhdGVyTWFyayhuKSB7XG4gIGlmIChuID49IE1BWF9IV00pIHtcbiAgICBuID0gTUFYX0hXTTtcbiAgfSBlbHNlIHtcbiAgICAvLyBHZXQgdGhlIG5leHQgaGlnaGVzdCBwb3dlciBvZiAyIHRvIHByZXZlbnQgaW5jcmVhc2luZyBod20gZXhjZXNzaXZlbHkgaW5cbiAgICAvLyB0aW55IGFtb3VudHNcbiAgICBuLS07XG4gICAgbiB8PSBuID4+PiAxO1xuICAgIG4gfD0gbiA+Pj4gMjtcbiAgICBuIHw9IG4gPj4+IDQ7XG4gICAgbiB8PSBuID4+PiA4O1xuICAgIG4gfD0gbiA+Pj4gMTY7XG4gICAgbisrO1xuICB9XG4gIHJldHVybiBuO1xufVxuXG4vLyBUaGlzIGZ1bmN0aW9uIGlzIGRlc2lnbmVkIHRvIGJlIGlubGluYWJsZSwgc28gcGxlYXNlIHRha2UgY2FyZSB3aGVuIG1ha2luZ1xuLy8gY2hhbmdlcyB0byB0aGUgZnVuY3Rpb24gYm9keS5cbmZ1bmN0aW9uIGhvd011Y2hUb1JlYWQobiwgc3RhdGUpIHtcbiAgaWYgKG4gPD0gMCB8fCBzdGF0ZS5sZW5ndGggPT09IDAgJiYgc3RhdGUuZW5kZWQpIHJldHVybiAwO1xuICBpZiAoc3RhdGUub2JqZWN0TW9kZSkgcmV0dXJuIDE7XG4gIGlmIChuICE9PSBuKSB7XG4gICAgLy8gT25seSBmbG93IG9uZSBidWZmZXIgYXQgYSB0aW1lXG4gICAgaWYgKHN0YXRlLmZsb3dpbmcgJiYgc3RhdGUubGVuZ3RoKSByZXR1cm4gc3RhdGUuYnVmZmVyLmhlYWQuZGF0YS5sZW5ndGg7ZWxzZSByZXR1cm4gc3RhdGUubGVuZ3RoO1xuICB9XG4gIC8vIElmIHdlJ3JlIGFza2luZyBmb3IgbW9yZSB0aGFuIHRoZSBjdXJyZW50IGh3bSwgdGhlbiByYWlzZSB0aGUgaHdtLlxuICBpZiAobiA+IHN0YXRlLmhpZ2hXYXRlck1hcmspIHN0YXRlLmhpZ2hXYXRlck1hcmsgPSBjb21wdXRlTmV3SGlnaFdhdGVyTWFyayhuKTtcbiAgaWYgKG4gPD0gc3RhdGUubGVuZ3RoKSByZXR1cm4gbjtcbiAgLy8gRG9uJ3QgaGF2ZSBlbm91Z2hcbiAgaWYgKCFzdGF0ZS5lbmRlZCkge1xuICAgIHN0YXRlLm5lZWRSZWFkYWJsZSA9IHRydWU7XG4gICAgcmV0dXJuIDA7XG4gIH1cbiAgcmV0dXJuIHN0YXRlLmxlbmd0aDtcbn1cblxuLy8geW91IGNhbiBvdmVycmlkZSBlaXRoZXIgdGhpcyBtZXRob2QsIG9yIHRoZSBhc3luYyBfcmVhZChuKSBiZWxvdy5cblJlYWRhYmxlLnByb3RvdHlwZS5yZWFkID0gZnVuY3Rpb24gKG4pIHtcbiAgZGVidWcoJ3JlYWQnLCBuKTtcbiAgbiA9IHBhcnNlSW50KG4sIDEwKTtcbiAgdmFyIHN0YXRlID0gdGhpcy5fcmVhZGFibGVTdGF0ZTtcbiAgdmFyIG5PcmlnID0gbjtcblxuICBpZiAobiAhPT0gMCkgc3RhdGUuZW1pdHRlZFJlYWRhYmxlID0gZmFsc2U7XG5cbiAgLy8gaWYgd2UncmUgZG9pbmcgcmVhZCgwKSB0byB0cmlnZ2VyIGEgcmVhZGFibGUgZXZlbnQsIGJ1dCB3ZVxuICAvLyBhbHJlYWR5IGhhdmUgYSBidW5jaCBvZiBkYXRhIGluIHRoZSBidWZmZXIsIHRoZW4ganVzdCB0cmlnZ2VyXG4gIC8vIHRoZSAncmVhZGFibGUnIGV2ZW50IGFuZCBtb3ZlIG9uLlxuICBpZiAobiA9PT0gMCAmJiBzdGF0ZS5uZWVkUmVhZGFibGUgJiYgKHN0YXRlLmxlbmd0aCA+PSBzdGF0ZS5oaWdoV2F0ZXJNYXJrIHx8IHN0YXRlLmVuZGVkKSkge1xuICAgIGRlYnVnKCdyZWFkOiBlbWl0UmVhZGFibGUnLCBzdGF0ZS5sZW5ndGgsIHN0YXRlLmVuZGVkKTtcbiAgICBpZiAoc3RhdGUubGVuZ3RoID09PSAwICYmIHN0YXRlLmVuZGVkKSBlbmRSZWFkYWJsZSh0aGlzKTtlbHNlIGVtaXRSZWFkYWJsZSh0aGlzKTtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIG4gPSBob3dNdWNoVG9SZWFkKG4sIHN0YXRlKTtcblxuICAvLyBpZiB3ZSd2ZSBlbmRlZCwgYW5kIHdlJ3JlIG5vdyBjbGVhciwgdGhlbiBmaW5pc2ggaXQgdXAuXG4gIGlmIChuID09PSAwICYmIHN0YXRlLmVuZGVkKSB7XG4gICAgaWYgKHN0YXRlLmxlbmd0aCA9PT0gMCkgZW5kUmVhZGFibGUodGhpcyk7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cblxuICAvLyBBbGwgdGhlIGFjdHVhbCBjaHVuayBnZW5lcmF0aW9uIGxvZ2ljIG5lZWRzIHRvIGJlXG4gIC8vICpiZWxvdyogdGhlIGNhbGwgdG8gX3JlYWQuICBUaGUgcmVhc29uIGlzIHRoYXQgaW4gY2VydGFpblxuICAvLyBzeW50aGV0aWMgc3RyZWFtIGNhc2VzLCBzdWNoIGFzIHBhc3N0aHJvdWdoIHN0cmVhbXMsIF9yZWFkXG4gIC8vIG1heSBiZSBhIGNvbXBsZXRlbHkgc3luY2hyb25vdXMgb3BlcmF0aW9uIHdoaWNoIG1heSBjaGFuZ2VcbiAgLy8gdGhlIHN0YXRlIG9mIHRoZSByZWFkIGJ1ZmZlciwgcHJvdmlkaW5nIGVub3VnaCBkYXRhIHdoZW5cbiAgLy8gYmVmb3JlIHRoZXJlIHdhcyAqbm90KiBlbm91Z2guXG4gIC8vXG4gIC8vIFNvLCB0aGUgc3RlcHMgYXJlOlxuICAvLyAxLiBGaWd1cmUgb3V0IHdoYXQgdGhlIHN0YXRlIG9mIHRoaW5ncyB3aWxsIGJlIGFmdGVyIHdlIGRvXG4gIC8vIGEgcmVhZCBmcm9tIHRoZSBidWZmZXIuXG4gIC8vXG4gIC8vIDIuIElmIHRoYXQgcmVzdWx0aW5nIHN0YXRlIHdpbGwgdHJpZ2dlciBhIF9yZWFkLCB0aGVuIGNhbGwgX3JlYWQuXG4gIC8vIE5vdGUgdGhhdCB0aGlzIG1heSBiZSBhc3luY2hyb25vdXMsIG9yIHN5bmNocm9ub3VzLiAgWWVzLCBpdCBpc1xuICAvLyBkZWVwbHkgdWdseSB0byB3cml0ZSBBUElzIHRoaXMgd2F5LCBidXQgdGhhdCBzdGlsbCBkb2Vzbid0IG1lYW5cbiAgLy8gdGhhdCB0aGUgUmVhZGFibGUgY2xhc3Mgc2hvdWxkIGJlaGF2ZSBpbXByb3Blcmx5LCBhcyBzdHJlYW1zIGFyZVxuICAvLyBkZXNpZ25lZCB0byBiZSBzeW5jL2FzeW5jIGFnbm9zdGljLlxuICAvLyBUYWtlIG5vdGUgaWYgdGhlIF9yZWFkIGNhbGwgaXMgc3luYyBvciBhc3luYyAoaWUsIGlmIHRoZSByZWFkIGNhbGxcbiAgLy8gaGFzIHJldHVybmVkIHlldCksIHNvIHRoYXQgd2Uga25vdyB3aGV0aGVyIG9yIG5vdCBpdCdzIHNhZmUgdG8gZW1pdFxuICAvLyAncmVhZGFibGUnIGV0Yy5cbiAgLy9cbiAgLy8gMy4gQWN0dWFsbHkgcHVsbCB0aGUgcmVxdWVzdGVkIGNodW5rcyBvdXQgb2YgdGhlIGJ1ZmZlciBhbmQgcmV0dXJuLlxuXG4gIC8vIGlmIHdlIG5lZWQgYSByZWFkYWJsZSBldmVudCwgdGhlbiB3ZSBuZWVkIHRvIGRvIHNvbWUgcmVhZGluZy5cbiAgdmFyIGRvUmVhZCA9IHN0YXRlLm5lZWRSZWFkYWJsZTtcbiAgZGVidWcoJ25lZWQgcmVhZGFibGUnLCBkb1JlYWQpO1xuXG4gIC8vIGlmIHdlIGN1cnJlbnRseSBoYXZlIGxlc3MgdGhhbiB0aGUgaGlnaFdhdGVyTWFyaywgdGhlbiBhbHNvIHJlYWQgc29tZVxuICBpZiAoc3RhdGUubGVuZ3RoID09PSAwIHx8IHN0YXRlLmxlbmd0aCAtIG4gPCBzdGF0ZS5oaWdoV2F0ZXJNYXJrKSB7XG4gICAgZG9SZWFkID0gdHJ1ZTtcbiAgICBkZWJ1ZygnbGVuZ3RoIGxlc3MgdGhhbiB3YXRlcm1hcmsnLCBkb1JlYWQpO1xuICB9XG5cbiAgLy8gaG93ZXZlciwgaWYgd2UndmUgZW5kZWQsIHRoZW4gdGhlcmUncyBubyBwb2ludCwgYW5kIGlmIHdlJ3JlIGFscmVhZHlcbiAgLy8gcmVhZGluZywgdGhlbiBpdCdzIHVubmVjZXNzYXJ5LlxuICBpZiAoc3RhdGUuZW5kZWQgfHwgc3RhdGUucmVhZGluZykge1xuICAgIGRvUmVhZCA9IGZhbHNlO1xuICAgIGRlYnVnKCdyZWFkaW5nIG9yIGVuZGVkJywgZG9SZWFkKTtcbiAgfSBlbHNlIGlmIChkb1JlYWQpIHtcbiAgICBkZWJ1ZygnZG8gcmVhZCcpO1xuICAgIHN0YXRlLnJlYWRpbmcgPSB0cnVlO1xuICAgIHN0YXRlLnN5bmMgPSB0cnVlO1xuICAgIC8vIGlmIHRoZSBsZW5ndGggaXMgY3VycmVudGx5IHplcm8sIHRoZW4gd2UgKm5lZWQqIGEgcmVhZGFibGUgZXZlbnQuXG4gICAgaWYgKHN0YXRlLmxlbmd0aCA9PT0gMCkgc3RhdGUubmVlZFJlYWRhYmxlID0gdHJ1ZTtcbiAgICAvLyBjYWxsIGludGVybmFsIHJlYWQgbWV0aG9kXG4gICAgdGhpcy5fcmVhZChzdGF0ZS5oaWdoV2F0ZXJNYXJrKTtcbiAgICBzdGF0ZS5zeW5jID0gZmFsc2U7XG4gICAgLy8gSWYgX3JlYWQgcHVzaGVkIGRhdGEgc3luY2hyb25vdXNseSwgdGhlbiBgcmVhZGluZ2Agd2lsbCBiZSBmYWxzZSxcbiAgICAvLyBhbmQgd2UgbmVlZCB0byByZS1ldmFsdWF0ZSBob3cgbXVjaCBkYXRhIHdlIGNhbiByZXR1cm4gdG8gdGhlIHVzZXIuXG4gICAgaWYgKCFzdGF0ZS5yZWFkaW5nKSBuID0gaG93TXVjaFRvUmVhZChuT3JpZywgc3RhdGUpO1xuICB9XG5cbiAgdmFyIHJldDtcbiAgaWYgKG4gPiAwKSByZXQgPSBmcm9tTGlzdChuLCBzdGF0ZSk7ZWxzZSByZXQgPSBudWxsO1xuXG4gIGlmIChyZXQgPT09IG51bGwpIHtcbiAgICBzdGF0ZS5uZWVkUmVhZGFibGUgPSB0cnVlO1xuICAgIG4gPSAwO1xuICB9IGVsc2Uge1xuICAgIHN0YXRlLmxlbmd0aCAtPSBuO1xuICB9XG5cbiAgaWYgKHN0YXRlLmxlbmd0aCA9PT0gMCkge1xuICAgIC8vIElmIHdlIGhhdmUgbm90aGluZyBpbiB0aGUgYnVmZmVyLCB0aGVuIHdlIHdhbnQgdG8ga25vd1xuICAgIC8vIGFzIHNvb24gYXMgd2UgKmRvKiBnZXQgc29tZXRoaW5nIGludG8gdGhlIGJ1ZmZlci5cbiAgICBpZiAoIXN0YXRlLmVuZGVkKSBzdGF0ZS5uZWVkUmVhZGFibGUgPSB0cnVlO1xuXG4gICAgLy8gSWYgd2UgdHJpZWQgdG8gcmVhZCgpIHBhc3QgdGhlIEVPRiwgdGhlbiBlbWl0IGVuZCBvbiB0aGUgbmV4dCB0aWNrLlxuICAgIGlmIChuT3JpZyAhPT0gbiAmJiBzdGF0ZS5lbmRlZCkgZW5kUmVhZGFibGUodGhpcyk7XG4gIH1cblxuICBpZiAocmV0ICE9PSBudWxsKSB0aGlzLmVtaXQoJ2RhdGEnLCByZXQpO1xuXG4gIHJldHVybiByZXQ7XG59O1xuXG5mdW5jdGlvbiBvbkVvZkNodW5rKHN0cmVhbSwgc3RhdGUpIHtcbiAgaWYgKHN0YXRlLmVuZGVkKSByZXR1cm47XG4gIGlmIChzdGF0ZS5kZWNvZGVyKSB7XG4gICAgdmFyIGNodW5rID0gc3RhdGUuZGVjb2Rlci5lbmQoKTtcbiAgICBpZiAoY2h1bmsgJiYgY2h1bmsubGVuZ3RoKSB7XG4gICAgICBzdGF0ZS5idWZmZXIucHVzaChjaHVuayk7XG4gICAgICBzdGF0ZS5sZW5ndGggKz0gc3RhdGUub2JqZWN0TW9kZSA/IDEgOiBjaHVuay5sZW5ndGg7XG4gICAgfVxuICB9XG4gIHN0YXRlLmVuZGVkID0gdHJ1ZTtcblxuICAvLyBlbWl0ICdyZWFkYWJsZScgbm93IHRvIG1ha2Ugc3VyZSBpdCBnZXRzIHBpY2tlZCB1cC5cbiAgZW1pdFJlYWRhYmxlKHN0cmVhbSk7XG59XG5cbi8vIERvbid0IGVtaXQgcmVhZGFibGUgcmlnaHQgYXdheSBpbiBzeW5jIG1vZGUsIGJlY2F1c2UgdGhpcyBjYW4gdHJpZ2dlclxuLy8gYW5vdGhlciByZWFkKCkgY2FsbCA9PiBzdGFjayBvdmVyZmxvdy4gIFRoaXMgd2F5LCBpdCBtaWdodCB0cmlnZ2VyXG4vLyBhIG5leHRUaWNrIHJlY3Vyc2lvbiB3YXJuaW5nLCBidXQgdGhhdCdzIG5vdCBzbyBiYWQuXG5mdW5jdGlvbiBlbWl0UmVhZGFibGUoc3RyZWFtKSB7XG4gIHZhciBzdGF0ZSA9IHN0cmVhbS5fcmVhZGFibGVTdGF0ZTtcbiAgc3RhdGUubmVlZFJlYWRhYmxlID0gZmFsc2U7XG4gIGlmICghc3RhdGUuZW1pdHRlZFJlYWRhYmxlKSB7XG4gICAgZGVidWcoJ2VtaXRSZWFkYWJsZScsIHN0YXRlLmZsb3dpbmcpO1xuICAgIHN0YXRlLmVtaXR0ZWRSZWFkYWJsZSA9IHRydWU7XG4gICAgaWYgKHN0YXRlLnN5bmMpIHBuYS5uZXh0VGljayhlbWl0UmVhZGFibGVfLCBzdHJlYW0pO2Vsc2UgZW1pdFJlYWRhYmxlXyhzdHJlYW0pO1xuICB9XG59XG5cbmZ1bmN0aW9uIGVtaXRSZWFkYWJsZV8oc3RyZWFtKSB7XG4gIGRlYnVnKCdlbWl0IHJlYWRhYmxlJyk7XG4gIHN0cmVhbS5lbWl0KCdyZWFkYWJsZScpO1xuICBmbG93KHN0cmVhbSk7XG59XG5cbi8vIGF0IHRoaXMgcG9pbnQsIHRoZSB1c2VyIGhhcyBwcmVzdW1hYmx5IHNlZW4gdGhlICdyZWFkYWJsZScgZXZlbnQsXG4vLyBhbmQgY2FsbGVkIHJlYWQoKSB0byBjb25zdW1lIHNvbWUgZGF0YS4gIHRoYXQgbWF5IGhhdmUgdHJpZ2dlcmVkXG4vLyBpbiB0dXJuIGFub3RoZXIgX3JlYWQobikgY2FsbCwgaW4gd2hpY2ggY2FzZSByZWFkaW5nID0gdHJ1ZSBpZlxuLy8gaXQncyBpbiBwcm9ncmVzcy5cbi8vIEhvd2V2ZXIsIGlmIHdlJ3JlIG5vdCBlbmRlZCwgb3IgcmVhZGluZywgYW5kIHRoZSBsZW5ndGggPCBod20sXG4vLyB0aGVuIGdvIGFoZWFkIGFuZCB0cnkgdG8gcmVhZCBzb21lIG1vcmUgcHJlZW1wdGl2ZWx5LlxuZnVuY3Rpb24gbWF5YmVSZWFkTW9yZShzdHJlYW0sIHN0YXRlKSB7XG4gIGlmICghc3RhdGUucmVhZGluZ01vcmUpIHtcbiAgICBzdGF0ZS5yZWFkaW5nTW9yZSA9IHRydWU7XG4gICAgcG5hLm5leHRUaWNrKG1heWJlUmVhZE1vcmVfLCBzdHJlYW0sIHN0YXRlKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBtYXliZVJlYWRNb3JlXyhzdHJlYW0sIHN0YXRlKSB7XG4gIHZhciBsZW4gPSBzdGF0ZS5sZW5ndGg7XG4gIHdoaWxlICghc3RhdGUucmVhZGluZyAmJiAhc3RhdGUuZmxvd2luZyAmJiAhc3RhdGUuZW5kZWQgJiYgc3RhdGUubGVuZ3RoIDwgc3RhdGUuaGlnaFdhdGVyTWFyaykge1xuICAgIGRlYnVnKCdtYXliZVJlYWRNb3JlIHJlYWQgMCcpO1xuICAgIHN0cmVhbS5yZWFkKDApO1xuICAgIGlmIChsZW4gPT09IHN0YXRlLmxlbmd0aClcbiAgICAgIC8vIGRpZG4ndCBnZXQgYW55IGRhdGEsIHN0b3Agc3Bpbm5pbmcuXG4gICAgICBicmVhaztlbHNlIGxlbiA9IHN0YXRlLmxlbmd0aDtcbiAgfVxuICBzdGF0ZS5yZWFkaW5nTW9yZSA9IGZhbHNlO1xufVxuXG4vLyBhYnN0cmFjdCBtZXRob2QuICB0byBiZSBvdmVycmlkZGVuIGluIHNwZWNpZmljIGltcGxlbWVudGF0aW9uIGNsYXNzZXMuXG4vLyBjYWxsIGNiKGVyLCBkYXRhKSB3aGVyZSBkYXRhIGlzIDw9IG4gaW4gbGVuZ3RoLlxuLy8gZm9yIHZpcnR1YWwgKG5vbi1zdHJpbmcsIG5vbi1idWZmZXIpIHN0cmVhbXMsIFwibGVuZ3RoXCIgaXMgc29tZXdoYXRcbi8vIGFyYml0cmFyeSwgYW5kIHBlcmhhcHMgbm90IHZlcnkgbWVhbmluZ2Z1bC5cblJlYWRhYmxlLnByb3RvdHlwZS5fcmVhZCA9IGZ1bmN0aW9uIChuKSB7XG4gIHRoaXMuZW1pdCgnZXJyb3InLCBuZXcgRXJyb3IoJ19yZWFkKCkgaXMgbm90IGltcGxlbWVudGVkJykpO1xufTtcblxuUmVhZGFibGUucHJvdG90eXBlLnBpcGUgPSBmdW5jdGlvbiAoZGVzdCwgcGlwZU9wdHMpIHtcbiAgdmFyIHNyYyA9IHRoaXM7XG4gIHZhciBzdGF0ZSA9IHRoaXMuX3JlYWRhYmxlU3RhdGU7XG5cbiAgc3dpdGNoIChzdGF0ZS5waXBlc0NvdW50KSB7XG4gICAgY2FzZSAwOlxuICAgICAgc3RhdGUucGlwZXMgPSBkZXN0O1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAxOlxuICAgICAgc3RhdGUucGlwZXMgPSBbc3RhdGUucGlwZXMsIGRlc3RdO1xuICAgICAgYnJlYWs7XG4gICAgZGVmYXVsdDpcbiAgICAgIHN0YXRlLnBpcGVzLnB1c2goZGVzdCk7XG4gICAgICBicmVhaztcbiAgfVxuICBzdGF0ZS5waXBlc0NvdW50ICs9IDE7XG4gIGRlYnVnKCdwaXBlIGNvdW50PSVkIG9wdHM9JWonLCBzdGF0ZS5waXBlc0NvdW50LCBwaXBlT3B0cyk7XG5cbiAgdmFyIGRvRW5kID0gKCFwaXBlT3B0cyB8fCBwaXBlT3B0cy5lbmQgIT09IGZhbHNlKSAmJiBkZXN0ICE9PSBwcm9jZXNzLnN0ZG91dCAmJiBkZXN0ICE9PSBwcm9jZXNzLnN0ZGVycjtcblxuICB2YXIgZW5kRm4gPSBkb0VuZCA/IG9uZW5kIDogdW5waXBlO1xuICBpZiAoc3RhdGUuZW5kRW1pdHRlZCkgcG5hLm5leHRUaWNrKGVuZEZuKTtlbHNlIHNyYy5vbmNlKCdlbmQnLCBlbmRGbik7XG5cbiAgZGVzdC5vbigndW5waXBlJywgb251bnBpcGUpO1xuICBmdW5jdGlvbiBvbnVucGlwZShyZWFkYWJsZSwgdW5waXBlSW5mbykge1xuICAgIGRlYnVnKCdvbnVucGlwZScpO1xuICAgIGlmIChyZWFkYWJsZSA9PT0gc3JjKSB7XG4gICAgICBpZiAodW5waXBlSW5mbyAmJiB1bnBpcGVJbmZvLmhhc1VucGlwZWQgPT09IGZhbHNlKSB7XG4gICAgICAgIHVucGlwZUluZm8uaGFzVW5waXBlZCA9IHRydWU7XG4gICAgICAgIGNsZWFudXAoKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBvbmVuZCgpIHtcbiAgICBkZWJ1Zygnb25lbmQnKTtcbiAgICBkZXN0LmVuZCgpO1xuICB9XG5cbiAgLy8gd2hlbiB0aGUgZGVzdCBkcmFpbnMsIGl0IHJlZHVjZXMgdGhlIGF3YWl0RHJhaW4gY291bnRlclxuICAvLyBvbiB0aGUgc291cmNlLiAgVGhpcyB3b3VsZCBiZSBtb3JlIGVsZWdhbnQgd2l0aCBhIC5vbmNlKClcbiAgLy8gaGFuZGxlciBpbiBmbG93KCksIGJ1dCBhZGRpbmcgYW5kIHJlbW92aW5nIHJlcGVhdGVkbHkgaXNcbiAgLy8gdG9vIHNsb3cuXG4gIHZhciBvbmRyYWluID0gcGlwZU9uRHJhaW4oc3JjKTtcbiAgZGVzdC5vbignZHJhaW4nLCBvbmRyYWluKTtcblxuICB2YXIgY2xlYW5lZFVwID0gZmFsc2U7XG4gIGZ1bmN0aW9uIGNsZWFudXAoKSB7XG4gICAgZGVidWcoJ2NsZWFudXAnKTtcbiAgICAvLyBjbGVhbnVwIGV2ZW50IGhhbmRsZXJzIG9uY2UgdGhlIHBpcGUgaXMgYnJva2VuXG4gICAgZGVzdC5yZW1vdmVMaXN0ZW5lcignY2xvc2UnLCBvbmNsb3NlKTtcbiAgICBkZXN0LnJlbW92ZUxpc3RlbmVyKCdmaW5pc2gnLCBvbmZpbmlzaCk7XG4gICAgZGVzdC5yZW1vdmVMaXN0ZW5lcignZHJhaW4nLCBvbmRyYWluKTtcbiAgICBkZXN0LnJlbW92ZUxpc3RlbmVyKCdlcnJvcicsIG9uZXJyb3IpO1xuICAgIGRlc3QucmVtb3ZlTGlzdGVuZXIoJ3VucGlwZScsIG9udW5waXBlKTtcbiAgICBzcmMucmVtb3ZlTGlzdGVuZXIoJ2VuZCcsIG9uZW5kKTtcbiAgICBzcmMucmVtb3ZlTGlzdGVuZXIoJ2VuZCcsIHVucGlwZSk7XG4gICAgc3JjLnJlbW92ZUxpc3RlbmVyKCdkYXRhJywgb25kYXRhKTtcblxuICAgIGNsZWFuZWRVcCA9IHRydWU7XG5cbiAgICAvLyBpZiB0aGUgcmVhZGVyIGlzIHdhaXRpbmcgZm9yIGEgZHJhaW4gZXZlbnQgZnJvbSB0aGlzXG4gICAgLy8gc3BlY2lmaWMgd3JpdGVyLCB0aGVuIGl0IHdvdWxkIGNhdXNlIGl0IHRvIG5ldmVyIHN0YXJ0XG4gICAgLy8gZmxvd2luZyBhZ2Fpbi5cbiAgICAvLyBTbywgaWYgdGhpcyBpcyBhd2FpdGluZyBhIGRyYWluLCB0aGVuIHdlIGp1c3QgY2FsbCBpdCBub3cuXG4gICAgLy8gSWYgd2UgZG9uJ3Qga25vdywgdGhlbiBhc3N1bWUgdGhhdCB3ZSBhcmUgd2FpdGluZyBmb3Igb25lLlxuICAgIGlmIChzdGF0ZS5hd2FpdERyYWluICYmICghZGVzdC5fd3JpdGFibGVTdGF0ZSB8fCBkZXN0Ll93cml0YWJsZVN0YXRlLm5lZWREcmFpbikpIG9uZHJhaW4oKTtcbiAgfVxuXG4gIC8vIElmIHRoZSB1c2VyIHB1c2hlcyBtb3JlIGRhdGEgd2hpbGUgd2UncmUgd3JpdGluZyB0byBkZXN0IHRoZW4gd2UnbGwgZW5kIHVwXG4gIC8vIGluIG9uZGF0YSBhZ2Fpbi4gSG93ZXZlciwgd2Ugb25seSB3YW50IHRvIGluY3JlYXNlIGF3YWl0RHJhaW4gb25jZSBiZWNhdXNlXG4gIC8vIGRlc3Qgd2lsbCBvbmx5IGVtaXQgb25lICdkcmFpbicgZXZlbnQgZm9yIHRoZSBtdWx0aXBsZSB3cml0ZXMuXG4gIC8vID0+IEludHJvZHVjZSBhIGd1YXJkIG9uIGluY3JlYXNpbmcgYXdhaXREcmFpbi5cbiAgdmFyIGluY3JlYXNlZEF3YWl0RHJhaW4gPSBmYWxzZTtcbiAgc3JjLm9uKCdkYXRhJywgb25kYXRhKTtcbiAgZnVuY3Rpb24gb25kYXRhKGNodW5rKSB7XG4gICAgZGVidWcoJ29uZGF0YScpO1xuICAgIGluY3JlYXNlZEF3YWl0RHJhaW4gPSBmYWxzZTtcbiAgICB2YXIgcmV0ID0gZGVzdC53cml0ZShjaHVuayk7XG4gICAgaWYgKGZhbHNlID09PSByZXQgJiYgIWluY3JlYXNlZEF3YWl0RHJhaW4pIHtcbiAgICAgIC8vIElmIHRoZSB1c2VyIHVucGlwZWQgZHVyaW5nIGBkZXN0LndyaXRlKClgLCBpdCBpcyBwb3NzaWJsZVxuICAgICAgLy8gdG8gZ2V0IHN0dWNrIGluIGEgcGVybWFuZW50bHkgcGF1c2VkIHN0YXRlIGlmIHRoYXQgd3JpdGVcbiAgICAgIC8vIGFsc28gcmV0dXJuZWQgZmFsc2UuXG4gICAgICAvLyA9PiBDaGVjayB3aGV0aGVyIGBkZXN0YCBpcyBzdGlsbCBhIHBpcGluZyBkZXN0aW5hdGlvbi5cbiAgICAgIGlmICgoc3RhdGUucGlwZXNDb3VudCA9PT0gMSAmJiBzdGF0ZS5waXBlcyA9PT0gZGVzdCB8fCBzdGF0ZS5waXBlc0NvdW50ID4gMSAmJiBpbmRleE9mKHN0YXRlLnBpcGVzLCBkZXN0KSAhPT0gLTEpICYmICFjbGVhbmVkVXApIHtcbiAgICAgICAgZGVidWcoJ2ZhbHNlIHdyaXRlIHJlc3BvbnNlLCBwYXVzZScsIHNyYy5fcmVhZGFibGVTdGF0ZS5hd2FpdERyYWluKTtcbiAgICAgICAgc3JjLl9yZWFkYWJsZVN0YXRlLmF3YWl0RHJhaW4rKztcbiAgICAgICAgaW5jcmVhc2VkQXdhaXREcmFpbiA9IHRydWU7XG4gICAgICB9XG4gICAgICBzcmMucGF1c2UoKTtcbiAgICB9XG4gIH1cblxuICAvLyBpZiB0aGUgZGVzdCBoYXMgYW4gZXJyb3IsIHRoZW4gc3RvcCBwaXBpbmcgaW50byBpdC5cbiAgLy8gaG93ZXZlciwgZG9uJ3Qgc3VwcHJlc3MgdGhlIHRocm93aW5nIGJlaGF2aW9yIGZvciB0aGlzLlxuICBmdW5jdGlvbiBvbmVycm9yKGVyKSB7XG4gICAgZGVidWcoJ29uZXJyb3InLCBlcik7XG4gICAgdW5waXBlKCk7XG4gICAgZGVzdC5yZW1vdmVMaXN0ZW5lcignZXJyb3InLCBvbmVycm9yKTtcbiAgICBpZiAoRUVsaXN0ZW5lckNvdW50KGRlc3QsICdlcnJvcicpID09PSAwKSBkZXN0LmVtaXQoJ2Vycm9yJywgZXIpO1xuICB9XG5cbiAgLy8gTWFrZSBzdXJlIG91ciBlcnJvciBoYW5kbGVyIGlzIGF0dGFjaGVkIGJlZm9yZSB1c2VybGFuZCBvbmVzLlxuICBwcmVwZW5kTGlzdGVuZXIoZGVzdCwgJ2Vycm9yJywgb25lcnJvcik7XG5cbiAgLy8gQm90aCBjbG9zZSBhbmQgZmluaXNoIHNob3VsZCB0cmlnZ2VyIHVucGlwZSwgYnV0IG9ubHkgb25jZS5cbiAgZnVuY3Rpb24gb25jbG9zZSgpIHtcbiAgICBkZXN0LnJlbW92ZUxpc3RlbmVyKCdmaW5pc2gnLCBvbmZpbmlzaCk7XG4gICAgdW5waXBlKCk7XG4gIH1cbiAgZGVzdC5vbmNlKCdjbG9zZScsIG9uY2xvc2UpO1xuICBmdW5jdGlvbiBvbmZpbmlzaCgpIHtcbiAgICBkZWJ1Zygnb25maW5pc2gnKTtcbiAgICBkZXN0LnJlbW92ZUxpc3RlbmVyKCdjbG9zZScsIG9uY2xvc2UpO1xuICAgIHVucGlwZSgpO1xuICB9XG4gIGRlc3Qub25jZSgnZmluaXNoJywgb25maW5pc2gpO1xuXG4gIGZ1bmN0aW9uIHVucGlwZSgpIHtcbiAgICBkZWJ1ZygndW5waXBlJyk7XG4gICAgc3JjLnVucGlwZShkZXN0KTtcbiAgfVxuXG4gIC8vIHRlbGwgdGhlIGRlc3QgdGhhdCBpdCdzIGJlaW5nIHBpcGVkIHRvXG4gIGRlc3QuZW1pdCgncGlwZScsIHNyYyk7XG5cbiAgLy8gc3RhcnQgdGhlIGZsb3cgaWYgaXQgaGFzbid0IGJlZW4gc3RhcnRlZCBhbHJlYWR5LlxuICBpZiAoIXN0YXRlLmZsb3dpbmcpIHtcbiAgICBkZWJ1ZygncGlwZSByZXN1bWUnKTtcbiAgICBzcmMucmVzdW1lKCk7XG4gIH1cblxuICByZXR1cm4gZGVzdDtcbn07XG5cbmZ1bmN0aW9uIHBpcGVPbkRyYWluKHNyYykge1xuICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgIHZhciBzdGF0ZSA9IHNyYy5fcmVhZGFibGVTdGF0ZTtcbiAgICBkZWJ1ZygncGlwZU9uRHJhaW4nLCBzdGF0ZS5hd2FpdERyYWluKTtcbiAgICBpZiAoc3RhdGUuYXdhaXREcmFpbikgc3RhdGUuYXdhaXREcmFpbi0tO1xuICAgIGlmIChzdGF0ZS5hd2FpdERyYWluID09PSAwICYmIEVFbGlzdGVuZXJDb3VudChzcmMsICdkYXRhJykpIHtcbiAgICAgIHN0YXRlLmZsb3dpbmcgPSB0cnVlO1xuICAgICAgZmxvdyhzcmMpO1xuICAgIH1cbiAgfTtcbn1cblxuUmVhZGFibGUucHJvdG90eXBlLnVucGlwZSA9IGZ1bmN0aW9uIChkZXN0KSB7XG4gIHZhciBzdGF0ZSA9IHRoaXMuX3JlYWRhYmxlU3RhdGU7XG4gIHZhciB1bnBpcGVJbmZvID0geyBoYXNVbnBpcGVkOiBmYWxzZSB9O1xuXG4gIC8vIGlmIHdlJ3JlIG5vdCBwaXBpbmcgYW55d2hlcmUsIHRoZW4gZG8gbm90aGluZy5cbiAgaWYgKHN0YXRlLnBpcGVzQ291bnQgPT09IDApIHJldHVybiB0aGlzO1xuXG4gIC8vIGp1c3Qgb25lIGRlc3RpbmF0aW9uLiAgbW9zdCBjb21tb24gY2FzZS5cbiAgaWYgKHN0YXRlLnBpcGVzQ291bnQgPT09IDEpIHtcbiAgICAvLyBwYXNzZWQgaW4gb25lLCBidXQgaXQncyBub3QgdGhlIHJpZ2h0IG9uZS5cbiAgICBpZiAoZGVzdCAmJiBkZXN0ICE9PSBzdGF0ZS5waXBlcykgcmV0dXJuIHRoaXM7XG5cbiAgICBpZiAoIWRlc3QpIGRlc3QgPSBzdGF0ZS5waXBlcztcblxuICAgIC8vIGdvdCBhIG1hdGNoLlxuICAgIHN0YXRlLnBpcGVzID0gbnVsbDtcbiAgICBzdGF0ZS5waXBlc0NvdW50ID0gMDtcbiAgICBzdGF0ZS5mbG93aW5nID0gZmFsc2U7XG4gICAgaWYgKGRlc3QpIGRlc3QuZW1pdCgndW5waXBlJywgdGhpcywgdW5waXBlSW5mbyk7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICAvLyBzbG93IGNhc2UuIG11bHRpcGxlIHBpcGUgZGVzdGluYXRpb25zLlxuXG4gIGlmICghZGVzdCkge1xuICAgIC8vIHJlbW92ZSBhbGwuXG4gICAgdmFyIGRlc3RzID0gc3RhdGUucGlwZXM7XG4gICAgdmFyIGxlbiA9IHN0YXRlLnBpcGVzQ291bnQ7XG4gICAgc3RhdGUucGlwZXMgPSBudWxsO1xuICAgIHN0YXRlLnBpcGVzQ291bnQgPSAwO1xuICAgIHN0YXRlLmZsb3dpbmcgPSBmYWxzZTtcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuOyBpKyspIHtcbiAgICAgIGRlc3RzW2ldLmVtaXQoJ3VucGlwZScsIHRoaXMsIHVucGlwZUluZm8pO1xuICAgIH1yZXR1cm4gdGhpcztcbiAgfVxuXG4gIC8vIHRyeSB0byBmaW5kIHRoZSByaWdodCBvbmUuXG4gIHZhciBpbmRleCA9IGluZGV4T2Yoc3RhdGUucGlwZXMsIGRlc3QpO1xuICBpZiAoaW5kZXggPT09IC0xKSByZXR1cm4gdGhpcztcblxuICBzdGF0ZS5waXBlcy5zcGxpY2UoaW5kZXgsIDEpO1xuICBzdGF0ZS5waXBlc0NvdW50IC09IDE7XG4gIGlmIChzdGF0ZS5waXBlc0NvdW50ID09PSAxKSBzdGF0ZS5waXBlcyA9IHN0YXRlLnBpcGVzWzBdO1xuXG4gIGRlc3QuZW1pdCgndW5waXBlJywgdGhpcywgdW5waXBlSW5mbyk7XG5cbiAgcmV0dXJuIHRoaXM7XG59O1xuXG4vLyBzZXQgdXAgZGF0YSBldmVudHMgaWYgdGhleSBhcmUgYXNrZWQgZm9yXG4vLyBFbnN1cmUgcmVhZGFibGUgbGlzdGVuZXJzIGV2ZW50dWFsbHkgZ2V0IHNvbWV0aGluZ1xuUmVhZGFibGUucHJvdG90eXBlLm9uID0gZnVuY3Rpb24gKGV2LCBmbikge1xuICB2YXIgcmVzID0gU3RyZWFtLnByb3RvdHlwZS5vbi5jYWxsKHRoaXMsIGV2LCBmbik7XG5cbiAgaWYgKGV2ID09PSAnZGF0YScpIHtcbiAgICAvLyBTdGFydCBmbG93aW5nIG9uIG5leHQgdGljayBpZiBzdHJlYW0gaXNuJ3QgZXhwbGljaXRseSBwYXVzZWRcbiAgICBpZiAodGhpcy5fcmVhZGFibGVTdGF0ZS5mbG93aW5nICE9PSBmYWxzZSkgdGhpcy5yZXN1bWUoKTtcbiAgfSBlbHNlIGlmIChldiA9PT0gJ3JlYWRhYmxlJykge1xuICAgIHZhciBzdGF0ZSA9IHRoaXMuX3JlYWRhYmxlU3RhdGU7XG4gICAgaWYgKCFzdGF0ZS5lbmRFbWl0dGVkICYmICFzdGF0ZS5yZWFkYWJsZUxpc3RlbmluZykge1xuICAgICAgc3RhdGUucmVhZGFibGVMaXN0ZW5pbmcgPSBzdGF0ZS5uZWVkUmVhZGFibGUgPSB0cnVlO1xuICAgICAgc3RhdGUuZW1pdHRlZFJlYWRhYmxlID0gZmFsc2U7XG4gICAgICBpZiAoIXN0YXRlLnJlYWRpbmcpIHtcbiAgICAgICAgcG5hLm5leHRUaWNrKG5SZWFkaW5nTmV4dFRpY2ssIHRoaXMpO1xuICAgICAgfSBlbHNlIGlmIChzdGF0ZS5sZW5ndGgpIHtcbiAgICAgICAgZW1pdFJlYWRhYmxlKHRoaXMpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiByZXM7XG59O1xuUmVhZGFibGUucHJvdG90eXBlLmFkZExpc3RlbmVyID0gUmVhZGFibGUucHJvdG90eXBlLm9uO1xuXG5mdW5jdGlvbiBuUmVhZGluZ05leHRUaWNrKHNlbGYpIHtcbiAgZGVidWcoJ3JlYWRhYmxlIG5leHR0aWNrIHJlYWQgMCcpO1xuICBzZWxmLnJlYWQoMCk7XG59XG5cbi8vIHBhdXNlKCkgYW5kIHJlc3VtZSgpIGFyZSByZW1uYW50cyBvZiB0aGUgbGVnYWN5IHJlYWRhYmxlIHN0cmVhbSBBUElcbi8vIElmIHRoZSB1c2VyIHVzZXMgdGhlbSwgdGhlbiBzd2l0Y2ggaW50byBvbGQgbW9kZS5cblJlYWRhYmxlLnByb3RvdHlwZS5yZXN1bWUgPSBmdW5jdGlvbiAoKSB7XG4gIHZhciBzdGF0ZSA9IHRoaXMuX3JlYWRhYmxlU3RhdGU7XG4gIGlmICghc3RhdGUuZmxvd2luZykge1xuICAgIGRlYnVnKCdyZXN1bWUnKTtcbiAgICBzdGF0ZS5mbG93aW5nID0gdHJ1ZTtcbiAgICByZXN1bWUodGhpcywgc3RhdGUpO1xuICB9XG4gIHJldHVybiB0aGlzO1xufTtcblxuZnVuY3Rpb24gcmVzdW1lKHN0cmVhbSwgc3RhdGUpIHtcbiAgaWYgKCFzdGF0ZS5yZXN1bWVTY2hlZHVsZWQpIHtcbiAgICBzdGF0ZS5yZXN1bWVTY2hlZHVsZWQgPSB0cnVlO1xuICAgIHBuYS5uZXh0VGljayhyZXN1bWVfLCBzdHJlYW0sIHN0YXRlKTtcbiAgfVxufVxuXG5mdW5jdGlvbiByZXN1bWVfKHN0cmVhbSwgc3RhdGUpIHtcbiAgaWYgKCFzdGF0ZS5yZWFkaW5nKSB7XG4gICAgZGVidWcoJ3Jlc3VtZSByZWFkIDAnKTtcbiAgICBzdHJlYW0ucmVhZCgwKTtcbiAgfVxuXG4gIHN0YXRlLnJlc3VtZVNjaGVkdWxlZCA9IGZhbHNlO1xuICBzdGF0ZS5hd2FpdERyYWluID0gMDtcbiAgc3RyZWFtLmVtaXQoJ3Jlc3VtZScpO1xuICBmbG93KHN0cmVhbSk7XG4gIGlmIChzdGF0ZS5mbG93aW5nICYmICFzdGF0ZS5yZWFkaW5nKSBzdHJlYW0ucmVhZCgwKTtcbn1cblxuUmVhZGFibGUucHJvdG90eXBlLnBhdXNlID0gZnVuY3Rpb24gKCkge1xuICBkZWJ1ZygnY2FsbCBwYXVzZSBmbG93aW5nPSVqJywgdGhpcy5fcmVhZGFibGVTdGF0ZS5mbG93aW5nKTtcbiAgaWYgKGZhbHNlICE9PSB0aGlzLl9yZWFkYWJsZVN0YXRlLmZsb3dpbmcpIHtcbiAgICBkZWJ1ZygncGF1c2UnKTtcbiAgICB0aGlzLl9yZWFkYWJsZVN0YXRlLmZsb3dpbmcgPSBmYWxzZTtcbiAgICB0aGlzLmVtaXQoJ3BhdXNlJyk7XG4gIH1cbiAgcmV0dXJuIHRoaXM7XG59O1xuXG5mdW5jdGlvbiBmbG93KHN0cmVhbSkge1xuICB2YXIgc3RhdGUgPSBzdHJlYW0uX3JlYWRhYmxlU3RhdGU7XG4gIGRlYnVnKCdmbG93Jywgc3RhdGUuZmxvd2luZyk7XG4gIHdoaWxlIChzdGF0ZS5mbG93aW5nICYmIHN0cmVhbS5yZWFkKCkgIT09IG51bGwpIHt9XG59XG5cbi8vIHdyYXAgYW4gb2xkLXN0eWxlIHN0cmVhbSBhcyB0aGUgYXN5bmMgZGF0YSBzb3VyY2UuXG4vLyBUaGlzIGlzICpub3QqIHBhcnQgb2YgdGhlIHJlYWRhYmxlIHN0cmVhbSBpbnRlcmZhY2UuXG4vLyBJdCBpcyBhbiB1Z2x5IHVuZm9ydHVuYXRlIG1lc3Mgb2YgaGlzdG9yeS5cblJlYWRhYmxlLnByb3RvdHlwZS53cmFwID0gZnVuY3Rpb24gKHN0cmVhbSkge1xuICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gIHZhciBzdGF0ZSA9IHRoaXMuX3JlYWRhYmxlU3RhdGU7XG4gIHZhciBwYXVzZWQgPSBmYWxzZTtcblxuICBzdHJlYW0ub24oJ2VuZCcsIGZ1bmN0aW9uICgpIHtcbiAgICBkZWJ1Zygnd3JhcHBlZCBlbmQnKTtcbiAgICBpZiAoc3RhdGUuZGVjb2RlciAmJiAhc3RhdGUuZW5kZWQpIHtcbiAgICAgIHZhciBjaHVuayA9IHN0YXRlLmRlY29kZXIuZW5kKCk7XG4gICAgICBpZiAoY2h1bmsgJiYgY2h1bmsubGVuZ3RoKSBfdGhpcy5wdXNoKGNodW5rKTtcbiAgICB9XG5cbiAgICBfdGhpcy5wdXNoKG51bGwpO1xuICB9KTtcblxuICBzdHJlYW0ub24oJ2RhdGEnLCBmdW5jdGlvbiAoY2h1bmspIHtcbiAgICBkZWJ1Zygnd3JhcHBlZCBkYXRhJyk7XG4gICAgaWYgKHN0YXRlLmRlY29kZXIpIGNodW5rID0gc3RhdGUuZGVjb2Rlci53cml0ZShjaHVuayk7XG5cbiAgICAvLyBkb24ndCBza2lwIG92ZXIgZmFsc3kgdmFsdWVzIGluIG9iamVjdE1vZGVcbiAgICBpZiAoc3RhdGUub2JqZWN0TW9kZSAmJiAoY2h1bmsgPT09IG51bGwgfHwgY2h1bmsgPT09IHVuZGVmaW5lZCkpIHJldHVybjtlbHNlIGlmICghc3RhdGUub2JqZWN0TW9kZSAmJiAoIWNodW5rIHx8ICFjaHVuay5sZW5ndGgpKSByZXR1cm47XG5cbiAgICB2YXIgcmV0ID0gX3RoaXMucHVzaChjaHVuayk7XG4gICAgaWYgKCFyZXQpIHtcbiAgICAgIHBhdXNlZCA9IHRydWU7XG4gICAgICBzdHJlYW0ucGF1c2UoKTtcbiAgICB9XG4gIH0pO1xuXG4gIC8vIHByb3h5IGFsbCB0aGUgb3RoZXIgbWV0aG9kcy5cbiAgLy8gaW1wb3J0YW50IHdoZW4gd3JhcHBpbmcgZmlsdGVycyBhbmQgZHVwbGV4ZXMuXG4gIGZvciAodmFyIGkgaW4gc3RyZWFtKSB7XG4gICAgaWYgKHRoaXNbaV0gPT09IHVuZGVmaW5lZCAmJiB0eXBlb2Ygc3RyZWFtW2ldID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICB0aGlzW2ldID0gZnVuY3Rpb24gKG1ldGhvZCkge1xuICAgICAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgICAgIHJldHVybiBzdHJlYW1bbWV0aG9kXS5hcHBseShzdHJlYW0sIGFyZ3VtZW50cyk7XG4gICAgICAgIH07XG4gICAgICB9KGkpO1xuICAgIH1cbiAgfVxuXG4gIC8vIHByb3h5IGNlcnRhaW4gaW1wb3J0YW50IGV2ZW50cy5cbiAgZm9yICh2YXIgbiA9IDA7IG4gPCBrUHJveHlFdmVudHMubGVuZ3RoOyBuKyspIHtcbiAgICBzdHJlYW0ub24oa1Byb3h5RXZlbnRzW25dLCB0aGlzLmVtaXQuYmluZCh0aGlzLCBrUHJveHlFdmVudHNbbl0pKTtcbiAgfVxuXG4gIC8vIHdoZW4gd2UgdHJ5IHRvIGNvbnN1bWUgc29tZSBtb3JlIGJ5dGVzLCBzaW1wbHkgdW5wYXVzZSB0aGVcbiAgLy8gdW5kZXJseWluZyBzdHJlYW0uXG4gIHRoaXMuX3JlYWQgPSBmdW5jdGlvbiAobikge1xuICAgIGRlYnVnKCd3cmFwcGVkIF9yZWFkJywgbik7XG4gICAgaWYgKHBhdXNlZCkge1xuICAgICAgcGF1c2VkID0gZmFsc2U7XG4gICAgICBzdHJlYW0ucmVzdW1lKCk7XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiB0aGlzO1xufTtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KFJlYWRhYmxlLnByb3RvdHlwZSwgJ3JlYWRhYmxlSGlnaFdhdGVyTWFyaycsIHtcbiAgLy8gbWFraW5nIGl0IGV4cGxpY2l0IHRoaXMgcHJvcGVydHkgaXMgbm90IGVudW1lcmFibGVcbiAgLy8gYmVjYXVzZSBvdGhlcndpc2Ugc29tZSBwcm90b3R5cGUgbWFuaXB1bGF0aW9uIGluXG4gIC8vIHVzZXJsYW5kIHdpbGwgZmFpbFxuICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIHRoaXMuX3JlYWRhYmxlU3RhdGUuaGlnaFdhdGVyTWFyaztcbiAgfVxufSk7XG5cbi8vIGV4cG9zZWQgZm9yIHRlc3RpbmcgcHVycG9zZXMgb25seS5cblJlYWRhYmxlLl9mcm9tTGlzdCA9IGZyb21MaXN0O1xuXG4vLyBQbHVjayBvZmYgbiBieXRlcyBmcm9tIGFuIGFycmF5IG9mIGJ1ZmZlcnMuXG4vLyBMZW5ndGggaXMgdGhlIGNvbWJpbmVkIGxlbmd0aHMgb2YgYWxsIHRoZSBidWZmZXJzIGluIHRoZSBsaXN0LlxuLy8gVGhpcyBmdW5jdGlvbiBpcyBkZXNpZ25lZCB0byBiZSBpbmxpbmFibGUsIHNvIHBsZWFzZSB0YWtlIGNhcmUgd2hlbiBtYWtpbmdcbi8vIGNoYW5nZXMgdG8gdGhlIGZ1bmN0aW9uIGJvZHkuXG5mdW5jdGlvbiBmcm9tTGlzdChuLCBzdGF0ZSkge1xuICAvLyBub3RoaW5nIGJ1ZmZlcmVkXG4gIGlmIChzdGF0ZS5sZW5ndGggPT09IDApIHJldHVybiBudWxsO1xuXG4gIHZhciByZXQ7XG4gIGlmIChzdGF0ZS5vYmplY3RNb2RlKSByZXQgPSBzdGF0ZS5idWZmZXIuc2hpZnQoKTtlbHNlIGlmICghbiB8fCBuID49IHN0YXRlLmxlbmd0aCkge1xuICAgIC8vIHJlYWQgaXQgYWxsLCB0cnVuY2F0ZSB0aGUgbGlzdFxuICAgIGlmIChzdGF0ZS5kZWNvZGVyKSByZXQgPSBzdGF0ZS5idWZmZXIuam9pbignJyk7ZWxzZSBpZiAoc3RhdGUuYnVmZmVyLmxlbmd0aCA9PT0gMSkgcmV0ID0gc3RhdGUuYnVmZmVyLmhlYWQuZGF0YTtlbHNlIHJldCA9IHN0YXRlLmJ1ZmZlci5jb25jYXQoc3RhdGUubGVuZ3RoKTtcbiAgICBzdGF0ZS5idWZmZXIuY2xlYXIoKTtcbiAgfSBlbHNlIHtcbiAgICAvLyByZWFkIHBhcnQgb2YgbGlzdFxuICAgIHJldCA9IGZyb21MaXN0UGFydGlhbChuLCBzdGF0ZS5idWZmZXIsIHN0YXRlLmRlY29kZXIpO1xuICB9XG5cbiAgcmV0dXJuIHJldDtcbn1cblxuLy8gRXh0cmFjdHMgb25seSBlbm91Z2ggYnVmZmVyZWQgZGF0YSB0byBzYXRpc2Z5IHRoZSBhbW91bnQgcmVxdWVzdGVkLlxuLy8gVGhpcyBmdW5jdGlvbiBpcyBkZXNpZ25lZCB0byBiZSBpbmxpbmFibGUsIHNvIHBsZWFzZSB0YWtlIGNhcmUgd2hlbiBtYWtpbmdcbi8vIGNoYW5nZXMgdG8gdGhlIGZ1bmN0aW9uIGJvZHkuXG5mdW5jdGlvbiBmcm9tTGlzdFBhcnRpYWwobiwgbGlzdCwgaGFzU3RyaW5ncykge1xuICB2YXIgcmV0O1xuICBpZiAobiA8IGxpc3QuaGVhZC5kYXRhLmxlbmd0aCkge1xuICAgIC8vIHNsaWNlIGlzIHRoZSBzYW1lIGZvciBidWZmZXJzIGFuZCBzdHJpbmdzXG4gICAgcmV0ID0gbGlzdC5oZWFkLmRhdGEuc2xpY2UoMCwgbik7XG4gICAgbGlzdC5oZWFkLmRhdGEgPSBsaXN0LmhlYWQuZGF0YS5zbGljZShuKTtcbiAgfSBlbHNlIGlmIChuID09PSBsaXN0LmhlYWQuZGF0YS5sZW5ndGgpIHtcbiAgICAvLyBmaXJzdCBjaHVuayBpcyBhIHBlcmZlY3QgbWF0Y2hcbiAgICByZXQgPSBsaXN0LnNoaWZ0KCk7XG4gIH0gZWxzZSB7XG4gICAgLy8gcmVzdWx0IHNwYW5zIG1vcmUgdGhhbiBvbmUgYnVmZmVyXG4gICAgcmV0ID0gaGFzU3RyaW5ncyA/IGNvcHlGcm9tQnVmZmVyU3RyaW5nKG4sIGxpc3QpIDogY29weUZyb21CdWZmZXIobiwgbGlzdCk7XG4gIH1cbiAgcmV0dXJuIHJldDtcbn1cblxuLy8gQ29waWVzIGEgc3BlY2lmaWVkIGFtb3VudCBvZiBjaGFyYWN0ZXJzIGZyb20gdGhlIGxpc3Qgb2YgYnVmZmVyZWQgZGF0YVxuLy8gY2h1bmtzLlxuLy8gVGhpcyBmdW5jdGlvbiBpcyBkZXNpZ25lZCB0byBiZSBpbmxpbmFibGUsIHNvIHBsZWFzZSB0YWtlIGNhcmUgd2hlbiBtYWtpbmdcbi8vIGNoYW5nZXMgdG8gdGhlIGZ1bmN0aW9uIGJvZHkuXG5mdW5jdGlvbiBjb3B5RnJvbUJ1ZmZlclN0cmluZyhuLCBsaXN0KSB7XG4gIHZhciBwID0gbGlzdC5oZWFkO1xuICB2YXIgYyA9IDE7XG4gIHZhciByZXQgPSBwLmRhdGE7XG4gIG4gLT0gcmV0Lmxlbmd0aDtcbiAgd2hpbGUgKHAgPSBwLm5leHQpIHtcbiAgICB2YXIgc3RyID0gcC5kYXRhO1xuICAgIHZhciBuYiA9IG4gPiBzdHIubGVuZ3RoID8gc3RyLmxlbmd0aCA6IG47XG4gICAgaWYgKG5iID09PSBzdHIubGVuZ3RoKSByZXQgKz0gc3RyO2Vsc2UgcmV0ICs9IHN0ci5zbGljZSgwLCBuKTtcbiAgICBuIC09IG5iO1xuICAgIGlmIChuID09PSAwKSB7XG4gICAgICBpZiAobmIgPT09IHN0ci5sZW5ndGgpIHtcbiAgICAgICAgKytjO1xuICAgICAgICBpZiAocC5uZXh0KSBsaXN0LmhlYWQgPSBwLm5leHQ7ZWxzZSBsaXN0LmhlYWQgPSBsaXN0LnRhaWwgPSBudWxsO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgbGlzdC5oZWFkID0gcDtcbiAgICAgICAgcC5kYXRhID0gc3RyLnNsaWNlKG5iKTtcbiAgICAgIH1cbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgICArK2M7XG4gIH1cbiAgbGlzdC5sZW5ndGggLT0gYztcbiAgcmV0dXJuIHJldDtcbn1cblxuLy8gQ29waWVzIGEgc3BlY2lmaWVkIGFtb3VudCBvZiBieXRlcyBmcm9tIHRoZSBsaXN0IG9mIGJ1ZmZlcmVkIGRhdGEgY2h1bmtzLlxuLy8gVGhpcyBmdW5jdGlvbiBpcyBkZXNpZ25lZCB0byBiZSBpbmxpbmFibGUsIHNvIHBsZWFzZSB0YWtlIGNhcmUgd2hlbiBtYWtpbmdcbi8vIGNoYW5nZXMgdG8gdGhlIGZ1bmN0aW9uIGJvZHkuXG5mdW5jdGlvbiBjb3B5RnJvbUJ1ZmZlcihuLCBsaXN0KSB7XG4gIHZhciByZXQgPSBCdWZmZXIuYWxsb2NVbnNhZmUobik7XG4gIHZhciBwID0gbGlzdC5oZWFkO1xuICB2YXIgYyA9IDE7XG4gIHAuZGF0YS5jb3B5KHJldCk7XG4gIG4gLT0gcC5kYXRhLmxlbmd0aDtcbiAgd2hpbGUgKHAgPSBwLm5leHQpIHtcbiAgICB2YXIgYnVmID0gcC5kYXRhO1xuICAgIHZhciBuYiA9IG4gPiBidWYubGVuZ3RoID8gYnVmLmxlbmd0aCA6IG47XG4gICAgYnVmLmNvcHkocmV0LCByZXQubGVuZ3RoIC0gbiwgMCwgbmIpO1xuICAgIG4gLT0gbmI7XG4gICAgaWYgKG4gPT09IDApIHtcbiAgICAgIGlmIChuYiA9PT0gYnVmLmxlbmd0aCkge1xuICAgICAgICArK2M7XG4gICAgICAgIGlmIChwLm5leHQpIGxpc3QuaGVhZCA9IHAubmV4dDtlbHNlIGxpc3QuaGVhZCA9IGxpc3QudGFpbCA9IG51bGw7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBsaXN0LmhlYWQgPSBwO1xuICAgICAgICBwLmRhdGEgPSBidWYuc2xpY2UobmIpO1xuICAgICAgfVxuICAgICAgYnJlYWs7XG4gICAgfVxuICAgICsrYztcbiAgfVxuICBsaXN0Lmxlbmd0aCAtPSBjO1xuICByZXR1cm4gcmV0O1xufVxuXG5mdW5jdGlvbiBlbmRSZWFkYWJsZShzdHJlYW0pIHtcbiAgdmFyIHN0YXRlID0gc3RyZWFtLl9yZWFkYWJsZVN0YXRlO1xuXG4gIC8vIElmIHdlIGdldCBoZXJlIGJlZm9yZSBjb25zdW1pbmcgYWxsIHRoZSBieXRlcywgdGhlbiB0aGF0IGlzIGFcbiAgLy8gYnVnIGluIG5vZGUuICBTaG91bGQgbmV2ZXIgaGFwcGVuLlxuICBpZiAoc3RhdGUubGVuZ3RoID4gMCkgdGhyb3cgbmV3IEVycm9yKCdcImVuZFJlYWRhYmxlKClcIiBjYWxsZWQgb24gbm9uLWVtcHR5IHN0cmVhbScpO1xuXG4gIGlmICghc3RhdGUuZW5kRW1pdHRlZCkge1xuICAgIHN0YXRlLmVuZGVkID0gdHJ1ZTtcbiAgICBwbmEubmV4dFRpY2soZW5kUmVhZGFibGVOVCwgc3RhdGUsIHN0cmVhbSk7XG4gIH1cbn1cblxuZnVuY3Rpb24gZW5kUmVhZGFibGVOVChzdGF0ZSwgc3RyZWFtKSB7XG4gIC8vIENoZWNrIHRoYXQgd2UgZGlkbid0IGdldCBvbmUgbGFzdCB1bnNoaWZ0LlxuICBpZiAoIXN0YXRlLmVuZEVtaXR0ZWQgJiYgc3RhdGUubGVuZ3RoID09PSAwKSB7XG4gICAgc3RhdGUuZW5kRW1pdHRlZCA9IHRydWU7XG4gICAgc3RyZWFtLnJlYWRhYmxlID0gZmFsc2U7XG4gICAgc3RyZWFtLmVtaXQoJ2VuZCcpO1xuICB9XG59XG5cbmZ1bmN0aW9uIGluZGV4T2YoeHMsIHgpIHtcbiAgZm9yICh2YXIgaSA9IDAsIGwgPSB4cy5sZW5ndGg7IGkgPCBsOyBpKyspIHtcbiAgICBpZiAoeHNbaV0gPT09IHgpIHJldHVybiBpO1xuICB9XG4gIHJldHVybiAtMTtcbn0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/readable-stream/lib/_stream_readable.js\n");

/***/ }),

/***/ "./node_modules/readable-stream/lib/_stream_transform.js":
/*!***************************************************************!*\
  !*** ./node_modules/readable-stream/lib/_stream_transform.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n\n\nmodule.exports = Transform;\n\nvar Duplex = __webpack_require__(/*! ./_stream_duplex */ \"./node_modules/readable-stream/lib/_stream_duplex.js\");\n\n/*<replacement>*/\nvar util = __webpack_require__(/*! core-util-is */ \"./node_modules/core-util-is/lib/util.js\");\nutil.inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\");\n/*</replacement>*/\n\nutil.inherits(Transform, Duplex);\n\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n\n  var cb = ts.writecb;\n\n  if (!cb) {\n    return this.emit('error', new Error('write callback called multiple times'));\n  }\n\n  ts.writechunk = null;\n  ts.writecb = null;\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    this.push(data);\n\n  cb(er);\n\n  var rs = this._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\n\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n\n  Duplex.call(this, options);\n\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  };\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  // When the writable side finishes, then flush out anything remaining.\n  this.on('prefinish', prefinish);\n}\n\nfunction prefinish() {\n  var _this = this;\n\n  if (typeof this._flush === 'function') {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  throw new Error('_transform() is not implemented');\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nTransform.prototype._destroy = function (err, cb) {\n  var _this2 = this;\n\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n    _this2.emit('close');\n  });\n};\n\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    stream.push(data);\n\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  if (stream._writableState.length) throw new Error('Calling transform done when ws.length != 0');\n\n  if (stream._transformState.transforming) throw new Error('Calling transform done when still transforming');\n\n  return stream.push(null);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/readable-stream/lib/_stream_transform.js\n");

/***/ }),

/***/ "./node_modules/readable-stream/lib/_stream_writable.js":
/*!**************************************************************!*\
  !*** ./node_modules/readable-stream/lib/_stream_writable.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(process, setImmediate, global) {// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n\n\n/*<replacement>*/\n\nvar pna = __webpack_require__(/*! process-nextick-args */ \"./node_modules/process-nextick-args/index.js\");\n/*</replacement>*/\n\nmodule.exports = Writable;\n\n/* <replacement> */\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\nvar asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : pna.nextTick;\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n/*<replacement>*/\nvar util = __webpack_require__(/*! core-util-is */ \"./node_modules/core-util-is/lib/util.js\");\nutil.inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\");\n/*</replacement>*/\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: __webpack_require__(/*! util-deprecate */ \"./node_modules/util-deprecate/browser.js\")\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = __webpack_require__(/*! ./internal/streams/stream */ \"./node_modules/readable-stream/lib/internal/streams/stream-browser.js\");\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"./node_modules/safe-buffer/index.js\").Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\nvar destroyImpl = __webpack_require__(/*! ./internal/streams/destroy */ \"./node_modules/readable-stream/lib/internal/streams/destroy.js\");\n\nutil.inherits(Writable, Stream);\n\nfunction nop() {}\n\nfunction WritableState(options, stream) {\n  Duplex = Duplex || __webpack_require__(/*! ./_stream_duplex */ \"./node_modules/readable-stream/lib/_stream_duplex.js\");\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  var writableHwm = options.writableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (writableHwm || writableHwm === 0)) this.highWaterMark = writableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // if _final has been called\n  this.finalCalled = false;\n\n  // drain event flag.\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function () {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})();\n\n// Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\nvar realHasInstance;\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function (object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function (object) {\n    return object instanceof this;\n  };\n}\n\nfunction Writable(options) {\n  Duplex = Duplex || __webpack_require__(/*! ./_stream_duplex */ \"./node_modules/readable-stream/lib/_stream_duplex.js\");\n\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n  if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {\n    return new Writable(options);\n  }\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n\n    if (typeof options.writev === 'function') this._writev = options.writev;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  this.emit('error', new Error('Cannot pipe, not readable'));\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  pna.nextTick(cb, er);\n}\n\n// Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n  var er = false;\n\n  if (chunk === null) {\n    er = new TypeError('May not write null values to stream');\n  } else if (typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  if (er) {\n    stream.emit('error', er);\n    pna.nextTick(cb, er);\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n\n  if (typeof cb !== 'function') cb = nop;\n\n  if (state.ended) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  var state = this._writableState;\n\n  state.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n\n    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\n\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    pna.nextTick(cb, er);\n    // this can emit finish, and it will always happen\n    // after error\n    pna.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n    // this can emit finish, but finish must\n    // always follow error\n    finishMaybe(stream, state);\n  }\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state);\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      /*<replacement>*/\n      asyncWrite(afterWrite, stream, state, finished, cb);\n      /*</replacement>*/\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n\n    var count = 0;\n    var allBuffers = true;\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n    buffer.allBuffers = allBuffers;\n\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new Error('_write() is not implemented'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending && !state.finished) endWritable(this, state, cb);\n};\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n    if (err) {\n      stream.emit('error', err);\n    }\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function') {\n      state.pendingcb++;\n      state.finalCalled = true;\n      pna.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    prefinish(stream, state);\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n    }\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) pna.nextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\n\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  }\n  if (state.corkedRequestsFree) {\n    state.corkedRequestsFree.next = corkReq;\n  } else {\n    state.corkedRequestsFree = corkReq;\n  }\n}\n\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  get: function () {\n    if (this._writableState === undefined) {\n      return false;\n    }\n    return this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._writableState.destroyed = value;\n  }\n});\n\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\nWritable.prototype._destroy = function (err, cb) {\n  this.end();\n  cb(err);\n};\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../process/browser.js */ \"./node_modules/process/browser.js\"), __webpack_require__(/*! ./../../node-libs-browser/node_modules/timers-browserify/main.js */ \"./node_modules/node-libs-browser/node_modules/timers-browserify/main.js\").setImmediate, __webpack_require__(/*! ./../../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/readable-stream/lib/_stream_writable.js\n");

/***/ }),

/***/ "./node_modules/readable-stream/lib/internal/streams/BufferList.js":
/*!*************************************************************************!*\
  !*** ./node_modules/readable-stream/lib/internal/streams/BufferList.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"./node_modules/safe-buffer/index.js\").Buffer;\nvar util = __webpack_require__(/*! util */ 1);\n\nfunction copyBuffer(src, target, offset) {\n  src.copy(target, offset);\n}\n\nmodule.exports = function () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  BufferList.prototype.push = function push(v) {\n    var entry = { data: v, next: null };\n    if (this.length > 0) this.tail.next = entry;else this.head = entry;\n    this.tail = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.unshift = function unshift(v) {\n    var entry = { data: v, next: this.head };\n    if (this.length === 0) this.tail = entry;\n    this.head = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.shift = function shift() {\n    if (this.length === 0) return;\n    var ret = this.head.data;\n    if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n    --this.length;\n    return ret;\n  };\n\n  BufferList.prototype.clear = function clear() {\n    this.head = this.tail = null;\n    this.length = 0;\n  };\n\n  BufferList.prototype.join = function join(s) {\n    if (this.length === 0) return '';\n    var p = this.head;\n    var ret = '' + p.data;\n    while (p = p.next) {\n      ret += s + p.data;\n    }return ret;\n  };\n\n  BufferList.prototype.concat = function concat(n) {\n    if (this.length === 0) return Buffer.alloc(0);\n    if (this.length === 1) return this.head.data;\n    var ret = Buffer.allocUnsafe(n >>> 0);\n    var p = this.head;\n    var i = 0;\n    while (p) {\n      copyBuffer(p.data, ret, i);\n      i += p.data.length;\n      p = p.next;\n    }\n    return ret;\n  };\n\n  return BufferList;\n}();\n\nif (util && util.inspect && util.inspect.custom) {\n  module.exports.prototype[util.inspect.custom] = function () {\n    var obj = util.inspect({ length: this.length });\n    return this.constructor.name + ' ' + obj;\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhZGFibGUtc3RyZWFtL2xpYi9pbnRlcm5hbC9zdHJlYW1zL0J1ZmZlckxpc3QuanM/NWUxYSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixpREFBaUQsMENBQTBDLDBEQUEwRCxFQUFFOztBQUV2SixhQUFhLG1CQUFPLENBQUMsd0RBQWE7QUFDbEMsV0FBVyxtQkFBTyxDQUFDLGFBQU07O0FBRXpCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxpQkFBaUI7QUFDakIsZ0RBQWdEO0FBQ2hEO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSx3REFBd0Q7QUFDeEQ7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBLDRCQUE0QixzQkFBc0I7QUFDbEQ7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL3JlYWRhYmxlLXN0cmVhbS9saWIvaW50ZXJuYWwvc3RyZWFtcy9CdWZmZXJMaXN0LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG52YXIgQnVmZmVyID0gcmVxdWlyZSgnc2FmZS1idWZmZXInKS5CdWZmZXI7XG52YXIgdXRpbCA9IHJlcXVpcmUoJ3V0aWwnKTtcblxuZnVuY3Rpb24gY29weUJ1ZmZlcihzcmMsIHRhcmdldCwgb2Zmc2V0KSB7XG4gIHNyYy5jb3B5KHRhcmdldCwgb2Zmc2V0KTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoKSB7XG4gIGZ1bmN0aW9uIEJ1ZmZlckxpc3QoKSB7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIEJ1ZmZlckxpc3QpO1xuXG4gICAgdGhpcy5oZWFkID0gbnVsbDtcbiAgICB0aGlzLnRhaWwgPSBudWxsO1xuICAgIHRoaXMubGVuZ3RoID0gMDtcbiAgfVxuXG4gIEJ1ZmZlckxpc3QucHJvdG90eXBlLnB1c2ggPSBmdW5jdGlvbiBwdXNoKHYpIHtcbiAgICB2YXIgZW50cnkgPSB7IGRhdGE6IHYsIG5leHQ6IG51bGwgfTtcbiAgICBpZiAodGhpcy5sZW5ndGggPiAwKSB0aGlzLnRhaWwubmV4dCA9IGVudHJ5O2Vsc2UgdGhpcy5oZWFkID0gZW50cnk7XG4gICAgdGhpcy50YWlsID0gZW50cnk7XG4gICAgKyt0aGlzLmxlbmd0aDtcbiAgfTtcblxuICBCdWZmZXJMaXN0LnByb3RvdHlwZS51bnNoaWZ0ID0gZnVuY3Rpb24gdW5zaGlmdCh2KSB7XG4gICAgdmFyIGVudHJ5ID0geyBkYXRhOiB2LCBuZXh0OiB0aGlzLmhlYWQgfTtcbiAgICBpZiAodGhpcy5sZW5ndGggPT09IDApIHRoaXMudGFpbCA9IGVudHJ5O1xuICAgIHRoaXMuaGVhZCA9IGVudHJ5O1xuICAgICsrdGhpcy5sZW5ndGg7XG4gIH07XG5cbiAgQnVmZmVyTGlzdC5wcm90b3R5cGUuc2hpZnQgPSBmdW5jdGlvbiBzaGlmdCgpIHtcbiAgICBpZiAodGhpcy5sZW5ndGggPT09IDApIHJldHVybjtcbiAgICB2YXIgcmV0ID0gdGhpcy5oZWFkLmRhdGE7XG4gICAgaWYgKHRoaXMubGVuZ3RoID09PSAxKSB0aGlzLmhlYWQgPSB0aGlzLnRhaWwgPSBudWxsO2Vsc2UgdGhpcy5oZWFkID0gdGhpcy5oZWFkLm5leHQ7XG4gICAgLS10aGlzLmxlbmd0aDtcbiAgICByZXR1cm4gcmV0O1xuICB9O1xuXG4gIEJ1ZmZlckxpc3QucHJvdG90eXBlLmNsZWFyID0gZnVuY3Rpb24gY2xlYXIoKSB7XG4gICAgdGhpcy5oZWFkID0gdGhpcy50YWlsID0gbnVsbDtcbiAgICB0aGlzLmxlbmd0aCA9IDA7XG4gIH07XG5cbiAgQnVmZmVyTGlzdC5wcm90b3R5cGUuam9pbiA9IGZ1bmN0aW9uIGpvaW4ocykge1xuICAgIGlmICh0aGlzLmxlbmd0aCA9PT0gMCkgcmV0dXJuICcnO1xuICAgIHZhciBwID0gdGhpcy5oZWFkO1xuICAgIHZhciByZXQgPSAnJyArIHAuZGF0YTtcbiAgICB3aGlsZSAocCA9IHAubmV4dCkge1xuICAgICAgcmV0ICs9IHMgKyBwLmRhdGE7XG4gICAgfXJldHVybiByZXQ7XG4gIH07XG5cbiAgQnVmZmVyTGlzdC5wcm90b3R5cGUuY29uY2F0ID0gZnVuY3Rpb24gY29uY2F0KG4pIHtcbiAgICBpZiAodGhpcy5sZW5ndGggPT09IDApIHJldHVybiBCdWZmZXIuYWxsb2MoMCk7XG4gICAgaWYgKHRoaXMubGVuZ3RoID09PSAxKSByZXR1cm4gdGhpcy5oZWFkLmRhdGE7XG4gICAgdmFyIHJldCA9IEJ1ZmZlci5hbGxvY1Vuc2FmZShuID4+PiAwKTtcbiAgICB2YXIgcCA9IHRoaXMuaGVhZDtcbiAgICB2YXIgaSA9IDA7XG4gICAgd2hpbGUgKHApIHtcbiAgICAgIGNvcHlCdWZmZXIocC5kYXRhLCByZXQsIGkpO1xuICAgICAgaSArPSBwLmRhdGEubGVuZ3RoO1xuICAgICAgcCA9IHAubmV4dDtcbiAgICB9XG4gICAgcmV0dXJuIHJldDtcbiAgfTtcblxuICByZXR1cm4gQnVmZmVyTGlzdDtcbn0oKTtcblxuaWYgKHV0aWwgJiYgdXRpbC5pbnNwZWN0ICYmIHV0aWwuaW5zcGVjdC5jdXN0b20pIHtcbiAgbW9kdWxlLmV4cG9ydHMucHJvdG90eXBlW3V0aWwuaW5zcGVjdC5jdXN0b21dID0gZnVuY3Rpb24gKCkge1xuICAgIHZhciBvYmogPSB1dGlsLmluc3BlY3QoeyBsZW5ndGg6IHRoaXMubGVuZ3RoIH0pO1xuICAgIHJldHVybiB0aGlzLmNvbnN0cnVjdG9yLm5hbWUgKyAnICcgKyBvYmo7XG4gIH07XG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/readable-stream/lib/internal/streams/BufferList.js\n");

/***/ }),

/***/ "./node_modules/readable-stream/lib/internal/streams/destroy.js":
/*!**********************************************************************!*\
  !*** ./node_modules/readable-stream/lib/internal/streams/destroy.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/*<replacement>*/\n\nvar pna = __webpack_require__(/*! process-nextick-args */ \"./node_modules/process-nextick-args/index.js\");\n/*</replacement>*/\n\n// undocumented cb() API, needed for core, not for public API\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err && (!this._writableState || !this._writableState.errorEmitted)) {\n      pna.nextTick(emitErrorNT, this, err);\n    }\n    return this;\n  }\n\n  // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  }\n\n  // if this is a duplex stream mark the writable part as destroyed as well\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      pna.nextTick(emitErrorNT, _this, err);\n      if (_this._writableState) {\n        _this._writableState.errorEmitted = true;\n      }\n    } else if (cb) {\n      cb(err);\n    }\n  });\n\n  return this;\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhZGFibGUtc3RyZWFtL2xpYi9pbnRlcm5hbC9zdHJlYW1zL2Rlc3Ryb3kuanM/NDY4MSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjs7QUFFQSxVQUFVLG1CQUFPLENBQUMsMEVBQXNCO0FBQ3hDOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9yZWFkYWJsZS1zdHJlYW0vbGliL2ludGVybmFsL3N0cmVhbXMvZGVzdHJveS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuLyo8cmVwbGFjZW1lbnQ+Ki9cblxudmFyIHBuYSA9IHJlcXVpcmUoJ3Byb2Nlc3MtbmV4dGljay1hcmdzJyk7XG4vKjwvcmVwbGFjZW1lbnQ+Ki9cblxuLy8gdW5kb2N1bWVudGVkIGNiKCkgQVBJLCBuZWVkZWQgZm9yIGNvcmUsIG5vdCBmb3IgcHVibGljIEFQSVxuZnVuY3Rpb24gZGVzdHJveShlcnIsIGNiKSB7XG4gIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgdmFyIHJlYWRhYmxlRGVzdHJveWVkID0gdGhpcy5fcmVhZGFibGVTdGF0ZSAmJiB0aGlzLl9yZWFkYWJsZVN0YXRlLmRlc3Ryb3llZDtcbiAgdmFyIHdyaXRhYmxlRGVzdHJveWVkID0gdGhpcy5fd3JpdGFibGVTdGF0ZSAmJiB0aGlzLl93cml0YWJsZVN0YXRlLmRlc3Ryb3llZDtcblxuICBpZiAocmVhZGFibGVEZXN0cm95ZWQgfHwgd3JpdGFibGVEZXN0cm95ZWQpIHtcbiAgICBpZiAoY2IpIHtcbiAgICAgIGNiKGVycik7XG4gICAgfSBlbHNlIGlmIChlcnIgJiYgKCF0aGlzLl93cml0YWJsZVN0YXRlIHx8ICF0aGlzLl93cml0YWJsZVN0YXRlLmVycm9yRW1pdHRlZCkpIHtcbiAgICAgIHBuYS5uZXh0VGljayhlbWl0RXJyb3JOVCwgdGhpcywgZXJyKTtcbiAgICB9XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICAvLyB3ZSBzZXQgZGVzdHJveWVkIHRvIHRydWUgYmVmb3JlIGZpcmluZyBlcnJvciBjYWxsYmFja3MgaW4gb3JkZXJcbiAgLy8gdG8gbWFrZSBpdCByZS1lbnRyYW5jZSBzYWZlIGluIGNhc2UgZGVzdHJveSgpIGlzIGNhbGxlZCB3aXRoaW4gY2FsbGJhY2tzXG5cbiAgaWYgKHRoaXMuX3JlYWRhYmxlU3RhdGUpIHtcbiAgICB0aGlzLl9yZWFkYWJsZVN0YXRlLmRlc3Ryb3llZCA9IHRydWU7XG4gIH1cblxuICAvLyBpZiB0aGlzIGlzIGEgZHVwbGV4IHN0cmVhbSBtYXJrIHRoZSB3cml0YWJsZSBwYXJ0IGFzIGRlc3Ryb3llZCBhcyB3ZWxsXG4gIGlmICh0aGlzLl93cml0YWJsZVN0YXRlKSB7XG4gICAgdGhpcy5fd3JpdGFibGVTdGF0ZS5kZXN0cm95ZWQgPSB0cnVlO1xuICB9XG5cbiAgdGhpcy5fZGVzdHJveShlcnIgfHwgbnVsbCwgZnVuY3Rpb24gKGVycikge1xuICAgIGlmICghY2IgJiYgZXJyKSB7XG4gICAgICBwbmEubmV4dFRpY2soZW1pdEVycm9yTlQsIF90aGlzLCBlcnIpO1xuICAgICAgaWYgKF90aGlzLl93cml0YWJsZVN0YXRlKSB7XG4gICAgICAgIF90aGlzLl93cml0YWJsZVN0YXRlLmVycm9yRW1pdHRlZCA9IHRydWU7XG4gICAgICB9XG4gICAgfSBlbHNlIGlmIChjYikge1xuICAgICAgY2IoZXJyKTtcbiAgICB9XG4gIH0pO1xuXG4gIHJldHVybiB0aGlzO1xufVxuXG5mdW5jdGlvbiB1bmRlc3Ryb3koKSB7XG4gIGlmICh0aGlzLl9yZWFkYWJsZVN0YXRlKSB7XG4gICAgdGhpcy5fcmVhZGFibGVTdGF0ZS5kZXN0cm95ZWQgPSBmYWxzZTtcbiAgICB0aGlzLl9yZWFkYWJsZVN0YXRlLnJlYWRpbmcgPSBmYWxzZTtcbiAgICB0aGlzLl9yZWFkYWJsZVN0YXRlLmVuZGVkID0gZmFsc2U7XG4gICAgdGhpcy5fcmVhZGFibGVTdGF0ZS5lbmRFbWl0dGVkID0gZmFsc2U7XG4gIH1cblxuICBpZiAodGhpcy5fd3JpdGFibGVTdGF0ZSkge1xuICAgIHRoaXMuX3dyaXRhYmxlU3RhdGUuZGVzdHJveWVkID0gZmFsc2U7XG4gICAgdGhpcy5fd3JpdGFibGVTdGF0ZS5lbmRlZCA9IGZhbHNlO1xuICAgIHRoaXMuX3dyaXRhYmxlU3RhdGUuZW5kaW5nID0gZmFsc2U7XG4gICAgdGhpcy5fd3JpdGFibGVTdGF0ZS5maW5pc2hlZCA9IGZhbHNlO1xuICAgIHRoaXMuX3dyaXRhYmxlU3RhdGUuZXJyb3JFbWl0dGVkID0gZmFsc2U7XG4gIH1cbn1cblxuZnVuY3Rpb24gZW1pdEVycm9yTlQoc2VsZiwgZXJyKSB7XG4gIHNlbGYuZW1pdCgnZXJyb3InLCBlcnIpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgZGVzdHJveTogZGVzdHJveSxcbiAgdW5kZXN0cm95OiB1bmRlc3Ryb3lcbn07Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/readable-stream/lib/internal/streams/destroy.js\n");

/***/ }),

/***/ "./node_modules/readable-stream/lib/internal/streams/stream-browser.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/readable-stream/lib/internal/streams/stream-browser.js ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! events */ \"./node_modules/node-libs-browser/node_modules/events/events.js\").EventEmitter;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhZGFibGUtc3RyZWFtL2xpYi9pbnRlcm5hbC9zdHJlYW1zL3N0cmVhbS1icm93c2VyLmpzPzQyOWIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsaUJBQWlCLG1CQUFPLENBQUMsOEVBQVEiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhZGFibGUtc3RyZWFtL2xpYi9pbnRlcm5hbC9zdHJlYW1zL3N0cmVhbS1icm93c2VyLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCdldmVudHMnKS5FdmVudEVtaXR0ZXI7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/readable-stream/lib/internal/streams/stream-browser.js\n");

/***/ }),

/***/ "./node_modules/readable-stream/passthrough.js":
/*!*****************************************************!*\
  !*** ./node_modules/readable-stream/passthrough.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! ./readable */ \"./node_modules/readable-stream/readable-browser.js\").PassThrough\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhZGFibGUtc3RyZWFtL3Bhc3N0aHJvdWdoLmpzP2MyYWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsaUJBQWlCLG1CQUFPLENBQUMsc0VBQVkiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhZGFibGUtc3RyZWFtL3Bhc3N0aHJvdWdoLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL3JlYWRhYmxlJykuUGFzc1Rocm91Z2hcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/readable-stream/passthrough.js\n");

/***/ }),

/***/ "./node_modules/readable-stream/readable-browser.js":
/*!**********************************************************!*\
  !*** ./node_modules/readable-stream/readable-browser.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("exports = module.exports = __webpack_require__(/*! ./lib/_stream_readable.js */ \"./node_modules/readable-stream/lib/_stream_readable.js\");\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = __webpack_require__(/*! ./lib/_stream_writable.js */ \"./node_modules/readable-stream/lib/_stream_writable.js\");\nexports.Duplex = __webpack_require__(/*! ./lib/_stream_duplex.js */ \"./node_modules/readable-stream/lib/_stream_duplex.js\");\nexports.Transform = __webpack_require__(/*! ./lib/_stream_transform.js */ \"./node_modules/readable-stream/lib/_stream_transform.js\");\nexports.PassThrough = __webpack_require__(/*! ./lib/_stream_passthrough.js */ \"./node_modules/readable-stream/lib/_stream_passthrough.js\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhZGFibGUtc3RyZWFtL3JlYWRhYmxlLWJyb3dzZXIuanM/ZTM3MiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSwyQkFBMkIsbUJBQU8sQ0FBQyx5RkFBMkI7QUFDOUQ7QUFDQTtBQUNBLG1CQUFtQixtQkFBTyxDQUFDLHlGQUEyQjtBQUN0RCxpQkFBaUIsbUJBQU8sQ0FBQyxxRkFBeUI7QUFDbEQsb0JBQW9CLG1CQUFPLENBQUMsMkZBQTRCO0FBQ3hELHNCQUFzQixtQkFBTyxDQUFDLCtGQUE4QiIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9yZWFkYWJsZS1zdHJlYW0vcmVhZGFibGUtYnJvd3Nlci5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vbGliL19zdHJlYW1fcmVhZGFibGUuanMnKTtcbmV4cG9ydHMuU3RyZWFtID0gZXhwb3J0cztcbmV4cG9ydHMuUmVhZGFibGUgPSBleHBvcnRzO1xuZXhwb3J0cy5Xcml0YWJsZSA9IHJlcXVpcmUoJy4vbGliL19zdHJlYW1fd3JpdGFibGUuanMnKTtcbmV4cG9ydHMuRHVwbGV4ID0gcmVxdWlyZSgnLi9saWIvX3N0cmVhbV9kdXBsZXguanMnKTtcbmV4cG9ydHMuVHJhbnNmb3JtID0gcmVxdWlyZSgnLi9saWIvX3N0cmVhbV90cmFuc2Zvcm0uanMnKTtcbmV4cG9ydHMuUGFzc1Rocm91Z2ggPSByZXF1aXJlKCcuL2xpYi9fc3RyZWFtX3Bhc3N0aHJvdWdoLmpzJyk7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/readable-stream/readable-browser.js\n");

/***/ }),

/***/ "./node_modules/readable-stream/transform.js":
/*!***************************************************!*\
  !*** ./node_modules/readable-stream/transform.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! ./readable */ \"./node_modules/readable-stream/readable-browser.js\").Transform\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhZGFibGUtc3RyZWFtL3RyYW5zZm9ybS5qcz9kMTdiIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGlCQUFpQixtQkFBTyxDQUFDLHNFQUFZIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL3JlYWRhYmxlLXN0cmVhbS90cmFuc2Zvcm0uanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vcmVhZGFibGUnKS5UcmFuc2Zvcm1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/readable-stream/transform.js\n");

/***/ }),

/***/ "./node_modules/readable-stream/writable-browser.js":
/*!**********************************************************!*\
  !*** ./node_modules/readable-stream/writable-browser.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! ./lib/_stream_writable.js */ \"./node_modules/readable-stream/lib/_stream_writable.js\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhZGFibGUtc3RyZWFtL3dyaXRhYmxlLWJyb3dzZXIuanM/MmM2MyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxpQkFBaUIsbUJBQU8sQ0FBQyx5RkFBMkIiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhZGFibGUtc3RyZWFtL3dyaXRhYmxlLWJyb3dzZXIuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vbGliL19zdHJlYW1fd3JpdGFibGUuanMnKTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/readable-stream/writable-browser.js\n");

/***/ }),

/***/ "./node_modules/reality-space/lib/src/common/reality/ClusterClient.js":
/*!****************************************************************************!*\
  !*** ./node_modules/reality-space/lib/src/common/reality/ClusterClient.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Configuration_1 = __webpack_require__(/*! ./Configuration */ \"./node_modules/reality-space/lib/src/common/reality/Configuration.js\");\nconst RealityClient_1 = __webpack_require__(/*! ./RealityClient */ \"./node_modules/reality-space/lib/src/common/reality/RealityClient.js\");\nconst Encode_1 = __webpack_require__(/*! ./Encode */ \"./node_modules/reality-space/lib/src/common/reality/Encode.js\");\nconst StorageClient_1 = __webpack_require__(/*! ./StorageClient */ \"./node_modules/reality-space/lib/src/common/reality/StorageClient.js\");\nclass ClusterClient {\n    constructor(clusterConfigurationUrl, spaceName, avatarId, x, y, z, rx, ry, rz, rw, avatarDescription, idToken) {\n        this.primaryRegion = undefined;\n        this.clients = new Map();\n        this.homeStorageClient = undefined;\n        this.newWebSocket = (url, protocol) => { return new WebSocket(url, protocol); };\n        this.onConnect = (region) => { };\n        this.onConnectError = (region, error) => { };\n        this.onDisconnect = (region) => { };\n        this.onReceive = (region, type, message) => { };\n        this.onStoredRootEntityReceived = (region, sid, entityXml) => { };\n        this.onStoredChildEntityReceived = (region, parentSid, sid, entityXml) => { };\n        this.onStoredEntityRemoved = (region, sid) => { };\n        this.onLoaded = (region) => { };\n        this.clusterConfigurationUrl = clusterConfigurationUrl;\n        this.spaceName = spaceName;\n        this.idToken = idToken;\n        this.avatarId = avatarId;\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        this.rx = rx;\n        this.ry = ry;\n        this.rz = rz;\n        this.rw = rw;\n        this.avatarDescription = avatarDescription;\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Close outdated clients.\n            this.clients.forEach(client => {\n                client.close();\n            });\n            this.clients.clear();\n            this.clusterConfiguration = yield Configuration_1.getClusterConfiguration(this.clusterConfigurationUrl);\n            console.log(\"cluster client - connect: \" + this.clusterConfigurationUrl);\n            const defaultSpace = \"default\";\n            const defaultRegion = this.getRegion(0, 0, 0);\n            const defaultRegionConfiguration = this.getRegionConfiguration(defaultRegion);\n            this.homeStorageClient = new StorageClient_1.StorageClient(defaultSpace, defaultRegion, defaultRegionConfiguration.storageUrl, defaultRegionConfiguration.cdnUrl, this.idToken);\n            yield this.refresh(this.x, this.y, this.z, this.rx, this.ry, this.rz, this.rw);\n        });\n    }\n    close() {\n        console.log(\"cluster client - closing.\");\n        this.clients.forEach(client => {\n            this.closeClient(client);\n        });\n        this.clients.clear();\n    }\n    getHomeStorage() {\n        if (this.homeStorageClient) {\n            return this.homeStorageClient;\n        }\n        throw new Error(\"Home storage client not instantiated. Connect() not invoked or error occurred.\");\n    }\n    getRegionStorageByCoordinate(x, y, z) {\n        const region = this.getRegion(x, y, z);\n        if (region) {\n            return this.getRegionStorage(region);\n        }\n        else {\n            return undefined;\n        }\n    }\n    getRegionStorage(region) {\n        if (this.clients.has(region)) {\n            return this.clients.get(region).storageClient;\n        }\n        else {\n            return undefined;\n        }\n    }\n    refresh(x, y, z, rx, ry, rz, rw) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.clusterConfiguration) {\n                return;\n            }\n            this.x = x;\n            this.y = y;\n            this.z = z;\n            this.rx = rx;\n            this.ry = ry;\n            this.rz = rz;\n            this.rw = rw;\n            const regions = this.getRegions(x, y, z);\n            if (regions.length === 0) {\n                this.primaryRegion = undefined;\n            }\n            else {\n                if (this.primaryRegion !== regions[0].region) {\n                    if (this.primaryRegion && this.clients.has(this.primaryRegion)) {\n                        console.log(\"cluster client - switching primary region...\");\n                        //this.closeClient(this.clients.get(this.primaryRegion)!!)\n                        yield this.clients.get(this.primaryRegion).remove(this.avatarId);\n                        yield this.clients.get(this.primaryRegion).add(this.avatarId, x, y, z, rx, ry, rz, rw, this.avatarDescription, Encode_1.Encode.PROBE);\n                        console.log(\"cluster client - switched old primary region avatar to probe: \" + this.primaryRegion);\n                    }\n                    if (this.clients.has(regions[0].region)) {\n                        //this.closeClient(this.clients.get(regions[0].region)!!)\n                        yield this.clients.get(regions[0].region).remove(this.avatarId);\n                        yield this.clients.get(regions[0].region).add(this.avatarId, x, y, z, rx, ry, rz, rw, this.avatarDescription, Encode_1.Encode.AVATAR);\n                        console.log(\"cluster client - switched new primary region avatar from probe to avatar: \" + regions[0].region);\n                    }\n                    this.primaryRegion = regions[0].region;\n                    console.log(\"cluster client - new primary region set to: \" + regions[0].region);\n                }\n            }\n            for (let region of regions) {\n                if (!this.clients.has(region.region)) {\n                    let client = new RealityClient_1.RealityClient(this.spaceName, region.region, region.processorUrl, region.storageUrl, region.cdnUrl, this.idToken);\n                    this.clients.set(region.region, client);\n                    client.newWebSocket = this.newWebSocket;\n                    client.onClose = () => {\n                        console.log('cluster client - region disconnected: ' + client.region);\n                        if (this.primaryRegion === client.region) {\n                            this.onDisconnect(client.region);\n                        }\n                        if (this.clients.get(region.region) === client) {\n                            this.clients.delete(region.region);\n                        }\n                    };\n                    client.onReceive = (message) => {\n                        const parts = message.split(Encode_1.Encode.SEPARATOR);\n                        this.onReceive(client.region, parts[0], parts);\n                    };\n                    client.onStoredRootEntityReceived = (sid, entityXml) => {\n                        this.onStoredRootEntityReceived(client.region, sid, entityXml);\n                    };\n                    client.onStoredChildEntityReceived = (parentSid, sid, entityXml) => {\n                        this.onStoredChildEntityReceived(client.region, parentSid, sid, entityXml);\n                    };\n                    client.onStoredEntityRemoved = (sid) => {\n                        this.onStoredEntityRemoved(client.region, sid);\n                    };\n                    client.onLoaded = () => {\n                        this.onLoaded(client.region);\n                    };\n                    try {\n                        yield client.connect();\n                        this.onConnect(client.region);\n                    }\n                    catch (error) {\n                        console.warn(\"cluster client - error connecting to region.\", error);\n                        this.onConnectError(client.region, error);\n                        continue;\n                    }\n                    // Add clients for regions which are in range and not connected yet.\n                    if (client.region === this.primaryRegion) {\n                        // Add avatar\n                        console.log(\"cluster client - connected to primary region: \" + client.region);\n                        yield client.add(this.avatarId, x, y, z, rx, ry, rz, rw, this.avatarDescription, Encode_1.Encode.AVATAR);\n                    }\n                    else {\n                        // Add probe\n                        console.log(\"cluster client - connected to secondary region: \" + client.region);\n                        yield client.add(this.avatarId, x, y, z, rx, ry, rz, rw, \"\", Encode_1.Encode.PROBE);\n                    }\n                }\n                else {\n                    // Update avatars and probes for regions in range..\n                    if (this.clients.get(region.region).isConnected()) {\n                        yield this.clients.get(region.region).update(this.avatarId, x, y, z, rx, ry, rz, rw);\n                    }\n                }\n            }\n            // Close clients for regions which are not in range.\n            this.clients.forEach((client) => {\n                for (let region of regions) {\n                    if (region.region === client.region) {\n                        return;\n                    }\n                }\n                console.log(\"cluster client - closing client to region not in range: \" + client.region);\n                this.closeClient(client);\n            });\n        });\n    }\n    closeClient(client) {\n        this.clients.delete(client.region);\n        client.close();\n        this.onDisconnect(client.region);\n    }\n    getClient() {\n        if (!this.primaryRegion) {\n            return undefined;\n        }\n        return this.clients.get(this.primaryRegion);\n    }\n    isConnected() {\n        return this.primaryRegion !== undefined && this.clients.has(this.primaryRegion) && this.clients.get(this.primaryRegion).isConnected();\n    }\n    add(id, x, y, z, rx, ry, rz, rw, description) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.isConnected()) {\n                yield this.getClient().add(id, x, y, z, rx, ry, rz, rw, description, Encode_1.Encode.OBJECT);\n            }\n        });\n    }\n    update(id, x, y, z, rx, ry, rz, rw) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.isConnected()) {\n                yield this.getClient().update(id, x, y, z, rx, ry, rz, rw);\n            }\n        });\n    }\n    remove(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.isConnected()) {\n                yield this.getClient().remove(id);\n            }\n        });\n    }\n    describe(id, description) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.isConnected()) {\n                yield this.getClient().describe(id, description);\n            }\n        });\n    }\n    act(id, action, description) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.isConnected()) {\n                yield this.getClient().act(id, action, description);\n            }\n        });\n    }\n    storeEntities(region, entitiesXml) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.clients.has(region)) {\n                yield this.clients.get(region).storeEntities(entitiesXml);\n            }\n            else {\n                throw new Error(\"Region not connected: \" + region);\n            }\n        });\n    }\n    storeChildEntities(region, parentSid, entitiesXml) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.clients.has(region)) {\n                yield this.clients.get(region).storeChildEntities(parentSid, entitiesXml);\n            }\n            else {\n                throw new Error(\"Region not connected: \" + region);\n            }\n        });\n    }\n    removeStoredEntities(region, sids) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.clients.has(region)) {\n                yield this.clients.get(region).removeStoredEntities(sids);\n            }\n            else {\n                throw new Error(\"Region not connected: \" + region);\n            }\n        });\n    }\n    storeEntity(entityXml, x, y, z) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isConnected()) {\n                console.warn(\"No region found at \" + x + \",\" + y + \",\" + z);\n                throw new Error(\"Not connected.\");\n            }\n            const region = this.getRegion(x, y, z);\n            if (region) {\n                yield this.storeEntities(region, \"<a-entities>\" + entityXml + \"</a-entities>\");\n            }\n            else {\n                console.warn(\"No region found at \" + x + \",\" + y + \",\" + z);\n            }\n        });\n    }\n    removeStoredEntity(entitySid, x, y, z) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isConnected()) {\n                console.warn(\"No region found at \" + x + \",\" + y + \",\" + z);\n                throw new Error(\"Not connected.\");\n            }\n            const region = this.getRegion(x, y, z);\n            if (region) {\n                yield this.removeStoredEntities(region, [entitySid]);\n            }\n            else {\n                console.warn(\"No region found at \" + x + \",\" + y + \",\" + z);\n            }\n        });\n    }\n    /**\n     * Gets regions with closest region as first.\n     * @param x the connection avatar x coordinate\n     * @param y the connection avatar y coordinate\n     * @param z the connection avatar z coordinate\n     * @return array of RegionConfigurations with closest region as first.\n     */\n    getRegions(x, y, z) {\n        if (this.clusterConfiguration) {\n            const regions = Array();\n            let lastD2 = Number.MAX_SAFE_INTEGER;\n            for (let region of this.clusterConfiguration.regions) {\n                if (x >= region.x - region.edge / 2 && x <= region.x + region.edge / 2 &&\n                    y >= region.y - region.edge / 2 && y <= region.y + region.edge / 2 &&\n                    z >= region.z - region.edge / 2 && z <= region.z + region.edge / 2) {\n                    const d2 = Math.pow(x - region.x, 2) + Math.pow(y - region.y, 2) + Math.pow(z - region.z, 2);\n                    if (d2 < lastD2) {\n                        regions.unshift(region);\n                    }\n                    else {\n                        regions.push(region);\n                    }\n                    lastD2 = d2;\n                }\n            }\n            return regions;\n        }\n        else {\n            console.warn(\"no cluster configuration defined.\");\n            throw new Error(\"No cluster configuration defined.\");\n        }\n    }\n    /**\n     * Get closest region for coordinate.\n     * @param x\n     * @param y\n     * @param z\n     */\n    getRegion(x, y, z) {\n        if (this.clusterConfiguration) {\n            const regions = Array();\n            let lastD2 = Number.MAX_SAFE_INTEGER;\n            for (let region of this.clusterConfiguration.regions) {\n                if (x >= region.x - region.edge / 2 && x <= region.x + region.edge / 2 &&\n                    y >= region.y - region.edge / 2 && y <= region.y + region.edge / 2 &&\n                    z >= region.z - region.edge / 2 && z <= region.z + region.edge / 2) {\n                    const d2 = Math.pow(x - region.x, 2) + Math.pow(y - region.y, 2) + Math.pow(z - region.z, 2);\n                    if (d2 < lastD2) {\n                        regions.unshift(region.region);\n                    }\n                    else {\n                        regions.push(region.region);\n                    }\n                    lastD2 = d2;\n                }\n            }\n            if (regions.length > 0) {\n                return regions[0];\n            }\n            else {\n                return undefined;\n            }\n        }\n        else {\n            console.warn(\"no cluster configuration defined.\");\n            throw new Error(\"No cluster configuration defined.\");\n        }\n    }\n    getRegionConfiguration(region) {\n        if (this.clusterConfiguration) {\n            const clusterConfiguration = this.clusterConfiguration;\n            for (const regionConfiguration of clusterConfiguration.regions) {\n                if (regionConfiguration.region == region) {\n                    return regionConfiguration;\n                }\n            }\n            throw new Error(\"Region configuration not found: \" + region);\n        }\n        else {\n            console.warn(\"no cluster configuration defined.\");\n            throw new Error(\"No cluster configuration defined.\");\n        }\n    }\n}\nexports.ClusterClient = ClusterClient;\n//# sourceMappingURL=ClusterClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/reality-space/lib/src/common/reality/ClusterClient.js\n");

/***/ }),

/***/ "./node_modules/reality-space/lib/src/common/reality/Configuration.js":
/*!****************************************************************************!*\
  !*** ./node_modules/reality-space/lib/src/common/reality/Configuration.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__webpack_require__(/*! isomorphic-fetch */ \"./node_modules/isomorphic-fetch/fetch-npm-browserify.js\");\nclass ClusterConfiguration {\n    constructor() {\n        this.name = \"\";\n        this.description = \"\";\n        this.edge = 1000;\n        this.step = 100;\n        this.range = 200;\n        this.maxSpaces = 10;\n        this.processorUrl = \"\";\n        this.storageUrl = \"\";\n        this.cdnUrl = \"\";\n        this.spaces = new Array();\n        this.sanitizer = new SanitizerConfiguration();\n        this.regions = new Array();\n        this.idTokenIssuers = new Array();\n    }\n}\nexports.ClusterConfiguration = ClusterConfiguration;\nclass RegionConfiguration {\n    constructor() {\n        this.region = \"\";\n        this.processorUrl = \"\";\n        this.storageUrl = \"\";\n        this.cdnUrl = \"\";\n        this.spaces = new Array();\n        this.maxSpaces = 0;\n        this.edge = 0;\n        this.step = 0;\n        this.range = 0;\n        this.x = 0;\n        this.y = 0;\n        this.z = 0;\n    }\n}\nexports.RegionConfiguration = RegionConfiguration;\nclass SanitizerConfiguration {\n    constructor() {\n        this.allowedElements = \"\";\n        this.allowedAttributes = \"\";\n        this.allowedAttributeValueRegex = \"\";\n    }\n}\nexports.SanitizerConfiguration = SanitizerConfiguration;\nclass StorageConfiguration {\n    constructor(url, regions, spaces, maxSpaces) {\n        this.spaces = new Array();\n        this.url = url;\n        this.regions = regions;\n        this.spaces = spaces;\n        this.maxSpaces = maxSpaces;\n    }\n}\nexports.StorageConfiguration = StorageConfiguration;\nclass IdTokenIssuer {\n    constructor(issuer, publicKey) {\n        this.issuer = \"\";\n        this.publicKey = \"\";\n        this.issuer = issuer;\n        this.publicKey = publicKey;\n    }\n}\nexports.IdTokenIssuer = IdTokenIssuer;\nfunction getClusterConfiguration(url) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return (yield fetchConfiguration(url));\n    });\n}\nexports.getClusterConfiguration = getClusterConfiguration;\nfunction fetchConfiguration(url) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (!url || url.length == 0) {\n            return undefined;\n        }\n        const response = yield fetch(url);\n        if (response.status >= 400) {\n            throw new Error(\"Bad response from server\");\n        }\n        const responseText = yield (response.text());\n        const clusterConfiguration = JSON.parse(responseText);\n        clusterConfiguration.regions.forEach((processor) => {\n            processor.region = processor.region && processor.region.length > 0 ? processor.region : processor.x + \"-\" + processor.y + \"-\" + processor.z;\n            processor.processorUrl = processor.processorUrl && processor.processorUrl.length > 0 ? processor.processorUrl : clusterConfiguration.processorUrl;\n            processor.storageUrl = processor.storageUrl && processor.storageUrl.length > 0 ? processor.storageUrl : clusterConfiguration.storageUrl;\n            processor.cdnUrl = processor.cdnUrl && processor.cdnUrl.length > 0 ? processor.cdnUrl : clusterConfiguration.cdnUrl;\n            processor.spaces = processor.spaces && processor.spaces.length > 0 ? processor.spaces : clusterConfiguration.spaces;\n            processor.maxSpaces = processor.maxSpaces ? processor.maxSpaces : clusterConfiguration.maxSpaces;\n            processor.edge = processor.edge ? processor.edge : clusterConfiguration.edge;\n            processor.step = processor.step ? processor.step : clusterConfiguration.step;\n            processor.range = processor.range ? processor.range : clusterConfiguration.range;\n        });\n        return clusterConfiguration;\n    });\n}\nexports.fetchConfiguration = fetchConfiguration;\n/**\n * Gets regions processor is responsible for.\n * @param clusterConfiguration the cluster configuration.\n * @param processorUrl the processor URL\n */\nfunction getRegionConfigurations(clusterConfiguration, processorUrl) {\n    const normalizedServerUrl = processorUrl.trim().toLocaleLowerCase();\n    const processorConfigs = new Map();\n    for (let processor of clusterConfiguration.regions) {\n        const normalizedServerUrlCandidate = processor.processorUrl.trim().toLowerCase();\n        if (normalizedServerUrl == normalizedServerUrlCandidate) {\n            processorConfigs.set(processor.region, processor);\n        }\n    }\n    ;\n    return processorConfigs;\n}\nexports.getRegionConfigurations = getRegionConfigurations;\n/**\n * Gets storage configuration.\n * @param clusterConfiguration the cluster configuration\n * @param storageUrl the storage URL\n */\nfunction getStorageConfiguration(clusterConfiguration, storageUrl) {\n    const matchingServerNames = clusterConfiguration.regions.filter(s => {\n        const processorStorageUrl = s.storageUrl && s.storageUrl.length > 0 ? s.storageUrl : clusterConfiguration.storageUrl;\n        return processorStorageUrl.trim().toLocaleLowerCase() == storageUrl.trim().toLocaleLowerCase();\n    }).map(s => s.region);\n    return new StorageConfiguration(storageUrl, matchingServerNames, clusterConfiguration.spaces, clusterConfiguration.maxSpaces);\n}\nexports.getStorageConfiguration = getStorageConfiguration;\nfunction findItTokenIssuerConfiguration(clusterConfiguration, issuer) {\n    for (let idTokenIssuer of clusterConfiguration.idTokenIssuers) {\n        if (idTokenIssuer.issuer === issuer) {\n            return idTokenIssuer;\n        }\n    }\n    return null;\n}\nexports.findItTokenIssuerConfiguration = findItTokenIssuerConfiguration;\n//# sourceMappingURL=Configuration.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/reality-space/lib/src/common/reality/Configuration.js\n");

/***/ }),

/***/ "./node_modules/reality-space/lib/src/common/reality/Decode.js":
/*!*********************************************************************!*\
  !*** ./node_modules/reality-space/lib/src/common/reality/Decode.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Encode_1 = __webpack_require__(/*! ./Encode */ \"./node_modules/reality-space/lib/src/common/reality/Encode.js\");\nclass Decode {\n    static login(parts) {\n        return [\n            parts[1],\n            Decode.decodeString(parts[2]),\n            parts[3],\n            parts[4]\n        ];\n    }\n    static loginResponse(parts) {\n        return [\n            parts[1],\n            parts[2]\n        ];\n    }\n    static add(parts) {\n        return [\n            parts[1],\n            parseFloat(parts[2]),\n            parseFloat(parts[3]),\n            parseFloat(parts[4]),\n            parseFloat(parts[5]),\n            parseFloat(parts[6]),\n            parseFloat(parts[7]),\n            parseFloat(parts[8]),\n            parts[9],\n            parts[10]\n        ];\n    }\n    static added(parts) {\n        return [\n            parseInt(parts[1]),\n            parts[2],\n            parseFloat(parts[3]),\n            parseFloat(parts[4]),\n            parseFloat(parts[5]),\n            parseFloat(parts[6]),\n            parseFloat(parts[7]),\n            parseFloat(parts[8]),\n            parseFloat(parts[9]),\n            parts[10],\n            parts[11]\n        ];\n    }\n    static update(parts) {\n        return [\n            parts[1],\n            parseFloat(parts[2]),\n            parseFloat(parts[3]),\n            parseFloat(parts[4]),\n            parseFloat(parts[5]),\n            parseFloat(parts[6]),\n            parseFloat(parts[7]),\n            parseFloat(parts[8])\n        ];\n    }\n    static updated(parts) {\n        return [\n            parseInt(parts[1]),\n            parseFloat(parts[2]),\n            parseFloat(parts[3]),\n            parseFloat(parts[4]),\n            parseFloat(parts[5]),\n            parseFloat(parts[6]),\n            parseFloat(parts[7]),\n            parseFloat(parts[8])\n        ];\n    }\n    static remove(parts) {\n        return [\n            parts[1],\n        ];\n    }\n    static removed(parts) {\n        return [\n            parseInt(parts[1]),\n            parts[2]\n        ];\n    }\n    static describe(parts) {\n        return [\n            parts[1],\n            parts[2],\n        ];\n    }\n    static described(parts) {\n        return [\n            parseInt(parts[1]),\n            parts[2]\n        ];\n    }\n    static act(parts) {\n        return [\n            parts[1],\n            parts[2],\n            parts[3]\n        ];\n    }\n    static acted(parts) {\n        return [\n            parseInt(parts[1]),\n            parts[2],\n            parts[3]\n        ];\n    }\n    static notify(parts) {\n        return [\n            parts[1],\n            parts[2]\n        ];\n    }\n    static notified(parts) {\n        return [\n            parts[1],\n            parts[2]\n        ];\n    }\n    static decodeString(value) {\n        if (value.indexOf('\\\\') != -1) {\n            return value.replace(\"\\\\\\\\1\", \"\\\\\").replace(\"\\\\\\\\2\", Encode_1.Encode.SEPARATOR);\n        }\n        else {\n            return value;\n        }\n    }\n}\nexports.Decode = Decode;\n//# sourceMappingURL=Decode.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhbGl0eS1zcGFjZS9saWIvc3JjL2NvbW1vbi9yZWFsaXR5L0RlY29kZS5qcz9hYTNkIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQThDLGNBQWM7QUFDNUQsaUJBQWlCLG1CQUFPLENBQUMsK0VBQVU7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9yZWFsaXR5LXNwYWNlL2xpYi9zcmMvY29tbW9uL3JlYWxpdHkvRGVjb2RlLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCBFbmNvZGVfMSA9IHJlcXVpcmUoXCIuL0VuY29kZVwiKTtcbmNsYXNzIERlY29kZSB7XG4gICAgc3RhdGljIGxvZ2luKHBhcnRzKSB7XG4gICAgICAgIHJldHVybiBbXG4gICAgICAgICAgICBwYXJ0c1sxXSxcbiAgICAgICAgICAgIERlY29kZS5kZWNvZGVTdHJpbmcocGFydHNbMl0pLFxuICAgICAgICAgICAgcGFydHNbM10sXG4gICAgICAgICAgICBwYXJ0c1s0XVxuICAgICAgICBdO1xuICAgIH1cbiAgICBzdGF0aWMgbG9naW5SZXNwb25zZShwYXJ0cykge1xuICAgICAgICByZXR1cm4gW1xuICAgICAgICAgICAgcGFydHNbMV0sXG4gICAgICAgICAgICBwYXJ0c1syXVxuICAgICAgICBdO1xuICAgIH1cbiAgICBzdGF0aWMgYWRkKHBhcnRzKSB7XG4gICAgICAgIHJldHVybiBbXG4gICAgICAgICAgICBwYXJ0c1sxXSxcbiAgICAgICAgICAgIHBhcnNlRmxvYXQocGFydHNbMl0pLFxuICAgICAgICAgICAgcGFyc2VGbG9hdChwYXJ0c1szXSksXG4gICAgICAgICAgICBwYXJzZUZsb2F0KHBhcnRzWzRdKSxcbiAgICAgICAgICAgIHBhcnNlRmxvYXQocGFydHNbNV0pLFxuICAgICAgICAgICAgcGFyc2VGbG9hdChwYXJ0c1s2XSksXG4gICAgICAgICAgICBwYXJzZUZsb2F0KHBhcnRzWzddKSxcbiAgICAgICAgICAgIHBhcnNlRmxvYXQocGFydHNbOF0pLFxuICAgICAgICAgICAgcGFydHNbOV0sXG4gICAgICAgICAgICBwYXJ0c1sxMF1cbiAgICAgICAgXTtcbiAgICB9XG4gICAgc3RhdGljIGFkZGVkKHBhcnRzKSB7XG4gICAgICAgIHJldHVybiBbXG4gICAgICAgICAgICBwYXJzZUludChwYXJ0c1sxXSksXG4gICAgICAgICAgICBwYXJ0c1syXSxcbiAgICAgICAgICAgIHBhcnNlRmxvYXQocGFydHNbM10pLFxuICAgICAgICAgICAgcGFyc2VGbG9hdChwYXJ0c1s0XSksXG4gICAgICAgICAgICBwYXJzZUZsb2F0KHBhcnRzWzVdKSxcbiAgICAgICAgICAgIHBhcnNlRmxvYXQocGFydHNbNl0pLFxuICAgICAgICAgICAgcGFyc2VGbG9hdChwYXJ0c1s3XSksXG4gICAgICAgICAgICBwYXJzZUZsb2F0KHBhcnRzWzhdKSxcbiAgICAgICAgICAgIHBhcnNlRmxvYXQocGFydHNbOV0pLFxuICAgICAgICAgICAgcGFydHNbMTBdLFxuICAgICAgICAgICAgcGFydHNbMTFdXG4gICAgICAgIF07XG4gICAgfVxuICAgIHN0YXRpYyB1cGRhdGUocGFydHMpIHtcbiAgICAgICAgcmV0dXJuIFtcbiAgICAgICAgICAgIHBhcnRzWzFdLFxuICAgICAgICAgICAgcGFyc2VGbG9hdChwYXJ0c1syXSksXG4gICAgICAgICAgICBwYXJzZUZsb2F0KHBhcnRzWzNdKSxcbiAgICAgICAgICAgIHBhcnNlRmxvYXQocGFydHNbNF0pLFxuICAgICAgICAgICAgcGFyc2VGbG9hdChwYXJ0c1s1XSksXG4gICAgICAgICAgICBwYXJzZUZsb2F0KHBhcnRzWzZdKSxcbiAgICAgICAgICAgIHBhcnNlRmxvYXQocGFydHNbN10pLFxuICAgICAgICAgICAgcGFyc2VGbG9hdChwYXJ0c1s4XSlcbiAgICAgICAgXTtcbiAgICB9XG4gICAgc3RhdGljIHVwZGF0ZWQocGFydHMpIHtcbiAgICAgICAgcmV0dXJuIFtcbiAgICAgICAgICAgIHBhcnNlSW50KHBhcnRzWzFdKSxcbiAgICAgICAgICAgIHBhcnNlRmxvYXQocGFydHNbMl0pLFxuICAgICAgICAgICAgcGFyc2VGbG9hdChwYXJ0c1szXSksXG4gICAgICAgICAgICBwYXJzZUZsb2F0KHBhcnRzWzRdKSxcbiAgICAgICAgICAgIHBhcnNlRmxvYXQocGFydHNbNV0pLFxuICAgICAgICAgICAgcGFyc2VGbG9hdChwYXJ0c1s2XSksXG4gICAgICAgICAgICBwYXJzZUZsb2F0KHBhcnRzWzddKSxcbiAgICAgICAgICAgIHBhcnNlRmxvYXQocGFydHNbOF0pXG4gICAgICAgIF07XG4gICAgfVxuICAgIHN0YXRpYyByZW1vdmUocGFydHMpIHtcbiAgICAgICAgcmV0dXJuIFtcbiAgICAgICAgICAgIHBhcnRzWzFdLFxuICAgICAgICBdO1xuICAgIH1cbiAgICBzdGF0aWMgcmVtb3ZlZChwYXJ0cykge1xuICAgICAgICByZXR1cm4gW1xuICAgICAgICAgICAgcGFyc2VJbnQocGFydHNbMV0pLFxuICAgICAgICAgICAgcGFydHNbMl1cbiAgICAgICAgXTtcbiAgICB9XG4gICAgc3RhdGljIGRlc2NyaWJlKHBhcnRzKSB7XG4gICAgICAgIHJldHVybiBbXG4gICAgICAgICAgICBwYXJ0c1sxXSxcbiAgICAgICAgICAgIHBhcnRzWzJdLFxuICAgICAgICBdO1xuICAgIH1cbiAgICBzdGF0aWMgZGVzY3JpYmVkKHBhcnRzKSB7XG4gICAgICAgIHJldHVybiBbXG4gICAgICAgICAgICBwYXJzZUludChwYXJ0c1sxXSksXG4gICAgICAgICAgICBwYXJ0c1syXVxuICAgICAgICBdO1xuICAgIH1cbiAgICBzdGF0aWMgYWN0KHBhcnRzKSB7XG4gICAgICAgIHJldHVybiBbXG4gICAgICAgICAgICBwYXJ0c1sxXSxcbiAgICAgICAgICAgIHBhcnRzWzJdLFxuICAgICAgICAgICAgcGFydHNbM11cbiAgICAgICAgXTtcbiAgICB9XG4gICAgc3RhdGljIGFjdGVkKHBhcnRzKSB7XG4gICAgICAgIHJldHVybiBbXG4gICAgICAgICAgICBwYXJzZUludChwYXJ0c1sxXSksXG4gICAgICAgICAgICBwYXJ0c1syXSxcbiAgICAgICAgICAgIHBhcnRzWzNdXG4gICAgICAgIF07XG4gICAgfVxuICAgIHN0YXRpYyBub3RpZnkocGFydHMpIHtcbiAgICAgICAgcmV0dXJuIFtcbiAgICAgICAgICAgIHBhcnRzWzFdLFxuICAgICAgICAgICAgcGFydHNbMl1cbiAgICAgICAgXTtcbiAgICB9XG4gICAgc3RhdGljIG5vdGlmaWVkKHBhcnRzKSB7XG4gICAgICAgIHJldHVybiBbXG4gICAgICAgICAgICBwYXJ0c1sxXSxcbiAgICAgICAgICAgIHBhcnRzWzJdXG4gICAgICAgIF07XG4gICAgfVxuICAgIHN0YXRpYyBkZWNvZGVTdHJpbmcodmFsdWUpIHtcbiAgICAgICAgaWYgKHZhbHVlLmluZGV4T2YoJ1xcXFwnKSAhPSAtMSkge1xuICAgICAgICAgICAgcmV0dXJuIHZhbHVlLnJlcGxhY2UoXCJcXFxcXFxcXDFcIiwgXCJcXFxcXCIpLnJlcGxhY2UoXCJcXFxcXFxcXDJcIiwgRW5jb2RlXzEuRW5jb2RlLlNFUEFSQVRPUik7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgICAgIH1cbiAgICB9XG59XG5leHBvcnRzLkRlY29kZSA9IERlY29kZTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPURlY29kZS5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/reality-space/lib/src/common/reality/Decode.js\n");

/***/ }),

/***/ "./node_modules/reality-space/lib/src/common/reality/Encode.js":
/*!*********************************************************************!*\
  !*** ./node_modules/reality-space/lib/src/common/reality/Encode.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass Encode {\n    static login(loginRequestId, jwt, space, processor) {\n        return \"\" +\n            s(this.LOGIN) +\n            s(loginRequestId) +\n            se(jwt) +\n            s(space) +\n            s(processor);\n    }\n    static loginResponse(loginRequestId, error) {\n        return \"\" +\n            s(this.LOGIN_RESPONSE) +\n            s(loginRequestId) +\n            s(error);\n    }\n    static add(id, x, y, z, rx, ry, rz, rw, description, type) {\n        return \"\" +\n            s(this.ADD) +\n            s(id) +\n            d2(x) +\n            d2(y) +\n            d2(z) +\n            d2(rx) +\n            d2(ry) +\n            d2(rz) +\n            d2(rw) +\n            se(description) +\n            s(type);\n    }\n    static added(index, id, x, y, z, rx, ry, rz, rw, description, type) {\n        return \"\" +\n            s(this.ADDED) +\n            i(index) +\n            s(id) +\n            d2(x) +\n            d2(y) +\n            d2(z) +\n            d2(rx) +\n            d2(ry) +\n            d2(rz) +\n            d2(rw) +\n            se(description) +\n            s(type);\n    }\n    static update(id, x, y, z, rx, ry, rz, rw) {\n        return \"\" +\n            s(this.UPDATE) +\n            s(id) +\n            d2(x) +\n            d2(y) +\n            d2(z) +\n            d2(rx) +\n            d2(ry) +\n            d2(rz) +\n            d2(rw);\n    }\n    static updated(index, x, y, z, rx, ry, rz, rw) {\n        return \"\" +\n            s(this.UPDATED) +\n            i(index) +\n            d2(x) +\n            d2(y) +\n            d2(z) +\n            d2(rx) +\n            d2(ry) +\n            d2(rz) +\n            d2(rw);\n    }\n    static remove(id) {\n        return \"\" +\n            s(this.REMOVE) +\n            s(id);\n    }\n    static removed(index, id) {\n        return \"\" +\n            s(this.REMOVED) +\n            i(index) +\n            s(id);\n    }\n    static describe(id, description) {\n        return \"\" +\n            s(this.DESCRIBE) +\n            s(id) +\n            se(description);\n    }\n    static described(index, description) {\n        return \"\" +\n            s(this.DESCRIBED) +\n            i(index) +\n            se(description);\n    }\n    static act(id, action, description) {\n        return \"\" +\n            s(this.ACT) +\n            s(id) +\n            s(action) +\n            se(description);\n    }\n    static acted(index, action, description) {\n        return \"\" +\n            s(this.ACTED) +\n            i(index) +\n            s(action) +\n            se(description);\n    }\n    static notify(notification, description) {\n        return \"\" +\n            s(this.NOTIFY) +\n            s(notification) +\n            se(description);\n    }\n    static notified(notification, description) {\n        return \"\" +\n            s(this.NOTIFIED) +\n            s(notification) +\n            se(description);\n    }\n}\nEncode.SEPARATOR = '|';\nEncode.LOGIN = 'L';\nEncode.LOGIN_RESPONSE = 'l';\nEncode.ADD = 'A';\nEncode.ADDED = 'a';\nEncode.UPDATE = 'U';\nEncode.UPDATED = 'u';\nEncode.REMOVE = 'R';\nEncode.REMOVED = 'r';\nEncode.DESCRIBE = 'D';\nEncode.DESCRIBED = 'd';\nEncode.ACT = 'C';\nEncode.ACTED = 'c';\nEncode.NOTIFY = 'N';\nEncode.NOTIFIED = 'n';\nEncode.NOTIFICATION_STORED_ROOT_ENTITIES_CHANGED = 'srec';\nEncode.NOTIFICATION_STORED_CHILD_ENTITIES_CHANGED = 'scec';\nEncode.NOTIFICATION_STORED_ENTITIES_REMOVED = 'ser';\nEncode.OBJECT = 'o'; // Visible\nEncode.PROBE = 'p'; // Observing\nEncode.AVATAR = 'a'; // Visible and observing\nexports.Encode = Encode;\nfunction s(value) {\n    return value + Encode.SEPARATOR;\n}\nfunction se(value) {\n    return value.replace(\"\\\\\", \"\\\\\\\\1\").replace(Encode.SEPARATOR, \"\\\\\\\\2\") + Encode.SEPARATOR;\n}\nfunction i(value) {\n    return value + Encode.SEPARATOR;\n}\nfunction d1(value) {\n    return value.toFixed(1) + Encode.SEPARATOR;\n}\nfunction d2(value) {\n    return value.toFixed(2) + Encode.SEPARATOR;\n}\n//# sourceMappingURL=Encode.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhbGl0eS1zcGFjZS9saWIvc3JjL2NvbW1vbi9yZWFsaXR5L0VuY29kZS5qcz9kODc3Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQThDLGNBQWM7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0I7QUFDcEIsbUJBQW1CO0FBQ25CLG9CQUFvQjtBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL3JlYWxpdHktc3BhY2UvbGliL3NyYy9jb21tb24vcmVhbGl0eS9FbmNvZGUuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNsYXNzIEVuY29kZSB7XG4gICAgc3RhdGljIGxvZ2luKGxvZ2luUmVxdWVzdElkLCBqd3QsIHNwYWNlLCBwcm9jZXNzb3IpIHtcbiAgICAgICAgcmV0dXJuIFwiXCIgK1xuICAgICAgICAgICAgcyh0aGlzLkxPR0lOKSArXG4gICAgICAgICAgICBzKGxvZ2luUmVxdWVzdElkKSArXG4gICAgICAgICAgICBzZShqd3QpICtcbiAgICAgICAgICAgIHMoc3BhY2UpICtcbiAgICAgICAgICAgIHMocHJvY2Vzc29yKTtcbiAgICB9XG4gICAgc3RhdGljIGxvZ2luUmVzcG9uc2UobG9naW5SZXF1ZXN0SWQsIGVycm9yKSB7XG4gICAgICAgIHJldHVybiBcIlwiICtcbiAgICAgICAgICAgIHModGhpcy5MT0dJTl9SRVNQT05TRSkgK1xuICAgICAgICAgICAgcyhsb2dpblJlcXVlc3RJZCkgK1xuICAgICAgICAgICAgcyhlcnJvcik7XG4gICAgfVxuICAgIHN0YXRpYyBhZGQoaWQsIHgsIHksIHosIHJ4LCByeSwgcnosIHJ3LCBkZXNjcmlwdGlvbiwgdHlwZSkge1xuICAgICAgICByZXR1cm4gXCJcIiArXG4gICAgICAgICAgICBzKHRoaXMuQUREKSArXG4gICAgICAgICAgICBzKGlkKSArXG4gICAgICAgICAgICBkMih4KSArXG4gICAgICAgICAgICBkMih5KSArXG4gICAgICAgICAgICBkMih6KSArXG4gICAgICAgICAgICBkMihyeCkgK1xuICAgICAgICAgICAgZDIocnkpICtcbiAgICAgICAgICAgIGQyKHJ6KSArXG4gICAgICAgICAgICBkMihydykgK1xuICAgICAgICAgICAgc2UoZGVzY3JpcHRpb24pICtcbiAgICAgICAgICAgIHModHlwZSk7XG4gICAgfVxuICAgIHN0YXRpYyBhZGRlZChpbmRleCwgaWQsIHgsIHksIHosIHJ4LCByeSwgcnosIHJ3LCBkZXNjcmlwdGlvbiwgdHlwZSkge1xuICAgICAgICByZXR1cm4gXCJcIiArXG4gICAgICAgICAgICBzKHRoaXMuQURERUQpICtcbiAgICAgICAgICAgIGkoaW5kZXgpICtcbiAgICAgICAgICAgIHMoaWQpICtcbiAgICAgICAgICAgIGQyKHgpICtcbiAgICAgICAgICAgIGQyKHkpICtcbiAgICAgICAgICAgIGQyKHopICtcbiAgICAgICAgICAgIGQyKHJ4KSArXG4gICAgICAgICAgICBkMihyeSkgK1xuICAgICAgICAgICAgZDIocnopICtcbiAgICAgICAgICAgIGQyKHJ3KSArXG4gICAgICAgICAgICBzZShkZXNjcmlwdGlvbikgK1xuICAgICAgICAgICAgcyh0eXBlKTtcbiAgICB9XG4gICAgc3RhdGljIHVwZGF0ZShpZCwgeCwgeSwgeiwgcngsIHJ5LCByeiwgcncpIHtcbiAgICAgICAgcmV0dXJuIFwiXCIgK1xuICAgICAgICAgICAgcyh0aGlzLlVQREFURSkgK1xuICAgICAgICAgICAgcyhpZCkgK1xuICAgICAgICAgICAgZDIoeCkgK1xuICAgICAgICAgICAgZDIoeSkgK1xuICAgICAgICAgICAgZDIoeikgK1xuICAgICAgICAgICAgZDIocngpICtcbiAgICAgICAgICAgIGQyKHJ5KSArXG4gICAgICAgICAgICBkMihyeikgK1xuICAgICAgICAgICAgZDIocncpO1xuICAgIH1cbiAgICBzdGF0aWMgdXBkYXRlZChpbmRleCwgeCwgeSwgeiwgcngsIHJ5LCByeiwgcncpIHtcbiAgICAgICAgcmV0dXJuIFwiXCIgK1xuICAgICAgICAgICAgcyh0aGlzLlVQREFURUQpICtcbiAgICAgICAgICAgIGkoaW5kZXgpICtcbiAgICAgICAgICAgIGQyKHgpICtcbiAgICAgICAgICAgIGQyKHkpICtcbiAgICAgICAgICAgIGQyKHopICtcbiAgICAgICAgICAgIGQyKHJ4KSArXG4gICAgICAgICAgICBkMihyeSkgK1xuICAgICAgICAgICAgZDIocnopICtcbiAgICAgICAgICAgIGQyKHJ3KTtcbiAgICB9XG4gICAgc3RhdGljIHJlbW92ZShpZCkge1xuICAgICAgICByZXR1cm4gXCJcIiArXG4gICAgICAgICAgICBzKHRoaXMuUkVNT1ZFKSArXG4gICAgICAgICAgICBzKGlkKTtcbiAgICB9XG4gICAgc3RhdGljIHJlbW92ZWQoaW5kZXgsIGlkKSB7XG4gICAgICAgIHJldHVybiBcIlwiICtcbiAgICAgICAgICAgIHModGhpcy5SRU1PVkVEKSArXG4gICAgICAgICAgICBpKGluZGV4KSArXG4gICAgICAgICAgICBzKGlkKTtcbiAgICB9XG4gICAgc3RhdGljIGRlc2NyaWJlKGlkLCBkZXNjcmlwdGlvbikge1xuICAgICAgICByZXR1cm4gXCJcIiArXG4gICAgICAgICAgICBzKHRoaXMuREVTQ1JJQkUpICtcbiAgICAgICAgICAgIHMoaWQpICtcbiAgICAgICAgICAgIHNlKGRlc2NyaXB0aW9uKTtcbiAgICB9XG4gICAgc3RhdGljIGRlc2NyaWJlZChpbmRleCwgZGVzY3JpcHRpb24pIHtcbiAgICAgICAgcmV0dXJuIFwiXCIgK1xuICAgICAgICAgICAgcyh0aGlzLkRFU0NSSUJFRCkgK1xuICAgICAgICAgICAgaShpbmRleCkgK1xuICAgICAgICAgICAgc2UoZGVzY3JpcHRpb24pO1xuICAgIH1cbiAgICBzdGF0aWMgYWN0KGlkLCBhY3Rpb24sIGRlc2NyaXB0aW9uKSB7XG4gICAgICAgIHJldHVybiBcIlwiICtcbiAgICAgICAgICAgIHModGhpcy5BQ1QpICtcbiAgICAgICAgICAgIHMoaWQpICtcbiAgICAgICAgICAgIHMoYWN0aW9uKSArXG4gICAgICAgICAgICBzZShkZXNjcmlwdGlvbik7XG4gICAgfVxuICAgIHN0YXRpYyBhY3RlZChpbmRleCwgYWN0aW9uLCBkZXNjcmlwdGlvbikge1xuICAgICAgICByZXR1cm4gXCJcIiArXG4gICAgICAgICAgICBzKHRoaXMuQUNURUQpICtcbiAgICAgICAgICAgIGkoaW5kZXgpICtcbiAgICAgICAgICAgIHMoYWN0aW9uKSArXG4gICAgICAgICAgICBzZShkZXNjcmlwdGlvbik7XG4gICAgfVxuICAgIHN0YXRpYyBub3RpZnkobm90aWZpY2F0aW9uLCBkZXNjcmlwdGlvbikge1xuICAgICAgICByZXR1cm4gXCJcIiArXG4gICAgICAgICAgICBzKHRoaXMuTk9USUZZKSArXG4gICAgICAgICAgICBzKG5vdGlmaWNhdGlvbikgK1xuICAgICAgICAgICAgc2UoZGVzY3JpcHRpb24pO1xuICAgIH1cbiAgICBzdGF0aWMgbm90aWZpZWQobm90aWZpY2F0aW9uLCBkZXNjcmlwdGlvbikge1xuICAgICAgICByZXR1cm4gXCJcIiArXG4gICAgICAgICAgICBzKHRoaXMuTk9USUZJRUQpICtcbiAgICAgICAgICAgIHMobm90aWZpY2F0aW9uKSArXG4gICAgICAgICAgICBzZShkZXNjcmlwdGlvbik7XG4gICAgfVxufVxuRW5jb2RlLlNFUEFSQVRPUiA9ICd8JztcbkVuY29kZS5MT0dJTiA9ICdMJztcbkVuY29kZS5MT0dJTl9SRVNQT05TRSA9ICdsJztcbkVuY29kZS5BREQgPSAnQSc7XG5FbmNvZGUuQURERUQgPSAnYSc7XG5FbmNvZGUuVVBEQVRFID0gJ1UnO1xuRW5jb2RlLlVQREFURUQgPSAndSc7XG5FbmNvZGUuUkVNT1ZFID0gJ1InO1xuRW5jb2RlLlJFTU9WRUQgPSAncic7XG5FbmNvZGUuREVTQ1JJQkUgPSAnRCc7XG5FbmNvZGUuREVTQ1JJQkVEID0gJ2QnO1xuRW5jb2RlLkFDVCA9ICdDJztcbkVuY29kZS5BQ1RFRCA9ICdjJztcbkVuY29kZS5OT1RJRlkgPSAnTic7XG5FbmNvZGUuTk9USUZJRUQgPSAnbic7XG5FbmNvZGUuTk9USUZJQ0FUSU9OX1NUT1JFRF9ST09UX0VOVElUSUVTX0NIQU5HRUQgPSAnc3JlYyc7XG5FbmNvZGUuTk9USUZJQ0FUSU9OX1NUT1JFRF9DSElMRF9FTlRJVElFU19DSEFOR0VEID0gJ3NjZWMnO1xuRW5jb2RlLk5PVElGSUNBVElPTl9TVE9SRURfRU5USVRJRVNfUkVNT1ZFRCA9ICdzZXInO1xuRW5jb2RlLk9CSkVDVCA9ICdvJzsgLy8gVmlzaWJsZVxuRW5jb2RlLlBST0JFID0gJ3AnOyAvLyBPYnNlcnZpbmdcbkVuY29kZS5BVkFUQVIgPSAnYSc7IC8vIFZpc2libGUgYW5kIG9ic2VydmluZ1xuZXhwb3J0cy5FbmNvZGUgPSBFbmNvZGU7XG5mdW5jdGlvbiBzKHZhbHVlKSB7XG4gICAgcmV0dXJuIHZhbHVlICsgRW5jb2RlLlNFUEFSQVRPUjtcbn1cbmZ1bmN0aW9uIHNlKHZhbHVlKSB7XG4gICAgcmV0dXJuIHZhbHVlLnJlcGxhY2UoXCJcXFxcXCIsIFwiXFxcXFxcXFwxXCIpLnJlcGxhY2UoRW5jb2RlLlNFUEFSQVRPUiwgXCJcXFxcXFxcXDJcIikgKyBFbmNvZGUuU0VQQVJBVE9SO1xufVxuZnVuY3Rpb24gaSh2YWx1ZSkge1xuICAgIHJldHVybiB2YWx1ZSArIEVuY29kZS5TRVBBUkFUT1I7XG59XG5mdW5jdGlvbiBkMSh2YWx1ZSkge1xuICAgIHJldHVybiB2YWx1ZS50b0ZpeGVkKDEpICsgRW5jb2RlLlNFUEFSQVRPUjtcbn1cbmZ1bmN0aW9uIGQyKHZhbHVlKSB7XG4gICAgcmV0dXJuIHZhbHVlLnRvRml4ZWQoMikgKyBFbmNvZGUuU0VQQVJBVE9SO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9RW5jb2RlLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/reality-space/lib/src/common/reality/Encode.js\n");

/***/ }),

/***/ "./node_modules/reality-space/lib/src/common/reality/RealityClient.js":
/*!****************************************************************************!*\
  !*** ./node_modules/reality-space/lib/src/common/reality/RealityClient.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Encode_1 = __webpack_require__(/*! ./Encode */ \"./node_modules/reality-space/lib/src/common/reality/Encode.js\");\nconst StorageClient_1 = __webpack_require__(/*! ./StorageClient */ \"./node_modules/reality-space/lib/src/common/reality/StorageClient.js\");\nconst Decode_1 = __webpack_require__(/*! ./Decode */ \"./node_modules/reality-space/lib/src/common/reality/Decode.js\");\nconst parser_1 = __webpack_require__(/*! ../../node/util/parser */ \"./node_modules/reality-space/lib/src/node/util/parser.js\");\nconst xml_js_1 = __webpack_require__(/*! xml-js */ \"./node_modules/xml-js/lib/index.js\");\nconst uuid = __webpack_require__(/*! uuid */ \"./node_modules/uuid/index.js\");\nclass RealityClient {\n    constructor(spaceName, region, url, apiUrl, assetUrl, idToken) {\n        this.js2xmlOptions = { fullTagEmptyElement: true, spaces: 4 };\n        this.ws = undefined;\n        this.connected = false;\n        this.loadEntities = true;\n        this.newWebSocket = (url, protocol) => { return new WebSocket(url, protocol); };\n        // Events.\n        this.onClose = () => { };\n        this.onReceive = (message) => { };\n        this.onStoredRootEntityReceived = (sid, entityXml) => { };\n        this.onStoredChildEntityReceived = (parentSid, sid, entityXml) => { };\n        this.onStoredEntityRemoved = (sid) => { };\n        this.onLoaded = () => { };\n        this.spaceName = spaceName;\n        this.region = region;\n        this.url = url;\n        this.apiUrl = apiUrl;\n        this.assetUrl = assetUrl;\n        this.idToken = idToken;\n        this.storageClient = new StorageClient_1.StorageClient(spaceName, region, apiUrl, assetUrl, idToken);\n    }\n    isConnected() {\n        return this.connected;\n    }\n    connect() {\n        if (this.connected) {\n            throw new Error(\"reality client - error already connected.\");\n        }\n        this.connected = false;\n        return new Promise((resolve, reject) => {\n            try {\n                this.ws = this.newWebSocket(this.url, 'ds-v1.0');\n                this.ws.onerror = (error) => {\n                    this.connected = false;\n                    console.warn(\"reality client - error in client ws connection\", error);\n                    reject(error);\n                };\n                this.ws.onclose = () => {\n                    this.connected = false;\n                    this.onClose();\n                };\n                this.ws.onopen = () => __awaiter(this, void 0, void 0, function* () {\n                    yield this.send(Encode_1.Encode.login(uuid.v4().toString(), this.idToken, this.spaceName, this.region));\n                });\n                this.ws.onmessage = (message) => __awaiter(this, void 0, void 0, function* () {\n                    if (message.data.startsWith(Encode_1.Encode.LOGIN_RESPONSE + \"|\")) {\n                        const parts = message.data.split(Encode_1.Encode.SEPARATOR);\n                        const m = Decode_1.Decode.loginResponse(parts);\n                        const loginRequestId = m[0];\n                        const error = m[1];\n                        if (error) {\n                            console.warn(\"reality client - region login failed to \" + this.spaceName + \"/\" + this.region + \" login request ID: \" + loginRequestId + \" error: \" + error);\n                            reject(new Error(error));\n                            return;\n                        }\n                        else {\n                            console.log(\"reality client - region login success to \" + this.spaceName + \"/\" + this.region + \" login request ID: \" + loginRequestId);\n                            this.connected = true;\n                            resolve();\n                            if (this.loadEntities) {\n                                yield this.loadStoredEntities();\n                            }\n                            return;\n                        }\n                    }\n                    // Process storage notifications internally.\n                    if (message.data.startsWith(Encode_1.Encode.NOTIFIED + \"|\" + Encode_1.Encode.NOTIFICATION_STORED_ROOT_ENTITIES_CHANGED + \"|\") ||\n                        message.data.startsWith(Encode_1.Encode.NOTIFIED + \"|\" + Encode_1.Encode.NOTIFICATION_STORED_CHILD_ENTITIES_CHANGED + \"|\") ||\n                        message.data.startsWith(Encode_1.Encode.NOTIFIED + \"|\" + Encode_1.Encode.NOTIFICATION_STORED_ENTITIES_REMOVED + \"|\")) {\n                        if (yield this.handleActions(message.data)) {\n                            return;\n                        }\n                    }\n                    this.onReceive(message.data);\n                });\n            }\n            catch (error) {\n                console.warn(\"reality client - error in client ws connect\", error);\n                reject(error);\n            }\n        });\n    }\n    close() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n        }\n    }\n    send(message) {\n        this.ws.send(message);\n    }\n    add(id, x, y, z, rx, ry, rz, rw, description, type) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.send(Encode_1.Encode.add(id, x, y, z, rx, ry, rz, rw, description, type));\n        });\n    }\n    update(id, x, y, z, rx, ry, rz, rw) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.send(Encode_1.Encode.update(id, x, y, z, rx, ry, rz, rw));\n        });\n    }\n    remove(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.send(Encode_1.Encode.remove(id));\n        });\n    }\n    describe(id, description) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.send(Encode_1.Encode.describe(id, description));\n        });\n    }\n    act(id, action, description) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.send(Encode_1.Encode.act(id, action, description));\n        });\n    }\n    notify(notification, description) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.send(Encode_1.Encode.notify(notification, description));\n        });\n    }\n    storeEntities(entitiesXml) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const savedEntitiesXml = yield this.storageClient.saveRootEntities(entitiesXml);\n            const sids = parser_1.parseRootSids(savedEntitiesXml);\n            yield this.notify(Encode_1.Encode.NOTIFICATION_STORED_ROOT_ENTITIES_CHANGED, sids.toString());\n        });\n    }\n    storeChildEntities(parentSid, entitiesXml) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const savedEntitiesXml = yield this.storageClient.saveChildEntities(parentSid, entitiesXml);\n            const sids = parser_1.parseRootSids(savedEntitiesXml);\n            yield this.notify(Encode_1.Encode.NOTIFICATION_STORED_CHILD_ENTITIES_CHANGED, [parentSid].concat(sids).toString());\n        });\n    }\n    removeStoredEntities(sids) {\n        return __awaiter(this, void 0, void 0, function* () {\n            for (let sid of sids) {\n                yield this.storageClient.removeEntity(sid);\n            }\n            yield this.notify(Encode_1.Encode.NOTIFICATION_STORED_ENTITIES_REMOVED, sids.toString());\n        });\n    }\n    handleActions(message) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const parts = message.split(Encode_1.Encode.SEPARATOR);\n            const m = Decode_1.Decode.notified(parts);\n            const notification = m[0];\n            const description = m[1];\n            const sids = description.split(',');\n            if (notification == Encode_1.Encode.NOTIFICATION_STORED_ROOT_ENTITIES_CHANGED) {\n                yield this.handleStoredRootEntityChanged(sids);\n                return true;\n            }\n            if (notification == Encode_1.Encode.NOTIFICATION_STORED_CHILD_ENTITIES_CHANGED) {\n                yield this.handleStoredChildEntityChanged(sids[0], sids.splice(1));\n                return true;\n            }\n            if (notification == Encode_1.Encode.NOTIFICATION_STORED_ENTITIES_REMOVED) {\n                yield this.handleStoredEntityRemoved(sids);\n                return true;\n            }\n            return false;\n        });\n    }\n    loadStoredEntities() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const entitiesXml = yield this.storageClient.getRootEntitiesFromCdn();\n            if (entitiesXml) {\n                const entities = parser_1.parseFragment(entitiesXml);\n                for (let element of entities.elements) {\n                    const sid = element.attributes.sid;\n                    if (this.isConnected()) {\n                        this.onStoredRootEntityReceived(sid, xml_js_1.js2xml({ elements: [element] }, this.js2xmlOptions));\n                    }\n                }\n            }\n            if (this.isConnected()) {\n                this.onLoaded();\n            }\n        });\n    }\n    handleStoredRootEntityChanged(sids) {\n        return __awaiter(this, void 0, void 0, function* () {\n            for (let sid of sids) {\n                const entityXml = yield this.storageClient.getEntity(sid);\n                if (entityXml) {\n                    const elements = xml_js_1.xml2js(entityXml).elements;\n                    const sid = elements[0].attributes.sid;\n                    if (this.isConnected()) {\n                        this.onStoredRootEntityReceived(sid, entityXml);\n                    }\n                }\n            }\n        });\n    }\n    handleStoredChildEntityChanged(parentSid, sids) {\n        return __awaiter(this, void 0, void 0, function* () {\n            for (let sid of sids) {\n                const entityXml = yield this.storageClient.getEntity(sid);\n                if (entityXml) {\n                    const elements = xml_js_1.xml2js(entityXml).elements;\n                    const sid = elements[0].attributes.sid;\n                    if (this.isConnected()) {\n                        this.onStoredChildEntityReceived(parentSid, sid, entityXml);\n                    }\n                }\n            }\n        });\n    }\n    handleStoredEntityRemoved(sids) {\n        return __awaiter(this, void 0, void 0, function* () {\n            for (let sid of sids) {\n                if (!(yield this.storageClient.getEntity(sid))) {\n                    this.onStoredEntityRemoved(sid);\n                }\n            }\n        });\n    }\n}\nexports.RealityClient = RealityClient;\n//# sourceMappingURL=RealityClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/reality-space/lib/src/common/reality/RealityClient.js\n");

/***/ }),

/***/ "./node_modules/reality-space/lib/src/common/reality/StorageClient.js":
/*!****************************************************************************!*\
  !*** ./node_modules/reality-space/lib/src/common/reality/StorageClient.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst uuid = __webpack_require__(/*! uuid */ \"./node_modules/uuid/index.js\");\nconst GroupMember_1 = __webpack_require__(/*! ./api/GroupMember */ \"./node_modules/reality-space/lib/src/common/reality/api/GroupMember.js\");\nconst GroupPrivilege_1 = __webpack_require__(/*! ./api/GroupPrivilege */ \"./node_modules/reality-space/lib/src/common/reality/api/GroupPrivilege.js\");\nconst UserPrivilege_1 = __webpack_require__(/*! ./api/UserPrivilege */ \"./node_modules/reality-space/lib/src/common/reality/api/UserPrivilege.js\");\nconst DocumentController_1 = __webpack_require__(/*! ../../node/storage/DocumentController */ \"./node_modules/reality-space/lib/src/node/storage/DocumentController.js\");\nclass StorageClient {\n    constructor(spaceName, region, storageUrl, cdnUrl, idToken) {\n        this.spaceName = spaceName;\n        this.region = region;\n        this.storageUrl = storageUrl;\n        this.cdnUrl = cdnUrl;\n        this.idToken = idToken;\n    }\n    getRootEntitiesFromCdn() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const entitiesXmlUrl = this.cdnUrl + \"spaces/\" + this.spaceName + \"/regions/\" + this.region + \"/entities.xml\";\n            const response = (yield fetch(entitiesXmlUrl, {\n                method: \"GET\",\n                headers: { \"Authorization\": \"Bearer \" + this.idToken, \"Request-ID\": uuid.v4() }\n            }));\n            if (response.status != 200) {\n                console.log(\"Error loading stored entities from assets \" + entitiesXmlUrl + \" : \" + response.status.toString());\n                return DocumentController_1.DocumentController.EMPTY_FRAGMENT;\n            }\n            return yield response.text();\n        });\n    }\n    getRootEntities() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.getText(yield this.request(\"GET\", \"/entities\", [200]));\n        });\n    }\n    ;\n    getEntity(sid) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.getText(yield this.request(\"GET\", \"/entities/\" + sid, [200, 404]));\n        });\n    }\n    saveRootEntities(fragmentXml) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.getText(yield this.requestWithTextBody(\"POST\", \"/entities\", fragmentXml, [200]));\n        });\n    }\n    saveChildEntities(parentSid, fragmentXml) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.getText(yield this.requestWithTextBody(\"POST\", \"/entities/\" + parentSid + \"/entities\", fragmentXml, [200]));\n        });\n    }\n    removeEntity(sid) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.request(\"DELETE\", \"/entities/\" + sid, [200]);\n        });\n    }\n    getUsers() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.parse(yield this.request(\"GET\", \"/users\", [200]));\n        });\n    }\n    ;\n    getUser(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.parseOptional(yield this.request(\"GET\", \"/users/\" + id, [200, 404]));\n        });\n    }\n    addUser(user) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.parse(yield this.requestWithBody(\"POST\", \"/users\", user, [200]));\n        });\n    }\n    updateUser(user) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.parse(yield this.requestWithBody(\"PUT\", \"/users/\" + user.id, user, [200]));\n        });\n    }\n    removeUser(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.request(\"DELETE\", \"/users/\" + id, [200]);\n        });\n    }\n    getGroups() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.parse(yield this.request(\"GET\", \"/groups\", [200]));\n        });\n    }\n    ;\n    getGroup(name) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.parseOptional(yield this.request(\"GET\", \"/groups/\" + name, [200, 404]));\n        });\n    }\n    addGroup(group) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.parse(yield this.requestWithBody(\"POST\", \"/groups\", group, [200]));\n        });\n    }\n    removeGroup(name) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.request(\"DELETE\", \"/groups/\" + name, [200]);\n        });\n    }\n    addGroupMember(groupName, userId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.parse(yield this.requestWithBody(\"POST\", \"/groups/\" + groupName + \"/members\", new GroupMember_1.GroupMember(groupName, userId), [200]));\n        });\n    }\n    removeGroupMember(groupName, userId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.request(\"DELETE\", \"/groups/\" + groupName + \"/members/\" + userId, [200]);\n        });\n    }\n    getUserPrivileges(userId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.parse(yield this.request(\"GET\", \"/users/\" + userId + \"/privileges\", [200]));\n        });\n    }\n    getGroupPrivileges(name) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.parse(yield this.request(\"GET\", \"/groups/\" + name + \"/privileges\", [200]));\n        });\n    }\n    setUserPrivilege(userId, sid, type) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.parse(yield this.requestWithBody(\"POST\", \"/users/\" + userId + \"/privileges\", new UserPrivilege_1.UserPrivilege(type, userId, sid), [200]));\n        });\n    }\n    setGroupPrivilege(groupName, sid, type) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.parse(yield this.requestWithBody(\"POST\", \"/groups/\" + groupName + \"/privileges\", new GroupPrivilege_1.GroupPrivilege(type, groupName, sid), [200]));\n        });\n    }\n    removeUserPrivilege(userId, sid) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.request(\"DELETE\", \"/users/\" + userId + \"/privileges/\" + sid, [200]);\n        });\n    }\n    removeGroupPrivilege(groupName, sid) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.request(\"DELETE\", \"/groups/\" + groupName + \"/privileges/\" + sid, [200]);\n        });\n    }\n    listAssets(category) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.parseOptional(yield this.request(\"GET\", \"/assets/\" + category, [200]));\n        });\n    }\n    ;\n    saveAsset(category, fileName, readableStream) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.requestWithReadableStreamBody(\"POST\", \"/assets/\" + category + \"/\" + fileName, readableStream, [200]);\n        });\n    }\n    saveAssetBuffer(category, fileName, buffer, mimeType) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.requestWithBlobBody(\"POST\", \"/assets/\" + category + \"/\" + fileName, buffer, mimeType, [200]);\n        });\n    }\n    getAsset(category, fileName) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.request(\"GET\", \"/assets/\" + category + \"/\" + fileName, [200, 404]);\n            return yield this.getReadableStream(response);\n        });\n    }\n    getAssetBuffer(category, fileName) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this.getBuffer(\"/assets/\" + category + \"/\" + fileName);\n        });\n    }\n    removeAsset(category, fileName) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.request(\"DELETE\", \"/assets/\" + category + \"/\" + fileName, [200]);\n        });\n    }\n    listUserFiles(category) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.parseOptional(yield this.request(\"GET\", \"/user-files/\" + category, [200]));\n        });\n    }\n    ;\n    saveUserFile(category, fileName, readableStream) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.requestWithReadableStreamBody(\"POST\", \"/user-files/\" + category + \"/\" + fileName, readableStream, [200]);\n        });\n    }\n    saveUserFileBuffer(category, fileName, buffer, mimeType) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.requestWithBlobBody(\"POST\", \"/user-files/\" + category + \"/\" + fileName, buffer, mimeType, [200]);\n        });\n    }\n    getUserFile(category, fileName) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.request(\"GET\", \"/user-files/\" + category + \"/\" + fileName, [200, 404]);\n            return yield this.getReadableStream(response);\n        });\n    }\n    getUserFileBuffer(category, fileName) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this.getBuffer(\"/user-files/\" + category + \"/\" + fileName);\n        });\n    }\n    removeUserFile(category, fileName) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.request(\"DELETE\", \"/user-files/\" + category + \"/\" + fileName, [200]);\n        });\n    }\n    getBuffer(url) {\n        return new Promise((resolve, reject) => {\n            this.request(\"GET\", url, [200, 404]).then((response) => {\n                response.blob().then((blob) => {\n                    const reader = new FileReader();\n                    reader.addEventListener(\"loadend\", function () {\n                    });\n                    reader.onloadend = () => {\n                        resolve(reader.result);\n                    };\n                    reader.onerror = () => {\n                        reject(new Error(\"Failed to read blob from result.\"));\n                    };\n                    reader.readAsArrayBuffer(blob);\n                }).catch((err) => {\n                    reject(err);\n                });\n            }).catch((err) => {\n                reject(err);\n            });\n        });\n    }\n    request(method, path, successStatuses) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = (yield fetch(this.storageUrl + \"spaces/\" + this.spaceName + \"/regions/\" + this.region + path, {\n                method: method,\n                headers: { \"Authorization\": \"Bearer \" + this.idToken, \"Request-ID\": uuid.v4() }\n            }));\n            if (successStatuses.indexOf(response.status) == -1) {\n                throw new Error(response.status.toString());\n            }\n            return response;\n        });\n    }\n    requestWithBody(method, path, body, successStatuses) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = (yield fetch(this.storageUrl + \"spaces/\" + this.spaceName + \"/regions/\" + this.region + path, {\n                method: method,\n                headers: { \"Authorization\": \"Bearer \" + this.idToken, \"Request-ID\": uuid.v4() },\n                body: JSON.stringify(body)\n            }));\n            if (successStatuses.indexOf(response.status) == -1) {\n                throw new Error(response.status.toString());\n            }\n            return response;\n        });\n    }\n    requestWithTextBody(method, path, body, successStatuses) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = (yield fetch(this.storageUrl + \"spaces/\" + this.spaceName + \"/regions/\" + this.region + path, {\n                method: method,\n                headers: { \"Authorization\": \"Bearer \" + this.idToken, \"Request-ID\": uuid.v4() },\n                body: body\n            }));\n            if (successStatuses.indexOf(response.status) == -1) {\n                throw new Error(response.status.toString());\n            }\n            return response;\n        });\n    }\n    requestWithReadableStreamBody(method, path, readableStream, successStatuses) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //const blob = new Blob([body], {type : 'application/text'});\n            const response = (yield fetch(this.storageUrl + \"spaces/\" + this.spaceName + \"/regions/\" + this.region + path, {\n                method: method,\n                headers: { \"Authorization\": \"Bearer \" + this.idToken, \"Request-ID\": uuid.v4() },\n                body: readableStream\n            }));\n            if (successStatuses.indexOf(response.status) == -1) {\n                throw new Error(response.status.toString());\n            }\n            return response;\n        });\n    }\n    requestWithBlobBody(method, path, buffer, mimeType, successStatuses) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const blob = new Blob([buffer], { type: 'application/json' });\n            const response = (yield fetch(this.storageUrl + \"spaces/\" + this.spaceName + \"/regions/\" + this.region + path, {\n                method: method,\n                headers: { \"Authorization\": \"Bearer \" + this.idToken, \"Request-ID\": uuid.v4() },\n                body: blob\n            }));\n            if (successStatuses.indexOf(response.status) == -1) {\n                throw new Error(response.status.toString());\n            }\n            return response;\n        });\n    }\n    parse(response) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield response.json();\n        });\n    }\n    parseOptional(response) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (response.status == 404) {\n                return undefined;\n            }\n            else {\n                return yield response.json();\n            }\n        });\n    }\n    getReadableStream(response) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (response.status == 404) {\n                return undefined;\n            }\n            else {\n                return yield response.body;\n            }\n        });\n    }\n    getText(response) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield response.text();\n        });\n    }\n}\nexports.StorageClient = StorageClient;\n//# sourceMappingURL=StorageClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/reality-space/lib/src/common/reality/StorageClient.js\n");

/***/ }),

/***/ "./node_modules/reality-space/lib/src/common/reality/api/GroupMember.js":
/*!******************************************************************************!*\
  !*** ./node_modules/reality-space/lib/src/common/reality/api/GroupMember.js ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass GroupMember {\n    constructor(groupName, userId) {\n        this.groupName = groupName;\n        this.userId = userId;\n    }\n}\nexports.GroupMember = GroupMember;\n//# sourceMappingURL=GroupMember.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhbGl0eS1zcGFjZS9saWIvc3JjL2NvbW1vbi9yZWFsaXR5L2FwaS9Hcm91cE1lbWJlci5qcz9hNmUxIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQThDLGNBQWM7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9yZWFsaXR5LXNwYWNlL2xpYi9zcmMvY29tbW9uL3JlYWxpdHkvYXBpL0dyb3VwTWVtYmVyLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jbGFzcyBHcm91cE1lbWJlciB7XG4gICAgY29uc3RydWN0b3IoZ3JvdXBOYW1lLCB1c2VySWQpIHtcbiAgICAgICAgdGhpcy5ncm91cE5hbWUgPSBncm91cE5hbWU7XG4gICAgICAgIHRoaXMudXNlcklkID0gdXNlcklkO1xuICAgIH1cbn1cbmV4cG9ydHMuR3JvdXBNZW1iZXIgPSBHcm91cE1lbWJlcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUdyb3VwTWVtYmVyLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/reality-space/lib/src/common/reality/api/GroupMember.js\n");

/***/ }),

/***/ "./node_modules/reality-space/lib/src/common/reality/api/GroupPrivilege.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/reality-space/lib/src/common/reality/api/GroupPrivilege.js ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass GroupPrivilege {\n    constructor(type, name, sid) {\n        this.type = type;\n        this.name = name;\n        this.sid = sid;\n    }\n}\nexports.GroupPrivilege = GroupPrivilege;\n//# sourceMappingURL=GroupPrivilege.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhbGl0eS1zcGFjZS9saWIvc3JjL2NvbW1vbi9yZWFsaXR5L2FwaS9Hcm91cFByaXZpbGVnZS5qcz9jZmRjIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQThDLGNBQWM7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL3JlYWxpdHktc3BhY2UvbGliL3NyYy9jb21tb24vcmVhbGl0eS9hcGkvR3JvdXBQcml2aWxlZ2UuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNsYXNzIEdyb3VwUHJpdmlsZWdlIHtcbiAgICBjb25zdHJ1Y3Rvcih0eXBlLCBuYW1lLCBzaWQpIHtcbiAgICAgICAgdGhpcy50eXBlID0gdHlwZTtcbiAgICAgICAgdGhpcy5uYW1lID0gbmFtZTtcbiAgICAgICAgdGhpcy5zaWQgPSBzaWQ7XG4gICAgfVxufVxuZXhwb3J0cy5Hcm91cFByaXZpbGVnZSA9IEdyb3VwUHJpdmlsZWdlO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9R3JvdXBQcml2aWxlZ2UuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/reality-space/lib/src/common/reality/api/GroupPrivilege.js\n");

/***/ }),

/***/ "./node_modules/reality-space/lib/src/common/reality/api/UserPrivilege.js":
/*!********************************************************************************!*\
  !*** ./node_modules/reality-space/lib/src/common/reality/api/UserPrivilege.js ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass UserPrivilege {\n    constructor(type, userId, sid) {\n        this.type = type;\n        this.userId = userId;\n        this.sid = sid;\n    }\n}\nexports.UserPrivilege = UserPrivilege;\n//# sourceMappingURL=UserPrivilege.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhbGl0eS1zcGFjZS9saWIvc3JjL2NvbW1vbi9yZWFsaXR5L2FwaS9Vc2VyUHJpdmlsZWdlLmpzPzAwY2YiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBOEMsY0FBYztBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhbGl0eS1zcGFjZS9saWIvc3JjL2NvbW1vbi9yZWFsaXR5L2FwaS9Vc2VyUHJpdmlsZWdlLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jbGFzcyBVc2VyUHJpdmlsZWdlIHtcbiAgICBjb25zdHJ1Y3Rvcih0eXBlLCB1c2VySWQsIHNpZCkge1xuICAgICAgICB0aGlzLnR5cGUgPSB0eXBlO1xuICAgICAgICB0aGlzLnVzZXJJZCA9IHVzZXJJZDtcbiAgICAgICAgdGhpcy5zaWQgPSBzaWQ7XG4gICAgfVxufVxuZXhwb3J0cy5Vc2VyUHJpdmlsZWdlID0gVXNlclByaXZpbGVnZTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVVzZXJQcml2aWxlZ2UuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/reality-space/lib/src/common/reality/api/UserPrivilege.js\n");

/***/ }),

/***/ "./node_modules/reality-space/lib/src/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/reality-space/lib/src/index.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar RealityClient_1 = __webpack_require__(/*! ./common/reality/RealityClient */ \"./node_modules/reality-space/lib/src/common/reality/RealityClient.js\");\nexports.RealityClient = RealityClient_1.RealityClient;\nvar ClusterClient_1 = __webpack_require__(/*! ./common/reality/ClusterClient */ \"./node_modules/reality-space/lib/src/common/reality/ClusterClient.js\");\nexports.ClusterClient = ClusterClient_1.ClusterClient;\nvar Encode_1 = __webpack_require__(/*! ./common/reality/Encode */ \"./node_modules/reality-space/lib/src/common/reality/Encode.js\");\nexports.Encode = Encode_1.Encode;\nvar Decode_1 = __webpack_require__(/*! ./common/reality/Decode */ \"./node_modules/reality-space/lib/src/common/reality/Decode.js\");\nexports.Decode = Decode_1.Decode;\nvar Configuration_1 = __webpack_require__(/*! ./common/reality/Configuration */ \"./node_modules/reality-space/lib/src/common/reality/Configuration.js\");\nexports.IdTokenIssuer = Configuration_1.IdTokenIssuer;\nexports.getClusterConfiguration = Configuration_1.getClusterConfiguration;\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhbGl0eS1zcGFjZS9saWIvc3JjL2luZGV4LmpzPzczMTMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBOEMsY0FBYztBQUM1RCxzQkFBc0IsbUJBQU8sQ0FBQyw0R0FBZ0M7QUFDOUQ7QUFDQSxzQkFBc0IsbUJBQU8sQ0FBQyw0R0FBZ0M7QUFDOUQ7QUFDQSxlQUFlLG1CQUFPLENBQUMsOEZBQXlCO0FBQ2hEO0FBQ0EsZUFBZSxtQkFBTyxDQUFDLDhGQUF5QjtBQUNoRDtBQUNBLHNCQUFzQixtQkFBTyxDQUFDLDRHQUFnQztBQUM5RDtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhbGl0eS1zcGFjZS9saWIvc3JjL2luZGV4LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgUmVhbGl0eUNsaWVudF8xID0gcmVxdWlyZShcIi4vY29tbW9uL3JlYWxpdHkvUmVhbGl0eUNsaWVudFwiKTtcbmV4cG9ydHMuUmVhbGl0eUNsaWVudCA9IFJlYWxpdHlDbGllbnRfMS5SZWFsaXR5Q2xpZW50O1xudmFyIENsdXN0ZXJDbGllbnRfMSA9IHJlcXVpcmUoXCIuL2NvbW1vbi9yZWFsaXR5L0NsdXN0ZXJDbGllbnRcIik7XG5leHBvcnRzLkNsdXN0ZXJDbGllbnQgPSBDbHVzdGVyQ2xpZW50XzEuQ2x1c3RlckNsaWVudDtcbnZhciBFbmNvZGVfMSA9IHJlcXVpcmUoXCIuL2NvbW1vbi9yZWFsaXR5L0VuY29kZVwiKTtcbmV4cG9ydHMuRW5jb2RlID0gRW5jb2RlXzEuRW5jb2RlO1xudmFyIERlY29kZV8xID0gcmVxdWlyZShcIi4vY29tbW9uL3JlYWxpdHkvRGVjb2RlXCIpO1xuZXhwb3J0cy5EZWNvZGUgPSBEZWNvZGVfMS5EZWNvZGU7XG52YXIgQ29uZmlndXJhdGlvbl8xID0gcmVxdWlyZShcIi4vY29tbW9uL3JlYWxpdHkvQ29uZmlndXJhdGlvblwiKTtcbmV4cG9ydHMuSWRUb2tlbklzc3VlciA9IENvbmZpZ3VyYXRpb25fMS5JZFRva2VuSXNzdWVyO1xuZXhwb3J0cy5nZXRDbHVzdGVyQ29uZmlndXJhdGlvbiA9IENvbmZpZ3VyYXRpb25fMS5nZXRDbHVzdGVyQ29uZmlndXJhdGlvbjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/reality-space/lib/src/index.js\n");

/***/ }),

/***/ "./node_modules/reality-space/lib/src/node/storage/DocumentController.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/reality-space/lib/src/node/storage/DocumentController.js ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst xml_js_1 = __webpack_require__(/*! xml-js */ \"./node_modules/xml-js/lib/index.js\");\nconst Fragment_1 = __webpack_require__(/*! ./model/Fragment */ \"./node_modules/reality-space/lib/src/node/storage/model/Fragment.js\");\nconst uuid = __webpack_require__(/*! uuid */ \"./node_modules/uuid/index.js\");\nconst FragmentElement_1 = __webpack_require__(/*! ./model/FragmentElement */ \"./node_modules/reality-space/lib/src/node/storage/model/FragmentElement.js\");\nclass DocumentController {\n    constructor(sanitizer) {\n        this.js2xmlOptions = { fullTagEmptyElement: true, spaces: 4 };\n        this.elements = new Map();\n        this.sanitizer = sanitizer;\n        this.document = this.parse(DocumentController.EMPTY_FRAGMENT);\n    }\n    clear() {\n        this.elements.clear();\n        this.document = this.parse(DocumentController.EMPTY_FRAGMENT);\n        console.log(\"reality server - document controller cleared.\");\n    }\n    putRootElements(fragmentXml) {\n        if (!fragmentXml) {\n            throw new Error(\"Fragment can not be empty.\");\n        }\n        const fragment = this.parse(fragmentXml);\n        if (fragment.rootElement.name != DocumentController.FRAGMENT_ROOT_ELEMENT) {\n            throw Error(\"Invalid root element name: \" + fragment.rootElement.name);\n        }\n        const elements = fragment.elements;\n        elements.forEach(e => {\n            this.saveElement(this.document.rootElement, e, true);\n        });\n        return xml_js_1.js2xml(fragment.container, this.js2xmlOptions);\n    }\n    putChildElements(parentSid, fragmentXml) {\n        if (!parentSid) {\n            throw new Error(\"Parent sid is undefined.\");\n        }\n        if (!this.elements.has(parentSid)) {\n            throw new Error(\"Parent element does not exist.\");\n        }\n        if (!fragmentXml) {\n            throw new Error(\"Fragment can not be empty.\");\n        }\n        const parentElement = this.elements.get(parentSid);\n        const fragment = this.parse(fragmentXml);\n        if (fragment.rootElement.name != DocumentController.FRAGMENT_ROOT_ELEMENT) {\n            throw Error(\"Invalid root element name: \" + fragment.rootElement.name);\n        }\n        const elements = fragment.elements;\n        //this.saveElements(elements);\n        elements.forEach(e => {\n            this.saveElement(parentElement.element, e, true);\n        });\n        return xml_js_1.js2xml(fragment.container, this.js2xmlOptions);\n    }\n    remove(sid) {\n        if (!sid) {\n            throw new Error(\"Element sid is undefined.\");\n        }\n        if (!this.elements.has(sid)) {\n            throw new Error(\"Element does not exist.\");\n        }\n        const element = this.elements.get(sid);\n        this.removeElement(element.element);\n    }\n    getDocument() {\n        return xml_js_1.js2xml(this.document.container, this.js2xmlOptions);\n    }\n    hasElement(sid) {\n        return this.elements.has(sid);\n    }\n    getElement(sid) {\n        if (!sid) {\n            throw new Error(\"Element sid is undefined.\");\n        }\n        if (!this.elements.has(sid)) {\n            throw new Error(\"Element does not exist.\");\n        }\n        const element = this.elements.get(sid);\n        return xml_js_1.js2xml({ elements: [element.element] }, this.js2xmlOptions);\n    }\n    serialize() {\n        return xml_js_1.js2xml(this.document.container, this.js2xmlOptions);\n    }\n    deserialize(documentXml) {\n        this.document = this.parse(documentXml);\n        this.elements.clear();\n        this.document.elements.forEach(entity => {\n            this.elements.set(entity.attributes.sid, new FragmentElement_1.FragmentElement(this.document.rootElement, entity));\n        });\n    }\n    saveElement(parent, element, addToParent) {\n        if (!element.attributes) {\n            element.attributes = {};\n        }\n        if (!element.attributes.sid) {\n            element.attributes.sid = uuid.v4().toString();\n        }\n        const sid = element.attributes.sid;\n        if (this.elements.has(sid)) {\n            const existingElement = this.elements.get(sid);\n            existingElement.parent.elements.splice(existingElement.parent.elements.indexOf(existingElement.element), 1);\n            existingElement.parent.elements.push(element);\n        }\n        else {\n            // Only top elements need to be explicitely added as children are already part of tree\n            if (addToParent) {\n                if (!parent.elements) {\n                    parent.elements = [];\n                }\n                parent.elements.push(element);\n            }\n        }\n        this.elements.set(sid, new FragmentElement_1.FragmentElement(parent, element));\n        if (element.elements) {\n            // Recursively save children.\n            element.elements.forEach(child => this.saveElement(element, child, false));\n        }\n    }\n    removeElement(element) {\n        if (element.attributes && element.attributes.sid) {\n            const sid = element.attributes.sid;\n            //console.log(\"Removed: \" + sid);\n            if (this.elements.has(sid)) {\n                const existingElement = this.elements.get(sid);\n                existingElement.parent.elements.splice(existingElement.parent.elements.indexOf(existingElement.element), 1);\n                this.elements.delete(sid);\n            }\n        }\n        if (element.elements) {\n            // Recursively remove children.\n            element.elements.forEach(child => this.removeElement(child));\n        }\n    }\n    parse(xml) {\n        let container = xml_js_1.xml2js(xml);\n        this.sanitizer.sanitizeElements(container.elements);\n        let rootElement = container.elements[0];\n        if (!rootElement.elements) {\n            rootElement.elements = [];\n        }\n        let entities = rootElement.elements;\n        return new Fragment_1.Fragment(container, rootElement, entities);\n    }\n}\nDocumentController.FRAGMENT_ROOT_ELEMENT = \"a-entities\";\nDocumentController.EMPTY_FRAGMENT = '<' + DocumentController.FRAGMENT_ROOT_ELEMENT + '></' + DocumentController.FRAGMENT_ROOT_ELEMENT + '>';\nexports.DocumentController = DocumentController;\n//# sourceMappingURL=DocumentController.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/reality-space/lib/src/node/storage/DocumentController.js\n");

/***/ }),

/***/ "./node_modules/reality-space/lib/src/node/storage/model/Fragment.js":
/*!***************************************************************************!*\
  !*** ./node_modules/reality-space/lib/src/node/storage/model/Fragment.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass Fragment {\n    constructor(container, rootElement, entities) {\n        this.container = container;\n        this.rootElement = rootElement;\n        this.elements = entities;\n    }\n}\nexports.Fragment = Fragment;\n//# sourceMappingURL=Fragment.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhbGl0eS1zcGFjZS9saWIvc3JjL25vZGUvc3RvcmFnZS9tb2RlbC9GcmFnbWVudC5qcz8wNjgxIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQThDLGNBQWM7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL3JlYWxpdHktc3BhY2UvbGliL3NyYy9ub2RlL3N0b3JhZ2UvbW9kZWwvRnJhZ21lbnQuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNsYXNzIEZyYWdtZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihjb250YWluZXIsIHJvb3RFbGVtZW50LCBlbnRpdGllcykge1xuICAgICAgICB0aGlzLmNvbnRhaW5lciA9IGNvbnRhaW5lcjtcbiAgICAgICAgdGhpcy5yb290RWxlbWVudCA9IHJvb3RFbGVtZW50O1xuICAgICAgICB0aGlzLmVsZW1lbnRzID0gZW50aXRpZXM7XG4gICAgfVxufVxuZXhwb3J0cy5GcmFnbWVudCA9IEZyYWdtZW50O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9RnJhZ21lbnQuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/reality-space/lib/src/node/storage/model/Fragment.js\n");

/***/ }),

/***/ "./node_modules/reality-space/lib/src/node/storage/model/FragmentElement.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/reality-space/lib/src/node/storage/model/FragmentElement.js ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass FragmentElement {\n    constructor(parent, element) {\n        this.parent = parent;\n        this.element = element;\n    }\n}\nexports.FragmentElement = FragmentElement;\n//# sourceMappingURL=FragmentElement.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhbGl0eS1zcGFjZS9saWIvc3JjL25vZGUvc3RvcmFnZS9tb2RlbC9GcmFnbWVudEVsZW1lbnQuanM/ZTBkZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE4QyxjQUFjO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhbGl0eS1zcGFjZS9saWIvc3JjL25vZGUvc3RvcmFnZS9tb2RlbC9GcmFnbWVudEVsZW1lbnQuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNsYXNzIEZyYWdtZW50RWxlbWVudCB7XG4gICAgY29uc3RydWN0b3IocGFyZW50LCBlbGVtZW50KSB7XG4gICAgICAgIHRoaXMucGFyZW50ID0gcGFyZW50O1xuICAgICAgICB0aGlzLmVsZW1lbnQgPSBlbGVtZW50O1xuICAgIH1cbn1cbmV4cG9ydHMuRnJhZ21lbnRFbGVtZW50ID0gRnJhZ21lbnRFbGVtZW50O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9RnJhZ21lbnRFbGVtZW50LmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/reality-space/lib/src/node/storage/model/FragmentElement.js\n");

/***/ }),

/***/ "./node_modules/reality-space/lib/src/node/util/parser.js":
/*!****************************************************************!*\
  !*** ./node_modules/reality-space/lib/src/node/util/parser.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Fragment_1 = __webpack_require__(/*! ../storage/model/Fragment */ \"./node_modules/reality-space/lib/src/node/storage/model/Fragment.js\");\nconst xml_js_1 = __webpack_require__(/*! xml-js */ \"./node_modules/xml-js/lib/index.js\");\nfunction parseFragment(fragmentXml) {\n    let container = xml_js_1.xml2js(fragmentXml);\n    let rootElement = container.elements[0];\n    if (!rootElement.elements) {\n        rootElement.elements = [];\n    }\n    let entities = rootElement.elements;\n    return new Fragment_1.Fragment(container, rootElement, entities);\n}\nexports.parseFragment = parseFragment;\nfunction parseRootSids(entitiesXml) {\n    let container = xml_js_1.xml2js(entitiesXml);\n    let rootElement = container.elements[0];\n    if (!rootElement.elements) {\n        rootElement.elements = [];\n    }\n    let entities = rootElement.elements;\n    return entities.map(entity => entity.attributes.sid);\n}\nexports.parseRootSids = parseRootSids;\n//# sourceMappingURL=parser.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhbGl0eS1zcGFjZS9saWIvc3JjL25vZGUvdXRpbC9wYXJzZXIuanM/ZDVkMCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE4QyxjQUFjO0FBQzVELG1CQUFtQixtQkFBTyxDQUFDLHNHQUEyQjtBQUN0RCxpQkFBaUIsbUJBQU8sQ0FBQyxrREFBUTtBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhbGl0eS1zcGFjZS9saWIvc3JjL25vZGUvdXRpbC9wYXJzZXIuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IEZyYWdtZW50XzEgPSByZXF1aXJlKFwiLi4vc3RvcmFnZS9tb2RlbC9GcmFnbWVudFwiKTtcbmNvbnN0IHhtbF9qc18xID0gcmVxdWlyZShcInhtbC1qc1wiKTtcbmZ1bmN0aW9uIHBhcnNlRnJhZ21lbnQoZnJhZ21lbnRYbWwpIHtcbiAgICBsZXQgY29udGFpbmVyID0geG1sX2pzXzEueG1sMmpzKGZyYWdtZW50WG1sKTtcbiAgICBsZXQgcm9vdEVsZW1lbnQgPSBjb250YWluZXIuZWxlbWVudHNbMF07XG4gICAgaWYgKCFyb290RWxlbWVudC5lbGVtZW50cykge1xuICAgICAgICByb290RWxlbWVudC5lbGVtZW50cyA9IFtdO1xuICAgIH1cbiAgICBsZXQgZW50aXRpZXMgPSByb290RWxlbWVudC5lbGVtZW50cztcbiAgICByZXR1cm4gbmV3IEZyYWdtZW50XzEuRnJhZ21lbnQoY29udGFpbmVyLCByb290RWxlbWVudCwgZW50aXRpZXMpO1xufVxuZXhwb3J0cy5wYXJzZUZyYWdtZW50ID0gcGFyc2VGcmFnbWVudDtcbmZ1bmN0aW9uIHBhcnNlUm9vdFNpZHMoZW50aXRpZXNYbWwpIHtcbiAgICBsZXQgY29udGFpbmVyID0geG1sX2pzXzEueG1sMmpzKGVudGl0aWVzWG1sKTtcbiAgICBsZXQgcm9vdEVsZW1lbnQgPSBjb250YWluZXIuZWxlbWVudHNbMF07XG4gICAgaWYgKCFyb290RWxlbWVudC5lbGVtZW50cykge1xuICAgICAgICByb290RWxlbWVudC5lbGVtZW50cyA9IFtdO1xuICAgIH1cbiAgICBsZXQgZW50aXRpZXMgPSByb290RWxlbWVudC5lbGVtZW50cztcbiAgICByZXR1cm4gZW50aXRpZXMubWFwKGVudGl0eSA9PiBlbnRpdHkuYXR0cmlidXRlcy5zaWQpO1xufVxuZXhwb3J0cy5wYXJzZVJvb3RTaWRzID0gcGFyc2VSb290U2lkcztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBhcnNlci5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/reality-space/lib/src/node/util/parser.js\n");

/***/ }),

/***/ "./node_modules/safe-buffer/index.js":
/*!*******************************************!*\
  !*** ./node_modules/safe-buffer/index.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* eslint-disable node/no-deprecated-api */\nvar buffer = __webpack_require__(/*! buffer */ \"./node_modules/node-libs-browser/node_modules/buffer/index.js\")\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc2FmZS1idWZmZXIvaW5kZXguanM/ODcwNyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBLGFBQWEsbUJBQU8sQ0FBQyw2RUFBUTtBQUM3Qjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9zYWZlLWJ1ZmZlci9pbmRleC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1kaXNhYmxlIG5vZGUvbm8tZGVwcmVjYXRlZC1hcGkgKi9cbnZhciBidWZmZXIgPSByZXF1aXJlKCdidWZmZXInKVxudmFyIEJ1ZmZlciA9IGJ1ZmZlci5CdWZmZXJcblxuLy8gYWx0ZXJuYXRpdmUgdG8gdXNpbmcgT2JqZWN0LmtleXMgZm9yIG9sZCBicm93c2Vyc1xuZnVuY3Rpb24gY29weVByb3BzIChzcmMsIGRzdCkge1xuICBmb3IgKHZhciBrZXkgaW4gc3JjKSB7XG4gICAgZHN0W2tleV0gPSBzcmNba2V5XVxuICB9XG59XG5pZiAoQnVmZmVyLmZyb20gJiYgQnVmZmVyLmFsbG9jICYmIEJ1ZmZlci5hbGxvY1Vuc2FmZSAmJiBCdWZmZXIuYWxsb2NVbnNhZmVTbG93KSB7XG4gIG1vZHVsZS5leHBvcnRzID0gYnVmZmVyXG59IGVsc2Uge1xuICAvLyBDb3B5IHByb3BlcnRpZXMgZnJvbSByZXF1aXJlKCdidWZmZXInKVxuICBjb3B5UHJvcHMoYnVmZmVyLCBleHBvcnRzKVxuICBleHBvcnRzLkJ1ZmZlciA9IFNhZmVCdWZmZXJcbn1cblxuZnVuY3Rpb24gU2FmZUJ1ZmZlciAoYXJnLCBlbmNvZGluZ09yT2Zmc2V0LCBsZW5ndGgpIHtcbiAgcmV0dXJuIEJ1ZmZlcihhcmcsIGVuY29kaW5nT3JPZmZzZXQsIGxlbmd0aClcbn1cblxuLy8gQ29weSBzdGF0aWMgbWV0aG9kcyBmcm9tIEJ1ZmZlclxuY29weVByb3BzKEJ1ZmZlciwgU2FmZUJ1ZmZlcilcblxuU2FmZUJ1ZmZlci5mcm9tID0gZnVuY3Rpb24gKGFyZywgZW5jb2RpbmdPck9mZnNldCwgbGVuZ3RoKSB7XG4gIGlmICh0eXBlb2YgYXJnID09PSAnbnVtYmVyJykge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0FyZ3VtZW50IG11c3Qgbm90IGJlIGEgbnVtYmVyJylcbiAgfVxuICByZXR1cm4gQnVmZmVyKGFyZywgZW5jb2RpbmdPck9mZnNldCwgbGVuZ3RoKVxufVxuXG5TYWZlQnVmZmVyLmFsbG9jID0gZnVuY3Rpb24gKHNpemUsIGZpbGwsIGVuY29kaW5nKSB7XG4gIGlmICh0eXBlb2Ygc2l6ZSAhPT0gJ251bWJlcicpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdBcmd1bWVudCBtdXN0IGJlIGEgbnVtYmVyJylcbiAgfVxuICB2YXIgYnVmID0gQnVmZmVyKHNpemUpXG4gIGlmIChmaWxsICE9PSB1bmRlZmluZWQpIHtcbiAgICBpZiAodHlwZW9mIGVuY29kaW5nID09PSAnc3RyaW5nJykge1xuICAgICAgYnVmLmZpbGwoZmlsbCwgZW5jb2RpbmcpXG4gICAgfSBlbHNlIHtcbiAgICAgIGJ1Zi5maWxsKGZpbGwpXG4gICAgfVxuICB9IGVsc2Uge1xuICAgIGJ1Zi5maWxsKDApXG4gIH1cbiAgcmV0dXJuIGJ1ZlxufVxuXG5TYWZlQnVmZmVyLmFsbG9jVW5zYWZlID0gZnVuY3Rpb24gKHNpemUpIHtcbiAgaWYgKHR5cGVvZiBzaXplICE9PSAnbnVtYmVyJykge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0FyZ3VtZW50IG11c3QgYmUgYSBudW1iZXInKVxuICB9XG4gIHJldHVybiBCdWZmZXIoc2l6ZSlcbn1cblxuU2FmZUJ1ZmZlci5hbGxvY1Vuc2FmZVNsb3cgPSBmdW5jdGlvbiAoc2l6ZSkge1xuICBpZiAodHlwZW9mIHNpemUgIT09ICdudW1iZXInKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignQXJndW1lbnQgbXVzdCBiZSBhIG51bWJlcicpXG4gIH1cbiAgcmV0dXJuIGJ1ZmZlci5TbG93QnVmZmVyKHNpemUpXG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/safe-buffer/index.js\n");

/***/ }),

/***/ "./node_modules/setimmediate/setImmediate.js":
/*!***************************************************!*\
  !*** ./node_modules/setimmediate/setImmediate.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global, process) {(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\"), __webpack_require__(/*! ./../process/browser.js */ \"./node_modules/process/browser.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/setimmediate/setImmediate.js\n");

/***/ }),

/***/ "./node_modules/stream-browserify/index.js":
/*!*************************************************!*\
  !*** ./node_modules/stream-browserify/index.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = Stream;\n\nvar EE = __webpack_require__(/*! events */ \"./node_modules/node-libs-browser/node_modules/events/events.js\").EventEmitter;\nvar inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\");\n\ninherits(Stream, EE);\nStream.Readable = __webpack_require__(/*! readable-stream/readable.js */ \"./node_modules/readable-stream/readable-browser.js\");\nStream.Writable = __webpack_require__(/*! readable-stream/writable.js */ \"./node_modules/readable-stream/writable-browser.js\");\nStream.Duplex = __webpack_require__(/*! readable-stream/duplex.js */ \"./node_modules/readable-stream/duplex-browser.js\");\nStream.Transform = __webpack_require__(/*! readable-stream/transform.js */ \"./node_modules/readable-stream/transform.js\");\nStream.PassThrough = __webpack_require__(/*! readable-stream/passthrough.js */ \"./node_modules/readable-stream/passthrough.js\");\n\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream;\n\n\n\n// old-style streams.  Note that the pipe method (the only relevant\n// part of this class) is overridden in the Readable class.\n\nfunction Stream() {\n  EE.call(this);\n}\n\nStream.prototype.pipe = function(dest, options) {\n  var source = this;\n\n  function ondata(chunk) {\n    if (dest.writable) {\n      if (false === dest.write(chunk) && source.pause) {\n        source.pause();\n      }\n    }\n  }\n\n  source.on('data', ondata);\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume();\n    }\n  }\n\n  dest.on('drain', ondrain);\n\n  // If the 'end' option is not supplied, dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end', onend);\n    source.on('close', onclose);\n  }\n\n  var didOnEnd = false;\n  function onend() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    dest.end();\n  }\n\n\n  function onclose() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    if (typeof dest.destroy === 'function') dest.destroy();\n  }\n\n  // don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup();\n    if (EE.listenerCount(this, 'error') === 0) {\n      throw er; // Unhandled stream error in pipe.\n    }\n  }\n\n  source.on('error', onerror);\n  dest.on('error', onerror);\n\n  // remove all the event listeners that were added.\n  function cleanup() {\n    source.removeListener('data', ondata);\n    dest.removeListener('drain', ondrain);\n\n    source.removeListener('end', onend);\n    source.removeListener('close', onclose);\n\n    source.removeListener('error', onerror);\n    dest.removeListener('error', onerror);\n\n    source.removeListener('end', cleanup);\n    source.removeListener('close', cleanup);\n\n    dest.removeListener('close', cleanup);\n  }\n\n  source.on('end', cleanup);\n  source.on('close', cleanup);\n\n  dest.on('close', cleanup);\n\n  dest.emit('pipe', source);\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc3RyZWFtLWJyb3dzZXJpZnkvaW5kZXguanM/ZDQ4NSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBLFNBQVMsbUJBQU8sQ0FBQyw4RUFBUTtBQUN6QixlQUFlLG1CQUFPLENBQUMsNkRBQVU7O0FBRWpDO0FBQ0Esa0JBQWtCLG1CQUFPLENBQUMsdUZBQTZCO0FBQ3ZELGtCQUFrQixtQkFBTyxDQUFDLHVGQUE2QjtBQUN2RCxnQkFBZ0IsbUJBQU8sQ0FBQyxtRkFBMkI7QUFDbkQsbUJBQW1CLG1CQUFPLENBQUMsaUZBQThCO0FBQ3pELHFCQUFxQixtQkFBTyxDQUFDLHFGQUFnQzs7QUFFN0Q7QUFDQTs7OztBQUlBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7O0FBR0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlO0FBQ2Y7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3RyZWFtLWJyb3dzZXJpZnkvaW5kZXguanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgSm95ZW50LCBJbmMuIGFuZCBvdGhlciBOb2RlIGNvbnRyaWJ1dG9ycy5cbi8vXG4vLyBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYVxuLy8gY29weSBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZVxuLy8gXCJTb2Z0d2FyZVwiKSwgdG8gZGVhbCBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nXG4vLyB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0cyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsXG4vLyBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbCBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0XG4vLyBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGVcbi8vIGZvbGxvd2luZyBjb25kaXRpb25zOlxuLy9cbi8vIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkXG4vLyBpbiBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cbi8vXG4vLyBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTXG4vLyBPUiBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GXG4vLyBNRVJDSEFOVEFCSUxJVFksIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOXG4vLyBOTyBFVkVOVCBTSEFMTCBUSEUgQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSxcbi8vIERBTUFHRVMgT1IgT1RIRVIgTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUlxuLy8gT1RIRVJXSVNFLCBBUklTSU5HIEZST00sIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRVxuLy8gVVNFIE9SIE9USEVSIERFQUxJTkdTIElOIFRIRSBTT0ZUV0FSRS5cblxubW9kdWxlLmV4cG9ydHMgPSBTdHJlYW07XG5cbnZhciBFRSA9IHJlcXVpcmUoJ2V2ZW50cycpLkV2ZW50RW1pdHRlcjtcbnZhciBpbmhlcml0cyA9IHJlcXVpcmUoJ2luaGVyaXRzJyk7XG5cbmluaGVyaXRzKFN0cmVhbSwgRUUpO1xuU3RyZWFtLlJlYWRhYmxlID0gcmVxdWlyZSgncmVhZGFibGUtc3RyZWFtL3JlYWRhYmxlLmpzJyk7XG5TdHJlYW0uV3JpdGFibGUgPSByZXF1aXJlKCdyZWFkYWJsZS1zdHJlYW0vd3JpdGFibGUuanMnKTtcblN0cmVhbS5EdXBsZXggPSByZXF1aXJlKCdyZWFkYWJsZS1zdHJlYW0vZHVwbGV4LmpzJyk7XG5TdHJlYW0uVHJhbnNmb3JtID0gcmVxdWlyZSgncmVhZGFibGUtc3RyZWFtL3RyYW5zZm9ybS5qcycpO1xuU3RyZWFtLlBhc3NUaHJvdWdoID0gcmVxdWlyZSgncmVhZGFibGUtc3RyZWFtL3Bhc3N0aHJvdWdoLmpzJyk7XG5cbi8vIEJhY2t3YXJkcy1jb21wYXQgd2l0aCBub2RlIDAuNC54XG5TdHJlYW0uU3RyZWFtID0gU3RyZWFtO1xuXG5cblxuLy8gb2xkLXN0eWxlIHN0cmVhbXMuICBOb3RlIHRoYXQgdGhlIHBpcGUgbWV0aG9kICh0aGUgb25seSByZWxldmFudFxuLy8gcGFydCBvZiB0aGlzIGNsYXNzKSBpcyBvdmVycmlkZGVuIGluIHRoZSBSZWFkYWJsZSBjbGFzcy5cblxuZnVuY3Rpb24gU3RyZWFtKCkge1xuICBFRS5jYWxsKHRoaXMpO1xufVxuXG5TdHJlYW0ucHJvdG90eXBlLnBpcGUgPSBmdW5jdGlvbihkZXN0LCBvcHRpb25zKSB7XG4gIHZhciBzb3VyY2UgPSB0aGlzO1xuXG4gIGZ1bmN0aW9uIG9uZGF0YShjaHVuaykge1xuICAgIGlmIChkZXN0LndyaXRhYmxlKSB7XG4gICAgICBpZiAoZmFsc2UgPT09IGRlc3Qud3JpdGUoY2h1bmspICYmIHNvdXJjZS5wYXVzZSkge1xuICAgICAgICBzb3VyY2UucGF1c2UoKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBzb3VyY2Uub24oJ2RhdGEnLCBvbmRhdGEpO1xuXG4gIGZ1bmN0aW9uIG9uZHJhaW4oKSB7XG4gICAgaWYgKHNvdXJjZS5yZWFkYWJsZSAmJiBzb3VyY2UucmVzdW1lKSB7XG4gICAgICBzb3VyY2UucmVzdW1lKCk7XG4gICAgfVxuICB9XG5cbiAgZGVzdC5vbignZHJhaW4nLCBvbmRyYWluKTtcblxuICAvLyBJZiB0aGUgJ2VuZCcgb3B0aW9uIGlzIG5vdCBzdXBwbGllZCwgZGVzdC5lbmQoKSB3aWxsIGJlIGNhbGxlZCB3aGVuXG4gIC8vIHNvdXJjZSBnZXRzIHRoZSAnZW5kJyBvciAnY2xvc2UnIGV2ZW50cy4gIE9ubHkgZGVzdC5lbmQoKSBvbmNlLlxuICBpZiAoIWRlc3QuX2lzU3RkaW8gJiYgKCFvcHRpb25zIHx8IG9wdGlvbnMuZW5kICE9PSBmYWxzZSkpIHtcbiAgICBzb3VyY2Uub24oJ2VuZCcsIG9uZW5kKTtcbiAgICBzb3VyY2Uub24oJ2Nsb3NlJywgb25jbG9zZSk7XG4gIH1cblxuICB2YXIgZGlkT25FbmQgPSBmYWxzZTtcbiAgZnVuY3Rpb24gb25lbmQoKSB7XG4gICAgaWYgKGRpZE9uRW5kKSByZXR1cm47XG4gICAgZGlkT25FbmQgPSB0cnVlO1xuXG4gICAgZGVzdC5lbmQoKTtcbiAgfVxuXG5cbiAgZnVuY3Rpb24gb25jbG9zZSgpIHtcbiAgICBpZiAoZGlkT25FbmQpIHJldHVybjtcbiAgICBkaWRPbkVuZCA9IHRydWU7XG5cbiAgICBpZiAodHlwZW9mIGRlc3QuZGVzdHJveSA9PT0gJ2Z1bmN0aW9uJykgZGVzdC5kZXN0cm95KCk7XG4gIH1cblxuICAvLyBkb24ndCBsZWF2ZSBkYW5nbGluZyBwaXBlcyB3aGVuIHRoZXJlIGFyZSBlcnJvcnMuXG4gIGZ1bmN0aW9uIG9uZXJyb3IoZXIpIHtcbiAgICBjbGVhbnVwKCk7XG4gICAgaWYgKEVFLmxpc3RlbmVyQ291bnQodGhpcywgJ2Vycm9yJykgPT09IDApIHtcbiAgICAgIHRocm93IGVyOyAvLyBVbmhhbmRsZWQgc3RyZWFtIGVycm9yIGluIHBpcGUuXG4gICAgfVxuICB9XG5cbiAgc291cmNlLm9uKCdlcnJvcicsIG9uZXJyb3IpO1xuICBkZXN0Lm9uKCdlcnJvcicsIG9uZXJyb3IpO1xuXG4gIC8vIHJlbW92ZSBhbGwgdGhlIGV2ZW50IGxpc3RlbmVycyB0aGF0IHdlcmUgYWRkZWQuXG4gIGZ1bmN0aW9uIGNsZWFudXAoKSB7XG4gICAgc291cmNlLnJlbW92ZUxpc3RlbmVyKCdkYXRhJywgb25kYXRhKTtcbiAgICBkZXN0LnJlbW92ZUxpc3RlbmVyKCdkcmFpbicsIG9uZHJhaW4pO1xuXG4gICAgc291cmNlLnJlbW92ZUxpc3RlbmVyKCdlbmQnLCBvbmVuZCk7XG4gICAgc291cmNlLnJlbW92ZUxpc3RlbmVyKCdjbG9zZScsIG9uY2xvc2UpO1xuXG4gICAgc291cmNlLnJlbW92ZUxpc3RlbmVyKCdlcnJvcicsIG9uZXJyb3IpO1xuICAgIGRlc3QucmVtb3ZlTGlzdGVuZXIoJ2Vycm9yJywgb25lcnJvcik7XG5cbiAgICBzb3VyY2UucmVtb3ZlTGlzdGVuZXIoJ2VuZCcsIGNsZWFudXApO1xuICAgIHNvdXJjZS5yZW1vdmVMaXN0ZW5lcignY2xvc2UnLCBjbGVhbnVwKTtcblxuICAgIGRlc3QucmVtb3ZlTGlzdGVuZXIoJ2Nsb3NlJywgY2xlYW51cCk7XG4gIH1cblxuICBzb3VyY2Uub24oJ2VuZCcsIGNsZWFudXApO1xuICBzb3VyY2Uub24oJ2Nsb3NlJywgY2xlYW51cCk7XG5cbiAgZGVzdC5vbignY2xvc2UnLCBjbGVhbnVwKTtcblxuICBkZXN0LmVtaXQoJ3BpcGUnLCBzb3VyY2UpO1xuXG4gIC8vIEFsbG93IGZvciB1bml4LWxpa2UgdXNhZ2U6IEEucGlwZShCKS5waXBlKEMpXG4gIHJldHVybiBkZXN0O1xufTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/stream-browserify/index.js\n");

/***/ }),

/***/ "./node_modules/string_decoder/lib/string_decoder.js":
/*!***********************************************************!*\
  !*** ./node_modules/string_decoder/lib/string_decoder.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n/*<replacement>*/\n\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"./node_modules/safe-buffer/index.js\").Buffer;\n/*</replacement>*/\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd';\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd';\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd';\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd';\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/string_decoder/lib/string_decoder.js\n");

/***/ }),

/***/ "./node_modules/util-deprecate/browser.js":
/*!************************************************!*\
  !*** ./node_modules/util-deprecate/browser.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global) {\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdXRpbC1kZXByZWNhdGUvYnJvd3Nlci5qcz9iN2QxIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxTQUFTO0FBQ3BCLFdBQVcsT0FBTztBQUNsQixhQUFhLFNBQVM7QUFDdEI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixhQUFhO0FBQ2I7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXRpbC1kZXByZWNhdGUvYnJvd3Nlci5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuLyoqXG4gKiBNb2R1bGUgZXhwb3J0cy5cbiAqL1xuXG5tb2R1bGUuZXhwb3J0cyA9IGRlcHJlY2F0ZTtcblxuLyoqXG4gKiBNYXJrIHRoYXQgYSBtZXRob2Qgc2hvdWxkIG5vdCBiZSB1c2VkLlxuICogUmV0dXJucyBhIG1vZGlmaWVkIGZ1bmN0aW9uIHdoaWNoIHdhcm5zIG9uY2UgYnkgZGVmYXVsdC5cbiAqXG4gKiBJZiBgbG9jYWxTdG9yYWdlLm5vRGVwcmVjYXRpb24gPSB0cnVlYCBpcyBzZXQsIHRoZW4gaXQgaXMgYSBuby1vcC5cbiAqXG4gKiBJZiBgbG9jYWxTdG9yYWdlLnRocm93RGVwcmVjYXRpb24gPSB0cnVlYCBpcyBzZXQsIHRoZW4gZGVwcmVjYXRlZCBmdW5jdGlvbnNcbiAqIHdpbGwgdGhyb3cgYW4gRXJyb3Igd2hlbiBpbnZva2VkLlxuICpcbiAqIElmIGBsb2NhbFN0b3JhZ2UudHJhY2VEZXByZWNhdGlvbiA9IHRydWVgIGlzIHNldCwgdGhlbiBkZXByZWNhdGVkIGZ1bmN0aW9uc1xuICogd2lsbCBpbnZva2UgYGNvbnNvbGUudHJhY2UoKWAgaW5zdGVhZCBvZiBgY29uc29sZS5lcnJvcigpYC5cbiAqXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBmbiAtIHRoZSBmdW5jdGlvbiB0byBkZXByZWNhdGVcbiAqIEBwYXJhbSB7U3RyaW5nfSBtc2cgLSB0aGUgc3RyaW5nIHRvIHByaW50IHRvIHRoZSBjb25zb2xlIHdoZW4gYGZuYCBpcyBpbnZva2VkXG4gKiBAcmV0dXJucyB7RnVuY3Rpb259IGEgbmV3IFwiZGVwcmVjYXRlZFwiIHZlcnNpb24gb2YgYGZuYFxuICogQGFwaSBwdWJsaWNcbiAqL1xuXG5mdW5jdGlvbiBkZXByZWNhdGUgKGZuLCBtc2cpIHtcbiAgaWYgKGNvbmZpZygnbm9EZXByZWNhdGlvbicpKSB7XG4gICAgcmV0dXJuIGZuO1xuICB9XG5cbiAgdmFyIHdhcm5lZCA9IGZhbHNlO1xuICBmdW5jdGlvbiBkZXByZWNhdGVkKCkge1xuICAgIGlmICghd2FybmVkKSB7XG4gICAgICBpZiAoY29uZmlnKCd0aHJvd0RlcHJlY2F0aW9uJykpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKG1zZyk7XG4gICAgICB9IGVsc2UgaWYgKGNvbmZpZygndHJhY2VEZXByZWNhdGlvbicpKSB7XG4gICAgICAgIGNvbnNvbGUudHJhY2UobXNnKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNvbnNvbGUud2Fybihtc2cpO1xuICAgICAgfVxuICAgICAgd2FybmVkID0gdHJ1ZTtcbiAgICB9XG4gICAgcmV0dXJuIGZuLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gIH1cblxuICByZXR1cm4gZGVwcmVjYXRlZDtcbn1cblxuLyoqXG4gKiBDaGVja3MgYGxvY2FsU3RvcmFnZWAgZm9yIGJvb2xlYW4gdmFsdWVzIGZvciB0aGUgZ2l2ZW4gYG5hbWVgLlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBuYW1lXG4gKiBAcmV0dXJucyB7Qm9vbGVhbn1cbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cbmZ1bmN0aW9uIGNvbmZpZyAobmFtZSkge1xuICAvLyBhY2Nlc3NpbmcgZ2xvYmFsLmxvY2FsU3RvcmFnZSBjYW4gdHJpZ2dlciBhIERPTUV4Y2VwdGlvbiBpbiBzYW5kYm94ZWQgaWZyYW1lc1xuICB0cnkge1xuICAgIGlmICghZ2xvYmFsLmxvY2FsU3RvcmFnZSkgcmV0dXJuIGZhbHNlO1xuICB9IGNhdGNoIChfKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIHZhciB2YWwgPSBnbG9iYWwubG9jYWxTdG9yYWdlW25hbWVdO1xuICBpZiAobnVsbCA9PSB2YWwpIHJldHVybiBmYWxzZTtcbiAgcmV0dXJuIFN0cmluZyh2YWwpLnRvTG93ZXJDYXNlKCkgPT09ICd0cnVlJztcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/util-deprecate/browser.js\n");

/***/ }),

/***/ "./node_modules/uuid/index.js":
/*!************************************!*\
  !*** ./node_modules/uuid/index.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var v1 = __webpack_require__(/*! ./v1 */ \"./node_modules/uuid/v1.js\");\nvar v4 = __webpack_require__(/*! ./v4 */ \"./node_modules/uuid/v4.js\");\n\nvar uuid = v4;\nuuid.v1 = v1;\nuuid.v4 = v4;\n\nmodule.exports = uuid;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdXVpZC9pbmRleC5qcz8xMWMxIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLFNBQVMsbUJBQU8sQ0FBQyx1Q0FBTTtBQUN2QixTQUFTLG1CQUFPLENBQUMsdUNBQU07O0FBRXZCO0FBQ0E7QUFDQTs7QUFFQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy91dWlkL2luZGV4LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIHYxID0gcmVxdWlyZSgnLi92MScpO1xudmFyIHY0ID0gcmVxdWlyZSgnLi92NCcpO1xuXG52YXIgdXVpZCA9IHY0O1xudXVpZC52MSA9IHYxO1xudXVpZC52NCA9IHY0O1xuXG5tb2R1bGUuZXhwb3J0cyA9IHV1aWQ7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/uuid/index.js\n");

/***/ }),

/***/ "./node_modules/uuid/lib/bytesToUuid.js":
/*!**********************************************!*\
  !*** ./node_modules/uuid/lib/bytesToUuid.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([bth[buf[i++]], bth[buf[i++]], \n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]]]).join('');\n}\n\nmodule.exports = bytesToUuid;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdXVpZC9saWIvYnl0ZXNUb1V1aWQuanM/MjM2NiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxTQUFTO0FBQ3hCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXVpZC9saWIvYnl0ZXNUb1V1aWQuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvbnZlcnQgYXJyYXkgb2YgMTYgYnl0ZSB2YWx1ZXMgdG8gVVVJRCBzdHJpbmcgZm9ybWF0IG9mIHRoZSBmb3JtOlxuICogWFhYWFhYWFgtWFhYWC1YWFhYLVhYWFgtWFhYWFhYWFhYWFhYXG4gKi9cbnZhciBieXRlVG9IZXggPSBbXTtcbmZvciAodmFyIGkgPSAwOyBpIDwgMjU2OyArK2kpIHtcbiAgYnl0ZVRvSGV4W2ldID0gKGkgKyAweDEwMCkudG9TdHJpbmcoMTYpLnN1YnN0cigxKTtcbn1cblxuZnVuY3Rpb24gYnl0ZXNUb1V1aWQoYnVmLCBvZmZzZXQpIHtcbiAgdmFyIGkgPSBvZmZzZXQgfHwgMDtcbiAgdmFyIGJ0aCA9IGJ5dGVUb0hleDtcbiAgLy8gam9pbiB1c2VkIHRvIGZpeCBtZW1vcnkgaXNzdWUgY2F1c2VkIGJ5IGNvbmNhdGVuYXRpb246IGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTMxNzUjYzRcbiAgcmV0dXJuIChbYnRoW2J1ZltpKytdXSwgYnRoW2J1ZltpKytdXSwgXG5cdGJ0aFtidWZbaSsrXV0sIGJ0aFtidWZbaSsrXV0sICctJyxcblx0YnRoW2J1ZltpKytdXSwgYnRoW2J1ZltpKytdXSwgJy0nLFxuXHRidGhbYnVmW2krK11dLCBidGhbYnVmW2krK11dLCAnLScsXG5cdGJ0aFtidWZbaSsrXV0sIGJ0aFtidWZbaSsrXV0sICctJyxcblx0YnRoW2J1ZltpKytdXSwgYnRoW2J1ZltpKytdXSxcblx0YnRoW2J1ZltpKytdXSwgYnRoW2J1ZltpKytdXSxcblx0YnRoW2J1ZltpKytdXSwgYnRoW2J1ZltpKytdXV0pLmpvaW4oJycpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGJ5dGVzVG9VdWlkO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/uuid/lib/bytesToUuid.js\n");

/***/ }),

/***/ "./node_modules/uuid/lib/rng-browser.js":
/*!**********************************************!*\
  !*** ./node_modules/uuid/lib/rng-browser.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n// implementation. Also, find the complete implementation of crypto on IE11.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdXVpZC9saWIvcm5nLWJyb3dzZXIuanM/ZTFmNCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsaUNBQWlDOztBQUVqQztBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0Esc0JBQXNCLFFBQVE7QUFDOUI7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy91dWlkL2xpYi9ybmctYnJvd3Nlci5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIFVuaXF1ZSBJRCBjcmVhdGlvbiByZXF1aXJlcyBhIGhpZ2ggcXVhbGl0eSByYW5kb20gIyBnZW5lcmF0b3IuICBJbiB0aGVcbi8vIGJyb3dzZXIgdGhpcyBpcyBhIGxpdHRsZSBjb21wbGljYXRlZCBkdWUgdG8gdW5rbm93biBxdWFsaXR5IG9mIE1hdGgucmFuZG9tKClcbi8vIGFuZCBpbmNvbnNpc3RlbnQgc3VwcG9ydCBmb3IgdGhlIGBjcnlwdG9gIEFQSS4gIFdlIGRvIHRoZSBiZXN0IHdlIGNhbiB2aWFcbi8vIGZlYXR1cmUtZGV0ZWN0aW9uXG5cbi8vIGdldFJhbmRvbVZhbHVlcyBuZWVkcyB0byBiZSBpbnZva2VkIGluIGEgY29udGV4dCB3aGVyZSBcInRoaXNcIiBpcyBhIENyeXB0b1xuLy8gaW1wbGVtZW50YXRpb24uIEFsc28sIGZpbmQgdGhlIGNvbXBsZXRlIGltcGxlbWVudGF0aW9uIG9mIGNyeXB0byBvbiBJRTExLlxudmFyIGdldFJhbmRvbVZhbHVlcyA9ICh0eXBlb2YoY3J5cHRvKSAhPSAndW5kZWZpbmVkJyAmJiBjcnlwdG8uZ2V0UmFuZG9tVmFsdWVzICYmIGNyeXB0by5nZXRSYW5kb21WYWx1ZXMuYmluZChjcnlwdG8pKSB8fFxuICAgICAgICAgICAgICAgICAgICAgICh0eXBlb2YobXNDcnlwdG8pICE9ICd1bmRlZmluZWQnICYmIHR5cGVvZiB3aW5kb3cubXNDcnlwdG8uZ2V0UmFuZG9tVmFsdWVzID09ICdmdW5jdGlvbicgJiYgbXNDcnlwdG8uZ2V0UmFuZG9tVmFsdWVzLmJpbmQobXNDcnlwdG8pKTtcblxuaWYgKGdldFJhbmRvbVZhbHVlcykge1xuICAvLyBXSEFUV0cgY3J5cHRvIFJORyAtIGh0dHA6Ly93aWtpLndoYXR3Zy5vcmcvd2lraS9DcnlwdG9cbiAgdmFyIHJuZHM4ID0gbmV3IFVpbnQ4QXJyYXkoMTYpOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXVuZGVmXG5cbiAgbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiB3aGF0d2dSTkcoKSB7XG4gICAgZ2V0UmFuZG9tVmFsdWVzKHJuZHM4KTtcbiAgICByZXR1cm4gcm5kczg7XG4gIH07XG59IGVsc2Uge1xuICAvLyBNYXRoLnJhbmRvbSgpLWJhc2VkIChSTkcpXG4gIC8vXG4gIC8vIElmIGFsbCBlbHNlIGZhaWxzLCB1c2UgTWF0aC5yYW5kb20oKS4gIEl0J3MgZmFzdCwgYnV0IGlzIG9mIHVuc3BlY2lmaWVkXG4gIC8vIHF1YWxpdHkuXG4gIHZhciBybmRzID0gbmV3IEFycmF5KDE2KTtcblxuICBtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIG1hdGhSTkcoKSB7XG4gICAgZm9yICh2YXIgaSA9IDAsIHI7IGkgPCAxNjsgaSsrKSB7XG4gICAgICBpZiAoKGkgJiAweDAzKSA9PT0gMCkgciA9IE1hdGgucmFuZG9tKCkgKiAweDEwMDAwMDAwMDtcbiAgICAgIHJuZHNbaV0gPSByID4+PiAoKGkgJiAweDAzKSA8PCAzKSAmIDB4ZmY7XG4gICAgfVxuXG4gICAgcmV0dXJuIHJuZHM7XG4gIH07XG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/uuid/lib/rng-browser.js\n");

/***/ }),

/***/ "./node_modules/uuid/v1.js":
/*!*********************************!*\
  !*** ./node_modules/uuid/v1.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var rng = __webpack_require__(/*! ./lib/rng */ \"./node_modules/uuid/lib/rng-browser.js\");\nvar bytesToUuid = __webpack_require__(/*! ./lib/bytesToUuid */ \"./node_modules/uuid/lib/bytesToUuid.js\");\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\nvar _clockseq;\n\n// Previous uuid creation time\nvar _lastMSecs = 0;\nvar _lastNSecs = 0;\n\n// See https://github.com/broofa/node-uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n  if (node == null || clockseq == null) {\n    var seedBytes = rng();\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [\n        seedBytes[0] | 0x01,\n        seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]\n      ];\n    }\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  }\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : bytesToUuid(b);\n}\n\nmodule.exports = v1;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdXVpZC92MS5qcz9jNDM3Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLFVBQVUsbUJBQU8sQ0FBQyx5REFBVztBQUM3QixrQkFBa0IsbUJBQU8sQ0FBQyxpRUFBbUI7O0FBRTdDO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxtQ0FBbUM7QUFDbkM7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0EsaUJBQWlCLE9BQU87QUFDeEI7QUFDQTs7QUFFQTtBQUNBOztBQUVBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL3V1aWQvdjEuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgcm5nID0gcmVxdWlyZSgnLi9saWIvcm5nJyk7XG52YXIgYnl0ZXNUb1V1aWQgPSByZXF1aXJlKCcuL2xpYi9ieXRlc1RvVXVpZCcpO1xuXG4vLyAqKmB2MSgpYCAtIEdlbmVyYXRlIHRpbWUtYmFzZWQgVVVJRCoqXG4vL1xuLy8gSW5zcGlyZWQgYnkgaHR0cHM6Ly9naXRodWIuY29tL0xpb3NLL1VVSUQuanNcbi8vIGFuZCBodHRwOi8vZG9jcy5weXRob24ub3JnL2xpYnJhcnkvdXVpZC5odG1sXG5cbnZhciBfbm9kZUlkO1xudmFyIF9jbG9ja3NlcTtcblxuLy8gUHJldmlvdXMgdXVpZCBjcmVhdGlvbiB0aW1lXG52YXIgX2xhc3RNU2VjcyA9IDA7XG52YXIgX2xhc3ROU2VjcyA9IDA7XG5cbi8vIFNlZSBodHRwczovL2dpdGh1Yi5jb20vYnJvb2ZhL25vZGUtdXVpZCBmb3IgQVBJIGRldGFpbHNcbmZ1bmN0aW9uIHYxKG9wdGlvbnMsIGJ1Ziwgb2Zmc2V0KSB7XG4gIHZhciBpID0gYnVmICYmIG9mZnNldCB8fCAwO1xuICB2YXIgYiA9IGJ1ZiB8fCBbXTtcblxuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgdmFyIG5vZGUgPSBvcHRpb25zLm5vZGUgfHwgX25vZGVJZDtcbiAgdmFyIGNsb2Nrc2VxID0gb3B0aW9ucy5jbG9ja3NlcSAhPT0gdW5kZWZpbmVkID8gb3B0aW9ucy5jbG9ja3NlcSA6IF9jbG9ja3NlcTtcblxuICAvLyBub2RlIGFuZCBjbG9ja3NlcSBuZWVkIHRvIGJlIGluaXRpYWxpemVkIHRvIHJhbmRvbSB2YWx1ZXMgaWYgdGhleSdyZSBub3RcbiAgLy8gc3BlY2lmaWVkLiAgV2UgZG8gdGhpcyBsYXppbHkgdG8gbWluaW1pemUgaXNzdWVzIHJlbGF0ZWQgdG8gaW5zdWZmaWNpZW50XG4gIC8vIHN5c3RlbSBlbnRyb3B5LiAgU2VlICMxODlcbiAgaWYgKG5vZGUgPT0gbnVsbCB8fCBjbG9ja3NlcSA9PSBudWxsKSB7XG4gICAgdmFyIHNlZWRCeXRlcyA9IHJuZygpO1xuICAgIGlmIChub2RlID09IG51bGwpIHtcbiAgICAgIC8vIFBlciA0LjUsIGNyZWF0ZSBhbmQgNDgtYml0IG5vZGUgaWQsICg0NyByYW5kb20gYml0cyArIG11bHRpY2FzdCBiaXQgPSAxKVxuICAgICAgbm9kZSA9IF9ub2RlSWQgPSBbXG4gICAgICAgIHNlZWRCeXRlc1swXSB8IDB4MDEsXG4gICAgICAgIHNlZWRCeXRlc1sxXSwgc2VlZEJ5dGVzWzJdLCBzZWVkQnl0ZXNbM10sIHNlZWRCeXRlc1s0XSwgc2VlZEJ5dGVzWzVdXG4gICAgICBdO1xuICAgIH1cbiAgICBpZiAoY2xvY2tzZXEgPT0gbnVsbCkge1xuICAgICAgLy8gUGVyIDQuMi4yLCByYW5kb21pemUgKDE0IGJpdCkgY2xvY2tzZXFcbiAgICAgIGNsb2Nrc2VxID0gX2Nsb2Nrc2VxID0gKHNlZWRCeXRlc1s2XSA8PCA4IHwgc2VlZEJ5dGVzWzddKSAmIDB4M2ZmZjtcbiAgICB9XG4gIH1cblxuICAvLyBVVUlEIHRpbWVzdGFtcHMgYXJlIDEwMCBuYW5vLXNlY29uZCB1bml0cyBzaW5jZSB0aGUgR3JlZ29yaWFuIGVwb2NoLFxuICAvLyAoMTU4Mi0xMC0xNSAwMDowMCkuICBKU051bWJlcnMgYXJlbid0IHByZWNpc2UgZW5vdWdoIGZvciB0aGlzLCBzb1xuICAvLyB0aW1lIGlzIGhhbmRsZWQgaW50ZXJuYWxseSBhcyAnbXNlY3MnIChpbnRlZ2VyIG1pbGxpc2Vjb25kcykgYW5kICduc2VjcydcbiAgLy8gKDEwMC1uYW5vc2Vjb25kcyBvZmZzZXQgZnJvbSBtc2Vjcykgc2luY2UgdW5peCBlcG9jaCwgMTk3MC0wMS0wMSAwMDowMC5cbiAgdmFyIG1zZWNzID0gb3B0aW9ucy5tc2VjcyAhPT0gdW5kZWZpbmVkID8gb3B0aW9ucy5tc2VjcyA6IG5ldyBEYXRlKCkuZ2V0VGltZSgpO1xuXG4gIC8vIFBlciA0LjIuMS4yLCB1c2UgY291bnQgb2YgdXVpZCdzIGdlbmVyYXRlZCBkdXJpbmcgdGhlIGN1cnJlbnQgY2xvY2tcbiAgLy8gY3ljbGUgdG8gc2ltdWxhdGUgaGlnaGVyIHJlc29sdXRpb24gY2xvY2tcbiAgdmFyIG5zZWNzID0gb3B0aW9ucy5uc2VjcyAhPT0gdW5kZWZpbmVkID8gb3B0aW9ucy5uc2VjcyA6IF9sYXN0TlNlY3MgKyAxO1xuXG4gIC8vIFRpbWUgc2luY2UgbGFzdCB1dWlkIGNyZWF0aW9uIChpbiBtc2VjcylcbiAgdmFyIGR0ID0gKG1zZWNzIC0gX2xhc3RNU2VjcykgKyAobnNlY3MgLSBfbGFzdE5TZWNzKS8xMDAwMDtcblxuICAvLyBQZXIgNC4yLjEuMiwgQnVtcCBjbG9ja3NlcSBvbiBjbG9jayByZWdyZXNzaW9uXG4gIGlmIChkdCA8IDAgJiYgb3B0aW9ucy5jbG9ja3NlcSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgY2xvY2tzZXEgPSBjbG9ja3NlcSArIDEgJiAweDNmZmY7XG4gIH1cblxuICAvLyBSZXNldCBuc2VjcyBpZiBjbG9jayByZWdyZXNzZXMgKG5ldyBjbG9ja3NlcSkgb3Igd2UndmUgbW92ZWQgb250byBhIG5ld1xuICAvLyB0aW1lIGludGVydmFsXG4gIGlmICgoZHQgPCAwIHx8IG1zZWNzID4gX2xhc3RNU2VjcykgJiYgb3B0aW9ucy5uc2VjcyA9PT0gdW5kZWZpbmVkKSB7XG4gICAgbnNlY3MgPSAwO1xuICB9XG5cbiAgLy8gUGVyIDQuMi4xLjIgVGhyb3cgZXJyb3IgaWYgdG9vIG1hbnkgdXVpZHMgYXJlIHJlcXVlc3RlZFxuICBpZiAobnNlY3MgPj0gMTAwMDApIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ3V1aWQudjEoKTogQ2FuXFwndCBjcmVhdGUgbW9yZSB0aGFuIDEwTSB1dWlkcy9zZWMnKTtcbiAgfVxuXG4gIF9sYXN0TVNlY3MgPSBtc2VjcztcbiAgX2xhc3ROU2VjcyA9IG5zZWNzO1xuICBfY2xvY2tzZXEgPSBjbG9ja3NlcTtcblxuICAvLyBQZXIgNC4xLjQgLSBDb252ZXJ0IGZyb20gdW5peCBlcG9jaCB0byBHcmVnb3JpYW4gZXBvY2hcbiAgbXNlY3MgKz0gMTIyMTkyOTI4MDAwMDA7XG5cbiAgLy8gYHRpbWVfbG93YFxuICB2YXIgdGwgPSAoKG1zZWNzICYgMHhmZmZmZmZmKSAqIDEwMDAwICsgbnNlY3MpICUgMHgxMDAwMDAwMDA7XG4gIGJbaSsrXSA9IHRsID4+PiAyNCAmIDB4ZmY7XG4gIGJbaSsrXSA9IHRsID4+PiAxNiAmIDB4ZmY7XG4gIGJbaSsrXSA9IHRsID4+PiA4ICYgMHhmZjtcbiAgYltpKytdID0gdGwgJiAweGZmO1xuXG4gIC8vIGB0aW1lX21pZGBcbiAgdmFyIHRtaCA9IChtc2VjcyAvIDB4MTAwMDAwMDAwICogMTAwMDApICYgMHhmZmZmZmZmO1xuICBiW2krK10gPSB0bWggPj4+IDggJiAweGZmO1xuICBiW2krK10gPSB0bWggJiAweGZmO1xuXG4gIC8vIGB0aW1lX2hpZ2hfYW5kX3ZlcnNpb25gXG4gIGJbaSsrXSA9IHRtaCA+Pj4gMjQgJiAweGYgfCAweDEwOyAvLyBpbmNsdWRlIHZlcnNpb25cbiAgYltpKytdID0gdG1oID4+PiAxNiAmIDB4ZmY7XG5cbiAgLy8gYGNsb2NrX3NlcV9oaV9hbmRfcmVzZXJ2ZWRgIChQZXIgNC4yLjIgLSBpbmNsdWRlIHZhcmlhbnQpXG4gIGJbaSsrXSA9IGNsb2Nrc2VxID4+PiA4IHwgMHg4MDtcblxuICAvLyBgY2xvY2tfc2VxX2xvd2BcbiAgYltpKytdID0gY2xvY2tzZXEgJiAweGZmO1xuXG4gIC8vIGBub2RlYFxuICBmb3IgKHZhciBuID0gMDsgbiA8IDY7ICsrbikge1xuICAgIGJbaSArIG5dID0gbm9kZVtuXTtcbiAgfVxuXG4gIHJldHVybiBidWYgPyBidWYgOiBieXRlc1RvVXVpZChiKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB2MTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/uuid/v1.js\n");

/***/ }),

/***/ "./node_modules/uuid/v4.js":
/*!*********************************!*\
  !*** ./node_modules/uuid/v4.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var rng = __webpack_require__(/*! ./lib/rng */ \"./node_modules/uuid/lib/rng-browser.js\");\nvar bytesToUuid = __webpack_require__(/*! ./lib/bytesToUuid */ \"./node_modules/uuid/lib/bytesToUuid.js\");\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdXVpZC92NC5qcz9jNjRlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLFVBQVUsbUJBQU8sQ0FBQyx5REFBVztBQUM3QixrQkFBa0IsbUJBQU8sQ0FBQyxpRUFBbUI7O0FBRTdDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLG9CQUFvQixTQUFTO0FBQzdCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL3V1aWQvdjQuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgcm5nID0gcmVxdWlyZSgnLi9saWIvcm5nJyk7XG52YXIgYnl0ZXNUb1V1aWQgPSByZXF1aXJlKCcuL2xpYi9ieXRlc1RvVXVpZCcpO1xuXG5mdW5jdGlvbiB2NChvcHRpb25zLCBidWYsIG9mZnNldCkge1xuICB2YXIgaSA9IGJ1ZiAmJiBvZmZzZXQgfHwgMDtcblxuICBpZiAodHlwZW9mKG9wdGlvbnMpID09ICdzdHJpbmcnKSB7XG4gICAgYnVmID0gb3B0aW9ucyA9PT0gJ2JpbmFyeScgPyBuZXcgQXJyYXkoMTYpIDogbnVsbDtcbiAgICBvcHRpb25zID0gbnVsbDtcbiAgfVxuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcblxuICB2YXIgcm5kcyA9IG9wdGlvbnMucmFuZG9tIHx8IChvcHRpb25zLnJuZyB8fCBybmcpKCk7XG5cbiAgLy8gUGVyIDQuNCwgc2V0IGJpdHMgZm9yIHZlcnNpb24gYW5kIGBjbG9ja19zZXFfaGlfYW5kX3Jlc2VydmVkYFxuICBybmRzWzZdID0gKHJuZHNbNl0gJiAweDBmKSB8IDB4NDA7XG4gIHJuZHNbOF0gPSAocm5kc1s4XSAmIDB4M2YpIHwgMHg4MDtcblxuICAvLyBDb3B5IGJ5dGVzIHRvIGJ1ZmZlciwgaWYgcHJvdmlkZWRcbiAgaWYgKGJ1Zikge1xuICAgIGZvciAodmFyIGlpID0gMDsgaWkgPCAxNjsgKytpaSkge1xuICAgICAgYnVmW2kgKyBpaV0gPSBybmRzW2lpXTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gYnVmIHx8IGJ5dGVzVG9VdWlkKHJuZHMpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHY0O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/uuid/v4.js\n");

/***/ }),

/***/ "./node_modules/webpack/buildin/global.js":
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\r\n} catch (e) {\r\n\t// This works if the window reference is available\r\n\tif (typeof window === \"object\") g = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spL2J1aWxkaW4vZ2xvYmFsLmpzP2NkMDAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSw0Q0FBNEM7O0FBRTVDIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL3dlYnBhY2svYnVpbGRpbi9nbG9iYWwuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZztcclxuXHJcbi8vIFRoaXMgd29ya3MgaW4gbm9uLXN0cmljdCBtb2RlXHJcbmcgPSAoZnVuY3Rpb24oKSB7XHJcblx0cmV0dXJuIHRoaXM7XHJcbn0pKCk7XHJcblxyXG50cnkge1xyXG5cdC8vIFRoaXMgd29ya3MgaWYgZXZhbCBpcyBhbGxvd2VkIChzZWUgQ1NQKVxyXG5cdGcgPSBnIHx8IEZ1bmN0aW9uKFwicmV0dXJuIHRoaXNcIikoKSB8fCAoMSwgZXZhbCkoXCJ0aGlzXCIpO1xyXG59IGNhdGNoIChlKSB7XHJcblx0Ly8gVGhpcyB3b3JrcyBpZiB0aGUgd2luZG93IHJlZmVyZW5jZSBpcyBhdmFpbGFibGVcclxuXHRpZiAodHlwZW9mIHdpbmRvdyA9PT0gXCJvYmplY3RcIikgZyA9IHdpbmRvdztcclxufVxyXG5cclxuLy8gZyBjYW4gc3RpbGwgYmUgdW5kZWZpbmVkLCBidXQgbm90aGluZyB0byBkbyBhYm91dCBpdC4uLlxyXG4vLyBXZSByZXR1cm4gdW5kZWZpbmVkLCBpbnN0ZWFkIG9mIG5vdGhpbmcgaGVyZSwgc28gaXQnc1xyXG4vLyBlYXNpZXIgdG8gaGFuZGxlIHRoaXMgY2FzZS4gaWYoIWdsb2JhbCkgeyAuLi59XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IGc7XHJcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/webpack/buildin/global.js\n");

/***/ }),

/***/ "./node_modules/whatwg-fetch/fetch.js":
/*!********************************************!*\
  !*** ./node_modules/whatwg-fetch/fetch.js ***!
  \********************************************/
/*! exports provided: Headers, Request, Response, DOMException, fetch */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Headers\", function() { return Headers; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Request\", function() { return Request; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Response\", function() { return Response; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DOMException\", function() { return DOMException; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"fetch\", function() { return fetch; });\nvar support = {\n  searchParams: 'URLSearchParams' in self,\n  iterable: 'Symbol' in self && 'iterator' in Symbol,\n  blob:\n    'FileReader' in self &&\n    'Blob' in self &&\n    (function() {\n      try {\n        new Blob()\n        return true\n      } catch (e) {\n        return false\n      }\n    })(),\n  formData: 'FormData' in self,\n  arrayBuffer: 'ArrayBuffer' in self\n}\n\nfunction isDataView(obj) {\n  return obj && DataView.prototype.isPrototypeOf(obj)\n}\n\nif (support.arrayBuffer) {\n  var viewClasses = [\n    '[object Int8Array]',\n    '[object Uint8Array]',\n    '[object Uint8ClampedArray]',\n    '[object Int16Array]',\n    '[object Uint16Array]',\n    '[object Int32Array]',\n    '[object Uint32Array]',\n    '[object Float32Array]',\n    '[object Float64Array]'\n  ]\n\n  var isArrayBufferView =\n    ArrayBuffer.isView ||\n    function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n}\n\nfunction normalizeName(name) {\n  if (typeof name !== 'string') {\n    name = String(name)\n  }\n  if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n    throw new TypeError('Invalid character in header field name')\n  }\n  return name.toLowerCase()\n}\n\nfunction normalizeValue(value) {\n  if (typeof value !== 'string') {\n    value = String(value)\n  }\n  return value\n}\n\n// Build a destructive iterator for the value list\nfunction iteratorFor(items) {\n  var iterator = {\n    next: function() {\n      var value = items.shift()\n      return {done: value === undefined, value: value}\n    }\n  }\n\n  if (support.iterable) {\n    iterator[Symbol.iterator] = function() {\n      return iterator\n    }\n  }\n\n  return iterator\n}\n\nfunction Headers(headers) {\n  this.map = {}\n\n  if (headers instanceof Headers) {\n    headers.forEach(function(value, name) {\n      this.append(name, value)\n    }, this)\n  } else if (Array.isArray(headers)) {\n    headers.forEach(function(header) {\n      this.append(header[0], header[1])\n    }, this)\n  } else if (headers) {\n    Object.getOwnPropertyNames(headers).forEach(function(name) {\n      this.append(name, headers[name])\n    }, this)\n  }\n}\n\nHeaders.prototype.append = function(name, value) {\n  name = normalizeName(name)\n  value = normalizeValue(value)\n  var oldValue = this.map[name]\n  this.map[name] = oldValue ? oldValue + ', ' + value : value\n}\n\nHeaders.prototype['delete'] = function(name) {\n  delete this.map[normalizeName(name)]\n}\n\nHeaders.prototype.get = function(name) {\n  name = normalizeName(name)\n  return this.has(name) ? this.map[name] : null\n}\n\nHeaders.prototype.has = function(name) {\n  return this.map.hasOwnProperty(normalizeName(name))\n}\n\nHeaders.prototype.set = function(name, value) {\n  this.map[normalizeName(name)] = normalizeValue(value)\n}\n\nHeaders.prototype.forEach = function(callback, thisArg) {\n  for (var name in this.map) {\n    if (this.map.hasOwnProperty(name)) {\n      callback.call(thisArg, this.map[name], name, this)\n    }\n  }\n}\n\nHeaders.prototype.keys = function() {\n  var items = []\n  this.forEach(function(value, name) {\n    items.push(name)\n  })\n  return iteratorFor(items)\n}\n\nHeaders.prototype.values = function() {\n  var items = []\n  this.forEach(function(value) {\n    items.push(value)\n  })\n  return iteratorFor(items)\n}\n\nHeaders.prototype.entries = function() {\n  var items = []\n  this.forEach(function(value, name) {\n    items.push([name, value])\n  })\n  return iteratorFor(items)\n}\n\nif (support.iterable) {\n  Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n}\n\nfunction consumed(body) {\n  if (body.bodyUsed) {\n    return Promise.reject(new TypeError('Already read'))\n  }\n  body.bodyUsed = true\n}\n\nfunction fileReaderReady(reader) {\n  return new Promise(function(resolve, reject) {\n    reader.onload = function() {\n      resolve(reader.result)\n    }\n    reader.onerror = function() {\n      reject(reader.error)\n    }\n  })\n}\n\nfunction readBlobAsArrayBuffer(blob) {\n  var reader = new FileReader()\n  var promise = fileReaderReady(reader)\n  reader.readAsArrayBuffer(blob)\n  return promise\n}\n\nfunction readBlobAsText(blob) {\n  var reader = new FileReader()\n  var promise = fileReaderReady(reader)\n  reader.readAsText(blob)\n  return promise\n}\n\nfunction readArrayBufferAsText(buf) {\n  var view = new Uint8Array(buf)\n  var chars = new Array(view.length)\n\n  for (var i = 0; i < view.length; i++) {\n    chars[i] = String.fromCharCode(view[i])\n  }\n  return chars.join('')\n}\n\nfunction bufferClone(buf) {\n  if (buf.slice) {\n    return buf.slice(0)\n  } else {\n    var view = new Uint8Array(buf.byteLength)\n    view.set(new Uint8Array(buf))\n    return view.buffer\n  }\n}\n\nfunction Body() {\n  this.bodyUsed = false\n\n  this._initBody = function(body) {\n    this._bodyInit = body\n    if (!body) {\n      this._bodyText = ''\n    } else if (typeof body === 'string') {\n      this._bodyText = body\n    } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n      this._bodyBlob = body\n    } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n      this._bodyFormData = body\n    } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n      this._bodyText = body.toString()\n    } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n      this._bodyArrayBuffer = bufferClone(body.buffer)\n      // IE 10-11 can't handle a DataView body.\n      this._bodyInit = new Blob([this._bodyArrayBuffer])\n    } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n      this._bodyArrayBuffer = bufferClone(body)\n    } else {\n      this._bodyText = body = Object.prototype.toString.call(body)\n    }\n\n    if (!this.headers.get('content-type')) {\n      if (typeof body === 'string') {\n        this.headers.set('content-type', 'text/plain;charset=UTF-8')\n      } else if (this._bodyBlob && this._bodyBlob.type) {\n        this.headers.set('content-type', this._bodyBlob.type)\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n      }\n    }\n  }\n\n  if (support.blob) {\n    this.blob = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return Promise.resolve(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as blob')\n      } else {\n        return Promise.resolve(new Blob([this._bodyText]))\n      }\n    }\n\n    this.arrayBuffer = function() {\n      if (this._bodyArrayBuffer) {\n        return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n      } else {\n        return this.blob().then(readBlobAsArrayBuffer)\n      }\n    }\n  }\n\n  this.text = function() {\n    var rejected = consumed(this)\n    if (rejected) {\n      return rejected\n    }\n\n    if (this._bodyBlob) {\n      return readBlobAsText(this._bodyBlob)\n    } else if (this._bodyArrayBuffer) {\n      return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n    } else if (this._bodyFormData) {\n      throw new Error('could not read FormData body as text')\n    } else {\n      return Promise.resolve(this._bodyText)\n    }\n  }\n\n  if (support.formData) {\n    this.formData = function() {\n      return this.text().then(decode)\n    }\n  }\n\n  this.json = function() {\n    return this.text().then(JSON.parse)\n  }\n\n  return this\n}\n\n// HTTP methods whose capitalization should be normalized\nvar methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\nfunction normalizeMethod(method) {\n  var upcased = method.toUpperCase()\n  return methods.indexOf(upcased) > -1 ? upcased : method\n}\n\nfunction Request(input, options) {\n  options = options || {}\n  var body = options.body\n\n  if (input instanceof Request) {\n    if (input.bodyUsed) {\n      throw new TypeError('Already read')\n    }\n    this.url = input.url\n    this.credentials = input.credentials\n    if (!options.headers) {\n      this.headers = new Headers(input.headers)\n    }\n    this.method = input.method\n    this.mode = input.mode\n    this.signal = input.signal\n    if (!body && input._bodyInit != null) {\n      body = input._bodyInit\n      input.bodyUsed = true\n    }\n  } else {\n    this.url = String(input)\n  }\n\n  this.credentials = options.credentials || this.credentials || 'same-origin'\n  if (options.headers || !this.headers) {\n    this.headers = new Headers(options.headers)\n  }\n  this.method = normalizeMethod(options.method || this.method || 'GET')\n  this.mode = options.mode || this.mode || null\n  this.signal = options.signal || this.signal\n  this.referrer = null\n\n  if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n    throw new TypeError('Body not allowed for GET or HEAD requests')\n  }\n  this._initBody(body)\n}\n\nRequest.prototype.clone = function() {\n  return new Request(this, {body: this._bodyInit})\n}\n\nfunction decode(body) {\n  var form = new FormData()\n  body\n    .trim()\n    .split('&')\n    .forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n  return form\n}\n\nfunction parseHeaders(rawHeaders) {\n  var headers = new Headers()\n  // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n  // https://tools.ietf.org/html/rfc7230#section-3.2\n  var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ')\n  preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n    var parts = line.split(':')\n    var key = parts.shift().trim()\n    if (key) {\n      var value = parts.join(':').trim()\n      headers.append(key, value)\n    }\n  })\n  return headers\n}\n\nBody.call(Request.prototype)\n\nfunction Response(bodyInit, options) {\n  if (!options) {\n    options = {}\n  }\n\n  this.type = 'default'\n  this.status = options.status === undefined ? 200 : options.status\n  this.ok = this.status >= 200 && this.status < 300\n  this.statusText = 'statusText' in options ? options.statusText : 'OK'\n  this.headers = new Headers(options.headers)\n  this.url = options.url || ''\n  this._initBody(bodyInit)\n}\n\nBody.call(Response.prototype)\n\nResponse.prototype.clone = function() {\n  return new Response(this._bodyInit, {\n    status: this.status,\n    statusText: this.statusText,\n    headers: new Headers(this.headers),\n    url: this.url\n  })\n}\n\nResponse.error = function() {\n  var response = new Response(null, {status: 0, statusText: ''})\n  response.type = 'error'\n  return response\n}\n\nvar redirectStatuses = [301, 302, 303, 307, 308]\n\nResponse.redirect = function(url, status) {\n  if (redirectStatuses.indexOf(status) === -1) {\n    throw new RangeError('Invalid status code')\n  }\n\n  return new Response(null, {status: status, headers: {location: url}})\n}\n\nvar DOMException = self.DOMException\ntry {\n  new DOMException()\n} catch (err) {\n  DOMException = function(message, name) {\n    this.message = message\n    this.name = name\n    var error = Error(message)\n    this.stack = error.stack\n  }\n  DOMException.prototype = Object.create(Error.prototype)\n  DOMException.prototype.constructor = DOMException\n}\n\nfunction fetch(input, init) {\n  return new Promise(function(resolve, reject) {\n    var request = new Request(input, init)\n\n    if (request.signal && request.signal.aborted) {\n      return reject(new DOMException('Aborted', 'AbortError'))\n    }\n\n    var xhr = new XMLHttpRequest()\n\n    function abortXhr() {\n      xhr.abort()\n    }\n\n    xhr.onload = function() {\n      var options = {\n        status: xhr.status,\n        statusText: xhr.statusText,\n        headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n      }\n      options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n      var body = 'response' in xhr ? xhr.response : xhr.responseText\n      resolve(new Response(body, options))\n    }\n\n    xhr.onerror = function() {\n      reject(new TypeError('Network request failed'))\n    }\n\n    xhr.ontimeout = function() {\n      reject(new TypeError('Network request failed'))\n    }\n\n    xhr.onabort = function() {\n      reject(new DOMException('Aborted', 'AbortError'))\n    }\n\n    xhr.open(request.method, request.url, true)\n\n    if (request.credentials === 'include') {\n      xhr.withCredentials = true\n    } else if (request.credentials === 'omit') {\n      xhr.withCredentials = false\n    }\n\n    if ('responseType' in xhr && support.blob) {\n      xhr.responseType = 'blob'\n    }\n\n    request.headers.forEach(function(value, name) {\n      xhr.setRequestHeader(name, value)\n    })\n\n    if (request.signal) {\n      request.signal.addEventListener('abort', abortXhr)\n\n      xhr.onreadystatechange = function() {\n        // DONE (success or failure)\n        if (xhr.readyState === 4) {\n          request.signal.removeEventListener('abort', abortXhr)\n        }\n      }\n    }\n\n    xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n  })\n}\n\nfetch.polyfill = true\n\nif (!self.fetch) {\n  self.fetch = fetch\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/whatwg-fetch/fetch.js\n");

/***/ }),

/***/ "./node_modules/xml-js/lib/array-helper.js":
/*!*************************************************!*\
  !*** ./node_modules/xml-js/lib/array-helper.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = {\r\n\r\n  isArray: function(value) {\r\n    if (Array.isArray) {\r\n      return Array.isArray(value);\r\n    }\r\n    // fallback for older browsers like  IE 8\r\n    return Object.prototype.toString.call( value ) === '[object Array]';\r\n  }\r\n\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMveG1sLWpzL2xpYi9hcnJheS1oZWxwZXIuanM/OWIxMiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy94bWwtanMvbGliL2FycmF5LWhlbHBlci5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0ge1xyXG5cclxuICBpc0FycmF5OiBmdW5jdGlvbih2YWx1ZSkge1xyXG4gICAgaWYgKEFycmF5LmlzQXJyYXkpIHtcclxuICAgICAgcmV0dXJuIEFycmF5LmlzQXJyYXkodmFsdWUpO1xyXG4gICAgfVxyXG4gICAgLy8gZmFsbGJhY2sgZm9yIG9sZGVyIGJyb3dzZXJzIGxpa2UgIElFIDhcclxuICAgIHJldHVybiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoIHZhbHVlICkgPT09ICdbb2JqZWN0IEFycmF5XSc7XHJcbiAgfVxyXG5cclxufTtcclxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/xml-js/lib/array-helper.js\n");

/***/ }),

/***/ "./node_modules/xml-js/lib/index.js":
/*!******************************************!*\
  !*** ./node_modules/xml-js/lib/index.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*jslint node:true */\r\n\r\nvar xml2js = __webpack_require__(/*! ./xml2js */ \"./node_modules/xml-js/lib/xml2js.js\");\r\nvar xml2json = __webpack_require__(/*! ./xml2json */ \"./node_modules/xml-js/lib/xml2json.js\");\r\nvar js2xml = __webpack_require__(/*! ./js2xml */ \"./node_modules/xml-js/lib/js2xml.js\");\r\nvar json2xml = __webpack_require__(/*! ./json2xml */ \"./node_modules/xml-js/lib/json2xml.js\");\r\n\r\nmodule.exports = {\r\n  xml2js: xml2js,\r\n  xml2json: xml2json,\r\n  js2xml: js2xml,\r\n  json2xml: json2xml\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMveG1sLWpzL2xpYi9pbmRleC5qcz9jNTFhIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBLGFBQWEsbUJBQU8sQ0FBQyxxREFBVTtBQUMvQixlQUFlLG1CQUFPLENBQUMseURBQVk7QUFDbkMsYUFBYSxtQkFBTyxDQUFDLHFEQUFVO0FBQy9CLGVBQWUsbUJBQU8sQ0FBQyx5REFBWTs7QUFFbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL3htbC1qcy9saWIvaW5kZXguanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKmpzbGludCBub2RlOnRydWUgKi9cclxuXHJcbnZhciB4bWwyanMgPSByZXF1aXJlKCcuL3htbDJqcycpO1xyXG52YXIgeG1sMmpzb24gPSByZXF1aXJlKCcuL3htbDJqc29uJyk7XHJcbnZhciBqczJ4bWwgPSByZXF1aXJlKCcuL2pzMnhtbCcpO1xyXG52YXIganNvbjJ4bWwgPSByZXF1aXJlKCcuL2pzb24yeG1sJyk7XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IHtcclxuICB4bWwyanM6IHhtbDJqcyxcclxuICB4bWwyanNvbjogeG1sMmpzb24sXHJcbiAganMyeG1sOiBqczJ4bWwsXHJcbiAganNvbjJ4bWw6IGpzb24yeG1sXHJcbn07XHJcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/xml-js/lib/index.js\n");

/***/ }),

/***/ "./node_modules/xml-js/lib/js2xml.js":
/*!*******************************************!*\
  !*** ./node_modules/xml-js/lib/js2xml.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var helper = __webpack_require__(/*! ./options-helper */ \"./node_modules/xml-js/lib/options-helper.js\");\nvar isArray = __webpack_require__(/*! ./array-helper */ \"./node_modules/xml-js/lib/array-helper.js\").isArray;\n\nvar currentElement, currentElementName;\n\nfunction validateOptions(userOptions) {\n  var options = helper.copyOptions(userOptions);\n  helper.ensureFlagExists('ignoreDeclaration', options);\n  helper.ensureFlagExists('ignoreInstruction', options);\n  helper.ensureFlagExists('ignoreAttributes', options);\n  helper.ensureFlagExists('ignoreText', options);\n  helper.ensureFlagExists('ignoreComment', options);\n  helper.ensureFlagExists('ignoreCdata', options);\n  helper.ensureFlagExists('ignoreDoctype', options);\n  helper.ensureFlagExists('compact', options);\n  helper.ensureFlagExists('indentText', options);\n  helper.ensureFlagExists('indentCdata', options);\n  helper.ensureFlagExists('indentAttributes', options);\n  helper.ensureFlagExists('indentInstruction', options);\n  helper.ensureFlagExists('fullTagEmptyElement', options);\n  helper.ensureFlagExists('noQuotesForNativeAttributes', options);\n  helper.ensureSpacesExists(options);\n  if (typeof options.spaces === 'number') {\n    options.spaces = Array(options.spaces + 1).join(' ');\n  }\n  helper.ensureKeyExists('declaration', options);\n  helper.ensureKeyExists('instruction', options);\n  helper.ensureKeyExists('attributes', options);\n  helper.ensureKeyExists('text', options);\n  helper.ensureKeyExists('comment', options);\n  helper.ensureKeyExists('cdata', options);\n  helper.ensureKeyExists('doctype', options);\n  helper.ensureKeyExists('type', options);\n  helper.ensureKeyExists('name', options);\n  helper.ensureKeyExists('elements', options);\n  helper.checkFnExists('doctype', options);\n  helper.checkFnExists('instruction', options);\n  helper.checkFnExists('cdata', options);\n  helper.checkFnExists('comment', options);\n  helper.checkFnExists('text', options);\n  helper.checkFnExists('instructionName', options);\n  helper.checkFnExists('elementName', options);\n  helper.checkFnExists('attributeName', options);\n  helper.checkFnExists('attributeValue', options);\n  helper.checkFnExists('attributes', options);\n  helper.checkFnExists('fullTagEmptyElement', options);\n  return options;\n}\n\nfunction writeIndentation(options, depth, firstLine) {\n  return (!firstLine && options.spaces ? '\\n' : '') + Array(depth + 1).join(options.spaces);\n}\n\nfunction writeAttributes(attributes, options, depth) {\n  if (options.ignoreAttributes) {\n    return '';\n  }\n  if ('attributesFn' in options) {\n    attributes = options.attributesFn(attributes, currentElementName, currentElement);\n  }\n  var key, attr, attrName, quote, result = [];\n  for (key in attributes) {\n    if (attributes.hasOwnProperty(key) && attributes[key] !== null && attributes[key] !== undefined) {\n      quote = options.noQuotesForNativeAttributes && typeof attributes[key] !== 'string' ? '' : '\"';\n      attr = '' + attributes[key]; // ensure number and boolean are converted to String\n      attr = attr.replace(/\"/g, '&quot;');\n      attrName = 'attributeNameFn' in options ? options.attributeNameFn(key, attr, currentElementName, currentElement) : key;\n      result.push((options.spaces && options.indentAttributes? writeIndentation(options, depth+1, false) : ' '));\n      result.push(attrName + '=' + quote + ('attributeValueFn' in options ? options.attributeValueFn(attr, key, currentElementName, currentElement) : attr) + quote);\n    }\n  }\n  if (attributes && Object.keys(attributes).length && options.spaces && options.indentAttributes) {\n    result.push(writeIndentation(options, depth, false));\n  }\n  return result.join('');\n}\n\nfunction writeDeclaration(declaration, options, depth) {\n  currentElement = declaration;\n  currentElementName = 'xml';\n  return options.ignoreDeclaration ? '' :  '<?' + 'xml' + writeAttributes(declaration[options.attributesKey], options, depth) + '?>';\n}\n\nfunction writeInstruction(instruction, options, depth) {\n  if (options.ignoreInstruction) {\n    return '';\n  }\n  var key;\n  for (key in instruction) {\n    if (instruction.hasOwnProperty(key)) {\n      break;\n    }\n  }\n  var instructionName = 'instructionNameFn' in options ? options.instructionNameFn(key, instruction[key], currentElementName, currentElement) : key;\n  if (typeof instruction[key] === 'object') {\n    currentElement = instruction;\n    currentElementName = instructionName;\n    return '<?' + instructionName + writeAttributes(instruction[key][options.attributesKey], options, depth) + '?>';\n  } else {\n    var instructionValue = instruction[key] ? instruction[key] : '';\n    if ('instructionFn' in options) instructionValue = options.instructionFn(instructionValue, key, currentElementName, currentElement);\n    return '<?' + instructionName + (instructionValue ? ' ' + instructionValue : '') + '?>';\n  }\n}\n\nfunction writeComment(comment, options) {\n  return options.ignoreComment ? '' : '<!--' + ('commentFn' in options ? options.commentFn(comment, currentElementName, currentElement) : comment) + '-->';\n}\n\nfunction writeCdata(cdata, options) {\n  return options.ignoreCdata ? '' : '<![CDATA[' + ('cdataFn' in options ? options.cdataFn(cdata, currentElementName, currentElement) : cdata.replace(']]>', ']]]]><![CDATA[>')) + ']]>';\n}\n\nfunction writeDoctype(doctype, options) {\n  return options.ignoreDoctype ? '' : '<!DOCTYPE ' + ('doctypeFn' in options ? options.doctypeFn(doctype, currentElementName, currentElement) : doctype) + '>';\n}\n\nfunction writeText(text, options) {\n  if (options.ignoreText) return '';\n  text = '' + text; // ensure Number and Boolean are converted to String\n  text = text.replace(/&amp;/g, '&'); // desanitize to avoid double sanitization\n  text = text.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n  return 'textFn' in options ? options.textFn(text, currentElementName, currentElement) : text;\n}\n\nfunction hasContent(element, options) {\n  var i;\n  if (element.elements && element.elements.length) {\n    for (i = 0; i < element.elements.length; ++i) {\n      switch (element.elements[i][options.typeKey]) {\n      case 'text':\n        if (options.indentText) {\n          return true;\n        }\n        break; // skip to next key\n      case 'cdata':\n        if (options.indentCdata) {\n          return true;\n        }\n        break; // skip to next key\n      case 'instruction':\n        if (options.indentInstruction) {\n          return true;\n        }\n        break; // skip to next key\n      case 'doctype':\n      case 'comment':\n      case 'element':\n        return true;\n      default:\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nfunction writeElement(element, options, depth) {\n  currentElement = element;\n  currentElementName = element.name;\n  var xml = [], elementName = 'elementNameFn' in options ? options.elementNameFn(element.name, element) : element.name;\n  xml.push('<' + elementName);\n  if (element[options.attributesKey]) {\n    xml.push(writeAttributes(element[options.attributesKey], options, depth));\n  }\n  var withClosingTag = element[options.elementsKey] && element[options.elementsKey].length || element[options.attributesKey] && element[options.attributesKey]['xml:space'] === 'preserve';\n  if (!withClosingTag) {\n    if ('fullTagEmptyElementFn' in options) {\n      withClosingTag = options.fullTagEmptyElementFn(element.name, element);\n    } else {\n      withClosingTag = options.fullTagEmptyElement;\n    }\n  }\n  if (withClosingTag) {\n    xml.push('>');\n    if (element[options.elementsKey] && element[options.elementsKey].length) {\n      xml.push(writeElements(element[options.elementsKey], options, depth + 1));\n      currentElement = element;\n      currentElementName = element.name;\n    }\n    xml.push(options.spaces && hasContent(element, options) ? '\\n' + Array(depth + 1).join(options.spaces) : '');\n    xml.push('</' + elementName + '>');\n  } else {\n    xml.push('/>');\n  }\n  return xml.join('');\n}\n\nfunction writeElements(elements, options, depth, firstLine) {\n  return elements.reduce(function (xml, element) {\n    var indent = writeIndentation(options, depth, firstLine && !xml);\n    switch (element.type) {\n    case 'element': return xml + indent + writeElement(element, options, depth);\n    case 'comment': return xml + indent + writeComment(element[options.commentKey], options);\n    case 'doctype': return xml + indent + writeDoctype(element[options.doctypeKey], options);\n    case 'cdata': return xml + (options.indentCdata ? indent : '') + writeCdata(element[options.cdataKey], options);\n    case 'text': return xml + (options.indentText ? indent : '') + writeText(element[options.textKey], options);\n    case 'instruction':\n      var instruction = {};\n      instruction[element[options.nameKey]] = element[options.attributesKey] ? element : element[options.instructionKey];\n      return xml + (options.indentInstruction ? indent : '') + writeInstruction(instruction, options, depth);\n    }\n  }, '');\n}\n\nfunction hasContentCompact(element, options, anyContent) {\n  var key;\n  for (key in element) {\n    if (element.hasOwnProperty(key)) {\n      switch (key) {\n      case options.parentKey:\n      case options.attributesKey:\n        break; // skip to next key\n      case options.textKey:\n        if (options.indentText || anyContent) {\n          return true;\n        }\n        break; // skip to next key\n      case options.cdataKey:\n        if (options.indentCdata || anyContent) {\n          return true;\n        }\n        break; // skip to next key\n      case options.instructionKey:\n        if (options.indentInstruction || anyContent) {\n          return true;\n        }\n        break; // skip to next key\n      case options.doctypeKey:\n      case options.commentKey:\n        return true;\n      default:\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nfunction writeElementCompact(element, name, options, depth, indent) {\n  currentElement = element;\n  currentElementName = name;\n  var elementName = 'elementNameFn' in options ? options.elementNameFn(name, element) : name;\n  if (typeof element === 'undefined' || element === null || element === '') {\n    return 'fullTagEmptyElementFn' in options && options.fullTagEmptyElementFn(name, element) || options.fullTagEmptyElement ? '<' + elementName + '></' + elementName + '>' : '<' + elementName + '/>';\n  }\n  var xml = [];\n  if (name) {\n    xml.push('<' + elementName);\n    if (typeof element !== 'object') {\n      xml.push('>' + writeText(element,options) + '</' + elementName + '>');\n      return xml.join('');\n    }\n    if (element[options.attributesKey]) {\n      xml.push(writeAttributes(element[options.attributesKey], options, depth));\n    }\n    var withClosingTag = hasContentCompact(element, options, true) || element[options.attributesKey] && element[options.attributesKey]['xml:space'] === 'preserve';\n    if (!withClosingTag) {\n      if ('fullTagEmptyElementFn' in options) {\n        withClosingTag = options.fullTagEmptyElementFn(name, element);\n      } else {\n        withClosingTag = options.fullTagEmptyElement;\n      }\n    }\n    if (withClosingTag) {\n      xml.push('>');\n    } else {\n      xml.push('/>');\n      return xml.join('');\n    }\n  }\n  xml.push(writeElementsCompact(element, options, depth + 1, false));\n  currentElement = element;\n  currentElementName = name;\n  if (name) {\n    xml.push((indent ? writeIndentation(options, depth, false) : '') + '</' + elementName + '>');\n  }\n  return xml.join('');\n}\n\nfunction writeElementsCompact(element, options, depth, firstLine) {\n  var i, key, nodes, xml = [];\n  for (key in element) {\n    if (element.hasOwnProperty(key)) {\n      nodes = isArray(element[key]) ? element[key] : [element[key]];\n      for (i = 0; i < nodes.length; ++i) {\n        switch (key) {\n        case options.declarationKey: xml.push(writeDeclaration(nodes[i], options, depth)); break;\n        case options.instructionKey: xml.push((options.indentInstruction ? writeIndentation(options, depth, firstLine) : '') + writeInstruction(nodes[i], options, depth)); break;\n        case options.attributesKey: case options.parentKey: break; // skip\n        case options.textKey: xml.push((options.indentText ? writeIndentation(options, depth, firstLine) : '') + writeText(nodes[i], options)); break;\n        case options.cdataKey: xml.push((options.indentCdata ? writeIndentation(options, depth, firstLine) : '') + writeCdata(nodes[i], options)); break;\n        case options.doctypeKey: xml.push(writeIndentation(options, depth, firstLine) + writeDoctype(nodes[i], options)); break;\n        case options.commentKey: xml.push(writeIndentation(options, depth, firstLine) + writeComment(nodes[i], options)); break;\n        default: xml.push(writeIndentation(options, depth, firstLine) + writeElementCompact(nodes[i], key, options, depth, hasContentCompact(nodes[i], options)));\n        }\n        firstLine = firstLine && !xml.length;\n      }\n    }\n  }\n  return xml.join('');\n}\n\nmodule.exports = function (js, options) {\n  options = validateOptions(options);\n  var xml = [];\n  currentElement = js;\n  currentElementName = '_root_';\n  if (options.compact) {\n    xml.push(writeElementsCompact(js, options, 0, true));\n  } else {\n    if (js[options.declarationKey]) {\n      xml.push(writeDeclaration(js[options.declarationKey], options, 0));\n    }\n    if (js[options.elementsKey] && js[options.elementsKey].length) {\n      xml.push(writeElements(js[options.elementsKey], options, 0, !xml.length));\n    }\n  }\n  return xml.join('');\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/xml-js/lib/js2xml.js\n");

/***/ }),

/***/ "./node_modules/xml-js/lib/json2xml.js":
/*!*********************************************!*\
  !*** ./node_modules/xml-js/lib/json2xml.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(Buffer) {var js2xml = __webpack_require__(/*! ./js2xml.js */ \"./node_modules/xml-js/lib/js2xml.js\");\r\n\r\nmodule.exports = function (json, options) {\r\n  if (json instanceof Buffer) {\r\n    json = json.toString();\r\n  }\r\n  var js = null;\r\n  if (typeof (json) === 'string') {\r\n    try {\r\n      js = JSON.parse(json);\r\n    } catch (e) {\r\n      throw new Error('The JSON structure is invalid');\r\n    }\r\n  } else {\r\n    js = json;\r\n  }\r\n  return js2xml(js, options);\r\n};\r\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node-libs-browser/node_modules/buffer/index.js */ \"./node_modules/node-libs-browser/node_modules/buffer/index.js\").Buffer))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMveG1sLWpzL2xpYi9qc29uMnhtbC5qcz80OTNiIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLDJEQUFhLG1CQUFPLENBQUMsd0RBQWE7O0FBRWxDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy94bWwtanMvbGliL2pzb24yeG1sLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGpzMnhtbCA9IHJlcXVpcmUoJy4vanMyeG1sLmpzJyk7XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChqc29uLCBvcHRpb25zKSB7XHJcbiAgaWYgKGpzb24gaW5zdGFuY2VvZiBCdWZmZXIpIHtcclxuICAgIGpzb24gPSBqc29uLnRvU3RyaW5nKCk7XHJcbiAgfVxyXG4gIHZhciBqcyA9IG51bGw7XHJcbiAgaWYgKHR5cGVvZiAoanNvbikgPT09ICdzdHJpbmcnKSB7XHJcbiAgICB0cnkge1xyXG4gICAgICBqcyA9IEpTT04ucGFyc2UoanNvbik7XHJcbiAgICB9IGNhdGNoIChlKSB7XHJcbiAgICAgIHRocm93IG5ldyBFcnJvcignVGhlIEpTT04gc3RydWN0dXJlIGlzIGludmFsaWQnKTtcclxuICAgIH1cclxuICB9IGVsc2Uge1xyXG4gICAganMgPSBqc29uO1xyXG4gIH1cclxuICByZXR1cm4ganMyeG1sKGpzLCBvcHRpb25zKTtcclxufTtcclxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/xml-js/lib/json2xml.js\n");

/***/ }),

/***/ "./node_modules/xml-js/lib/options-helper.js":
/*!***************************************************!*\
  !*** ./node_modules/xml-js/lib/options-helper.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var isArray = __webpack_require__(/*! ./array-helper */ \"./node_modules/xml-js/lib/array-helper.js\").isArray;\r\n\r\nmodule.exports = {\r\n\r\n  copyOptions: function (options) {\r\n    var key, copy = {};\r\n    for (key in options) {\r\n      if (options.hasOwnProperty(key)) {\r\n        copy[key] = options[key];\r\n      }\r\n    }\r\n    return copy;\r\n  },\r\n\r\n  ensureFlagExists: function (item, options) {\r\n    if (!(item in options) || typeof options[item] !== 'boolean') {\r\n      options[item] = false;\r\n    }\r\n  },\r\n\r\n  ensureSpacesExists: function (options) {\r\n    if (!('spaces' in options) || (typeof options.spaces !== 'number' && typeof options.spaces !== 'string')) {\r\n      options.spaces = 0;\r\n    }\r\n  },\r\n\r\n  ensureAlwaysArrayExists: function (options) {\r\n    if (!('alwaysArray' in options) || (typeof options.alwaysArray !== 'boolean' && !isArray(options.alwaysArray))) {\r\n      options.alwaysArray = false;\r\n    }\r\n  },\r\n\r\n  ensureKeyExists: function (key, options) {\r\n    if (!(key + 'Key' in options) || typeof options[key + 'Key'] !== 'string') {\r\n      options[key + 'Key'] = options.compact ? '_' + key : key;\r\n    }\r\n  },\r\n\r\n  checkFnExists: function (key, options) {\r\n    return key + 'Fn' in options;\r\n  }\r\n\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMveG1sLWpzL2xpYi9vcHRpb25zLWhlbHBlci5qcz85NmMxIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGNBQWMsbUJBQU8sQ0FBQyxpRUFBZ0I7O0FBRXRDOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7O0FBRUEiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMveG1sLWpzL2xpYi9vcHRpb25zLWhlbHBlci5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBpc0FycmF5ID0gcmVxdWlyZSgnLi9hcnJheS1oZWxwZXInKS5pc0FycmF5O1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSB7XHJcblxyXG4gIGNvcHlPcHRpb25zOiBmdW5jdGlvbiAob3B0aW9ucykge1xyXG4gICAgdmFyIGtleSwgY29weSA9IHt9O1xyXG4gICAgZm9yIChrZXkgaW4gb3B0aW9ucykge1xyXG4gICAgICBpZiAob3B0aW9ucy5oYXNPd25Qcm9wZXJ0eShrZXkpKSB7XHJcbiAgICAgICAgY29weVtrZXldID0gb3B0aW9uc1trZXldO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICByZXR1cm4gY29weTtcclxuICB9LFxyXG5cclxuICBlbnN1cmVGbGFnRXhpc3RzOiBmdW5jdGlvbiAoaXRlbSwgb3B0aW9ucykge1xyXG4gICAgaWYgKCEoaXRlbSBpbiBvcHRpb25zKSB8fCB0eXBlb2Ygb3B0aW9uc1tpdGVtXSAhPT0gJ2Jvb2xlYW4nKSB7XHJcbiAgICAgIG9wdGlvbnNbaXRlbV0gPSBmYWxzZTtcclxuICAgIH1cclxuICB9LFxyXG5cclxuICBlbnN1cmVTcGFjZXNFeGlzdHM6IGZ1bmN0aW9uIChvcHRpb25zKSB7XHJcbiAgICBpZiAoISgnc3BhY2VzJyBpbiBvcHRpb25zKSB8fCAodHlwZW9mIG9wdGlvbnMuc3BhY2VzICE9PSAnbnVtYmVyJyAmJiB0eXBlb2Ygb3B0aW9ucy5zcGFjZXMgIT09ICdzdHJpbmcnKSkge1xyXG4gICAgICBvcHRpb25zLnNwYWNlcyA9IDA7XHJcbiAgICB9XHJcbiAgfSxcclxuXHJcbiAgZW5zdXJlQWx3YXlzQXJyYXlFeGlzdHM6IGZ1bmN0aW9uIChvcHRpb25zKSB7XHJcbiAgICBpZiAoISgnYWx3YXlzQXJyYXknIGluIG9wdGlvbnMpIHx8ICh0eXBlb2Ygb3B0aW9ucy5hbHdheXNBcnJheSAhPT0gJ2Jvb2xlYW4nICYmICFpc0FycmF5KG9wdGlvbnMuYWx3YXlzQXJyYXkpKSkge1xyXG4gICAgICBvcHRpb25zLmFsd2F5c0FycmF5ID0gZmFsc2U7XHJcbiAgICB9XHJcbiAgfSxcclxuXHJcbiAgZW5zdXJlS2V5RXhpc3RzOiBmdW5jdGlvbiAoa2V5LCBvcHRpb25zKSB7XHJcbiAgICBpZiAoIShrZXkgKyAnS2V5JyBpbiBvcHRpb25zKSB8fCB0eXBlb2Ygb3B0aW9uc1trZXkgKyAnS2V5J10gIT09ICdzdHJpbmcnKSB7XHJcbiAgICAgIG9wdGlvbnNba2V5ICsgJ0tleSddID0gb3B0aW9ucy5jb21wYWN0ID8gJ18nICsga2V5IDoga2V5O1xyXG4gICAgfVxyXG4gIH0sXHJcblxyXG4gIGNoZWNrRm5FeGlzdHM6IGZ1bmN0aW9uIChrZXksIG9wdGlvbnMpIHtcclxuICAgIHJldHVybiBrZXkgKyAnRm4nIGluIG9wdGlvbnM7XHJcbiAgfVxyXG5cclxufTtcclxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/xml-js/lib/options-helper.js\n");

/***/ }),

/***/ "./node_modules/xml-js/lib/xml2js.js":
/*!*******************************************!*\
  !*** ./node_modules/xml-js/lib/xml2js.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var sax = __webpack_require__(/*! sax */ \"./node_modules/xml-js/node_modules/sax/lib/sax.js\");\r\nvar expat /*= require('node-expat');*/ = { on: function () { }, parse: function () { } };\r\nvar helper = __webpack_require__(/*! ./options-helper */ \"./node_modules/xml-js/lib/options-helper.js\");\r\nvar isArray = __webpack_require__(/*! ./array-helper */ \"./node_modules/xml-js/lib/array-helper.js\").isArray;\r\n\r\nvar options;\r\nvar pureJsParser = true;\r\nvar currentElement;\r\n\r\nfunction validateOptions(userOptions) {\r\n  options = helper.copyOptions(userOptions);\r\n  helper.ensureFlagExists('ignoreDeclaration', options);\r\n  helper.ensureFlagExists('ignoreInstruction', options);\r\n  helper.ensureFlagExists('ignoreAttributes', options);\r\n  helper.ensureFlagExists('ignoreText', options);\r\n  helper.ensureFlagExists('ignoreComment', options);\r\n  helper.ensureFlagExists('ignoreCdata', options);\r\n  helper.ensureFlagExists('ignoreDoctype', options);\r\n  helper.ensureFlagExists('compact', options);\r\n  helper.ensureFlagExists('alwaysChildren', options);\r\n  helper.ensureFlagExists('addParent', options);\r\n  helper.ensureFlagExists('trim', options);\r\n  helper.ensureFlagExists('nativeType', options);\r\n  helper.ensureFlagExists('nativeTypeAttributes', options);\r\n  helper.ensureFlagExists('sanitize', options);\r\n  helper.ensureFlagExists('instructionHasAttributes', options);\r\n  helper.ensureFlagExists('captureSpacesBetweenElements', options);\r\n  helper.ensureAlwaysArrayExists(options);\r\n  helper.ensureKeyExists('declaration', options);\r\n  helper.ensureKeyExists('instruction', options);\r\n  helper.ensureKeyExists('attributes', options);\r\n  helper.ensureKeyExists('text', options);\r\n  helper.ensureKeyExists('comment', options);\r\n  helper.ensureKeyExists('cdata', options);\r\n  helper.ensureKeyExists('doctype', options);\r\n  helper.ensureKeyExists('type', options);\r\n  helper.ensureKeyExists('name', options);\r\n  helper.ensureKeyExists('elements', options);\r\n  helper.ensureKeyExists('parent', options);\r\n  helper.checkFnExists('doctype', options);\r\n  helper.checkFnExists('instruction', options);\r\n  helper.checkFnExists('cdata', options);\r\n  helper.checkFnExists('comment', options);\r\n  helper.checkFnExists('text', options);\r\n  helper.checkFnExists('instructionName', options);\r\n  helper.checkFnExists('elementName', options);\r\n  helper.checkFnExists('attributeName', options);\r\n  helper.checkFnExists('attributeValue', options);\r\n  helper.checkFnExists('attributes', options);\r\n  return options;\r\n}\r\n\r\nfunction nativeType(value) {\r\n  var nValue = Number(value);\r\n  if (!isNaN(nValue)) {\r\n    return nValue;\r\n  }\r\n  var bValue = value.toLowerCase();\r\n  if (bValue === 'true') {\r\n    return true;\r\n  } else if (bValue === 'false') {\r\n    return false;\r\n  }\r\n  return value;\r\n}\r\n\r\nfunction addField(type, value) {\r\n  var key;\r\n  if (options.compact) {\r\n    if (\r\n      !currentElement[options[type + 'Key']] &&\r\n      (isArray(options.alwaysArray) ? options.alwaysArray.indexOf(options[type + 'Key']) !== -1 : options.alwaysArray)\r\n    ) {\r\n      currentElement[options[type + 'Key']] = [];\r\n    }\r\n    if (currentElement[options[type + 'Key']] && !isArray(currentElement[options[type + 'Key']])) {\r\n      currentElement[options[type + 'Key']] = [currentElement[options[type + 'Key']]];\r\n    }\r\n    if (type + 'Fn' in options && typeof value === 'string') {\r\n      value = options[type + 'Fn'](value, currentElement);\r\n    }\r\n    if (type === 'instruction' && ('instructionFn' in options || 'instructionNameFn' in options)) {\r\n      for (key in value) {\r\n        if (value.hasOwnProperty(key)) {\r\n          if ('instructionFn' in options) {\r\n            value[key] = options.instructionFn(value[key], key, currentElement);\r\n          } else {\r\n            var temp = value[key];\r\n            delete value[key];\r\n            value[options.instructionNameFn(key, temp, currentElement)] = temp;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (isArray(currentElement[options[type + 'Key']])) {\r\n      currentElement[options[type + 'Key']].push(value);\r\n    } else {\r\n      currentElement[options[type + 'Key']] = value;\r\n    }\r\n  } else {\r\n    if (!currentElement[options.elementsKey]) {\r\n      currentElement[options.elementsKey] = [];\r\n    }\r\n    var element = {};\r\n    element[options.typeKey] = type;\r\n    if (type === 'instruction') {\r\n      for (key in value) {\r\n        if (value.hasOwnProperty(key)) {\r\n          break;\r\n        }\r\n      }\r\n      element[options.nameKey] = 'instructionNameFn' in options ? options.instructionNameFn(key, value, currentElement) : key;\r\n      if (options.instructionHasAttributes) {\r\n        element[options.attributesKey] = value[key][options.attributesKey];\r\n        if ('instructionFn' in options) {\r\n          element[options.attributesKey] = options.instructionFn(element[options.attributesKey], key, currentElement);\r\n        }\r\n      } else {\r\n        if ('instructionFn' in options) {\r\n          value[key] = options.instructionFn(value[key], key, currentElement);\r\n        }\r\n        element[options.instructionKey] = value[key];\r\n      }\r\n    } else {\r\n      if (type + 'Fn' in options) {\r\n        value = options[type + 'Fn'](value, currentElement);\r\n      }\r\n      element[options[type + 'Key']] = value;\r\n    }\r\n    if (options.addParent) {\r\n      element[options.parentKey] = currentElement;\r\n    }\r\n    currentElement[options.elementsKey].push(element);\r\n  }\r\n}\r\n\r\nfunction manipulateAttributes(attributes) {\r\n  if ('attributesFn' in options && attributes) {\r\n    attributes = options.attributesFn(attributes, currentElement);\r\n  }\r\n  if ((options.trim || 'attributeValueFn' in options || 'attributeNameFn' in options || options.nativeTypeAttributes) && attributes) {\r\n    var key;\r\n    for (key in attributes) {\r\n      if (attributes.hasOwnProperty(key)) {\r\n        if (options.trim) attributes[key] = attributes[key].trim();\r\n        if (options.nativeTypeAttributes) {\r\n          attributes[key] = nativeType(attributes[key]);\r\n        }\r\n        if ('attributeValueFn' in options) attributes[key] = options.attributeValueFn(attributes[key], key, currentElement);\r\n        if ('attributeNameFn' in options) {\r\n          var temp = attributes[key];\r\n          delete attributes[key];\r\n          attributes[options.attributeNameFn(key, attributes[key], currentElement)] = temp;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return attributes;\r\n}\r\n\r\nfunction onInstruction(instruction) {\r\n  var attributes = {};\r\n  if (instruction.body && (instruction.name.toLowerCase() === 'xml' || options.instructionHasAttributes)) {\r\n    var attrsRegExp = /([\\w:-]+)\\s*=\\s*(?:\"([^\"]*)\"|'([^']*)'|(\\w+))\\s*/g;\r\n    var match;\r\n    while ((match = attrsRegExp.exec(instruction.body)) !== null) {\r\n      attributes[match[1]] = match[2] || match[3] || match[4];\r\n    }\r\n    attributes = manipulateAttributes(attributes);\r\n  }\r\n  if (instruction.name.toLowerCase() === 'xml') {\r\n    if (options.ignoreDeclaration) {\r\n      return;\r\n    }\r\n    currentElement[options.declarationKey] = {};\r\n    if (Object.keys(attributes).length) {\r\n      currentElement[options.declarationKey][options.attributesKey] = attributes;\r\n    }\r\n    if (options.addParent) {\r\n      currentElement[options.declarationKey][options.parentKey] = currentElement;\r\n    }\r\n  } else {\r\n    if (options.ignoreInstruction) {\r\n      return;\r\n    }\r\n    if (options.trim) {\r\n      instruction.body = instruction.body.trim();\r\n    }\r\n    var value = {};\r\n    if (options.instructionHasAttributes && Object.keys(attributes).length) {\r\n      value[instruction.name] = {};\r\n      value[instruction.name][options.attributesKey] = attributes;\r\n    } else {\r\n      value[instruction.name] = instruction.body;\r\n    }\r\n    addField('instruction', value);\r\n  }\r\n}\r\n\r\nfunction onStartElement(name, attributes) {\r\n  var element;\r\n  if (typeof name === 'object') {\r\n    attributes = name.attributes;\r\n    name = name.name;\r\n  }\r\n  attributes = manipulateAttributes(attributes);\r\n  if ('elementNameFn' in options) {\r\n    name = options.elementNameFn(name, currentElement);\r\n  }\r\n  if (options.compact) {\r\n    element = {};\r\n    if (!options.ignoreAttributes && attributes && Object.keys(attributes).length) {\r\n      element[options.attributesKey] = {};\r\n      var key;\r\n      for (key in attributes) {\r\n        if (attributes.hasOwnProperty(key)) {\r\n          element[options.attributesKey][key] = attributes[key];\r\n        }\r\n      }\r\n    }\r\n    if (\r\n      !(name in currentElement) &&\r\n      (isArray(options.alwaysArray) ? options.alwaysArray.indexOf(name) !== -1 : options.alwaysArray)\r\n    ) {\r\n      currentElement[name] = [];\r\n    }\r\n    if (currentElement[name] && !isArray(currentElement[name])) {\r\n      currentElement[name] = [currentElement[name]];\r\n    }\r\n    if (isArray(currentElement[name])) {\r\n      currentElement[name].push(element);\r\n    } else {\r\n      currentElement[name] = element;\r\n    }\r\n  } else {\r\n    if (!currentElement[options.elementsKey]) {\r\n      currentElement[options.elementsKey] = [];\r\n    }\r\n    element = {};\r\n    element[options.typeKey] = 'element';\r\n    element[options.nameKey] = name;\r\n    if (!options.ignoreAttributes && attributes && Object.keys(attributes).length) {\r\n      element[options.attributesKey] = attributes;\r\n    }\r\n    if (options.alwaysChildren) {\r\n      element[options.elementsKey] = [];\r\n    }\r\n    currentElement[options.elementsKey].push(element);\r\n  }\r\n  element[options.parentKey] = currentElement; // will be deleted in onEndElement() if !options.addParent\r\n  currentElement = element;\r\n}\r\n\r\nfunction onText(text) {\r\n  if (options.ignoreText) {\r\n    return;\r\n  }\r\n  if (!text.trim() && !options.captureSpacesBetweenElements) {\r\n    return;\r\n  }\r\n  if (options.trim) {\r\n    text = text.trim();\r\n  }\r\n  if (options.nativeType) {\r\n    text = nativeType(text);\r\n  }\r\n  if (options.sanitize) {\r\n    text = text.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\r\n  }\r\n  addField('text', text);\r\n}\r\n\r\nfunction onComment(comment) {\r\n  if (options.ignoreComment) {\r\n    return;\r\n  }\r\n  if (options.trim) {\r\n    comment = comment.trim();\r\n  }\r\n  addField('comment', comment);\r\n}\r\n\r\nfunction onEndElement(name) {\r\n  var parentElement = currentElement[options.parentKey];\r\n  if (!options.addParent) {\r\n    delete currentElement[options.parentKey];\r\n  }\r\n  currentElement = parentElement;\r\n}\r\n\r\nfunction onCdata(cdata) {\r\n  if (options.ignoreCdata) {\r\n    return;\r\n  }\r\n  if (options.trim) {\r\n    cdata = cdata.trim();\r\n  }\r\n  addField('cdata', cdata);\r\n}\r\n\r\nfunction onDoctype(doctype) {\r\n  if (options.ignoreDoctype) {\r\n    return;\r\n  }\r\n  doctype = doctype.replace(/^ /, '');\r\n  if (options.trim) {\r\n    doctype = doctype.trim();\r\n  }\r\n  addField('doctype', doctype);\r\n}\r\n\r\nfunction onError(error) {\r\n  error.note = error; //console.error(error);\r\n}\r\n\r\nmodule.exports = function (xml, userOptions) {\r\n\r\n  var parser = pureJsParser ? sax.parser(true, {}) : parser = new expat.Parser('UTF-8');\r\n  var result = {};\r\n  currentElement = result;\r\n\r\n  options = validateOptions(userOptions);\r\n\r\n  if (pureJsParser) {\r\n    parser.opt = {strictEntities: true};\r\n    parser.onopentag = onStartElement;\r\n    parser.ontext = onText;\r\n    parser.oncomment = onComment;\r\n    parser.onclosetag = onEndElement;\r\n    parser.onerror = onError;\r\n    parser.oncdata = onCdata;\r\n    parser.ondoctype = onDoctype;\r\n    parser.onprocessinginstruction = onInstruction;\r\n  } else {\r\n    parser.on('startElement', onStartElement);\r\n    parser.on('text', onText);\r\n    parser.on('comment', onComment);\r\n    parser.on('endElement', onEndElement);\r\n    parser.on('error', onError);\r\n    //parser.on('startCdata', onStartCdata);\r\n    //parser.on('endCdata', onEndCdata);\r\n    //parser.on('entityDecl', onEntityDecl);\r\n  }\r\n\r\n  if (pureJsParser) {\r\n    parser.write(xml).close();\r\n  } else {\r\n    if (!parser.parse(xml)) {\r\n      throw new Error('XML parsing error: ' + parser.getError());\r\n    }\r\n  }\r\n\r\n  if (result[options.elementsKey]) {\r\n    var temp = result[options.elementsKey];\r\n    delete result[options.elementsKey];\r\n    result[options.elementsKey] = temp;\r\n    delete result.text;\r\n  }\r\n\r\n  return result;\r\n\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/xml-js/lib/xml2js.js\n");

/***/ }),

/***/ "./node_modules/xml-js/lib/xml2json.js":
/*!*********************************************!*\
  !*** ./node_modules/xml-js/lib/xml2json.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var helper = __webpack_require__(/*! ./options-helper */ \"./node_modules/xml-js/lib/options-helper.js\");\r\nvar xml2js = __webpack_require__(/*! ./xml2js */ \"./node_modules/xml-js/lib/xml2js.js\");\r\n\r\nfunction validateOptions (userOptions) {\r\n  var options = helper.copyOptions(userOptions);\r\n  helper.ensureSpacesExists(options);\r\n  return options;\r\n}\r\n\r\nmodule.exports = function(xml, userOptions) {\r\n  var options, js, json, parentKey;\r\n  options = validateOptions(userOptions);\r\n  js = xml2js(xml, options);\r\n  parentKey = 'compact' in options && options.compact ? '_parent' : 'parent';\r\n  // parentKey = ptions.compact ? '_parent' : 'parent'; // consider this\r\n  if ('addParent' in options && options.addParent) {\r\n    json = JSON.stringify(js, function (k, v) { return k === parentKey? '_' : v; }, options.spaces);\r\n  } else {\r\n    json = JSON.stringify(js, null, options.spaces);\r\n  }\r\n  return json.replace(/\\u2028/g, '\\\\u2028').replace(/\\u2029/g, '\\\\u2029');\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMveG1sLWpzL2xpYi94bWwyanNvbi5qcz8wNzhhIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGFBQWEsbUJBQU8sQ0FBQyxxRUFBa0I7QUFDdkMsYUFBYSxtQkFBTyxDQUFDLHFEQUFVOztBQUUvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1REFBdUQ7QUFDdkQ7QUFDQSwrQ0FBK0MsaUNBQWlDLEVBQUU7QUFDbEYsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL3htbC1qcy9saWIveG1sMmpzb24uanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgaGVscGVyID0gcmVxdWlyZSgnLi9vcHRpb25zLWhlbHBlcicpO1xyXG52YXIgeG1sMmpzID0gcmVxdWlyZSgnLi94bWwyanMnKTtcclxuXHJcbmZ1bmN0aW9uIHZhbGlkYXRlT3B0aW9ucyAodXNlck9wdGlvbnMpIHtcclxuICB2YXIgb3B0aW9ucyA9IGhlbHBlci5jb3B5T3B0aW9ucyh1c2VyT3B0aW9ucyk7XHJcbiAgaGVscGVyLmVuc3VyZVNwYWNlc0V4aXN0cyhvcHRpb25zKTtcclxuICByZXR1cm4gb3B0aW9ucztcclxufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbih4bWwsIHVzZXJPcHRpb25zKSB7XHJcbiAgdmFyIG9wdGlvbnMsIGpzLCBqc29uLCBwYXJlbnRLZXk7XHJcbiAgb3B0aW9ucyA9IHZhbGlkYXRlT3B0aW9ucyh1c2VyT3B0aW9ucyk7XHJcbiAganMgPSB4bWwyanMoeG1sLCBvcHRpb25zKTtcclxuICBwYXJlbnRLZXkgPSAnY29tcGFjdCcgaW4gb3B0aW9ucyAmJiBvcHRpb25zLmNvbXBhY3QgPyAnX3BhcmVudCcgOiAncGFyZW50JztcclxuICAvLyBwYXJlbnRLZXkgPSBwdGlvbnMuY29tcGFjdCA/ICdfcGFyZW50JyA6ICdwYXJlbnQnOyAvLyBjb25zaWRlciB0aGlzXHJcbiAgaWYgKCdhZGRQYXJlbnQnIGluIG9wdGlvbnMgJiYgb3B0aW9ucy5hZGRQYXJlbnQpIHtcclxuICAgIGpzb24gPSBKU09OLnN0cmluZ2lmeShqcywgZnVuY3Rpb24gKGssIHYpIHsgcmV0dXJuIGsgPT09IHBhcmVudEtleT8gJ18nIDogdjsgfSwgb3B0aW9ucy5zcGFjZXMpO1xyXG4gIH0gZWxzZSB7XHJcbiAgICBqc29uID0gSlNPTi5zdHJpbmdpZnkoanMsIG51bGwsIG9wdGlvbnMuc3BhY2VzKTtcclxuICB9XHJcbiAgcmV0dXJuIGpzb24ucmVwbGFjZSgvXFx1MjAyOC9nLCAnXFxcXHUyMDI4JykucmVwbGFjZSgvXFx1MjAyOS9nLCAnXFxcXHUyMDI5Jyk7XHJcbn07XHJcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/xml-js/lib/xml2json.js\n");

/***/ }),

/***/ "./node_modules/xml-js/node_modules/sax/lib/sax.js":
/*!*********************************************************!*\
  !*** ./node_modules/xml-js/node_modules/sax/lib/sax.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(Buffer) {;(function (sax) { // wrapper for non-node envs\n  sax.parser = function (strict, opt) { return new SAXParser(strict, opt) }\n  sax.SAXParser = SAXParser\n  sax.SAXStream = SAXStream\n  sax.createStream = createStream\n\n  // When we pass the MAX_BUFFER_LENGTH position, start checking for buffer overruns.\n  // When we check, schedule the next check for MAX_BUFFER_LENGTH - (max(buffer lengths)),\n  // since that's the earliest that a buffer overrun could occur.  This way, checks are\n  // as rare as required, but as often as necessary to ensure never crossing this bound.\n  // Furthermore, buffers are only tested at most once per write(), so passing a very\n  // large string into write() might have undesirable effects, but this is manageable by\n  // the caller, so it is assumed to be safe.  Thus, a call to write() may, in the extreme\n  // edge case, result in creating at most one complete copy of the string passed in.\n  // Set to Infinity to have unlimited buffers.\n  sax.MAX_BUFFER_LENGTH = 64 * 1024\n\n  var buffers = [\n    'comment', 'sgmlDecl', 'textNode', 'tagName', 'doctype',\n    'procInstName', 'procInstBody', 'entity', 'attribName',\n    'attribValue', 'cdata', 'script'\n  ]\n\n  sax.EVENTS = [\n    'text',\n    'processinginstruction',\n    'sgmldeclaration',\n    'doctype',\n    'comment',\n    'opentagstart',\n    'attribute',\n    'opentag',\n    'closetag',\n    'opencdata',\n    'cdata',\n    'closecdata',\n    'error',\n    'end',\n    'ready',\n    'script',\n    'opennamespace',\n    'closenamespace'\n  ]\n\n  function SAXParser (strict, opt) {\n    if (!(this instanceof SAXParser)) {\n      return new SAXParser(strict, opt)\n    }\n\n    var parser = this\n    clearBuffers(parser)\n    parser.q = parser.c = ''\n    parser.bufferCheckPosition = sax.MAX_BUFFER_LENGTH\n    parser.opt = opt || {}\n    parser.opt.lowercase = parser.opt.lowercase || parser.opt.lowercasetags\n    parser.looseCase = parser.opt.lowercase ? 'toLowerCase' : 'toUpperCase'\n    parser.tags = []\n    parser.closed = parser.closedRoot = parser.sawRoot = false\n    parser.tag = parser.error = null\n    parser.strict = !!strict\n    parser.noscript = !!(strict || parser.opt.noscript)\n    parser.state = S.BEGIN\n    parser.strictEntities = parser.opt.strictEntities\n    parser.ENTITIES = parser.strictEntities ? Object.create(sax.XML_ENTITIES) : Object.create(sax.ENTITIES)\n    parser.attribList = []\n\n    // namespaces form a prototype chain.\n    // it always points at the current tag,\n    // which protos to its parent tag.\n    if (parser.opt.xmlns) {\n      parser.ns = Object.create(rootNS)\n    }\n\n    // mostly just for error reporting\n    parser.trackPosition = parser.opt.position !== false\n    if (parser.trackPosition) {\n      parser.position = parser.line = parser.column = 0\n    }\n    emit(parser, 'onready')\n  }\n\n  if (!Object.create) {\n    Object.create = function (o) {\n      function F () {}\n      F.prototype = o\n      var newf = new F()\n      return newf\n    }\n  }\n\n  if (!Object.keys) {\n    Object.keys = function (o) {\n      var a = []\n      for (var i in o) if (o.hasOwnProperty(i)) a.push(i)\n      return a\n    }\n  }\n\n  function checkBufferLength (parser) {\n    var maxAllowed = Math.max(sax.MAX_BUFFER_LENGTH, 10)\n    var maxActual = 0\n    for (var i = 0, l = buffers.length; i < l; i++) {\n      var len = parser[buffers[i]].length\n      if (len > maxAllowed) {\n        // Text/cdata nodes can get big, and since they're buffered,\n        // we can get here under normal conditions.\n        // Avoid issues by emitting the text node now,\n        // so at least it won't get any bigger.\n        switch (buffers[i]) {\n          case 'textNode':\n            closeText(parser)\n            break\n\n          case 'cdata':\n            emitNode(parser, 'oncdata', parser.cdata)\n            parser.cdata = ''\n            break\n\n          case 'script':\n            emitNode(parser, 'onscript', parser.script)\n            parser.script = ''\n            break\n\n          default:\n            error(parser, 'Max buffer length exceeded: ' + buffers[i])\n        }\n      }\n      maxActual = Math.max(maxActual, len)\n    }\n    // schedule the next check for the earliest possible buffer overrun.\n    var m = sax.MAX_BUFFER_LENGTH - maxActual\n    parser.bufferCheckPosition = m + parser.position\n  }\n\n  function clearBuffers (parser) {\n    for (var i = 0, l = buffers.length; i < l; i++) {\n      parser[buffers[i]] = ''\n    }\n  }\n\n  function flushBuffers (parser) {\n    closeText(parser)\n    if (parser.cdata !== '') {\n      emitNode(parser, 'oncdata', parser.cdata)\n      parser.cdata = ''\n    }\n    if (parser.script !== '') {\n      emitNode(parser, 'onscript', parser.script)\n      parser.script = ''\n    }\n  }\n\n  SAXParser.prototype = {\n    end: function () { end(this) },\n    write: write,\n    resume: function () { this.error = null; return this },\n    close: function () { return this.write(null) },\n    flush: function () { flushBuffers(this) }\n  }\n\n  var Stream\n  try {\n    Stream = __webpack_require__(/*! stream */ \"./node_modules/stream-browserify/index.js\").Stream\n  } catch (ex) {\n    Stream = function () {}\n  }\n\n  var streamWraps = sax.EVENTS.filter(function (ev) {\n    return ev !== 'error' && ev !== 'end'\n  })\n\n  function createStream (strict, opt) {\n    return new SAXStream(strict, opt)\n  }\n\n  function SAXStream (strict, opt) {\n    if (!(this instanceof SAXStream)) {\n      return new SAXStream(strict, opt)\n    }\n\n    Stream.apply(this)\n\n    this._parser = new SAXParser(strict, opt)\n    this.writable = true\n    this.readable = true\n\n    var me = this\n\n    this._parser.onend = function () {\n      me.emit('end')\n    }\n\n    this._parser.onerror = function (er) {\n      me.emit('error', er)\n\n      // if didn't throw, then means error was handled.\n      // go ahead and clear error, so we can write again.\n      me._parser.error = null\n    }\n\n    this._decoder = null\n\n    streamWraps.forEach(function (ev) {\n      Object.defineProperty(me, 'on' + ev, {\n        get: function () {\n          return me._parser['on' + ev]\n        },\n        set: function (h) {\n          if (!h) {\n            me.removeAllListeners(ev)\n            me._parser['on' + ev] = h\n            return h\n          }\n          me.on(ev, h)\n        },\n        enumerable: true,\n        configurable: false\n      })\n    })\n  }\n\n  SAXStream.prototype = Object.create(Stream.prototype, {\n    constructor: {\n      value: SAXStream\n    }\n  })\n\n  SAXStream.prototype.write = function (data) {\n    if (typeof Buffer === 'function' &&\n      typeof Buffer.isBuffer === 'function' &&\n      Buffer.isBuffer(data)) {\n      if (!this._decoder) {\n        var SD = __webpack_require__(/*! string_decoder */ \"./node_modules/string_decoder/lib/string_decoder.js\").StringDecoder\n        this._decoder = new SD('utf8')\n      }\n      data = this._decoder.write(data)\n    }\n\n    this._parser.write(data.toString())\n    this.emit('data', data)\n    return true\n  }\n\n  SAXStream.prototype.end = function (chunk) {\n    if (chunk && chunk.length) {\n      this.write(chunk)\n    }\n    this._parser.end()\n    return true\n  }\n\n  SAXStream.prototype.on = function (ev, handler) {\n    var me = this\n    if (!me._parser['on' + ev] && streamWraps.indexOf(ev) !== -1) {\n      me._parser['on' + ev] = function () {\n        var args = arguments.length === 1 ? [arguments[0]] : Array.apply(null, arguments)\n        args.splice(0, 0, ev)\n        me.emit.apply(me, args)\n      }\n    }\n\n    return Stream.prototype.on.call(me, ev, handler)\n  }\n\n  // this really needs to be replaced with character classes.\n  // XML allows all manner of ridiculous numbers and digits.\n  var CDATA = '[CDATA['\n  var DOCTYPE = 'DOCTYPE'\n  var XML_NAMESPACE = 'http://www.w3.org/XML/1998/namespace'\n  var XMLNS_NAMESPACE = 'http://www.w3.org/2000/xmlns/'\n  var rootNS = { xml: XML_NAMESPACE, xmlns: XMLNS_NAMESPACE }\n\n  // http://www.w3.org/TR/REC-xml/#NT-NameStartChar\n  // This implementation works on strings, a single character at a time\n  // as such, it cannot ever support astral-plane characters (10000-EFFFF)\n  // without a significant breaking change to either this  parser, or the\n  // JavaScript language.  Implementation of an emoji-capable xml parser\n  // is left as an exercise for the reader.\n  var nameStart = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/\n\n  var nameBody = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040.\\d-]/\n\n  var entityStart = /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/\n  var entityBody = /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040.\\d-]/\n\n  function isWhitespace (c) {\n    return c === ' ' || c === '\\n' || c === '\\r' || c === '\\t'\n  }\n\n  function isQuote (c) {\n    return c === '\"' || c === '\\''\n  }\n\n  function isAttribEnd (c) {\n    return c === '>' || isWhitespace(c)\n  }\n\n  function isMatch (regex, c) {\n    return regex.test(c)\n  }\n\n  function notMatch (regex, c) {\n    return !isMatch(regex, c)\n  }\n\n  var S = 0\n  sax.STATE = {\n    BEGIN: S++, // leading byte order mark or whitespace\n    BEGIN_WHITESPACE: S++, // leading whitespace\n    TEXT: S++, // general stuff\n    TEXT_ENTITY: S++, // &amp and such.\n    OPEN_WAKA: S++, // <\n    SGML_DECL: S++, // <!BLARG\n    SGML_DECL_QUOTED: S++, // <!BLARG foo \"bar\n    DOCTYPE: S++, // <!DOCTYPE\n    DOCTYPE_QUOTED: S++, // <!DOCTYPE \"//blah\n    DOCTYPE_DTD: S++, // <!DOCTYPE \"//blah\" [ ...\n    DOCTYPE_DTD_QUOTED: S++, // <!DOCTYPE \"//blah\" [ \"foo\n    COMMENT_STARTING: S++, // <!-\n    COMMENT: S++, // <!--\n    COMMENT_ENDING: S++, // <!-- blah -\n    COMMENT_ENDED: S++, // <!-- blah --\n    CDATA: S++, // <![CDATA[ something\n    CDATA_ENDING: S++, // ]\n    CDATA_ENDING_2: S++, // ]]\n    PROC_INST: S++, // <?hi\n    PROC_INST_BODY: S++, // <?hi there\n    PROC_INST_ENDING: S++, // <?hi \"there\" ?\n    OPEN_TAG: S++, // <strong\n    OPEN_TAG_SLASH: S++, // <strong /\n    ATTRIB: S++, // <a\n    ATTRIB_NAME: S++, // <a foo\n    ATTRIB_NAME_SAW_WHITE: S++, // <a foo _\n    ATTRIB_VALUE: S++, // <a foo=\n    ATTRIB_VALUE_QUOTED: S++, // <a foo=\"bar\n    ATTRIB_VALUE_CLOSED: S++, // <a foo=\"bar\"\n    ATTRIB_VALUE_UNQUOTED: S++, // <a foo=bar\n    ATTRIB_VALUE_ENTITY_Q: S++, // <foo bar=\"&quot;\"\n    ATTRIB_VALUE_ENTITY_U: S++, // <foo bar=&quot\n    CLOSE_TAG: S++, // </a\n    CLOSE_TAG_SAW_WHITE: S++, // </a   >\n    SCRIPT: S++, // <script> ...\n    SCRIPT_ENDING: S++ // <script> ... <\n  }\n\n  sax.XML_ENTITIES = {\n    'amp': '&',\n    'gt': '>',\n    'lt': '<',\n    'quot': '\"',\n    'apos': \"'\"\n  }\n\n  sax.ENTITIES = {\n    'amp': '&',\n    'gt': '>',\n    'lt': '<',\n    'quot': '\"',\n    'apos': \"'\",\n    'AElig': 198,\n    'Aacute': 193,\n    'Acirc': 194,\n    'Agrave': 192,\n    'Aring': 197,\n    'Atilde': 195,\n    'Auml': 196,\n    'Ccedil': 199,\n    'ETH': 208,\n    'Eacute': 201,\n    'Ecirc': 202,\n    'Egrave': 200,\n    'Euml': 203,\n    'Iacute': 205,\n    'Icirc': 206,\n    'Igrave': 204,\n    'Iuml': 207,\n    'Ntilde': 209,\n    'Oacute': 211,\n    'Ocirc': 212,\n    'Ograve': 210,\n    'Oslash': 216,\n    'Otilde': 213,\n    'Ouml': 214,\n    'THORN': 222,\n    'Uacute': 218,\n    'Ucirc': 219,\n    'Ugrave': 217,\n    'Uuml': 220,\n    'Yacute': 221,\n    'aacute': 225,\n    'acirc': 226,\n    'aelig': 230,\n    'agrave': 224,\n    'aring': 229,\n    'atilde': 227,\n    'auml': 228,\n    'ccedil': 231,\n    'eacute': 233,\n    'ecirc': 234,\n    'egrave': 232,\n    'eth': 240,\n    'euml': 235,\n    'iacute': 237,\n    'icirc': 238,\n    'igrave': 236,\n    'iuml': 239,\n    'ntilde': 241,\n    'oacute': 243,\n    'ocirc': 244,\n    'ograve': 242,\n    'oslash': 248,\n    'otilde': 245,\n    'ouml': 246,\n    'szlig': 223,\n    'thorn': 254,\n    'uacute': 250,\n    'ucirc': 251,\n    'ugrave': 249,\n    'uuml': 252,\n    'yacute': 253,\n    'yuml': 255,\n    'copy': 169,\n    'reg': 174,\n    'nbsp': 160,\n    'iexcl': 161,\n    'cent': 162,\n    'pound': 163,\n    'curren': 164,\n    'yen': 165,\n    'brvbar': 166,\n    'sect': 167,\n    'uml': 168,\n    'ordf': 170,\n    'laquo': 171,\n    'not': 172,\n    'shy': 173,\n    'macr': 175,\n    'deg': 176,\n    'plusmn': 177,\n    'sup1': 185,\n    'sup2': 178,\n    'sup3': 179,\n    'acute': 180,\n    'micro': 181,\n    'para': 182,\n    'middot': 183,\n    'cedil': 184,\n    'ordm': 186,\n    'raquo': 187,\n    'frac14': 188,\n    'frac12': 189,\n    'frac34': 190,\n    'iquest': 191,\n    'times': 215,\n    'divide': 247,\n    'OElig': 338,\n    'oelig': 339,\n    'Scaron': 352,\n    'scaron': 353,\n    'Yuml': 376,\n    'fnof': 402,\n    'circ': 710,\n    'tilde': 732,\n    'Alpha': 913,\n    'Beta': 914,\n    'Gamma': 915,\n    'Delta': 916,\n    'Epsilon': 917,\n    'Zeta': 918,\n    'Eta': 919,\n    'Theta': 920,\n    'Iota': 921,\n    'Kappa': 922,\n    'Lambda': 923,\n    'Mu': 924,\n    'Nu': 925,\n    'Xi': 926,\n    'Omicron': 927,\n    'Pi': 928,\n    'Rho': 929,\n    'Sigma': 931,\n    'Tau': 932,\n    'Upsilon': 933,\n    'Phi': 934,\n    'Chi': 935,\n    'Psi': 936,\n    'Omega': 937,\n    'alpha': 945,\n    'beta': 946,\n    'gamma': 947,\n    'delta': 948,\n    'epsilon': 949,\n    'zeta': 950,\n    'eta': 951,\n    'theta': 952,\n    'iota': 953,\n    'kappa': 954,\n    'lambda': 955,\n    'mu': 956,\n    'nu': 957,\n    'xi': 958,\n    'omicron': 959,\n    'pi': 960,\n    'rho': 961,\n    'sigmaf': 962,\n    'sigma': 963,\n    'tau': 964,\n    'upsilon': 965,\n    'phi': 966,\n    'chi': 967,\n    'psi': 968,\n    'omega': 969,\n    'thetasym': 977,\n    'upsih': 978,\n    'piv': 982,\n    'ensp': 8194,\n    'emsp': 8195,\n    'thinsp': 8201,\n    'zwnj': 8204,\n    'zwj': 8205,\n    'lrm': 8206,\n    'rlm': 8207,\n    'ndash': 8211,\n    'mdash': 8212,\n    'lsquo': 8216,\n    'rsquo': 8217,\n    'sbquo': 8218,\n    'ldquo': 8220,\n    'rdquo': 8221,\n    'bdquo': 8222,\n    'dagger': 8224,\n    'Dagger': 8225,\n    'bull': 8226,\n    'hellip': 8230,\n    'permil': 8240,\n    'prime': 8242,\n    'Prime': 8243,\n    'lsaquo': 8249,\n    'rsaquo': 8250,\n    'oline': 8254,\n    'frasl': 8260,\n    'euro': 8364,\n    'image': 8465,\n    'weierp': 8472,\n    'real': 8476,\n    'trade': 8482,\n    'alefsym': 8501,\n    'larr': 8592,\n    'uarr': 8593,\n    'rarr': 8594,\n    'darr': 8595,\n    'harr': 8596,\n    'crarr': 8629,\n    'lArr': 8656,\n    'uArr': 8657,\n    'rArr': 8658,\n    'dArr': 8659,\n    'hArr': 8660,\n    'forall': 8704,\n    'part': 8706,\n    'exist': 8707,\n    'empty': 8709,\n    'nabla': 8711,\n    'isin': 8712,\n    'notin': 8713,\n    'ni': 8715,\n    'prod': 8719,\n    'sum': 8721,\n    'minus': 8722,\n    'lowast': 8727,\n    'radic': 8730,\n    'prop': 8733,\n    'infin': 8734,\n    'ang': 8736,\n    'and': 8743,\n    'or': 8744,\n    'cap': 8745,\n    'cup': 8746,\n    'int': 8747,\n    'there4': 8756,\n    'sim': 8764,\n    'cong': 8773,\n    'asymp': 8776,\n    'ne': 8800,\n    'equiv': 8801,\n    'le': 8804,\n    'ge': 8805,\n    'sub': 8834,\n    'sup': 8835,\n    'nsub': 8836,\n    'sube': 8838,\n    'supe': 8839,\n    'oplus': 8853,\n    'otimes': 8855,\n    'perp': 8869,\n    'sdot': 8901,\n    'lceil': 8968,\n    'rceil': 8969,\n    'lfloor': 8970,\n    'rfloor': 8971,\n    'lang': 9001,\n    'rang': 9002,\n    'loz': 9674,\n    'spades': 9824,\n    'clubs': 9827,\n    'hearts': 9829,\n    'diams': 9830\n  }\n\n  Object.keys(sax.ENTITIES).forEach(function (key) {\n    var e = sax.ENTITIES[key]\n    var s = typeof e === 'number' ? String.fromCharCode(e) : e\n    sax.ENTITIES[key] = s\n  })\n\n  for (var s in sax.STATE) {\n    sax.STATE[sax.STATE[s]] = s\n  }\n\n  // shorthand\n  S = sax.STATE\n\n  function emit (parser, event, data) {\n    parser[event] && parser[event](data)\n  }\n\n  function emitNode (parser, nodeType, data) {\n    if (parser.textNode) closeText(parser)\n    emit(parser, nodeType, data)\n  }\n\n  function closeText (parser) {\n    parser.textNode = textopts(parser.opt, parser.textNode)\n    if (parser.textNode) emit(parser, 'ontext', parser.textNode)\n    parser.textNode = ''\n  }\n\n  function textopts (opt, text) {\n    if (opt.trim) text = text.trim()\n    if (opt.normalize) text = text.replace(/\\s+/g, ' ')\n    return text\n  }\n\n  function error (parser, er) {\n    closeText(parser)\n    if (parser.trackPosition) {\n      er += '\\nLine: ' + parser.line +\n        '\\nColumn: ' + parser.column +\n        '\\nChar: ' + parser.c\n    }\n    er = new Error(er)\n    parser.error = er\n    emit(parser, 'onerror', er)\n    return parser\n  }\n\n  function end (parser) {\n    if (parser.sawRoot && !parser.closedRoot) strictFail(parser, 'Unclosed root tag')\n    if ((parser.state !== S.BEGIN) &&\n      (parser.state !== S.BEGIN_WHITESPACE) &&\n      (parser.state !== S.TEXT)) {\n      error(parser, 'Unexpected end')\n    }\n    closeText(parser)\n    parser.c = ''\n    parser.closed = true\n    emit(parser, 'onend')\n    SAXParser.call(parser, parser.strict, parser.opt)\n    return parser\n  }\n\n  function strictFail (parser, message) {\n    if (typeof parser !== 'object' || !(parser instanceof SAXParser)) {\n      throw new Error('bad call to strictFail')\n    }\n    if (parser.strict) {\n      error(parser, message)\n    }\n  }\n\n  function newTag (parser) {\n    if (!parser.strict) parser.tagName = parser.tagName[parser.looseCase]()\n    var parent = parser.tags[parser.tags.length - 1] || parser\n    var tag = parser.tag = { name: parser.tagName, attributes: {} }\n\n    // will be overridden if tag contails an xmlns=\"foo\" or xmlns:foo=\"bar\"\n    if (parser.opt.xmlns) {\n      tag.ns = parent.ns\n    }\n    parser.attribList.length = 0\n    emitNode(parser, 'onopentagstart', tag)\n  }\n\n  function qname (name, attribute) {\n    var i = name.indexOf(':')\n    var qualName = i < 0 ? [ '', name ] : name.split(':')\n    var prefix = qualName[0]\n    var local = qualName[1]\n\n    // <x \"xmlns\"=\"http://foo\">\n    if (attribute && name === 'xmlns') {\n      prefix = 'xmlns'\n      local = ''\n    }\n\n    return { prefix: prefix, local: local }\n  }\n\n  function attrib (parser) {\n    if (!parser.strict) {\n      parser.attribName = parser.attribName[parser.looseCase]()\n    }\n\n    if (parser.attribList.indexOf(parser.attribName) !== -1 ||\n      parser.tag.attributes.hasOwnProperty(parser.attribName)) {\n      parser.attribName = parser.attribValue = ''\n      return\n    }\n\n    if (parser.opt.xmlns) {\n      var qn = qname(parser.attribName, true)\n      var prefix = qn.prefix\n      var local = qn.local\n\n      if (prefix === 'xmlns') {\n        // namespace binding attribute. push the binding into scope\n        if (local === 'xml' && parser.attribValue !== XML_NAMESPACE) {\n          strictFail(parser,\n            'xml: prefix must be bound to ' + XML_NAMESPACE + '\\n' +\n            'Actual: ' + parser.attribValue)\n        } else if (local === 'xmlns' && parser.attribValue !== XMLNS_NAMESPACE) {\n          strictFail(parser,\n            'xmlns: prefix must be bound to ' + XMLNS_NAMESPACE + '\\n' +\n            'Actual: ' + parser.attribValue)\n        } else {\n          var tag = parser.tag\n          var parent = parser.tags[parser.tags.length - 1] || parser\n          if (tag.ns === parent.ns) {\n            tag.ns = Object.create(parent.ns)\n          }\n          tag.ns[local] = parser.attribValue\n        }\n      }\n\n      // defer onattribute events until all attributes have been seen\n      // so any new bindings can take effect. preserve attribute order\n      // so deferred events can be emitted in document order\n      parser.attribList.push([parser.attribName, parser.attribValue])\n    } else {\n      // in non-xmlns mode, we can emit the event right away\n      parser.tag.attributes[parser.attribName] = parser.attribValue\n      emitNode(parser, 'onattribute', {\n        name: parser.attribName,\n        value: parser.attribValue\n      })\n    }\n\n    parser.attribName = parser.attribValue = ''\n  }\n\n  function openTag (parser, selfClosing) {\n    if (parser.opt.xmlns) {\n      // emit namespace binding events\n      var tag = parser.tag\n\n      // add namespace info to tag\n      var qn = qname(parser.tagName)\n      tag.prefix = qn.prefix\n      tag.local = qn.local\n      tag.uri = tag.ns[qn.prefix] || ''\n\n      if (tag.prefix && !tag.uri) {\n        strictFail(parser, 'Unbound namespace prefix: ' +\n          JSON.stringify(parser.tagName))\n        tag.uri = qn.prefix\n      }\n\n      var parent = parser.tags[parser.tags.length - 1] || parser\n      if (tag.ns && parent.ns !== tag.ns) {\n        Object.keys(tag.ns).forEach(function (p) {\n          emitNode(parser, 'onopennamespace', {\n            prefix: p,\n            uri: tag.ns[p]\n          })\n        })\n      }\n\n      // handle deferred onattribute events\n      // Note: do not apply default ns to attributes:\n      //   http://www.w3.org/TR/REC-xml-names/#defaulting\n      for (var i = 0, l = parser.attribList.length; i < l; i++) {\n        var nv = parser.attribList[i]\n        var name = nv[0]\n        var value = nv[1]\n        var qualName = qname(name, true)\n        var prefix = qualName.prefix\n        var local = qualName.local\n        var uri = prefix === '' ? '' : (tag.ns[prefix] || '')\n        var a = {\n          name: name,\n          value: value,\n          prefix: prefix,\n          local: local,\n          uri: uri\n        }\n\n        // if there's any attributes with an undefined namespace,\n        // then fail on them now.\n        if (prefix && prefix !== 'xmlns' && !uri) {\n          strictFail(parser, 'Unbound namespace prefix: ' +\n            JSON.stringify(prefix))\n          a.uri = prefix\n        }\n        parser.tag.attributes[name] = a\n        emitNode(parser, 'onattribute', a)\n      }\n      parser.attribList.length = 0\n    }\n\n    parser.tag.isSelfClosing = !!selfClosing\n\n    // process the tag\n    parser.sawRoot = true\n    parser.tags.push(parser.tag)\n    emitNode(parser, 'onopentag', parser.tag)\n    if (!selfClosing) {\n      // special case for <script> in non-strict mode.\n      if (!parser.noscript && parser.tagName.toLowerCase() === 'script') {\n        parser.state = S.SCRIPT\n      } else {\n        parser.state = S.TEXT\n      }\n      parser.tag = null\n      parser.tagName = ''\n    }\n    parser.attribName = parser.attribValue = ''\n    parser.attribList.length = 0\n  }\n\n  function closeTag (parser) {\n    if (!parser.tagName) {\n      strictFail(parser, 'Weird empty close tag.')\n      parser.textNode += '</>'\n      parser.state = S.TEXT\n      return\n    }\n\n    if (parser.script) {\n      if (parser.tagName !== 'script') {\n        parser.script += '</' + parser.tagName + '>'\n        parser.tagName = ''\n        parser.state = S.SCRIPT\n        return\n      }\n      emitNode(parser, 'onscript', parser.script)\n      parser.script = ''\n    }\n\n    // first make sure that the closing tag actually exists.\n    // <a><b></c></b></a> will close everything, otherwise.\n    var t = parser.tags.length\n    var tagName = parser.tagName\n    if (!parser.strict) {\n      tagName = tagName[parser.looseCase]()\n    }\n    var closeTo = tagName\n    while (t--) {\n      var close = parser.tags[t]\n      if (close.name !== closeTo) {\n        // fail the first time in strict mode\n        strictFail(parser, 'Unexpected close tag')\n      } else {\n        break\n      }\n    }\n\n    // didn't find it.  we already failed for strict, so just abort.\n    if (t < 0) {\n      strictFail(parser, 'Unmatched closing tag: ' + parser.tagName)\n      parser.textNode += '</' + parser.tagName + '>'\n      parser.state = S.TEXT\n      return\n    }\n    parser.tagName = tagName\n    var s = parser.tags.length\n    while (s-- > t) {\n      var tag = parser.tag = parser.tags.pop()\n      parser.tagName = parser.tag.name\n      emitNode(parser, 'onclosetag', parser.tagName)\n\n      var x = {}\n      for (var i in tag.ns) {\n        x[i] = tag.ns[i]\n      }\n\n      var parent = parser.tags[parser.tags.length - 1] || parser\n      if (parser.opt.xmlns && tag.ns !== parent.ns) {\n        // remove namespace bindings introduced by tag\n        Object.keys(tag.ns).forEach(function (p) {\n          var n = tag.ns[p]\n          emitNode(parser, 'onclosenamespace', { prefix: p, uri: n })\n        })\n      }\n    }\n    if (t === 0) parser.closedRoot = true\n    parser.tagName = parser.attribValue = parser.attribName = ''\n    parser.attribList.length = 0\n    parser.state = S.TEXT\n  }\n\n  function parseEntity (parser) {\n    var entity = parser.entity\n    var entityLC = entity.toLowerCase()\n    var num\n    var numStr = ''\n\n    if (parser.ENTITIES[entity]) {\n      return parser.ENTITIES[entity]\n    }\n    if (parser.ENTITIES[entityLC]) {\n      return parser.ENTITIES[entityLC]\n    }\n    entity = entityLC\n    if (entity.charAt(0) === '#') {\n      if (entity.charAt(1) === 'x') {\n        entity = entity.slice(2)\n        num = parseInt(entity, 16)\n        numStr = num.toString(16)\n      } else {\n        entity = entity.slice(1)\n        num = parseInt(entity, 10)\n        numStr = num.toString(10)\n      }\n    }\n    entity = entity.replace(/^0+/, '')\n    if (isNaN(num) || numStr.toLowerCase() !== entity) {\n      strictFail(parser, 'Invalid character entity')\n      return '&' + parser.entity + ';'\n    }\n\n    return String.fromCodePoint(num)\n  }\n\n  function beginWhiteSpace (parser, c) {\n    if (c === '<') {\n      parser.state = S.OPEN_WAKA\n      parser.startTagPosition = parser.position\n    } else if (!isWhitespace(c)) {\n      // have to process this as a text node.\n      // weird, but happens.\n      strictFail(parser, 'Non-whitespace before first tag.')\n      parser.textNode = c\n      parser.state = S.TEXT\n    }\n  }\n\n  function charAt (chunk, i) {\n    var result = ''\n    if (i < chunk.length) {\n      result = chunk.charAt(i)\n    }\n    return result\n  }\n\n  function write (chunk) {\n    var parser = this\n    if (this.error) {\n      throw this.error\n    }\n    if (parser.closed) {\n      return error(parser,\n        'Cannot write after close. Assign an onready handler.')\n    }\n    if (chunk === null) {\n      return end(parser)\n    }\n    if (typeof chunk === 'object') {\n      chunk = chunk.toString()\n    }\n    var i = 0\n    var c = ''\n    while (true) {\n      c = charAt(chunk, i++)\n      parser.c = c\n\n      if (!c) {\n        break\n      }\n\n      if (parser.trackPosition) {\n        parser.position++\n        if (c === '\\n') {\n          parser.line++\n          parser.column = 0\n        } else {\n          parser.column++\n        }\n      }\n\n      switch (parser.state) {\n        case S.BEGIN:\n          parser.state = S.BEGIN_WHITESPACE\n          if (c === '\\uFEFF') {\n            continue\n          }\n          beginWhiteSpace(parser, c)\n          continue\n\n        case S.BEGIN_WHITESPACE:\n          beginWhiteSpace(parser, c)\n          continue\n\n        case S.TEXT:\n          if (parser.sawRoot && !parser.closedRoot) {\n            var starti = i - 1\n            while (c && c !== '<' && c !== '&') {\n              c = charAt(chunk, i++)\n              if (c && parser.trackPosition) {\n                parser.position++\n                if (c === '\\n') {\n                  parser.line++\n                  parser.column = 0\n                } else {\n                  parser.column++\n                }\n              }\n            }\n            parser.textNode += chunk.substring(starti, i - 1)\n          }\n          if (c === '<' && !(parser.sawRoot && parser.closedRoot && !parser.strict)) {\n            parser.state = S.OPEN_WAKA\n            parser.startTagPosition = parser.position\n          } else {\n            if (!isWhitespace(c) && (!parser.sawRoot || parser.closedRoot)) {\n              strictFail(parser, 'Text data outside of root node.')\n            }\n            if (c === '&') {\n              parser.state = S.TEXT_ENTITY\n            } else {\n              parser.textNode += c\n            }\n          }\n          continue\n\n        case S.SCRIPT:\n          // only non-strict\n          if (c === '<') {\n            parser.state = S.SCRIPT_ENDING\n          } else {\n            parser.script += c\n          }\n          continue\n\n        case S.SCRIPT_ENDING:\n          if (c === '/') {\n            parser.state = S.CLOSE_TAG\n          } else {\n            parser.script += '<' + c\n            parser.state = S.SCRIPT\n          }\n          continue\n\n        case S.OPEN_WAKA:\n          // either a /, ?, !, or text is coming next.\n          if (c === '!') {\n            parser.state = S.SGML_DECL\n            parser.sgmlDecl = ''\n          } else if (isWhitespace(c)) {\n            // wait for it...\n          } else if (isMatch(nameStart, c)) {\n            parser.state = S.OPEN_TAG\n            parser.tagName = c\n          } else if (c === '/') {\n            parser.state = S.CLOSE_TAG\n            parser.tagName = ''\n          } else if (c === '?') {\n            parser.state = S.PROC_INST\n            parser.procInstName = parser.procInstBody = ''\n          } else {\n            strictFail(parser, 'Unencoded <')\n            // if there was some whitespace, then add that in.\n            if (parser.startTagPosition + 1 < parser.position) {\n              var pad = parser.position - parser.startTagPosition\n              c = new Array(pad).join(' ') + c\n            }\n            parser.textNode += '<' + c\n            parser.state = S.TEXT\n          }\n          continue\n\n        case S.SGML_DECL:\n          if ((parser.sgmlDecl + c).toUpperCase() === CDATA) {\n            emitNode(parser, 'onopencdata')\n            parser.state = S.CDATA\n            parser.sgmlDecl = ''\n            parser.cdata = ''\n          } else if (parser.sgmlDecl + c === '--') {\n            parser.state = S.COMMENT\n            parser.comment = ''\n            parser.sgmlDecl = ''\n          } else if ((parser.sgmlDecl + c).toUpperCase() === DOCTYPE) {\n            parser.state = S.DOCTYPE\n            if (parser.doctype || parser.sawRoot) {\n              strictFail(parser,\n                'Inappropriately located doctype declaration')\n            }\n            parser.doctype = ''\n            parser.sgmlDecl = ''\n          } else if (c === '>') {\n            emitNode(parser, 'onsgmldeclaration', parser.sgmlDecl)\n            parser.sgmlDecl = ''\n            parser.state = S.TEXT\n          } else if (isQuote(c)) {\n            parser.state = S.SGML_DECL_QUOTED\n            parser.sgmlDecl += c\n          } else {\n            parser.sgmlDecl += c\n          }\n          continue\n\n        case S.SGML_DECL_QUOTED:\n          if (c === parser.q) {\n            parser.state = S.SGML_DECL\n            parser.q = ''\n          }\n          parser.sgmlDecl += c\n          continue\n\n        case S.DOCTYPE:\n          if (c === '>') {\n            parser.state = S.TEXT\n            emitNode(parser, 'ondoctype', parser.doctype)\n            parser.doctype = true // just remember that we saw it.\n          } else {\n            parser.doctype += c\n            if (c === '[') {\n              parser.state = S.DOCTYPE_DTD\n            } else if (isQuote(c)) {\n              parser.state = S.DOCTYPE_QUOTED\n              parser.q = c\n            }\n          }\n          continue\n\n        case S.DOCTYPE_QUOTED:\n          parser.doctype += c\n          if (c === parser.q) {\n            parser.q = ''\n            parser.state = S.DOCTYPE\n          }\n          continue\n\n        case S.DOCTYPE_DTD:\n          parser.doctype += c\n          if (c === ']') {\n            parser.state = S.DOCTYPE\n          } else if (isQuote(c)) {\n            parser.state = S.DOCTYPE_DTD_QUOTED\n            parser.q = c\n          }\n          continue\n\n        case S.DOCTYPE_DTD_QUOTED:\n          parser.doctype += c\n          if (c === parser.q) {\n            parser.state = S.DOCTYPE_DTD\n            parser.q = ''\n          }\n          continue\n\n        case S.COMMENT:\n          if (c === '-') {\n            parser.state = S.COMMENT_ENDING\n          } else {\n            parser.comment += c\n          }\n          continue\n\n        case S.COMMENT_ENDING:\n          if (c === '-') {\n            parser.state = S.COMMENT_ENDED\n            parser.comment = textopts(parser.opt, parser.comment)\n            if (parser.comment) {\n              emitNode(parser, 'oncomment', parser.comment)\n            }\n            parser.comment = ''\n          } else {\n            parser.comment += '-' + c\n            parser.state = S.COMMENT\n          }\n          continue\n\n        case S.COMMENT_ENDED:\n          if (c !== '>') {\n            strictFail(parser, 'Malformed comment')\n            // allow <!-- blah -- bloo --> in non-strict mode,\n            // which is a comment of \" blah -- bloo \"\n            parser.comment += '--' + c\n            parser.state = S.COMMENT\n          } else {\n            parser.state = S.TEXT\n          }\n          continue\n\n        case S.CDATA:\n          if (c === ']') {\n            parser.state = S.CDATA_ENDING\n          } else {\n            parser.cdata += c\n          }\n          continue\n\n        case S.CDATA_ENDING:\n          if (c === ']') {\n            parser.state = S.CDATA_ENDING_2\n          } else {\n            parser.cdata += ']' + c\n            parser.state = S.CDATA\n          }\n          continue\n\n        case S.CDATA_ENDING_2:\n          if (c === '>') {\n            if (parser.cdata) {\n              emitNode(parser, 'oncdata', parser.cdata)\n            }\n            emitNode(parser, 'onclosecdata')\n            parser.cdata = ''\n            parser.state = S.TEXT\n          } else if (c === ']') {\n            parser.cdata += ']'\n          } else {\n            parser.cdata += ']]' + c\n            parser.state = S.CDATA\n          }\n          continue\n\n        case S.PROC_INST:\n          if (c === '?') {\n            parser.state = S.PROC_INST_ENDING\n          } else if (isWhitespace(c)) {\n            parser.state = S.PROC_INST_BODY\n          } else {\n            parser.procInstName += c\n          }\n          continue\n\n        case S.PROC_INST_BODY:\n          if (!parser.procInstBody && isWhitespace(c)) {\n            continue\n          } else if (c === '?') {\n            parser.state = S.PROC_INST_ENDING\n          } else {\n            parser.procInstBody += c\n          }\n          continue\n\n        case S.PROC_INST_ENDING:\n          if (c === '>') {\n            emitNode(parser, 'onprocessinginstruction', {\n              name: parser.procInstName,\n              body: parser.procInstBody\n            })\n            parser.procInstName = parser.procInstBody = ''\n            parser.state = S.TEXT\n          } else {\n            parser.procInstBody += '?' + c\n            parser.state = S.PROC_INST_BODY\n          }\n          continue\n\n        case S.OPEN_TAG:\n          if (isMatch(nameBody, c)) {\n            parser.tagName += c\n          } else {\n            newTag(parser)\n            if (c === '>') {\n              openTag(parser)\n            } else if (c === '/') {\n              parser.state = S.OPEN_TAG_SLASH\n            } else {\n              if (!isWhitespace(c)) {\n                strictFail(parser, 'Invalid character in tag name')\n              }\n              parser.state = S.ATTRIB\n            }\n          }\n          continue\n\n        case S.OPEN_TAG_SLASH:\n          if (c === '>') {\n            openTag(parser, true)\n            closeTag(parser)\n          } else {\n            strictFail(parser, 'Forward-slash in opening tag not followed by >')\n            parser.state = S.ATTRIB\n          }\n          continue\n\n        case S.ATTRIB:\n          // haven't read the attribute name yet.\n          if (isWhitespace(c)) {\n            continue\n          } else if (c === '>') {\n            openTag(parser)\n          } else if (c === '/') {\n            parser.state = S.OPEN_TAG_SLASH\n          } else if (isMatch(nameStart, c)) {\n            parser.attribName = c\n            parser.attribValue = ''\n            parser.state = S.ATTRIB_NAME\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_NAME:\n          if (c === '=') {\n            parser.state = S.ATTRIB_VALUE\n          } else if (c === '>') {\n            strictFail(parser, 'Attribute without value')\n            parser.attribValue = parser.attribName\n            attrib(parser)\n            openTag(parser)\n          } else if (isWhitespace(c)) {\n            parser.state = S.ATTRIB_NAME_SAW_WHITE\n          } else if (isMatch(nameBody, c)) {\n            parser.attribName += c\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_NAME_SAW_WHITE:\n          if (c === '=') {\n            parser.state = S.ATTRIB_VALUE\n          } else if (isWhitespace(c)) {\n            continue\n          } else {\n            strictFail(parser, 'Attribute without value')\n            parser.tag.attributes[parser.attribName] = ''\n            parser.attribValue = ''\n            emitNode(parser, 'onattribute', {\n              name: parser.attribName,\n              value: ''\n            })\n            parser.attribName = ''\n            if (c === '>') {\n              openTag(parser)\n            } else if (isMatch(nameStart, c)) {\n              parser.attribName = c\n              parser.state = S.ATTRIB_NAME\n            } else {\n              strictFail(parser, 'Invalid attribute name')\n              parser.state = S.ATTRIB\n            }\n          }\n          continue\n\n        case S.ATTRIB_VALUE:\n          if (isWhitespace(c)) {\n            continue\n          } else if (isQuote(c)) {\n            parser.q = c\n            parser.state = S.ATTRIB_VALUE_QUOTED\n          } else {\n            strictFail(parser, 'Unquoted attribute value')\n            parser.state = S.ATTRIB_VALUE_UNQUOTED\n            parser.attribValue = c\n          }\n          continue\n\n        case S.ATTRIB_VALUE_QUOTED:\n          if (c !== parser.q) {\n            if (c === '&') {\n              parser.state = S.ATTRIB_VALUE_ENTITY_Q\n            } else {\n              parser.attribValue += c\n            }\n            continue\n          }\n          attrib(parser)\n          parser.q = ''\n          parser.state = S.ATTRIB_VALUE_CLOSED\n          continue\n\n        case S.ATTRIB_VALUE_CLOSED:\n          if (isWhitespace(c)) {\n            parser.state = S.ATTRIB\n          } else if (c === '>') {\n            openTag(parser)\n          } else if (c === '/') {\n            parser.state = S.OPEN_TAG_SLASH\n          } else if (isMatch(nameStart, c)) {\n            strictFail(parser, 'No whitespace between attributes')\n            parser.attribName = c\n            parser.attribValue = ''\n            parser.state = S.ATTRIB_NAME\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_VALUE_UNQUOTED:\n          if (!isAttribEnd(c)) {\n            if (c === '&') {\n              parser.state = S.ATTRIB_VALUE_ENTITY_U\n            } else {\n              parser.attribValue += c\n            }\n            continue\n          }\n          attrib(parser)\n          if (c === '>') {\n            openTag(parser)\n          } else {\n            parser.state = S.ATTRIB\n          }\n          continue\n\n        case S.CLOSE_TAG:\n          if (!parser.tagName) {\n            if (isWhitespace(c)) {\n              continue\n            } else if (notMatch(nameStart, c)) {\n              if (parser.script) {\n                parser.script += '</' + c\n                parser.state = S.SCRIPT\n              } else {\n                strictFail(parser, 'Invalid tagname in closing tag.')\n              }\n            } else {\n              parser.tagName = c\n            }\n          } else if (c === '>') {\n            closeTag(parser)\n          } else if (isMatch(nameBody, c)) {\n            parser.tagName += c\n          } else if (parser.script) {\n            parser.script += '</' + parser.tagName\n            parser.tagName = ''\n            parser.state = S.SCRIPT\n          } else {\n            if (!isWhitespace(c)) {\n              strictFail(parser, 'Invalid tagname in closing tag')\n            }\n            parser.state = S.CLOSE_TAG_SAW_WHITE\n          }\n          continue\n\n        case S.CLOSE_TAG_SAW_WHITE:\n          if (isWhitespace(c)) {\n            continue\n          }\n          if (c === '>') {\n            closeTag(parser)\n          } else {\n            strictFail(parser, 'Invalid characters in closing tag')\n          }\n          continue\n\n        case S.TEXT_ENTITY:\n        case S.ATTRIB_VALUE_ENTITY_Q:\n        case S.ATTRIB_VALUE_ENTITY_U:\n          var returnState\n          var buffer\n          switch (parser.state) {\n            case S.TEXT_ENTITY:\n              returnState = S.TEXT\n              buffer = 'textNode'\n              break\n\n            case S.ATTRIB_VALUE_ENTITY_Q:\n              returnState = S.ATTRIB_VALUE_QUOTED\n              buffer = 'attribValue'\n              break\n\n            case S.ATTRIB_VALUE_ENTITY_U:\n              returnState = S.ATTRIB_VALUE_UNQUOTED\n              buffer = 'attribValue'\n              break\n          }\n\n          if (c === ';') {\n            parser[buffer] += parseEntity(parser)\n            parser.entity = ''\n            parser.state = returnState\n          } else if (isMatch(parser.entity.length ? entityBody : entityStart, c)) {\n            parser.entity += c\n          } else {\n            strictFail(parser, 'Invalid character in entity name')\n            parser[buffer] += '&' + parser.entity + c\n            parser.entity = ''\n            parser.state = returnState\n          }\n\n          continue\n\n        default:\n          throw new Error(parser, 'Unknown state: ' + parser.state)\n      }\n    } // while\n\n    if (parser.position >= parser.bufferCheckPosition) {\n      checkBufferLength(parser)\n    }\n    return parser\n  }\n\n  /*! http://mths.be/fromcodepoint v0.1.0 by @mathias */\n  /* istanbul ignore next */\n  if (!String.fromCodePoint) {\n    (function () {\n      var stringFromCharCode = String.fromCharCode\n      var floor = Math.floor\n      var fromCodePoint = function () {\n        var MAX_SIZE = 0x4000\n        var codeUnits = []\n        var highSurrogate\n        var lowSurrogate\n        var index = -1\n        var length = arguments.length\n        if (!length) {\n          return ''\n        }\n        var result = ''\n        while (++index < length) {\n          var codePoint = Number(arguments[index])\n          if (\n            !isFinite(codePoint) || // `NaN`, `+Infinity`, or `-Infinity`\n            codePoint < 0 || // not a valid Unicode code point\n            codePoint > 0x10FFFF || // not a valid Unicode code point\n            floor(codePoint) !== codePoint // not an integer\n          ) {\n            throw RangeError('Invalid code point: ' + codePoint)\n          }\n          if (codePoint <= 0xFFFF) { // BMP code point\n            codeUnits.push(codePoint)\n          } else { // Astral code point; split in surrogate halves\n            // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n            codePoint -= 0x10000\n            highSurrogate = (codePoint >> 10) + 0xD800\n            lowSurrogate = (codePoint % 0x400) + 0xDC00\n            codeUnits.push(highSurrogate, lowSurrogate)\n          }\n          if (index + 1 === length || codeUnits.length > MAX_SIZE) {\n            result += stringFromCharCode.apply(null, codeUnits)\n            codeUnits.length = 0\n          }\n        }\n        return result\n      }\n      /* istanbul ignore next */\n      if (Object.defineProperty) {\n        Object.defineProperty(String, 'fromCodePoint', {\n          value: fromCodePoint,\n          configurable: true,\n          writable: true\n        })\n      } else {\n        String.fromCodePoint = fromCodePoint\n      }\n    }())\n  }\n})( false ? undefined : exports)\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../node-libs-browser/node_modules/buffer/index.js */ \"./node_modules/node-libs-browser/node_modules/buffer/index.js\").Buffer))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/xml-js/node_modules/sax/lib/sax.js\n");

/***/ }),

/***/ "./src/browser/component/CodeRealityComponentController.ts":
/*!*****************************************************************!*\
  !*** ./src/browser/component/CodeRealityComponentController.ts ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst aframe_typescript_boilerplate_1 = __webpack_require__(/*! aframe-typescript-boilerplate */ \"./node_modules/aframe-typescript-boilerplate/built/index.js\");\nclass CodeRealityComponentController extends aframe_typescript_boilerplate_1.AbstractComponentController {\n    constructor(component, entity, data) {\n        super(component, entity, data);\n        this.interface = aframe_typescript_boilerplate_1.getSystemController(this.entity.sceneEl, \"interface\");\n    }\n}\nexports.CodeRealityComponentController = CodeRealityComponentController;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9jb21wb25lbnQvQ29kZVJlYWxpdHlDb21wb25lbnRDb250cm9sbGVyLnRzPzc1OWQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxnS0FBK0Y7QUFJL0YsTUFBc0IsOEJBQStCLFNBQVEsMkRBQTJCO0lBSXBGLFlBQVksU0FBb0IsRUFBRSxNQUFjLEVBQUUsSUFBUztRQUN2RCxLQUFLLENBQUMsU0FBUyxFQUFFLE1BQU0sRUFBRSxJQUFJLENBQUMsQ0FBQztRQUUvQixJQUFJLENBQUMsU0FBUyxHQUFHLG1EQUFtQixDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsT0FBUyxFQUFFLFdBQVcsQ0FBQyxDQUFDO0lBQzdFLENBQUM7Q0FFSjtBQVZELHdFQVVDIiwiZmlsZSI6Ii4vc3JjL2Jyb3dzZXIvY29tcG9uZW50L0NvZGVSZWFsaXR5Q29tcG9uZW50Q29udHJvbGxlci50cy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7QWJzdHJhY3RDb21wb25lbnRDb250cm9sbGVyLCBnZXRTeXN0ZW1Db250cm9sbGVyfSBmcm9tIFwiYWZyYW1lLXR5cGVzY3JpcHQtYm9pbGVycGxhdGVcIjtcbmltcG9ydCB7SW50ZXJmYWNlU3lzdGVtQ29udHJvbGxlcn0gZnJvbSBcIi4uLy4uXCI7XG5pbXBvcnQge0NvbXBvbmVudCwgRW50aXR5fSBmcm9tIFwiYWZyYW1lXCI7XG5cbmV4cG9ydCBhYnN0cmFjdCBjbGFzcyBDb2RlUmVhbGl0eUNvbXBvbmVudENvbnRyb2xsZXIgZXh0ZW5kcyBBYnN0cmFjdENvbXBvbmVudENvbnRyb2xsZXIge1xuXG4gICAgcHJvdGVjdGVkIGludGVyZmFjZTogSW50ZXJmYWNlU3lzdGVtQ29udHJvbGxlcjtcblxuICAgIGNvbnN0cnVjdG9yKGNvbXBvbmVudDogQ29tcG9uZW50LCBlbnRpdHk6IEVudGl0eSwgZGF0YTogYW55KSB7XG4gICAgICAgIHN1cGVyKGNvbXBvbmVudCwgZW50aXR5LCBkYXRhKTtcblxuICAgICAgICB0aGlzLmludGVyZmFjZSA9IGdldFN5c3RlbUNvbnRyb2xsZXIodGhpcy5lbnRpdHkuc2NlbmVFbCEhLCBcImludGVyZmFjZVwiKTtcbiAgICB9XG5cbn0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/browser/component/CodeRealityComponentController.ts\n");

/***/ }),

/***/ "./src/browser/component/animation/AnimatorController.ts":
/*!***************************************************************!*\
  !*** ./src/browser/component/animation/AnimatorController.ts ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst aframe_typescript_boilerplate_1 = __webpack_require__(/*! aframe-typescript-boilerplate */ \"./node_modules/aframe-typescript-boilerplate/built/index.js\");\nconst AnimationFeature_1 = __webpack_require__(/*! ../../feature/animation/AnimationFeature */ \"./src/browser/feature/animation/AnimationFeature.ts\");\nclass AnimatorController extends aframe_typescript_boilerplate_1.CompositeComponentController {\n    constructor(component, entity, data) {\n        super(component, entity, data);\n    }\n    init() {\n        this.addFeature(new AnimationFeature_1.AnimationFeature(this, this.entity));\n        super.init();\n    }\n}\nAnimatorController.DEFINITION = new aframe_typescript_boilerplate_1.ComponentControllerDefinition(\"animator\", {}, false, true, (component, entity, data) => new AnimatorController(component, entity, data));\nexports.AnimatorController = AnimatorController;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9jb21wb25lbnQvYW5pbWF0aW9uL0FuaW1hdG9yQ29udHJvbGxlci50cz82ZmYwIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQ0EsZ0tBQTBHO0FBQzFHLHNKQUEwRTtBQUUxRSxNQUFhLGtCQUFtQixTQUFRLDREQUE0QjtJQUloRSxZQUFZLFNBQW9CLEVBQUUsTUFBYyxFQUFFLElBQVM7UUFDdkQsS0FBSyxDQUFDLFNBQVMsRUFBRSxNQUFNLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDbkMsQ0FBQztJQUVELElBQUk7UUFDQSxJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksbUNBQWdCLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxNQUFRLENBQUMsQ0FBQyxDQUFDO1FBQzNELEtBQUssQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUNqQixDQUFDOztBQVRhLDZCQUFVLEdBQUcsSUFBSSw2REFBNkIsQ0FBQyxVQUFVLEVBQUUsRUFBRSxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsQ0FBQyxTQUFvQixFQUFFLE1BQWMsRUFBRSxJQUFTLEVBQUUsRUFBRSxDQUFDLElBQUksa0JBQWtCLENBQUMsU0FBUyxFQUFFLE1BQU0sRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUFDO0FBRnBNLGdEQWFDIiwiZmlsZSI6Ii4vc3JjL2Jyb3dzZXIvY29tcG9uZW50L2FuaW1hdGlvbi9BbmltYXRvckNvbnRyb2xsZXIudHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NvbXBvbmVudCwgRW50aXR5fSBmcm9tIFwiYWZyYW1lXCI7XG5pbXBvcnQge0NvbXBvbmVudENvbnRyb2xsZXJEZWZpbml0aW9uLCBDb21wb3NpdGVDb21wb25lbnRDb250cm9sbGVyfSBmcm9tIFwiYWZyYW1lLXR5cGVzY3JpcHQtYm9pbGVycGxhdGVcIjtcbmltcG9ydCB7QW5pbWF0aW9uRmVhdHVyZX0gZnJvbSBcIi4uLy4uL2ZlYXR1cmUvYW5pbWF0aW9uL0FuaW1hdGlvbkZlYXR1cmVcIjtcblxuZXhwb3J0IGNsYXNzIEFuaW1hdG9yQ29udHJvbGxlciBleHRlbmRzIENvbXBvc2l0ZUNvbXBvbmVudENvbnRyb2xsZXIge1xuXG4gICAgcHVibGljIHN0YXRpYyBERUZJTklUSU9OID0gbmV3IENvbXBvbmVudENvbnRyb2xsZXJEZWZpbml0aW9uKFwiYW5pbWF0b3JcIiwge30sIGZhbHNlLCB0cnVlLCAoY29tcG9uZW50OiBDb21wb25lbnQsIGVudGl0eTogRW50aXR5LCBkYXRhOiBhbnkpID0+IG5ldyBBbmltYXRvckNvbnRyb2xsZXIoY29tcG9uZW50LCBlbnRpdHksIGRhdGEpKTtcblxuICAgIGNvbnN0cnVjdG9yKGNvbXBvbmVudDogQ29tcG9uZW50LCBlbnRpdHk6IEVudGl0eSwgZGF0YTogYW55KSB7XG4gICAgICAgIHN1cGVyKGNvbXBvbmVudCwgZW50aXR5LCBkYXRhKTtcbiAgICB9XG5cbiAgICBpbml0KCk6IHZvaWQge1xuICAgICAgICB0aGlzLmFkZEZlYXR1cmUobmV3IEFuaW1hdGlvbkZlYXR1cmUodGhpcywgdGhpcy5lbnRpdHkhISkpO1xuICAgICAgICBzdXBlci5pbml0KCk7XG4gICAgfVxuXG59XG5cblxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/browser/component/animation/AnimatorController.ts\n");

/***/ }),

/***/ "./src/browser/component/avatar/AvatarActionLoggerFeature.ts":
/*!*******************************************************************!*\
  !*** ./src/browser/component/avatar/AvatarActionLoggerFeature.ts ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Events_1 = __webpack_require__(/*! ../../model/Events */ \"./src/browser/model/Events.ts\");\nconst aframe_typescript_boilerplate_1 = __webpack_require__(/*! aframe-typescript-boilerplate */ \"./node_modules/aframe-typescript-boilerplate/built/index.js\");\nclass AvatarActionLoggerFeature extends aframe_typescript_boilerplate_1.AbstractFeature {\n    constructor(controller, entity) {\n        super(\"expression-controller\", controller, entity);\n    }\n    init() {\n        this.addEventListener(Events_1.Events.EVENT_ACTION, (detail) => {\n            console.log(\"avatar action: \" + detail.action + \": \" + detail.description);\n        });\n    }\n    update(data, oldData) {\n    }\n    remove() {\n    }\n    pause() {\n    }\n    play() {\n    }\n    tick(time, timeDelta) {\n    }\n}\nAvatarActionLoggerFeature.DEFINITION = (controller, entity) => { return new AvatarActionLoggerFeature(controller, entity); };\nexports.AvatarActionLoggerFeature = AvatarActionLoggerFeature;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9jb21wb25lbnQvYXZhdGFyL0F2YXRhckFjdGlvbkxvZ2dlckZlYXR1cmUudHM/ZjMxOCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUdBLGdHQUEwQztBQUUxQyxnS0FBOEQ7QUFHOUQsTUFBYSx5QkFBMEIsU0FBUSwrQ0FBZTtJQUkxRCxZQUFZLFVBQStCLEVBQUUsTUFBYztRQUN2RCxLQUFLLENBQUMsdUJBQXVCLEVBQUUsVUFBVSxFQUFFLE1BQU0sQ0FBQyxDQUFDO0lBQ3ZELENBQUM7SUFFRCxJQUFJO1FBQ0EsSUFBSSxDQUFDLGdCQUFnQixDQUFDLGVBQU0sQ0FBQyxZQUFZLEVBQUUsQ0FBQyxNQUErQixFQUFFLEVBQUU7WUFDM0UsT0FBTyxDQUFDLEdBQUcsQ0FBQyxpQkFBaUIsR0FBRyxNQUFNLENBQUMsTUFBTSxHQUFJLElBQUksR0FBRyxNQUFNLENBQUMsV0FBVyxDQUFDLENBQUM7UUFDaEYsQ0FBQyxDQUFDLENBQUM7SUFDUCxDQUFDO0lBRUQsTUFBTSxDQUFDLElBQVMsRUFBRSxPQUFZO0lBQzlCLENBQUM7SUFFRCxNQUFNO0lBQ04sQ0FBQztJQUVELEtBQUs7SUFDTCxDQUFDO0lBRUQsSUFBSTtJQUNKLENBQUM7SUFFRCxJQUFJLENBQUMsSUFBWSxFQUFFLFNBQWlCO0lBQ3BDLENBQUM7O0FBekJlLG9DQUFVLEdBQUcsQ0FBQyxVQUErQixFQUFFLE1BQWMsRUFBRSxFQUFFLEdBQUcsT0FBTyxJQUFJLHlCQUF5QixDQUFDLFVBQVUsRUFBRSxNQUFNLENBQUMsR0FBQyxDQUFDO0FBRmxKLDhEQTRCQyIsImZpbGUiOiIuL3NyYy9icm93c2VyL2NvbXBvbmVudC9hdmF0YXIvQXZhdGFyQWN0aW9uTG9nZ2VyRmVhdHVyZS50cy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuXG5pbXBvcnQge0VudGl0eX0gZnJvbSBcIkFGcmFtZVwiO1xuaW1wb3J0IHtFdmVudHN9IGZyb20gXCIuLi8uLi9tb2RlbC9FdmVudHNcIjtcbmltcG9ydCB7RW50aXR5QWN0aW9uRXZlbnREZXRhaWx9IGZyb20gXCIuLi8uLi9tb2RlbC9FbnRpdHlBY3Rpb25FdmVudERldGFpbFwiO1xuaW1wb3J0IHtBYnN0cmFjdEZlYXR1cmV9IGZyb20gXCJhZnJhbWUtdHlwZXNjcmlwdC1ib2lsZXJwbGF0ZVwiO1xuaW1wb3J0IHtDb21wb25lbnRDb250cm9sbGVyfSBmcm9tIFwiYWZyYW1lLXR5cGVzY3JpcHQtYm9pbGVycGxhdGVcIjtcblxuZXhwb3J0IGNsYXNzIEF2YXRhckFjdGlvbkxvZ2dlckZlYXR1cmUgZXh0ZW5kcyBBYnN0cmFjdEZlYXR1cmUge1xuXG4gICAgc3RhdGljIHJlYWRvbmx5IERFRklOSVRJT04gPSAoY29udHJvbGxlcjogQ29tcG9uZW50Q29udHJvbGxlciwgZW50aXR5OiBFbnRpdHkpID0+IHsgcmV0dXJuIG5ldyBBdmF0YXJBY3Rpb25Mb2dnZXJGZWF0dXJlKGNvbnRyb2xsZXIsIGVudGl0eSl9O1xuXG4gICAgY29uc3RydWN0b3IoY29udHJvbGxlcjogQ29tcG9uZW50Q29udHJvbGxlciwgZW50aXR5OiBFbnRpdHkpIHtcbiAgICAgICAgc3VwZXIoXCJleHByZXNzaW9uLWNvbnRyb2xsZXJcIiwgY29udHJvbGxlciwgZW50aXR5KTtcbiAgICB9XG5cbiAgICBpbml0KCk6IHZvaWQge1xuICAgICAgICB0aGlzLmFkZEV2ZW50TGlzdGVuZXIoRXZlbnRzLkVWRU5UX0FDVElPTiwgKGRldGFpbDogRW50aXR5QWN0aW9uRXZlbnREZXRhaWwpID0+IHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiYXZhdGFyIGFjdGlvbjogXCIgKyBkZXRhaWwuYWN0aW9uICsgIFwiOiBcIiArIGRldGFpbC5kZXNjcmlwdGlvbik7XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIHVwZGF0ZShkYXRhOiBhbnksIG9sZERhdGE6IGFueSk6IHZvaWQge1xuICAgIH1cblxuICAgIHJlbW92ZSgpOiB2b2lkIHtcbiAgICB9XG5cbiAgICBwYXVzZSgpOiB2b2lkIHtcbiAgICB9XG5cbiAgICBwbGF5KCk6IHZvaWQge1xuICAgIH1cblxuICAgIHRpY2sodGltZTogbnVtYmVyLCB0aW1lRGVsdGE6IG51bWJlcik6IHZvaWQge1xuICAgIH1cbn1cblxuXG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/browser/component/avatar/AvatarActionLoggerFeature.ts\n");

/***/ }),

/***/ "./src/browser/component/avatar/AvatarController.ts":
/*!**********************************************************!*\
  !*** ./src/browser/component/avatar/AvatarController.ts ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst AnimationFeature_1 = __webpack_require__(/*! ../../feature/animation/AnimationFeature */ \"./src/browser/feature/animation/AnimationFeature.ts\");\nconst ExpressionFeature_1 = __webpack_require__(/*! ../../feature/animation/ExpressionFeature */ \"./src/browser/feature/animation/ExpressionFeature.ts\");\nconst aframe_typescript_boilerplate_1 = __webpack_require__(/*! aframe-typescript-boilerplate */ \"./node_modules/aframe-typescript-boilerplate/built/index.js\");\nclass AvatarController extends aframe_typescript_boilerplate_1.CompositeComponentController {\n    constructor(component, entity, data) {\n        super(component, entity, data);\n    }\n    init() {\n        this.addFeature(new ExpressionFeature_1.ExpressionFeature(this, this.entity));\n        this.addFeature(new AnimationFeature_1.AnimationFeature(this, this.entity));\n        super.init();\n    }\n    tick(time, timeDelta) {\n        super.tick(time, timeDelta);\n    }\n}\nAvatarController.DEFINITION = new aframe_typescript_boilerplate_1.ComponentControllerDefinition(\"avatar\", {}, false, true, (component, entity, data) => new AvatarController(component, entity, data));\nexports.AvatarController = AvatarController;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9jb21wb25lbnQvYXZhdGFyL0F2YXRhckNvbnRyb2xsZXIudHM/YjhkZiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHNKQUEwRTtBQUMxRSx5SkFBNEU7QUFFNUUsZ0tBQTBHO0FBRTFHLE1BQWEsZ0JBQWlCLFNBQVEsNERBQTRCO0lBSTlELFlBQVksU0FBb0IsRUFBRSxNQUFjLEVBQUUsSUFBUztRQUN2RCxLQUFLLENBQUMsU0FBUyxFQUFFLE1BQU0sRUFBRSxJQUFJLENBQUMsQ0FBQztJQUNuQyxDQUFDO0lBRUQsSUFBSTtRQUNBLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxxQ0FBaUIsQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLE1BQVEsQ0FBQyxDQUFDLENBQUM7UUFDNUQsSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLG1DQUFnQixDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsTUFBUSxDQUFDLENBQUMsQ0FBQztRQUMzRCxLQUFLLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDakIsQ0FBQztJQUVELElBQUksQ0FBQyxJQUFZLEVBQUUsU0FBaUI7UUFDaEMsS0FBSyxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsU0FBUyxDQUFDLENBQUM7SUFDaEMsQ0FBQzs7QUFkYSwyQkFBVSxHQUFHLElBQUksNkRBQTZCLENBQUMsUUFBUSxFQUFFLEVBQUUsRUFBRSxLQUFLLEVBQUUsSUFBSSxFQUFFLENBQUMsU0FBb0IsRUFBRSxNQUFjLEVBQUUsSUFBUyxFQUFFLEVBQUUsQ0FBQyxJQUFJLGdCQUFnQixDQUFDLFNBQVMsRUFBRSxNQUFNLEVBQUUsSUFBSSxDQUFDLENBQUMsQ0FBQztBQUZoTSw0Q0FrQkMiLCJmaWxlIjoiLi9zcmMvYnJvd3Nlci9jb21wb25lbnQvYXZhdGFyL0F2YXRhckNvbnRyb2xsZXIudHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0FuaW1hdGlvbkZlYXR1cmV9IGZyb20gXCIuLi8uLi9mZWF0dXJlL2FuaW1hdGlvbi9BbmltYXRpb25GZWF0dXJlXCI7XG5pbXBvcnQge0V4cHJlc3Npb25GZWF0dXJlfSBmcm9tIFwiLi4vLi4vZmVhdHVyZS9hbmltYXRpb24vRXhwcmVzc2lvbkZlYXR1cmVcIjtcbmltcG9ydCB7Q29tcG9uZW50LCBFbnRpdHl9IGZyb20gXCJhZnJhbWVcIjtcbmltcG9ydCB7Q29tcG9uZW50Q29udHJvbGxlckRlZmluaXRpb24sIENvbXBvc2l0ZUNvbXBvbmVudENvbnRyb2xsZXJ9IGZyb20gXCJhZnJhbWUtdHlwZXNjcmlwdC1ib2lsZXJwbGF0ZVwiO1xuXG5leHBvcnQgY2xhc3MgQXZhdGFyQ29udHJvbGxlciBleHRlbmRzIENvbXBvc2l0ZUNvbXBvbmVudENvbnRyb2xsZXIge1xuXG4gICAgcHVibGljIHN0YXRpYyBERUZJTklUSU9OID0gbmV3IENvbXBvbmVudENvbnRyb2xsZXJEZWZpbml0aW9uKFwiYXZhdGFyXCIsIHt9LCBmYWxzZSwgdHJ1ZSwgKGNvbXBvbmVudDogQ29tcG9uZW50LCBlbnRpdHk6IEVudGl0eSwgZGF0YTogYW55KSA9PiBuZXcgQXZhdGFyQ29udHJvbGxlcihjb21wb25lbnQsIGVudGl0eSwgZGF0YSkpO1xuXG4gICAgY29uc3RydWN0b3IoY29tcG9uZW50OiBDb21wb25lbnQsIGVudGl0eTogRW50aXR5LCBkYXRhOiBhbnkpIHtcbiAgICAgICAgc3VwZXIoY29tcG9uZW50LCBlbnRpdHksIGRhdGEpO1xuICAgIH1cblxuICAgIGluaXQoKTogdm9pZCB7XG4gICAgICAgIHRoaXMuYWRkRmVhdHVyZShuZXcgRXhwcmVzc2lvbkZlYXR1cmUodGhpcywgdGhpcy5lbnRpdHkhISkpO1xuICAgICAgICB0aGlzLmFkZEZlYXR1cmUobmV3IEFuaW1hdGlvbkZlYXR1cmUodGhpcywgdGhpcy5lbnRpdHkhISkpO1xuICAgICAgICBzdXBlci5pbml0KCk7XG4gICAgfVxuXG4gICAgdGljayh0aW1lOiBudW1iZXIsIHRpbWVEZWx0YTogbnVtYmVyKTogdm9pZCB7XG4gICAgICAgIHN1cGVyLnRpY2sodGltZSwgdGltZURlbHRhKTtcbiAgICB9XG5cbn1cblxuXG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/browser/component/avatar/AvatarController.ts\n");

/***/ }),

/***/ "./src/browser/component/collidable/CollidableController.ts":
/*!******************************************************************!*\
  !*** ./src/browser/component/collidable/CollidableController.ts ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst aframe_typescript_boilerplate_1 = __webpack_require__(/*! aframe-typescript-boilerplate */ \"./node_modules/aframe-typescript-boilerplate/built/index.js\");\nconst CodeRealityComponentController_1 = __webpack_require__(/*! ../CodeRealityComponentController */ \"./src/browser/component/CodeRealityComponentController.ts\");\nclass CollidableController extends CodeRealityComponentController_1.CodeRealityComponentController {\n    constructor(component, entity, data) {\n        super(component, entity, data);\n    }\n    init() {\n        //console.log(this.componentName + \" init: \" + JSON.stringify(this.data));\n        this.interface.addCollidable(this.entity.object3D);\n    }\n    update(data, oldData) {\n        //console.log(this.componentName + \" update: \" + JSON.stringify(this.data));\n    }\n    remove() {\n        //console.log(this.componentName + \" remove\");\n        this.interface.removeCollidable(this.entity.object3D);\n    }\n    pause() {\n        //console.log(this.componentName + \" pause\");\n    }\n    play() {\n        //console.log(this.componentName + \" play\");\n    }\n    tick(time, timeDelta) {\n    }\n}\nCollidableController.DEFINITION = new aframe_typescript_boilerplate_1.ComponentControllerDefinition(\"collidable\", {}, false, false, (component, entity, data) => new CollidableController(component, entity, data));\nexports.CollidableController = CollidableController;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9jb21wb25lbnQvY29sbGlkYWJsZS9Db2xsaWRhYmxlQ29udHJvbGxlci50cz8yNmQyIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQ0EsZ0tBQXlHO0FBQ3pHLG1LQUFpRjtBQUVqRixNQUFhLG9CQUFxQixTQUFRLCtEQUE4QjtJQUlwRSxZQUFZLFNBQW9CLEVBQUUsTUFBYyxFQUFFLElBQVM7UUFDdkQsS0FBSyxDQUFDLFNBQVMsRUFBRSxNQUFNLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDbkMsQ0FBQztJQUVELElBQUk7UUFDQSwwRUFBMEU7UUFDMUUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUN2RCxDQUFDO0lBRUQsTUFBTSxDQUFDLElBQVMsRUFBRSxPQUFZO1FBQzFCLDRFQUE0RTtJQUNoRixDQUFDO0lBRUQsTUFBTTtRQUNGLDhDQUE4QztRQUM5QyxJQUFJLENBQUMsU0FBUyxDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDMUQsQ0FBQztJQUVELEtBQUs7UUFDRCw2Q0FBNkM7SUFDakQsQ0FBQztJQUVELElBQUk7UUFDQSw0Q0FBNEM7SUFDaEQsQ0FBQztJQUVELElBQUksQ0FBQyxJQUFZLEVBQUUsU0FBaUI7SUFDcEMsQ0FBQzs7QUE3QmEsK0JBQVUsR0FBRyxJQUFJLDZEQUE2QixDQUFDLFlBQVksRUFBRSxFQUFFLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxDQUFDLFNBQW9CLEVBQUUsTUFBYyxFQUFFLElBQVMsRUFBRSxFQUFFLENBQUMsSUFBSSxvQkFBb0IsQ0FBQyxTQUFTLEVBQUUsTUFBTSxFQUFFLElBQUksQ0FBQyxDQUFDLENBQUM7QUFGek0sb0RBaUNDIiwiZmlsZSI6Ii4vc3JjL2Jyb3dzZXIvY29tcG9uZW50L2NvbGxpZGFibGUvQ29sbGlkYWJsZUNvbnRyb2xsZXIudHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NvbXBvbmVudCwgRW50aXR5fSBmcm9tIFwiYWZyYW1lXCI7XG5pbXBvcnQge0Fic3RyYWN0Q29tcG9uZW50Q29udHJvbGxlciwgQ29tcG9uZW50Q29udHJvbGxlckRlZmluaXRpb259IGZyb20gXCJhZnJhbWUtdHlwZXNjcmlwdC1ib2lsZXJwbGF0ZVwiO1xuaW1wb3J0IHtDb2RlUmVhbGl0eUNvbXBvbmVudENvbnRyb2xsZXJ9IGZyb20gXCIuLi9Db2RlUmVhbGl0eUNvbXBvbmVudENvbnRyb2xsZXJcIjtcblxuZXhwb3J0IGNsYXNzIENvbGxpZGFibGVDb250cm9sbGVyIGV4dGVuZHMgQ29kZVJlYWxpdHlDb21wb25lbnRDb250cm9sbGVyIHtcblxuICAgIHB1YmxpYyBzdGF0aWMgREVGSU5JVElPTiA9IG5ldyBDb21wb25lbnRDb250cm9sbGVyRGVmaW5pdGlvbihcImNvbGxpZGFibGVcIiwge30sIGZhbHNlLCBmYWxzZSwgKGNvbXBvbmVudDogQ29tcG9uZW50LCBlbnRpdHk6IEVudGl0eSwgZGF0YTogYW55KSA9PiBuZXcgQ29sbGlkYWJsZUNvbnRyb2xsZXIoY29tcG9uZW50LCBlbnRpdHksIGRhdGEpKTtcblxuICAgIGNvbnN0cnVjdG9yKGNvbXBvbmVudDogQ29tcG9uZW50LCBlbnRpdHk6IEVudGl0eSwgZGF0YTogYW55KSB7XG4gICAgICAgIHN1cGVyKGNvbXBvbmVudCwgZW50aXR5LCBkYXRhKTtcbiAgICB9XG5cbiAgICBpbml0KCk6IHZvaWQge1xuICAgICAgICAvL2NvbnNvbGUubG9nKHRoaXMuY29tcG9uZW50TmFtZSArIFwiIGluaXQ6IFwiICsgSlNPTi5zdHJpbmdpZnkodGhpcy5kYXRhKSk7XG4gICAgICAgIHRoaXMuaW50ZXJmYWNlLmFkZENvbGxpZGFibGUodGhpcy5lbnRpdHkub2JqZWN0M0QpO1xuICAgIH1cblxuICAgIHVwZGF0ZShkYXRhOiBhbnksIG9sZERhdGE6IGFueSk6IHZvaWQge1xuICAgICAgICAvL2NvbnNvbGUubG9nKHRoaXMuY29tcG9uZW50TmFtZSArIFwiIHVwZGF0ZTogXCIgKyBKU09OLnN0cmluZ2lmeSh0aGlzLmRhdGEpKTtcbiAgICB9XG5cbiAgICByZW1vdmUoKTogdm9pZCB7XG4gICAgICAgIC8vY29uc29sZS5sb2codGhpcy5jb21wb25lbnROYW1lICsgXCIgcmVtb3ZlXCIpO1xuICAgICAgICB0aGlzLmludGVyZmFjZS5yZW1vdmVDb2xsaWRhYmxlKHRoaXMuZW50aXR5Lm9iamVjdDNEKTtcbiAgICB9XG5cbiAgICBwYXVzZSgpOiB2b2lkIHtcbiAgICAgICAgLy9jb25zb2xlLmxvZyh0aGlzLmNvbXBvbmVudE5hbWUgKyBcIiBwYXVzZVwiKTtcbiAgICB9XG5cbiAgICBwbGF5KCk6IHZvaWQge1xuICAgICAgICAvL2NvbnNvbGUubG9nKHRoaXMuY29tcG9uZW50TmFtZSArIFwiIHBsYXlcIik7XG4gICAgfVxuXG4gICAgdGljayh0aW1lOiBudW1iZXIsIHRpbWVEZWx0YTogbnVtYmVyKTogdm9pZCB7XG4gICAgfVxuXG59XG5cblxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/browser/component/collidable/CollidableController.ts\n");

/***/ }),

/***/ "./src/browser/component/label/UserNameController.ts":
/*!***********************************************************!*\
  !*** ./src/browser/component/label/UserNameController.ts ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst aframe_typescript_boilerplate_1 = __webpack_require__(/*! aframe-typescript-boilerplate */ \"./node_modules/aframe-typescript-boilerplate/built/index.js\");\nconst three_1 = __webpack_require__(/*! three */ \"three\");\nconst CodeRealityComponentController_1 = __webpack_require__(/*! ../CodeRealityComponentController */ \"./src/browser/component/CodeRealityComponentController.ts\");\nclass UserNameController extends CodeRealityComponentController_1.CodeRealityComponentController {\n    constructor(component, entity, data) {\n        super(component, entity, data);\n        this.size = new three_1.Vector3(0, 0, 0);\n        this.initialized = false;\n        this.cameraPosition = new three_1.Vector3(0, 0, 0);\n        this.labelPosition = new three_1.Vector3(0, 0, 0);\n        this.lastDirection = new three_1.Vector3(0, 0, 0);\n        this.lastLabelNormal = new three_1.Vector3(0, 0, 0);\n    }\n    init() {\n        console.log(this.componentName + \" init: \" + JSON.stringify(this.data));\n    }\n    update(data, oldData) {\n        //console.log(this.componentName + \" update: \" + JSON.stringify(this.data));\n    }\n    remove() {\n        //console.log(this.componentName + \" remove\");\n    }\n    pause() {\n        //console.log(this.componentName + \" pause\");\n    }\n    play() {\n        //console.log(this.componentName + \" play\");\n    }\n    tick(time, timeDelta) {\n        if (!this.initialized && this.entity.getObject3D(\"mesh\")) {\n            this.initialized = true;\n            setTimeout(() => {\n                this.size = new three_1.Box3().setFromObject(this.entity.getObject3D(\"mesh\")).getSize(this.size);\n                const height = new three_1.Box3().setFromObject(this.entity.getObject3D(\"mesh\")).getSize(this.size).y;\n                const text = this.data;\n                const x = 0;\n                const y = 3 * (height + 0.4); // Remove x 3 when model scaling is removed.\n                const z = 0;\n                this.labelElement = document.createElement('a-text');\n                //this.labelElement.setAttribute(\"shadow\", \"castShadow: false; receiveShadow: false;\");\n                this.labelElement.setAttribute(\"value\", text);\n                this.labelElement.setAttribute(\"color\", \"#EFEFEF\");\n                this.labelElement.setAttribute(\"opacity\", \"0.9\");\n                this.labelElement.setAttribute(\"align\", \"center\");\n                this.labelElement.setAttribute(\"font\", \"kelsonsans\");\n                this.labelElement.setAttribute(\"scale\", \"1 1\");\n                this.labelElement.setAttribute(\"wrap-count\", \"30\");\n                this.labelElement.setAttribute(\"position\", x.toFixed(2) + \" \" + y.toFixed(2) + \" \" + z.toFixed(2));\n                this.entity.appendChild(this.labelElement);\n            }, 300);\n        }\n        else if (this.labelElement && this.labelElement.object3D) {\n            const labelObject = this.labelElement.object3D;\n            this.cameraPosition.copy(this.interface.cameraEntity.object3D.position);\n            this.cameraPosition = this.interface.cameraEntity.object3D.parent.localToWorld(this.cameraPosition);\n            this.labelPosition.copy(labelObject.position);\n            this.labelPosition = this.entity.object3D.localToWorld(this.labelPosition);\n            const direction = this.labelPosition.sub(this.cameraPosition).normalize();\n            direction.y = 0;\n            direction.normalize();\n            const labelNormal = labelObject.localToWorld(new three_1.Vector3(0, 0, -1)).sub(labelObject.localToWorld(new three_1.Vector3(0, 0, 0))).normalize();\n            labelNormal.y = 0;\n            labelNormal.normalize();\n            if (direction.x == this.lastDirection.x &&\n                direction.y == this.lastDirection.y &&\n                direction.z == this.lastDirection.z &&\n                labelNormal.x == this.lastLabelNormal.x &&\n                labelNormal.y == this.lastLabelNormal.y &&\n                labelNormal.z == this.lastLabelNormal.z) {\n                return;\n            }\n            this.lastDirection.copy(direction);\n            this.lastLabelNormal.copy(labelNormal);\n            const quaternion = new three_1.Quaternion(); // create one and reuse it\n            quaternion.setFromUnitVectors(labelNormal, direction);\n            const newLabelQuaternion = quaternion.multiply(labelObject.quaternion);\n            labelObject.quaternion.copy(newLabelQuaternion);\n        }\n    }\n}\nUserNameController.DEFINITION = new aframe_typescript_boilerplate_1.ComponentControllerDefinition(\"user-name\", {\n    type: 'string', default: '?'\n}, false, true, (component, entity, data) => new UserNameController(component, entity, data));\nexports.UserNameController = UserNameController;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/browser/component/label/UserNameController.ts\n");

/***/ }),

/***/ "./src/browser/component/quaternion/QuaternionController.ts":
/*!******************************************************************!*\
  !*** ./src/browser/component/quaternion/QuaternionController.ts ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst aframe_typescript_boilerplate_1 = __webpack_require__(/*! aframe-typescript-boilerplate */ \"./node_modules/aframe-typescript-boilerplate/built/index.js\");\nclass QuaternionController extends aframe_typescript_boilerplate_1.AbstractComponentController {\n    constructor(component, entity, data) {\n        super(component, entity, data);\n    }\n    init() {\n        //console.log(this.componentName + \" init: \" + JSON.stringify(this.data));\n        const x = this.data.x;\n        const y = this.data.y;\n        const z = this.data.z;\n        const w = this.data.w;\n        this.entity.object3D.quaternion.x = x;\n        this.entity.object3D.quaternion.y = y;\n        this.entity.object3D.quaternion.z = z;\n        this.entity.object3D.quaternion.w = w;\n    }\n    update(data, oldData) {\n        const x = data.x;\n        const y = data.y;\n        const z = data.z;\n        const w = data.w;\n        this.entity.object3D.quaternion.x = x;\n        this.entity.object3D.quaternion.y = y;\n        this.entity.object3D.quaternion.z = z;\n        this.entity.object3D.quaternion.w = w;\n    }\n    remove() {\n        //console.log(this.componentName + \" remove\");\n    }\n    pause() {\n        //console.log(this.componentName + \" pause\");\n    }\n    play() {\n        //console.log(this.componentName + \" play\");\n    }\n    tick(time, timeDelta) {\n    }\n}\nQuaternionController.DEFINITION = new aframe_typescript_boilerplate_1.ComponentControllerDefinition(\"quaternion\", {\n    type: 'vec4'\n}, false, false, (component, entity, data) => new QuaternionController(component, entity, data));\nexports.QuaternionController = QuaternionController;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9jb21wb25lbnQvcXVhdGVybmlvbi9RdWF0ZXJuaW9uQ29udHJvbGxlci50cz82ZjE1Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQ0EsZ0tBQXlHO0FBRXpHLE1BQWEsb0JBQXFCLFNBQVEsMkRBQTJCO0lBUWpFLFlBQVksU0FBb0IsRUFBRSxNQUFjLEVBQUUsSUFBUztRQUN2RCxLQUFLLENBQUMsU0FBUyxFQUFFLE1BQU0sRUFBRSxJQUFJLENBQUMsQ0FBQztJQUNuQyxDQUFDO0lBRUQsSUFBSTtRQUNBLDBFQUEwRTtRQUUxRSxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztRQUN0QixNQUFNLENBQUMsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztRQUN0QixNQUFNLENBQUMsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztRQUN0QixNQUFNLENBQUMsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztRQUV0QixJQUFJLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxVQUFVLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUN0QyxJQUFJLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxVQUFVLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUN0QyxJQUFJLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxVQUFVLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUN0QyxJQUFJLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxVQUFVLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUUxQyxDQUFDO0lBRUQsTUFBTSxDQUFDLElBQVMsRUFBRSxPQUFZO1FBQzFCLE1BQU0sQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDLENBQUM7UUFDakIsTUFBTSxDQUFDLEdBQUcsSUFBSSxDQUFDLENBQUMsQ0FBQztRQUNqQixNQUFNLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQyxDQUFDO1FBQ2pCLE1BQU0sQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDLENBQUM7UUFFakIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsVUFBVSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDdEMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsVUFBVSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDdEMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsVUFBVSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDdEMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsVUFBVSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDMUMsQ0FBQztJQUVELE1BQU07UUFDRiw4Q0FBOEM7SUFDbEQsQ0FBQztJQUVELEtBQUs7UUFDRCw2Q0FBNkM7SUFDakQsQ0FBQztJQUVELElBQUk7UUFDQSw0Q0FBNEM7SUFDaEQsQ0FBQztJQUVELElBQUksQ0FBQyxJQUFZLEVBQUUsU0FBaUI7SUFDcEMsQ0FBQzs7QUFsRGEsK0JBQVUsR0FBRyxJQUFJLDZEQUE2QixDQUFDLFlBQVksRUFBRTtJQUN2RSxJQUFJLEVBQUUsTUFBTTtDQUNmLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxDQUFDLFNBQW9CLEVBQUUsTUFBYyxFQUFFLElBQVMsRUFBRSxFQUFFLENBQUMsSUFBSSxvQkFBb0IsQ0FBQyxTQUFTLEVBQUUsTUFBTSxFQUFFLElBQUksQ0FBQyxDQUFDLENBQUM7QUFKN0gsb0RBc0RDIiwiZmlsZSI6Ii4vc3JjL2Jyb3dzZXIvY29tcG9uZW50L3F1YXRlcm5pb24vUXVhdGVybmlvbkNvbnRyb2xsZXIudHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NvbXBvbmVudCwgRW50aXR5fSBmcm9tIFwiYWZyYW1lXCI7XG5pbXBvcnQge0Fic3RyYWN0Q29tcG9uZW50Q29udHJvbGxlciwgQ29tcG9uZW50Q29udHJvbGxlckRlZmluaXRpb259IGZyb20gXCJhZnJhbWUtdHlwZXNjcmlwdC1ib2lsZXJwbGF0ZVwiO1xuXG5leHBvcnQgY2xhc3MgUXVhdGVybmlvbkNvbnRyb2xsZXIgZXh0ZW5kcyBBYnN0cmFjdENvbXBvbmVudENvbnRyb2xsZXIge1xuXG4gICAgcHVibGljIHN0YXRpYyBERUZJTklUSU9OID0gbmV3IENvbXBvbmVudENvbnRyb2xsZXJEZWZpbml0aW9uKFwicXVhdGVybmlvblwiLCB7XG4gICAgICAgIHR5cGU6ICd2ZWM0J1xuICAgIH0sIGZhbHNlLCBmYWxzZSwgKGNvbXBvbmVudDogQ29tcG9uZW50LCBlbnRpdHk6IEVudGl0eSwgZGF0YTogYW55KSA9PiBuZXcgUXVhdGVybmlvbkNvbnRyb2xsZXIoY29tcG9uZW50LCBlbnRpdHksIGRhdGEpKTtcblxuICAgIGxhYmVsRWxlbWVudDogRWxlbWVudCB8IHVuZGVmaW5lZDtcblxuICAgIGNvbnN0cnVjdG9yKGNvbXBvbmVudDogQ29tcG9uZW50LCBlbnRpdHk6IEVudGl0eSwgZGF0YTogYW55KSB7XG4gICAgICAgIHN1cGVyKGNvbXBvbmVudCwgZW50aXR5LCBkYXRhKTtcbiAgICB9XG5cbiAgICBpbml0KCk6IHZvaWQge1xuICAgICAgICAvL2NvbnNvbGUubG9nKHRoaXMuY29tcG9uZW50TmFtZSArIFwiIGluaXQ6IFwiICsgSlNPTi5zdHJpbmdpZnkodGhpcy5kYXRhKSk7XG5cbiAgICAgICAgY29uc3QgeCA9IHRoaXMuZGF0YS54O1xuICAgICAgICBjb25zdCB5ID0gdGhpcy5kYXRhLnk7XG4gICAgICAgIGNvbnN0IHogPSB0aGlzLmRhdGEuejtcbiAgICAgICAgY29uc3QgdyA9IHRoaXMuZGF0YS53O1xuXG4gICAgICAgIHRoaXMuZW50aXR5Lm9iamVjdDNELnF1YXRlcm5pb24ueCA9IHg7XG4gICAgICAgIHRoaXMuZW50aXR5Lm9iamVjdDNELnF1YXRlcm5pb24ueSA9IHk7XG4gICAgICAgIHRoaXMuZW50aXR5Lm9iamVjdDNELnF1YXRlcm5pb24ueiA9IHo7XG4gICAgICAgIHRoaXMuZW50aXR5Lm9iamVjdDNELnF1YXRlcm5pb24udyA9IHc7XG5cbiAgICB9XG5cbiAgICB1cGRhdGUoZGF0YTogYW55LCBvbGREYXRhOiBhbnkpOiB2b2lkIHtcbiAgICAgICAgY29uc3QgeCA9IGRhdGEueDtcbiAgICAgICAgY29uc3QgeSA9IGRhdGEueTtcbiAgICAgICAgY29uc3QgeiA9IGRhdGEuejtcbiAgICAgICAgY29uc3QgdyA9IGRhdGEudztcblxuICAgICAgICB0aGlzLmVudGl0eS5vYmplY3QzRC5xdWF0ZXJuaW9uLnggPSB4O1xuICAgICAgICB0aGlzLmVudGl0eS5vYmplY3QzRC5xdWF0ZXJuaW9uLnkgPSB5O1xuICAgICAgICB0aGlzLmVudGl0eS5vYmplY3QzRC5xdWF0ZXJuaW9uLnogPSB6O1xuICAgICAgICB0aGlzLmVudGl0eS5vYmplY3QzRC5xdWF0ZXJuaW9uLncgPSB3O1xuICAgIH1cblxuICAgIHJlbW92ZSgpOiB2b2lkIHtcbiAgICAgICAgLy9jb25zb2xlLmxvZyh0aGlzLmNvbXBvbmVudE5hbWUgKyBcIiByZW1vdmVcIik7XG4gICAgfVxuXG4gICAgcGF1c2UoKTogdm9pZCB7XG4gICAgICAgIC8vY29uc29sZS5sb2codGhpcy5jb21wb25lbnROYW1lICsgXCIgcGF1c2VcIik7XG4gICAgfVxuXG4gICAgcGxheSgpOiB2b2lkIHtcbiAgICAgICAgLy9jb25zb2xlLmxvZyh0aGlzLmNvbXBvbmVudE5hbWUgKyBcIiBwbGF5XCIpO1xuICAgIH1cblxuICAgIHRpY2sodGltZTogbnVtYmVyLCB0aW1lRGVsdGE6IG51bWJlcik6IHZvaWQge1xuICAgIH1cblxufVxuXG5cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/browser/component/quaternion/QuaternionController.ts\n");

/***/ }),

/***/ "./src/browser/component/texture/BillboardController.ts":
/*!**************************************************************!*\
  !*** ./src/browser/component/texture/BillboardController.ts ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst three_1 = __webpack_require__(/*! three */ \"three\");\nconst aframe_typescript_boilerplate_1 = __webpack_require__(/*! aframe-typescript-boilerplate */ \"./node_modules/aframe-typescript-boilerplate/built/index.js\");\nconst CodeRealityComponentController_1 = __webpack_require__(/*! ../CodeRealityComponentController */ \"./src/browser/component/CodeRealityComponentController.ts\");\n/**\n * Modified from https://github.com/nylki/aframe-fit-texture-component.\n */\nclass BillboardController extends CodeRealityComponentController_1.CodeRealityComponentController {\n    constructor(component, entity, data) {\n        super(component, entity, data);\n        this.cameraPosition = new three_1.Vector3(0, 0, 0);\n        this.billboardPosition = new three_1.Vector3(0, 0, 0);\n        this.cameraLastPosition = new three_1.Vector3(0, 0, 0);\n    }\n    init() {\n        const srcUrl = this.data.src;\n        this.width = this.data.width;\n        this.height = this.data.height;\n        //console.log(this.componentName + \" init: \" + srcUrl);\n        this.entity.setAttribute(\"material\", \"src: url(\" + srcUrl + \");  side: double; transparent: true; shader: flat;\");\n    }\n    update(data, oldData) {\n        if (this.data === false)\n            return;\n        if (this.geometryWidth != undefined || this.geometryHeight != undefined) {\n            this.applyTransformation();\n        }\n        else {\n            const textureLoaded = (e) => {\n                const width = e.detail.texture.image.videoWidth || e.detail.texture.image.width;\n                const height = e.detail.texture.image.videoHeight || e.detail.texture.image.height;\n                //console.log(\"texture loaded: \" + width + \", \" + height);\n                if (width === 0 || height === 0)\n                    return;\n                this.geometryWidth = width;\n                this.geometryHeight = height;\n                this.applyTransformation();\n            };\n            this.entity.addEventListener('materialvideoloadeddata', textureLoaded);\n            this.entity.addEventListener('materialtextureloaded', textureLoaded);\n        }\n    }\n    remove() {\n    }\n    pause() {\n    }\n    play() {\n    }\n    tick(time, timeDelta) {\n        this.cameraPosition.copy(this.interface.cameraEntity.object3D.position);\n        this.cameraPosition = this.interface.cameraEntity.object3D.parent.localToWorld(this.cameraPosition);\n        if (this.cameraPosition.x == this.cameraLastPosition.x &&\n            this.cameraPosition.y == this.cameraLastPosition.y &&\n            this.cameraPosition.z == this.cameraLastPosition.z) {\n            // No need to turn billboard.\n            return;\n        }\n        this.cameraLastPosition.copy(this.cameraPosition);\n        this.billboardPosition.copy(this.entity.object3D.position);\n        this.billboardPosition = this.entity.object3D.parent.localToWorld(this.billboardPosition);\n        const direction = this.billboardPosition.sub(this.cameraPosition).normalize();\n        direction.y = 0;\n        direction.normalize();\n        const billboardNormal = this.entity.object3D.localToWorld(new three_1.Vector3(0, 0, 1)).sub(this.entity.object3D.localToWorld(new three_1.Vector3(0, 0, 0))).normalize();\n        billboardNormal.y = 0;\n        billboardNormal.normalize();\n        const quaternion = new three_1.Quaternion(); // create one and reuse it\n        quaternion.setFromUnitVectors(billboardNormal, direction);\n        const newBillboardQuaternion = quaternion.multiply(this.entity.object3D.quaternion);\n        this.entity.object3D.quaternion.copy(newBillboardQuaternion);\n    }\n    applyTransformation() {\n        const heightWithRatio = this.geometryHeight / this.geometryWidth;\n        let width = this.width;\n        let height = this.height;\n        if (width) {\n            height = width * heightWithRatio;\n        }\n        else if (height) {\n            width = height / heightWithRatio;\n        }\n        else {\n            height = 1.8;\n            width = height / heightWithRatio;\n        }\n        this.entity.setAttribute('geometry', 'primitive: plane;width: ' + width + ';height: ' + height + ';');\n        if (this.heightCorrection) {\n            this.entity.object3D.position.y -= this.heightCorrection;\n        }\n        this.heightCorrection = height / 2;\n        this.entity.object3D.position.y += this.heightCorrection;\n    }\n}\nBillboardController.DEFINITION = new aframe_typescript_boilerplate_1.ComponentControllerDefinition(\"billboard\", {\n    src: { type: 'asset', default: 'https://66.media.tumblr.com/14a4d4777e95162bfd126f0c99228261/tumblr_n59pgipQxX1t0naplo1_500.jpg' },\n    width: { type: 'number' },\n    height: { type: 'number', default: 1.8 }\n}, false, true, (component, entity, data) => new BillboardController(component, entity, data));\nexports.BillboardController = BillboardController;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/browser/component/texture/BillboardController.ts\n");

/***/ }),

/***/ "./src/browser/component/texture/PictureController.ts":
/*!************************************************************!*\
  !*** ./src/browser/component/texture/PictureController.ts ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst aframe_typescript_boilerplate_1 = __webpack_require__(/*! aframe-typescript-boilerplate */ \"./node_modules/aframe-typescript-boilerplate/built/index.js\");\n/**\n * Modified from https://github.com/nylki/aframe-fit-texture-component.\n */\nclass PictureController extends aframe_typescript_boilerplate_1.AbstractComponentController {\n    constructor(component, entity, data) {\n        super(component, entity, data);\n    }\n    init() {\n        const srcUrl = this.data.src;\n        this.width = this.data.width;\n        this.height = this.data.height;\n        //console.log(this.componentName + \" init: \" + srcUrl);\n        this.entity.setAttribute(\"material\", \"src: url(\" + srcUrl + \");  side: double; transparent: true;\");\n    }\n    update(data, oldData) {\n        if (this.data === false)\n            return;\n        if (this.geometryWidth != undefined || this.geometryHeight != undefined) {\n            this.applyTransformation();\n        }\n        else {\n            const textureLoaded = (e) => {\n                const width = e.detail.texture.image.videoWidth || e.detail.texture.image.width;\n                const height = e.detail.texture.image.videoHeight || e.detail.texture.image.height;\n                //console.log(\"texture loaded: \" + width + \", \" + height);\n                if (width === 0 || height === 0)\n                    return;\n                this.geometryWidth = width;\n                this.geometryHeight = height;\n                this.applyTransformation();\n            };\n            this.entity.addEventListener('materialvideoloadeddata', textureLoaded);\n            this.entity.addEventListener('materialtextureloaded', textureLoaded);\n        }\n    }\n    remove() {\n    }\n    pause() {\n    }\n    play() {\n    }\n    tick(time, timeDelta) {\n    }\n    applyTransformation() {\n        const heightWithRatio = this.geometryHeight / this.geometryWidth;\n        let width = this.width;\n        let height = this.height;\n        if (width) {\n            height = width * heightWithRatio;\n        }\n        else if (height) {\n            width = height / heightWithRatio;\n        }\n        else {\n            height = 1.8;\n            width = height / heightWithRatio;\n        }\n        this.entity.setAttribute('geometry', 'primitive: plane;width: ' + width + '; height: ' + height + ';');\n        if (this.heightCorrection) {\n            this.entity.object3D.position.y -= this.heightCorrection;\n        }\n        this.heightCorrection = height / 2;\n        this.entity.object3D.position.y += this.heightCorrection;\n    }\n}\nPictureController.DEFINITION = new aframe_typescript_boilerplate_1.ComponentControllerDefinition(\"picture\", {\n    src: { type: 'asset', default: 'https://66.media.tumblr.com/14a4d4777e95162bfd126f0c99228261/tumblr_n59pgipQxX1t0naplo1_500.jpg' },\n    width: { type: 'number' },\n    height: { type: 'number', default: 1.8 }\n}, false, false, (component, entity, data) => new PictureController(component, entity, data));\nexports.PictureController = PictureController;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9jb21wb25lbnQvdGV4dHVyZS9QaWN0dXJlQ29udHJvbGxlci50cz85OWFkIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQ0EsZ0tBQXlHO0FBRXpHOztHQUVHO0FBQ0gsTUFBYSxpQkFBa0IsU0FBUSwyREFBMkI7SUFnQjlELFlBQVksU0FBb0IsRUFBRSxNQUFjLEVBQUUsSUFBUztRQUN2RCxLQUFLLENBQUMsU0FBUyxFQUFFLE1BQU0sRUFBRSxJQUFJLENBQUMsQ0FBQztJQUNuQyxDQUFDO0lBRUQsSUFBSTtRQUNBLE1BQU0sTUFBTSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDO1FBQzdCLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUM7UUFDN0IsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQztRQUMvQix1REFBdUQ7UUFDdkQsSUFBSSxDQUFDLE1BQU0sQ0FBQyxZQUFZLENBQUMsVUFBVSxFQUFFLFdBQVcsR0FBRyxNQUFNLEdBQUcsc0NBQXNDLENBQUMsQ0FBQztJQUN4RyxDQUFDO0lBRUQsTUFBTSxDQUFDLElBQVMsRUFBRSxPQUFZO1FBQzFCLElBQUksSUFBSSxDQUFDLElBQUksS0FBSyxLQUFLO1lBQUUsT0FBTztRQUVoQyxJQUFJLElBQUksQ0FBQyxhQUFhLElBQUksU0FBUyxJQUFJLElBQUksQ0FBQyxjQUFjLElBQUksU0FBUyxFQUFFO1lBQ3JFLElBQUksQ0FBQyxtQkFBbUIsRUFBRSxDQUFDO1NBQzlCO2FBQU07WUFDSCxNQUFNLGFBQWEsR0FBRyxDQUFDLENBQU0sRUFBRSxFQUFFO2dCQUU3QixNQUFNLEtBQUssR0FBRyxDQUFDLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsVUFBVSxJQUFJLENBQUMsQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUM7Z0JBQ2hGLE1BQU0sTUFBTSxHQUFHLENBQUMsQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxXQUFXLElBQUksQ0FBQyxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQztnQkFFbkYsMERBQTBEO2dCQUUxRCxJQUFHLEtBQUssS0FBSyxDQUFDLElBQUksTUFBTSxLQUFLLENBQUM7b0JBQUUsT0FBTztnQkFFdkMsSUFBSSxDQUFDLGFBQWEsR0FBRyxLQUFLLENBQUM7Z0JBQzNCLElBQUksQ0FBQyxjQUFjLEdBQUcsTUFBTSxDQUFDO2dCQUU3QixJQUFJLENBQUMsbUJBQW1CLEVBQUUsQ0FBQztZQUMvQixDQUFDLENBQUM7WUFDRixJQUFJLENBQUMsTUFBTSxDQUFDLGdCQUFnQixDQUFDLHlCQUF5QixFQUFFLGFBQWEsQ0FBQyxDQUFDO1lBQ3ZFLElBQUksQ0FBQyxNQUFNLENBQUMsZ0JBQWdCLENBQUMsdUJBQXVCLEVBQUUsYUFBYSxDQUFDLENBQUM7U0FDeEU7SUFDTCxDQUFDO0lBRUQsTUFBTTtJQUNOLENBQUM7SUFFRCxLQUFLO0lBQ0wsQ0FBQztJQUVELElBQUk7SUFDSixDQUFDO0lBRUQsSUFBSSxDQUFDLElBQVksRUFBRSxTQUFpQjtJQUNwQyxDQUFDO0lBRUQsbUJBQW1CO1FBQ2YsTUFBTSxlQUFlLEdBQUcsSUFBSSxDQUFDLGNBQWdCLEdBQUcsSUFBSSxDQUFDLGFBQWUsQ0FBQztRQUVyRSxJQUFJLEtBQUssR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDO1FBQ3ZCLElBQUksTUFBTSxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUM7UUFFekIsSUFBSSxLQUFLLEVBQUU7WUFDUCxNQUFNLEdBQUcsS0FBSyxHQUFHLGVBQWUsQ0FBQztTQUNwQzthQUFNLElBQUksTUFBTSxFQUFFO1lBQ2YsS0FBSyxHQUFHLE1BQU0sR0FBRyxlQUFlLENBQUM7U0FDcEM7YUFBTTtZQUNILE1BQU0sR0FBRyxHQUFHLENBQUM7WUFDYixLQUFLLEdBQUcsTUFBTSxHQUFHLGVBQWUsQ0FBQztTQUNwQztRQUVELElBQUksQ0FBQyxNQUFNLENBQUMsWUFBWSxDQUFDLFVBQVUsRUFBRSwwQkFBMEIsR0FBRyxLQUFLLEdBQUcsWUFBWSxHQUFDLE1BQU0sR0FBRSxHQUFHLENBQUMsQ0FBQztRQUVwRyxJQUFJLElBQUksQ0FBQyxnQkFBZ0IsRUFBRTtZQUN2QixJQUFJLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsQ0FBQyxJQUFJLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQztTQUM1RDtRQUVELElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxNQUFNLEdBQUcsQ0FBQyxDQUFDO1FBQ25DLElBQUksQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxDQUFDLElBQUksSUFBSSxDQUFDLGdCQUFnQixDQUFDO0lBQzdELENBQUM7O0FBdEZhLDRCQUFVLEdBQUcsSUFBSSw2REFBNkIsQ0FBQyxTQUFTLEVBQ2xFO0lBQ0ksR0FBRyxFQUFFLEVBQUMsSUFBSSxFQUFFLE9BQU8sRUFBRSxPQUFPLEVBQUUsaUdBQWlHLEVBQUM7SUFDaEksS0FBSyxFQUFFLEVBQUMsSUFBSSxFQUFFLFFBQVEsRUFBQztJQUN2QixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsUUFBUSxFQUFFLE9BQU8sRUFBRSxHQUFHLEVBQUM7Q0FDekMsRUFDRCxLQUFLLEVBQUUsS0FBSyxFQUFFLENBQUMsU0FBb0IsRUFBRSxNQUFjLEVBQUUsSUFBUyxFQUFFLEVBQUUsQ0FBQyxJQUFJLGlCQUFpQixDQUFDLFNBQVMsRUFBRSxNQUFNLEVBQUUsSUFBSSxDQUFDLENBQUMsQ0FBQztBQVIzSCw4Q0EwRkMiLCJmaWxlIjoiLi9zcmMvYnJvd3Nlci9jb21wb25lbnQvdGV4dHVyZS9QaWN0dXJlQ29udHJvbGxlci50cy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q29tcG9uZW50LCBFbnRpdHl9IGZyb20gXCJhZnJhbWVcIjtcbmltcG9ydCB7QWJzdHJhY3RDb21wb25lbnRDb250cm9sbGVyLCBDb21wb25lbnRDb250cm9sbGVyRGVmaW5pdGlvbn0gZnJvbSBcImFmcmFtZS10eXBlc2NyaXB0LWJvaWxlcnBsYXRlXCI7XG5cbi8qKlxuICogTW9kaWZpZWQgZnJvbSBodHRwczovL2dpdGh1Yi5jb20vbnlsa2kvYWZyYW1lLWZpdC10ZXh0dXJlLWNvbXBvbmVudC5cbiAqL1xuZXhwb3J0IGNsYXNzIFBpY3R1cmVDb250cm9sbGVyIGV4dGVuZHMgQWJzdHJhY3RDb21wb25lbnRDb250cm9sbGVyIHtcblxuICAgIHB1YmxpYyBzdGF0aWMgREVGSU5JVElPTiA9IG5ldyBDb21wb25lbnRDb250cm9sbGVyRGVmaW5pdGlvbihcInBpY3R1cmVcIixcbiAgICAgICAge1xuICAgICAgICAgICAgc3JjOiB7dHlwZTogJ2Fzc2V0JywgZGVmYXVsdDogJ2h0dHBzOi8vNjYubWVkaWEudHVtYmxyLmNvbS8xNGE0ZDQ3NzdlOTUxNjJiZmQxMjZmMGM5OTIyODI2MS90dW1ibHJfbjU5cGdpcFF4WDF0MG5hcGxvMV81MDAuanBnJ30sXG4gICAgICAgICAgICB3aWR0aDoge3R5cGU6ICdudW1iZXInfSxcbiAgICAgICAgICAgIGhlaWdodDoge3R5cGU6ICdudW1iZXInLCBkZWZhdWx0OiAxLjh9XG4gICAgICAgIH0sXG4gICAgICAgIGZhbHNlLCBmYWxzZSwgKGNvbXBvbmVudDogQ29tcG9uZW50LCBlbnRpdHk6IEVudGl0eSwgZGF0YTogYW55KSA9PiBuZXcgUGljdHVyZUNvbnRyb2xsZXIoY29tcG9uZW50LCBlbnRpdHksIGRhdGEpKTtcblxuICAgIHdpZHRoOiBudW1iZXIgfCB1bmRlZmluZWQ7XG4gICAgaGVpZ2h0OiBudW1iZXIgfCB1bmRlZmluZWQ7XG4gICAgZ2VvbWV0cnlXaWR0aDogbnVtYmVyIHwgdW5kZWZpbmVkO1xuICAgIGdlb21ldHJ5SGVpZ2h0OiBudW1iZXIgfCB1bmRlZmluZWQ7XG4gICAgaGVpZ2h0Q29ycmVjdGlvbjogbnVtYmVyIHwgdW5kZWZpbmVkO1xuXG4gICAgY29uc3RydWN0b3IoY29tcG9uZW50OiBDb21wb25lbnQsIGVudGl0eTogRW50aXR5LCBkYXRhOiBhbnkpIHtcbiAgICAgICAgc3VwZXIoY29tcG9uZW50LCBlbnRpdHksIGRhdGEpO1xuICAgIH1cblxuICAgIGluaXQoKTogdm9pZCB7XG4gICAgICAgIGNvbnN0IHNyY1VybCA9IHRoaXMuZGF0YS5zcmM7XG4gICAgICAgIHRoaXMud2lkdGggPSB0aGlzLmRhdGEud2lkdGg7XG4gICAgICAgIHRoaXMuaGVpZ2h0ID0gdGhpcy5kYXRhLmhlaWdodDtcbiAgICAgICAgLy9jb25zb2xlLmxvZyh0aGlzLmNvbXBvbmVudE5hbWUgKyBcIiBpbml0OiBcIiArIHNyY1VybCk7XG4gICAgICAgIHRoaXMuZW50aXR5LnNldEF0dHJpYnV0ZShcIm1hdGVyaWFsXCIsIFwic3JjOiB1cmwoXCIgKyBzcmNVcmwgKyBcIik7ICBzaWRlOiBkb3VibGU7IHRyYW5zcGFyZW50OiB0cnVlO1wiKTtcbiAgICB9XG5cbiAgICB1cGRhdGUoZGF0YTogYW55LCBvbGREYXRhOiBhbnkpOiB2b2lkIHtcbiAgICAgICAgaWYgKHRoaXMuZGF0YSA9PT0gZmFsc2UpIHJldHVybjtcblxuICAgICAgICBpZiAodGhpcy5nZW9tZXRyeVdpZHRoICE9IHVuZGVmaW5lZCB8fCB0aGlzLmdlb21ldHJ5SGVpZ2h0ICE9IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgdGhpcy5hcHBseVRyYW5zZm9ybWF0aW9uKCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjb25zdCB0ZXh0dXJlTG9hZGVkID0gKGU6IGFueSkgPT4ge1xuXG4gICAgICAgICAgICAgICAgY29uc3Qgd2lkdGggPSBlLmRldGFpbC50ZXh0dXJlLmltYWdlLnZpZGVvV2lkdGggfHwgZS5kZXRhaWwudGV4dHVyZS5pbWFnZS53aWR0aDtcbiAgICAgICAgICAgICAgICBjb25zdCBoZWlnaHQgPSBlLmRldGFpbC50ZXh0dXJlLmltYWdlLnZpZGVvSGVpZ2h0IHx8IGUuZGV0YWlsLnRleHR1cmUuaW1hZ2UuaGVpZ2h0O1xuXG4gICAgICAgICAgICAgICAgLy9jb25zb2xlLmxvZyhcInRleHR1cmUgbG9hZGVkOiBcIiArIHdpZHRoICsgXCIsIFwiICsgaGVpZ2h0KTtcblxuICAgICAgICAgICAgICAgIGlmKHdpZHRoID09PSAwIHx8IGhlaWdodCA9PT0gMCkgcmV0dXJuO1xuXG4gICAgICAgICAgICAgICAgdGhpcy5nZW9tZXRyeVdpZHRoID0gd2lkdGg7XG4gICAgICAgICAgICAgICAgdGhpcy5nZW9tZXRyeUhlaWdodCA9IGhlaWdodDtcblxuICAgICAgICAgICAgICAgIHRoaXMuYXBwbHlUcmFuc2Zvcm1hdGlvbigpO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIHRoaXMuZW50aXR5LmFkZEV2ZW50TGlzdGVuZXIoJ21hdGVyaWFsdmlkZW9sb2FkZWRkYXRhJywgdGV4dHVyZUxvYWRlZCk7XG4gICAgICAgICAgICB0aGlzLmVudGl0eS5hZGRFdmVudExpc3RlbmVyKCdtYXRlcmlhbHRleHR1cmVsb2FkZWQnLCB0ZXh0dXJlTG9hZGVkKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJlbW92ZSgpOiB2b2lkIHtcbiAgICB9XG5cbiAgICBwYXVzZSgpOiB2b2lkIHtcbiAgICB9XG5cbiAgICBwbGF5KCk6IHZvaWQge1xuICAgIH1cblxuICAgIHRpY2sodGltZTogbnVtYmVyLCB0aW1lRGVsdGE6IG51bWJlcik6IHZvaWQge1xuICAgIH1cblxuICAgIGFwcGx5VHJhbnNmb3JtYXRpb24oKSB7XG4gICAgICAgIGNvbnN0IGhlaWdodFdpdGhSYXRpbyA9IHRoaXMuZ2VvbWV0cnlIZWlnaHQhISAvIHRoaXMuZ2VvbWV0cnlXaWR0aCEhO1xuXG4gICAgICAgIGxldCB3aWR0aCA9IHRoaXMud2lkdGg7XG4gICAgICAgIGxldCBoZWlnaHQgPSB0aGlzLmhlaWdodDtcblxuICAgICAgICBpZiAod2lkdGgpIHtcbiAgICAgICAgICAgIGhlaWdodCA9IHdpZHRoICogaGVpZ2h0V2l0aFJhdGlvO1xuICAgICAgICB9IGVsc2UgaWYgKGhlaWdodCkge1xuICAgICAgICAgICAgd2lkdGggPSBoZWlnaHQgLyBoZWlnaHRXaXRoUmF0aW87XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBoZWlnaHQgPSAxLjg7XG4gICAgICAgICAgICB3aWR0aCA9IGhlaWdodCAvIGhlaWdodFdpdGhSYXRpbztcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuZW50aXR5LnNldEF0dHJpYnV0ZSgnZ2VvbWV0cnknLCAncHJpbWl0aXZlOiBwbGFuZTt3aWR0aDogJyArIHdpZHRoICsgJzsgaGVpZ2h0OiAnK2hlaWdodCsgJzsnKTtcblxuICAgICAgICBpZiAodGhpcy5oZWlnaHRDb3JyZWN0aW9uKSB7XG4gICAgICAgICAgICB0aGlzLmVudGl0eS5vYmplY3QzRC5wb3NpdGlvbi55IC09IHRoaXMuaGVpZ2h0Q29ycmVjdGlvbjtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuaGVpZ2h0Q29ycmVjdGlvbiA9IGhlaWdodCAvIDI7XG4gICAgICAgIHRoaXMuZW50aXR5Lm9iamVjdDNELnBvc2l0aW9uLnkgKz0gdGhpcy5oZWlnaHRDb3JyZWN0aW9uO1xuICAgIH1cblxufVxuXG5cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/browser/component/texture/PictureController.ts\n");

/***/ }),

/***/ "./src/browser/feature/animation/AnimationFeature.ts":
/*!***********************************************************!*\
  !*** ./src/browser/feature/animation/AnimationFeature.ts ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst three_1 = __webpack_require__(/*! three */ \"three\");\nconst AnimateEventDetail_1 = __webpack_require__(/*! ../../model/AnimateEventDetail */ \"./src/browser/model/AnimateEventDetail.ts\");\nconst AnimationFinishedEventDetail_1 = __webpack_require__(/*! ../../model/AnimationFinishedEventDetail */ \"./src/browser/model/AnimationFinishedEventDetail.ts\");\nconst Events_1 = __webpack_require__(/*! ../../model/Events */ \"./src/browser/model/Events.ts\");\nconst AnimationLoopStyle_1 = __webpack_require__(/*! ./AnimationLoopStyle */ \"./src/browser/feature/animation/AnimationLoopStyle.ts\");\nconst States_1 = __webpack_require__(/*! ../../model/States */ \"./src/browser/model/States.ts\");\nconst aframe_typescript_boilerplate_1 = __webpack_require__(/*! aframe-typescript-boilerplate */ \"./node_modules/aframe-typescript-boilerplate/built/index.js\");\nclass AnimationFeature extends aframe_typescript_boilerplate_1.AbstractFeature {\n    constructor(controller, entity) {\n        super(\"animation-controller\", controller, entity);\n        this.clips = new Map();\n        this.actions = new Map();\n        this.stateSystemController = controller.getSystemController(\"state\");\n        this.movementState = this.stateSystemController.getState(this.entity, States_1.States.STATE_MOVEMENT);\n    }\n    init() {\n        this.addEventListener(Events_1.Events.EVENT_MODEL_LOADED, () => {\n            this.initAnimation();\n        });\n        this.addEventListener(Events_1.Events.EVENT_ANIMATE_BEGIN, (detail) => {\n            this.beginAnimation(detail.clipName, detail.style, detail.repetitions);\n        });\n        this.addEventListener(Events_1.Events.EVENT_ANIMATE_END, (detail) => {\n            this.endAnimation(detail.clipName);\n        });\n    }\n    update(data, oldData) {\n    }\n    remove() {\n    }\n    pause() {\n    }\n    play() {\n    }\n    tick(time, timeDelta) {\n        if (this.mixer) {\n            if (this.actions.has(\"walking\")) {\n                const walkingAction = this.actions.get(\"walking\");\n                // TODO 0.3 scale factor and 1.9 animation walk speed are model specific\n                const walkingAnimationNormalSpeed = this.entity.getAttribute(\"scale\").x / 0.4 * 2; // 1 m/s\n                const entityActualSpeed = this.movementState.distanceDelta / this.movementState.timeDeltaSeconds;\n                const timeScale = this.movementState.facing * entityActualSpeed / walkingAnimationNormalSpeed;\n                walkingAction.setEffectiveTimeScale(timeScale);\n            }\n            this.mixer.update(timeDelta / 1000);\n        }\n    }\n    initAnimation() {\n        const mesh = this.entity.getObject3D('mesh');\n        const clips = mesh.animations;\n        if (!clips) {\n            return;\n        }\n        if (clips.length == 0) {\n            return;\n        }\n        this.mixer = new three_1.AnimationMixer(mesh);\n        this.mixer.addEventListener('finished', (event) => {\n            this.onAnimationFinished(event.action._clip.name);\n        });\n        this.clips.clear();\n        clips.forEach(clip => {\n            this.clips.set(clip.name.toLocaleLowerCase(), clip);\n        });\n        this.actions.clear();\n        this.dispatchEvent(Events_1.Events.EVENT_ANIMATE_BEGIN, new AnimateEventDetail_1.AnimationEventDetail(\"dance\", AnimationLoopStyle_1.AnimationLoopStyle.LOOP_REPEAT, 0));\n    }\n    onAnimationFinished(clipName) {\n        this.dispatchEvent(Events_1.Events.EVENT_ANIMATION_FINISHED, new AnimationFinishedEventDetail_1.AnimationFinishedEventDetails(clipName));\n        this.actions.delete(clipName);\n    }\n    beginAnimation(clipName, style, repetitions) {\n        // If clipNameOriginal is walking and walking does not exist in clips then switch to clipName walk.\n        const clipNameFinal = clipName != \"walking\" ? clipName : (this.clips.has(clipName) ? clipName : \"walk\");\n        if (!this.mixer) {\n            return;\n        }\n        if (!this.clips.has(clipNameFinal)) {\n            return;\n        }\n        const clip = this.clips.get(clipNameFinal);\n        if (clip) {\n            const action = this.actions.has(clipName) ? this.actions.get(clipName) : this.mixer.clipAction(clip);\n            if (style == AnimationLoopStyle_1.AnimationLoopStyle.ONCE) {\n                action.setLoop(three_1.LoopOnce, repetitions);\n            }\n            else if (style == AnimationLoopStyle_1.AnimationLoopStyle.LOOP_REPEAT) {\n                if (repetitions > -1) {\n                    action.setLoop(three_1.LoopRepeat, repetitions);\n                }\n            }\n            else {\n                action.setLoop(three_1.LoopPingPong, repetitions);\n            }\n            action.reset();\n            action.fadeIn(0.25);\n            action.play();\n            this.actions.set(clipName, action);\n        }\n    }\n    endAnimation(clipName) {\n        if (!this.actions.has(clipName)) {\n            return;\n        }\n        const action = this.actions.get(clipName);\n        action.fadeOut(0.25);\n        this.dispatchEvent(Events_1.Events.EVENT_ANIMATION_FINISHED, new AnimationFinishedEventDetail_1.AnimationFinishedEventDetails(clipName));\n        setTimeout(() => {\n            if (this.actions.has(clipName) && this.actions.get(clipName).weight == 0) {\n                action.stop();\n            }\n        }, 1000);\n    }\n}\nexports.AnimationFeature = AnimationFeature;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/browser/feature/animation/AnimationFeature.ts\n");

/***/ }),

/***/ "./src/browser/feature/animation/AnimationLoopStyle.ts":
/*!*************************************************************!*\
  !*** ./src/browser/feature/animation/AnimationLoopStyle.ts ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar AnimationLoopStyle;\n(function (AnimationLoopStyle) {\n    AnimationLoopStyle[AnimationLoopStyle[\"ONCE\"] = 0] = \"ONCE\";\n    AnimationLoopStyle[AnimationLoopStyle[\"LOOP_REPEAT\"] = 1] = \"LOOP_REPEAT\";\n    AnimationLoopStyle[AnimationLoopStyle[\"PINGPONG\"] = 2] = \"PINGPONG\";\n})(AnimationLoopStyle = exports.AnimationLoopStyle || (exports.AnimationLoopStyle = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9mZWF0dXJlL2FuaW1hdGlvbi9BbmltYXRpb25Mb29wU3R5bGUudHM/Y2MyMSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLElBQVksa0JBSVg7QUFKRCxXQUFZLGtCQUFrQjtJQUMxQiwyREFBSTtJQUNKLHlFQUFXO0lBQ1gsbUVBQVE7QUFDWixDQUFDLEVBSlcsa0JBQWtCLEdBQWxCLDBCQUFrQixLQUFsQiwwQkFBa0IsUUFJN0IiLCJmaWxlIjoiLi9zcmMvYnJvd3Nlci9mZWF0dXJlL2FuaW1hdGlvbi9BbmltYXRpb25Mb29wU3R5bGUudHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZW51bSBBbmltYXRpb25Mb29wU3R5bGUge1xuICAgIE9OQ0UsXG4gICAgTE9PUF9SRVBFQVQsXG4gICAgUElOR1BPTkdcbn0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/browser/feature/animation/AnimationLoopStyle.ts\n");

/***/ }),

/***/ "./src/browser/feature/animation/ExpressionFeature.ts":
/*!************************************************************!*\
  !*** ./src/browser/feature/animation/ExpressionFeature.ts ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst AnimateEventDetail_1 = __webpack_require__(/*! ../../model/AnimateEventDetail */ \"./src/browser/model/AnimateEventDetail.ts\");\nconst Events_1 = __webpack_require__(/*! ../../model/Events */ \"./src/browser/model/Events.ts\");\nconst AnimationLoopStyle_1 = __webpack_require__(/*! ./AnimationLoopStyle */ \"./src/browser/feature/animation/AnimationLoopStyle.ts\");\nconst aframe_typescript_boilerplate_1 = __webpack_require__(/*! aframe-typescript-boilerplate */ \"./node_modules/aframe-typescript-boilerplate/built/index.js\");\nclass ExpressionFeature extends aframe_typescript_boilerplate_1.AbstractFeature {\n    constructor(controller, entity) {\n        super(\"expression-controller\", controller, entity);\n        this.expressions = new Set();\n    }\n    init() {\n        this.addEventListener(Events_1.Events.EVENT_STATE_BEGIN, (detail) => {\n            if (detail.state === \"moving\") {\n                this.dispatchEvent(Events_1.Events.EVENT_ANIMATE_BEGIN, new AnimateEventDetail_1.AnimationEventDetail(\"walking\", AnimationLoopStyle_1.AnimationLoopStyle.LOOP_REPEAT, -1));\n            }\n        });\n        this.addEventListener(Events_1.Events.EVENT_STATE_END, (detail) => {\n            if (detail.state === \"moving\") {\n                this.dispatchEvent(Events_1.Events.EVENT_ANIMATE_END, new AnimateEventDetail_1.AnimationEventDetail(\"walking\", AnimationLoopStyle_1.AnimationLoopStyle.LOOP_REPEAT, 10));\n            }\n        });\n    }\n    update(data, oldData) {\n    }\n    remove() {\n    }\n    pause() {\n    }\n    play() {\n    }\n    tick(time, timeDelta) {\n    }\n}\nexports.ExpressionFeature = ExpressionFeature;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9mZWF0dXJlL2FuaW1hdGlvbi9FeHByZXNzaW9uRmVhdHVyZS50cz9kMDQ4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsb0lBQW9FO0FBQ3BFLGdHQUEwQztBQUMxQyxzSUFBd0Q7QUFHeEQsZ0tBQThEO0FBRzlELE1BQWEsaUJBQWtCLFNBQVEsK0NBQWU7SUFJbEQsWUFBWSxVQUErQixFQUFFLE1BQWM7UUFDdkQsS0FBSyxDQUFDLHVCQUF1QixFQUFFLFVBQVUsRUFBRSxNQUFNLENBQUMsQ0FBQztRQUh2RCxnQkFBVyxHQUFnQixJQUFJLEdBQUcsRUFBRSxDQUFDO0lBSXJDLENBQUM7SUFFRCxJQUFJO1FBQ0EsSUFBSSxDQUFDLGdCQUFnQixDQUFDLGVBQU0sQ0FBQyxpQkFBaUIsRUFBRSxDQUFDLE1BQThCLEVBQUUsRUFBRTtZQUMvRSxJQUFJLE1BQU0sQ0FBQyxLQUFLLEtBQUssUUFBUSxFQUFFO2dCQUMzQixJQUFJLENBQUMsYUFBYSxDQUFDLGVBQU0sQ0FBQyxtQkFBbUIsRUFBRSxJQUFJLHlDQUFvQixDQUFDLFNBQVMsRUFBRSx1Q0FBa0IsQ0FBQyxXQUFXLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO2FBQzNIO1FBQ0wsQ0FBQyxDQUFDLENBQUM7UUFDSCxJQUFJLENBQUMsZ0JBQWdCLENBQUMsZUFBTSxDQUFDLGVBQWUsRUFBRSxDQUFDLE1BQThCLEVBQUUsRUFBRTtZQUM3RSxJQUFJLE1BQU0sQ0FBQyxLQUFLLEtBQUssUUFBUSxFQUFFO2dCQUMzQixJQUFJLENBQUMsYUFBYSxDQUFDLGVBQU0sQ0FBQyxpQkFBaUIsRUFBRSxJQUFJLHlDQUFvQixDQUFDLFNBQVMsRUFBRSx1Q0FBa0IsQ0FBQyxXQUFXLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQzthQUN6SDtRQUNMLENBQUMsQ0FBQyxDQUFDO0lBQ1AsQ0FBQztJQUVELE1BQU0sQ0FBQyxJQUFTLEVBQUUsT0FBWTtJQUM5QixDQUFDO0lBRUQsTUFBTTtJQUNOLENBQUM7SUFFRCxLQUFLO0lBQ0wsQ0FBQztJQUVELElBQUk7SUFDSixDQUFDO0lBRUQsSUFBSSxDQUFDLElBQVksRUFBRSxTQUFpQjtJQUNwQyxDQUFDO0NBQ0o7QUFuQ0QsOENBbUNDIiwiZmlsZSI6Ii4vc3JjL2Jyb3dzZXIvZmVhdHVyZS9hbmltYXRpb24vRXhwcmVzc2lvbkZlYXR1cmUudHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0FuaW1hdGlvbkV2ZW50RGV0YWlsfSBmcm9tIFwiLi4vLi4vbW9kZWwvQW5pbWF0ZUV2ZW50RGV0YWlsXCI7XG5pbXBvcnQge0V2ZW50c30gZnJvbSBcIi4uLy4uL21vZGVsL0V2ZW50c1wiO1xuaW1wb3J0IHtBbmltYXRpb25Mb29wU3R5bGV9IGZyb20gXCIuL0FuaW1hdGlvbkxvb3BTdHlsZVwiO1xuaW1wb3J0IHtFbnRpdHl9IGZyb20gXCJhZnJhbWVcIjtcbmltcG9ydCB7RW50aXR5U3RhdGVFdmVudERldGFpbH0gZnJvbSBcIi4uLy4uL21vZGVsL0VudGl0eVN0YXRlRXZlbnREZXRhaWxcIjtcbmltcG9ydCB7QWJzdHJhY3RGZWF0dXJlfSBmcm9tIFwiYWZyYW1lLXR5cGVzY3JpcHQtYm9pbGVycGxhdGVcIjtcbmltcG9ydCB7Q29tcG9uZW50Q29udHJvbGxlcn0gZnJvbSBcImFmcmFtZS10eXBlc2NyaXB0LWJvaWxlcnBsYXRlXCI7XG5cbmV4cG9ydCBjbGFzcyBFeHByZXNzaW9uRmVhdHVyZSBleHRlbmRzIEFic3RyYWN0RmVhdHVyZSB7XG5cbiAgICBleHByZXNzaW9uczogU2V0PHN0cmluZz4gPSBuZXcgU2V0KCk7XG5cbiAgICBjb25zdHJ1Y3Rvcihjb250cm9sbGVyOiBDb21wb25lbnRDb250cm9sbGVyLCBlbnRpdHk6IEVudGl0eSkge1xuICAgICAgICBzdXBlcihcImV4cHJlc3Npb24tY29udHJvbGxlclwiLCBjb250cm9sbGVyLCBlbnRpdHkpO1xuICAgIH1cblxuICAgIGluaXQoKTogdm9pZCB7XG4gICAgICAgIHRoaXMuYWRkRXZlbnRMaXN0ZW5lcihFdmVudHMuRVZFTlRfU1RBVEVfQkVHSU4sIChkZXRhaWw6IEVudGl0eVN0YXRlRXZlbnREZXRhaWwpID0+IHtcbiAgICAgICAgICAgIGlmIChkZXRhaWwuc3RhdGUgPT09IFwibW92aW5nXCIpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmRpc3BhdGNoRXZlbnQoRXZlbnRzLkVWRU5UX0FOSU1BVEVfQkVHSU4sIG5ldyBBbmltYXRpb25FdmVudERldGFpbChcIndhbGtpbmdcIiwgQW5pbWF0aW9uTG9vcFN0eWxlLkxPT1BfUkVQRUFULCAtMSkpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5hZGRFdmVudExpc3RlbmVyKEV2ZW50cy5FVkVOVF9TVEFURV9FTkQsIChkZXRhaWw6IEVudGl0eVN0YXRlRXZlbnREZXRhaWwpID0+IHtcbiAgICAgICAgICAgIGlmIChkZXRhaWwuc3RhdGUgPT09IFwibW92aW5nXCIpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmRpc3BhdGNoRXZlbnQoRXZlbnRzLkVWRU5UX0FOSU1BVEVfRU5ELCBuZXcgQW5pbWF0aW9uRXZlbnREZXRhaWwoXCJ3YWxraW5nXCIsIEFuaW1hdGlvbkxvb3BTdHlsZS5MT09QX1JFUEVBVCwgMTApKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgdXBkYXRlKGRhdGE6IGFueSwgb2xkRGF0YTogYW55KTogdm9pZCB7XG4gICAgfVxuXG4gICAgcmVtb3ZlKCk6IHZvaWQge1xuICAgIH1cblxuICAgIHBhdXNlKCk6IHZvaWQge1xuICAgIH1cblxuICAgIHBsYXkoKTogdm9pZCB7XG4gICAgfVxuXG4gICAgdGljayh0aW1lOiBudW1iZXIsIHRpbWVEZWx0YTogbnVtYmVyKTogdm9pZCB7XG4gICAgfVxufVxuXG5cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/browser/feature/animation/ExpressionFeature.ts\n");

/***/ }),

/***/ "./src/browser/index.ts":
/*!******************************!*\
  !*** ./src/browser/index.ts ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst UserNameController_1 = __webpack_require__(/*! ./component/label/UserNameController */ \"./src/browser/component/label/UserNameController.ts\");\nconst KeyboardAndMouseDevice_1 = __webpack_require__(/*! ./system/interface/device/KeyboardAndMouseDevice */ \"./src/browser/system/interface/device/KeyboardAndMouseDevice.ts\");\nconst AnimatorController_1 = __webpack_require__(/*! ./component/animation/AnimatorController */ \"./src/browser/component/animation/AnimatorController.ts\");\nconst AvatarController_1 = __webpack_require__(/*! ./component/avatar/AvatarController */ \"./src/browser/component/avatar/AvatarController.ts\");\nconst SpaceSystemController_1 = __webpack_require__(/*! ./system/space/SpaceSystemController */ \"./src/browser/system/space/SpaceSystemController.ts\");\nconst StateSystemController_1 = __webpack_require__(/*! ./system/state/StateSystemController */ \"./src/browser/system/state/StateSystemController.ts\");\nconst States_1 = __webpack_require__(/*! ./model/States */ \"./src/browser/model/States.ts\");\nconst MovementState_1 = __webpack_require__(/*! ./model/MovementState */ \"./src/browser/model/MovementState.ts\");\nconst InterfaceSystemController_1 = __webpack_require__(/*! ./system/interface/InterfaceSystemController */ \"./src/browser/system/interface/InterfaceSystemController.ts\");\nconst InterfaceController_1 = __webpack_require__(/*! ./system/interface/InterfaceController */ \"./src/browser/system/interface/InterfaceController.ts\");\nconst WalkTool_1 = __webpack_require__(/*! ./system/interface/tool/WalkTool */ \"./src/browser/system/interface/tool/WalkTool.ts\");\nconst PrimaryControllerDevice_1 = __webpack_require__(/*! ./system/interface/device/PrimaryControllerDevice */ \"./src/browser/system/interface/device/PrimaryControllerDevice.ts\");\nconst AddObjectTool_1 = __webpack_require__(/*! ./system/interface/tool/AddObjectTool */ \"./src/browser/system/interface/tool/AddObjectTool.ts\");\nconst CollidableController_1 = __webpack_require__(/*! ./component/collidable/CollidableController */ \"./src/browser/component/collidable/CollidableController.ts\");\nconst QuaternionController_1 = __webpack_require__(/*! ./component/quaternion/QuaternionController */ \"./src/browser/component/quaternion/QuaternionController.ts\");\nconst TeleportTool_1 = __webpack_require__(/*! ./system/interface/tool/TeleportTool */ \"./src/browser/system/interface/tool/TeleportTool.ts\");\nconst ToolSelectorTool_1 = __webpack_require__(/*! ./system/interface/tool/ToolSelectorTool */ \"./src/browser/system/interface/tool/ToolSelectorTool.ts\");\nconst RemoveObjectTool_1 = __webpack_require__(/*! ./system/interface/tool/RemoveObjectTool */ \"./src/browser/system/interface/tool/RemoveObjectTool.ts\");\nconst ModelController_1 = __webpack_require__(/*! ./system/merge/ModelController */ \"./src/browser/system/merge/ModelController.ts\");\nconst MergeController_1 = __webpack_require__(/*! ./system/merge/MergeController */ \"./src/browser/system/merge/MergeController.ts\");\nconst MergeSystemController_1 = __webpack_require__(/*! ./system/merge/MergeSystemController */ \"./src/browser/system/merge/MergeSystemController.ts\");\nconst LoaderSystemController_1 = __webpack_require__(/*! ./system/loader/LoaderSystemController */ \"./src/browser/system/loader/LoaderSystemController.ts\");\nconst PictureController_1 = __webpack_require__(/*! ./component/texture/PictureController */ \"./src/browser/component/texture/PictureController.ts\");\nconst BillboardController_1 = __webpack_require__(/*! ./component/texture/BillboardController */ \"./src/browser/component/texture/BillboardController.ts\");\nconst ScaleObjectTool_1 = __webpack_require__(/*! ./system/interface/tool/ScaleObjectTool */ \"./src/browser/system/interface/tool/ScaleObjectTool.ts\");\nconst MoveObjectTool_1 = __webpack_require__(/*! ./system/interface/tool/MoveObjectTool */ \"./src/browser/system/interface/tool/MoveObjectTool.ts\");\nconst RotateObjectTool_1 = __webpack_require__(/*! ./system/interface/tool/RotateObjectTool */ \"./src/browser/system/interface/tool/RotateObjectTool.ts\");\nconst AvatarActionLoggerFeature_1 = __webpack_require__(/*! ./component/avatar/AvatarActionLoggerFeature */ \"./src/browser/component/avatar/AvatarActionLoggerFeature.ts\");\n__webpack_require__(/*! ./primitive/billboard */ \"./src/browser/primitive/billboard.ts\");\n__webpack_require__(/*! ./primitive/picture */ \"./src/browser/primitive/picture.ts\");\nconst aframe_typescript_boilerplate_1 = __webpack_require__(/*! aframe-typescript-boilerplate */ \"./node_modules/aframe-typescript-boilerplate/built/index.js\");\naframe_typescript_boilerplate_1.registerSystemController(LoaderSystemController_1.LoaderSystemController.DEFINITION);\naframe_typescript_boilerplate_1.registerSystemController(aframe_typescript_boilerplate_1.ExampleSystemController.DEFINITION);\naframe_typescript_boilerplate_1.registerSystemController(InterfaceSystemController_1.InterfaceSystemController.DEFINITION);\naframe_typescript_boilerplate_1.registerSystemController(StateSystemController_1.StateSystemController.DEFINITION);\naframe_typescript_boilerplate_1.registerSystemController(SpaceSystemController_1.SpaceSystemController.DEFINITION);\naframe_typescript_boilerplate_1.registerSystemController(MergeSystemController_1.MergeSystemController.DEFINITION);\naframe_typescript_boilerplate_1.registerComponentController(InterfaceController_1.InterfaceController.DEFINITION);\naframe_typescript_boilerplate_1.registerComponentController(ToolSelectorTool_1.ToolSelectorTool.DEFINITION);\naframe_typescript_boilerplate_1.registerComponentController(AddObjectTool_1.AddObjectTool.DEFINITION);\naframe_typescript_boilerplate_1.registerComponentController(ScaleObjectTool_1.ScaleObjectTool.DEFINITION);\naframe_typescript_boilerplate_1.registerComponentController(MoveObjectTool_1.MoveObjectTool.DEFINITION);\naframe_typescript_boilerplate_1.registerComponentController(RotateObjectTool_1.RotateObjectTool.DEFINITION);\naframe_typescript_boilerplate_1.registerComponentController(RemoveObjectTool_1.RemoveObjectTool.DEFINITION);\naframe_typescript_boilerplate_1.registerComponentController(WalkTool_1.WalkTool.DEFINITION);\naframe_typescript_boilerplate_1.registerComponentController(TeleportTool_1.TeleportTool.DEFINITION);\naframe_typescript_boilerplate_1.registerComponentController(PrimaryControllerDevice_1.PrimaryControllerDevice.DEFINITION);\naframe_typescript_boilerplate_1.registerComponentController(KeyboardAndMouseDevice_1.KeyboardAndMouseDevice.DEFINITION);\naframe_typescript_boilerplate_1.registerComponentController(aframe_typescript_boilerplate_1.ExampleController.DEFINITION);\naframe_typescript_boilerplate_1.registerComponentController(CollidableController_1.CollidableController.DEFINITION);\naframe_typescript_boilerplate_1.registerComponentController(AnimatorController_1.AnimatorController.DEFINITION);\naframe_typescript_boilerplate_1.registerComponentController(AvatarController_1.AvatarController.DEFINITION.add(AvatarActionLoggerFeature_1.AvatarActionLoggerFeature.DEFINITION));\naframe_typescript_boilerplate_1.registerComponentController(UserNameController_1.UserNameController.DEFINITION);\naframe_typescript_boilerplate_1.registerComponentController(QuaternionController_1.QuaternionController.DEFINITION);\naframe_typescript_boilerplate_1.registerComponentController(MergeController_1.MergeController.DEFINITION);\naframe_typescript_boilerplate_1.registerComponentController(ModelController_1.ModelController.DEFINITION);\naframe_typescript_boilerplate_1.registerComponentController(PictureController_1.PictureController.DEFINITION);\naframe_typescript_boilerplate_1.registerComponentController(BillboardController_1.BillboardController.DEFINITION);\nStateSystemController_1.registerStateFactory(States_1.States.STATE_MOVEMENT, () => { return new MovementState_1.MovementState(); });\n// Fix facebook bug adding hash to url\nif (window.location.hash && window.location.hash == '#_=_') {\n    history.pushState(\"\", document.title, window.location.pathname + window.location.search);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/browser/index.ts\n");

/***/ }),

/***/ "./src/browser/math/math.ts":
/*!**********************************!*\
  !*** ./src/browser/math/math.ts ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst three_1 = __webpack_require__(/*! three */ \"three\");\n/**\n * Snaps vector to axis aligned grid.\n * @param vector the vector\n * @param step the grid step\n */\nfunction snapVector3ToAxisAlignedGrid(vector, step) {\n    const snappedPosition = new three_1.Vector3();\n    snappedPosition.x = snapNumberToAxisAlignedGrid(vector.x, step);\n    snappedPosition.y = snapNumberToAxisAlignedGrid(vector.y, step);\n    snappedPosition.z = snapNumberToAxisAlignedGrid(vector.z, step);\n    return snappedPosition;\n}\nexports.snapVector3ToAxisAlignedGrid = snapVector3ToAxisAlignedGrid;\n/**\n * Snap number to grid.\n * @param number the number\n * @param step the grid step\n */\nfunction snapNumberToAxisAlignedGrid(number, step) {\n    return Math.floor(number / step) * step + step / 2;\n}\nexports.snapNumberToAxisAlignedGrid = snapNumberToAxisAlignedGrid;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9tYXRoL21hdGgudHM/NWNkMCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLDBEQUE4QjtBQUU5Qjs7OztHQUlHO0FBQ0gsU0FBZ0IsNEJBQTRCLENBQUMsTUFBZSxFQUFFLElBQVk7SUFDdEUsTUFBTSxlQUFlLEdBQUcsSUFBSSxlQUFPLEVBQUUsQ0FBQztJQUN0QyxlQUFlLENBQUMsQ0FBQyxHQUFHLDJCQUEyQixDQUFDLE1BQU0sQ0FBQyxDQUFDLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDaEUsZUFBZSxDQUFDLENBQUMsR0FBRywyQkFBMkIsQ0FBQyxNQUFNLENBQUMsQ0FBQyxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQ2hFLGVBQWUsQ0FBQyxDQUFDLEdBQUcsMkJBQTJCLENBQUMsTUFBTSxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQztJQUNoRSxPQUFPLGVBQWUsQ0FBQztBQUMzQixDQUFDO0FBTkQsb0VBTUM7QUFHRDs7OztHQUlHO0FBQ0gsU0FBZ0IsMkJBQTJCLENBQUMsTUFBYyxFQUFFLElBQVk7SUFDcEUsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUMsR0FBRyxJQUFJLEdBQUcsSUFBSSxHQUFHLENBQUMsQ0FBQztBQUN2RCxDQUFDO0FBRkQsa0VBRUMiLCJmaWxlIjoiLi9zcmMvYnJvd3Nlci9tYXRoL21hdGgudHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1ZlY3RvcjN9IGZyb20gXCJ0aHJlZVwiO1xuXG4vKipcbiAqIFNuYXBzIHZlY3RvciB0byBheGlzIGFsaWduZWQgZ3JpZC5cbiAqIEBwYXJhbSB2ZWN0b3IgdGhlIHZlY3RvclxuICogQHBhcmFtIHN0ZXAgdGhlIGdyaWQgc3RlcFxuICovXG5leHBvcnQgZnVuY3Rpb24gc25hcFZlY3RvcjNUb0F4aXNBbGlnbmVkR3JpZCh2ZWN0b3I6IFZlY3RvcjMsIHN0ZXA6IG51bWJlcik6IFZlY3RvcjMge1xuICAgIGNvbnN0IHNuYXBwZWRQb3NpdGlvbiA9IG5ldyBWZWN0b3IzKCk7XG4gICAgc25hcHBlZFBvc2l0aW9uLnggPSBzbmFwTnVtYmVyVG9BeGlzQWxpZ25lZEdyaWQodmVjdG9yLngsIHN0ZXApO1xuICAgIHNuYXBwZWRQb3NpdGlvbi55ID0gc25hcE51bWJlclRvQXhpc0FsaWduZWRHcmlkKHZlY3Rvci55LCBzdGVwKTtcbiAgICBzbmFwcGVkUG9zaXRpb24ueiA9IHNuYXBOdW1iZXJUb0F4aXNBbGlnbmVkR3JpZCh2ZWN0b3Iueiwgc3RlcCk7XG4gICAgcmV0dXJuIHNuYXBwZWRQb3NpdGlvbjtcbn1cblxuXG4vKipcbiAqIFNuYXAgbnVtYmVyIHRvIGdyaWQuXG4gKiBAcGFyYW0gbnVtYmVyIHRoZSBudW1iZXJcbiAqIEBwYXJhbSBzdGVwIHRoZSBncmlkIHN0ZXBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHNuYXBOdW1iZXJUb0F4aXNBbGlnbmVkR3JpZChudW1iZXI6IG51bWJlciwgc3RlcDogbnVtYmVyKTogbnVtYmVyIHtcbiAgICByZXR1cm4gTWF0aC5mbG9vcihudW1iZXIgLyBzdGVwKSAqIHN0ZXAgKyBzdGVwIC8gMjtcbn0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/browser/math/math.ts\n");

/***/ }),

/***/ "./src/browser/model/AnimateEventDetail.ts":
/*!*************************************************!*\
  !*** ./src/browser/model/AnimateEventDetail.ts ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass AnimationEventDetail {\n    constructor(animation, style, repeats) {\n        this.clipName = animation;\n        this.style = style;\n        this.repetitions = repeats;\n    }\n}\nexports.AnimationEventDetail = AnimationEventDetail;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9tb2RlbC9BbmltYXRlRXZlbnREZXRhaWwudHM/YTQ2YyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUVBLE1BQWEsb0JBQW9CO0lBTTdCLFlBQVksU0FBaUIsRUFBRSxLQUF5QixFQUFFLE9BQWU7UUFDckUsSUFBSSxDQUFDLFFBQVEsR0FBRyxTQUFTLENBQUM7UUFDMUIsSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7UUFDbkIsSUFBSSxDQUFDLFdBQVcsR0FBRyxPQUFPLENBQUM7SUFDL0IsQ0FBQztDQUNKO0FBWEQsb0RBV0MiLCJmaWxlIjoiLi9zcmMvYnJvd3Nlci9tb2RlbC9BbmltYXRlRXZlbnREZXRhaWwudHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0FuaW1hdGlvbkxvb3BTdHlsZX0gZnJvbSBcIi4uL2ZlYXR1cmUvYW5pbWF0aW9uL0FuaW1hdGlvbkxvb3BTdHlsZVwiO1xuXG5leHBvcnQgY2xhc3MgQW5pbWF0aW9uRXZlbnREZXRhaWwge1xuXG4gICAgY2xpcE5hbWU6IHN0cmluZztcbiAgICBzdHlsZTogQW5pbWF0aW9uTG9vcFN0eWxlO1xuICAgIHJlcGV0aXRpb25zOiBudW1iZXI7XG5cbiAgICBjb25zdHJ1Y3RvcihhbmltYXRpb246IHN0cmluZywgc3R5bGU6IEFuaW1hdGlvbkxvb3BTdHlsZSwgcmVwZWF0czogbnVtYmVyKSB7XG4gICAgICAgIHRoaXMuY2xpcE5hbWUgPSBhbmltYXRpb247XG4gICAgICAgIHRoaXMuc3R5bGUgPSBzdHlsZTtcbiAgICAgICAgdGhpcy5yZXBldGl0aW9ucyA9IHJlcGVhdHM7XG4gICAgfVxufSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/browser/model/AnimateEventDetail.ts\n");

/***/ }),

/***/ "./src/browser/model/AnimationFinishedEventDetail.ts":
/*!***********************************************************!*\
  !*** ./src/browser/model/AnimationFinishedEventDetail.ts ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass AnimationFinishedEventDetails {\n    constructor(clip) {\n        this.clipName = clip;\n    }\n}\nexports.AnimationFinishedEventDetails = AnimationFinishedEventDetails;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9tb2RlbC9BbmltYXRpb25GaW5pc2hlZEV2ZW50RGV0YWlsLnRzPzhjN2UiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxNQUFhLDZCQUE2QjtJQUl0QyxZQUFZLElBQVk7UUFDcEIsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUM7SUFDekIsQ0FBQztDQUNKO0FBUEQsc0VBT0MiLCJmaWxlIjoiLi9zcmMvYnJvd3Nlci9tb2RlbC9BbmltYXRpb25GaW5pc2hlZEV2ZW50RGV0YWlsLnRzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNsYXNzIEFuaW1hdGlvbkZpbmlzaGVkRXZlbnREZXRhaWxzIHtcblxuICAgIGNsaXBOYW1lOiBzdHJpbmc7XG5cbiAgICBjb25zdHJ1Y3RvcihjbGlwOiBzdHJpbmcpIHtcbiAgICAgICAgdGhpcy5jbGlwTmFtZSA9IGNsaXA7XG4gICAgfVxufSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/browser/model/AnimationFinishedEventDetail.ts\n");

/***/ }),

/***/ "./src/browser/model/EntityActionEventDetail.ts":
/*!******************************************************!*\
  !*** ./src/browser/model/EntityActionEventDetail.ts ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass EntityActionEventDetail {\n    constructor(action, state) {\n        this.action = action;\n        this.description = state;\n    }\n}\nexports.EntityActionEventDetail = EntityActionEventDetail;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9tb2RlbC9FbnRpdHlBY3Rpb25FdmVudERldGFpbC50cz9hNTc1Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsTUFBYSx1QkFBdUI7SUFHaEMsWUFBWSxNQUFjLEVBQUUsS0FBYTtRQUNyQyxJQUFJLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQztRQUNyQixJQUFJLENBQUMsV0FBVyxHQUFHLEtBQUssQ0FBQztJQUM3QixDQUFDO0NBQ0o7QUFQRCwwREFPQyIsImZpbGUiOiIuL3NyYy9icm93c2VyL21vZGVsL0VudGl0eUFjdGlvbkV2ZW50RGV0YWlsLnRzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNsYXNzIEVudGl0eUFjdGlvbkV2ZW50RGV0YWlsIHtcbiAgICBhY3Rpb246IHN0cmluZztcbiAgICBkZXNjcmlwdGlvbjogc3RyaW5nO1xuICAgIGNvbnN0cnVjdG9yKGFjdGlvbjogc3RyaW5nLCBzdGF0ZTogc3RyaW5nKSB7XG4gICAgICAgIHRoaXMuYWN0aW9uID0gYWN0aW9uO1xuICAgICAgICB0aGlzLmRlc2NyaXB0aW9uID0gc3RhdGU7XG4gICAgfVxufSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/browser/model/EntityActionEventDetail.ts\n");

/***/ }),

/***/ "./src/browser/model/EntityStateEventDetail.ts":
/*!*****************************************************!*\
  !*** ./src/browser/model/EntityStateEventDetail.ts ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass EntityStateEventDetail {\n    constructor(state) {\n        this.state = state;\n    }\n}\nexports.EntityStateEventDetail = EntityStateEventDetail;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9tb2RlbC9FbnRpdHlTdGF0ZUV2ZW50RGV0YWlsLnRzP2ZmMTciXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxNQUFhLHNCQUFzQjtJQUUvQixZQUFZLEtBQWE7UUFDckIsSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7SUFDdkIsQ0FBQztDQUNKO0FBTEQsd0RBS0MiLCJmaWxlIjoiLi9zcmMvYnJvd3Nlci9tb2RlbC9FbnRpdHlTdGF0ZUV2ZW50RGV0YWlsLnRzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNsYXNzIEVudGl0eVN0YXRlRXZlbnREZXRhaWwge1xuICAgIHN0YXRlOiBzdHJpbmc7XG4gICAgY29uc3RydWN0b3Ioc3RhdGU6IHN0cmluZykge1xuICAgICAgICB0aGlzLnN0YXRlID0gc3RhdGU7XG4gICAgfVxufSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/browser/model/EntityStateEventDetail.ts\n");

/***/ }),

/***/ "./src/browser/model/Events.ts":
/*!*************************************!*\
  !*** ./src/browser/model/Events.ts ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass Events {\n}\nEvents.EVENT_ANIMATE_BEGIN = 'animate-begin';\nEvents.EVENT_ANIMATE_END = 'animate-end';\nEvents.EVENT_ANIMATION_FINISHED = 'animation-finished';\nEvents.EVENT_STATE_BEGIN = 'state-begin';\nEvents.EVENT_STATE_END = 'state-end';\nEvents.EVENT_ACTION = 'action';\nEvents.EVENT_MODEL_LOADED = 'model-loaded';\nexports.Events = Events;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9tb2RlbC9FdmVudHMudHM/MWMzOSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLE1BQWEsTUFBTTs7QUFFUiwwQkFBbUIsR0FBRyxlQUFlLENBQUM7QUFFdEMsd0JBQWlCLEdBQUcsYUFBYSxDQUFDO0FBRWxDLCtCQUF3QixHQUFHLG9CQUFvQixDQUFDO0FBRWhELHdCQUFpQixHQUFHLGFBQWEsQ0FBQztBQUVsQyxzQkFBZSxHQUFHLFdBQVcsQ0FBQztBQUU5QixtQkFBWSxHQUFHLFFBQVEsQ0FBQztBQUV4Qix5QkFBa0IsR0FBRyxjQUFjLENBQUM7QUFkL0Msd0JBZUMiLCJmaWxlIjoiLi9zcmMvYnJvd3Nlci9tb2RlbC9FdmVudHMudHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY2xhc3MgRXZlbnRzIHtcblxuICAgIHN0YXRpYyBFVkVOVF9BTklNQVRFX0JFR0lOID0gJ2FuaW1hdGUtYmVnaW4nO1xuXG4gICAgc3RhdGljIEVWRU5UX0FOSU1BVEVfRU5EID0gJ2FuaW1hdGUtZW5kJztcblxuICAgIHN0YXRpYyBFVkVOVF9BTklNQVRJT05fRklOSVNIRUQgPSAnYW5pbWF0aW9uLWZpbmlzaGVkJztcblxuICAgIHN0YXRpYyBFVkVOVF9TVEFURV9CRUdJTiA9ICdzdGF0ZS1iZWdpbic7XG5cbiAgICBzdGF0aWMgRVZFTlRfU1RBVEVfRU5EID0gJ3N0YXRlLWVuZCc7XG5cbiAgICBzdGF0aWMgRVZFTlRfQUNUSU9OID0gJ2FjdGlvbic7XG5cbiAgICBzdGF0aWMgRVZFTlRfTU9ERUxfTE9BREVEID0gJ21vZGVsLWxvYWRlZCc7XG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/browser/model/Events.ts\n");

/***/ }),

/***/ "./src/browser/model/MovementState.ts":
/*!********************************************!*\
  !*** ./src/browser/model/MovementState.ts ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass MovementState {\n    constructor() {\n        this.distanceDelta = 0;\n        this.timeDeltaSeconds = 0;\n        this.facing = 0;\n    }\n}\nexports.MovementState = MovementState;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9tb2RlbC9Nb3ZlbWVudFN0YXRlLnRzPzk3MzYiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxNQUFhLGFBQWE7SUFBMUI7UUFDSSxrQkFBYSxHQUFXLENBQUMsQ0FBQztRQUMxQixxQkFBZ0IsR0FBVyxDQUFDLENBQUM7UUFDN0IsV0FBTSxHQUFXLENBQUMsQ0FBQztJQUN2QixDQUFDO0NBQUE7QUFKRCxzQ0FJQyIsImZpbGUiOiIuL3NyYy9icm93c2VyL21vZGVsL01vdmVtZW50U3RhdGUudHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY2xhc3MgTW92ZW1lbnRTdGF0ZSB7XG4gICAgZGlzdGFuY2VEZWx0YTogbnVtYmVyID0gMDtcbiAgICB0aW1lRGVsdGFTZWNvbmRzOiBudW1iZXIgPSAwO1xuICAgIGZhY2luZzogbnVtYmVyID0gMDtcbn0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/browser/model/MovementState.ts\n");

/***/ }),

/***/ "./src/browser/model/States.ts":
/*!*************************************!*\
  !*** ./src/browser/model/States.ts ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass States {\n}\nStates.STATE_MOVEMENT = 'movement';\nexports.States = States;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9tb2RlbC9TdGF0ZXMudHM/Mzc4OSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLE1BQWEsTUFBTTs7QUFDUixxQkFBYyxHQUFHLFVBQVUsQ0FBQztBQUR2Qyx3QkFFQyIsImZpbGUiOiIuL3NyYy9icm93c2VyL21vZGVsL1N0YXRlcy50cy5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjbGFzcyBTdGF0ZXMge1xuICAgIHN0YXRpYyBTVEFURV9NT1ZFTUVOVCA9ICdtb3ZlbWVudCc7XG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/browser/model/States.ts\n");

/***/ }),

/***/ "./src/browser/primitive/billboard.ts":
/*!********************************************!*\
  !*** ./src/browser/primitive/billboard.ts ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nconst aframe_1 = __webpack_require__(/*! aframe */ \"aframe\");\nconsole.log('registered a-billboard.');\nmodule.exports = aframe_1.registerPrimitive('a-billboard', aframe_1.utils.extendDeep({}, aframe_1.primitives.getMeshMixin(), {\n    defaultComponents: {\n        \"billboard\": {}\n    },\n    mappings: {\n        src: 'billboard.src',\n        width: 'billboard.width',\n        height: 'billboard.height'\n    }\n}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9wcmltaXRpdmUvYmlsbGJvYXJkLnRzPzdmMzMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLDZEQUE0RDtBQUU1RCxPQUFPLENBQUMsR0FBRyxDQUFDLHlCQUF5QixDQUFDLENBQUM7QUFDdkMsaUJBQVMsMEJBQWlCLENBQUMsYUFBYSxFQUFFLGNBQUssQ0FBQyxVQUFVLENBQUMsRUFBRSxFQUFFLG1CQUFVLENBQUMsWUFBWSxFQUFFLEVBQUU7SUFDdEYsaUJBQWlCLEVBQUU7UUFDZixXQUFXLEVBQUMsRUFBRTtLQUNqQjtJQUNELFFBQVEsRUFBRTtRQUNOLEdBQUcsRUFBRSxlQUFlO1FBQ3BCLEtBQUssRUFBRSxpQkFBaUI7UUFDeEIsTUFBTSxFQUFFLGtCQUFrQjtLQUM3QjtDQUNKLENBQUMsQ0FBQyxDQUFDIiwiZmlsZSI6Ii4vc3JjL2Jyb3dzZXIvcHJpbWl0aXZlL2JpbGxib2FyZC50cy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7cmVnaXN0ZXJQcmltaXRpdmUsIHByaW1pdGl2ZXMsIHV0aWxzfSBmcm9tIFwiYWZyYW1lXCI7XG5cbmNvbnNvbGUubG9nKCdyZWdpc3RlcmVkIGEtYmlsbGJvYXJkLicpO1xuZXhwb3J0ID0gcmVnaXN0ZXJQcmltaXRpdmUoJ2EtYmlsbGJvYXJkJywgdXRpbHMuZXh0ZW5kRGVlcCh7fSwgcHJpbWl0aXZlcy5nZXRNZXNoTWl4aW4oKSwge1xuICAgIGRlZmF1bHRDb21wb25lbnRzOiB7XG4gICAgICAgIFwiYmlsbGJvYXJkXCI6e31cbiAgICB9LFxuICAgIG1hcHBpbmdzOiB7XG4gICAgICAgIHNyYzogJ2JpbGxib2FyZC5zcmMnLFxuICAgICAgICB3aWR0aDogJ2JpbGxib2FyZC53aWR0aCcsXG4gICAgICAgIGhlaWdodDogJ2JpbGxib2FyZC5oZWlnaHQnXG4gICAgfVxufSkpOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/browser/primitive/billboard.ts\n");

/***/ }),

/***/ "./src/browser/primitive/picture.ts":
/*!******************************************!*\
  !*** ./src/browser/primitive/picture.ts ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nconst aframe_1 = __webpack_require__(/*! aframe */ \"aframe\");\nconsole.log('registered a-picture.');\nmodule.exports = aframe_1.registerPrimitive('a-picture', aframe_1.utils.extendDeep({}, aframe_1.primitives.getMeshMixin(), {\n    defaultComponents: {\n        \"picture\": {}\n    },\n    mappings: {\n        src: 'picture.src',\n        width: 'picture.width',\n        height: 'picture.height'\n    }\n}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9wcmltaXRpdmUvcGljdHVyZS50cz81ZDk1Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSw2REFBNEQ7QUFFNUQsT0FBTyxDQUFDLEdBQUcsQ0FBQyx1QkFBdUIsQ0FBQyxDQUFDO0FBQ3JDLGlCQUFTLDBCQUFpQixDQUFDLFdBQVcsRUFBRSxjQUFLLENBQUMsVUFBVSxDQUFDLEVBQUUsRUFBRSxtQkFBVSxDQUFDLFlBQVksRUFBRSxFQUFFO0lBQ3BGLGlCQUFpQixFQUFFO1FBQ2YsU0FBUyxFQUFDLEVBQUU7S0FDZjtJQUNELFFBQVEsRUFBRTtRQUNOLEdBQUcsRUFBRSxhQUFhO1FBQ2xCLEtBQUssRUFBRSxlQUFlO1FBQ3RCLE1BQU0sRUFBRSxnQkFBZ0I7S0FDM0I7Q0FDSixDQUFDLENBQUMsQ0FBQyIsImZpbGUiOiIuL3NyYy9icm93c2VyL3ByaW1pdGl2ZS9waWN0dXJlLnRzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtyZWdpc3RlclByaW1pdGl2ZSwgcHJpbWl0aXZlcywgdXRpbHN9IGZyb20gXCJhZnJhbWVcIjtcblxuY29uc29sZS5sb2coJ3JlZ2lzdGVyZWQgYS1waWN0dXJlLicpO1xuZXhwb3J0ID0gcmVnaXN0ZXJQcmltaXRpdmUoJ2EtcGljdHVyZScsIHV0aWxzLmV4dGVuZERlZXAoe30sIHByaW1pdGl2ZXMuZ2V0TWVzaE1peGluKCksIHtcbiAgICBkZWZhdWx0Q29tcG9uZW50czoge1xuICAgICAgICBcInBpY3R1cmVcIjp7fVxuICAgIH0sXG4gICAgbWFwcGluZ3M6IHtcbiAgICAgICAgc3JjOiAncGljdHVyZS5zcmMnLFxuICAgICAgICB3aWR0aDogJ3BpY3R1cmUud2lkdGgnLFxuICAgICAgICBoZWlnaHQ6ICdwaWN0dXJlLmhlaWdodCdcbiAgICB9XG59KSk7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/browser/primitive/picture.ts\n");

/***/ }),

/***/ "./src/browser/system/interface/InterfaceController.ts":
/*!*************************************************************!*\
  !*** ./src/browser/system/interface/InterfaceController.ts ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst aframe_typescript_boilerplate_1 = __webpack_require__(/*! aframe-typescript-boilerplate */ \"./node_modules/aframe-typescript-boilerplate/built/index.js\");\nconst CodeRealityComponentController_1 = __webpack_require__(/*! ../../component/CodeRealityComponentController */ \"./src/browser/component/CodeRealityComponentController.ts\");\nclass InterfaceController extends CodeRealityComponentController_1.CodeRealityComponentController {\n    constructor(component, entity, data) {\n        super(component, entity, data);\n        //console.log(this.componentName + \" init: \" + JSON.stringify(this.data));\n        this.interface.setInterfaceController(this);\n    }\n    init() {\n    }\n    update(data, oldData) {\n        //console.log(this.componentName + \" update: \" + JSON.stringify(this.data));\n    }\n    remove() {\n        //console.log(this.componentName + \" remove\");\n    }\n    pause() {\n        //console.log(this.componentName + \" pause\");\n    }\n    play() {\n        //console.log(this.componentName + \" play\");\n    }\n    tick(time, timeDelta) {\n    }\n}\nInterfaceController.DEFINITION = new aframe_typescript_boilerplate_1.ComponentControllerDefinition(\"interface\", {}, false, false, (component, entity, data) => new InterfaceController(component, entity, data));\nexports.InterfaceController = InterfaceController;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9zeXN0ZW0vaW50ZXJmYWNlL0ludGVyZmFjZUNvbnRyb2xsZXIudHM/ZmViNiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUNBLGdLQUF5RztBQUN6RyxnTEFBOEY7QUFFOUYsTUFBYSxtQkFBb0IsU0FBUSwrREFBOEI7SUFJbkUsWUFBWSxTQUFvQixFQUFFLE1BQWMsRUFBRSxJQUFTO1FBQ3ZELEtBQUssQ0FBQyxTQUFTLEVBQUUsTUFBTSxFQUFFLElBQUksQ0FBQyxDQUFDO1FBQy9CLDBFQUEwRTtRQUMxRSxJQUFJLENBQUMsU0FBUyxDQUFDLHNCQUFzQixDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ2hELENBQUM7SUFFRCxJQUFJO0lBQ0osQ0FBQztJQUVELE1BQU0sQ0FBQyxJQUFTLEVBQUUsT0FBWTtRQUMxQiw0RUFBNEU7SUFDaEYsQ0FBQztJQUVELE1BQU07UUFDRiw4Q0FBOEM7SUFDbEQsQ0FBQztJQUVELEtBQUs7UUFDRCw2Q0FBNkM7SUFDakQsQ0FBQztJQUVELElBQUk7UUFDQSw0Q0FBNEM7SUFDaEQsQ0FBQztJQUVELElBQUksQ0FBQyxJQUFZLEVBQUUsU0FBaUI7SUFDcEMsQ0FBQzs7QUE1QmEsOEJBQVUsR0FBRyxJQUFJLDZEQUE2QixDQUFDLFdBQVcsRUFBRSxFQUFFLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxDQUFDLFNBQW9CLEVBQUUsTUFBYyxFQUFFLElBQVMsRUFBRSxFQUFFLENBQUMsSUFBSSxtQkFBbUIsQ0FBQyxTQUFTLEVBQUUsTUFBTSxFQUFFLElBQUksQ0FBQyxDQUFDLENBQUM7QUFGdk0sa0RBZ0NDIiwiZmlsZSI6Ii4vc3JjL2Jyb3dzZXIvc3lzdGVtL2ludGVyZmFjZS9JbnRlcmZhY2VDb250cm9sbGVyLnRzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDb21wb25lbnQsIEVudGl0eX0gZnJvbSBcImFmcmFtZVwiO1xuaW1wb3J0IHtBYnN0cmFjdENvbXBvbmVudENvbnRyb2xsZXIsIENvbXBvbmVudENvbnRyb2xsZXJEZWZpbml0aW9ufSBmcm9tIFwiYWZyYW1lLXR5cGVzY3JpcHQtYm9pbGVycGxhdGVcIjtcbmltcG9ydCB7Q29kZVJlYWxpdHlDb21wb25lbnRDb250cm9sbGVyfSBmcm9tIFwiLi4vLi4vY29tcG9uZW50L0NvZGVSZWFsaXR5Q29tcG9uZW50Q29udHJvbGxlclwiO1xuXG5leHBvcnQgY2xhc3MgSW50ZXJmYWNlQ29udHJvbGxlciBleHRlbmRzIENvZGVSZWFsaXR5Q29tcG9uZW50Q29udHJvbGxlciB7XG5cbiAgICBwdWJsaWMgc3RhdGljIERFRklOSVRJT04gPSBuZXcgQ29tcG9uZW50Q29udHJvbGxlckRlZmluaXRpb24oXCJpbnRlcmZhY2VcIiwge30sIGZhbHNlLCBmYWxzZSwgKGNvbXBvbmVudDogQ29tcG9uZW50LCBlbnRpdHk6IEVudGl0eSwgZGF0YTogYW55KSA9PiBuZXcgSW50ZXJmYWNlQ29udHJvbGxlcihjb21wb25lbnQsIGVudGl0eSwgZGF0YSkpO1xuXG4gICAgY29uc3RydWN0b3IoY29tcG9uZW50OiBDb21wb25lbnQsIGVudGl0eTogRW50aXR5LCBkYXRhOiBhbnkpIHtcbiAgICAgICAgc3VwZXIoY29tcG9uZW50LCBlbnRpdHksIGRhdGEpO1xuICAgICAgICAvL2NvbnNvbGUubG9nKHRoaXMuY29tcG9uZW50TmFtZSArIFwiIGluaXQ6IFwiICsgSlNPTi5zdHJpbmdpZnkodGhpcy5kYXRhKSk7XG4gICAgICAgIHRoaXMuaW50ZXJmYWNlLnNldEludGVyZmFjZUNvbnRyb2xsZXIodGhpcyk7XG4gICAgfVxuXG4gICAgaW5pdCgpOiB2b2lkIHtcbiAgICB9XG5cbiAgICB1cGRhdGUoZGF0YTogYW55LCBvbGREYXRhOiBhbnkpOiB2b2lkIHtcbiAgICAgICAgLy9jb25zb2xlLmxvZyh0aGlzLmNvbXBvbmVudE5hbWUgKyBcIiB1cGRhdGU6IFwiICsgSlNPTi5zdHJpbmdpZnkodGhpcy5kYXRhKSk7XG4gICAgfVxuXG4gICAgcmVtb3ZlKCk6IHZvaWQge1xuICAgICAgICAvL2NvbnNvbGUubG9nKHRoaXMuY29tcG9uZW50TmFtZSArIFwiIHJlbW92ZVwiKTtcbiAgICB9XG5cbiAgICBwYXVzZSgpOiB2b2lkIHtcbiAgICAgICAgLy9jb25zb2xlLmxvZyh0aGlzLmNvbXBvbmVudE5hbWUgKyBcIiBwYXVzZVwiKTtcbiAgICB9XG5cbiAgICBwbGF5KCk6IHZvaWQge1xuICAgICAgICAvL2NvbnNvbGUubG9nKHRoaXMuY29tcG9uZW50TmFtZSArIFwiIHBsYXlcIik7XG4gICAgfVxuXG4gICAgdGljayh0aW1lOiBudW1iZXIsIHRpbWVEZWx0YTogbnVtYmVyKTogdm9pZCB7XG4gICAgfVxuXG59XG5cblxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/browser/system/interface/InterfaceController.ts\n");

/***/ }),

/***/ "./src/browser/system/interface/InterfaceSystemController.ts":
/*!*******************************************************************!*\
  !*** ./src/browser/system/interface/InterfaceSystemController.ts ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst DeviceSlot_1 = __webpack_require__(/*! ./model/DeviceSlot */ \"./src/browser/system/interface/model/DeviceSlot.ts\");\nconst Slot_1 = __webpack_require__(/*! ./model/Slot */ \"./src/browser/system/interface/model/Slot.ts\");\nconst three_1 = __webpack_require__(/*! three */ \"three\");\nconst aframe_typescript_boilerplate_1 = __webpack_require__(/*! aframe-typescript-boilerplate */ \"./node_modules/aframe-typescript-boilerplate/built/index.js\");\nclass InterfaceSystemController extends aframe_typescript_boilerplate_1.AbstractSystemController {\n    constructor(system, scene, data) {\n        super(system, scene, data);\n        this.selfScale = 1;\n        this.collidables = new Array();\n        this.devices = new Map();\n        this.tools = new Map();\n        this.toolNames = new Array();\n        this.slots = new Map();\n        this.slotListeners = new Map();\n        this.cameraPosition = new three_1.Vector3(0, 0, 0);\n        this.interfaceEntity = this.scene.querySelector('[interface]');\n        if (this.interfaceEntity) {\n            console.info(\"interface entity set.\");\n        }\n        else {\n            throw new Error(\"interface entity not found.\");\n        }\n        this.cameraEntity = this.interfaceEntity.querySelector('[camera]');\n        if (this.cameraEntity) {\n            console.info(\"interface camera entity set.\");\n        }\n        else {\n            throw new Error(\"interface camera entity not found.\");\n        }\n    }\n    init() {\n    }\n    pause() {\n    }\n    play() {\n    }\n    tick(time, timeDelta) {\n        this.cameraPosition.copy(this.cameraEntity.object3D.position);\n        this.cameraPosition = this.cameraEntity.object3D.parent.localToWorld(this.cameraPosition);\n    }\n    getCollidables() {\n        return this.collidables;\n    }\n    addCollidable(object) {\n        this.collidables.push(object);\n    }\n    removeCollidable(object) {\n        const index = this.collidables.indexOf(object, 0);\n        if (index > -1) {\n            this.collidables.splice(index, 1);\n        }\n    }\n    setInterfaceController(interfaceController) {\n        this.interfaceController = interfaceController;\n    }\n    setDevice(slot, device) {\n        if (this.devices.has(slot)) {\n            console.warn(\"interface already has controls at: \" + DeviceSlot_1.DeviceSlot[slot]);\n        }\n        else {\n            this.devices.set(slot, device);\n            //console.log(\"interface controls \" + device.componentName + \" set at: \" + DeviceSlot[slot]);\n        }\n    }\n    getDevice(slot) {\n        return this.devices.get(slot);\n    }\n    registerTool(tool) {\n        if (!this.tools.has(tool.componentName)) {\n            //console.log(\"interface tool '\" + tool.componentName + \"' registered.\");\n            this.tools.set(tool.componentName, tool);\n            this.toolNames.push(tool.componentName);\n        }\n    }\n    registerSlotListener(slot, slotListener) {\n        if (!this.slotListeners.has(slot)) {\n            this.slotListeners.set(slot, new Array());\n        }\n        this.slotListeners.get(slot).push(slotListener);\n        // Notify slot listener of slotted tool if tool already slotted.\n        const slottedTool = this.getToolAtSlot(Slot_1.Slot.PRIMARY);\n        if (slottedTool) {\n            slotListener.onToolSlotted(Slot_1.Slot.PRIMARY, slottedTool.componentName);\n        }\n    }\n    getTool(name) {\n        if (this.tools.has(name)) {\n            return this.tools.get(name);\n        }\n        else {\n            throw new Error(\"Tool '\" + name + \"' not registered.\");\n        }\n    }\n    slotTool(slot, tool) {\n        this.slots.set(slot, tool);\n        //console.log(\"interface tool \" + tool.componentName + \" set at: \" + Slot[slot]);\n        if (this.slotListeners.has(slot)) {\n            this.slotListeners.get(slot).forEach((slotListener) => {\n                slotListener.onToolSlotted(slot, tool.componentName);\n            });\n        }\n    }\n    getToolAtSlot(slot) {\n        return this.slots.get(slot);\n    }\n    buttonUp(device, slot, button) {\n        if (this.slots.has(slot)) {\n            this.slots.get(slot).buttonUp(device, slot, button);\n        }\n    }\n    buttonDown(device, slot, button) {\n        if (this.slots.has(slot)) {\n            this.slots.get(slot).buttonDown(device, slot, button);\n        }\n    }\n    stickTwist(device, slot, stick, x, y) {\n        if (this.slots.has(slot)) {\n            this.slots.get(slot).stickTwist(device, slot, stick, x, y);\n        }\n    }\n    slotNextTool(slot) {\n        if (this.slots.has(slot)) {\n            const tool = this.slots.get(slot);\n            const toolIndex = this.toolNames.indexOf(tool.componentName);\n            const nextToolIndex = (toolIndex == this.toolNames.length - 1) ? 0 : toolIndex + 1;\n            //console.log(\"tool index: \" + toolIndex + \" next tool index: \" + nextToolIndex + \" lenght: \" + this.toolNames.length);\n            //console.log(this.toolNames);\n            const nextToolName = this.toolNames[nextToolIndex];\n            const nextTool = this.getTool(nextToolName);\n            this.slotTool(slot, nextTool);\n        }\n    }\n    slotPreviousTool(slot) {\n        if (this.slots.has(slot)) {\n            const tool = this.slots.get(slot);\n            const toolIndex = this.toolNames.indexOf(tool.componentName);\n            const previousToolIndex = (toolIndex == 0) ? this.toolNames.length - 1 : toolIndex - 1;\n            const previousToolName = this.toolNames[previousToolIndex];\n            const previousTool = this.getTool(previousToolName);\n            this.slotTool(slot, previousTool);\n        }\n    }\n    setSelfScale(selfScale) {\n        const scale = this.interfaceEntity.getAttribute(\"scale\");\n        this.selfScale = selfScale;\n        scale.x = this.selfScale;\n        scale.y = this.selfScale;\n        scale.z = this.selfScale;\n        const spaceSystem = this.getSystemController(\"space\");\n        spaceSystem.sendAvatarDescriptionUpdate();\n    }\n    getSelfScale() {\n        return this.selfScale;\n    }\n}\nInterfaceSystemController.DEFINITION = new aframe_typescript_boilerplate_1.SystemControllerDefinition(\"interface\", {}, (system, scene, data) => new InterfaceSystemController(system, scene, data));\nexports.InterfaceSystemController = InterfaceSystemController;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/browser/system/interface/InterfaceSystemController.ts\n");

/***/ }),

/***/ "./src/browser/system/interface/device/KeyboardAndMouseDevice.ts":
/*!***********************************************************************!*\
  !*** ./src/browser/system/interface/device/KeyboardAndMouseDevice.ts ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst DeviceSlot_1 = __webpack_require__(/*! ../model/DeviceSlot */ \"./src/browser/system/interface/model/DeviceSlot.ts\");\nconst Slot_1 = __webpack_require__(/*! ../model/Slot */ \"./src/browser/system/interface/model/Slot.ts\");\nconst Button_1 = __webpack_require__(/*! ../model/Button */ \"./src/browser/system/interface/model/Button.ts\");\nconst xml_js_1 = __webpack_require__(/*! xml-js */ \"./node_modules/xml-js/lib/index.js\");\nconst aframe_typescript_boilerplate_1 = __webpack_require__(/*! aframe-typescript-boilerplate */ \"./node_modules/aframe-typescript-boilerplate/built/index.js\");\nconst aframe_typescript_boilerplate_2 = __webpack_require__(/*! aframe-typescript-boilerplate */ \"./node_modules/aframe-typescript-boilerplate/built/index.js\");\nconst CodeRealityComponentController_1 = __webpack_require__(/*! ../../../component/CodeRealityComponentController */ \"./src/browser/component/CodeRealityComponentController.ts\");\nclass KeyboardAndMouseDevice extends CodeRealityComponentController_1.CodeRealityComponentController {\n    constructor(component, entity, data) {\n        super(component, entity, data);\n        this.movementForwardKey = 'w';\n        this.movementBackwardKey = 's';\n        this.movementLeftKey = 'a';\n        this.movementRightKey = 'd';\n        this.jumpKey = ' ';\n        this.rightKey = 'ArrowRight';\n        this.leftKey = 'ArrowLeft';\n        this.upKey = 'ArrowUp';\n        this.downKey = 'ArrowDown';\n        this.pointerLock = false;\n        this.lastWheelYTimeMillis = 0;\n        this.interface.setDevice(DeviceSlot_1.DeviceSlot.KEYBOARD_AND_MOUSE, this);\n    }\n    init() {\n        //console.log(this.componentName + \" init\");\n        aframe_typescript_boilerplate_2.addDocumentEventListener(\"pointerlockchange\", (detail) => {\n            this.pointerLock = document.pointerLockElement != null;\n        });\n        window.addEventListener('keydown', (e) => {\n            this.onKeyDown(e.key);\n        });\n        window.addEventListener('keyup', (e) => {\n            this.onKeyUp(e.key);\n        });\n        this.entity.sceneEl.addEventListener('mousedown', (e) => {\n            if (!this.pointerLock) {\n                return;\n            }\n            if (e.button == 0) {\n                this.interface.buttonDown(this, Slot_1.Slot.PRIMARY, Button_1.Button.TRIGGER);\n            }\n            if (e.button == 1) {\n                this.interface.buttonDown(this, Slot_1.Slot.PRIMARY, Button_1.Button.MENU);\n            }\n            if (e.button == 2) {\n                this.interface.buttonDown(this, Slot_1.Slot.PRIMARY, Button_1.Button.GRIP);\n            }\n        });\n        this.entity.sceneEl.addEventListener('mouseup', (e) => {\n            if (!this.pointerLock) {\n                return;\n            }\n            if (e.button == 0) {\n                this.interface.buttonUp(this, Slot_1.Slot.PRIMARY, Button_1.Button.TRIGGER);\n            }\n            if (e.button == 1) {\n                this.interface.buttonUp(this, Slot_1.Slot.PRIMARY, Button_1.Button.MENU);\n            }\n            if (e.button == 2) {\n                this.interface.buttonUp(this, Slot_1.Slot.PRIMARY, Button_1.Button.GRIP);\n            }\n        });\n        window.addEventListener(\"paste\", (event) => {\n            if (this.pointerLock) {\n                for (const item of event.clipboardData.items) {\n                    const itemTyped = item;\n                    if (itemTyped.kind == \"string\") {\n                        itemTyped.getAsString((pasteString) => {\n                            try {\n                                const pasteXml = xml_js_1.js2xml(xml_js_1.xml2js(pasteString));\n                                if (!pasteXml.startsWith(\"<html>\")) {\n                                    console.log(pasteXml);\n                                    const addObjectTool = this.interface.getTool(\"add-object-tool\");\n                                    addObjectTool.addEntityFromXml(pasteString);\n                                }\n                            }\n                            catch (error) {\n                                console.error(\"Error copy paste adding an object.\", error);\n                            }\n                        });\n                        return;\n                    }\n                }\n            }\n            // do something with url here\n        });\n        /*(this.entity.sceneEl!! as any).addEventListener('click', (e: MouseEvent) => {\n            console.log('mouse click ' + e.button);\n        });\n\n        */\n        /*(this.entity.sceneEl!! as any).addEventListener('wheel', (e: WheelEvent) => {\n            console.log('wheel: x=' + e.deltaX + ', y=' + e.deltaY + ', z=' + e.deltaZ);\n\n            if (new Date().getTime() - this.lastWheelYTimeMillis > 1000) {\n\n                if (e.deltaY != 0) {\n                    if (e.deltaY > 0) {\n                        this.interface.buttonDown(this, Slot.PRIMARY, Button.UP);\n                        this.interface.buttonUp(this, Slot.PRIMARY, Button.UP);\n                    } else {\n                        this.interface.buttonDown(this, Slot.PRIMARY, Button.DOWN);\n                        this.interface.buttonUp(this, Slot.PRIMARY, Button.DOWN);\n                    }\n\n                    this.lastWheelYTimeMillis = new Date().getTime();\n                }\n            }\n        });*/\n    }\n    update(data, oldData) {\n    }\n    remove() {\n    }\n    pause() {\n    }\n    play() {\n    }\n    tick(time, timeDelta) {\n    }\n    onKeyDown(key) {\n        if (key == this.movementForwardKey) {\n            this.interface.buttonDown(this, Slot_1.Slot.WALK, Button_1.Button.UP);\n        }\n        if (key == this.movementBackwardKey) {\n            this.interface.buttonDown(this, Slot_1.Slot.WALK, Button_1.Button.DOWN);\n        }\n        if (key == this.movementLeftKey) {\n            this.interface.buttonDown(this, Slot_1.Slot.WALK, Button_1.Button.LEFT);\n        }\n        if (key == this.movementRightKey) {\n            this.interface.buttonDown(this, Slot_1.Slot.WALK, Button_1.Button.RIGHT);\n        }\n        if (key == this.jumpKey) {\n            this.interface.buttonDown(this, Slot_1.Slot.WALK, Button_1.Button.TRIGGER);\n        }\n        if (key == this.upKey || key == 'r') {\n            this.interface.buttonDown(this, Slot_1.Slot.PRIMARY, Button_1.Button.UP);\n        }\n        if (key == this.downKey || key == 'f') {\n            this.interface.buttonDown(this, Slot_1.Slot.PRIMARY, Button_1.Button.DOWN);\n        }\n        if (key == this.rightKey || key == 'e') {\n            this.interface.buttonDown(this, Slot_1.Slot.PRIMARY_SELECTOR, Button_1.Button.RIGHT);\n        }\n        if (key == this.leftKey || key == 'q') {\n            this.interface.buttonDown(this, Slot_1.Slot.PRIMARY_SELECTOR, Button_1.Button.LEFT);\n        }\n    }\n    onKeyUp(key) {\n        if (key == this.movementForwardKey) {\n            this.interface.buttonUp(this, Slot_1.Slot.WALK, Button_1.Button.UP);\n        }\n        if (key == this.movementBackwardKey) {\n            this.interface.buttonUp(this, Slot_1.Slot.WALK, Button_1.Button.DOWN);\n        }\n        if (key == this.movementLeftKey) {\n            this.interface.buttonUp(this, Slot_1.Slot.WALK, Button_1.Button.LEFT);\n        }\n        if (key == this.movementRightKey) {\n            this.interface.buttonUp(this, Slot_1.Slot.WALK, Button_1.Button.RIGHT);\n        }\n        if (key == this.jumpKey) {\n            this.interface.buttonUp(this, Slot_1.Slot.WALK, Button_1.Button.TRIGGER);\n        }\n        if (key == this.upKey || key == 'r') {\n            this.interface.buttonUp(this, Slot_1.Slot.PRIMARY, Button_1.Button.UP);\n        }\n        if (key == this.downKey || key == 'f') {\n            this.interface.buttonUp(this, Slot_1.Slot.PRIMARY, Button_1.Button.DOWN);\n        }\n        if (key == this.rightKey || key == 'e') {\n            this.interface.buttonUp(this, Slot_1.Slot.PRIMARY_SELECTOR, Button_1.Button.RIGHT);\n        }\n        if (key == this.leftKey || key == 'q') {\n            this.interface.buttonUp(this, Slot_1.Slot.PRIMARY_SELECTOR, Button_1.Button.LEFT);\n        }\n    }\n}\nKeyboardAndMouseDevice.DEFINITION = new aframe_typescript_boilerplate_1.ComponentControllerDefinition(\"keyboard-and-mouse\", {}, false, false, (component, entity, data) => new KeyboardAndMouseDevice(component, entity, data));\nexports.KeyboardAndMouseDevice = KeyboardAndMouseDevice;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/browser/system/interface/device/KeyboardAndMouseDevice.ts\n");

/***/ }),

/***/ "./src/browser/system/interface/device/PrimaryControllerDevice.ts":
/*!************************************************************************!*\
  !*** ./src/browser/system/interface/device/PrimaryControllerDevice.ts ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst DeviceSlot_1 = __webpack_require__(/*! ../model/DeviceSlot */ \"./src/browser/system/interface/model/DeviceSlot.ts\");\nconst Slot_1 = __webpack_require__(/*! ../model/Slot */ \"./src/browser/system/interface/model/Slot.ts\");\nconst Button_1 = __webpack_require__(/*! ../model/Button */ \"./src/browser/system/interface/model/Button.ts\");\nconst aframe_typescript_boilerplate_1 = __webpack_require__(/*! aframe-typescript-boilerplate */ \"./node_modules/aframe-typescript-boilerplate/built/index.js\");\nconst CodeRealityComponentController_1 = __webpack_require__(/*! ../../../component/CodeRealityComponentController */ \"./src/browser/component/CodeRealityComponentController.ts\");\nclass PrimaryControllerDevice extends CodeRealityComponentController_1.CodeRealityComponentController {\n    constructor(component, entity, data) {\n        super(component, entity, data);\n        this.controllerName = \"\";\n    }\n    init() {\n        //console.log(this.componentName + \" init\");\n        this.interface.setDevice(DeviceSlot_1.DeviceSlot.PRIMARY_HAND, this);\n        this.addEventListener(\"controllerconnected\", (detail) => {\n            this.controllerName = detail.name;\n            console.log(\"controllerconnected \" + this.controllerName);\n        });\n        this.addEventListener(\"controllerdisconnected\", (detail) => {\n            console.log(\"controllerdisconnected \" + this.controllerName);\n        });\n        this.addEventListener(\"triggerup\", (detail) => {\n            this.interface.buttonUp(this, Slot_1.Slot.PRIMARY, Button_1.Button.TRIGGER);\n            console.log(\"triggerup \" + detail);\n        });\n        this.addEventListener(\"triggerdown\", (detail) => {\n            this.interface.buttonDown(this, Slot_1.Slot.PRIMARY, Button_1.Button.TRIGGER);\n            console.log(\"triggerdown \" + detail);\n        });\n        this.addEventListener(\"gripup\", (detail) => {\n            this.interface.buttonUp(this, Slot_1.Slot.PRIMARY, Button_1.Button.GRIP);\n            console.log(\"gripup \" + detail);\n        });\n        this.addEventListener(\"gripdown\", (detail) => {\n            this.interface.buttonDown(this, Slot_1.Slot.PRIMARY, Button_1.Button.GRIP);\n            console.log(\"gripdown \" + detail);\n        });\n        this.addEventListener(\"menuup\", (detail) => {\n            this.interface.buttonUp(this, Slot_1.Slot.PRIMARY, Button_1.Button.MENU);\n            console.log(\"menuup \" + detail);\n        });\n        this.addEventListener(\"menudown\", (detail) => {\n            this.interface.buttonDown(this, Slot_1.Slot.PRIMARY, Button_1.Button.MENU);\n            console.log(\"menudown \" + detail);\n        });\n        this.addEventListener(\"trackpaddown\", (detail) => {\n            console.log(\"trackpaddown \" + detail);\n            if (this.axis) {\n                const button = this.getStickButton(this.axis[0], this.axis[1]);\n                if (button == Button_1.Button.UP || button == Button_1.Button.DOWN) {\n                    this.interface.buttonDown(this, Slot_1.Slot.PRIMARY, button);\n                }\n                else {\n                    this.interface.buttonDown(this, Slot_1.Slot.PRIMARY_SELECTOR, button);\n                }\n                this.lastStickButton = button;\n                console.log(\"button down: \" + Button_1.Button[button]);\n            }\n        });\n        this.addEventListener(\"trackpadup\", (detail) => {\n            console.log(\"trackpadup \" + detail);\n            if (this.axis) {\n                if (this.lastStickButton) {\n                    const button = this.lastStickButton;\n                    if (button == Button_1.Button.UP || button == Button_1.Button.DOWN) {\n                        this.interface.buttonUp(this, Slot_1.Slot.PRIMARY, button);\n                    }\n                    else {\n                        this.interface.buttonUp(this, Slot_1.Slot.PRIMARY_SELECTOR, button);\n                    }\n                    console.log(\"button up: \" + Button_1.Button[button]);\n                }\n            }\n        });\n        this.addEventListener(\"axismove\", (detail) => {\n            const axis = detail.axis;\n            this.axis = Object.assign([], axis);\n            if (this.controllerName === \"oculus-go-controls\") {\n                this.axis[1] = -1 * this.axis[1];\n            }\n            //console.log(this.toolSlot + \" axismove \" + axis);\n            //this.interface.stickTwist(this, Slot.PRIMARY, Stick.PRIMARY, this.axis[1], this.axis[0]);\n        });\n    }\n    getStickButton(x, y) {\n        var angle = Math.atan2(y, x) * 180 / Math.PI;\n        if (angle >= -45 && angle < 45) {\n            return Button_1.Button.RIGHT;\n        }\n        else if (angle >= 45 && angle < 135) {\n            return Button_1.Button.UP;\n        }\n        else if (angle >= 135 || angle <= -135) {\n            return Button_1.Button.LEFT;\n        }\n        else {\n            return Button_1.Button.DOWN;\n        }\n    }\n    update(data, oldData) {\n    }\n    remove() {\n    }\n    pause() {\n    }\n    play() {\n    }\n    tick(time, timeDelta) {\n    }\n}\nPrimaryControllerDevice.DEFINITION = new aframe_typescript_boilerplate_1.ComponentControllerDefinition(\"primary-controller\", {}, false, false, (component, entity, data) => new PrimaryControllerDevice(component, entity, data));\nexports.PrimaryControllerDevice = PrimaryControllerDevice;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9zeXN0ZW0vaW50ZXJmYWNlL2RldmljZS9QcmltYXJ5Q29udHJvbGxlckRldmljZS50cz85NjljIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQ0EsMEhBQStDO0FBRS9DLHdHQUFtQztBQUNuQyw4R0FBdUM7QUFDdkMsZ0tBQTRFO0FBQzVFLG1MQUFpRztBQUVqRyxNQUFhLHVCQUF3QixTQUFRLCtEQUE4QjtJQVF2RSxZQUFZLFNBQW9CLEVBQUUsTUFBYyxFQUFFLElBQVM7UUFDdkQsS0FBSyxDQUFDLFNBQVMsRUFBRSxNQUFNLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFMM0IsbUJBQWMsR0FBVyxFQUFFLENBQUM7SUFNcEMsQ0FBQztJQUVELElBQUk7UUFDQSw0Q0FBNEM7UUFFNUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxTQUFTLENBQUMsdUJBQVUsQ0FBQyxZQUFZLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFFeEQsSUFBSSxDQUFDLGdCQUFnQixDQUFDLHFCQUFxQixFQUFFLENBQUMsTUFBVyxFQUFFLEVBQUU7WUFDekQsSUFBSSxDQUFDLGNBQWMsR0FBRyxNQUFNLENBQUMsSUFBSSxDQUFDO1lBQ2xDLE9BQU8sQ0FBQyxHQUFHLENBQUMsc0JBQXNCLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FBQyxDQUFDO1FBQzlELENBQUMsQ0FBQyxDQUFDO1FBRUgsSUFBSSxDQUFDLGdCQUFnQixDQUFDLHdCQUF3QixFQUFFLENBQUMsTUFBVyxFQUFFLEVBQUU7WUFDNUQsT0FBTyxDQUFDLEdBQUcsQ0FBQyx5QkFBeUIsR0FBRyxJQUFJLENBQUMsY0FBYyxDQUFDLENBQUM7UUFDakUsQ0FBQyxDQUFDLENBQUM7UUFHSCxJQUFJLENBQUMsZ0JBQWdCLENBQUMsV0FBVyxFQUFFLENBQUMsTUFBVyxFQUFFLEVBQUU7WUFDL0MsSUFBSSxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQUMsSUFBSSxFQUFFLFdBQUksQ0FBQyxPQUFPLEVBQUUsZUFBTSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1lBQzVELE9BQU8sQ0FBQyxHQUFHLENBQUMsWUFBWSxHQUFHLE1BQU0sQ0FBQyxDQUFDO1FBQ3ZDLENBQUMsQ0FBQyxDQUFDO1FBQ0gsSUFBSSxDQUFDLGdCQUFnQixDQUFDLGFBQWEsRUFBRSxDQUFDLE1BQVcsRUFBRSxFQUFFO1lBQ2pELElBQUksQ0FBQyxTQUFTLENBQUMsVUFBVSxDQUFDLElBQUksRUFBRSxXQUFJLENBQUMsT0FBTyxFQUFFLGVBQU0sQ0FBQyxPQUFPLENBQUMsQ0FBQztZQUM5RCxPQUFPLENBQUMsR0FBRyxDQUFDLGNBQWMsR0FBRyxNQUFNLENBQUMsQ0FBQztRQUN6QyxDQUFDLENBQUMsQ0FBQztRQUVILElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxRQUFRLEVBQUUsQ0FBQyxNQUFXLEVBQUUsRUFBRTtZQUM1QyxJQUFJLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQyxJQUFJLEVBQUUsV0FBSSxDQUFDLE9BQU8sRUFBRSxlQUFNLENBQUMsSUFBSSxDQUFDLENBQUM7WUFDekQsT0FBTyxDQUFDLEdBQUcsQ0FBQyxTQUFTLEdBQUcsTUFBTSxDQUFDLENBQUM7UUFDcEMsQ0FBQyxDQUFDLENBQUM7UUFDSCxJQUFJLENBQUMsZ0JBQWdCLENBQUMsVUFBVSxFQUFFLENBQUMsTUFBVyxFQUFFLEVBQUU7WUFDOUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxVQUFVLENBQUMsSUFBSSxFQUFFLFdBQUksQ0FBQyxPQUFPLEVBQUUsZUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDO1lBQzNELE9BQU8sQ0FBQyxHQUFHLENBQUMsV0FBVyxHQUFHLE1BQU0sQ0FBQyxDQUFDO1FBQ3RDLENBQUMsQ0FBQyxDQUFDO1FBRUgsSUFBSSxDQUFDLGdCQUFnQixDQUFDLFFBQVEsRUFBRSxDQUFDLE1BQVcsRUFBRSxFQUFFO1lBQzVDLElBQUksQ0FBQyxTQUFTLENBQUMsUUFBUSxDQUFDLElBQUksRUFBRSxXQUFJLENBQUMsT0FBTyxFQUFFLGVBQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUN6RCxPQUFPLENBQUMsR0FBRyxDQUFDLFNBQVMsR0FBRyxNQUFNLENBQUMsQ0FBQztRQUNwQyxDQUFDLENBQUMsQ0FBQztRQUNILElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxVQUFVLEVBQUUsQ0FBQyxNQUFXLEVBQUUsRUFBRTtZQUM5QyxJQUFJLENBQUMsU0FBUyxDQUFDLFVBQVUsQ0FBQyxJQUFJLEVBQUUsV0FBSSxDQUFDLE9BQU8sRUFBRSxlQUFNLENBQUMsSUFBSSxDQUFDLENBQUM7WUFDM0QsT0FBTyxDQUFDLEdBQUcsQ0FBQyxXQUFXLEdBQUcsTUFBTSxDQUFDLENBQUM7UUFDdEMsQ0FBQyxDQUFDLENBQUM7UUFHSCxJQUFJLENBQUMsZ0JBQWdCLENBQUMsY0FBYyxFQUFFLENBQUMsTUFBVyxFQUFFLEVBQUU7WUFDbEQsT0FBTyxDQUFDLEdBQUcsQ0FBQyxlQUFlLEdBQUcsTUFBTSxDQUFDLENBQUM7WUFDdEMsSUFBSSxJQUFJLENBQUMsSUFBSSxFQUFFO2dCQUNYLE1BQU0sTUFBTSxHQUFHLElBQUksQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7Z0JBQy9ELElBQUksTUFBTSxJQUFJLGVBQU0sQ0FBQyxFQUFFLElBQUksTUFBTSxJQUFJLGVBQU0sQ0FBQyxJQUFJLEVBQUU7b0JBQzlDLElBQUksQ0FBQyxTQUFTLENBQUMsVUFBVSxDQUFDLElBQUksRUFBRSxXQUFJLENBQUMsT0FBTyxFQUFFLE1BQU0sQ0FBQyxDQUFDO2lCQUN6RDtxQkFBTTtvQkFDSCxJQUFJLENBQUMsU0FBUyxDQUFDLFVBQVUsQ0FBQyxJQUFJLEVBQUUsV0FBSSxDQUFDLGdCQUFnQixFQUFFLE1BQU0sQ0FBQyxDQUFDO2lCQUNsRTtnQkFDRCxJQUFJLENBQUMsZUFBZSxHQUFHLE1BQU0sQ0FBQztnQkFDOUIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxlQUFlLEdBQUUsZUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7YUFDaEQ7UUFDTCxDQUFDLENBQUMsQ0FBQztRQUNILElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxZQUFZLEVBQUUsQ0FBQyxNQUFXLEVBQUUsRUFBRTtZQUNoRCxPQUFPLENBQUMsR0FBRyxDQUFDLGFBQWEsR0FBRyxNQUFNLENBQUMsQ0FBQztZQUNwQyxJQUFJLElBQUksQ0FBQyxJQUFJLEVBQUU7Z0JBQ1gsSUFBSSxJQUFJLENBQUMsZUFBZSxFQUFFO29CQUN0QixNQUFNLE1BQU0sR0FBRyxJQUFJLENBQUMsZUFBZSxDQUFDO29CQUNwQyxJQUFJLE1BQU0sSUFBSSxlQUFNLENBQUMsRUFBRSxJQUFJLE1BQU0sSUFBSSxlQUFNLENBQUMsSUFBSSxFQUFFO3dCQUM5QyxJQUFJLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQyxJQUFJLEVBQUUsV0FBSSxDQUFDLE9BQU8sRUFBRSxNQUFNLENBQUMsQ0FBQztxQkFDdkQ7eUJBQU07d0JBQ0gsSUFBSSxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQUMsSUFBSSxFQUFFLFdBQUksQ0FBQyxnQkFBZ0IsRUFBRSxNQUFNLENBQUMsQ0FBQztxQkFDaEU7b0JBQ0QsT0FBTyxDQUFDLEdBQUcsQ0FBQyxhQUFhLEdBQUcsZUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7aUJBQy9DO2FBQ0o7UUFDTCxDQUFDLENBQUMsQ0FBQztRQUdILElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxVQUFVLEVBQUUsQ0FBQyxNQUFZLEVBQUUsRUFBRTtZQUMvQyxNQUFNLElBQUksR0FBa0IsTUFBTSxDQUFDLElBQUksQ0FBQztZQUN4QyxJQUFJLENBQUMsSUFBSSxHQUFHLE1BQU0sQ0FBQyxNQUFNLENBQUMsRUFBRSxFQUFFLElBQUksQ0FBQyxDQUFDO1lBQ3BDLElBQUksSUFBSSxDQUFDLGNBQWMsS0FBRyxvQkFBb0IsRUFBRTtnQkFDNUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO2FBQ3BDO1lBQ0QsbURBQW1EO1lBQ25ELDJGQUEyRjtRQUMvRixDQUFDLENBQUMsQ0FBQztJQUVQLENBQUM7SUFFRCxjQUFjLENBQUMsQ0FBUyxFQUFFLENBQVM7UUFDL0IsSUFBSSxLQUFLLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEdBQUcsR0FBRyxHQUFHLElBQUksQ0FBQyxFQUFFLENBQUM7UUFDN0MsSUFBSSxLQUFLLElBQUksQ0FBQyxFQUFFLElBQUksS0FBSyxHQUFHLEVBQUUsRUFBRTtZQUM1QixPQUFPLGVBQU0sQ0FBQyxLQUFLLENBQUM7U0FDdkI7YUFBTSxJQUFJLEtBQUssSUFBSSxFQUFFLElBQUksS0FBSyxHQUFHLEdBQUcsRUFBRTtZQUNuQyxPQUFPLGVBQU0sQ0FBQyxFQUFFLENBQUM7U0FDcEI7YUFBTSxJQUFJLEtBQUssSUFBSSxHQUFHLElBQUksS0FBSyxJQUFJLENBQUMsR0FBRyxFQUFFO1lBQ3RDLE9BQU8sZUFBTSxDQUFDLElBQUksQ0FBQztTQUN0QjthQUFNO1lBQ0gsT0FBTyxlQUFNLENBQUMsSUFBSSxDQUFDO1NBQ3RCO0lBQ0wsQ0FBQztJQUVELE1BQU0sQ0FBQyxJQUFTLEVBQUUsT0FBWTtJQUM5QixDQUFDO0lBRUQsTUFBTTtJQUNOLENBQUM7SUFFRCxLQUFLO0lBQ0wsQ0FBQztJQUVELElBQUk7SUFDSixDQUFDO0lBRUQsSUFBSSxDQUFDLElBQVksRUFBRSxTQUFpQjtJQUNwQyxDQUFDOztBQXhIYSxrQ0FBVSxHQUFHLElBQUksNkRBQTZCLENBQUMsb0JBQW9CLEVBQUUsRUFBRSxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsQ0FBQyxTQUFvQixFQUFFLE1BQWMsRUFBRSxJQUFTLEVBQUUsRUFBRSxDQUFDLElBQUksdUJBQXVCLENBQUMsU0FBUyxFQUFFLE1BQU0sRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUFDO0FBRnBOLDBEQTRIQyIsImZpbGUiOiIuL3NyYy9icm93c2VyL3N5c3RlbS9pbnRlcmZhY2UvZGV2aWNlL1ByaW1hcnlDb250cm9sbGVyRGV2aWNlLnRzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDb21wb25lbnQsIEVudGl0eX0gZnJvbSBcImFmcmFtZVwiO1xuaW1wb3J0IHtEZXZpY2VTbG90fSBmcm9tIFwiLi4vbW9kZWwvRGV2aWNlU2xvdFwiO1xuaW1wb3J0IHtEZXZpY2V9IGZyb20gXCIuLi9EZXZpY2VcIjtcbmltcG9ydCB7U2xvdH0gZnJvbSBcIi4uL21vZGVsL1Nsb3RcIjtcbmltcG9ydCB7QnV0dG9ufSBmcm9tIFwiLi4vbW9kZWwvQnV0dG9uXCI7XG5pbXBvcnQge0NvbXBvbmVudENvbnRyb2xsZXJEZWZpbml0aW9ufSBmcm9tIFwiYWZyYW1lLXR5cGVzY3JpcHQtYm9pbGVycGxhdGVcIjtcbmltcG9ydCB7Q29kZVJlYWxpdHlDb21wb25lbnRDb250cm9sbGVyfSBmcm9tIFwiLi4vLi4vLi4vY29tcG9uZW50L0NvZGVSZWFsaXR5Q29tcG9uZW50Q29udHJvbGxlclwiO1xuXG5leHBvcnQgY2xhc3MgUHJpbWFyeUNvbnRyb2xsZXJEZXZpY2UgZXh0ZW5kcyBDb2RlUmVhbGl0eUNvbXBvbmVudENvbnRyb2xsZXIgaW1wbGVtZW50cyBEZXZpY2Uge1xuXG4gICAgcHVibGljIHN0YXRpYyBERUZJTklUSU9OID0gbmV3IENvbXBvbmVudENvbnRyb2xsZXJEZWZpbml0aW9uKFwicHJpbWFyeS1jb250cm9sbGVyXCIsIHt9LCBmYWxzZSwgZmFsc2UsIChjb21wb25lbnQ6IENvbXBvbmVudCwgZW50aXR5OiBFbnRpdHksIGRhdGE6IGFueSkgPT4gbmV3IFByaW1hcnlDb250cm9sbGVyRGV2aWNlKGNvbXBvbmVudCwgZW50aXR5LCBkYXRhKSk7XG5cbiAgICBwcml2YXRlIGNvbnRyb2xsZXJOYW1lOiBzdHJpbmcgPSBcIlwiO1xuICAgIHByaXZhdGUgYXhpczogQXJyYXk8bnVtYmVyPiB8IHVuZGVmaW5lZDtcbiAgICBwcml2YXRlIGxhc3RTdGlja0J1dHRvbjogQnV0dG9uIHwgdW5kZWZpbmVkO1xuXG4gICAgY29uc3RydWN0b3IoY29tcG9uZW50OiBDb21wb25lbnQsIGVudGl0eTogRW50aXR5LCBkYXRhOiBhbnkpIHtcbiAgICAgICAgc3VwZXIoY29tcG9uZW50LCBlbnRpdHksIGRhdGEpO1xuICAgIH1cblxuICAgIGluaXQoKTogdm9pZCB7XG4gICAgICAgIC8vY29uc29sZS5sb2codGhpcy5jb21wb25lbnROYW1lICsgXCIgaW5pdFwiKTtcblxuICAgICAgICB0aGlzLmludGVyZmFjZS5zZXREZXZpY2UoRGV2aWNlU2xvdC5QUklNQVJZX0hBTkQsIHRoaXMpO1xuXG4gICAgICAgIHRoaXMuYWRkRXZlbnRMaXN0ZW5lcihcImNvbnRyb2xsZXJjb25uZWN0ZWRcIiwgKGRldGFpbDogYW55KSA9PiB7XG4gICAgICAgICAgICB0aGlzLmNvbnRyb2xsZXJOYW1lID0gZGV0YWlsLm5hbWU7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcImNvbnRyb2xsZXJjb25uZWN0ZWQgXCIgKyB0aGlzLmNvbnRyb2xsZXJOYW1lKTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgdGhpcy5hZGRFdmVudExpc3RlbmVyKFwiY29udHJvbGxlcmRpc2Nvbm5lY3RlZFwiLCAoZGV0YWlsOiBhbnkpID0+IHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiY29udHJvbGxlcmRpc2Nvbm5lY3RlZCBcIiArIHRoaXMuY29udHJvbGxlck5hbWUpO1xuICAgICAgICB9KTtcblxuXG4gICAgICAgIHRoaXMuYWRkRXZlbnRMaXN0ZW5lcihcInRyaWdnZXJ1cFwiLCAoZGV0YWlsOiBhbnkpID0+IHtcbiAgICAgICAgICAgIHRoaXMuaW50ZXJmYWNlLmJ1dHRvblVwKHRoaXMsIFNsb3QuUFJJTUFSWSwgQnV0dG9uLlRSSUdHRVIpO1xuICAgICAgICAgICAgY29uc29sZS5sb2coXCJ0cmlnZ2VydXAgXCIgKyBkZXRhaWwpO1xuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5hZGRFdmVudExpc3RlbmVyKFwidHJpZ2dlcmRvd25cIiwgKGRldGFpbDogYW55KSA9PiB7XG4gICAgICAgICAgICB0aGlzLmludGVyZmFjZS5idXR0b25Eb3duKHRoaXMsIFNsb3QuUFJJTUFSWSwgQnV0dG9uLlRSSUdHRVIpO1xuICAgICAgICAgICAgY29uc29sZS5sb2coXCJ0cmlnZ2VyZG93biBcIiArIGRldGFpbCk7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIHRoaXMuYWRkRXZlbnRMaXN0ZW5lcihcImdyaXB1cFwiLCAoZGV0YWlsOiBhbnkpID0+IHtcbiAgICAgICAgICAgIHRoaXMuaW50ZXJmYWNlLmJ1dHRvblVwKHRoaXMsIFNsb3QuUFJJTUFSWSwgQnV0dG9uLkdSSVApO1xuICAgICAgICAgICAgY29uc29sZS5sb2coXCJncmlwdXAgXCIgKyBkZXRhaWwpO1xuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5hZGRFdmVudExpc3RlbmVyKFwiZ3JpcGRvd25cIiwgKGRldGFpbDogYW55KSA9PiB7XG4gICAgICAgICAgICB0aGlzLmludGVyZmFjZS5idXR0b25Eb3duKHRoaXMsIFNsb3QuUFJJTUFSWSwgQnV0dG9uLkdSSVApO1xuICAgICAgICAgICAgY29uc29sZS5sb2coXCJncmlwZG93biBcIiArIGRldGFpbCk7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIHRoaXMuYWRkRXZlbnRMaXN0ZW5lcihcIm1lbnV1cFwiLCAoZGV0YWlsOiBhbnkpID0+IHtcbiAgICAgICAgICAgIHRoaXMuaW50ZXJmYWNlLmJ1dHRvblVwKHRoaXMsIFNsb3QuUFJJTUFSWSwgQnV0dG9uLk1FTlUpO1xuICAgICAgICAgICAgY29uc29sZS5sb2coXCJtZW51dXAgXCIgKyBkZXRhaWwpO1xuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5hZGRFdmVudExpc3RlbmVyKFwibWVudWRvd25cIiwgKGRldGFpbDogYW55KSA9PiB7XG4gICAgICAgICAgICB0aGlzLmludGVyZmFjZS5idXR0b25Eb3duKHRoaXMsIFNsb3QuUFJJTUFSWSwgQnV0dG9uLk1FTlUpO1xuICAgICAgICAgICAgY29uc29sZS5sb2coXCJtZW51ZG93biBcIiArIGRldGFpbCk7XG4gICAgICAgIH0pO1xuXG5cbiAgICAgICAgdGhpcy5hZGRFdmVudExpc3RlbmVyKFwidHJhY2twYWRkb3duXCIsIChkZXRhaWw6IGFueSkgPT4ge1xuICAgICAgICAgICAgY29uc29sZS5sb2coXCJ0cmFja3BhZGRvd24gXCIgKyBkZXRhaWwpO1xuICAgICAgICAgICAgaWYgKHRoaXMuYXhpcykge1xuICAgICAgICAgICAgICAgIGNvbnN0IGJ1dHRvbiA9IHRoaXMuZ2V0U3RpY2tCdXR0b24odGhpcy5heGlzWzBdLCB0aGlzLmF4aXNbMV0pO1xuICAgICAgICAgICAgICAgIGlmIChidXR0b24gPT0gQnV0dG9uLlVQIHx8IGJ1dHRvbiA9PSBCdXR0b24uRE9XTikge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmludGVyZmFjZS5idXR0b25Eb3duKHRoaXMsIFNsb3QuUFJJTUFSWSwgYnV0dG9uKTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmludGVyZmFjZS5idXR0b25Eb3duKHRoaXMsIFNsb3QuUFJJTUFSWV9TRUxFQ1RPUiwgYnV0dG9uKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdGhpcy5sYXN0U3RpY2tCdXR0b24gPSBidXR0b247XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJidXR0b24gZG93bjogXCIrIEJ1dHRvbltidXR0b25dKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMuYWRkRXZlbnRMaXN0ZW5lcihcInRyYWNrcGFkdXBcIiwgKGRldGFpbDogYW55KSA9PiB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcInRyYWNrcGFkdXAgXCIgKyBkZXRhaWwpO1xuICAgICAgICAgICAgaWYgKHRoaXMuYXhpcykge1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLmxhc3RTdGlja0J1dHRvbikge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBidXR0b24gPSB0aGlzLmxhc3RTdGlja0J1dHRvbjtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGJ1dHRvbiA9PSBCdXR0b24uVVAgfHwgYnV0dG9uID09IEJ1dHRvbi5ET1dOKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmludGVyZmFjZS5idXR0b25VcCh0aGlzLCBTbG90LlBSSU1BUlksIGJ1dHRvbik7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmludGVyZmFjZS5idXR0b25VcCh0aGlzLCBTbG90LlBSSU1BUllfU0VMRUNUT1IsIGJ1dHRvbik7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJidXR0b24gdXA6IFwiICsgQnV0dG9uW2J1dHRvbl0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG5cblxuICAgICAgICB0aGlzLmFkZEV2ZW50TGlzdGVuZXIoXCJheGlzbW92ZVwiLCAoZGV0YWlsOiAgYW55KSA9PiB7XG4gICAgICAgICAgICBjb25zdCBheGlzOiBBcnJheTxudW1iZXI+ID0gZGV0YWlsLmF4aXM7XG4gICAgICAgICAgICB0aGlzLmF4aXMgPSBPYmplY3QuYXNzaWduKFtdLCBheGlzKTtcbiAgICAgICAgICAgIGlmICh0aGlzLmNvbnRyb2xsZXJOYW1lPT09XCJvY3VsdXMtZ28tY29udHJvbHNcIikge1xuICAgICAgICAgICAgICAgIHRoaXMuYXhpc1sxXSA9IC0xICogdGhpcy5heGlzWzFdO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy9jb25zb2xlLmxvZyh0aGlzLnRvb2xTbG90ICsgXCIgYXhpc21vdmUgXCIgKyBheGlzKTtcbiAgICAgICAgICAgIC8vdGhpcy5pbnRlcmZhY2Uuc3RpY2tUd2lzdCh0aGlzLCBTbG90LlBSSU1BUlksIFN0aWNrLlBSSU1BUlksIHRoaXMuYXhpc1sxXSwgdGhpcy5heGlzWzBdKTtcbiAgICAgICAgfSk7XG5cbiAgICB9XG5cbiAgICBnZXRTdGlja0J1dHRvbih4OiBudW1iZXIsIHk6IG51bWJlcik6IEJ1dHRvbiB7XG4gICAgICAgIHZhciBhbmdsZSA9IE1hdGguYXRhbjIoeSwgeCkgKiAxODAgLyBNYXRoLlBJO1xuICAgICAgICBpZiAoYW5nbGUgPj0gLTQ1ICYmIGFuZ2xlIDwgNDUpIHtcbiAgICAgICAgICAgIHJldHVybiBCdXR0b24uUklHSFQ7XG4gICAgICAgIH0gZWxzZSBpZiAoYW5nbGUgPj0gNDUgJiYgYW5nbGUgPCAxMzUpIHtcbiAgICAgICAgICAgIHJldHVybiBCdXR0b24uVVA7XG4gICAgICAgIH0gZWxzZSBpZiAoYW5nbGUgPj0gMTM1IHx8IGFuZ2xlIDw9IC0xMzUpIHtcbiAgICAgICAgICAgIHJldHVybiBCdXR0b24uTEVGVDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiBCdXR0b24uRE9XTjtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHVwZGF0ZShkYXRhOiBhbnksIG9sZERhdGE6IGFueSk6IHZvaWQge1xuICAgIH1cblxuICAgIHJlbW92ZSgpOiB2b2lkIHtcbiAgICB9XG5cbiAgICBwYXVzZSgpOiB2b2lkIHtcbiAgICB9XG5cbiAgICBwbGF5KCk6IHZvaWQge1xuICAgIH1cblxuICAgIHRpY2sodGltZTogbnVtYmVyLCB0aW1lRGVsdGE6IG51bWJlcik6IHZvaWQge1xuICAgIH1cblxufVxuXG5cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/browser/system/interface/device/PrimaryControllerDevice.ts\n");

/***/ }),

/***/ "./src/browser/system/interface/model/Button.ts":
/*!******************************************************!*\
  !*** ./src/browser/system/interface/model/Button.ts ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Button;\n(function (Button) {\n    Button[Button[\"TRIGGER\"] = 0] = \"TRIGGER\";\n    Button[Button[\"GRIP\"] = 1] = \"GRIP\";\n    Button[Button[\"MENU\"] = 2] = \"MENU\";\n    Button[Button[\"UP\"] = 3] = \"UP\";\n    Button[Button[\"DOWN\"] = 4] = \"DOWN\";\n    Button[Button[\"LEFT\"] = 5] = \"LEFT\";\n    Button[Button[\"RIGHT\"] = 6] = \"RIGHT\";\n})(Button = exports.Button || (exports.Button = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9zeXN0ZW0vaW50ZXJmYWNlL21vZGVsL0J1dHRvbi50cz9mNjQzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBWSxNQVFYO0FBUkQsV0FBWSxNQUFNO0lBQ2QseUNBQU87SUFDUCxtQ0FBSTtJQUNKLG1DQUFJO0lBQ0osK0JBQUU7SUFDRixtQ0FBSTtJQUNKLG1DQUFJO0lBQ0oscUNBQUs7QUFDVCxDQUFDLEVBUlcsTUFBTSxHQUFOLGNBQU0sS0FBTixjQUFNLFFBUWpCIiwiZmlsZSI6Ii4vc3JjL2Jyb3dzZXIvc3lzdGVtL2ludGVyZmFjZS9tb2RlbC9CdXR0b24udHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZW51bSBCdXR0b24ge1xuICAgIFRSSUdHRVIsXG4gICAgR1JJUCxcbiAgICBNRU5VLFxuICAgIFVQLFxuICAgIERPV04sXG4gICAgTEVGVCxcbiAgICBSSUdIVFxufSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/browser/system/interface/model/Button.ts\n");

/***/ }),

/***/ "./src/browser/system/interface/model/DeviceSlot.ts":
/*!**********************************************************!*\
  !*** ./src/browser/system/interface/model/DeviceSlot.ts ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar DeviceSlot;\n(function (DeviceSlot) {\n    DeviceSlot[DeviceSlot[\"KEYBOARD_AND_MOUSE\"] = 0] = \"KEYBOARD_AND_MOUSE\";\n    DeviceSlot[DeviceSlot[\"GAMEPAD\"] = 1] = \"GAMEPAD\";\n    DeviceSlot[DeviceSlot[\"PRIMARY_HAND\"] = 2] = \"PRIMARY_HAND\";\n    DeviceSlot[DeviceSlot[\"SECONDARY_HAND\"] = 3] = \"SECONDARY_HAND\";\n})(DeviceSlot = exports.DeviceSlot || (exports.DeviceSlot = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9zeXN0ZW0vaW50ZXJmYWNlL21vZGVsL0RldmljZVNsb3QudHM/NzJhNCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLElBQVksVUFLWDtBQUxELFdBQVksVUFBVTtJQUNsQix1RUFBa0I7SUFDbEIsaURBQU87SUFDUCwyREFBWTtJQUNaLCtEQUFjO0FBQ2xCLENBQUMsRUFMVyxVQUFVLEdBQVYsa0JBQVUsS0FBVixrQkFBVSxRQUtyQiIsImZpbGUiOiIuL3NyYy9icm93c2VyL3N5c3RlbS9pbnRlcmZhY2UvbW9kZWwvRGV2aWNlU2xvdC50cy5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBlbnVtIERldmljZVNsb3Qge1xuICAgIEtFWUJPQVJEX0FORF9NT1VTRSxcbiAgICBHQU1FUEFELFxuICAgIFBSSU1BUllfSEFORCxcbiAgICBTRUNPTkRBUllfSEFORFxufSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/browser/system/interface/model/DeviceSlot.ts\n");

/***/ }),

/***/ "./src/browser/system/interface/model/Slot.ts":
/*!****************************************************!*\
  !*** ./src/browser/system/interface/model/Slot.ts ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Slot;\n(function (Slot) {\n    Slot[Slot[\"PRIMARY\"] = 0] = \"PRIMARY\";\n    Slot[Slot[\"SECONDARY\"] = 1] = \"SECONDARY\";\n    Slot[Slot[\"PRIMARY_SELECTOR\"] = 2] = \"PRIMARY_SELECTOR\";\n    Slot[Slot[\"SECONDARY_SELECTOR\"] = 3] = \"SECONDARY_SELECTOR\";\n    Slot[Slot[\"WALK\"] = 4] = \"WALK\";\n})(Slot = exports.Slot || (exports.Slot = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9zeXN0ZW0vaW50ZXJmYWNlL21vZGVsL1Nsb3QudHM/Mjk2NyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLElBQVksSUFNWDtBQU5ELFdBQVksSUFBSTtJQUNaLHFDQUFPO0lBQ1AseUNBQVM7SUFDVCx1REFBZ0I7SUFDaEIsMkRBQWtCO0lBQ2xCLCtCQUFJO0FBQ1IsQ0FBQyxFQU5XLElBQUksR0FBSixZQUFJLEtBQUosWUFBSSxRQU1mIiwiZmlsZSI6Ii4vc3JjL2Jyb3dzZXIvc3lzdGVtL2ludGVyZmFjZS9tb2RlbC9TbG90LnRzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGVudW0gU2xvdCB7XG4gICAgUFJJTUFSWSxcbiAgICBTRUNPTkRBUlksXG4gICAgUFJJTUFSWV9TRUxFQ1RPUixcbiAgICBTRUNPTkRBUllfU0VMRUNUT1IsXG4gICAgV0FMS1xufSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/browser/system/interface/model/Slot.ts\n");

/***/ }),

/***/ "./src/browser/system/interface/model/Stick.ts":
/*!*****************************************************!*\
  !*** ./src/browser/system/interface/model/Stick.ts ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Stick;\n(function (Stick) {\n    Stick[Stick[\"PRIMARY\"] = 0] = \"PRIMARY\";\n    Stick[Stick[\"SECONDARY\"] = 1] = \"SECONDARY\";\n})(Stick = exports.Stick || (exports.Stick = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9zeXN0ZW0vaW50ZXJmYWNlL21vZGVsL1N0aWNrLnRzPzAxMzAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFZLEtBR1g7QUFIRCxXQUFZLEtBQUs7SUFDYix1Q0FBTztJQUNQLDJDQUFTO0FBQ2IsQ0FBQyxFQUhXLEtBQUssR0FBTCxhQUFLLEtBQUwsYUFBSyxRQUdoQiIsImZpbGUiOiIuL3NyYy9icm93c2VyL3N5c3RlbS9pbnRlcmZhY2UvbW9kZWwvU3RpY2sudHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZW51bSBTdGljayB7XG4gICAgUFJJTUFSWSxcbiAgICBTRUNPTkRBUllcbn0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/browser/system/interface/model/Stick.ts\n");

/***/ }),

/***/ "./src/browser/system/interface/tool/AddObjectTool.ts":
/*!************************************************************!*\
  !*** ./src/browser/system/interface/tool/AddObjectTool.ts ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst three_1 = __webpack_require__(/*! three */ \"three\");\nconst Slot_1 = __webpack_require__(/*! ../model/Slot */ \"./src/browser/system/interface/model/Slot.ts\");\nconst Button_1 = __webpack_require__(/*! ../model/Button */ \"./src/browser/system/interface/model/Button.ts\");\nconst PointerTool_1 = __webpack_require__(/*! ./PointerTool */ \"./src/browser/system/interface/tool/PointerTool.ts\");\nconst math_1 = __webpack_require__(/*! ../../../math/math */ \"./src/browser/math/math.ts\");\nconst aframe_typescript_boilerplate_1 = __webpack_require__(/*! aframe-typescript-boilerplate */ \"./node_modules/aframe-typescript-boilerplate/built/index.js\");\nclass AddObjectTool extends PointerTool_1.PointerTool {\n    constructor(component, entity, data) {\n        super(component, entity, data);\n        this.entityTemplateScale = 1;\n        this.entityReviewScale = 0.05;\n        this.entityTemplates = [\n            '<a-entity model=\"#cube_wood\" collidable/>',\n            '<a-entity model=\"#cube_brick\" collidable/>',\n            '<a-entity model=\"#cube_grass\" collidable/>',\n            '<a-entity model=\"#cube_sand\" collidable/>',\n            '<a-entity model=\"#cube_marble\" collidable/>',\n            '<a-entity model=\"#cube_stone\" collidable/>',\n            '<a-entity model=\"#slab_sand\" collidable/>',\n            '<a-entity model=\"#slab_marble\" collidable/>',\n            '<a-entity model=\"#slab_stone\" collidable/>'\n        ];\n        this.entityTemplateIndex = 0;\n        this.entityTemplate = this.entityTemplates[this.entityTemplateIndex];\n        this.raycaster = new three_1.Raycaster();\n    }\n    init() {\n        //console.log(this.componentName + \" init\");\n        super.init();\n    }\n    tick(time, timeDelta) {\n        super.tick(time, timeDelta);\n    }\n    buttonDown(device, toolSlot, button) {\n        if (!this.pressed.has(button)) {\n        }\n        super.buttonDown(device, toolSlot, button);\n    }\n    buttonUp(device, toolSlot, button) {\n        if (this.pressed.has(button)) {\n            if (button == Button_1.Button.TRIGGER) {\n                this.addEntityFromTemplate();\n            }\n            if (button == Button_1.Button.UP) {\n                if (this.pressed.has(Button_1.Button.TRIGGER)) {\n                    this.cloneEntity();\n                }\n                else {\n                    this.entityTemplateIndex++;\n                    if (this.entityTemplateIndex >= this.entityTemplates.length) {\n                        this.entityTemplateIndex = 0;\n                    }\n                    this.entityTemplate = this.entityTemplates[this.entityTemplateIndex];\n                    this.setReviewEntity();\n                }\n            }\n            if (button == Button_1.Button.DOWN) {\n                this.entityTemplateIndex--;\n                if (this.entityTemplateIndex <= 0) {\n                    this.entityTemplateIndex = this.entityTemplates.length - 1;\n                }\n                this.entityTemplate = this.entityTemplates[this.entityTemplateIndex];\n                this.setReviewEntity();\n            }\n        }\n        super.buttonUp(device, toolSlot, button);\n    }\n    setReviewEntity() {\n        const toolSelectorTool = this.interface.getToolAtSlot(Slot_1.Slot.PRIMARY_SELECTOR);\n        if (this.reviewEntity) {\n            toolSelectorTool.entity.removeChild(this.reviewEntity);\n        }\n        this.reviewEntity = aframe_typescript_boilerplate_1.createElement(this.entityTemplate);\n        this.reviewEntity.setAttribute(\"scale\", this.entityReviewScale + \" \" + this.entityReviewScale + \" \" + this.entityReviewScale);\n        this.reviewEntity.setAttribute(\"rotation\", \"60 0 0\");\n        this.reviewEntity.setAttribute(\"position\", \"0 0 -0.1\");\n        toolSelectorTool.entity.appendChild(this.reviewEntity);\n    }\n    cloneEntity() {\n        //console.log(\"clone entity.\");\n        const gridStep = 1;\n        const pointedObject = this.pointedObject;\n        const pointerPosition = this.pointedPosition;\n        const pointedFace = this.pointedFace;\n        if (pointedObject && pointerPosition && pointedFace) {\n            const entity = aframe_typescript_boilerplate_1.getEntity(pointedObject);\n            const entityXml = entity.outerHTML;\n            const currentOrientation = entity.object3D.quaternion.clone();\n            const currentScale = entity.object3D.scale;\n            const tempEntity = aframe_typescript_boilerplate_1.createElement(entityXml);\n            tempEntity.setAttribute(\"quaternion\", currentOrientation.x + \" \" + currentOrientation.y + \" \" + currentOrientation.z + \" \" + currentOrientation.w);\n            this.recursiveClearSidAndServer(tempEntity);\n            //const pointedObjectPosition = pointedObject.position.clone();\n            //pointedObject.getWorldPosition(pointedObjectPosition);\n            const template = tempEntity.outerHTML;\n            const templateScale = pointedObject.scale.x;\n            const entityPosition = pointedObject.localToWorld(pointedObject.position.clone());\n            const normal = pointedObject.localToWorld(pointedFace.normal.clone()).sub(pointedObject.localToWorld(pointedObject.position.clone()));\n            const newPosition = entityPosition.add(normal.multiplyScalar(templateScale));\n            const spaceSystem = this.getSystemController(\"space\");\n            spaceSystem.addEntity(template, newPosition, currentScale);\n        }\n    }\n    addEntityFromXml(xml) {\n        const gridStep = 1;\n        const pointedObject = this.pointedObject;\n        const pointerPosition = this.pointedPosition;\n        const pointedFace = this.pointedFace;\n        if (pointedObject && pointerPosition && pointedFace) {\n            const entityXml = xml;\n            const tempEntity = aframe_typescript_boilerplate_1.createElement(entityXml);\n            this.recursiveClearSidAndServer(tempEntity);\n            const template = tempEntity.outerHTML;\n            const templateScale = this.interface.getSelfScale() * this.entityTemplateScale;\n            const entityPosition = pointerPosition.clone();\n            const normal = pointedObject.localToWorld(pointedFace.normal.clone()).sub(pointedObject.localToWorld(pointedObject.position.clone()));\n            const newPosition = math_1.snapVector3ToAxisAlignedGrid(entityPosition.add(normal.multiplyScalar(this.interface.getSelfScale() * gridStep / 2)), this.interface.getSelfScale() * gridStep);\n            const spaceSystem = this.getSystemController(\"space\");\n            spaceSystem.addEntity(template, newPosition, new three_1.Vector3(templateScale, templateScale, templateScale));\n        }\n    }\n    addEntityFromTemplate() {\n        const gridStep = 1;\n        const pointedObject = this.pointedObject;\n        const pointerPosition = this.pointedPosition;\n        const pointedFace = this.pointedFace;\n        if (pointedObject && pointerPosition && pointedFace) {\n            //const pointedObjectPosition = pointedObject.position.clone();\n            //pointedObject.getWorldPosition(pointedObjectPosition);\n            const template = this.entityTemplate;\n            const templateScale = this.interface.getSelfScale() * this.entityTemplateScale;\n            const entityPosition = pointerPosition.clone();\n            const normal = pointedObject.localToWorld(pointedFace.normal.clone()).sub(pointedObject.localToWorld(pointedObject.position.clone()));\n            const newPosition = math_1.snapVector3ToAxisAlignedGrid(entityPosition.add(normal.multiplyScalar(this.interface.getSelfScale() * gridStep / 2)), this.interface.getSelfScale() * gridStep);\n            const spaceSystem = this.getSystemController(\"space\");\n            spaceSystem.addEntity(template, newPosition, new three_1.Vector3(templateScale, templateScale, templateScale));\n        }\n    }\n    recursiveClearSidAndServer(entity) {\n        entity.removeAttribute(\"sid\");\n        entity.removeAttribute(\"server\");\n        if (entity.children && entity.children.length > 0) {\n            for (const child of entity.children) {\n                this.recursiveClearSidAndServer(child);\n            }\n        }\n    }\n}\nAddObjectTool.DEFINITION = new aframe_typescript_boilerplate_1.ComponentControllerDefinition(\"add-object-tool\", {}, false, true, (component, entity, data) => new AddObjectTool(component, entity, data));\nexports.AddObjectTool = AddObjectTool;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/browser/system/interface/tool/AddObjectTool.ts\n");

/***/ }),

/***/ "./src/browser/system/interface/tool/MoveObjectTool.ts":
/*!*************************************************************!*\
  !*** ./src/browser/system/interface/tool/MoveObjectTool.ts ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst three_1 = __webpack_require__(/*! three */ \"three\");\nconst Button_1 = __webpack_require__(/*! ../model/Button */ \"./src/browser/system/interface/model/Button.ts\");\nconst PointerTool_1 = __webpack_require__(/*! ./PointerTool */ \"./src/browser/system/interface/tool/PointerTool.ts\");\nconst aframe_typescript_boilerplate_1 = __webpack_require__(/*! aframe-typescript-boilerplate */ \"./node_modules/aframe-typescript-boilerplate/built/index.js\");\nclass MoveObjectTool extends PointerTool_1.PointerTool {\n    constructor(component, entity, data) {\n        super(component, entity, data);\n        this.moveStep = 0.25;\n        this.raycaster = new three_1.Raycaster();\n    }\n    init() {\n        super.init();\n    }\n    tick(time, timeDelta) {\n        super.tick(time, timeDelta);\n    }\n    buttonDown(device, toolSlot, button) {\n        if (!this.pressed.has(button)) {\n            if (button == Button_1.Button.UP) {\n                if (this.pressed.has(Button_1.Button.TRIGGER)) {\n                    this.moveForward();\n                }\n            }\n        }\n        super.buttonDown(device, toolSlot, button);\n    }\n    buttonUp(device, toolSlot, button) {\n        if (this.pressed.has(button)) {\n            if (button == Button_1.Button.DOWN) {\n                if (this.pressed.has(Button_1.Button.TRIGGER)) {\n                    this.moveBackward();\n                }\n            }\n        }\n        super.buttonUp(device, toolSlot, button);\n    }\n    moveForward() {\n        const object = this.pointedObject;\n        if (object) {\n            const entity = aframe_typescript_boilerplate_1.getEntity(object);\n            this.move(entity, this.moveStep);\n        }\n    }\n    moveBackward() {\n        const object = this.pointedObject;\n        if (object) {\n            const entity = aframe_typescript_boilerplate_1.getEntity(object);\n            this.move(entity, -this.moveStep);\n        }\n    }\n    move(entity, moveStep) {\n        const spaceSystem = this.getSystemController(\"space\");\n        const gridStep = 1;\n        const pointedObject = this.pointedObject;\n        const pointerPosition = this.pointedPosition;\n        const pointedFace = this.pointedFace;\n        if (pointedObject && pointerPosition && pointedFace) {\n            const currentPosition = entity.object3D.getWorldPosition(entity.object3D.position.clone());\n            const currentOrientation = entity.object3D.quaternion.clone();\n            const normal = pointedObject.localToWorld(pointedFace.normal.clone()).sub(pointedObject.localToWorld(pointedObject.position.clone()));\n            const newPosition = currentPosition.add(normal.multiplyScalar(-this.interface.getSelfScale() * gridStep * moveStep));\n            const scale = entity.getAttribute(\"scale\");\n            spaceSystem.updateEntity(entity, newPosition, currentOrientation, scale);\n        }\n    }\n}\nMoveObjectTool.DEFINITION = new aframe_typescript_boilerplate_1.ComponentControllerDefinition(\"move-object-tool\", {}, false, true, (component, entity, data) => new MoveObjectTool(component, entity, data));\nexports.MoveObjectTool = MoveObjectTool;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/browser/system/interface/tool/MoveObjectTool.ts\n");

/***/ }),

/***/ "./src/browser/system/interface/tool/PointerTool.ts":
/*!**********************************************************!*\
  !*** ./src/browser/system/interface/tool/PointerTool.ts ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst three_1 = __webpack_require__(/*! three */ \"three\");\nconst Button_1 = __webpack_require__(/*! ../model/Button */ \"./src/browser/system/interface/model/Button.ts\");\nconst raycast_1 = __webpack_require__(/*! ../../../three/raycast */ \"./src/browser/three/raycast.ts\");\nconst aframe_typescript_boilerplate_1 = __webpack_require__(/*! aframe-typescript-boilerplate */ \"./node_modules/aframe-typescript-boilerplate/built/index.js\");\nconst CodeRealityComponentController_1 = __webpack_require__(/*! ../../../component/CodeRealityComponentController */ \"./src/browser/component/CodeRealityComponentController.ts\");\nclass PointerTool extends CodeRealityComponentController_1.CodeRealityComponentController {\n    constructor(component, entity, data) {\n        super(component, entity, data);\n        this.pointerMaterial = new three_1.LineBasicMaterial({ color: 0xffffff, transparent: true, opacity: 0.5 });\n        this.pressed = new Set();\n        this.time = 0;\n        this.pointerLine = this.constructPointerLine();\n        this.pointerCursor = this.constructPointerCursor();\n        this.pointerDevicePosition = new three_1.Vector3(0, 0, 0);\n        this.pointerDirection = new three_1.Vector3(0, 0, 0);\n        this.raycaster = new three_1.Raycaster();\n        this.interface.registerTool(this);\n    }\n    init() {\n        //console.log(this.componentName + \" init\");\n    }\n    update(data, oldData) { }\n    remove() { }\n    pause() { }\n    play() { }\n    tick(time, timeDelta) {\n        if (this.pointerDevice) {\n            this.pointerTick(time, timeDelta);\n        }\n    }\n    buttonDown(device, toolSlot, button) {\n        if (!this.pressed.has(button)) {\n            if (button == Button_1.Button.TRIGGER && !this.pointerDevice) {\n                this.pointerOn(device);\n            }\n            this.pressed.add(button);\n        }\n    }\n    buttonUp(device, toolSlot, button) {\n        if (this.pressed.has(button)) {\n            if (button == Button_1.Button.TRIGGER && this.pointerDevice) {\n                this.pointerOff(device);\n            }\n            this.pressed.delete(button);\n        }\n    }\n    stickTwist(device, toolSlot, stick, x, y) {\n    }\n    constructPointerLine() {\n        var geometry = new three_1.Geometry();\n        geometry.vertices.push(new three_1.Vector3(0, 0, -100), new three_1.Vector3(0, 0, 0));\n        return new three_1.Line(geometry, this.pointerMaterial);\n    }\n    constructPointerCursor() {\n        return new three_1.Mesh(new three_1.SphereGeometry(0.01, 32, 32), this.pointerMaterial);\n    }\n    pointerOn(device) {\n        device.entity.object3D.add(this.pointerLine);\n        this.pointerDevice = device;\n    }\n    pointerOff(device) {\n        if (this.pointedPosition) {\n            this.removeCursor();\n        }\n        device.entity.object3D.remove(this.pointerLine);\n        this.pointerDevice = undefined;\n    }\n    pointerTick(time, timeDelta) {\n        this.pointerDevice.entity.object3D.getWorldDirection(this.pointerDirection);\n        this.pointerDirection.multiplyScalar(-1);\n        this.pointerDevice.entity.object3D.getWorldPosition(this.pointerDevicePosition);\n        this.raycaster.near = 0;\n        this.raycaster.far = 100;\n        this.raycaster.set(this.pointerDevicePosition, this.pointerDirection);\n        //const intersects = this.raycaster!!.intersectObjects(this.interface.getCollidables(), true);\n        const intersects = raycast_1.raycast(this.interface.getCollidables(), this.raycaster);\n        if (intersects.length > 0) {\n            if (intersects[0].object === this.pointerCursor) {\n                intersects.splice(0, 1);\n            }\n        }\n        if (intersects.length > 0) {\n            const intersectionPoint = intersects[0].point;\n            //console.log(JSON.stringify(intersects[0]));\n            this.pointerCursor.position.copy(intersectionPoint);\n            if (!this.pointedPosition) {\n                this.addCursor(intersects[0].object);\n            }\n            this.pointedPosition = intersectionPoint;\n            this.pointedObject = intersects[0].object;\n            this.pointedFace = intersects[0].face;\n        }\n        else {\n            if (this.pointedPosition) {\n                this.removeCursor();\n            }\n        }\n    }\n    addCursor(object) {\n        this.pointerCursor.scale.x = this.interface.getSelfScale();\n        this.pointerCursor.scale.y = this.interface.getSelfScale();\n        this.pointerCursor.scale.z = this.interface.getSelfScale();\n        this.scene.object3D.add(this.pointerCursor);\n        //console.log(\"add pointer cursor.\");\n    }\n    removeCursor() {\n        this.scene.object3D.remove(this.pointerCursor);\n        //console.log(\"remove pointer cursor.\");\n        this.pointedObject = undefined;\n        this.pointedPosition = undefined;\n        this.pointedFace = undefined;\n    }\n}\nPointerTool.DEFINITION = new aframe_typescript_boilerplate_1.ComponentControllerDefinition(\"pointer-tool\", {}, false, true, (component, entity, data) => new PointerTool(component, entity, data));\nexports.PointerTool = PointerTool;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/browser/system/interface/tool/PointerTool.ts\n");

/***/ }),

/***/ "./src/browser/system/interface/tool/RemoveObjectTool.ts":
/*!***************************************************************!*\
  !*** ./src/browser/system/interface/tool/RemoveObjectTool.ts ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst three_1 = __webpack_require__(/*! three */ \"three\");\nconst Button_1 = __webpack_require__(/*! ../model/Button */ \"./src/browser/system/interface/model/Button.ts\");\nconst PointerTool_1 = __webpack_require__(/*! ./PointerTool */ \"./src/browser/system/interface/tool/PointerTool.ts\");\nconst aframe_typescript_boilerplate_1 = __webpack_require__(/*! aframe-typescript-boilerplate */ \"./node_modules/aframe-typescript-boilerplate/built/index.js\");\nclass RemoveObjectTool extends PointerTool_1.PointerTool {\n    constructor(component, entity, data) {\n        super(component, entity, data);\n        this.raycaster = new three_1.Raycaster();\n    }\n    init() {\n        //console.log(this.componentName + \" init\");\n        super.init();\n    }\n    tick(time, timeDelta) {\n        super.tick(time, timeDelta);\n    }\n    buttonDown(device, toolSlot, button) {\n        if (!this.pressed.has(button)) {\n        }\n        super.buttonDown(device, toolSlot, button);\n    }\n    buttonUp(device, toolSlot, button) {\n        if (this.pressed.has(button)) {\n            if (button == Button_1.Button.TRIGGER) {\n                this.removeEntity(device);\n            }\n        }\n        super.buttonUp(device, toolSlot, button);\n    }\n    removeEntity(device) {\n        const pointedObject = this.pointedObject;\n        const pointerPosition = this.pointedPosition;\n        const spaceSystem = this.getSystemController(\"space\");\n        if (pointedObject && pointerPosition) {\n            const pointedEntity = aframe_typescript_boilerplate_1.getEntity(pointedObject);\n            if (pointedEntity) {\n                spaceSystem.removeEntity(pointedEntity);\n            }\n        }\n    }\n}\nRemoveObjectTool.DEFINITION = new aframe_typescript_boilerplate_1.ComponentControllerDefinition(\"remove-object-tool\", {}, false, true, (component, entity, data) => new RemoveObjectTool(component, entity, data));\nexports.RemoveObjectTool = RemoveObjectTool;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9zeXN0ZW0vaW50ZXJmYWNlL3Rvb2wvUmVtb3ZlT2JqZWN0VG9vbC50cz9jZGQ2Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsMERBQWdDO0FBSWhDLDhHQUF1QztBQUN2QyxxSEFBMEM7QUFFMUMsZ0tBQXVGO0FBRXZGLE1BQWEsZ0JBQWlCLFNBQVEseUJBQVc7SUFJN0MsWUFBWSxTQUFvQixFQUFFLE1BQWMsRUFBRSxJQUFTO1FBQ3ZELEtBQUssQ0FBQyxTQUFTLEVBQUUsTUFBTSxFQUFFLElBQUksQ0FBQyxDQUFDO1FBQy9CLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxpQkFBUyxFQUFFLENBQUM7SUFDckMsQ0FBQztJQUVELElBQUk7UUFDQSw0Q0FBNEM7UUFDNUMsS0FBSyxDQUFDLElBQUksRUFBRSxDQUFDO0lBQ2pCLENBQUM7SUFFRCxJQUFJLENBQUMsSUFBWSxFQUFFLFNBQWlCO1FBQ2hDLEtBQUssQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLFNBQVMsQ0FBQyxDQUFDO0lBQ2hDLENBQUM7SUFFRCxVQUFVLENBQUMsTUFBYyxFQUFFLFFBQWMsRUFBRSxNQUFjO1FBQ3JELElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsRUFBRTtTQUM5QjtRQUNELEtBQUssQ0FBQyxVQUFVLENBQUMsTUFBTSxFQUFFLFFBQVEsRUFBRSxNQUFNLENBQUMsQ0FBQztJQUMvQyxDQUFDO0lBRUQsUUFBUSxDQUFDLE1BQWMsRUFBRSxRQUFjLEVBQUUsTUFBYztRQUNuRCxJQUFJLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxFQUFFO1lBQzFCLElBQUksTUFBTSxJQUFJLGVBQU0sQ0FBQyxPQUFPLEVBQUU7Z0JBQzFCLElBQUksQ0FBQyxZQUFZLENBQUMsTUFBTSxDQUFDLENBQUM7YUFDN0I7U0FDSjtRQUNELEtBQUssQ0FBQyxRQUFRLENBQUMsTUFBTSxFQUFFLFFBQVEsRUFBRSxNQUFNLENBQUMsQ0FBQztJQUM3QyxDQUFDO0lBRU8sWUFBWSxDQUFDLE1BQWM7UUFFL0IsTUFBTSxhQUFhLEdBQUcsSUFBSSxDQUFDLGFBQWEsQ0FBQztRQUN6QyxNQUFNLGVBQWUsR0FBRyxJQUFJLENBQUMsZUFBZSxDQUFDO1FBRTdDLE1BQU0sV0FBVyxHQUFHLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxPQUFPLENBQTBCLENBQUM7UUFFL0UsSUFBSSxhQUFhLElBQUksZUFBZSxFQUFFO1lBQ2xDLE1BQU0sYUFBYSxHQUFHLHlDQUFTLENBQUMsYUFBYSxDQUFDLENBQUM7WUFDL0MsSUFBSSxhQUFhLEVBQUU7Z0JBQ2YsV0FBVyxDQUFDLFlBQVksQ0FBQyxhQUFhLENBQUMsQ0FBQzthQUMzQztTQUNKO0lBQ0wsQ0FBQzs7QUE1Q2EsMkJBQVUsR0FBRyxJQUFJLDZEQUE2QixDQUFDLG9CQUFvQixFQUFFLEVBQUUsRUFBRSxLQUFLLEVBQUUsSUFBSSxFQUFFLENBQUMsU0FBb0IsRUFBRSxNQUFjLEVBQUUsSUFBUyxFQUFFLEVBQUUsQ0FBQyxJQUFJLGdCQUFnQixDQUFDLFNBQVMsRUFBRSxNQUFNLEVBQUUsSUFBSSxDQUFDLENBQUMsQ0FBQztBQUY1TSw0Q0FpREMiLCJmaWxlIjoiLi9zcmMvYnJvd3Nlci9zeXN0ZW0vaW50ZXJmYWNlL3Rvb2wvUmVtb3ZlT2JqZWN0VG9vbC50cy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7UmF5Y2FzdGVyfSBmcm9tIFwidGhyZWVcIjtcbmltcG9ydCB7Q29tcG9uZW50LCBFbnRpdHl9IGZyb20gXCJhZnJhbWVcIjtcbmltcG9ydCB7RGV2aWNlfSBmcm9tIFwiLi4vRGV2aWNlXCI7XG5pbXBvcnQge1Nsb3R9IGZyb20gXCIuLi9tb2RlbC9TbG90XCI7XG5pbXBvcnQge0J1dHRvbn0gZnJvbSBcIi4uL21vZGVsL0J1dHRvblwiO1xuaW1wb3J0IHtQb2ludGVyVG9vbH0gZnJvbSBcIi4vUG9pbnRlclRvb2xcIjtcbmltcG9ydCB7U3BhY2VTeXN0ZW1Db250cm9sbGVyfSBmcm9tIFwiLi4vLi4vLi4vLi5cIjtcbmltcG9ydCB7Q29tcG9uZW50Q29udHJvbGxlckRlZmluaXRpb24sIGdldEVudGl0eX0gZnJvbSBcImFmcmFtZS10eXBlc2NyaXB0LWJvaWxlcnBsYXRlXCI7XG5cbmV4cG9ydCBjbGFzcyBSZW1vdmVPYmplY3RUb29sIGV4dGVuZHMgUG9pbnRlclRvb2wge1xuXG4gICAgcHVibGljIHN0YXRpYyBERUZJTklUSU9OID0gbmV3IENvbXBvbmVudENvbnRyb2xsZXJEZWZpbml0aW9uKFwicmVtb3ZlLW9iamVjdC10b29sXCIsIHt9LCBmYWxzZSwgdHJ1ZSwgKGNvbXBvbmVudDogQ29tcG9uZW50LCBlbnRpdHk6IEVudGl0eSwgZGF0YTogYW55KSA9PiBuZXcgUmVtb3ZlT2JqZWN0VG9vbChjb21wb25lbnQsIGVudGl0eSwgZGF0YSkpO1xuXG4gICAgY29uc3RydWN0b3IoY29tcG9uZW50OiBDb21wb25lbnQsIGVudGl0eTogRW50aXR5LCBkYXRhOiBhbnkpIHtcbiAgICAgICAgc3VwZXIoY29tcG9uZW50LCBlbnRpdHksIGRhdGEpO1xuICAgICAgICB0aGlzLnJheWNhc3RlciA9IG5ldyBSYXljYXN0ZXIoKTtcbiAgICB9XG5cbiAgICBpbml0KCk6IHZvaWQge1xuICAgICAgICAvL2NvbnNvbGUubG9nKHRoaXMuY29tcG9uZW50TmFtZSArIFwiIGluaXRcIik7XG4gICAgICAgIHN1cGVyLmluaXQoKTtcbiAgICB9XG5cbiAgICB0aWNrKHRpbWU6IG51bWJlciwgdGltZURlbHRhOiBudW1iZXIpOiB2b2lkIHtcbiAgICAgICAgc3VwZXIudGljayh0aW1lLCB0aW1lRGVsdGEpO1xuICAgIH1cblxuICAgIGJ1dHRvbkRvd24oZGV2aWNlOiBEZXZpY2UsIHRvb2xTbG90OiBTbG90LCBidXR0b246IEJ1dHRvbik6IHZvaWQge1xuICAgICAgICBpZiAoIXRoaXMucHJlc3NlZC5oYXMoYnV0dG9uKSkge1xuICAgICAgICB9XG4gICAgICAgIHN1cGVyLmJ1dHRvbkRvd24oZGV2aWNlLCB0b29sU2xvdCwgYnV0dG9uKTtcbiAgICB9XG5cbiAgICBidXR0b25VcChkZXZpY2U6IERldmljZSwgdG9vbFNsb3Q6IFNsb3QsIGJ1dHRvbjogQnV0dG9uKTogdm9pZCB7XG4gICAgICAgIGlmICh0aGlzLnByZXNzZWQuaGFzKGJ1dHRvbikpIHtcbiAgICAgICAgICAgIGlmIChidXR0b24gPT0gQnV0dG9uLlRSSUdHRVIpIHtcbiAgICAgICAgICAgICAgICB0aGlzLnJlbW92ZUVudGl0eShkZXZpY2UpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHN1cGVyLmJ1dHRvblVwKGRldmljZSwgdG9vbFNsb3QsIGJ1dHRvbik7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSByZW1vdmVFbnRpdHkoZGV2aWNlOiBEZXZpY2UpIHtcblxuICAgICAgICBjb25zdCBwb2ludGVkT2JqZWN0ID0gdGhpcy5wb2ludGVkT2JqZWN0O1xuICAgICAgICBjb25zdCBwb2ludGVyUG9zaXRpb24gPSB0aGlzLnBvaW50ZWRQb3NpdGlvbjtcblxuICAgICAgICBjb25zdCBzcGFjZVN5c3RlbSA9IHRoaXMuZ2V0U3lzdGVtQ29udHJvbGxlcihcInNwYWNlXCIpIGFzIFNwYWNlU3lzdGVtQ29udHJvbGxlcjtcblxuICAgICAgICBpZiAocG9pbnRlZE9iamVjdCAmJiBwb2ludGVyUG9zaXRpb24pIHtcbiAgICAgICAgICAgIGNvbnN0IHBvaW50ZWRFbnRpdHkgPSBnZXRFbnRpdHkocG9pbnRlZE9iamVjdCk7XG4gICAgICAgICAgICBpZiAocG9pbnRlZEVudGl0eSkge1xuICAgICAgICAgICAgICAgIHNwYWNlU3lzdGVtLnJlbW92ZUVudGl0eShwb2ludGVkRW50aXR5KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuXG59XG5cblxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/browser/system/interface/tool/RemoveObjectTool.ts\n");

/***/ }),

/***/ "./src/browser/system/interface/tool/RotateObjectTool.ts":
/*!***************************************************************!*\
  !*** ./src/browser/system/interface/tool/RotateObjectTool.ts ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst three_1 = __webpack_require__(/*! three */ \"three\");\nconst Button_1 = __webpack_require__(/*! ../model/Button */ \"./src/browser/system/interface/model/Button.ts\");\nconst PointerTool_1 = __webpack_require__(/*! ./PointerTool */ \"./src/browser/system/interface/tool/PointerTool.ts\");\nconst aframe_typescript_boilerplate_1 = __webpack_require__(/*! aframe-typescript-boilerplate */ \"./node_modules/aframe-typescript-boilerplate/built/index.js\");\nclass RotateObjectTool extends PointerTool_1.PointerTool {\n    constructor(component, entity, data) {\n        super(component, entity, data);\n        this.rotateDegrees = 22.5;\n        this.raycaster = new three_1.Raycaster();\n    }\n    init() {\n        super.init();\n    }\n    tick(time, timeDelta) {\n        super.tick(time, timeDelta);\n    }\n    buttonDown(device, toolSlot, button) {\n        if (!this.pressed.has(button)) {\n        }\n        super.buttonDown(device, toolSlot, button);\n    }\n    buttonUp(device, toolSlot, button) {\n        if (this.pressed.has(button)) {\n            if (button == Button_1.Button.UP) {\n                if (this.pressed.has(Button_1.Button.TRIGGER)) {\n                    this.rotateForward();\n                }\n            }\n            if (button == Button_1.Button.DOWN) {\n                if (this.pressed.has(Button_1.Button.TRIGGER)) {\n                    this.resetRotation();\n                }\n            }\n        }\n        super.buttonUp(device, toolSlot, button);\n    }\n    rotateForward() {\n        const object = this.pointedObject;\n        if (object) {\n            const entity = aframe_typescript_boilerplate_1.getEntity(object);\n            this.rotate(entity, this.rotateDegrees);\n        }\n    }\n    rotateBackward() {\n        const object = this.pointedObject;\n        if (object) {\n            const entity = aframe_typescript_boilerplate_1.getEntity(object);\n            this.rotate(entity, -this.rotateDegrees);\n        }\n    }\n    rotate(entity, rotateDegrees) {\n        const spaceSystem = this.getSystemController(\"space\");\n        const gridStep = 1;\n        const pointedObject = this.pointedObject;\n        const pointerPosition = this.pointedPosition;\n        const pointedFace = this.pointedFace;\n        if (pointedObject && pointerPosition && pointedFace) {\n            const normal = pointedObject.localToWorld(pointedFace.normal.clone()).sub(pointedObject.localToWorld(pointedObject.position.clone()));\n            const axis = normal;\n            const angle = rotateDegrees * (2 * Math.PI) / 360;\n            const quaternionRotation = new three_1.Quaternion();\n            quaternionRotation.setFromAxisAngle(axis, angle);\n            const currentPosition = entity.object3D.getWorldPosition(entity.object3D.position.clone());\n            const currentScale = entity.getAttribute(\"scale\");\n            const currentOrientation = entity.object3D.quaternion.clone();\n            const newOrientation = quaternionRotation.multiply(currentOrientation);\n            spaceSystem.updateEntity(entity, currentPosition, newOrientation.normalize(), currentScale);\n        }\n    }\n    resetRotation() {\n        const object = this.pointedObject;\n        if (object) {\n            const entity = aframe_typescript_boilerplate_1.getEntity(object);\n            const spaceSystem = this.getSystemController(\"space\");\n            const currentPosition = entity.object3D.getWorldPosition(entity.object3D.position.clone());\n            const currentScale = entity.getAttribute(\"scale\");\n            const newOrientation = new three_1.Quaternion(0, 0, 0, 1);\n            spaceSystem.updateEntity(entity, currentPosition, newOrientation, currentScale);\n        }\n    }\n}\nRotateObjectTool.DEFINITION = new aframe_typescript_boilerplate_1.ComponentControllerDefinition(\"rotate-object-tool\", {}, false, true, (component, entity, data) => new RotateObjectTool(component, entity, data));\nexports.RotateObjectTool = RotateObjectTool;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/browser/system/interface/tool/RotateObjectTool.ts\n");

/***/ }),

/***/ "./src/browser/system/interface/tool/ScaleObjectTool.ts":
/*!**************************************************************!*\
  !*** ./src/browser/system/interface/tool/ScaleObjectTool.ts ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst three_1 = __webpack_require__(/*! three */ \"three\");\nconst Button_1 = __webpack_require__(/*! ../model/Button */ \"./src/browser/system/interface/model/Button.ts\");\nconst PointerTool_1 = __webpack_require__(/*! ./PointerTool */ \"./src/browser/system/interface/tool/PointerTool.ts\");\nconst aframe_typescript_boilerplate_1 = __webpack_require__(/*! aframe-typescript-boilerplate */ \"./node_modules/aframe-typescript-boilerplate/built/index.js\");\nclass ScaleObjectTool extends PointerTool_1.PointerTool {\n    constructor(component, entity, data) {\n        super(component, entity, data);\n        this.scaleMultiplier = 2;\n        this.raycaster = new three_1.Raycaster();\n    }\n    init() {\n        super.init();\n    }\n    tick(time, timeDelta) {\n        super.tick(time, timeDelta);\n    }\n    buttonDown(device, toolSlot, button) {\n        if (!this.pressed.has(button)) {\n            if (button == Button_1.Button.UP) {\n                if (this.pressed.has(Button_1.Button.TRIGGER)) {\n                    this.scaleEntityUp();\n                }\n                else {\n                    this.scaleSelfUp();\n                }\n            }\n        }\n        super.buttonDown(device, toolSlot, button);\n    }\n    buttonUp(device, toolSlot, button) {\n        if (this.pressed.has(button)) {\n            if (button == Button_1.Button.DOWN) {\n                if (this.pressed.has(Button_1.Button.TRIGGER)) {\n                    this.scaleEntityDown();\n                }\n                else {\n                    this.scaleSelfDown();\n                }\n            }\n        }\n        super.buttonUp(device, toolSlot, button);\n    }\n    scaleSelfUp() {\n        this.scaleSelf(this.scaleMultiplier);\n    }\n    scaleSelfDown() {\n        this.scaleSelf(1 / this.scaleMultiplier);\n    }\n    scaleSelf(multiplier) {\n        this.interface.setSelfScale(this.interface.getSelfScale() * multiplier);\n    }\n    scaleEntityUp() {\n        const object = this.pointedObject;\n        if (object) {\n            const entity = aframe_typescript_boilerplate_1.getEntity(object);\n            this.scaleEntity(entity, this.scaleMultiplier);\n        }\n    }\n    scaleEntityDown() {\n        const object = this.pointedObject;\n        if (object) {\n            const entity = aframe_typescript_boilerplate_1.getEntity(object);\n            this.scaleEntity(entity, 1 / this.scaleMultiplier);\n        }\n    }\n    scaleEntity(entity, multiplier) {\n        const spaceSystem = this.getSystemController(\"space\");\n        const position = entity.object3D.getWorldPosition(entity.object3D.position.clone());\n        const currentOrientation = entity.object3D.quaternion.clone();\n        const scale = entity.getAttribute(\"scale\").clone();\n        scale.multiplyScalar(multiplier);\n        spaceSystem.updateEntity(entity, position, currentOrientation, scale);\n    }\n}\nScaleObjectTool.DEFINITION = new aframe_typescript_boilerplate_1.ComponentControllerDefinition(\"scale-object-tool\", {}, false, true, (component, entity, data) => new ScaleObjectTool(component, entity, data));\nexports.ScaleObjectTool = ScaleObjectTool;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9zeXN0ZW0vaW50ZXJmYWNlL3Rvb2wvU2NhbGVPYmplY3RUb29sLnRzP2U1ZDIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwwREFBeUM7QUFJekMsOEdBQXVDO0FBQ3ZDLHFIQUEwQztBQUUxQyxnS0FBdUY7QUFFdkYsTUFBYSxlQUFnQixTQUFRLHlCQUFXO0lBTTVDLFlBQVksU0FBb0IsRUFBRSxNQUFjLEVBQUUsSUFBUztRQUN2RCxLQUFLLENBQUMsU0FBUyxFQUFFLE1BQU0sRUFBRSxJQUFJLENBQUMsQ0FBQztRQUhuQyxvQkFBZSxHQUFHLENBQUMsQ0FBQztRQUloQixJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksaUJBQVMsRUFBRSxDQUFDO0lBQ3JDLENBQUM7SUFFRCxJQUFJO1FBQ0EsS0FBSyxDQUFDLElBQUksRUFBRSxDQUFDO0lBQ2pCLENBQUM7SUFFRCxJQUFJLENBQUMsSUFBWSxFQUFFLFNBQWlCO1FBQ2hDLEtBQUssQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLFNBQVMsQ0FBQyxDQUFDO0lBQ2hDLENBQUM7SUFFRCxVQUFVLENBQUMsTUFBYyxFQUFFLFFBQWMsRUFBRSxNQUFjO1FBQ3JELElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsRUFBRTtZQUMzQixJQUFJLE1BQU0sSUFBSSxlQUFNLENBQUMsRUFBRSxFQUFFO2dCQUNyQixJQUFJLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLGVBQU0sQ0FBQyxPQUFPLENBQUMsRUFBRTtvQkFDbEMsSUFBSSxDQUFDLGFBQWEsRUFBRSxDQUFDO2lCQUN4QjtxQkFBTTtvQkFDSCxJQUFJLENBQUMsV0FBVyxFQUFFLENBQUM7aUJBQ3RCO2FBQ0o7U0FDSjtRQUNELEtBQUssQ0FBQyxVQUFVLENBQUMsTUFBTSxFQUFFLFFBQVEsRUFBRSxNQUFNLENBQUMsQ0FBQztJQUMvQyxDQUFDO0lBRUQsUUFBUSxDQUFDLE1BQWMsRUFBRSxRQUFjLEVBQUUsTUFBYztRQUNuRCxJQUFJLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxFQUFFO1lBQzFCLElBQUksTUFBTSxJQUFJLGVBQU0sQ0FBQyxJQUFJLEVBQUU7Z0JBQ3ZCLElBQUksSUFBSSxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsZUFBTSxDQUFDLE9BQU8sQ0FBQyxFQUFFO29CQUNsQyxJQUFJLENBQUMsZUFBZSxFQUFFLENBQUM7aUJBQzFCO3FCQUFNO29CQUNILElBQUksQ0FBQyxhQUFhLEVBQUUsQ0FBQztpQkFDeEI7YUFDSjtTQUNKO1FBQ0QsS0FBSyxDQUFDLFFBQVEsQ0FBQyxNQUFNLEVBQUUsUUFBUSxFQUFFLE1BQU0sQ0FBQyxDQUFDO0lBQzdDLENBQUM7SUFFTyxXQUFXO1FBQ2YsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsZUFBZSxDQUFDLENBQUM7SUFDekMsQ0FBQztJQUVPLGFBQWE7UUFDakIsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLGVBQWUsQ0FBQyxDQUFDO0lBQzdDLENBQUM7SUFFTyxTQUFTLENBQUMsVUFBa0I7UUFDaEMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxZQUFZLEVBQUUsR0FBRyxVQUFVLENBQUMsQ0FBQztJQUM1RSxDQUFDO0lBRU8sYUFBYTtRQUNqQixNQUFNLE1BQU0sR0FBRyxJQUFJLENBQUMsYUFBYSxDQUFDO1FBQ2xDLElBQUksTUFBTSxFQUFFO1lBQ1IsTUFBTSxNQUFNLEdBQUcseUNBQVMsQ0FBQyxNQUFNLENBQUcsQ0FBQztZQUNuQyxJQUFJLENBQUMsV0FBVyxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsZUFBZSxDQUFDLENBQUM7U0FDbEQ7SUFDTCxDQUFDO0lBRU8sZUFBZTtRQUNuQixNQUFNLE1BQU0sR0FBRyxJQUFJLENBQUMsYUFBYSxDQUFDO1FBQ2xDLElBQUksTUFBTSxFQUFFO1lBQ1IsTUFBTSxNQUFNLEdBQUcseUNBQVMsQ0FBQyxNQUFNLENBQUcsQ0FBQztZQUNuQyxJQUFJLENBQUMsV0FBVyxDQUFDLE1BQU0sRUFBRSxDQUFDLEdBQUcsSUFBSSxDQUFDLGVBQWUsQ0FBQyxDQUFDO1NBQ3REO0lBQ0wsQ0FBQztJQUVPLFdBQVcsQ0FBQyxNQUFjLEVBQUUsVUFBa0I7UUFDbEQsTUFBTSxXQUFXLEdBQUcsSUFBSSxDQUFDLG1CQUFtQixDQUFDLE9BQU8sQ0FBMEIsQ0FBQztRQUMvRSxNQUFNLFFBQVEsR0FBSSxNQUFNLENBQUMsUUFBUSxDQUFDLGdCQUFnQixDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLEtBQUssRUFBRSxDQUFDLENBQUM7UUFDckYsTUFBTSxrQkFBa0IsR0FBRyxNQUFNLENBQUMsUUFBUSxDQUFDLFVBQVUsQ0FBQyxLQUFLLEVBQUUsQ0FBQztRQUM5RCxNQUFNLEtBQUssR0FBSSxNQUFNLENBQUMsWUFBWSxDQUFDLE9BQU8sQ0FBYSxDQUFDLEtBQUssRUFBRSxDQUFDO1FBRWhFLEtBQUssQ0FBQyxjQUFjLENBQUMsVUFBVSxDQUFDLENBQUM7UUFFakMsV0FBVyxDQUFDLFlBQVksQ0FBQyxNQUFNLEVBQUUsUUFBUSxFQUFFLGtCQUFrQixFQUFFLEtBQUssQ0FBQyxDQUFDO0lBQzFFLENBQUM7O0FBaEZhLDBCQUFVLEdBQUcsSUFBSSw2REFBNkIsQ0FBQyxtQkFBbUIsRUFBRSxFQUFFLEVBQUUsS0FBSyxFQUFFLElBQUksRUFBRSxDQUFDLFNBQW9CLEVBQUUsTUFBYyxFQUFFLElBQVMsRUFBRSxFQUFFLENBQUMsSUFBSSxlQUFlLENBQUMsU0FBUyxFQUFFLE1BQU0sRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUFDO0FBRjFNLDBDQW1GQyIsImZpbGUiOiIuL3NyYy9icm93c2VyL3N5c3RlbS9pbnRlcmZhY2UvdG9vbC9TY2FsZU9iamVjdFRvb2wudHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1JheWNhc3RlciwgVmVjdG9yM30gZnJvbSBcInRocmVlXCI7XG5pbXBvcnQge0NvbXBvbmVudCwgRW50aXR5fSBmcm9tIFwiYWZyYW1lXCI7XG5pbXBvcnQge0RldmljZX0gZnJvbSBcIi4uL0RldmljZVwiO1xuaW1wb3J0IHtTbG90fSBmcm9tIFwiLi4vbW9kZWwvU2xvdFwiO1xuaW1wb3J0IHtCdXR0b259IGZyb20gXCIuLi9tb2RlbC9CdXR0b25cIjtcbmltcG9ydCB7UG9pbnRlclRvb2x9IGZyb20gXCIuL1BvaW50ZXJUb29sXCI7XG5pbXBvcnQge1NwYWNlU3lzdGVtQ29udHJvbGxlcn0gZnJvbSBcIi4uLy4uLy4uLy4uXCI7XG5pbXBvcnQge0NvbXBvbmVudENvbnRyb2xsZXJEZWZpbml0aW9uLCBnZXRFbnRpdHl9IGZyb20gXCJhZnJhbWUtdHlwZXNjcmlwdC1ib2lsZXJwbGF0ZVwiO1xuXG5leHBvcnQgY2xhc3MgU2NhbGVPYmplY3RUb29sIGV4dGVuZHMgUG9pbnRlclRvb2wge1xuXG4gICAgcHVibGljIHN0YXRpYyBERUZJTklUSU9OID0gbmV3IENvbXBvbmVudENvbnRyb2xsZXJEZWZpbml0aW9uKFwic2NhbGUtb2JqZWN0LXRvb2xcIiwge30sIGZhbHNlLCB0cnVlLCAoY29tcG9uZW50OiBDb21wb25lbnQsIGVudGl0eTogRW50aXR5LCBkYXRhOiBhbnkpID0+IG5ldyBTY2FsZU9iamVjdFRvb2woY29tcG9uZW50LCBlbnRpdHksIGRhdGEpKTtcblxuICAgIHNjYWxlTXVsdGlwbGllciA9IDI7XG5cbiAgICBjb25zdHJ1Y3Rvcihjb21wb25lbnQ6IENvbXBvbmVudCwgZW50aXR5OiBFbnRpdHksIGRhdGE6IGFueSkge1xuICAgICAgICBzdXBlcihjb21wb25lbnQsIGVudGl0eSwgZGF0YSk7XG4gICAgICAgIHRoaXMucmF5Y2FzdGVyID0gbmV3IFJheWNhc3RlcigpO1xuICAgIH1cblxuICAgIGluaXQoKTogdm9pZCB7XG4gICAgICAgIHN1cGVyLmluaXQoKTtcbiAgICB9XG5cbiAgICB0aWNrKHRpbWU6IG51bWJlciwgdGltZURlbHRhOiBudW1iZXIpOiB2b2lkIHtcbiAgICAgICAgc3VwZXIudGljayh0aW1lLCB0aW1lRGVsdGEpO1xuICAgIH1cblxuICAgIGJ1dHRvbkRvd24oZGV2aWNlOiBEZXZpY2UsIHRvb2xTbG90OiBTbG90LCBidXR0b246IEJ1dHRvbik6IHZvaWQge1xuICAgICAgICBpZiAoIXRoaXMucHJlc3NlZC5oYXMoYnV0dG9uKSkge1xuICAgICAgICAgICAgaWYgKGJ1dHRvbiA9PSBCdXR0b24uVVApIHtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5wcmVzc2VkLmhhcyhCdXR0b24uVFJJR0dFUikpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5zY2FsZUVudGl0eVVwKCk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5zY2FsZVNlbGZVcCgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBzdXBlci5idXR0b25Eb3duKGRldmljZSwgdG9vbFNsb3QsIGJ1dHRvbik7XG4gICAgfVxuXG4gICAgYnV0dG9uVXAoZGV2aWNlOiBEZXZpY2UsIHRvb2xTbG90OiBTbG90LCBidXR0b246IEJ1dHRvbik6IHZvaWQge1xuICAgICAgICBpZiAodGhpcy5wcmVzc2VkLmhhcyhidXR0b24pKSB7XG4gICAgICAgICAgICBpZiAoYnV0dG9uID09IEJ1dHRvbi5ET1dOKSB7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMucHJlc3NlZC5oYXMoQnV0dG9uLlRSSUdHRVIpKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuc2NhbGVFbnRpdHlEb3duKCk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5zY2FsZVNlbGZEb3duKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHN1cGVyLmJ1dHRvblVwKGRldmljZSwgdG9vbFNsb3QsIGJ1dHRvbik7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBzY2FsZVNlbGZVcCgpIHtcbiAgICAgICAgdGhpcy5zY2FsZVNlbGYodGhpcy5zY2FsZU11bHRpcGxpZXIpO1xuICAgIH1cblxuICAgIHByaXZhdGUgc2NhbGVTZWxmRG93bigpIHtcbiAgICAgICAgdGhpcy5zY2FsZVNlbGYoMSAvIHRoaXMuc2NhbGVNdWx0aXBsaWVyKTtcbiAgICB9XG5cbiAgICBwcml2YXRlIHNjYWxlU2VsZihtdWx0aXBsaWVyOiBudW1iZXIpIHtcbiAgICAgICAgdGhpcy5pbnRlcmZhY2Uuc2V0U2VsZlNjYWxlKHRoaXMuaW50ZXJmYWNlLmdldFNlbGZTY2FsZSgpICogbXVsdGlwbGllcik7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBzY2FsZUVudGl0eVVwKCkge1xuICAgICAgICBjb25zdCBvYmplY3QgPSB0aGlzLnBvaW50ZWRPYmplY3Q7XG4gICAgICAgIGlmIChvYmplY3QpIHtcbiAgICAgICAgICAgIGNvbnN0IGVudGl0eSA9IGdldEVudGl0eShvYmplY3QpISE7XG4gICAgICAgICAgICB0aGlzLnNjYWxlRW50aXR5KGVudGl0eSwgdGhpcy5zY2FsZU11bHRpcGxpZXIpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBzY2FsZUVudGl0eURvd24oKSB7XG4gICAgICAgIGNvbnN0IG9iamVjdCA9IHRoaXMucG9pbnRlZE9iamVjdDtcbiAgICAgICAgaWYgKG9iamVjdCkge1xuICAgICAgICAgICAgY29uc3QgZW50aXR5ID0gZ2V0RW50aXR5KG9iamVjdCkhITtcbiAgICAgICAgICAgIHRoaXMuc2NhbGVFbnRpdHkoZW50aXR5LCAxIC8gdGhpcy5zY2FsZU11bHRpcGxpZXIpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBzY2FsZUVudGl0eShlbnRpdHk6IEVudGl0eSwgbXVsdGlwbGllcjogbnVtYmVyKSB7XG4gICAgICAgIGNvbnN0IHNwYWNlU3lzdGVtID0gdGhpcy5nZXRTeXN0ZW1Db250cm9sbGVyKFwic3BhY2VcIikgYXMgU3BhY2VTeXN0ZW1Db250cm9sbGVyO1xuICAgICAgICBjb25zdCBwb3NpdGlvbiA9ICBlbnRpdHkub2JqZWN0M0QuZ2V0V29ybGRQb3NpdGlvbihlbnRpdHkub2JqZWN0M0QucG9zaXRpb24uY2xvbmUoKSk7XG4gICAgICAgIGNvbnN0IGN1cnJlbnRPcmllbnRhdGlvbiA9IGVudGl0eS5vYmplY3QzRC5xdWF0ZXJuaW9uLmNsb25lKCk7XG4gICAgICAgIGNvbnN0IHNjYWxlID0gKGVudGl0eS5nZXRBdHRyaWJ1dGUoXCJzY2FsZVwiKSBhcyBWZWN0b3IzKS5jbG9uZSgpO1xuXG4gICAgICAgIHNjYWxlLm11bHRpcGx5U2NhbGFyKG11bHRpcGxpZXIpO1xuXG4gICAgICAgIHNwYWNlU3lzdGVtLnVwZGF0ZUVudGl0eShlbnRpdHksIHBvc2l0aW9uLCBjdXJyZW50T3JpZW50YXRpb24sIHNjYWxlKTtcbiAgICB9XG59XG5cblxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/browser/system/interface/tool/ScaleObjectTool.ts\n");

/***/ }),

/***/ "./src/browser/system/interface/tool/TeleportTool.ts":
/*!***********************************************************!*\
  !*** ./src/browser/system/interface/tool/TeleportTool.ts ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst three_1 = __webpack_require__(/*! three */ \"three\");\nconst Slot_1 = __webpack_require__(/*! ../model/Slot */ \"./src/browser/system/interface/model/Slot.ts\");\nconst Button_1 = __webpack_require__(/*! ../model/Button */ \"./src/browser/system/interface/model/Button.ts\");\nconst PointerTool_1 = __webpack_require__(/*! ./PointerTool */ \"./src/browser/system/interface/tool/PointerTool.ts\");\nconst aframe_typescript_boilerplate_1 = __webpack_require__(/*! aframe-typescript-boilerplate */ \"./node_modules/aframe-typescript-boilerplate/built/index.js\");\nclass TeleportTool extends PointerTool_1.PointerTool {\n    constructor(component, entity, data) {\n        super(component, entity, data);\n        //this.interface.setTool(ToolSlot.PRIMARY, this);\n        this.raycaster = new three_1.Raycaster();\n        this.interface.registerTool(this);\n        this.interface.slotTool(Slot_1.Slot.PRIMARY, this);\n    }\n    init() {\n        //console.log(this.componentName + \" init\");\n        super.init();\n    }\n    tick(time, timeDelta) {\n        super.tick(time, timeDelta);\n    }\n    buttonDown(device, toolSlot, button) {\n        if (!this.pressed.has(button)) {\n        }\n        super.buttonDown(device, toolSlot, button);\n    }\n    buttonUp(device, toolSlot, button) {\n        if (this.pressed.has(button)) {\n            if (button == Button_1.Button.TRIGGER) {\n                if (this.pointedPosition) {\n                    const movementTool = this.interface.getToolAtSlot(Slot_1.Slot.WALK);\n                    this.interface.interfaceEntity.object3D.position.x = this.pointedPosition.x;\n                    this.interface.interfaceEntity.object3D.position.y = this.pointedPosition.y;\n                    this.interface.interfaceEntity.object3D.position.z = this.pointedPosition.z;\n                    movementTool.setCenterOfMassFromInterfaceEntity();\n                }\n            }\n        }\n        super.buttonUp(device, toolSlot, button);\n    }\n}\nTeleportTool.DEFINITION = new aframe_typescript_boilerplate_1.ComponentControllerDefinition(\"teleport-tool\", {}, false, true, (component, entity, data) => new TeleportTool(component, entity, data));\nexports.TeleportTool = TeleportTool;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9zeXN0ZW0vaW50ZXJmYWNlL3Rvb2wvVGVsZXBvcnRUb29sLnRzP2EzYjUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwwREFBZ0M7QUFHaEMsd0dBQW1DO0FBQ25DLDhHQUF1QztBQUN2QyxxSEFBMEM7QUFFMUMsZ0tBQTRFO0FBRTVFLE1BQWEsWUFBYSxTQUFRLHlCQUFXO0lBSXpDLFlBQVksU0FBb0IsRUFBRSxNQUFjLEVBQUUsSUFBUztRQUN2RCxLQUFLLENBQUMsU0FBUyxFQUFFLE1BQU0sRUFBRSxJQUFJLENBQUMsQ0FBQztRQUMvQixpREFBaUQ7UUFDakQsSUFBSSxDQUFDLFNBQVMsR0FBRyxJQUFJLGlCQUFTLEVBQUUsQ0FBQztRQUNqQyxJQUFJLENBQUMsU0FBUyxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNsQyxJQUFJLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQyxXQUFJLENBQUMsT0FBTyxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQ2hELENBQUM7SUFFRCxJQUFJO1FBQ0EsNENBQTRDO1FBQzVDLEtBQUssQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUNqQixDQUFDO0lBRUQsSUFBSSxDQUFDLElBQVksRUFBRSxTQUFpQjtRQUNoQyxLQUFLLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxTQUFTLENBQUMsQ0FBQztJQUNoQyxDQUFDO0lBRUQsVUFBVSxDQUFDLE1BQWMsRUFBRSxRQUFjLEVBQUUsTUFBYztRQUNyRCxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLEVBQUU7U0FFOUI7UUFDRCxLQUFLLENBQUMsVUFBVSxDQUFDLE1BQU0sRUFBRSxRQUFRLEVBQUUsTUFBTSxDQUFDLENBQUM7SUFDL0MsQ0FBQztJQUVELFFBQVEsQ0FBQyxNQUFjLEVBQUUsUUFBYyxFQUFFLE1BQWM7UUFDbkQsSUFBSSxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsRUFBRTtZQUMxQixJQUFJLE1BQU0sSUFBSSxlQUFNLENBQUMsT0FBTyxFQUFFO2dCQUMxQixJQUFJLElBQUksQ0FBQyxlQUFlLEVBQUU7b0JBQ3RCLE1BQU0sWUFBWSxHQUFhLElBQUksQ0FBQyxTQUFTLENBQUMsYUFBYSxDQUFDLFdBQUksQ0FBQyxJQUFJLENBQWEsQ0FBQztvQkFDbkYsSUFBSSxDQUFDLFNBQVMsQ0FBQyxlQUFlLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLGVBQWUsQ0FBQyxDQUFDLENBQUM7b0JBQzVFLElBQUksQ0FBQyxTQUFTLENBQUMsZUFBZSxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxlQUFlLENBQUMsQ0FBQyxDQUFDO29CQUM1RSxJQUFJLENBQUMsU0FBUyxDQUFDLGVBQWUsQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsZUFBZSxDQUFDLENBQUMsQ0FBQztvQkFDNUUsWUFBWSxDQUFDLGtDQUFrQyxFQUFFLENBQUM7aUJBQ3JEO2FBQ0o7U0FDSjtRQUNELEtBQUssQ0FBQyxRQUFRLENBQUMsTUFBTSxFQUFFLFFBQVEsRUFBRSxNQUFNLENBQUMsQ0FBQztJQUM3QyxDQUFDOztBQXZDYSx1QkFBVSxHQUFHLElBQUksNkRBQTZCLENBQUMsZUFBZSxFQUFFLEVBQUUsRUFBRSxLQUFLLEVBQUUsSUFBSSxFQUFFLENBQUMsU0FBb0IsRUFBRSxNQUFjLEVBQUUsSUFBUyxFQUFFLEVBQUUsQ0FBQyxJQUFJLFlBQVksQ0FBQyxTQUFTLEVBQUUsTUFBTSxFQUFFLElBQUksQ0FBQyxDQUFDLENBQUM7QUFGbk0sb0NBMkNDIiwiZmlsZSI6Ii4vc3JjL2Jyb3dzZXIvc3lzdGVtL2ludGVyZmFjZS90b29sL1RlbGVwb3J0VG9vbC50cy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7UmF5Y2FzdGVyfSBmcm9tIFwidGhyZWVcIjtcbmltcG9ydCB7Q29tcG9uZW50LCBFbnRpdHl9IGZyb20gXCJhZnJhbWVcIjtcbmltcG9ydCB7RGV2aWNlfSBmcm9tIFwiLi4vRGV2aWNlXCI7XG5pbXBvcnQge1Nsb3R9IGZyb20gXCIuLi9tb2RlbC9TbG90XCI7XG5pbXBvcnQge0J1dHRvbn0gZnJvbSBcIi4uL21vZGVsL0J1dHRvblwiO1xuaW1wb3J0IHtQb2ludGVyVG9vbH0gZnJvbSBcIi4vUG9pbnRlclRvb2xcIjtcbmltcG9ydCB7V2Fsa1Rvb2x9IGZyb20gXCIuL1dhbGtUb29sXCI7XG5pbXBvcnQge0NvbXBvbmVudENvbnRyb2xsZXJEZWZpbml0aW9ufSBmcm9tIFwiYWZyYW1lLXR5cGVzY3JpcHQtYm9pbGVycGxhdGVcIjtcblxuZXhwb3J0IGNsYXNzIFRlbGVwb3J0VG9vbCBleHRlbmRzIFBvaW50ZXJUb29sIHtcblxuICAgIHB1YmxpYyBzdGF0aWMgREVGSU5JVElPTiA9IG5ldyBDb21wb25lbnRDb250cm9sbGVyRGVmaW5pdGlvbihcInRlbGVwb3J0LXRvb2xcIiwge30sIGZhbHNlLCB0cnVlLCAoY29tcG9uZW50OiBDb21wb25lbnQsIGVudGl0eTogRW50aXR5LCBkYXRhOiBhbnkpID0+IG5ldyBUZWxlcG9ydFRvb2woY29tcG9uZW50LCBlbnRpdHksIGRhdGEpKTtcblxuICAgIGNvbnN0cnVjdG9yKGNvbXBvbmVudDogQ29tcG9uZW50LCBlbnRpdHk6IEVudGl0eSwgZGF0YTogYW55KSB7XG4gICAgICAgIHN1cGVyKGNvbXBvbmVudCwgZW50aXR5LCBkYXRhKTtcbiAgICAgICAgLy90aGlzLmludGVyZmFjZS5zZXRUb29sKFRvb2xTbG90LlBSSU1BUlksIHRoaXMpO1xuICAgICAgICB0aGlzLnJheWNhc3RlciA9IG5ldyBSYXljYXN0ZXIoKTtcbiAgICAgICAgdGhpcy5pbnRlcmZhY2UucmVnaXN0ZXJUb29sKHRoaXMpO1xuICAgICAgICB0aGlzLmludGVyZmFjZS5zbG90VG9vbChTbG90LlBSSU1BUlksIHRoaXMpO1xuICAgIH1cblxuICAgIGluaXQoKTogdm9pZCB7XG4gICAgICAgIC8vY29uc29sZS5sb2codGhpcy5jb21wb25lbnROYW1lICsgXCIgaW5pdFwiKTtcbiAgICAgICAgc3VwZXIuaW5pdCgpO1xuICAgIH1cblxuICAgIHRpY2sodGltZTogbnVtYmVyLCB0aW1lRGVsdGE6IG51bWJlcik6IHZvaWQge1xuICAgICAgICBzdXBlci50aWNrKHRpbWUsIHRpbWVEZWx0YSk7XG4gICAgfVxuXG4gICAgYnV0dG9uRG93bihkZXZpY2U6IERldmljZSwgdG9vbFNsb3Q6IFNsb3QsIGJ1dHRvbjogQnV0dG9uKTogdm9pZCB7XG4gICAgICAgIGlmICghdGhpcy5wcmVzc2VkLmhhcyhidXR0b24pKSB7XG5cbiAgICAgICAgfVxuICAgICAgICBzdXBlci5idXR0b25Eb3duKGRldmljZSwgdG9vbFNsb3QsIGJ1dHRvbik7XG4gICAgfVxuXG4gICAgYnV0dG9uVXAoZGV2aWNlOiBEZXZpY2UsIHRvb2xTbG90OiBTbG90LCBidXR0b246IEJ1dHRvbik6IHZvaWQge1xuICAgICAgICBpZiAodGhpcy5wcmVzc2VkLmhhcyhidXR0b24pKSB7XG4gICAgICAgICAgICBpZiAoYnV0dG9uID09IEJ1dHRvbi5UUklHR0VSKSB7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMucG9pbnRlZFBvc2l0aW9uKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IG1vdmVtZW50VG9vbDogV2Fsa1Rvb2wgPSB0aGlzLmludGVyZmFjZS5nZXRUb29sQXRTbG90KFNsb3QuV0FMSykgYXMgV2Fsa1Rvb2w7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuaW50ZXJmYWNlLmludGVyZmFjZUVudGl0eS5vYmplY3QzRC5wb3NpdGlvbi54ID0gdGhpcy5wb2ludGVkUG9zaXRpb24ueDtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5pbnRlcmZhY2UuaW50ZXJmYWNlRW50aXR5Lm9iamVjdDNELnBvc2l0aW9uLnkgPSB0aGlzLnBvaW50ZWRQb3NpdGlvbi55O1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmludGVyZmFjZS5pbnRlcmZhY2VFbnRpdHkub2JqZWN0M0QucG9zaXRpb24ueiA9IHRoaXMucG9pbnRlZFBvc2l0aW9uLno7XG4gICAgICAgICAgICAgICAgICAgIG1vdmVtZW50VG9vbC5zZXRDZW50ZXJPZk1hc3NGcm9tSW50ZXJmYWNlRW50aXR5KCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHN1cGVyLmJ1dHRvblVwKGRldmljZSwgdG9vbFNsb3QsIGJ1dHRvbik7XG4gICAgfVxuXG59XG5cblxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/browser/system/interface/tool/TeleportTool.ts\n");

/***/ }),

/***/ "./src/browser/system/interface/tool/ToolSelectorTool.ts":
/*!***************************************************************!*\
  !*** ./src/browser/system/interface/tool/ToolSelectorTool.ts ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Button_1 = __webpack_require__(/*! ../model/Button */ \"./src/browser/system/interface/model/Button.ts\");\nconst Slot_1 = __webpack_require__(/*! ../model/Slot */ \"./src/browser/system/interface/model/Slot.ts\");\nconst EntityActionEventDetail_1 = __webpack_require__(/*! ../../../model/EntityActionEventDetail */ \"./src/browser/model/EntityActionEventDetail.ts\");\nconst Events_1 = __webpack_require__(/*! ../../../model/Events */ \"./src/browser/model/Events.ts\");\nconst aframe_typescript_boilerplate_1 = __webpack_require__(/*! aframe-typescript-boilerplate */ \"./node_modules/aframe-typescript-boilerplate/built/index.js\");\nconst CodeRealityComponentController_1 = __webpack_require__(/*! ../../../component/CodeRealityComponentController */ \"./src/browser/component/CodeRealityComponentController.ts\");\nclass ToolSelectorTool extends CodeRealityComponentController_1.CodeRealityComponentController {\n    constructor(component, entity, data) {\n        super(component, entity, data);\n        this.toolSymbolEntities = new Map();\n        //console.log(this.componentName + \" init: \" + JSON.stringify(this.data));\n        this.interface.slotTool(Slot_1.Slot.PRIMARY_SELECTOR, this);\n    }\n    init() {\n        this.interface.registerSlotListener(Slot_1.Slot.PRIMARY, this);\n        aframe_typescript_boilerplate_1.addEntityEventListener(this.scene, \"enter-vr\", (detail) => {\n            const toolSelectorObject = this.entity.object3D;\n            const vrModePlaceholderObject = document.getElementById(\"tool-selector-vr-placeholder\");\n            const desktopModePlaceholderObject = document.getElementById(\"tool-selector-desktop-placeholder\");\n            if (vrModePlaceholderObject && desktopModePlaceholderObject) {\n                desktopModePlaceholderObject.object3D.remove(toolSelectorObject);\n                vrModePlaceholderObject.object3D.add(toolSelectorObject);\n            }\n            else {\n                console.warn(\"tool-selector placeholders not found.\");\n            }\n        });\n        aframe_typescript_boilerplate_1.addEntityEventListener(this.scene, \"exit-vr\", (detail) => {\n            const toolSelectorObject = this.entity.object3D;\n            const vrModePlaceholderObject = document.getElementById(\"tool-selector-vr-placeholder\");\n            const desktopModePlaceholderObject = document.getElementById(\"tool-selector-desktop-placeholder\");\n            if (vrModePlaceholderObject && desktopModePlaceholderObject) {\n                vrModePlaceholderObject.object3D.remove(toolSelectorObject);\n                desktopModePlaceholderObject.object3D.add(toolSelectorObject);\n            }\n            else {\n                console.warn(\"tool-selector placeholders not found.\");\n            }\n        });\n    }\n    update(data, oldData) {\n        //console.log(this.componentName + \" update: \" + JSON.stringify(this.data));\n    }\n    remove() {\n        //console.log(this.componentName + \" remove\");\n    }\n    pause() {\n        //console.log(this.componentName + \" pause\");\n    }\n    play() {\n        //console.log(this.componentName + \" play\");\n    }\n    tick(time, timeDelta) {\n    }\n    buttonDown(device, toolSlot, button) {\n    }\n    buttonUp(device, toolSlot, button) {\n        if (button === Button_1.Button.LEFT) {\n            this.interface.slotPreviousTool(Slot_1.Slot.PRIMARY);\n        }\n        if (button === Button_1.Button.RIGHT) {\n            this.interface.slotNextTool(Slot_1.Slot.PRIMARY);\n        }\n    }\n    stickTwist(device, toolSlot, stick, x, y) {\n    }\n    onToolSlotted(slot, toolName) {\n        if (!this.toolSymbolEntities.has(toolName)) {\n            const toolSymbolEntity = aframe_typescript_boilerplate_1.createElement('<a-entity gltf-model=\"#' + toolName + '\" visible=\"false\"></a-entity>');\n            this.entity.appendChild(toolSymbolEntity);\n            this.toolSymbolEntities.set(toolName, toolSymbolEntity);\n        }\n        if (this.currentToolName) {\n            this.toolSymbolEntities.get(this.currentToolName).setAttribute(\"visible\", false);\n        }\n        this.toolSymbolEntities.get(toolName).setAttribute(\"visible\", true);\n        this.currentToolName = toolName;\n        this.interface.interfaceEntity.dispatchEvent(new CustomEvent(Events_1.Events.EVENT_ACTION, { detail: new EntityActionEventDetail_1.EntityActionEventDetail(\"change-tool\", toolName) }));\n    }\n}\nToolSelectorTool.DEFINITION = new aframe_typescript_boilerplate_1.ComponentControllerDefinition(\"tool-selector-tool\", {}, false, false, (component, entity, data) => new ToolSelectorTool(component, entity, data));\nexports.ToolSelectorTool = ToolSelectorTool;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/browser/system/interface/tool/ToolSelectorTool.ts\n");

/***/ }),

/***/ "./src/browser/system/interface/tool/WalkTool.ts":
/*!*******************************************************!*\
  !*** ./src/browser/system/interface/tool/WalkTool.ts ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst three_1 = __webpack_require__(/*! three */ \"three\");\nconst EntityStateEventDetail_1 = __webpack_require__(/*! ../../../model/EntityStateEventDetail */ \"./src/browser/model/EntityStateEventDetail.ts\");\nconst Events_1 = __webpack_require__(/*! ../../../model/Events */ \"./src/browser/model/Events.ts\");\nconst Slot_1 = __webpack_require__(/*! ../model/Slot */ \"./src/browser/system/interface/model/Slot.ts\");\nconst Button_1 = __webpack_require__(/*! ../model/Button */ \"./src/browser/system/interface/model/Button.ts\");\nconst Stick_1 = __webpack_require__(/*! ../model/Stick */ \"./src/browser/system/interface/model/Stick.ts\");\nconst raycast_1 = __webpack_require__(/*! ../../../three/raycast */ \"./src/browser/three/raycast.ts\");\nconst aframe_typescript_boilerplate_1 = __webpack_require__(/*! aframe-typescript-boilerplate */ \"./node_modules/aframe-typescript-boilerplate/built/index.js\");\nconst CodeRealityComponentController_1 = __webpack_require__(/*! ../../../component/CodeRealityComponentController */ \"./src/browser/component/CodeRealityComponentController.ts\");\nclass WalkTool extends CodeRealityComponentController_1.CodeRealityComponentController {\n    constructor(component, entity, data) {\n        super(component, entity, data);\n        this.movementSpeed = 0;\n        this.rotationSpeed = 0;\n        this.height = 0;\n        this.width = 0;\n        this.jumpStartSpeed = 0;\n        this.minY = 0;\n        this.forwardKey = Button_1.Button.UP;\n        this.backwardKey = Button_1.Button.DOWN;\n        this.leftKey = Button_1.Button.LEFT;\n        this.rightKey = Button_1.Button.RIGHT;\n        this.jumpKey = Button_1.Button.TRIGGER;\n        this.yAxisPositive = new three_1.Vector3(0, 1, 0);\n        this.yAxisNegative = new three_1.Vector3(0, -1, 0);\n        this.xzPlane = new three_1.Plane(this.yAxisPositive);\n        this.jumping = false;\n        this.airborne = false;\n        this.time = 0;\n        this.yVelocity = 0;\n        this.pressed = new Map();\n        this.centerOfMassPosition = new three_1.Vector3(0, 0, 0);\n        this.highCenterOfMassPosition = new three_1.Vector3(0, 0, 0);\n        this.lowCenterOfMassPosition = new three_1.Vector3(0, 0, 0);\n        this.forwardPositionStep = new three_1.Vector3(0, 0, 0);\n        this.rightPositionStep = new three_1.Vector3(0, 0, 0);\n        this.forwardPosition = new three_1.Vector3(0, 0, 0);\n        this.backwardPosition = new three_1.Vector3(0, 0, 0);\n        this.rightPosition = new three_1.Vector3(0, 0, 0);\n        this.leftPosition = new three_1.Vector3(0, 0, 0);\n        this.stickTranslation = new three_1.Vector3(0, 0, 0);\n        this.stickRotation = new three_1.Vector3(0, 0, 0);\n        this.cameraDirection = new three_1.Vector3(0, 0, 0);\n        this.xzCameraDirection = new three_1.Vector3(0, 0, 0);\n        this.xDirection = new three_1.Vector3(0, 0, 0);\n        this.zDirection = new three_1.Vector3(0, 0, 0);\n        this.direction = new three_1.Vector3(0, 0, 0);\n        this.interface.registerTool(this);\n        this.interface.slotTool(Slot_1.Slot.WALK, this);\n    }\n    init() {\n        //console.log(this.componentName + \" init\");\n        // Configuration\n        this.movementSpeed = this.data.movementSpeed;\n        this.rotationSpeed = this.data.rotationSpeed;\n        this.minY = this.data.minY;\n        this.height = this.data.height;\n        this.width = this.data.width;\n        this.jumpStartSpeed = this.data.jumpStartSpeed;\n        // Utility objects\n        this.raycaster = new three_1.Raycaster();\n        // Constants\n        this.yAxisPositive = new three_1.Vector3(0, 1, 0);\n        this.yAxisNegative = new three_1.Vector3(0, -1, 0);\n        this.xzPlane = new three_1.Plane(this.yAxisPositive);\n        // State booleans\n        this.jumping = false;\n        this.airborne = false;\n        // State variables\n        this.time = 0;\n        this.yVelocity = 0;\n        this.cameraDirection = new three_1.Vector3(0, 0, 0);\n        this.xzCameraDirection = new three_1.Vector3(0, 0, 0);\n        this.xDirection = new three_1.Vector3(0, 0, 0);\n        this.zDirection = new three_1.Vector3(0, 0, 0);\n    }\n    setJumping(state) {\n        if (this.jumping !== state) {\n            this.jumping = state;\n            this.entityStateChange(\"jumping\", this.jumping);\n        }\n    }\n    setAirborne(state) {\n        if (this.airborne !== state) {\n            this.airborne = state;\n            this.entityStateChange(\"airborne\", this.airborne);\n        }\n    }\n    entityStateChange(state, enabled) {\n        if (enabled) {\n            this.interface.interfaceEntity.dispatchEvent(new CustomEvent(Events_1.Events.EVENT_STATE_BEGIN, { detail: new EntityStateEventDetail_1.EntityStateEventDetail(state) }));\n        }\n        else {\n            this.interface.interfaceEntity.dispatchEvent(new CustomEvent(Events_1.Events.EVENT_STATE_END, { detail: new EntityStateEventDetail_1.EntityStateEventDetail(state) }));\n        }\n    }\n    update(data, oldData) {\n    }\n    remove() {\n    }\n    pause() {\n    }\n    play() {\n        // Reused vector variables.\n        this.setCenterOfMassFromInterfaceEntity();\n    }\n    setCenterOfMassFromInterfaceEntity() {\n        this.centerOfMassPosition = new three_1.Vector3(0, 0, 0); // Center of mass for collision checks\n        this.centerOfMassPosition.x = this.interface.interfaceEntity.object3D.position.x;\n        this.centerOfMassPosition.y = this.interface.interfaceEntity.object3D.position.y + this.interface.getSelfScale() * this.height / 2;\n        this.centerOfMassPosition.z = this.interface.interfaceEntity.object3D.position.z;\n    }\n    tick(time, timeDelta) {\n        this.time = time;\n        if (timeDelta > 40) {\n            timeDelta = 40;\n        }\n        let collidables = this.interface.getCollidables();\n        let position = this.interface.interfaceEntity.object3D.position;\n        const x = this.centerOfMassPosition.x;\n        const z = this.centerOfMassPosition.z;\n        this.updateXZ(timeDelta, collidables);\n        const blocked = this.updateY(timeDelta, collidables);\n        if (blocked) {\n            this.centerOfMassPosition.x = x;\n            this.centerOfMassPosition.z = z;\n        }\n        else {\n            position.x = this.centerOfMassPosition.x;\n            position.z = this.centerOfMassPosition.z;\n        }\n        if (this.stickRotation.x != 0 || this.stickRotation.y != 0 || this.stickRotation.z != 0) {\n            let delta = this.rotationSpeed * timeDelta / 1000.0;\n            this.interface.interfaceEntity.object3D.rotation.y -= this.stickRotation.y * delta;\n        }\n    }\n    buttonDown(device, toolSlot, button) {\n        if (!this.pressed.has(button)) {\n            if (button == this.backwardKey) {\n                this.entityStateChange(\"backward\", true);\n                this.stickTranslation.x = -1;\n            }\n            if (button == this.forwardKey) {\n                this.entityStateChange(\"forward\", true);\n                this.stickTranslation.x = 1;\n            }\n            if (button == this.leftKey) {\n                this.entityStateChange(\"left\", true);\n                this.stickTranslation.z = -1;\n            }\n            if (button == this.rightKey) {\n                this.entityStateChange(\"right\", true);\n                this.stickTranslation.z = 1;\n            }\n        }\n        this.pressed.set(button, this.time);\n    }\n    buttonUp(device, toolSlot, button) {\n        if (this.pressed.has(button)) {\n            if (button == this.backwardKey) {\n                this.entityStateChange(\"backward\", false);\n                this.stickTranslation.x = 0;\n            }\n            if (button == this.forwardKey) {\n                this.entityStateChange(\"forward\", false);\n                this.stickTranslation.x = 0;\n            }\n            if (button == this.leftKey) {\n                this.entityStateChange(\"left\", false);\n                this.stickTranslation.z = 0;\n            }\n            if (button == this.rightKey) {\n                this.entityStateChange(\"right\", false);\n                this.stickTranslation.z = 0;\n            }\n            this.pressed.delete(button);\n        }\n    }\n    stickTwist(device, toolSlot, stick, x, y) {\n        if (stick == Stick_1.Stick.PRIMARY) {\n            this.stickTranslation.x = 1.5 * x;\n            this.stickTranslation.z = 1.5 * y;\n        }\n        if (stick == Stick_1.Stick.SECONDARY) {\n            this.stickRotation.x = 1.0 * x;\n            this.stickRotation.y = 1.0 * y;\n        }\n    }\n    updateXZ(timeDelta, collidables) {\n        this.computeXZDirectionFromCamera();\n        if (this.stickTranslation.x != 0 || this.stickTranslation.z != 0) {\n            let delta = this.interface.getSelfScale() * this.movementSpeed * timeDelta / 1000.0;\n            this.xDirection.copy(this.xzCameraDirection);\n            this.zDirection.copy(this.xzCameraDirection);\n            this.zDirection.cross(this.yAxisPositive);\n            this.xDirection.multiplyScalar(this.stickTranslation.x * delta);\n            this.zDirection.multiplyScalar(this.stickTranslation.z * delta);\n            this.direction.copy(this.xDirection);\n            this.direction.add(this.zDirection);\n            if (!this.testCollision(this.direction, collidables)) {\n                this.centerOfMassPosition.x += this.direction.x;\n                this.centerOfMassPosition.z += this.direction.z;\n            }\n        }\n    }\n    updateY(timeDelta, collidables) {\n        let position = this.interface.interfaceEntity.object3D.position;\n        //this.computeXZDirectionFromCamera();\n        this.forwardPositionStep.copy(this.xzCameraDirection);\n        this.forwardPositionStep.multiplyScalar(0.25 * this.width * this.interface.getSelfScale());\n        this.rightPositionStep.copy(this.xzCameraDirection);\n        this.rightPositionStep.cross(this.yAxisPositive);\n        this.rightPositionStep.multiplyScalar(0.25 * this.width * this.interface.getSelfScale());\n        this.forwardPosition.copy(this.centerOfMassPosition).add(this.forwardPositionStep);\n        this.backwardPosition.copy(this.centerOfMassPosition).add(this.forwardPositionStep.multiplyScalar(-1));\n        this.rightPosition.copy(this.centerOfMassPosition).add(this.rightPositionStep);\n        this.leftPosition.copy(this.centerOfMassPosition).add(this.rightPositionStep.multiplyScalar(-1));\n        const distanceToNearestBelow = this.findDistanceToNearestFromPositions([this.centerOfMassPosition,\n            this.forwardPosition,\n            this.backwardPosition,\n            this.rightPosition,\n            this.leftPosition\n        ], this.yAxisNegative, collidables);\n        //console.log(distanceToNearestBelow);\n        if (this.pressed.has(this.jumpKey) && !this.jumping && !this.airborne) {\n            this.setJumping(true);\n            this.yVelocity = this.interface.getSelfScale() * this.jumpStartSpeed;\n        }\n        let freeDropDelta = this.yVelocity * timeDelta / 1000.0;\n        let delta;\n        if (distanceToNearestBelow && !this.jumping) {\n            let distanceFromBottom = distanceToNearestBelow - this.interface.getSelfScale() * this.height / 2;\n            if (distanceFromBottom < 0 && -distanceFromBottom > this.height * this.interface.getSelfScale() * 0.25) {\n                // Too high obstacle to climb (greater than 0.25 height)\n                return true;\n            }\n            if (Math.abs(freeDropDelta) > Math.abs(distanceFromBottom) || Math.abs(distanceFromBottom) < 0.1 * this.interface.getSelfScale()) {\n                delta = -distanceFromBottom;\n                this.setAirborne(false);\n            }\n            else {\n                if (distanceFromBottom && distanceFromBottom < 0) {\n                    delta = -freeDropDelta;\n                }\n                else {\n                    delta = freeDropDelta;\n                }\n                this.setAirborne(true);\n            }\n        }\n        else {\n            delta = freeDropDelta;\n            this.setAirborne(true);\n        }\n        if (this.airborne) {\n            this.yVelocity -= this.interface.getSelfScale() * 9.81 * timeDelta / 1000.0;\n        }\n        else {\n            this.yVelocity = 0;\n        }\n        if (this.yVelocity < 0) {\n            this.setJumping(false);\n        }\n        this.centerOfMassPosition.y = this.centerOfMassPosition.y + delta;\n        if (this.centerOfMassPosition.y - this.interface.getSelfScale() * this.height / 2 < this.minY) {\n            this.centerOfMassPosition.y = this.minY + this.interface.getSelfScale() * this.height / 2;\n        }\n        position.y = this.centerOfMassPosition.y - this.interface.getSelfScale() * this.height / 2;\n        return false;\n    }\n    computeXZDirectionFromCamera() {\n        this.interface.cameraEntity.object3D.getWorldDirection(this.cameraDirection);\n        this.cameraDirection.multiplyScalar(-1);\n        this.xzPlane.projectPoint(this.cameraDirection, this.xzCameraDirection);\n        this.xzCameraDirection.normalize();\n    }\n    findDistanceToNearestFromPositions(positions, rayDirection, objects) {\n        const distances = positions.map(position => {\n            return this.findDistanceToNearestFromPosition(position, rayDirection, objects);\n        }).filter(distance => distance != null);\n        distances.sort(function sortNumber(a, b) {\n            return a - b;\n        });\n        if (distances.length > 0) {\n            return distances[0];\n        }\n        else {\n            return undefined;\n        }\n    }\n    findDistanceToNearestFromPosition(position, rayDirection, objects) {\n        this.raycaster.near = 0;\n        this.raycaster.far = this.height * this.interface.getSelfScale();\n        this.raycaster.set(position, rayDirection);\n        const caster = this.raycaster;\n        const intersects = raycast_1.raycast(objects, caster);\n        if (intersects.length > 0) {\n            return intersects[0].distance;\n        }\n        else {\n            return null;\n        }\n    }\n    testCollision(direction, objects) {\n        this.highCenterOfMassPosition.copy(this.centerOfMassPosition);\n        this.highCenterOfMassPosition.y += this.height * this.interface.getSelfScale() / 2;\n        this.lowCenterOfMassPosition.copy(this.centerOfMassPosition);\n        this.lowCenterOfMassPosition.y -= this.height * this.interface.getSelfScale() / 4;\n        let distanceToNearestAhead = this.findDistanceToNearestFromPositions([this.centerOfMassPosition,\n            this.highCenterOfMassPosition,\n            this.centerOfMassPosition,\n            this.lowCenterOfMassPosition\n        ], direction, objects);\n        let collisionAhead = distanceToNearestAhead && distanceToNearestAhead < this.interface.getSelfScale() * this.width / 2;\n        return collisionAhead;\n    }\n}\nWalkTool.DEFINITION = new aframe_typescript_boilerplate_1.ComponentControllerDefinition(\"walk-tool\", {\n    movementSpeed: { type: 'number', default: 2 },\n    rotationSpeed: { type: 'number', default: 1 },\n    height: { type: 'number', default: 2 },\n    width: { type: 'number', default: 0.5 },\n    jumpStartSpeed: { type: 'number', default: 5.0 },\n    minY: { type: 'number', default: -1 }\n}, false, true, (component, entity, data) => new WalkTool(component, entity, data));\nexports.WalkTool = WalkTool;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/browser/system/interface/tool/WalkTool.ts\n");

/***/ }),

/***/ "./src/browser/system/loader/LoaderSystemController.ts":
/*!*************************************************************!*\
  !*** ./src/browser/system/loader/LoaderSystemController.ts ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst three_1 = __webpack_require__(/*! three */ \"three\");\nconst aframe_typescript_boilerplate_1 = __webpack_require__(/*! aframe-typescript-boilerplate */ \"./node_modules/aframe-typescript-boilerplate/built/index.js\");\nclass LoaderSystemController extends aframe_typescript_boilerplate_1.AbstractSystemController {\n    constructor(system, scene, data) {\n        super(system, scene, data);\n        this.loadingCounter = 0;\n        this.added = false;\n        this.loaderGeometry = new three_1.SphereGeometry(1, 36, 18, 0, 2 * Math.PI, 0, Math.PI);\n        this.loaderMaterial = new three_1.MeshBasicMaterial({ color: 'white', side: three_1.DoubleSide, depthTest: false, transparent: true });\n        this.loaderObject = new three_1.Mesh(this.loaderGeometry, this.loaderMaterial);\n        this.sphereGeometry = new three_1.SphereGeometry(0.01, 36, 18, 0, 2 * Math.PI, 0, Math.PI);\n        this.sphereMaterial = new three_1.MeshBasicMaterial({ color: 'gray', depthTest: false, transparent: true });\n        this.sphereMesh1 = new three_1.Mesh(this.sphereGeometry, this.sphereMaterial);\n        this.sphereMesh2 = this.sphereMesh1.clone();\n        this.sphereMesh3 = this.sphereMesh1.clone();\n        this.progressTime = 0;\n        this.sceneEl = scene;\n        this.loaderObject.renderOrder = 1;\n        this.loaderObject.position.set(0, 0, 0);\n        this.sphereMesh1.position.set(-0.05, 0, -0.3);\n        this.sphereMesh1.renderOrder = 2;\n        this.sphereMesh2.position.set(0, 0, -0.3);\n        this.sphereMesh2.renderOrder = 2;\n        this.sphereMesh3.position.set(0.05, 0, -0.3);\n        this.sphereMesh3.renderOrder = 2;\n        this.loaderObject.add(this.sphereMesh1);\n        this.loaderObject.add(this.sphereMesh2);\n        this.loaderObject.add(this.sphereMesh3);\n    }\n    init() {\n    }\n    pause() {\n    }\n    play() {\n    }\n    tick(time, timeDelta) {\n        this.progressTime += timeDelta < 25 ? timeDelta : 25;\n        if (this.loadingCounter > 0) {\n            if (!this.added) {\n                this.added = true;\n                this.sceneEl.camera.add(this.loaderObject);\n            }\n            this.sphereMesh1.visible = Math.floor(this.progressTime / 150) % 3 == 0;\n            this.sphereMesh2.visible = Math.floor(this.progressTime / 150) % 3 == 1;\n            this.sphereMesh3.visible = Math.floor(this.progressTime / 150) % 3 == 2;\n        }\n        else {\n            if (this.added) {\n                this.added = false;\n                this.sceneEl.camera.remove(this.loaderObject);\n            }\n        }\n    }\n    increaseLoadingCounter() {\n        this.loadingCounter++;\n        console.log(\"loading counter increase: \" + this.loadingCounter);\n    }\n    ;\n    decreaseLoadingCounter() {\n        if (this.loadingCounter == 0) {\n            console.warn(\"Notify loaded attempting to drop loading counter lower than zero.\");\n        }\n        this.loadingCounter--;\n        console.log(\"loading counter decrease: \" + this.loadingCounter);\n    }\n    ;\n}\nLoaderSystemController.DEFINITION = new aframe_typescript_boilerplate_1.SystemControllerDefinition(\"loader-system\", {}, (system, scene, data) => new LoaderSystemController(system, scene, data));\nexports.LoaderSystemController = LoaderSystemController;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/browser/system/loader/LoaderSystemController.ts\n");

/***/ }),

/***/ "./src/browser/system/merge/MergeController.ts":
/*!*****************************************************!*\
  !*** ./src/browser/system/merge/MergeController.ts ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst aframe_typescript_boilerplate_1 = __webpack_require__(/*! aframe-typescript-boilerplate */ \"./node_modules/aframe-typescript-boilerplate/built/index.js\");\nclass MergeController extends aframe_typescript_boilerplate_1.AbstractComponentController {\n    constructor(component, entity, data) {\n        super(component, entity, data);\n        this.mergeSystem = aframe_typescript_boilerplate_1.getSystemController(this.entity.sceneEl, \"merge\");\n    }\n    init() {\n        //console.log(this.componentName + \" init: \" + JSON.stringify(this.data));\n        this.mergeSystem.addMerge(this.entity);\n    }\n    update(data, oldData) {\n        //console.log(this.componentName + \" update: \" + JSON.stringify(this.data));\n    }\n    remove() {\n        this.mergeSystem.removeMerge(this.entity);\n        //console.log(this.componentName + \" remove\");\n    }\n    pause() {\n        //console.log(this.componentName + \" pause\");\n    }\n    play() {\n        //console.log(this.componentName + \" play\");\n    }\n    tick(time, timeDelta) {\n    }\n}\nMergeController.DEFINITION = new aframe_typescript_boilerplate_1.ComponentControllerDefinition(\"merge\", {}, false, false, (component, entity, data) => new MergeController(component, entity, data));\nexports.MergeController = MergeController;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9zeXN0ZW0vbWVyZ2UvTWVyZ2VDb250cm9sbGVyLnRzPzQwMWMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFFQSxnS0FJdUM7QUFFdkMsTUFBYSxlQUFnQixTQUFRLDJEQUEyQjtJQU01RCxZQUFZLFNBQW9CLEVBQUUsTUFBYyxFQUFFLElBQVM7UUFDdkQsS0FBSyxDQUFDLFNBQVMsRUFBRSxNQUFNLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFFL0IsSUFBSSxDQUFDLFdBQVcsR0FBRyxtREFBbUIsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLE9BQVMsRUFBRSxPQUFPLENBQUMsQ0FBQztJQUMzRSxDQUFDO0lBRUQsSUFBSTtRQUNBLDBFQUEwRTtRQUMxRSxJQUFJLENBQUMsV0FBVyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDM0MsQ0FBQztJQUVELE1BQU0sQ0FBQyxJQUFTLEVBQUUsT0FBWTtRQUMxQiw0RUFBNEU7SUFDaEYsQ0FBQztJQUVELE1BQU07UUFDRixJQUFJLENBQUMsV0FBVyxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDMUMsOENBQThDO0lBQ2xELENBQUM7SUFFRCxLQUFLO1FBQ0QsNkNBQTZDO0lBQ2pELENBQUM7SUFFRCxJQUFJO1FBQ0EsNENBQTRDO0lBQ2hELENBQUM7SUFFRCxJQUFJLENBQUMsSUFBWSxFQUFFLFNBQWlCO0lBQ3BDLENBQUM7O0FBL0JhLDBCQUFVLEdBQUcsSUFBSSw2REFBNkIsQ0FBQyxPQUFPLEVBQUUsRUFBRSxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsQ0FBQyxTQUFvQixFQUFFLE1BQWMsRUFBRSxJQUFTLEVBQUUsRUFBRSxDQUFDLElBQUksZUFBZSxDQUFDLFNBQVMsRUFBRSxNQUFNLEVBQUUsSUFBSSxDQUFDLENBQUMsQ0FBQztBQUovTCwwQ0FxQ0MiLCJmaWxlIjoiLi9zcmMvYnJvd3Nlci9zeXN0ZW0vbWVyZ2UvTWVyZ2VDb250cm9sbGVyLnRzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDb21wb25lbnQsIEVudGl0eX0gZnJvbSBcImFmcmFtZVwiO1xuaW1wb3J0IHtNZXJnZVN5c3RlbUNvbnRyb2xsZXJ9IGZyb20gXCIuL01lcmdlU3lzdGVtQ29udHJvbGxlclwiO1xuaW1wb3J0IHtcbiAgICBBYnN0cmFjdENvbXBvbmVudENvbnRyb2xsZXIsXG4gICAgQ29tcG9uZW50Q29udHJvbGxlckRlZmluaXRpb24sXG4gICAgZ2V0U3lzdGVtQ29udHJvbGxlclxufSBmcm9tIFwiYWZyYW1lLXR5cGVzY3JpcHQtYm9pbGVycGxhdGVcIjtcblxuZXhwb3J0IGNsYXNzIE1lcmdlQ29udHJvbGxlciBleHRlbmRzIEFic3RyYWN0Q29tcG9uZW50Q29udHJvbGxlciB7XG5cbiAgICByZWFkb25seSBtZXJnZVN5c3RlbTogTWVyZ2VTeXN0ZW1Db250cm9sbGVyO1xuXG4gICAgcHVibGljIHN0YXRpYyBERUZJTklUSU9OID0gbmV3IENvbXBvbmVudENvbnRyb2xsZXJEZWZpbml0aW9uKFwibWVyZ2VcIiwge30sIGZhbHNlLCBmYWxzZSwgKGNvbXBvbmVudDogQ29tcG9uZW50LCBlbnRpdHk6IEVudGl0eSwgZGF0YTogYW55KSA9PiBuZXcgTWVyZ2VDb250cm9sbGVyKGNvbXBvbmVudCwgZW50aXR5LCBkYXRhKSk7XG5cbiAgICBjb25zdHJ1Y3Rvcihjb21wb25lbnQ6IENvbXBvbmVudCwgZW50aXR5OiBFbnRpdHksIGRhdGE6IGFueSkge1xuICAgICAgICBzdXBlcihjb21wb25lbnQsIGVudGl0eSwgZGF0YSk7XG5cbiAgICAgICAgdGhpcy5tZXJnZVN5c3RlbSA9IGdldFN5c3RlbUNvbnRyb2xsZXIodGhpcy5lbnRpdHkuc2NlbmVFbCEhLCBcIm1lcmdlXCIpO1xuICAgIH1cblxuICAgIGluaXQoKTogdm9pZCB7XG4gICAgICAgIC8vY29uc29sZS5sb2codGhpcy5jb21wb25lbnROYW1lICsgXCIgaW5pdDogXCIgKyBKU09OLnN0cmluZ2lmeSh0aGlzLmRhdGEpKTtcbiAgICAgICAgdGhpcy5tZXJnZVN5c3RlbS5hZGRNZXJnZSh0aGlzLmVudGl0eSk7XG4gICAgfVxuXG4gICAgdXBkYXRlKGRhdGE6IGFueSwgb2xkRGF0YTogYW55KTogdm9pZCB7XG4gICAgICAgIC8vY29uc29sZS5sb2codGhpcy5jb21wb25lbnROYW1lICsgXCIgdXBkYXRlOiBcIiArIEpTT04uc3RyaW5naWZ5KHRoaXMuZGF0YSkpO1xuICAgIH1cblxuICAgIHJlbW92ZSgpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5tZXJnZVN5c3RlbS5yZW1vdmVNZXJnZSh0aGlzLmVudGl0eSk7XG4gICAgICAgIC8vY29uc29sZS5sb2codGhpcy5jb21wb25lbnROYW1lICsgXCIgcmVtb3ZlXCIpO1xuICAgIH1cblxuICAgIHBhdXNlKCk6IHZvaWQge1xuICAgICAgICAvL2NvbnNvbGUubG9nKHRoaXMuY29tcG9uZW50TmFtZSArIFwiIHBhdXNlXCIpO1xuICAgIH1cblxuICAgIHBsYXkoKTogdm9pZCB7XG4gICAgICAgIC8vY29uc29sZS5sb2codGhpcy5jb21wb25lbnROYW1lICsgXCIgcGxheVwiKTtcbiAgICB9XG5cbiAgICB0aWNrKHRpbWU6IG51bWJlciwgdGltZURlbHRhOiBudW1iZXIpOiB2b2lkIHtcbiAgICB9XG5cbn1cblxuXG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/browser/system/merge/MergeController.ts\n");

/***/ }),

/***/ "./src/browser/system/merge/MergeData.ts":
/*!***********************************************!*\
  !*** ./src/browser/system/merge/MergeData.ts ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst merge_util_1 = __webpack_require__(/*! ../../three/merge_util */ \"./src/browser/three/merge_util.ts\");\nclass MergeData {\n    constructor(entity) {\n        this.childEntities = new Set();\n        this.loadingChildEntities = new Set();\n        this.mergingChildEntities = new Set();\n        this.removingChildEntities = new Set();\n        this.updatingChildEntities = new Set();\n        this.objectMerge = new merge_util_1.ObjectMerge();\n        this.lastModificationTimeMillis = 1;\n        this.lastMergeTimeMillis = 0;\n        this.entity = entity;\n    }\n}\nexports.MergeData = MergeData;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9zeXN0ZW0vbWVyZ2UvTWVyZ2VEYXRhLnRzPzZmNTQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFFQSw0R0FBbUQ7QUFFbkQsTUFBYSxTQUFTO0lBaUJsQixZQUFZLE1BQWM7UUFiMUIsa0JBQWEsR0FBZ0IsSUFBSSxHQUFHLEVBQVUsQ0FBQztRQUMvQyx5QkFBb0IsR0FBZ0IsSUFBSSxHQUFHLEVBQVUsQ0FBQztRQUN0RCx5QkFBb0IsR0FBZ0IsSUFBSSxHQUFHLEVBQVUsQ0FBQztRQUN0RCwwQkFBcUIsR0FBZ0IsSUFBSSxHQUFHLEVBQVUsQ0FBQztRQUN2RCwwQkFBcUIsR0FBZ0IsSUFBSSxHQUFHLEVBQVUsQ0FBQztRQUl2RCxnQkFBVyxHQUFnQixJQUFJLHdCQUFXLEVBQUUsQ0FBQztRQUU3QywrQkFBMEIsR0FBRyxDQUFDLENBQUM7UUFDL0Isd0JBQW1CLEdBQUcsQ0FBQyxDQUFDO1FBR3BCLElBQUksQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDO0lBQ3pCLENBQUM7Q0FFSjtBQXJCRCw4QkFxQkMiLCJmaWxlIjoiLi9zcmMvYnJvd3Nlci9zeXN0ZW0vbWVyZ2UvTWVyZ2VEYXRhLnRzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtFbnRpdHl9IGZyb20gXCJhZnJhbWVcIjtcbmltcG9ydCB7R3JvdXAsIE9iamVjdDNEfSBmcm9tIFwidGhyZWVcIjtcbmltcG9ydCB7T2JqZWN0TWVyZ2V9IGZyb20gXCIuLi8uLi90aHJlZS9tZXJnZV91dGlsXCI7XG5cbmV4cG9ydCBjbGFzcyBNZXJnZURhdGEge1xuXG4gICAgZW50aXR5OiBFbnRpdHk7XG5cbiAgICBjaGlsZEVudGl0aWVzOiBTZXQ8RW50aXR5PiA9IG5ldyBTZXQ8RW50aXR5PigpO1xuICAgIGxvYWRpbmdDaGlsZEVudGl0aWVzOiBTZXQ8RW50aXR5PiA9IG5ldyBTZXQ8RW50aXR5PigpO1xuICAgIG1lcmdpbmdDaGlsZEVudGl0aWVzOiBTZXQ8RW50aXR5PiA9IG5ldyBTZXQ8RW50aXR5PigpO1xuICAgIHJlbW92aW5nQ2hpbGRFbnRpdGllczogU2V0PEVudGl0eT4gPSBuZXcgU2V0PEVudGl0eT4oKTtcbiAgICB1cGRhdGluZ0NoaWxkRW50aXRpZXM6IFNldDxFbnRpdHk+ID0gbmV3IFNldDxFbnRpdHk+KCk7XG5cbiAgICBncm91cDogR3JvdXAgfCB1bmRlZmluZWQ7XG5cbiAgICBvYmplY3RNZXJnZTogT2JqZWN0TWVyZ2UgPSBuZXcgT2JqZWN0TWVyZ2UoKTtcblxuICAgIGxhc3RNb2RpZmljYXRpb25UaW1lTWlsbGlzID0gMTtcbiAgICBsYXN0TWVyZ2VUaW1lTWlsbGlzID0gMDtcblxuICAgIGNvbnN0cnVjdG9yKGVudGl0eTogRW50aXR5KSB7XG4gICAgICAgIHRoaXMuZW50aXR5ID0gZW50aXR5O1xuICAgIH1cblxufSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/browser/system/merge/MergeData.ts\n");

/***/ }),

/***/ "./src/browser/system/merge/MergeSystemController.ts":
/*!***********************************************************!*\
  !*** ./src/browser/system/merge/MergeSystemController.ts ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst MergeData_1 = __webpack_require__(/*! ./MergeData */ \"./src/browser/system/merge/MergeData.ts\");\nconst three_1 = __webpack_require__(/*! three */ \"three\");\nconst merge_util_1 = __webpack_require__(/*! ../../three/merge_util */ \"./src/browser/three/merge_util.ts\");\nconst aframe_typescript_boilerplate_1 = __webpack_require__(/*! aframe-typescript-boilerplate */ \"./node_modules/aframe-typescript-boilerplate/built/index.js\");\nclass MergeSystemController extends aframe_typescript_boilerplate_1.AbstractSystemController {\n    constructor(system, scene, data) {\n        super(system, scene, data);\n        this.merges = new Map();\n        this.startTime = 0;\n        this.loadingRegistered = false;\n        this.merging = false;\n        this.niceTimeoutCounter = 0;\n    }\n    init() {\n        //        (this.getSystemController(\"loader-system\") as LoaderSystemController).increaseLoadingCounter();\n        this.startTime = new Date().getTime();\n    }\n    pause() {\n    }\n    play() {\n    }\n    tick(time, timeDelta) {\n        /*const timeMillis = new Date().getTime();\n        for (const merge of this.merges.values()) {\n            if (merge.lastMergeTimeMillis != 0 && merge.lastModificationTimeMillis > merge.lastMergeTimeMillis && timeMillis - merge.lastModificationTimeMillis > 60000) {\n                this.merge(merge);\n            }\n        }\n        */\n        let loading = new Date().getTime() - this.startTime < 3000;\n        for (const merge of this.merges.values()) {\n            if (this.merging || merge.loadingChildEntities.size > 3 || merge.mergingChildEntities.size > 3) {\n                loading = true;\n            }\n        }\n        if (loading) {\n            if (!this.loadingRegistered) {\n                this.loadingRegistered = true;\n                this.getSystemController(\"loader-system\").increaseLoadingCounter();\n                console.log(\"merge system increases loading counter.\");\n            }\n        }\n        else {\n            if (this.loadingRegistered) {\n                this.getSystemController(\"loader-system\").decreaseLoadingCounter();\n                this.loadingRegistered = false;\n                console.log(\"merge system decreases loading counter.\");\n            }\n        }\n    }\n    addMerge(mergeEntity) {\n        //console.log(\"merge added.\");\n        if (!this.merges.has(mergeEntity)) {\n            this.merges.set(mergeEntity, new MergeData_1.MergeData(mergeEntity));\n        }\n    }\n    addLoadingMergeChild(mergeEntity, mergeChildEntity) {\n        ////console.log(\"merge child loading...\");\n        if (!this.merges.has(mergeEntity)) {\n            this.merges.set(mergeEntity, new MergeData_1.MergeData(mergeEntity));\n        }\n        const merge = this.merges.get(mergeEntity);\n        merge.lastModificationTimeMillis = new Date().getTime();\n        merge.childEntities.add(mergeChildEntity);\n        merge.loadingChildEntities.add(mergeChildEntity);\n    }\n    setMergeChildLoaded(mergeEntity, mergeChildEntity) {\n        ////console.log(\"merge child loaded.\");\n        const merge = this.merges.get(mergeEntity);\n        if (!merge) {\n            return;\n        }\n        merge.loadingChildEntities.delete(mergeChildEntity);\n        merge.mergingChildEntities.add(mergeChildEntity);\n        if (merge.loadingChildEntities.size > 0) {\n            ////console.log(\"merge child entities still loading: \" + merge.loadingChildEntities.size);\n            return;\n        }\n        //console.log(\"merge child entities loaded.\");\n        //if (merge.lastMergeTimeMillis == 0) {\n        this.merge(merge);\n        //}\n    }\n    merge(merge) {\n        if (this.merging) {\n            return;\n        }\n        this.merging = true;\n        //console.log(\"merging...\");\n        const startTimeMillis = new Date().getTime();\n        // Collect objects to merge.\n        this.collectObjectsToMerge(merge).then((objectsToMerge) => {\n            merge.mergingChildEntities.clear();\n            //console.log(\"merging object...\");\n            merge_util_1.mergeObject3Ds(merge.objectMerge, objectsToMerge).then(() => {\n                if (!merge.group) {\n                    merge.group = merge.objectMerge.group;\n                    merge.entity.object3D.add(merge.group);\n                }\n                merge.lastMergeTimeMillis = new Date().getTime();\n                //console.log(\"merge done: \" + (new Date().getTime() - startTimeMillis) + \" ms.\");\n                this.merging = false;\n                //                (this.getSystemController(\"loader-system\") as LoaderSystemController).decreaseLoadingCounter();\n            });\n        });\n    }\n    collectObjectsToMerge(merge) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const objectsToMerge = new Array();\n            //console.log(\"collecting objects to merge from child entities: \" + merge.mergingChildEntities.size);\n            for (const entity of merge.mergingChildEntities) {\n                const clone = yield this.cloneObjectToMergeWithWait(entity, merge);\n                objectsToMerge.push(clone);\n            }\n            return objectsToMerge;\n        });\n    }\n    cloneObjectToMergeWithWait(entity, merge) {\n        return new Promise((resolve, reject) => {\n            const originalObject = entity.object3D;\n            this.allocateMergeObjectIndex(merge.objectMerge, originalObject);\n            originalObject.visible = false;\n            const clone = this.cloneAndSwitchToRegionCoordinates(originalObject, merge);\n            this.niceTimeoutCounter++;\n            if (this.niceTimeoutCounter % 25 == 0) {\n                setTimeout(() => {\n                    resolve(clone);\n                }, 1);\n            }\n            else {\n                resolve(clone);\n            }\n        });\n    }\n    allocateMergeObjectIndex(objectMerge, object) {\n        object.userData.mergeObjectIndex = objectMerge.objectOffset;\n        objectMerge.objectOffset++;\n        if (object.children) {\n            for (const child of object.children) {\n                this.allocateMergeObjectIndex(objectMerge, child);\n            }\n        }\n    }\n    remove(merge) {\n        const startTimeMillis = new Date().getTime();\n        merge.lastMergeTimeMillis = startTimeMillis;\n        //console.log(\"removing from merge...\");\n        //console.log(\"child entities to remove size: \" + merge.removingChildEntities.size);\n        // Collect objects to merge.\n        const objectsToRemove = new Array();\n        for (const entity of merge.removingChildEntities) {\n            const originalObject = entity.object3D;\n            originalObject.visible = true;\n            objectsToRemove.push(originalObject);\n        }\n        merge.removingChildEntities.clear();\n        merge_util_1.clearObject3Ds(merge.objectMerge, objectsToRemove).then(() => {\n            //console.log(\"removing from merge done: \" + (new Date().getTime() - startTimeMillis) + \" ms.\");\n        });\n    }\n    update(merge) {\n        const startTimeMillis = new Date().getTime();\n        merge.lastMergeTimeMillis = startTimeMillis;\n        //console.log(\"updating merge...\");\n        //console.log(\"child entities to update size: \" + merge.updatingChildEntities.size);\n        // Collect objects to merge.\n        const objectsToUpdate = new Array();\n        for (const entity of merge.updatingChildEntities) {\n            const originalObject = entity.object3D;\n            const objectToMerge = this.cloneAndSwitchToRegionCoordinates(originalObject, merge);\n            objectsToUpdate.push(objectToMerge);\n        }\n        merge.updatingChildEntities.clear();\n        merge_util_1.updateObject3Ds(merge.objectMerge, objectsToUpdate).then(() => {\n            //console.log(\"updating merge done: \" + (new Date().getTime() - startTimeMillis) + \" ms.\");\n        });\n    }\n    cloneAndSwitchToRegionCoordinates(object, merge) {\n        // Clone object to merge and setup coordinates.\n        //const objectToMerge = originalObject;\n        const clone = merge_util_1.cloneObject3D(object);\n        // Transfer to world coordinates as clone does not have parent\n        // get world position\n        let position = new three_1.Vector3();\n        object.updateMatrixWorld(true);\n        position.setFromMatrixPosition(object.matrixWorld);\n        // convert to merge entity world local coordinates\n        merge.entity.object3D.updateMatrixWorld(true);\n        position = merge.entity.object3D.worldToLocal(position);\n        clone.position.x = position.x;\n        clone.position.y = position.y;\n        clone.position.z = position.z;\n        return clone;\n    }\n    removeMergeChild(mergeEntity, mergeChildEntity) {\n        ////console.log(\"merge child remove.\");\n        if (this.merges.has(mergeEntity)) {\n            const merge = this.merges.get(mergeEntity);\n            merge.childEntities.delete(mergeChildEntity);\n            merge.loadingChildEntities.delete(mergeChildEntity);\n            merge.removingChildEntities.add(mergeChildEntity);\n            this.remove(merge);\n        }\n    }\n    updateMergeChild(mergeEntity, mergeChildEntity) {\n        ////console.log(\"merge child remove.\");\n        if (this.merges.has(mergeEntity)) {\n            const merge = this.merges.get(mergeEntity);\n            merge.updatingChildEntities.add(mergeChildEntity);\n            this.update(merge);\n        }\n    }\n    removeMerge(mergeEntity) {\n        //console.log(\"merge remove.\");\n        const merge = this.merges.get(mergeEntity);\n        if (merge) {\n            this.merges.delete(mergeEntity);\n            // Remove old merge object.\n            if (merge.group) {\n                merge.entity.object3D.remove(merge.group);\n            }\n        }\n    }\n}\nMergeSystemController.DEFINITION = new aframe_typescript_boilerplate_1.SystemControllerDefinition(\"merge\", {}, (system, scene, data) => new MergeSystemController(system, scene, data));\nexports.MergeSystemController = MergeSystemController;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9zeXN0ZW0vbWVyZ2UvTWVyZ2VTeXN0ZW1Db250cm9sbGVyLnRzPzM3NTAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUVBLHNHQUFzQztBQUN0QywwREFBOEM7QUFDOUMsNEdBQW1IO0FBRW5ILGdLQUFtRztBQUVuRyxNQUFhLHFCQUFzQixTQUFRLHdEQUF3QjtJQVkvRCxZQUFZLE1BQWMsRUFBRSxLQUFZLEVBQUUsSUFBUztRQUMvQyxLQUFLLENBQUMsTUFBTSxFQUFFLEtBQUssRUFBRSxJQUFJLENBQUMsQ0FBQztRQVh0QixXQUFNLEdBQUcsSUFBSSxHQUFHLEVBQXFCLENBQUM7UUFDL0MsY0FBUyxHQUFHLENBQUMsQ0FBQztRQUNkLHNCQUFpQixHQUFHLEtBQUssQ0FBQztRQWdHMUIsWUFBTyxHQUFHLEtBQUssQ0FBQztRQStDaEIsdUJBQWtCLEdBQUcsQ0FBQyxDQUFDO0lBcEl2QixDQUFDO0lBRUQsSUFBSTtRQUNSLHlHQUF5RztRQUNqRyxJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksSUFBSSxFQUFFLENBQUMsT0FBTyxFQUFFLENBQUM7SUFDMUMsQ0FBQztJQUVELEtBQUs7SUFDTCxDQUFDO0lBRUQsSUFBSTtJQUNKLENBQUM7SUFFRCxJQUFJLENBQUMsSUFBWSxFQUFFLFNBQWlCO1FBQ2hDOzs7Ozs7VUFNRTtRQUNGLElBQUksT0FBTyxHQUFHLElBQUksSUFBSSxFQUFFLENBQUMsT0FBTyxFQUFFLEdBQUcsSUFBSSxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUM7UUFFM0QsS0FBSyxNQUFNLEtBQUssSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sRUFBRSxFQUFFO1lBQ3RDLElBQUksSUFBSSxDQUFDLE9BQU8sSUFBRyxLQUFLLENBQUMsb0JBQW9CLENBQUMsSUFBSSxHQUFHLENBQUMsSUFBSSxLQUFLLENBQUMsb0JBQW9CLENBQUMsSUFBSSxHQUFHLENBQUMsRUFBRTtnQkFDM0YsT0FBTyxHQUFHLElBQUksQ0FBQzthQUNsQjtTQUNKO1FBQ0QsSUFBSSxPQUFPLEVBQUU7WUFDVCxJQUFJLENBQUMsSUFBSSxDQUFDLGlCQUFpQixFQUFFO2dCQUN6QixJQUFJLENBQUMsaUJBQWlCLEdBQUcsSUFBSSxDQUFDO2dCQUM3QixJQUFJLENBQUMsbUJBQW1CLENBQUMsZUFBZSxDQUE0QixDQUFDLHNCQUFzQixFQUFFLENBQUM7Z0JBQy9GLE9BQU8sQ0FBQyxHQUFHLENBQUMseUNBQXlDLENBQUMsQ0FBQzthQUMxRDtTQUNKO2FBQU07WUFDSCxJQUFJLElBQUksQ0FBQyxpQkFBaUIsRUFBRTtnQkFDdkIsSUFBSSxDQUFDLG1CQUFtQixDQUFDLGVBQWUsQ0FBNEIsQ0FBQyxzQkFBc0IsRUFBRSxDQUFDO2dCQUMvRixJQUFJLENBQUMsaUJBQWlCLEdBQUcsS0FBSyxDQUFDO2dCQUMvQixPQUFPLENBQUMsR0FBRyxDQUFDLHlDQUF5QyxDQUFDLENBQUM7YUFDMUQ7U0FDSjtJQUVMLENBQUM7SUFFRCxRQUFRLENBQUMsV0FBbUI7UUFDeEIsOEJBQThCO1FBQzlCLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxXQUFXLENBQUMsRUFBRTtZQUMvQixJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxXQUFXLEVBQUUsSUFBSSxxQkFBUyxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUM7U0FDNUQ7SUFDTCxDQUFDO0lBRUQsb0JBQW9CLENBQUMsV0FBbUIsRUFBRSxnQkFBd0I7UUFDOUQsMENBQTBDO1FBQzFDLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxXQUFXLENBQUMsRUFBRTtZQUMvQixJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxXQUFXLEVBQUUsSUFBSSxxQkFBUyxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUM7U0FDNUQ7UUFDRCxNQUFNLEtBQUssR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxXQUFXLENBQUcsQ0FBQztRQUM3QyxLQUFLLENBQUMsMEJBQTBCLEdBQUcsSUFBSSxJQUFJLEVBQUUsQ0FBQyxPQUFPLEVBQUUsQ0FBQztRQUN4RCxLQUFLLENBQUMsYUFBYSxDQUFDLEdBQUcsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO1FBQzFDLEtBQUssQ0FBQyxvQkFBb0IsQ0FBQyxHQUFHLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztJQUNyRCxDQUFDO0lBRUQsbUJBQW1CLENBQUMsV0FBbUIsRUFBRSxnQkFBd0I7UUFDN0QsdUNBQXVDO1FBQ3ZDLE1BQU0sS0FBSyxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLFdBQVcsQ0FBRyxDQUFDO1FBQzdDLElBQUksQ0FBQyxLQUFLLEVBQUU7WUFDUixPQUFPO1NBQ1Y7UUFFRCxLQUFLLENBQUMsb0JBQW9CLENBQUMsTUFBTSxDQUFDLGdCQUFnQixDQUFDLENBQUM7UUFDcEQsS0FBSyxDQUFDLG9CQUFvQixDQUFDLEdBQUcsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO1FBQ2pELElBQUksS0FBSyxDQUFDLG9CQUFvQixDQUFDLElBQUksR0FBRyxDQUFDLEVBQUU7WUFDckMsMEZBQTBGO1lBQzFGLE9BQU87U0FDVjtRQUVELDhDQUE4QztRQUc5Qyx1Q0FBdUM7UUFDdkMsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUNsQixHQUFHO0lBRVAsQ0FBQztJQUlPLEtBQUssQ0FBQyxLQUFnQjtRQUUxQixJQUFJLElBQUksQ0FBQyxPQUFPLEVBQUU7WUFDZCxPQUFPO1NBQ1Y7UUFFRCxJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQztRQUVwQiw0QkFBNEI7UUFFNUIsTUFBTSxlQUFlLEdBQUcsSUFBSSxJQUFJLEVBQUUsQ0FBQyxPQUFPLEVBQUUsQ0FBQztRQUU3Qyw0QkFBNEI7UUFDNUIsSUFBSSxDQUFDLHFCQUFxQixDQUFDLEtBQUssQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLGNBQWMsRUFBRSxFQUFFO1lBQ3RELEtBQUssQ0FBQyxvQkFBb0IsQ0FBQyxLQUFLLEVBQUUsQ0FBQztZQUVuQyxtQ0FBbUM7WUFDbkMsMkJBQWMsQ0FBQyxLQUFLLENBQUMsV0FBVyxFQUFFLGNBQWMsQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUU7Z0JBQ3hELElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxFQUFFO29CQUNkLEtBQUssQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDLFdBQVcsQ0FBQyxLQUFLLENBQUM7b0JBQ3RDLEtBQUssQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUM7aUJBQzFDO2dCQUVELEtBQUssQ0FBQyxtQkFBbUIsR0FBRyxJQUFJLElBQUksRUFBRSxDQUFDLE9BQU8sRUFBRSxDQUFDO2dCQUNqRCxrRkFBa0Y7Z0JBRWxGLElBQUksQ0FBQyxPQUFPLEdBQUcsS0FBSyxDQUFDO2dCQUVyQyxpSEFBaUg7WUFDckcsQ0FBQyxDQUFDLENBQUM7UUFDUCxDQUFDLENBQUMsQ0FBQztJQUdQLENBQUM7SUFFYSxxQkFBcUIsQ0FBQyxLQUFnQjs7WUFDaEQsTUFBTSxjQUFjLEdBQUcsSUFBSSxLQUFLLEVBQVksQ0FBQztZQUM3QyxxR0FBcUc7WUFDckcsS0FBSyxNQUFNLE1BQU0sSUFBSSxLQUFLLENBQUMsb0JBQW9CLEVBQUU7Z0JBQzdDLE1BQU0sS0FBSyxHQUFHLE1BQU0sSUFBSSxDQUFDLDBCQUEwQixDQUFDLE1BQU0sRUFBRSxLQUFLLENBQUMsQ0FBQztnQkFDbkUsY0FBYyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQzthQUM5QjtZQUNELE9BQU8sY0FBYyxDQUFDO1FBQzFCLENBQUM7S0FBQTtJQUlPLDBCQUEwQixDQUFDLE1BQWMsRUFBRSxLQUFnQjtRQUMvRCxPQUFPLElBQUksT0FBTyxDQUFDLENBQUMsT0FBTyxFQUFFLE1BQU0sRUFBRSxFQUFFO1lBQ25DLE1BQU0sY0FBYyxHQUFHLE1BQU0sQ0FBQyxRQUFRLENBQUM7WUFDdkMsSUFBSSxDQUFDLHdCQUF3QixDQUFDLEtBQUssQ0FBQyxXQUFXLEVBQUUsY0FBYyxDQUFDLENBQUM7WUFDakUsY0FBYyxDQUFDLE9BQU8sR0FBRyxLQUFLLENBQUM7WUFDL0IsTUFBTSxLQUFLLEdBQUcsSUFBSSxDQUFDLGlDQUFpQyxDQUFDLGNBQWMsRUFBRSxLQUFLLENBQUMsQ0FBQztZQUU1RSxJQUFJLENBQUMsa0JBQWtCLEVBQUUsQ0FBQztZQUMxQixJQUFJLElBQUksQ0FBQyxrQkFBa0IsR0FBRyxFQUFFLElBQUksQ0FBQyxFQUFFO2dCQUNuQyxVQUFVLENBQUMsR0FBRyxFQUFFO29CQUNaLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQztnQkFDbkIsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO2FBQ1Q7aUJBQU07Z0JBQ0gsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDO2FBQ2xCO1FBRUwsQ0FBQyxDQUFDLENBQUM7SUFDUCxDQUFDO0lBR08sd0JBQXdCLENBQUMsV0FBd0IsRUFBRSxNQUFnQjtRQUN2RSxNQUFNLENBQUMsUUFBUSxDQUFDLGdCQUFnQixHQUFHLFdBQVcsQ0FBQyxZQUFZLENBQUM7UUFDNUQsV0FBVyxDQUFDLFlBQVksRUFBRSxDQUFDO1FBRTNCLElBQUksTUFBTSxDQUFDLFFBQVEsRUFBRTtZQUNqQixLQUFLLE1BQU0sS0FBSyxJQUFJLE1BQU0sQ0FBQyxRQUFRLEVBQUU7Z0JBQ2pDLElBQUksQ0FBQyx3QkFBd0IsQ0FBQyxXQUFXLEVBQUUsS0FBSyxDQUFDLENBQUM7YUFDckQ7U0FDSjtJQUVMLENBQUM7SUFFTyxNQUFNLENBQUMsS0FBZ0I7UUFDM0IsTUFBTSxlQUFlLEdBQUcsSUFBSSxJQUFJLEVBQUUsQ0FBQyxPQUFPLEVBQUUsQ0FBQztRQUM3QyxLQUFLLENBQUMsbUJBQW1CLEdBQUcsZUFBZSxDQUFDO1FBRTVDLHdDQUF3QztRQUN4QyxvRkFBb0Y7UUFFcEYsNEJBQTRCO1FBQzVCLE1BQU0sZUFBZSxHQUFHLElBQUksS0FBSyxFQUFZLENBQUM7UUFDOUMsS0FBSyxNQUFNLE1BQU0sSUFBSSxLQUFLLENBQUMscUJBQXFCLEVBQUU7WUFDOUMsTUFBTSxjQUFjLEdBQUcsTUFBTSxDQUFDLFFBQVEsQ0FBQztZQUN2QyxjQUFjLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQztZQUM5QixlQUFlLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxDQUFDO1NBQ3hDO1FBQ0QsS0FBSyxDQUFDLHFCQUFxQixDQUFDLEtBQUssRUFBRSxDQUFDO1FBRXBDLDJCQUFjLENBQUMsS0FBSyxDQUFDLFdBQVcsRUFBRSxlQUFlLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFO1lBQ3pELGdHQUFnRztRQUNwRyxDQUFDLENBQUMsQ0FBQztJQUNQLENBQUM7SUFFTyxNQUFNLENBQUMsS0FBZ0I7UUFDM0IsTUFBTSxlQUFlLEdBQUcsSUFBSSxJQUFJLEVBQUUsQ0FBQyxPQUFPLEVBQUUsQ0FBQztRQUM3QyxLQUFLLENBQUMsbUJBQW1CLEdBQUcsZUFBZSxDQUFDO1FBRTVDLG1DQUFtQztRQUNuQyxvRkFBb0Y7UUFFcEYsNEJBQTRCO1FBQzVCLE1BQU0sZUFBZSxHQUFHLElBQUksS0FBSyxFQUFZLENBQUM7UUFDOUMsS0FBSyxNQUFNLE1BQU0sSUFBSSxLQUFLLENBQUMscUJBQXFCLEVBQUU7WUFDOUMsTUFBTSxjQUFjLEdBQUcsTUFBTSxDQUFDLFFBQVEsQ0FBQztZQUN2QyxNQUFNLGFBQWEsR0FBRyxJQUFJLENBQUMsaUNBQWlDLENBQUMsY0FBYyxFQUFFLEtBQUssQ0FBQyxDQUFDO1lBRXBGLGVBQWUsQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUM7U0FDdkM7UUFDRCxLQUFLLENBQUMscUJBQXFCLENBQUMsS0FBSyxFQUFFLENBQUM7UUFFcEMsNEJBQWUsQ0FBQyxLQUFLLENBQUMsV0FBVyxFQUFFLGVBQWUsQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUU7WUFDMUQsMkZBQTJGO1FBQy9GLENBQUMsQ0FBQyxDQUFDO0lBQ1AsQ0FBQztJQUVPLGlDQUFpQyxDQUFDLE1BQWdCLEVBQUUsS0FBZ0I7UUFDaEYsK0NBQStDO1FBQ3ZDLHVDQUF1QztRQUN2QyxNQUFNLEtBQUssR0FBRywwQkFBYSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBRXBDLDhEQUE4RDtRQUU5RCxxQkFBcUI7UUFDckIsSUFBSSxRQUFRLEdBQUcsSUFBSSxlQUFPLEVBQUUsQ0FBQztRQUM3QixNQUFNLENBQUMsaUJBQWlCLENBQUMsSUFBSSxDQUFDO1FBQzlCLFFBQVEsQ0FBQyxxQkFBcUIsQ0FBQyxNQUFNLENBQUMsV0FBVyxDQUFDLENBQUM7UUFFbkQsa0RBQWtEO1FBQ2xELEtBQUssQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLGlCQUFpQixDQUFDLElBQUksQ0FBQztRQUM3QyxRQUFRLEdBQUcsS0FBSyxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsWUFBWSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBRXhELEtBQUssQ0FBQyxRQUFRLENBQUMsQ0FBQyxHQUFHLFFBQVEsQ0FBQyxDQUFDLENBQUM7UUFDOUIsS0FBSyxDQUFDLFFBQVEsQ0FBQyxDQUFDLEdBQUcsUUFBUSxDQUFDLENBQUMsQ0FBQztRQUM5QixLQUFLLENBQUMsUUFBUSxDQUFDLENBQUMsR0FBRyxRQUFRLENBQUMsQ0FBQyxDQUFDO1FBQzlCLE9BQU8sS0FBSyxDQUFDO0lBQ2pCLENBQUM7SUFFRCxnQkFBZ0IsQ0FBQyxXQUFtQixFQUFFLGdCQUF3QjtRQUMxRCx1Q0FBdUM7UUFDdkMsSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxXQUFXLENBQUMsRUFBRTtZQUM5QixNQUFNLEtBQUssR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxXQUFXLENBQUcsQ0FBQztZQUM3QyxLQUFLLENBQUMsYUFBYSxDQUFDLE1BQU0sQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO1lBQzdDLEtBQUssQ0FBQyxvQkFBb0IsQ0FBQyxNQUFNLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztZQUNwRCxLQUFLLENBQUMscUJBQXFCLENBQUMsR0FBRyxDQUFDLGdCQUFnQixDQUFDLENBQUM7WUFDbEQsSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQztTQUN0QjtJQUNMLENBQUM7SUFFRCxnQkFBZ0IsQ0FBQyxXQUFtQixFQUFFLGdCQUF3QjtRQUMxRCx1Q0FBdUM7UUFDdkMsSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxXQUFXLENBQUMsRUFBRTtZQUM5QixNQUFNLEtBQUssR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxXQUFXLENBQUcsQ0FBQztZQUM3QyxLQUFLLENBQUMscUJBQXFCLENBQUMsR0FBRyxDQUFDLGdCQUFnQixDQUFDLENBQUM7WUFDbEQsSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQztTQUN0QjtJQUNMLENBQUM7SUFFRCxXQUFXLENBQUMsV0FBbUI7UUFDM0IsK0JBQStCO1FBRS9CLE1BQU0sS0FBSyxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLFdBQVcsQ0FBRyxDQUFDO1FBRTdDLElBQUksS0FBSyxFQUFFO1lBQ1AsSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsV0FBVyxDQUFDLENBQUM7WUFFaEMsMkJBQTJCO1lBQzNCLElBQUksS0FBSyxDQUFDLEtBQUssRUFBRTtnQkFDYixLQUFLLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDO2FBQzdDO1NBQ0o7SUFDTCxDQUFDOztBQWpSYSxnQ0FBVSxHQUFHLElBQUksMERBQTBCLENBQ3JELE9BQU8sRUFDUCxFQUFFLEVBQ0YsQ0FBQyxNQUFjLEVBQUUsS0FBWSxFQUFFLElBQVMsRUFBRSxFQUFFLENBQUMsSUFBSSxxQkFBcUIsQ0FBQyxNQUFNLEVBQUUsS0FBSyxFQUFFLElBQUksQ0FBQyxDQUM5RixDQUFDO0FBVk4sc0RBd1JDIiwiZmlsZSI6Ii4vc3JjL2Jyb3dzZXIvc3lzdGVtL21lcmdlL01lcmdlU3lzdGVtQ29udHJvbGxlci50cy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7RW50aXR5LCBTY2VuZSwgU3lzdGVtfSBmcm9tIFwiYWZyYW1lXCI7XG5pbXBvcnQgTGlzdCA9IE1vY2hhLnJlcG9ydGVycy5MaXN0O1xuaW1wb3J0IHtNZXJnZURhdGF9IGZyb20gXCIuL01lcmdlRGF0YVwiO1xuaW1wb3J0IHtNZXNoLCBPYmplY3QzRCwgVmVjdG9yM30gZnJvbSBcInRocmVlXCI7XG5pbXBvcnQge2NsZWFyT2JqZWN0M0RzLCBjbG9uZU9iamVjdDNELCBtZXJnZU9iamVjdDNEcywgT2JqZWN0TWVyZ2UsIHVwZGF0ZU9iamVjdDNEc30gZnJvbSBcIi4uLy4uL3RocmVlL21lcmdlX3V0aWxcIjtcbmltcG9ydCB7TG9hZGVyU3lzdGVtQ29udHJvbGxlcn0gZnJvbSBcIi4uL2xvYWRlci9Mb2FkZXJTeXN0ZW1Db250cm9sbGVyXCI7XG5pbXBvcnQge0Fic3RyYWN0U3lzdGVtQ29udHJvbGxlciwgU3lzdGVtQ29udHJvbGxlckRlZmluaXRpb259IGZyb20gXCJhZnJhbWUtdHlwZXNjcmlwdC1ib2lsZXJwbGF0ZVwiO1xuXG5leHBvcnQgY2xhc3MgTWVyZ2VTeXN0ZW1Db250cm9sbGVyIGV4dGVuZHMgQWJzdHJhY3RTeXN0ZW1Db250cm9sbGVyIHtcblxuICAgIHJlYWRvbmx5IG1lcmdlcyA9IG5ldyBNYXA8RW50aXR5LCBNZXJnZURhdGE+KCk7XG4gICAgc3RhcnRUaW1lID0gMDtcbiAgICBsb2FkaW5nUmVnaXN0ZXJlZCA9IGZhbHNlO1xuXG4gICAgcHVibGljIHN0YXRpYyBERUZJTklUSU9OID0gbmV3IFN5c3RlbUNvbnRyb2xsZXJEZWZpbml0aW9uKFxuICAgICAgICBcIm1lcmdlXCIsXG4gICAgICAgIHt9LFxuICAgICAgICAoc3lzdGVtOiBTeXN0ZW0sIHNjZW5lOiBTY2VuZSwgZGF0YTogYW55KSA9PiBuZXcgTWVyZ2VTeXN0ZW1Db250cm9sbGVyKHN5c3RlbSwgc2NlbmUsIGRhdGEpXG4gICAgKTtcblxuICAgIGNvbnN0cnVjdG9yKHN5c3RlbTogU3lzdGVtLCBzY2VuZTogU2NlbmUsIGRhdGE6IGFueSkge1xuICAgICAgICBzdXBlcihzeXN0ZW0sIHNjZW5lLCBkYXRhKTtcblxuICAgIH1cblxuICAgIGluaXQoKTogdm9pZCB7XG4vLyAgICAgICAgKHRoaXMuZ2V0U3lzdGVtQ29udHJvbGxlcihcImxvYWRlci1zeXN0ZW1cIikgYXMgTG9hZGVyU3lzdGVtQ29udHJvbGxlcikuaW5jcmVhc2VMb2FkaW5nQ291bnRlcigpO1xuICAgICAgICB0aGlzLnN0YXJ0VGltZSA9IG5ldyBEYXRlKCkuZ2V0VGltZSgpO1xuICAgIH1cblxuICAgIHBhdXNlKCk6IHZvaWQge1xuICAgIH1cblxuICAgIHBsYXkoKTogdm9pZCB7XG4gICAgfVxuXG4gICAgdGljayh0aW1lOiBudW1iZXIsIHRpbWVEZWx0YTogbnVtYmVyKTogdm9pZCB7XG4gICAgICAgIC8qY29uc3QgdGltZU1pbGxpcyA9IG5ldyBEYXRlKCkuZ2V0VGltZSgpO1xuICAgICAgICBmb3IgKGNvbnN0IG1lcmdlIG9mIHRoaXMubWVyZ2VzLnZhbHVlcygpKSB7XG4gICAgICAgICAgICBpZiAobWVyZ2UubGFzdE1lcmdlVGltZU1pbGxpcyAhPSAwICYmIG1lcmdlLmxhc3RNb2RpZmljYXRpb25UaW1lTWlsbGlzID4gbWVyZ2UubGFzdE1lcmdlVGltZU1pbGxpcyAmJiB0aW1lTWlsbGlzIC0gbWVyZ2UubGFzdE1vZGlmaWNhdGlvblRpbWVNaWxsaXMgPiA2MDAwMCkge1xuICAgICAgICAgICAgICAgIHRoaXMubWVyZ2UobWVyZ2UpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgICovXG4gICAgICAgIGxldCBsb2FkaW5nID0gbmV3IERhdGUoKS5nZXRUaW1lKCkgLSB0aGlzLnN0YXJ0VGltZSA8IDMwMDA7XG5cbiAgICAgICAgZm9yIChjb25zdCBtZXJnZSBvZiB0aGlzLm1lcmdlcy52YWx1ZXMoKSkge1xuICAgICAgICAgICAgaWYgKHRoaXMubWVyZ2luZyB8fG1lcmdlLmxvYWRpbmdDaGlsZEVudGl0aWVzLnNpemUgPiAzIHx8IG1lcmdlLm1lcmdpbmdDaGlsZEVudGl0aWVzLnNpemUgPiAzKSB7XG4gICAgICAgICAgICAgICAgbG9hZGluZyA9IHRydWU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGxvYWRpbmcpIHtcbiAgICAgICAgICAgIGlmICghdGhpcy5sb2FkaW5nUmVnaXN0ZXJlZCkge1xuICAgICAgICAgICAgICAgIHRoaXMubG9hZGluZ1JlZ2lzdGVyZWQgPSB0cnVlO1xuICAgICAgICAgICAgICAgICh0aGlzLmdldFN5c3RlbUNvbnRyb2xsZXIoXCJsb2FkZXItc3lzdGVtXCIpIGFzIExvYWRlclN5c3RlbUNvbnRyb2xsZXIpLmluY3JlYXNlTG9hZGluZ0NvdW50ZXIoKTtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIm1lcmdlIHN5c3RlbSBpbmNyZWFzZXMgbG9hZGluZyBjb3VudGVyLlwiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGlmICh0aGlzLmxvYWRpbmdSZWdpc3RlcmVkKSB7XG4gICAgICAgICAgICAgICAgKHRoaXMuZ2V0U3lzdGVtQ29udHJvbGxlcihcImxvYWRlci1zeXN0ZW1cIikgYXMgTG9hZGVyU3lzdGVtQ29udHJvbGxlcikuZGVjcmVhc2VMb2FkaW5nQ291bnRlcigpO1xuICAgICAgICAgICAgICAgIHRoaXMubG9hZGluZ1JlZ2lzdGVyZWQgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIm1lcmdlIHN5c3RlbSBkZWNyZWFzZXMgbG9hZGluZyBjb3VudGVyLlwiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgfVxuXG4gICAgYWRkTWVyZ2UobWVyZ2VFbnRpdHk6IEVudGl0eSkge1xuICAgICAgICAvL2NvbnNvbGUubG9nKFwibWVyZ2UgYWRkZWQuXCIpO1xuICAgICAgICBpZiAoIXRoaXMubWVyZ2VzLmhhcyhtZXJnZUVudGl0eSkpIHtcbiAgICAgICAgICAgIHRoaXMubWVyZ2VzLnNldChtZXJnZUVudGl0eSwgbmV3IE1lcmdlRGF0YShtZXJnZUVudGl0eSkpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgYWRkTG9hZGluZ01lcmdlQ2hpbGQobWVyZ2VFbnRpdHk6IEVudGl0eSwgbWVyZ2VDaGlsZEVudGl0eTogRW50aXR5KSB7XG4gICAgICAgIC8vLy9jb25zb2xlLmxvZyhcIm1lcmdlIGNoaWxkIGxvYWRpbmcuLi5cIik7XG4gICAgICAgIGlmICghdGhpcy5tZXJnZXMuaGFzKG1lcmdlRW50aXR5KSkge1xuICAgICAgICAgICAgdGhpcy5tZXJnZXMuc2V0KG1lcmdlRW50aXR5LCBuZXcgTWVyZ2VEYXRhKG1lcmdlRW50aXR5KSk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgbWVyZ2UgPSB0aGlzLm1lcmdlcy5nZXQobWVyZ2VFbnRpdHkpISE7XG4gICAgICAgIG1lcmdlLmxhc3RNb2RpZmljYXRpb25UaW1lTWlsbGlzID0gbmV3IERhdGUoKS5nZXRUaW1lKCk7XG4gICAgICAgIG1lcmdlLmNoaWxkRW50aXRpZXMuYWRkKG1lcmdlQ2hpbGRFbnRpdHkpO1xuICAgICAgICBtZXJnZS5sb2FkaW5nQ2hpbGRFbnRpdGllcy5hZGQobWVyZ2VDaGlsZEVudGl0eSk7XG4gICAgfVxuXG4gICAgc2V0TWVyZ2VDaGlsZExvYWRlZChtZXJnZUVudGl0eTogRW50aXR5LCBtZXJnZUNoaWxkRW50aXR5OiBFbnRpdHkpIHtcbiAgICAgICAgLy8vL2NvbnNvbGUubG9nKFwibWVyZ2UgY2hpbGQgbG9hZGVkLlwiKTtcbiAgICAgICAgY29uc3QgbWVyZ2UgPSB0aGlzLm1lcmdlcy5nZXQobWVyZ2VFbnRpdHkpISE7XG4gICAgICAgIGlmICghbWVyZ2UpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIG1lcmdlLmxvYWRpbmdDaGlsZEVudGl0aWVzLmRlbGV0ZShtZXJnZUNoaWxkRW50aXR5KTtcbiAgICAgICAgbWVyZ2UubWVyZ2luZ0NoaWxkRW50aXRpZXMuYWRkKG1lcmdlQ2hpbGRFbnRpdHkpO1xuICAgICAgICBpZiAobWVyZ2UubG9hZGluZ0NoaWxkRW50aXRpZXMuc2l6ZSA+IDApIHtcbiAgICAgICAgICAgIC8vLy9jb25zb2xlLmxvZyhcIm1lcmdlIGNoaWxkIGVudGl0aWVzIHN0aWxsIGxvYWRpbmc6IFwiICsgbWVyZ2UubG9hZGluZ0NoaWxkRW50aXRpZXMuc2l6ZSk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICAvL2NvbnNvbGUubG9nKFwibWVyZ2UgY2hpbGQgZW50aXRpZXMgbG9hZGVkLlwiKTtcblxuXG4gICAgICAgIC8vaWYgKG1lcmdlLmxhc3RNZXJnZVRpbWVNaWxsaXMgPT0gMCkge1xuICAgICAgICB0aGlzLm1lcmdlKG1lcmdlKTtcbiAgICAgICAgLy99XG5cbiAgICB9XG5cbiAgICBtZXJnaW5nID0gZmFsc2U7XG5cbiAgICBwcml2YXRlIG1lcmdlKG1lcmdlOiBNZXJnZURhdGEpIHtcblxuICAgICAgICBpZiAodGhpcy5tZXJnaW5nKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLm1lcmdpbmcgPSB0cnVlO1xuXG4gICAgICAgIC8vY29uc29sZS5sb2coXCJtZXJnaW5nLi4uXCIpO1xuXG4gICAgICAgIGNvbnN0IHN0YXJ0VGltZU1pbGxpcyA9IG5ldyBEYXRlKCkuZ2V0VGltZSgpO1xuXG4gICAgICAgIC8vIENvbGxlY3Qgb2JqZWN0cyB0byBtZXJnZS5cbiAgICAgICAgdGhpcy5jb2xsZWN0T2JqZWN0c1RvTWVyZ2UobWVyZ2UpLnRoZW4oKG9iamVjdHNUb01lcmdlKSA9PiB7XG4gICAgICAgICAgICBtZXJnZS5tZXJnaW5nQ2hpbGRFbnRpdGllcy5jbGVhcigpO1xuXG4gICAgICAgICAgICAvL2NvbnNvbGUubG9nKFwibWVyZ2luZyBvYmplY3QuLi5cIik7XG4gICAgICAgICAgICBtZXJnZU9iamVjdDNEcyhtZXJnZS5vYmplY3RNZXJnZSwgb2JqZWN0c1RvTWVyZ2UpLnRoZW4oKCkgPT4ge1xuICAgICAgICAgICAgICAgIGlmICghbWVyZ2UuZ3JvdXApIHtcbiAgICAgICAgICAgICAgICAgICAgbWVyZ2UuZ3JvdXAgPSBtZXJnZS5vYmplY3RNZXJnZS5ncm91cDtcbiAgICAgICAgICAgICAgICAgICAgbWVyZ2UuZW50aXR5Lm9iamVjdDNELmFkZChtZXJnZS5ncm91cCk7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgbWVyZ2UubGFzdE1lcmdlVGltZU1pbGxpcyA9IG5ldyBEYXRlKCkuZ2V0VGltZSgpO1xuICAgICAgICAgICAgICAgIC8vY29uc29sZS5sb2coXCJtZXJnZSBkb25lOiBcIiArIChuZXcgRGF0ZSgpLmdldFRpbWUoKSAtIHN0YXJ0VGltZU1pbGxpcykgKyBcIiBtcy5cIik7XG5cbiAgICAgICAgICAgICAgICB0aGlzLm1lcmdpbmcgPSBmYWxzZTtcblxuLy8gICAgICAgICAgICAgICAgKHRoaXMuZ2V0U3lzdGVtQ29udHJvbGxlcihcImxvYWRlci1zeXN0ZW1cIikgYXMgTG9hZGVyU3lzdGVtQ29udHJvbGxlcikuZGVjcmVhc2VMb2FkaW5nQ291bnRlcigpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuXG5cbiAgICB9XG5cbiAgICBwcml2YXRlIGFzeW5jIGNvbGxlY3RPYmplY3RzVG9NZXJnZShtZXJnZTogTWVyZ2VEYXRhKSB7XG4gICAgICAgIGNvbnN0IG9iamVjdHNUb01lcmdlID0gbmV3IEFycmF5PE9iamVjdDNEPigpO1xuICAgICAgICAvL2NvbnNvbGUubG9nKFwiY29sbGVjdGluZyBvYmplY3RzIHRvIG1lcmdlIGZyb20gY2hpbGQgZW50aXRpZXM6IFwiICsgbWVyZ2UubWVyZ2luZ0NoaWxkRW50aXRpZXMuc2l6ZSk7XG4gICAgICAgIGZvciAoY29uc3QgZW50aXR5IG9mIG1lcmdlLm1lcmdpbmdDaGlsZEVudGl0aWVzKSB7XG4gICAgICAgICAgICBjb25zdCBjbG9uZSA9IGF3YWl0IHRoaXMuY2xvbmVPYmplY3RUb01lcmdlV2l0aFdhaXQoZW50aXR5LCBtZXJnZSk7XG4gICAgICAgICAgICBvYmplY3RzVG9NZXJnZS5wdXNoKGNsb25lKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gb2JqZWN0c1RvTWVyZ2U7XG4gICAgfVxuXG4gICAgbmljZVRpbWVvdXRDb3VudGVyID0gMDtcblxuICAgIHByaXZhdGUgY2xvbmVPYmplY3RUb01lcmdlV2l0aFdhaXQoZW50aXR5OiBFbnRpdHksIG1lcmdlOiBNZXJnZURhdGEpIDogUHJvbWlzZTxPYmplY3QzRD4ge1xuICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgICAgICAgY29uc3Qgb3JpZ2luYWxPYmplY3QgPSBlbnRpdHkub2JqZWN0M0Q7XG4gICAgICAgICAgICB0aGlzLmFsbG9jYXRlTWVyZ2VPYmplY3RJbmRleChtZXJnZS5vYmplY3RNZXJnZSwgb3JpZ2luYWxPYmplY3QpO1xuICAgICAgICAgICAgb3JpZ2luYWxPYmplY3QudmlzaWJsZSA9IGZhbHNlO1xuICAgICAgICAgICAgY29uc3QgY2xvbmUgPSB0aGlzLmNsb25lQW5kU3dpdGNoVG9SZWdpb25Db29yZGluYXRlcyhvcmlnaW5hbE9iamVjdCwgbWVyZ2UpO1xuXG4gICAgICAgICAgICB0aGlzLm5pY2VUaW1lb3V0Q291bnRlcisrO1xuICAgICAgICAgICAgaWYgKHRoaXMubmljZVRpbWVvdXRDb3VudGVyICUgMjUgPT0gMCkge1xuICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICByZXNvbHZlKGNsb25lKTtcbiAgICAgICAgICAgICAgICB9LCAxKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgcmVzb2x2ZShjbG9uZSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgfSk7XG4gICAgfVxuXG5cbiAgICBwcml2YXRlIGFsbG9jYXRlTWVyZ2VPYmplY3RJbmRleChvYmplY3RNZXJnZTogT2JqZWN0TWVyZ2UsIG9iamVjdDogT2JqZWN0M0QpIHtcbiAgICAgICAgb2JqZWN0LnVzZXJEYXRhLm1lcmdlT2JqZWN0SW5kZXggPSBvYmplY3RNZXJnZS5vYmplY3RPZmZzZXQ7XG4gICAgICAgIG9iamVjdE1lcmdlLm9iamVjdE9mZnNldCsrO1xuXG4gICAgICAgIGlmIChvYmplY3QuY2hpbGRyZW4pIHtcbiAgICAgICAgICAgIGZvciAoY29uc3QgY2hpbGQgb2Ygb2JqZWN0LmNoaWxkcmVuKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5hbGxvY2F0ZU1lcmdlT2JqZWN0SW5kZXgob2JqZWN0TWVyZ2UsIGNoaWxkKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgfVxuXG4gICAgcHJpdmF0ZSByZW1vdmUobWVyZ2U6IE1lcmdlRGF0YSkge1xuICAgICAgICBjb25zdCBzdGFydFRpbWVNaWxsaXMgPSBuZXcgRGF0ZSgpLmdldFRpbWUoKTtcbiAgICAgICAgbWVyZ2UubGFzdE1lcmdlVGltZU1pbGxpcyA9IHN0YXJ0VGltZU1pbGxpcztcblxuICAgICAgICAvL2NvbnNvbGUubG9nKFwicmVtb3ZpbmcgZnJvbSBtZXJnZS4uLlwiKTtcbiAgICAgICAgLy9jb25zb2xlLmxvZyhcImNoaWxkIGVudGl0aWVzIHRvIHJlbW92ZSBzaXplOiBcIiArIG1lcmdlLnJlbW92aW5nQ2hpbGRFbnRpdGllcy5zaXplKTtcblxuICAgICAgICAvLyBDb2xsZWN0IG9iamVjdHMgdG8gbWVyZ2UuXG4gICAgICAgIGNvbnN0IG9iamVjdHNUb1JlbW92ZSA9IG5ldyBBcnJheTxPYmplY3QzRD4oKTtcbiAgICAgICAgZm9yIChjb25zdCBlbnRpdHkgb2YgbWVyZ2UucmVtb3ZpbmdDaGlsZEVudGl0aWVzKSB7XG4gICAgICAgICAgICBjb25zdCBvcmlnaW5hbE9iamVjdCA9IGVudGl0eS5vYmplY3QzRDtcbiAgICAgICAgICAgIG9yaWdpbmFsT2JqZWN0LnZpc2libGUgPSB0cnVlO1xuICAgICAgICAgICAgb2JqZWN0c1RvUmVtb3ZlLnB1c2gob3JpZ2luYWxPYmplY3QpO1xuICAgICAgICB9XG4gICAgICAgIG1lcmdlLnJlbW92aW5nQ2hpbGRFbnRpdGllcy5jbGVhcigpO1xuXG4gICAgICAgIGNsZWFyT2JqZWN0M0RzKG1lcmdlLm9iamVjdE1lcmdlLCBvYmplY3RzVG9SZW1vdmUpLnRoZW4oKCkgPT4ge1xuICAgICAgICAgICAgLy9jb25zb2xlLmxvZyhcInJlbW92aW5nIGZyb20gbWVyZ2UgZG9uZTogXCIgKyAobmV3IERhdGUoKS5nZXRUaW1lKCkgLSBzdGFydFRpbWVNaWxsaXMpICsgXCIgbXMuXCIpO1xuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBwcml2YXRlIHVwZGF0ZShtZXJnZTogTWVyZ2VEYXRhKSB7XG4gICAgICAgIGNvbnN0IHN0YXJ0VGltZU1pbGxpcyA9IG5ldyBEYXRlKCkuZ2V0VGltZSgpO1xuICAgICAgICBtZXJnZS5sYXN0TWVyZ2VUaW1lTWlsbGlzID0gc3RhcnRUaW1lTWlsbGlzO1xuXG4gICAgICAgIC8vY29uc29sZS5sb2coXCJ1cGRhdGluZyBtZXJnZS4uLlwiKTtcbiAgICAgICAgLy9jb25zb2xlLmxvZyhcImNoaWxkIGVudGl0aWVzIHRvIHVwZGF0ZSBzaXplOiBcIiArIG1lcmdlLnVwZGF0aW5nQ2hpbGRFbnRpdGllcy5zaXplKTtcblxuICAgICAgICAvLyBDb2xsZWN0IG9iamVjdHMgdG8gbWVyZ2UuXG4gICAgICAgIGNvbnN0IG9iamVjdHNUb1VwZGF0ZSA9IG5ldyBBcnJheTxPYmplY3QzRD4oKTtcbiAgICAgICAgZm9yIChjb25zdCBlbnRpdHkgb2YgbWVyZ2UudXBkYXRpbmdDaGlsZEVudGl0aWVzKSB7XG4gICAgICAgICAgICBjb25zdCBvcmlnaW5hbE9iamVjdCA9IGVudGl0eS5vYmplY3QzRDtcbiAgICAgICAgICAgIGNvbnN0IG9iamVjdFRvTWVyZ2UgPSB0aGlzLmNsb25lQW5kU3dpdGNoVG9SZWdpb25Db29yZGluYXRlcyhvcmlnaW5hbE9iamVjdCwgbWVyZ2UpO1xuXG4gICAgICAgICAgICBvYmplY3RzVG9VcGRhdGUucHVzaChvYmplY3RUb01lcmdlKTtcbiAgICAgICAgfVxuICAgICAgICBtZXJnZS51cGRhdGluZ0NoaWxkRW50aXRpZXMuY2xlYXIoKTtcblxuICAgICAgICB1cGRhdGVPYmplY3QzRHMobWVyZ2Uub2JqZWN0TWVyZ2UsIG9iamVjdHNUb1VwZGF0ZSkudGhlbigoKSA9PiB7XG4gICAgICAgICAgICAvL2NvbnNvbGUubG9nKFwidXBkYXRpbmcgbWVyZ2UgZG9uZTogXCIgKyAobmV3IERhdGUoKS5nZXRUaW1lKCkgLSBzdGFydFRpbWVNaWxsaXMpICsgXCIgbXMuXCIpO1xuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBwcml2YXRlIGNsb25lQW5kU3dpdGNoVG9SZWdpb25Db29yZGluYXRlcyhvYmplY3Q6IE9iamVjdDNELCBtZXJnZTogTWVyZ2VEYXRhKSB7XG4vLyBDbG9uZSBvYmplY3QgdG8gbWVyZ2UgYW5kIHNldHVwIGNvb3JkaW5hdGVzLlxuICAgICAgICAvL2NvbnN0IG9iamVjdFRvTWVyZ2UgPSBvcmlnaW5hbE9iamVjdDtcbiAgICAgICAgY29uc3QgY2xvbmUgPSBjbG9uZU9iamVjdDNEKG9iamVjdCk7XG5cbiAgICAgICAgLy8gVHJhbnNmZXIgdG8gd29ybGQgY29vcmRpbmF0ZXMgYXMgY2xvbmUgZG9lcyBub3QgaGF2ZSBwYXJlbnRcblxuICAgICAgICAvLyBnZXQgd29ybGQgcG9zaXRpb25cbiAgICAgICAgbGV0IHBvc2l0aW9uID0gbmV3IFZlY3RvcjMoKTtcbiAgICAgICAgb2JqZWN0LnVwZGF0ZU1hdHJpeFdvcmxkKHRydWUpXG4gICAgICAgIHBvc2l0aW9uLnNldEZyb21NYXRyaXhQb3NpdGlvbihvYmplY3QubWF0cml4V29ybGQpO1xuXG4gICAgICAgIC8vIGNvbnZlcnQgdG8gbWVyZ2UgZW50aXR5IHdvcmxkIGxvY2FsIGNvb3JkaW5hdGVzXG4gICAgICAgIG1lcmdlLmVudGl0eS5vYmplY3QzRC51cGRhdGVNYXRyaXhXb3JsZCh0cnVlKVxuICAgICAgICBwb3NpdGlvbiA9IG1lcmdlLmVudGl0eS5vYmplY3QzRC53b3JsZFRvTG9jYWwocG9zaXRpb24pO1xuXG4gICAgICAgIGNsb25lLnBvc2l0aW9uLnggPSBwb3NpdGlvbi54O1xuICAgICAgICBjbG9uZS5wb3NpdGlvbi55ID0gcG9zaXRpb24ueTtcbiAgICAgICAgY2xvbmUucG9zaXRpb24ueiA9IHBvc2l0aW9uLno7XG4gICAgICAgIHJldHVybiBjbG9uZTtcbiAgICB9XG5cbiAgICByZW1vdmVNZXJnZUNoaWxkKG1lcmdlRW50aXR5OiBFbnRpdHksIG1lcmdlQ2hpbGRFbnRpdHk6IEVudGl0eSkge1xuICAgICAgICAvLy8vY29uc29sZS5sb2coXCJtZXJnZSBjaGlsZCByZW1vdmUuXCIpO1xuICAgICAgICBpZiAodGhpcy5tZXJnZXMuaGFzKG1lcmdlRW50aXR5KSkge1xuICAgICAgICAgICAgY29uc3QgbWVyZ2UgPSB0aGlzLm1lcmdlcy5nZXQobWVyZ2VFbnRpdHkpISE7XG4gICAgICAgICAgICBtZXJnZS5jaGlsZEVudGl0aWVzLmRlbGV0ZShtZXJnZUNoaWxkRW50aXR5KTtcbiAgICAgICAgICAgIG1lcmdlLmxvYWRpbmdDaGlsZEVudGl0aWVzLmRlbGV0ZShtZXJnZUNoaWxkRW50aXR5KTtcbiAgICAgICAgICAgIG1lcmdlLnJlbW92aW5nQ2hpbGRFbnRpdGllcy5hZGQobWVyZ2VDaGlsZEVudGl0eSk7XG4gICAgICAgICAgICB0aGlzLnJlbW92ZShtZXJnZSk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICB1cGRhdGVNZXJnZUNoaWxkKG1lcmdlRW50aXR5OiBFbnRpdHksIG1lcmdlQ2hpbGRFbnRpdHk6IEVudGl0eSkge1xuICAgICAgICAvLy8vY29uc29sZS5sb2coXCJtZXJnZSBjaGlsZCByZW1vdmUuXCIpO1xuICAgICAgICBpZiAodGhpcy5tZXJnZXMuaGFzKG1lcmdlRW50aXR5KSkge1xuICAgICAgICAgICAgY29uc3QgbWVyZ2UgPSB0aGlzLm1lcmdlcy5nZXQobWVyZ2VFbnRpdHkpISE7XG4gICAgICAgICAgICBtZXJnZS51cGRhdGluZ0NoaWxkRW50aXRpZXMuYWRkKG1lcmdlQ2hpbGRFbnRpdHkpO1xuICAgICAgICAgICAgdGhpcy51cGRhdGUobWVyZ2UpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcmVtb3ZlTWVyZ2UobWVyZ2VFbnRpdHk6IEVudGl0eSkge1xuICAgICAgICAvL2NvbnNvbGUubG9nKFwibWVyZ2UgcmVtb3ZlLlwiKTtcblxuICAgICAgICBjb25zdCBtZXJnZSA9IHRoaXMubWVyZ2VzLmdldChtZXJnZUVudGl0eSkhITtcblxuICAgICAgICBpZiAobWVyZ2UpIHtcbiAgICAgICAgICAgIHRoaXMubWVyZ2VzLmRlbGV0ZShtZXJnZUVudGl0eSk7XG5cbiAgICAgICAgICAgIC8vIFJlbW92ZSBvbGQgbWVyZ2Ugb2JqZWN0LlxuICAgICAgICAgICAgaWYgKG1lcmdlLmdyb3VwKSB7XG4gICAgICAgICAgICAgICAgbWVyZ2UuZW50aXR5Lm9iamVjdDNELnJlbW92ZShtZXJnZS5ncm91cCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59XG5cblxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/browser/system/merge/MergeSystemController.ts\n");

/***/ }),

/***/ "./src/browser/system/merge/ModelController.ts":
/*!*****************************************************!*\
  !*** ./src/browser/system/merge/ModelController.ts ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst gltf_load_1 = __webpack_require__(/*! ../../three/gltf_load */ \"./src/browser/three/gltf_load.ts\");\nconst aframe_typescript_boilerplate_1 = __webpack_require__(/*! aframe-typescript-boilerplate */ \"./node_modules/aframe-typescript-boilerplate/built/index.js\");\nclass ModelController extends aframe_typescript_boilerplate_1.AbstractComponentController {\n    constructor(component, entity, data) {\n        super(component, entity, data);\n        this.mergeSystem = aframe_typescript_boilerplate_1.getSystemController(this.entity.sceneEl, \"merge\");\n    }\n    init() {\n        //console.log(this.componentName + \" init: \" + JSON.stringify(this.data));\n        this.merge = this.recursiveFindMergeParent(this.entity);\n        if (this.merge) {\n            this.mergeSystem.addLoadingMergeChild(this.merge, this.entity);\n        }\n    }\n    update(data, oldData) {\n        //console.log(this.componentName + \" update: \" + JSON.stringify(this.data));\n        gltf_load_1.setEntityGltfModel(this.entity, data).then(() => {\n            //console.log(\"Static model loaded: \" + data);\n            if (this.merge) {\n                this.entity.object3D.visible = false;\n                this.mergeSystem.setMergeChildLoaded(this.merge, this.entity);\n            }\n        }).catch((error) => {\n            console.error(\"Error loading static model:\" + data, error);\n        });\n    }\n    remove() {\n        if (this.merge) {\n            //console.log(\"Removing merge child due to model removal.\");\n            this.mergeSystem.removeMergeChild(this.merge, this.entity);\n        }\n    }\n    pause() {\n    }\n    play() {\n    }\n    tick(time, timeDelta) {\n        console.error(\"model tick should not happen.\");\n    }\n    recursiveFindMergeParent(entity) {\n        const parent = entity.parentElement;\n        if (!parent) {\n            return undefined;\n        }\n        if (parent.hasAttribute(\"merge\")) {\n            return parent;\n        }\n        else {\n            return this.recursiveFindMergeParent(parent);\n        }\n    }\n}\nModelController.DEFINITION = new aframe_typescript_boilerplate_1.ComponentControllerDefinition(\"model\", { type: 'model' }, false, false, (component, entity, data) => new ModelController(component, entity, data));\nexports.ModelController = ModelController;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9zeXN0ZW0vbWVyZ2UvTW9kZWxDb250cm9sbGVyLnRzPzI2ZTEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFDQSx5R0FBeUQ7QUFFekQsZ0tBSXVDO0FBRXZDLE1BQWEsZUFBZ0IsU0FBUSwyREFBMkI7SUFPNUQsWUFBWSxTQUFvQixFQUFFLE1BQWMsRUFBRSxJQUFTO1FBQ3ZELEtBQUssQ0FBQyxTQUFTLEVBQUUsTUFBTSxFQUFFLElBQUksQ0FBQyxDQUFDO1FBQy9CLElBQUksQ0FBQyxXQUFXLEdBQUcsbURBQW1CLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxPQUFTLEVBQUUsT0FBTyxDQUFDLENBQUM7SUFDM0UsQ0FBQztJQUVELElBQUk7UUFDQSwwRUFBMEU7UUFDMUUsSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsd0JBQXdCLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ3hELElBQUksSUFBSSxDQUFDLEtBQUssRUFBRTtZQUNaLElBQUksQ0FBQyxXQUFXLENBQUMsb0JBQW9CLENBQUMsSUFBSSxDQUFDLEtBQU8sRUFBRSxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDcEU7SUFDTCxDQUFDO0lBRUQsTUFBTSxDQUFDLElBQVMsRUFBRSxPQUFZO1FBQzFCLDRFQUE0RTtRQUM1RSw4QkFBa0IsQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLElBQUksQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUU7WUFDNUMsOENBQThDO1lBQzlDLElBQUksSUFBSSxDQUFDLEtBQUssRUFBRTtnQkFDWixJQUFJLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxPQUFPLEdBQUcsS0FBSyxDQUFDO2dCQUNyQyxJQUFJLENBQUMsV0FBVyxDQUFDLG1CQUFtQixDQUFDLElBQUksQ0FBQyxLQUFPLEVBQUUsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO2FBQ25FO1FBQ0wsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsS0FBSyxFQUFFLEVBQUU7WUFDZixPQUFPLENBQUMsS0FBSyxDQUFDLDZCQUE2QixHQUFHLElBQUksRUFBRSxLQUFLLENBQUMsQ0FBQztRQUMvRCxDQUFDLENBQUMsQ0FBQztJQUNQLENBQUM7SUFFRCxNQUFNO1FBQ0YsSUFBSSxJQUFJLENBQUMsS0FBSyxFQUFFO1lBQ1osNERBQTREO1lBQzVELElBQUksQ0FBQyxXQUFXLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLEtBQU8sRUFBRSxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDaEU7SUFFTCxDQUFDO0lBRUQsS0FBSztJQUNMLENBQUM7SUFFRCxJQUFJO0lBQ0osQ0FBQztJQUVELElBQUksQ0FBQyxJQUFZLEVBQUUsU0FBaUI7UUFDaEMsT0FBTyxDQUFDLEtBQUssQ0FBQywrQkFBK0IsQ0FBQyxDQUFDO0lBQ25ELENBQUM7SUFFRCx3QkFBd0IsQ0FBQyxNQUFjO1FBQ25DLE1BQU0sTUFBTSxHQUFHLE1BQU0sQ0FBQyxhQUF1QixDQUFDO1FBQzlDLElBQUksQ0FBQyxNQUFNLEVBQUU7WUFDVCxPQUFPLFNBQVMsQ0FBQztTQUNwQjtRQUNELElBQUksTUFBTSxDQUFDLFlBQVksQ0FBQyxPQUFPLENBQUMsRUFBRTtZQUM5QixPQUFPLE1BQU0sQ0FBQztTQUNqQjthQUFNO1lBQ0gsT0FBTyxJQUFJLENBQUMsd0JBQXdCLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDaEQ7SUFDTCxDQUFDOztBQXhEYSwwQkFBVSxHQUFHLElBQUksNkRBQTZCLENBQUMsT0FBTyxFQUFFLEVBQUMsSUFBSSxFQUFFLE9BQU8sRUFBQyxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsQ0FBQyxTQUFvQixFQUFFLE1BQWMsRUFBRSxJQUFTLEVBQUUsRUFBRSxDQUFDLElBQUksZUFBZSxDQUFDLFNBQVMsRUFBRSxNQUFNLEVBQUUsSUFBSSxDQUFDLENBQUMsQ0FBQztBQUw1TSwwQ0ErREMiLCJmaWxlIjoiLi9zcmMvYnJvd3Nlci9zeXN0ZW0vbWVyZ2UvTW9kZWxDb250cm9sbGVyLnRzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDb21wb25lbnQsIEVudGl0eX0gZnJvbSBcImFmcmFtZVwiO1xuaW1wb3J0IHtzZXRFbnRpdHlHbHRmTW9kZWx9IGZyb20gXCIuLi8uLi90aHJlZS9nbHRmX2xvYWRcIjtcbmltcG9ydCB7TWVyZ2VTeXN0ZW1Db250cm9sbGVyfSBmcm9tIFwiLi9NZXJnZVN5c3RlbUNvbnRyb2xsZXJcIjtcbmltcG9ydCB7XG4gICAgQWJzdHJhY3RDb21wb25lbnRDb250cm9sbGVyLFxuICAgIENvbXBvbmVudENvbnRyb2xsZXJEZWZpbml0aW9uLFxuICAgIGdldFN5c3RlbUNvbnRyb2xsZXJcbn0gZnJvbSBcImFmcmFtZS10eXBlc2NyaXB0LWJvaWxlcnBsYXRlXCI7XG5cbmV4cG9ydCBjbGFzcyBNb2RlbENvbnRyb2xsZXIgZXh0ZW5kcyBBYnN0cmFjdENvbXBvbmVudENvbnRyb2xsZXIge1xuXG4gICAgcmVhZG9ubHkgbWVyZ2VTeXN0ZW06IE1lcmdlU3lzdGVtQ29udHJvbGxlcjtcbiAgICBtZXJnZTogRW50aXR5IHwgdW5kZWZpbmVkO1xuXG4gICAgcHVibGljIHN0YXRpYyBERUZJTklUSU9OID0gbmV3IENvbXBvbmVudENvbnRyb2xsZXJEZWZpbml0aW9uKFwibW9kZWxcIiwge3R5cGU6ICdtb2RlbCd9LCBmYWxzZSwgZmFsc2UsIChjb21wb25lbnQ6IENvbXBvbmVudCwgZW50aXR5OiBFbnRpdHksIGRhdGE6IGFueSkgPT4gbmV3IE1vZGVsQ29udHJvbGxlcihjb21wb25lbnQsIGVudGl0eSwgZGF0YSkpO1xuXG4gICAgY29uc3RydWN0b3IoY29tcG9uZW50OiBDb21wb25lbnQsIGVudGl0eTogRW50aXR5LCBkYXRhOiBhbnkpIHtcbiAgICAgICAgc3VwZXIoY29tcG9uZW50LCBlbnRpdHksIGRhdGEpO1xuICAgICAgICB0aGlzLm1lcmdlU3lzdGVtID0gZ2V0U3lzdGVtQ29udHJvbGxlcih0aGlzLmVudGl0eS5zY2VuZUVsISEsIFwibWVyZ2VcIik7XG4gICAgfVxuXG4gICAgaW5pdCgpOiB2b2lkIHtcbiAgICAgICAgLy9jb25zb2xlLmxvZyh0aGlzLmNvbXBvbmVudE5hbWUgKyBcIiBpbml0OiBcIiArIEpTT04uc3RyaW5naWZ5KHRoaXMuZGF0YSkpO1xuICAgICAgICB0aGlzLm1lcmdlID0gdGhpcy5yZWN1cnNpdmVGaW5kTWVyZ2VQYXJlbnQodGhpcy5lbnRpdHkpO1xuICAgICAgICBpZiAodGhpcy5tZXJnZSkge1xuICAgICAgICAgICAgdGhpcy5tZXJnZVN5c3RlbS5hZGRMb2FkaW5nTWVyZ2VDaGlsZCh0aGlzLm1lcmdlISEsIHRoaXMuZW50aXR5KTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHVwZGF0ZShkYXRhOiBhbnksIG9sZERhdGE6IGFueSk6IHZvaWQge1xuICAgICAgICAvL2NvbnNvbGUubG9nKHRoaXMuY29tcG9uZW50TmFtZSArIFwiIHVwZGF0ZTogXCIgKyBKU09OLnN0cmluZ2lmeSh0aGlzLmRhdGEpKTtcbiAgICAgICAgc2V0RW50aXR5R2x0Zk1vZGVsKHRoaXMuZW50aXR5LCBkYXRhKS50aGVuKCgpID0+IHtcbiAgICAgICAgICAgIC8vY29uc29sZS5sb2coXCJTdGF0aWMgbW9kZWwgbG9hZGVkOiBcIiArIGRhdGEpO1xuICAgICAgICAgICAgaWYgKHRoaXMubWVyZ2UpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmVudGl0eS5vYmplY3QzRC52aXNpYmxlID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgdGhpcy5tZXJnZVN5c3RlbS5zZXRNZXJnZUNoaWxkTG9hZGVkKHRoaXMubWVyZ2UhISwgdGhpcy5lbnRpdHkpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KS5jYXRjaCgoZXJyb3IpID0+IHtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvciBsb2FkaW5nIHN0YXRpYyBtb2RlbDpcIiArIGRhdGEsIGVycm9yKTtcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgcmVtb3ZlKCk6IHZvaWQge1xuICAgICAgICBpZiAodGhpcy5tZXJnZSkge1xuICAgICAgICAgICAgLy9jb25zb2xlLmxvZyhcIlJlbW92aW5nIG1lcmdlIGNoaWxkIGR1ZSB0byBtb2RlbCByZW1vdmFsLlwiKTtcbiAgICAgICAgICAgIHRoaXMubWVyZ2VTeXN0ZW0ucmVtb3ZlTWVyZ2VDaGlsZCh0aGlzLm1lcmdlISEsIHRoaXMuZW50aXR5KTtcbiAgICAgICAgfVxuXG4gICAgfVxuXG4gICAgcGF1c2UoKTogdm9pZCB7XG4gICAgfVxuXG4gICAgcGxheSgpOiB2b2lkIHtcbiAgICB9XG5cbiAgICB0aWNrKHRpbWU6IG51bWJlciwgdGltZURlbHRhOiBudW1iZXIpOiB2b2lkIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihcIm1vZGVsIHRpY2sgc2hvdWxkIG5vdCBoYXBwZW4uXCIpO1xuICAgIH1cblxuICAgIHJlY3Vyc2l2ZUZpbmRNZXJnZVBhcmVudChlbnRpdHk6IEVudGl0eSkgOiBFbnRpdHkgfCB1bmRlZmluZWQge1xuICAgICAgICBjb25zdCBwYXJlbnQgPSBlbnRpdHkucGFyZW50RWxlbWVudCBhcyBFbnRpdHk7XG4gICAgICAgIGlmICghcGFyZW50KSB7XG4gICAgICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgICAgICB9XG4gICAgICAgIGlmIChwYXJlbnQuaGFzQXR0cmlidXRlKFwibWVyZ2VcIikpIHtcbiAgICAgICAgICAgIHJldHVybiBwYXJlbnQ7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5yZWN1cnNpdmVGaW5kTWVyZ2VQYXJlbnQocGFyZW50KTtcbiAgICAgICAgfVxuICAgIH1cblxufVxuXG5cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/browser/system/merge/ModelController.ts\n");

/***/ }),

/***/ "./src/browser/system/space/Actuator.ts":
/*!**********************************************!*\
  !*** ./src/browser/system/space/Actuator.ts ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst three_1 = __webpack_require__(/*! three */ \"three\");\nconst Spring_1 = __webpack_require__(/*! ./Spring */ \"./src/browser/system/space/Spring.ts\");\nconst Events_1 = __webpack_require__(/*! ../../model/Events */ \"./src/browser/model/Events.ts\");\nconst EntityStateEventDetail_1 = __webpack_require__(/*! ../../model/EntityStateEventDetail */ \"./src/browser/model/EntityStateEventDetail.ts\");\nconst States_1 = __webpack_require__(/*! ../../model/States */ \"./src/browser/model/States.ts\");\nconst xml_js_1 = __webpack_require__(/*! xml-js */ \"./node_modules/xml-js/lib/index.js\");\nconst EntityActionEventDetail_1 = __webpack_require__(/*! ../../model/EntityActionEventDetail */ \"./src/browser/model/EntityActionEventDetail.ts\");\nconst aframe_typescript_boilerplate_1 = __webpack_require__(/*! aframe-typescript-boilerplate */ \"./node_modules/aframe-typescript-boilerplate/built/index.js\");\nclass Actuator {\n    constructor(scene, region, id, index, description) {\n        this.springOne = new Spring_1.Spring();\n        this.springTwo = new Spring_1.Spring();\n        this.lastPosition = new three_1.Vector3();\n        this.facingDirection = new three_1.Vector3(0, 0, -1);\n        this.targetOrientation = new three_1.Quaternion();\n        this.currentOrientation = new three_1.Quaternion();\n        this.lastUpdateTime = 0;\n        this.averageUpdateInterval = 0.200;\n        this.moving = false;\n        this.turning = false;\n        this.firstSimulate = true;\n        this.cameraPosition = new three_1.Vector3(0, 0, 0);\n        this.scene = scene;\n        this.region = region;\n        this.id = id;\n        this.index = index;\n        this.description = description;\n        this.entity = aframe_typescript_boilerplate_1.createElement(description);\n        this.entity.setAttribute(\"did\", id);\n        this.entity.setAttribute(\"server\", region);\n        this.entity.setAttribute(\"shadow\", \"\");\n        this.springOne.relaxationTime = 0.2;\n        this.springTwo.relaxationTime = 0.2;\n        this.stateSystemController = aframe_typescript_boilerplate_1.getSystemController(this.scene, \"state\");\n        this.movementState = this.stateSystemController.getState(this.entity, States_1.States.STATE_MOVEMENT);\n    }\n    changeRegion(region, index) {\n        this.entity.setAttribute(\"server\", region);\n        this.region = region;\n        this.index = index;\n    }\n    added(x, y, z, rx, ry, rz, rw) {\n        this.scene.appendChild(this.entity);\n        this.springOne.currentPosition.x = x;\n        this.springOne.currentPosition.y = y;\n        this.springOne.currentPosition.z = z;\n        this.springOne.targetPosition.x = x;\n        this.springOne.targetPosition.y = y;\n        this.springOne.targetPosition.z = z;\n        this.springOne.currentOrientation.x = rx;\n        this.springOne.currentOrientation.y = ry;\n        this.springOne.currentOrientation.z = rz;\n        this.springOne.currentOrientation.w = rw;\n        this.springOne.targetOrientation.x = rx;\n        this.springOne.targetOrientation.y = ry;\n        this.springOne.targetOrientation.z = rz;\n        this.springOne.targetOrientation.w = rw;\n        this.springTwo.currentPosition.x = x;\n        this.springTwo.currentPosition.y = y;\n        this.springTwo.currentPosition.z = z;\n        this.springTwo.targetPosition.x = x;\n        this.springTwo.targetPosition.y = y;\n        this.springTwo.targetPosition.z = z;\n        this.springTwo.currentOrientation.x = rx;\n        this.springTwo.currentOrientation.y = ry;\n        this.springTwo.currentOrientation.z = rz;\n        this.springTwo.currentOrientation.w = rw;\n        this.springTwo.targetOrientation.x = rx;\n        this.springTwo.targetOrientation.y = ry;\n        this.springTwo.targetOrientation.z = rz;\n        this.springTwo.targetOrientation.w = rw;\n        this.lastPosition.x = this.springTwo.currentPosition.x;\n        this.lastPosition.y = this.springTwo.currentPosition.y;\n        this.lastPosition.z = this.springTwo.currentPosition.z;\n        //this.moving = true;\n        //this.turning = true;\n        //this.entity.dispatchEvent(new CustomEvent(Events.EVENT_STATE_BEGIN, {detail: new EntityStateEventDetail(\"moving\")}));\n        //console.log(this.entity.tagName + \":\" + \"start moving\");\n        /*this.entity.object3D.position.x = this.springTwo.currentPosition.x;\n        this.entity.object3D.position.y = this.springTwo.currentPosition.y;\n        this.entity.object3D.position.z = this.springTwo.currentPosition.z;\n        this.entity.object3D.rotation.setFromQuaternion(this.springTwo.currentOrientation);\n\n        if (this.entity.tagName != \"A-DODECAHEDRON\") {\n            console.log(this.entity.tagName + \":\" + JSON.stringify(this.entity.object3D.position));\n        }*/\n        //this.moving = true;\n        //this.entity.dispatchEvent(new CustomEvent(Events.EVENT_STATE_BEGIN, {detail: new EntityStateEventDetail(\"moving\")}));\n        //console.log(\"start moving\");\n        //this.simulate(1);\n    }\n    updated(x, y, z, rx, ry, rz, rw) {\n        const time = new Date().getTime() / 1000.0;\n        if (this.lastUpdateTime != 0) {\n            this.averageUpdateInterval = (this.averageUpdateInterval * 9 + (time - this.lastUpdateTime)) / 10;\n            this.springOne.relaxationTime = 2 * this.averageUpdateInterval;\n            this.springTwo.relaxationTime = 2 * this.averageUpdateInterval;\n        }\n        this.lastUpdateTime = time;\n        //this.entity.setAttribute(\"position\", x + \" \" + y + \" \" + z);\n        this.springOne.targetPosition.x = x;\n        this.springOne.targetPosition.y = y;\n        this.springOne.targetPosition.z = z;\n        this.springOne.targetOrientation.x = rx;\n        this.springOne.targetOrientation.y = ry;\n        this.springOne.targetOrientation.z = rz;\n        this.springOne.targetOrientation.w = rw;\n        if (!this.moving) {\n            this.checkIfMoving();\n        }\n    }\n    removed() {\n        if (this.entity.parentElement) {\n            this.entity.parentElement.removeChild(this.entity);\n        }\n    }\n    described(description) {\n        this.description = description;\n        const element = xml_js_1.xml2js(description).elements[0];\n        if (element.attributes) {\n            // TODO recursive updates.\n            for (const attributeName in element.attributes) {\n                const attributeValue = element.attributes[attributeName];\n                if (attributeName == 'gltf-model') {\n                    continue;\n                }\n                if (attributeName == 'avatar') {\n                    continue;\n                }\n                this.entity.setAttribute(attributeName, attributeValue);\n            }\n        }\n    }\n    acted(action, description) {\n        if (action === 'state-begin') {\n            this.entity.dispatchEvent(new CustomEvent(Events_1.Events.EVENT_STATE_BEGIN, { detail: new EntityStateEventDetail_1.EntityStateEventDetail(description) }));\n        }\n        else if (action === 'state-end') {\n            this.entity.dispatchEvent(new CustomEvent(Events_1.Events.EVENT_STATE_END, { detail: new EntityStateEventDetail_1.EntityStateEventDetail(description) }));\n        }\n        else {\n            this.entity.dispatchEvent(new CustomEvent(Events_1.Events.EVENT_ACTION, { detail: new EntityActionEventDetail_1.EntityActionEventDetail(action, description) }));\n        }\n    }\n    simulate(t) {\n        if (this.moving || this.turning || this.firstSimulate) {\n            this.firstSimulate = false;\n            this.lastPosition.x = this.springTwo.currentPosition.x;\n            this.lastPosition.y = this.springTwo.currentPosition.y;\n            this.lastPosition.z = this.springTwo.currentPosition.z;\n            this.springOne.simulate(t);\n            this.springTwo.targetPosition.x = this.springOne.currentPosition.x;\n            this.springTwo.targetPosition.y = this.springOne.currentPosition.y;\n            this.springTwo.targetPosition.z = this.springOne.currentPosition.z;\n            this.springTwo.targetOrientation.x = this.springOne.currentOrientation.x;\n            this.springTwo.targetOrientation.y = this.springOne.currentOrientation.y;\n            this.springTwo.targetOrientation.z = this.springOne.currentOrientation.z;\n            this.springTwo.targetOrientation.w = this.springOne.currentOrientation.w;\n            this.springTwo.simulate(t);\n            if (this.entity.object3D) {\n                // Update location only after 3d presentation is ready.\n                this.entity.object3D.position.x = this.springTwo.currentPosition.x;\n                this.entity.object3D.position.y = this.springTwo.currentPosition.y;\n                this.entity.object3D.position.z = this.springTwo.currentPosition.z;\n                /*if (this.entity.tagName != \"A-DODECAHEDRON\") {\n                    console.log(this.entity.tagName + \":\" + t + \":\" + JSON.stringify(this.entity.object3D.position));\n                }*/\n                this.entity.object3D.rotation.setFromQuaternion(this.springTwo.currentOrientation);\n                this.movementState.distanceDelta = Math.abs(this.lastPosition.distanceTo(this.springTwo.currentPosition));\n                this.movementState.timeDeltaSeconds = t;\n                const movementDirection = this.lastPosition.sub(this.springTwo.currentPosition);\n                this.facingDirection.x = 0;\n                this.facingDirection.y = 0;\n                this.facingDirection.z = -1;\n                this.facingDirection = this.facingDirection.applyQuaternion(this.entity.object3D.quaternion);\n                this.movementState.facing = movementDirection.angleTo(this.facingDirection) < Math.PI / 2 ? 1 : -1;\n            }\n            this.checkIfMoving();\n        }\n        // Check if dynamic object is in observation range. Do this every round to keep the cost independent of whether user is moving or not.\n        /*const spaceSystem = getSystemController(this.scene, \"space\") as SpaceSystemController;\n        const interfaceSystem = getSystemController(this.scene, \"interface\") as InterfaceSystemController;\n        const range = spaceSystem.getObservationRange();\n        //console.log(\"Observation range: \"+ range);\n        this.cameraPosition.copy(interfaceSystem.cameraPosition);\n        this.cameraPosition.sub(this.entity.object3D.position);\n        const distanceToCamera = this.cameraPosition.length();\n        this.entity.object3D.visible = distanceToCamera < range;*/\n    }\n    checkIfMoving() {\n        const positionDelta = this.springOne.targetPosition.distanceTo(this.springTwo.currentPosition);\n        this.targetOrientation.x = this.springOne.targetOrientation.x;\n        this.targetOrientation.y = this.springOne.targetOrientation.y;\n        this.targetOrientation.z = this.springOne.targetOrientation.z;\n        this.targetOrientation.w = this.springOne.targetOrientation.w;\n        this.currentOrientation.x = this.springTwo.currentOrientation.x;\n        this.currentOrientation.y = this.springTwo.currentOrientation.y;\n        this.currentOrientation.z = this.springTwo.currentOrientation.z;\n        this.currentOrientation.w = this.springTwo.currentOrientation.w;\n        const dot = this.targetOrientation.dot(this.currentOrientation);\n        const orientationDelta = Math.acos(2 * dot * dot - 1);\n        //console.log(orientationDelta);\n        //const orientationDelta = ((this.springOne.targetOrientation) as any).angleTo(this.springTwo.currentOrientation) as number;\n        const moving = positionDelta > 0.2;\n        const turning = orientationDelta > 0.2;\n        //console.log(positionDelta);\n        if (!this.moving && moving) {\n            this.entity.dispatchEvent(new CustomEvent(Events_1.Events.EVENT_STATE_BEGIN, { detail: new EntityStateEventDetail_1.EntityStateEventDetail(\"moving\") }));\n            //console.log(this.entity.tagName + \":\" + \"start moving\");\n        }\n        if (this.moving && !moving) {\n            this.entity.dispatchEvent(new CustomEvent(Events_1.Events.EVENT_STATE_END, { detail: new EntityStateEventDetail_1.EntityStateEventDetail(\"moving\") }));\n            //console.log(this.entity.tagName + \":\" + \"end moving\");\n        }\n        this.moving = moving;\n        this.turning = turning;\n    }\n}\nexports.Actuator = Actuator;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/browser/system/space/Actuator.ts\n");

/***/ }),

/***/ "./src/browser/system/space/DynamicSpace.ts":
/*!**************************************************!*\
  !*** ./src/browser/system/space/DynamicSpace.ts ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Actuator_1 = __webpack_require__(/*! ./Actuator */ \"./src/browser/system/space/Actuator.ts\");\nconst aframe_typescript_boilerplate_1 = __webpack_require__(/*! aframe-typescript-boilerplate */ \"./node_modules/aframe-typescript-boilerplate/built/index.js\");\nclass DynamicSpace {\n    constructor(scene, avatarId) {\n        this.avatarIndex = -1;\n        this.actuatorsMap = new Map();\n        this.actuatorRemoves = new Map();\n        this.avatarId = avatarId;\n        this.scene = scene;\n    }\n    connected(region) {\n        this.actuatorsMap.set(region, new Map());\n    }\n    disconnected(region) {\n        if (!this.actuatorsMap.has(region)) {\n            return;\n        }\n        this.actuatorsMap.get(region).forEach((value, key) => {\n            value.removed();\n        });\n        this.actuatorsMap.delete(region);\n    }\n    added(region, index, id, x, y, z, rx, ry, rz, rw, description) {\n        if (id === this.avatarId) {\n            this.avatarIndex = index;\n            return;\n        }\n        if (this.actuatorRemoves.has(id)) {\n            // In case of fast reconnect remove actuator from removal set and move actuator to new region.\n            const actuator = this.actuatorRemoves.get(id);\n            if (actuator) {\n                this.actuatorRemoves.delete(id);\n                // Change region.\n                this.actuatorsMap.get(actuator.region).delete(actuator.index);\n                this.actuatorsMap.get(region).set(index, actuator);\n                actuator.changeRegion(region, index);\n                return;\n            }\n        }\n        const actuators = this.actuatorsMap.get(region);\n        if (!actuators) {\n            console.log(\"Region does not have actuators map i.e. client not connected: \" + region);\n            return;\n        }\n        if (actuators.has(index)) {\n            console.log(\"object already added.\");\n            return;\n        }\n        const actuator = new Actuator_1.Actuator(this.scene, region, id, index, description);\n        actuators.set(index, actuator);\n        actuator.added(x, y, z, rx, ry, rz, rw);\n    }\n    updated(region, index, x, y, z, rx, ry, rz, rw) {\n        if (index === this.avatarIndex) {\n            //console.log(\"dataspace - observed own avatar update.\");\n            return;\n        }\n        const actuators = this.actuatorsMap.get(region);\n        if (!actuators) {\n            return;\n        }\n        const actuator = actuators.get(index);\n        if (!actuator) {\n            return;\n        }\n        actuator.updated(x, y, z, rx, ry, rz, rw);\n    }\n    removed(region, index, id) {\n        if (index == this.avatarIndex) {\n            //console.log(\"dataspace - observed own avatar remove.\")\n            return;\n        }\n        const actuators = this.actuatorsMap.get(region);\n        if (!actuators) {\n            return;\n        }\n        const actuator = actuators.get(index);\n        if (!actuator) {\n            return;\n        }\n        this.actuatorRemoves.set(id, actuator);\n        setTimeout(() => {\n            if (this.actuatorRemoves.has(id)) {\n                this.actuatorRemoves.delete(id);\n                const actuators = this.actuatorsMap.get(region);\n                if (!actuators) {\n                    return;\n                }\n                const actuator = actuators.get(index);\n                if (!actuator) {\n                    return;\n                }\n                actuator.removed();\n                aframe_typescript_boilerplate_1.getSystemController(this.scene, \"state\").removeStates(actuator.entity);\n                actuators.delete(index);\n            }\n        }, 1000);\n    }\n    described(region, index, description) {\n        if (index == this.avatarIndex) {\n            return;\n        }\n        const actuators = this.actuatorsMap.get(region);\n        if (!actuators) {\n            return;\n        }\n        const actuator = actuators.get(index);\n        if (!actuator) {\n            return;\n        }\n        actuator.described(description);\n    }\n    acted(region, index, action, description) {\n        if (index == this.avatarIndex) {\n            return;\n        }\n        const actuators = this.actuatorsMap.get(region);\n        if (!actuators) {\n            return;\n        }\n        const actuator = actuators.get(index);\n        if (!actuator) {\n            return;\n        }\n        actuator.acted(action, description);\n    }\n    simulate(t) {\n        this.actuatorsMap.forEach(((actuators) => {\n            actuators.forEach((actuator => {\n                actuator.simulate(t);\n            }));\n        }));\n    }\n}\nexports.DynamicSpace = DynamicSpace;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/browser/system/space/DynamicSpace.ts\n");

/***/ }),

/***/ "./src/browser/system/space/SpaceSystemController.ts":
/*!***********************************************************!*\
  !*** ./src/browser/system/space/SpaceSystemController.ts ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst uuid = __webpack_require__(/*! uuid */ \"./node_modules/uuid/index.js\");\nconst three_1 = __webpack_require__(/*! three */ \"three\");\nconst Events_1 = __webpack_require__(/*! ../../model/Events */ \"./src/browser/model/Events.ts\");\nconst DynamicSpace_1 = __webpack_require__(/*! ./DynamicSpace */ \"./src/browser/system/space/DynamicSpace.ts\");\nconst StaticSpace_1 = __webpack_require__(/*! ./StaticSpace */ \"./src/browser/system/space/StaticSpace.ts\");\nconst reality_space_1 = __webpack_require__(/*! reality-space */ \"./node_modules/reality-space/lib/src/index.js\");\nconst aframe_typescript_boilerplate_1 = __webpack_require__(/*! aframe-typescript-boilerplate */ \"./node_modules/aframe-typescript-boilerplate/built/index.js\");\nclass SpaceSystemController extends aframe_typescript_boilerplate_1.AbstractSystemController {\n    constructor(system, scene, data) {\n        super(system, scene, data);\n        this.clusterUrl = undefined;\n        this.avatarId = uuid.v4();\n        this.playerElement = null;\n        this.cameraElement = null;\n        this.playerObject = undefined;\n        this.client = undefined;\n        this.dynamicSpace = undefined;\n        this.staticSpace = undefined;\n        this.lastRefresh = 0;\n        this.yAxisPositive = new three_1.Vector3(0, 1, 0);\n        this.xzPlane = new three_1.Plane(this.yAxisPositive);\n        this.cameraDirection = new three_1.Vector3(0, 0, 0);\n        this.xzDirection = new three_1.Vector3(0, 0, 0);\n        this.directionMatrix = new three_1.Matrix4();\n        this.directionQuaternion = new three_1.Quaternion();\n        this.observationRange = 0;\n        this.staticSpace = new StaticSpace_1.StaticSpace(this.scene);\n        fetch('/api/context', {\n            credentials: 'same-origin'\n        }).then((response) => {\n            response.json().then((responseData) => {\n                const context = responseData;\n                this.clusterUrl = context.clusterUrl;\n                this.space = context.space;\n                this.idToken = context.idToken;\n                this.context = context;\n                this.dynamicSpace = new DynamicSpace_1.DynamicSpace(this.scene, this.context.userId + \":\" + this.avatarId);\n                //console.log(\"cluster URL: \" + this.clusterUrl);\n            });\n        }).catch((err) => {\n            console.error(err);\n        });\n        /*fetch('/api/users/current/cluster-url', {\n            credentials: 'same-origin'\n        })\n            .then((response) => {\n                response.text().then((responseData) => {\n                    this.clusterUrl = responseData;\n                    //console.log(\"cluster URL: \" + this.clusterUrl);\n                });\n            }).catch((err) => {\n            console.error(err);\n        });\n        fetch('/api/users/current/space', {\n            credentials: 'same-origin'\n        })\n            .then((response) => {\n                response.text().then((responseData) => {\n                    this.space = responseData;\n                    //console.log(\"current space: \" + this.space);\n                });\n            }).catch((err) => {\n            console.error(err);\n        });\n        fetch('/api/users/current/id-token', {\n            credentials: 'same-origin'\n        })\n            .then((response) => {\n                response.text().then((responseData) => {\n                    this.idToken = responseData;\n                });\n            }).catch((err) => {\n            console.error(err);\n        });*/\n    }\n    init() {\n    }\n    pause() {\n        if (this.client) {\n            this.client.close();\n            this.client = undefined;\n        }\n    }\n    play() {\n    }\n    tick(time, timeDelta) {\n        if (!this.client) {\n            this.setupClient();\n        }\n        else {\n            this.dynamicSpace.simulate(timeDelta / 1000);\n            if (time - this.lastRefresh > 150) {\n                if (this.playerObject && this.cameraObject) {\n                    if (this.client.clusterConfiguration) {\n                        this.cameraObject.getWorldDirection(this.cameraDirection);\n                        //this.cameraDirection.multiplyScalar(-1);\n                        this.xzPlane.projectPoint(this.cameraDirection, this.xzDirection);\n                        this.xzDirection.normalize();\n                        this.directionMatrix.lookAt(new three_1.Vector3(0, 0, 0), this.xzDirection, this.yAxisPositive);\n                        this.directionQuaternion.setFromRotationMatrix(this.directionMatrix);\n                        this.client.refresh(this.playerObject.position.x, this.playerObject.position.y, this.playerObject.position.z, this.directionQuaternion.x, this.directionQuaternion.y, this.directionQuaternion.z, this.directionQuaternion.w);\n                    }\n                }\n                this.lastRefresh = time;\n            }\n        }\n    }\n    setupClient() {\n        if (!this.clusterUrl || !this.idToken || !this.space) {\n            return;\n        }\n        this.playerElement = document.querySelector(\"[interface]\");\n        this.cameraElement = this.playerElement.querySelector('[camera]');\n        if (!this.playerElement) {\n            //console.log(\"dataspace - did not find player element in dom.\");\n        }\n        else {\n            this.playerElement.addEventListener(Events_1.Events.EVENT_STATE_BEGIN, ((e) => __awaiter(this, void 0, void 0, function* () {\n                if (this.client && this.client.clusterConfiguration) {\n                    ////console.log(e.detail);\n                    yield this.client.act(this.avatarId, Events_1.Events.EVENT_STATE_BEGIN, e.detail.state);\n                }\n            })));\n            this.playerElement.addEventListener(Events_1.Events.EVENT_STATE_END, ((e) => __awaiter(this, void 0, void 0, function* () {\n                if (this.client && this.client.clusterConfiguration) {\n                    ////console.log(e.detail);\n                    yield this.client.act(this.avatarId, Events_1.Events.EVENT_STATE_END, e.detail.state);\n                }\n            })));\n            this.playerElement.addEventListener(Events_1.Events.EVENT_ACTION, ((e) => __awaiter(this, void 0, void 0, function* () {\n                if (this.client && this.client.clusterConfiguration) {\n                    ////console.log(e.detail);\n                    const actionEventDetail = e.detail;\n                    yield this.client.act(this.avatarId, actionEventDetail.action, actionEventDetail.description);\n                }\n            })));\n        }\n        if (!this.cameraElement) {\n            //console.log(\"dataspace - did not find camera element in dom.\");\n        }\n        //console.log(this.systemName + \" setting up client...\");\n        if (this.playerElement && this.cameraElement) {\n            if (!this.playerObject || !this.cameraObject) {\n                this.playerObject = this.playerElement.object3D;\n                if (this.cameraElement) {\n                    this.cameraObject = this.cameraElement.object3D;\n                }\n                if (!this.playerObject) {\n                    //console.log(\"No player object.\");\n                }\n                if (!this.cameraObject) {\n                    //console.log(\"No camera object.\");\n                }\n            }\n        }\n        if (this.playerObject && this.cameraObject) {\n            this.client = new reality_space_1.ClusterClient(this.clusterUrl, this.space, this.avatarId, this.playerObject.position.x, this.playerObject.position.y, this.playerObject.position.z, this.cameraObject.quaternion.x, this.cameraObject.quaternion.y, this.cameraObject.quaternion.z, this.cameraObject.quaternion.w, this.getAvatarDescription(), this.idToken);\n            this.client.onReceive = (region, type, message) => {\n                ////console.log(message);\n                if (type === reality_space_1.Encode.ADDED) {\n                    const m = reality_space_1.Decode.added(message);\n                    this.dynamicSpace.added(region, m[0], m[1], m[2], m[3], m[4], m[5], m[6], m[7], m[8], m[9]);\n                }\n                if (type === reality_space_1.Encode.UPDATED) {\n                    const m = reality_space_1.Decode.updated(message);\n                    this.dynamicSpace.updated(region, m[0], m[1], m[2], m[3], m[4], m[5], m[6], m[7]);\n                }\n                if (type === reality_space_1.Encode.REMOVED) {\n                    const m = reality_space_1.Decode.removed(message);\n                    this.dynamicSpace.removed(region, m[0], m[1]);\n                }\n                if (type === reality_space_1.Encode.DESCRIBED) {\n                    const m = reality_space_1.Decode.described(message);\n                    this.dynamicSpace.described(region, m[0], m[1]);\n                }\n                if (type === reality_space_1.Encode.ACTED) {\n                    const m = reality_space_1.Decode.acted(message);\n                    this.dynamicSpace.acted(region, m[0], m[1], m[2]);\n                }\n            };\n            this.client.onStoredRootEntityReceived = (region, sid, entityXml) => {\n                this.staticSpace.setRootEntity(region, sid, entityXml);\n            };\n            this.client.onStoredChildEntityReceived = (region, parentSid, sid, entityXml) => {\n                this.staticSpace.setChildEntity(region, parentSid, sid, entityXml);\n            };\n            this.client.onStoredEntityRemoved = (region, sid) => {\n                this.staticSpace.removeEntity(region, sid);\n            };\n            this.client.onLoaded = (region) => {\n                this.staticSpace.loaded(region);\n            };\n            this.client.onConnectError = (region, error) => {\n                document.location.href = \"/connection_error.html\";\n            };\n            this.client.onConnect = (region) => {\n                //console.log(\"dataspace - connected: \" + region);\n                const regionConfiguration = this.client.getRegionConfiguration(region);\n                const regionX = regionConfiguration.x;\n                const regionY = regionConfiguration.y;\n                const regionZ = regionConfiguration.z - 2; // TODO Remove this test\n                this.dynamicSpace.connected(region);\n                this.staticSpace.connected(region, new three_1.Vector3(regionX, regionY, regionZ));\n            };\n            this.client.onDisconnect = (region) => {\n                //console.log(\"dataspace - disconnected: \" + region)\n                this.dynamicSpace.disconnected(region);\n                this.staticSpace.disconnected(region);\n            };\n            this.client.connect().then(() => {\n                if (this.client && this.client.clusterConfiguration) {\n                    this.observationRange = Math.trunc(this.client.clusterConfiguration.range / this.client.clusterConfiguration.step) * this.client.clusterConfiguration.step;\n                    const interfaceSystem = aframe_typescript_boilerplate_1.getSystemController(this.scene, \"interface\");\n                    const observationRange = this.getObservationRange();\n                    console.log(\"Set camera far to: \" + observationRange);\n                    interfaceSystem.cameraEntity.object3D.far = observationRange;\n                }\n            }).catch((error) => {\n                console.warn(\"dataspace - cluster client connect error.\", error);\n                this.client = undefined;\n            });\n        }\n    }\n    getObservationRange() {\n        return this.observationRange;\n    }\n    sendAvatarDescriptionUpdate() {\n        if (this.client) {\n            const avatarDescription = this.getAvatarDescription();\n            //console.log(\"Describing avatar: \" + avatarDescription);\n            this.client.describe(this.avatarId, this.getAvatarDescription()).catch((error) => {\n                //console.log(\"Error describing avatar: \" + error);\n            });\n        }\n    }\n    getAvatarDescription() {\n        const interfaceSystem = this.getSystemController(\"interface\");\n        const selfScale = interfaceSystem ? interfaceSystem.getSelfScale() : 1;\n        const avatarScale = selfScale * 0.4; // TODO fix the model size.\n        return '<a-entity gltf-model=\"#male_suit\" scale=\"' + avatarScale + ' ' + avatarScale + ' ' + avatarScale + '\" avatar=\"\"></a-entity>';\n    }\n    addEntity(template, position, scale) {\n        if (this.client) {\n            const region = this.client.getRegion(position.x, position.y, position.z);\n            const regionConfiguration = this.client.getRegionConfiguration(region);\n            const localPosition = position.clone();\n            localPosition.sub(new three_1.Vector3(regionConfiguration.x, regionConfiguration.y, regionConfiguration.z));\n            localPosition.z = localPosition.z + 2;\n            const newEntity = aframe_typescript_boilerplate_1.createElement(template);\n            newEntity.setAttribute(\"scale\", scale.x + \" \" + scale.y + \" \" + scale.z);\n            newEntity.setAttribute(\"position\", localPosition.x + \" \" + localPosition.y + \" \" + localPosition.z);\n            newEntity.setAttribute(\"oid\", uuid.v4().toString());\n            if (newEntity.flushToDOM) {\n                newEntity.flushToDOM(true);\n            }\n            this.staticSpace.regionElements.get(region).appendChild(newEntity);\n            this.client.storeEntity(newEntity.outerHTML, position.x, position.y, position.z).catch(error => {\n                console.error(\"Error saving entity\", error);\n            });\n        }\n    }\n    updateEntity(entity, position, orientation, scale) {\n        if (this.client) {\n            const sid = entity.getAttribute(\"sid\");\n            this.staticSpace.ignoreNextSetSids.push(sid);\n            const region = this.client.getRegion(position.x, position.y, position.z);\n            const regionConfiguration = this.client.getRegionConfiguration(region);\n            const localPosition = position.clone();\n            localPosition.sub(new three_1.Vector3(regionConfiguration.x, regionConfiguration.y, regionConfiguration.z));\n            localPosition.z = localPosition.z + 2;\n            const modelController = aframe_typescript_boilerplate_1.getComponentController(entity, \"model\");\n            if (modelController && modelController.merge) {\n                //console.log(\"updating merge as entity is part of merge.\");\n                entity.setAttribute(\"position\", localPosition.x + \" \" + localPosition.y + \" \" + localPosition.z);\n                entity.setAttribute(\"quaternion\", orientation.x + \" \" + orientation.y + \" \" + orientation.z + \" \" + orientation.w);\n                entity.setAttribute(\"scale\", scale.x + \" \" + scale.y + \" \" + scale.z);\n                const mergeSystem = this.getSystemController(\"merge\");\n                mergeSystem.updateMergeChild(modelController.merge, entity);\n            }\n            const entityXml = entity.outerHTML;\n            const newEntity = aframe_typescript_boilerplate_1.createElement(entityXml);\n            newEntity.setAttribute(\"position\", localPosition.x + \" \" + localPosition.y + \" \" + localPosition.z);\n            newEntity.setAttribute(\"quaternion\", orientation.x + \" \" + orientation.y + \" \" + orientation.z + \" \" + orientation.w);\n            newEntity.setAttribute(\"scale\", scale.x + \" \" + scale.y + \" \" + scale.z);\n            newEntity.setAttribute(\"oid\", uuid.v4().toString());\n            if (newEntity.flushToDOM) {\n                newEntity.flushToDOM(true);\n            }\n            this.client.storeEntity(newEntity.outerHTML, position.x, position.y, position.z).catch(error => {\n                console.error(\"Error saving entity\", error);\n            });\n        }\n    }\n    removeEntity(entity) {\n        if (this.client) {\n            const entitySid = entity.getAttribute(\"sid\");\n            if (entitySid) {\n                //console.log(\"removing from storage\");\n                const position = entity.object3D.position.clone();\n                const worldPosition = entity.object3D.getWorldPosition(position);\n                this.client.removeStoredEntity(entitySid, worldPosition.x, worldPosition.y, worldPosition.z).catch(error => {\n                    //console.log(\"Error removing entity.\", error);\n                });\n            }\n            //console.log(\"removing locally\");\n            entity.parentElement.removeChild(entity);\n        }\n    }\n}\nSpaceSystemController.DEFINITION = new aframe_typescript_boilerplate_1.SystemControllerDefinition(\"space\", {}, (system, scene, data) => new SpaceSystemController(system, scene, data));\nexports.SpaceSystemController = SpaceSystemController;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/browser/system/space/SpaceSystemController.ts\n");

/***/ }),

/***/ "./src/browser/system/space/Spring.ts":
/*!********************************************!*\
  !*** ./src/browser/system/space/Spring.ts ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst three_1 = __webpack_require__(/*! three */ \"three\");\nclass Spring {\n    constructor() {\n        this.relaxationTime = 0.45;\n        this.currentPosition = new three_1.Vector3();\n        this.targetPosition = new three_1.Vector3();\n        this.temporary = new three_1.Vector3();\n        this.currentOrientation = new three_1.Quaternion();\n        this.targetOrientation = new three_1.Quaternion();\n    }\n    simulate(t) {\n        if (t > 0.04) {\n            t = 0.04;\n        }\n        // Calculate distance between current position and target position.\n        const totalDistance = this.currentPosition.distanceTo(this.targetPosition);\n        let v = Math.pow(totalDistance / this.relaxationTime, 2);\n        if (v < 0.3) {\n            v = 0.3;\n        }\n        let s = v * t;\n        if (s > totalDistance * 0.5) {\n            s = totalDistance * 0.5;\n        }\n        // Calculate normalized direction vector between current position and target position.\n        this.temporary.copy(this.targetPosition);\n        this.temporary.sub(this.currentPosition).normalize();\n        // Calculate delta vector.\n        this.temporary.multiplyScalar(s);\n        // Add delta to current position-\n        this.currentPosition.add(this.temporary);\n        // Interpolate orientation change\n        this.currentOrientation.slerp(this.targetOrientation, t / this.relaxationTime);\n        this.currentOrientation.normalize();\n    }\n}\nexports.Spring = Spring;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9zeXN0ZW0vc3BhY2UvU3ByaW5nLnRzPzcwOTciXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwwREFBMEM7QUFFMUMsTUFBYSxNQUFNO0lBQW5CO1FBR0ksbUJBQWMsR0FBVyxJQUFJLENBQUM7UUFDOUIsb0JBQWUsR0FBWSxJQUFJLGVBQU8sRUFBRSxDQUFDO1FBQ3pDLG1CQUFjLEdBQVksSUFBSSxlQUFPLEVBQUUsQ0FBQztRQUN4QyxjQUFTLEdBQVksSUFBSSxlQUFPLEVBQUUsQ0FBQztRQUVuQyx1QkFBa0IsR0FBZSxJQUFJLGtCQUFVLEVBQUUsQ0FBQztRQUNsRCxzQkFBaUIsR0FBZSxJQUFJLGtCQUFVLEVBQUUsQ0FBQztJQW1DckQsQ0FBQztJQWhDRyxRQUFRLENBQUMsQ0FBUztRQUNkLElBQUksQ0FBQyxHQUFHLElBQUksRUFBRTtZQUNWLENBQUMsR0FBRyxJQUFJLENBQUM7U0FDWjtRQUVELG1FQUFtRTtRQUNuRSxNQUFNLGFBQWEsR0FBRyxJQUFJLENBQUMsZUFBZSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDLENBQUM7UUFDM0UsSUFBSSxDQUFDLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxhQUFhLEdBQUcsSUFBSSxDQUFDLGNBQWMsRUFBRSxDQUFDLENBQUMsQ0FBQztRQUN6RCxJQUFJLENBQUMsR0FBRyxHQUFHLEVBQUU7WUFDVCxDQUFDLEdBQUcsR0FBRyxDQUFDO1NBQ1g7UUFDRCxJQUFJLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ2QsSUFBSSxDQUFDLEdBQUcsYUFBYSxHQUFHLEdBQUcsRUFBRTtZQUN6QixDQUFDLEdBQUcsYUFBYSxHQUFHLEdBQUcsQ0FBQztTQUMzQjtRQUVELHNGQUFzRjtRQUN0RixJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDLENBQUM7UUFDekMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLGVBQWUsQ0FBQyxDQUFDLFNBQVMsRUFBRSxDQUFDO1FBRXJELDBCQUEwQjtRQUMxQixJQUFJLENBQUMsU0FBUyxDQUFDLGNBQWMsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUVqQyxpQ0FBaUM7UUFDakMsSUFBSSxDQUFDLGVBQWUsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBRXpDLGlDQUFpQztRQUNqQyxJQUFJLENBQUMsa0JBQWtCLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxpQkFBaUIsRUFBRSxDQUFDLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FBQyxDQUFDO1FBQy9FLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxTQUFTLEVBQUUsQ0FBQztJQUV4QyxDQUFDO0NBRUo7QUE1Q0Qsd0JBNENDIiwiZmlsZSI6Ii4vc3JjL2Jyb3dzZXIvc3lzdGVtL3NwYWNlL1NwcmluZy50cy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7UXVhdGVybmlvbiwgVmVjdG9yM30gZnJvbSBcInRocmVlXCI7XG5cbmV4cG9ydCBjbGFzcyBTcHJpbmcge1xuXG5cbiAgICByZWxheGF0aW9uVGltZTogbnVtYmVyID0gMC40NTtcbiAgICBjdXJyZW50UG9zaXRpb246IFZlY3RvcjMgPSBuZXcgVmVjdG9yMygpO1xuICAgIHRhcmdldFBvc2l0aW9uOiBWZWN0b3IzID0gbmV3IFZlY3RvcjMoKTtcbiAgICB0ZW1wb3Jhcnk6IFZlY3RvcjMgPSBuZXcgVmVjdG9yMygpO1xuXG4gICAgY3VycmVudE9yaWVudGF0aW9uOiBRdWF0ZXJuaW9uID0gbmV3IFF1YXRlcm5pb24oKTtcbiAgICB0YXJnZXRPcmllbnRhdGlvbjogUXVhdGVybmlvbiA9IG5ldyBRdWF0ZXJuaW9uKCk7XG5cblxuICAgIHNpbXVsYXRlKHQ6IG51bWJlcikge1xuICAgICAgICBpZiAodCA+IDAuMDQpIHtcbiAgICAgICAgICAgIHQgPSAwLjA0O1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gQ2FsY3VsYXRlIGRpc3RhbmNlIGJldHdlZW4gY3VycmVudCBwb3NpdGlvbiBhbmQgdGFyZ2V0IHBvc2l0aW9uLlxuICAgICAgICBjb25zdCB0b3RhbERpc3RhbmNlID0gdGhpcy5jdXJyZW50UG9zaXRpb24uZGlzdGFuY2VUbyh0aGlzLnRhcmdldFBvc2l0aW9uKTtcbiAgICAgICAgbGV0IHYgPSBNYXRoLnBvdyh0b3RhbERpc3RhbmNlIC8gdGhpcy5yZWxheGF0aW9uVGltZSwgMik7XG4gICAgICAgIGlmICh2IDwgMC4zKSB7XG4gICAgICAgICAgICB2ID0gMC4zO1xuICAgICAgICB9XG4gICAgICAgIGxldCBzID0gdiAqIHQ7XG4gICAgICAgIGlmIChzID4gdG90YWxEaXN0YW5jZSAqIDAuNSkge1xuICAgICAgICAgICAgcyA9IHRvdGFsRGlzdGFuY2UgKiAwLjU7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBDYWxjdWxhdGUgbm9ybWFsaXplZCBkaXJlY3Rpb24gdmVjdG9yIGJldHdlZW4gY3VycmVudCBwb3NpdGlvbiBhbmQgdGFyZ2V0IHBvc2l0aW9uLlxuICAgICAgICB0aGlzLnRlbXBvcmFyeS5jb3B5KHRoaXMudGFyZ2V0UG9zaXRpb24pO1xuICAgICAgICB0aGlzLnRlbXBvcmFyeS5zdWIodGhpcy5jdXJyZW50UG9zaXRpb24pLm5vcm1hbGl6ZSgpO1xuXG4gICAgICAgIC8vIENhbGN1bGF0ZSBkZWx0YSB2ZWN0b3IuXG4gICAgICAgIHRoaXMudGVtcG9yYXJ5Lm11bHRpcGx5U2NhbGFyKHMpO1xuXG4gICAgICAgIC8vIEFkZCBkZWx0YSB0byBjdXJyZW50IHBvc2l0aW9uLVxuICAgICAgICB0aGlzLmN1cnJlbnRQb3NpdGlvbi5hZGQodGhpcy50ZW1wb3JhcnkpO1xuXG4gICAgICAgIC8vIEludGVycG9sYXRlIG9yaWVudGF0aW9uIGNoYW5nZVxuICAgICAgICB0aGlzLmN1cnJlbnRPcmllbnRhdGlvbi5zbGVycCh0aGlzLnRhcmdldE9yaWVudGF0aW9uLCB0IC8gdGhpcy5yZWxheGF0aW9uVGltZSk7XG4gICAgICAgIHRoaXMuY3VycmVudE9yaWVudGF0aW9uLm5vcm1hbGl6ZSgpO1xuXG4gICAgfVxuXG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/browser/system/space/Spring.ts\n");

/***/ }),

/***/ "./src/browser/system/space/StaticSpace.ts":
/*!*************************************************!*\
  !*** ./src/browser/system/space/StaticSpace.ts ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst xml_js_1 = __webpack_require__(/*! xml-js */ \"./node_modules/xml-js/lib/index.js\");\nconst aframe_typescript_boilerplate_1 = __webpack_require__(/*! aframe-typescript-boilerplate */ \"./node_modules/aframe-typescript-boilerplate/built/index.js\");\nclass StaticSpace {\n    constructor(scene) {\n        this.regionElements = new Map();\n        this.loadingRegions = new Set();\n        this.ignoreNextSetSids = [];\n        this.scene = scene;\n    }\n    connected(region, regionOrigo) {\n        if (!this.regionElements.has(region)) {\n            const regionElement = aframe_typescript_boilerplate_1.createElement('<a-entity merge shadow region=\"' + region + '\" position=\"' + regionOrigo.x + ' ' + regionOrigo.y + ' ' + regionOrigo.z + '\"/>');\n            this.regionElements.set(region, regionElement);\n            this.scene.appendChild(regionElement);\n        }\n        this.addToLoadingRegions(region);\n    }\n    loaded(region) {\n        this.removeFromLoadingRegions(region);\n    }\n    disconnected(region) {\n        if (this.regionElements.has(region)) {\n            const regionElement = this.regionElements.get(region);\n            if (regionElement.parentElement) {\n                regionElement.parentElement.removeChild(regionElement);\n            }\n            this.regionElements.delete(region);\n        }\n        const elements = document.querySelectorAll('[server=\"' + region + '\"]');\n        elements.forEach(element => {\n            if (element.parentElement) {\n                element.parentElement.removeChild(element);\n            }\n        });\n        this.removeFromLoadingRegions(region);\n    }\n    addToLoadingRegions(region) {\n        if (!this.loadingRegions.has(region)) {\n            this.loadingRegions.add(region);\n            aframe_typescript_boilerplate_1.getSystemController(this.scene, \"loader-system\").increaseLoadingCounter();\n            console.log(\"added to loading regions: \" + region);\n        }\n    }\n    removeFromLoadingRegions(region) {\n        if (this.loadingRegions.has(region)) {\n            this.loadingRegions.delete(region);\n            aframe_typescript_boilerplate_1.getSystemController(this.scene, \"loader-system\").decreaseLoadingCounter();\n            console.log(\"removed from loading regions: \" + region);\n        }\n    }\n    setRootEntity(region, sid, entityXml) {\n        if (this.ignoreNextSetSids.indexOf(sid) > -1) {\n            this.ignoreNextSetSids.splice(this.ignoreNextSetSids.indexOf(sid), 1);\n            return;\n        }\n        //console.log(\"Set root entity \" + region + \"/\" + sid + \": \" + entityXml);\n        const existingElement = this.getElement(sid);\n        if (existingElement) {\n            // Remove old element as it is being replaced.\n            //existingElement.parentElement!!.removeChild(existingElement);\n            const newElement = xml_js_1.xml2js(entityXml).elements[0];\n            this.recursiveUpdate(existingElement, newElement);\n            const modelController = aframe_typescript_boilerplate_1.getComponentController(existingElement, \"model\");\n            if (modelController && modelController.merge) {\n                const mergeSystem = aframe_typescript_boilerplate_1.getSystemController(this.scene, \"merge\");\n                mergeSystem.updateMergeChild(modelController.merge, existingElement);\n            }\n        }\n        else {\n            // If element exists with oid then update that element.\n            const newElement = aframe_typescript_boilerplate_1.createElement(entityXml);\n            const oid = newElement.getAttribute(\"oid\");\n            newElement.setAttribute(\"server\", region);\n            newElement.setAttribute(\"collidable\", \"\");\n            if (oid) {\n                const elements = document.querySelectorAll('[oid=\"' + oid + '\"]');\n                for (const element of elements) {\n                    element.setAttribute(\"sid\", sid);\n                    element.setAttribute(\"server\", region);\n                    return;\n                }\n            }\n            // Add element as element does not exist yet.\n            this.regionElements.get(region).appendChild(newElement);\n        }\n    }\n    recursiveUpdate(existingElement, newElement) {\n        const existingAttributeNames = new Set(existingElement.getAttributeNames());\n        if (newElement.attributes) {\n            for (const attributeName in newElement.attributes) {\n                const value = newElement.attributes[attributeName].toString();\n                if (attributeName != \"model\") {\n                    existingElement.setAttribute(attributeName, value);\n                }\n                existingAttributeNames.delete(attributeName);\n            }\n        }\n        // Remove attribute names not present in new element.\n        for (const attributeName of existingAttributeNames) {\n            existingElement.removeAttribute(attributeName);\n        }\n        const existingChildElements = new Map();\n        for (const child of existingElement.children) {\n            const sid = child.getAttribute(\"sid\");\n            if (sid) {\n                existingChildElements.set(sid, child);\n            }\n        }\n        if (newElement.elements) {\n            for (const newChild of newElement.elements) {\n                const sid = newChild.attributes[\"sid\"].toString();\n                if (existingChildElements.has(sid)) {\n                    const existingChild = existingChildElements.get(\"sid\");\n                    // Update child recursively.\n                    this.recursiveUpdate(existingChild, newChild);\n                    existingChildElements.delete(sid);\n                }\n                else {\n                    // Append child as new element.\n                    existingElement.appendChild(aframe_typescript_boilerplate_1.createElement(xml_js_1.js2xml(newChild)));\n                }\n            }\n        }\n        // Remove existing children with sid not present in new element.\n        for (const existingChild of existingChildElements.values()) {\n            existingElement.removeChild(existingChild);\n        }\n    }\n    setChildEntity(region, parentSid, sid, entityXml) {\n        if (this.ignoreNextSetSids.indexOf(sid) > -1) {\n            this.ignoreNextSetSids.splice(this.ignoreNextSetSids.indexOf(sid), 1);\n            return;\n        }\n        //console.log(\"Set child entity \" + region + \"/\" + parentSid + \"/\" + sid + \": \" + entityXml);\n        const parentElement = this.getElement(parentSid);\n        if (parentElement === undefined) {\n            //console.log(\"Parent element not found sid: \" + sid);\n            return;\n        }\n        const oldElement = this.getElement(sid);\n        if (oldElement) {\n            // Remove old element as it is being replaced.\n            parentElement.removeChild(oldElement);\n        }\n        const newElement = aframe_typescript_boilerplate_1.createElement(entityXml);\n        newElement.setAttribute(\"server\", region);\n        parentElement.appendChild(newElement);\n    }\n    removeEntity(region, sid) {\n        //console.log(\"Removed entity \" + region + \"/\" + sid);\n        const element = this.getElement(sid);\n        if (element === undefined) {\n            //console.log(\"Element to be removed not found sid: \" + sid);\n            return;\n        }\n        if (element.parentElement) {\n            element.parentElement.removeChild(element);\n        }\n        aframe_typescript_boilerplate_1.getSystemController(this.scene, \"state\").removeStates(element);\n    }\n    getElement(sid) {\n        const elements = document.querySelectorAll('[sid=\"' + sid + '\"]');\n        if (!elements || elements.length == 0) {\n            return undefined;\n        }\n        if (elements.length > 1) {\n            //console.log(\"More than one element found with sid: \" + sid);\n            return undefined;\n        }\n        return elements.item(0);\n    }\n}\nexports.StaticSpace = StaticSpace;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/browser/system/space/StaticSpace.ts\n");

/***/ }),

/***/ "./src/browser/system/state/StateSystemController.ts":
/*!***********************************************************!*\
  !*** ./src/browser/system/state/StateSystemController.ts ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst aframe_typescript_boilerplate_1 = __webpack_require__(/*! aframe-typescript-boilerplate */ \"./node_modules/aframe-typescript-boilerplate/built/index.js\");\nconst factories = new Map();\nfunction registerStateFactory(state, factory) {\n    factories.set(state, factory);\n}\nexports.registerStateFactory = registerStateFactory;\nclass StateSystemController extends aframe_typescript_boilerplate_1.AbstractSystemController {\n    constructor(system, scene, data) {\n        super(system, scene, data);\n        this.states = new Map();\n    }\n    init() {\n    }\n    pause() {\n    }\n    play() {\n    }\n    tick(time, timeDelta) {\n    }\n    getState(entity, state) {\n        if (!factories.has(state)) {\n            throw new Error(\"Unknown state type: \" + state);\n        }\n        if (!this.states.has(entity)) {\n            this.states.set(entity, new Map());\n        }\n        const entityStates = this.states.get(entity);\n        if (!entityStates.has(state)) {\n            entityStates.set(state, factories.get(state)());\n            //console.log(entity.tagName + \" added state: \" + state);\n        }\n        return entityStates.get(state);\n    }\n    removeStates(entity) {\n        this.states.delete(entity);\n        //console.log(entity.tagName + \" removed states.\");\n    }\n    removeState(entity, state) {\n        if (this.states.has(entity)) {\n            this.states.get(entity).delete(state);\n        }\n        //console.log(entity.tagName + \" removed state: \" + state);\n    }\n}\nStateSystemController.DEFINITION = new aframe_typescript_boilerplate_1.SystemControllerDefinition(\"state\", {}, (system, scene, data) => new StateSystemController(system, scene, data));\nexports.StateSystemController = StateSystemController;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9zeXN0ZW0vc3RhdGUvU3RhdGVTeXN0ZW1Db250cm9sbGVyLnRzP2IzNjIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFDQSxnS0FBbUc7QUFFbkcsTUFBTSxTQUFTLEdBQTJCLElBQUksR0FBRyxFQUFFLENBQUM7QUFFcEQsU0FBZ0Isb0JBQW9CLENBQUksS0FBYSxFQUFFLE9BQWdCO0lBQ25FLFNBQVMsQ0FBQyxHQUFHLENBQUMsS0FBSyxFQUFFLE9BQU8sQ0FBQyxDQUFDO0FBQ2xDLENBQUM7QUFGRCxvREFFQztBQUdELE1BQWEscUJBQXNCLFNBQVEsd0RBQXdCO0lBUy9ELFlBQVksTUFBYyxFQUFFLEtBQVksRUFBRSxJQUFTO1FBQy9DLEtBQUssQ0FBQyxNQUFNLEVBQUUsS0FBSyxFQUFFLElBQUksQ0FBQyxDQUFDO1FBSHZCLFdBQU0sR0FBa0MsSUFBSSxHQUFHLEVBQUUsQ0FBQztJQUkxRCxDQUFDO0lBRUQsSUFBSTtJQUNKLENBQUM7SUFFRCxLQUFLO0lBQ0wsQ0FBQztJQUVELElBQUk7SUFDSixDQUFDO0lBRUQsSUFBSSxDQUFDLElBQVksRUFBRSxTQUFpQjtJQUNwQyxDQUFDO0lBRUQsUUFBUSxDQUFJLE1BQWMsRUFBRSxLQUFhO1FBQ3JDLElBQUksQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxFQUFFO1lBQ3ZCLE1BQU0sSUFBSSxLQUFLLENBQUMsc0JBQXNCLEdBQUcsS0FBSyxDQUFDLENBQUM7U0FDbkQ7UUFDRCxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLEVBQUU7WUFDMUIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsTUFBTSxFQUFFLElBQUksR0FBRyxFQUFFLENBQUMsQ0FBQztTQUN0QztRQUNELE1BQU0sWUFBWSxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBRyxDQUFDO1FBQy9DLElBQUksQ0FBQyxZQUFZLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxFQUFFO1lBQzFCLFlBQVksQ0FBQyxHQUFHLENBQUMsS0FBSyxFQUFFLFNBQVMsQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFHLEVBQUUsQ0FBQyxDQUFDO1lBQ2xELHlEQUF5RDtTQUM1RDtRQUNELE9BQU8sWUFBWSxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUcsQ0FBQztJQUNyQyxDQUFDO0lBRUQsWUFBWSxDQUFDLE1BQWM7UUFDdkIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDM0IsbURBQW1EO0lBQ3ZELENBQUM7SUFFRCxXQUFXLENBQUMsTUFBYyxFQUFFLEtBQWE7UUFDckMsSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsRUFBRTtZQUN6QixJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUcsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUM7U0FDM0M7UUFDRCwyREFBMkQ7SUFDL0QsQ0FBQzs7QUFoRGEsZ0NBQVUsR0FBRyxJQUFJLDBEQUEwQixDQUNyRCxPQUFPLEVBQUUsRUFBRSxFQUNYLENBQUMsTUFBYyxFQUFFLEtBQVksRUFBRSxJQUFTLEVBQUUsRUFBRSxDQUFDLElBQUkscUJBQXFCLENBQUMsTUFBTSxFQUFFLEtBQUssRUFBRSxJQUFJLENBQUMsQ0FDOUYsQ0FBQztBQUxOLHNEQW9EQyIsImZpbGUiOiIuL3NyYy9icm93c2VyL3N5c3RlbS9zdGF0ZS9TdGF0ZVN5c3RlbUNvbnRyb2xsZXIudHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NvbXBvbmVudCwgRW50aXR5LCBTY2VuZSwgU3lzdGVtfSBmcm9tIFwiYWZyYW1lXCI7XG5pbXBvcnQge0Fic3RyYWN0U3lzdGVtQ29udHJvbGxlciwgU3lzdGVtQ29udHJvbGxlckRlZmluaXRpb259IGZyb20gXCJhZnJhbWUtdHlwZXNjcmlwdC1ib2lsZXJwbGF0ZVwiO1xuXG5jb25zdCBmYWN0b3JpZXM6IE1hcDxzdHJpbmcsICgpID0+IGFueT4gPSBuZXcgTWFwKCk7XG5cbmV4cG9ydCBmdW5jdGlvbiByZWdpc3RlclN0YXRlRmFjdG9yeTxUPihzdGF0ZTogc3RyaW5nLCBmYWN0b3J5OiAoKSA9PiBUKSB7XG4gICAgZmFjdG9yaWVzLnNldChzdGF0ZSwgZmFjdG9yeSk7XG59XG5cblxuZXhwb3J0IGNsYXNzIFN0YXRlU3lzdGVtQ29udHJvbGxlciBleHRlbmRzIEFic3RyYWN0U3lzdGVtQ29udHJvbGxlciB7XG5cbiAgICBwdWJsaWMgc3RhdGljIERFRklOSVRJT04gPSBuZXcgU3lzdGVtQ29udHJvbGxlckRlZmluaXRpb24oXG4gICAgICAgIFwic3RhdGVcIiwge30sXG4gICAgICAgIChzeXN0ZW06IFN5c3RlbSwgc2NlbmU6IFNjZW5lLCBkYXRhOiBhbnkpID0+IG5ldyBTdGF0ZVN5c3RlbUNvbnRyb2xsZXIoc3lzdGVtLCBzY2VuZSwgZGF0YSlcbiAgICApO1xuXG4gICAgcHJpdmF0ZSBzdGF0ZXM6IE1hcDxFbnRpdHksIE1hcDxzdHJpbmcsIGFueT4+ID0gbmV3IE1hcCgpO1xuXG4gICAgY29uc3RydWN0b3Ioc3lzdGVtOiBTeXN0ZW0sIHNjZW5lOiBTY2VuZSwgZGF0YTogYW55KSB7XG4gICAgICAgIHN1cGVyKHN5c3RlbSwgc2NlbmUsIGRhdGEpO1xuICAgIH1cblxuICAgIGluaXQoKTogdm9pZCB7XG4gICAgfVxuXG4gICAgcGF1c2UoKTogdm9pZCB7XG4gICAgfVxuXG4gICAgcGxheSgpOiB2b2lkIHtcbiAgICB9XG5cbiAgICB0aWNrKHRpbWU6IG51bWJlciwgdGltZURlbHRhOiBudW1iZXIpOiB2b2lkIHtcbiAgICB9XG5cbiAgICBnZXRTdGF0ZTxUPihlbnRpdHk6IEVudGl0eSwgc3RhdGU6IHN0cmluZyk6IFQge1xuICAgICAgICBpZiAoIWZhY3Rvcmllcy5oYXMoc3RhdGUpKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJVbmtub3duIHN0YXRlIHR5cGU6IFwiICsgc3RhdGUpO1xuICAgICAgICB9XG4gICAgICAgIGlmICghdGhpcy5zdGF0ZXMuaGFzKGVudGl0eSkpIHtcbiAgICAgICAgICAgIHRoaXMuc3RhdGVzLnNldChlbnRpdHksIG5ldyBNYXAoKSk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgZW50aXR5U3RhdGVzID0gdGhpcy5zdGF0ZXMuZ2V0KGVudGl0eSkhITtcbiAgICAgICAgaWYgKCFlbnRpdHlTdGF0ZXMuaGFzKHN0YXRlKSkge1xuICAgICAgICAgICAgZW50aXR5U3RhdGVzLnNldChzdGF0ZSwgZmFjdG9yaWVzLmdldChzdGF0ZSkhISgpKTtcbiAgICAgICAgICAgIC8vY29uc29sZS5sb2coZW50aXR5LnRhZ05hbWUgKyBcIiBhZGRlZCBzdGF0ZTogXCIgKyBzdGF0ZSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGVudGl0eVN0YXRlcy5nZXQoc3RhdGUpISE7XG4gICAgfVxuXG4gICAgcmVtb3ZlU3RhdGVzKGVudGl0eTogRW50aXR5KTogdm9pZCB7XG4gICAgICAgIHRoaXMuc3RhdGVzLmRlbGV0ZShlbnRpdHkpO1xuICAgICAgICAvL2NvbnNvbGUubG9nKGVudGl0eS50YWdOYW1lICsgXCIgcmVtb3ZlZCBzdGF0ZXMuXCIpO1xuICAgIH1cblxuICAgIHJlbW92ZVN0YXRlKGVudGl0eTogRW50aXR5LCBzdGF0ZTogc3RyaW5nKTogdm9pZCB7XG4gICAgICAgIGlmICh0aGlzLnN0YXRlcy5oYXMoZW50aXR5KSkge1xuICAgICAgICAgICAgdGhpcy5zdGF0ZXMuZ2V0KGVudGl0eSkhIS5kZWxldGUoc3RhdGUpO1xuICAgICAgICB9XG4gICAgICAgIC8vY29uc29sZS5sb2coZW50aXR5LnRhZ05hbWUgKyBcIiByZW1vdmVkIHN0YXRlOiBcIiArIHN0YXRlKTtcbiAgICB9XG5cbn1cblxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/browser/system/state/StateSystemController.ts\n");

/***/ }),

/***/ "./src/browser/three/geometry_merge_util.ts":
/*!**************************************************!*\
  !*** ./src/browser/three/geometry_merge_util.ts ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/**\n * @author mrdoob, tlaukkan (copied from threejs BufferGeometryUtil.js typescript and added extendability, dropped morph attributes support)\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst three_1 = __webpack_require__(/*! three */ \"three\");\nclass BufferGeometryMerge {\n    constructor(material) {\n        this.groupOffset = 0;\n        this.indexOffset = 0;\n        this.indexMerge = new Array();\n        this.attributeMerges = new Map();\n        this.geometry = new three_1.BufferGeometry();\n        this.freeObjectIndexes = new Set();\n        this.material = material;\n    }\n}\nexports.BufferGeometryMerge = BufferGeometryMerge;\nclass BufferAttributeMerge {\n    constructor(attribute, offset) {\n        this.objectIndexAttributeRanges = new Map();\n        this.offset = offset;\n        this.attribute = attribute;\n    }\n}\nfunction mergeBufferGeometries(merge, geometries, useGroups) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const mergedGeometry = merge.geometry;\n        if (geometries.length > 0) {\n            const isIndexed = geometries[0].index !== null;\n            const attributeNames = new Set(Object.keys(geometries[0].attributes));\n            const attributes = {};\n            for (let i = 0; i < geometries.length; ++i) {\n                const geometry = geometries[i];\n                // ensure that all geometries are indexed, or none\n                if (isIndexed !== (geometry.index !== null))\n                    throw new Error(\"Inconsistent indexed in merged geometries.\");\n                // gather attributes, exit early if they're different\n                for (const name in geometry.attributes) {\n                    if (!attributeNames.has(name))\n                        throw new Error(\"Inconsistent attributes in merged geometries.\");\n                    if (attributes[name] === undefined)\n                        attributes[name] = [];\n                    if (geometry.mergeObjectIndex === undefined) {\n                        throw new Error(\"Merge object index not defined for merging geometry.\");\n                    }\n                    geometry.attributes[name].mergeObjectIndex = geometry.mergeObjectIndex;\n                    attributes[name].push(geometry.attributes[name]);\n                }\n                mergedGeometry.userData.mergedUserData = mergedGeometry.userData.mergedUserData || [];\n                mergedGeometry.userData.mergedUserData.push(mergedGeometry.userData);\n                if (useGroups) {\n                    let count;\n                    if (isIndexed) {\n                        count = geometry.index.count;\n                    }\n                    else if (geometry.attributes.position !== undefined) {\n                        count = geometry.attributes.position.count;\n                    }\n                    else {\n                        throw new Error(\"Groups used in geometry merging but group count could not be resolved\");\n                    }\n                    mergedGeometry.addGroup(merge.groupOffset, count, i);\n                    merge.groupOffset += count;\n                }\n            }\n            // merge indices\n            if (isIndexed) {\n                for (let i = 0; i < geometries.length; ++i) {\n                    const index = geometries[i].index;\n                    for (let j = 0; j < index.count; ++j) {\n                        merge.indexMerge.push(index.getX(j) + merge.indexOffset);\n                    }\n                    merge.indexOffset += geometries[i].attributes.position.count;\n                }\n                mergedGeometry.setIndex(merge.indexMerge);\n            }\n            for (const name in attributes) {\n                //console.log(name);\n                const arrayLength = sumArrayLength(attributes[name]);\n                if (!merge.attributeMerges.has(name)) {\n                    // Lets add build capacity for 1000 more geometries.\n                    const extendedArrayLength = arrayLength + attributes[name][0].array.length * 1000;\n                    const attributeMerge = createBufferAttributeMerge(attributes[name], extendedArrayLength);\n                    merge.attributeMerges.set(name, attributeMerge);\n                }\n                else {\n                    const attributeMerge = merge.attributeMerges.get(name);\n                    if (attributeMerge.offset + arrayLength >= attributeMerge.attribute.array.length) {\n                        throw new Error(\"merge out of capacity\");\n                    }\n                }\n            }\n            for (const name in attributes) {\n                const mergedAttribute = yield mergeBufferAttributes(merge.attributeMerges.get(name), name, attributes[name]);\n                if (!mergedGeometry.attributes[name]) {\n                    mergedGeometry.addAttribute(name, mergedAttribute.attribute);\n                }\n            }\n        }\n        for (const attributeMerge of merge.attributeMerges.values()) {\n            attributeMerge.attribute.needsUpdate = true;\n        }\n        mergedGeometry.computeBoundingSphere();\n        mergedGeometry.computeVertexNormals();\n        return mergedGeometry;\n    });\n}\nexports.mergeBufferGeometries = mergeBufferGeometries;\nfunction createBufferAttributeMerge(attributes, arrayLength) {\n    const array = new attributes[0].array.constructor(arrayLength);\n    const merge = new BufferAttributeMerge(new three_1.BufferAttribute(array, attributes[0].itemSize, attributes[0].normalized), 0);\n    // Zero as no attributes added yet.\n    merge.attribute.count = 0;\n    return merge;\n}\nfunction sumArrayLength(attributes) {\n    let arrayLength = 0;\n    for (let i = 0; i < attributes.length; ++i) {\n        arrayLength += attributes[i].array.length;\n    }\n    return arrayLength;\n}\nfunction mergeBufferAttributes(merge, name, attributes) {\n    return __awaiter(this, void 0, void 0, function* () {\n        for (const attribute of attributes) {\n            if (attribute.isInterleavedBufferAttribute)\n                throw new Error(\"Attributes had interleaved attributes..\");\n            yield mergeBufferAttributeWithDelay(merge, attribute);\n        }\n        return merge;\n    });\n}\nlet niceTimeoutCounter = 0;\nfunction mergeBufferAttributeWithDelay(merge, attribute) {\n    return new Promise(function (resolve, reject) {\n        mergeBufferAttribute(merge, attribute).then(() => {\n            niceTimeoutCounter++;\n            if (niceTimeoutCounter % 100 == 0) {\n                setTimeout(() => {\n                    resolve();\n                }, 1);\n            }\n            else {\n                resolve();\n            }\n        }).catch((error) => {\n            reject(error);\n        });\n    });\n}\nfunction mergeBufferAttribute(merge, attribute) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (merge.attribute.itemSize !== attribute.itemSize)\n            throw new Error(\"Inconsistent item size in merged attributes.\");\n        if (merge.attribute.normalized !== attribute.normalized)\n            throw new Error(\"Inconsistent normalized in merged attributes.\");\n        const mergeObjectIndex = attribute.mergeObjectIndex;\n        if (mergeObjectIndex === undefined) {\n            throw new Error(\"Merge object index not defined for merging attribute.\");\n        }\n        if (!merge.objectIndexAttributeRanges.has(mergeObjectIndex)) {\n            merge.objectIndexAttributeRanges.set(mergeObjectIndex, []);\n        }\n        merge.objectIndexAttributeRanges.get(mergeObjectIndex).push([merge.offset, attribute.array.length]);\n        merge.attribute.array.set(attribute.array, merge.offset);\n        merge.attribute.count = merge.attribute.count + attribute.array.length / attribute.itemSize;\n        merge.offset += attribute.array.length;\n    });\n}\nfunction clearBufferGeometries(merge, geometries) {\n    const mergedGeometry = merge.geometry;\n    if (geometries.length > 0) {\n        const attributes = {};\n        for (let i = 0; i < geometries.length; ++i) {\n            const geometry = geometries[i];\n            for (const name in geometry.attributes) {\n                if (attributes[name] === undefined)\n                    attributes[name] = [];\n                if (geometry.mergeObjectIndex === undefined) {\n                    throw new Error(\"Merge object index not defined for merging geometry.\");\n                }\n                // Store merge object index to free object indexes.\n                if (!merge.freeObjectIndexes.has(geometry.mergeObjectIndex)) {\n                    merge.freeObjectIndexes.add(geometry.mergeObjectIndex);\n                }\n                geometry.attributes[name].mergeObjectIndex = geometry.mergeObjectIndex;\n                attributes[name].push(geometry.attributes[name]);\n            }\n        }\n        for (const name in attributes) {\n            if (name == \"position\") { // clear only positions to disable the geometry\n                clearBufferAttributes(merge.attributeMerges.get(name), name, attributes[name]);\n            }\n        }\n    }\n    for (const attributeMerge of merge.attributeMerges.values()) {\n        attributeMerge.attribute.needsUpdate = true;\n    }\n    return mergedGeometry;\n}\nexports.clearBufferGeometries = clearBufferGeometries;\nfunction clearBufferAttributes(merge, name, attributes) {\n    for (const attribute of attributes) {\n        clearBufferAttribute(merge, attribute);\n    }\n}\nfunction clearBufferAttribute(merge, attribute) {\n    if (merge.attribute.itemSize !== attribute.itemSize)\n        throw new Error(\"Inconsistent item size in merged attributes.\");\n    if (merge.attribute.normalized !== attribute.normalized)\n        throw new Error(\"Inconsistent normalized in merged attributes.\");\n    const mergeObjectIndex = attribute.mergeObjectIndex;\n    if (mergeObjectIndex === undefined) {\n        throw new Error(\"Merge object index not defined for merging attribute.\");\n    }\n    if (!merge.objectIndexAttributeRanges.has(mergeObjectIndex)) {\n        throw new Error(\"Merge object index does not have attribute ranges to clear.\");\n    }\n    for (const range of merge.objectIndexAttributeRanges.get(mergeObjectIndex)) {\n        const offset = range[0];\n        const length = range[1];\n        for (let i = 0; i < length; i++) {\n            merge.attribute.array[offset + i] = 0;\n        }\n    }\n}\nfunction updateBufferGeometries(merge, geometries) {\n    const mergedGeometry = merge.geometry;\n    if (geometries.length > 0) {\n        const attributes = {};\n        for (let i = 0; i < geometries.length; ++i) {\n            const geometry = geometries[i];\n            for (const name in geometry.attributes) {\n                if (attributes[name] === undefined)\n                    attributes[name] = [];\n                if (geometry.mergeObjectIndex === undefined) {\n                    throw new Error(\"Merge object index not defined for merging geometry.\");\n                }\n                geometry.attributes[name].mergeObjectIndex = geometry.mergeObjectIndex;\n                attributes[name].push(geometry.attributes[name]);\n            }\n        }\n        for (const name in attributes) {\n            if (name == \"position\") { // update only positions to disable the geometry\n                updateBufferAttributes(merge.attributeMerges.get(name), name, attributes[name]);\n            }\n        }\n    }\n    for (const attributeMerge of merge.attributeMerges.values()) {\n        attributeMerge.attribute.needsUpdate = true;\n    }\n    mergedGeometry.computeBoundingSphere();\n    mergedGeometry.computeVertexNormals();\n    return mergedGeometry;\n}\nexports.updateBufferGeometries = updateBufferGeometries;\nfunction updateBufferAttributes(merge, name, attributes) {\n    for (const attribute of attributes) {\n        updateBufferAttribute(merge, attribute);\n    }\n}\nfunction updateBufferAttribute(merge, attribute) {\n    if (merge.attribute.itemSize !== attribute.itemSize)\n        throw new Error(\"Inconsistent item size in merged attributes.\");\n    if (merge.attribute.normalized !== attribute.normalized)\n        throw new Error(\"Inconsistent normalized in merged attributes.\");\n    const mergeObjectIndex = attribute.mergeObjectIndex;\n    if (mergeObjectIndex === undefined) {\n        throw new Error(\"Merge object index not defined for merging attribute.\");\n    }\n    if (!merge.objectIndexAttributeRanges.has(mergeObjectIndex)) {\n        throw new Error(\"Merge object index does not have attribute ranges to clear.\");\n    }\n    for (const range of merge.objectIndexAttributeRanges.get(mergeObjectIndex)) {\n        const offset = range[0];\n        const length = range[1];\n        for (let i = 0; i < length; i++) {\n            merge.attribute.array[offset + i] = attribute.array[i];\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/browser/three/geometry_merge_util.ts\n");

/***/ }),

/***/ "./src/browser/three/gltf_load.ts":
/*!****************************************!*\
  !*** ./src/browser/three/gltf_load.ts ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst three_1 = __webpack_require__(/*! three */ \"three\");\nconst merge_util_1 = __webpack_require__(/*! ./merge_util */ \"./src/browser/three/merge_util.ts\");\nconst models = new Map();\nconst modelLoadedCallbacks = new Map();\nfunction setEntityGltfModel(entity, src) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const gltf = yield getGltfModel(src);\n        let mesh = merge_util_1.cloneObject3D(gltf.scene) || merge_util_1.cloneObject3D(gltf.scenes[0]);\n        mesh.animations = gltf.animations;\n        entity.setObject3D('mesh', mesh);\n        entity.emit('model-loaded', { format: 'gltf', model: mesh });\n    });\n}\nexports.setEntityGltfModel = setEntityGltfModel;\nfunction getGltfModel(src) {\n    return new Promise(function (resolve, reject) {\n        if (!models.has(src)) {\n            if (!modelLoadedCallbacks.has(src)) {\n                modelLoadedCallbacks.set(src, []);\n                loadGltfModelQueue(src).then(() => {\n                    modelLoadedCallbacks.get(src).push(() => {\n                        invokeCallbackWithDelay(src, reject, resolve);\n                    });\n                });\n            }\n            else {\n                modelLoadedCallbacks.get(src).push(() => {\n                    invokeCallbackWithDelay(src, reject, resolve);\n                });\n            }\n        }\n        else {\n            setTimeout(() => {\n                resolve(models.get(src));\n            }, 50);\n        }\n    });\n}\nexports.getGltfModel = getGltfModel;\nfunction invokeCallbackWithDelay(src, reject, resolve) {\n    if (!models.has(src)) {\n        console.error(\"GLTF manager - reporting to waiter that loading failed: \" + src);\n        reject(new Error(\"Loading has failed: \" + src));\n    }\n    else {\n        setTimeout(() => {\n            resolve(models.get(src));\n        }, 50);\n    }\n}\nfunction loadGltfModelQueue(src) {\n    return __awaiter(this, void 0, void 0, function* () {\n        while (!(yield attemptGltfModelWithDelay(src))) { }\n    });\n}\nfunction attemptGltfModelWithDelay(src) {\n    return new Promise(function (resolve, reject) {\n        try {\n            setTimeout(() => __awaiter(this, void 0, void 0, function* () {\n                if (loading) {\n                    resolve(false);\n                    return;\n                }\n                yield loadGltfModel(src);\n                resolve(true);\n            }), Math.random() * 300);\n        }\n        catch (error) {\n            reject(error);\n        }\n    });\n}\nlet loading = false;\nfunction setMaterialAnisotropy(material) {\n    if (material.map) {\n        material.map.anisotropy = 2;\n        //material.map.minFilter = LinearMipMapNearestFilter;\n    }\n}\nfunction setObjectMaterialAnisotropy(object) {\n    if (object.type == \"Mesh\") {\n        const mesh = object;\n        if (mesh.material instanceof Array) {\n            const materials = mesh.material;\n            for (const material of materials) {\n                setMaterialAnisotropy(material);\n            }\n        }\n        else if (mesh.material) {\n            setMaterialAnisotropy(mesh.material);\n        }\n    }\n    if (object.children) {\n        for (const child of object.children) {\n            setObjectMaterialAnisotropy(child);\n        }\n    }\n}\nfunction loadGltfModel(src) {\n    return __awaiter(this, void 0, void 0, function* () {\n        loading = true;\n        const loader = new three_1.GLTFLoader();\n        loader.load(src, function (gltf) {\n            let scene = (gltf.scene || gltf.scenes[0]);\n            setObjectMaterialAnisotropy(scene);\n            //console.log(\"GLTF manager - loaded: \" + src);\n            models.set(src, gltf);\n            for (const modelLoaded of modelLoadedCallbacks.get(src)) {\n                modelLoaded();\n            }\n            modelLoadedCallbacks.delete(src);\n            loading = false;\n        }, undefined /* onProgress */, function (error) {\n            console.error(\"GLTF manager - loading failed: \" + src, error);\n            loading = false;\n        });\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/browser/three/gltf_load.ts\n");

/***/ }),

/***/ "./src/browser/three/merge_util.ts":
/*!*****************************************!*\
  !*** ./src/browser/three/merge_util.ts ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst three_1 = __webpack_require__(/*! three */ \"three\");\nconst geometry_merge_util_1 = __webpack_require__(/*! ./geometry_merge_util */ \"./src/browser/three/geometry_merge_util.ts\");\nclass ObjectMerge {\n    constructor() {\n        this.group = new three_1.Group();\n        this.geometryMerges = new Map();\n        this.objectOffset = 0;\n    }\n}\nexports.ObjectMerge = ObjectMerge;\nfunction mergeObject3Ds(merge, objects) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const geometryDataMap = new Map();\n        for (const object of objects) {\n            yield collectBufferGeometries(merge, object, geometryDataMap);\n        }\n        const allGeometryIds = new Set();\n        for (const geometryId of geometryDataMap.keys()) {\n            allGeometryIds.add(geometryId);\n        }\n        for (const geometryId of merge.geometryMerges.keys()) {\n            allGeometryIds.add(geometryId);\n        }\n        for (const geometryId of allGeometryIds) {\n            const geometries = new Array();\n            const geometryDataArray = geometryDataMap.get(geometryId);\n            if (geometryDataArray) {\n                //console.log(geometryId + \": \" + geometryDataMap.get(geometryId)!!.length);\n                const material = geometryDataArray[0].material;\n                for (const geometryData of geometryDataArray) {\n                    geometries.push(geometryData.geometry);\n                }\n                if (!merge.geometryMerges.has(geometryId)) {\n                    //console.log(\"adding geometry merge: \" + geometryId);\n                    const geometryMerge = new geometry_merge_util_1.BufferGeometryMerge(material);\n                    merge.geometryMerges.set(geometryId, geometryMerge);\n                    const mesh = new three_1.Mesh(geometryMerge.geometry, geometryMerge.material);\n                    mesh.castShadow = true;\n                    mesh.receiveShadow = true;\n                    merge.group.add(mesh);\n                }\n            }\n            const geometryMerge = merge.geometryMerges.get(geometryId);\n            yield geometry_merge_util_1.mergeBufferGeometries(geometryMerge, geometries, false);\n        }\n    });\n}\nexports.mergeObject3Ds = mergeObject3Ds;\nfunction clearObject3Ds(merge, objects) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const geometryDataMap = new Map();\n        // TODO Optimize this for clearing so that geometries are not cloned.\n        for (const object of objects) {\n            yield collectBufferGeometries(merge, object, geometryDataMap);\n        }\n        for (const geometryId of geometryDataMap.keys()) {\n            const geometries = new Array();\n            const geometryDataArray = geometryDataMap.get(geometryId);\n            if (geometryDataArray) {\n                for (const geometryData of geometryDataArray) {\n                    geometries.push(geometryData.geometry);\n                }\n            }\n            geometry_merge_util_1.clearBufferGeometries(merge.geometryMerges.get(geometryId), geometries);\n        }\n    });\n}\nexports.clearObject3Ds = clearObject3Ds;\nfunction updateObject3Ds(merge, objects) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const geometryDataMap = new Map();\n        for (const object of objects) {\n            yield collectBufferGeometries(merge, object, geometryDataMap);\n        }\n        for (const geometryId of geometryDataMap.keys()) {\n            const geometries = new Array();\n            const geometryDataArray = geometryDataMap.get(geometryId);\n            if (geometryDataArray) {\n                for (const geometryData of geometryDataArray) {\n                    geometries.push(geometryData.geometry);\n                }\n            }\n            geometry_merge_util_1.updateBufferGeometries(merge.geometryMerges.get(geometryId), geometries);\n        }\n    });\n}\nexports.updateObject3Ds = updateObject3Ds;\nclass GeometryData {\n    constructor(geometry, material) {\n        this.geometry = geometry;\n        this.material = material;\n    }\n}\nfunction collectChildBufferGeometries(merge, children, geometries) {\n    return __awaiter(this, void 0, void 0, function* () {\n        for (const child of children) {\n            yield collectBufferGeometriesWithDelay(merge, child, geometries);\n        }\n    });\n}\nlet niceTimeoutCounter = 0;\nfunction collectBufferGeometriesWithDelay(merge, object, geometries) {\n    return new Promise(function (resolve, reject) {\n        collectBufferGeometries(merge, object, geometries).then(() => {\n            niceTimeoutCounter++;\n            if (niceTimeoutCounter % 50 == 0) {\n                setTimeout(() => {\n                    resolve();\n                }, 1);\n            }\n            else {\n                resolve();\n            }\n        }).catch((error) => {\n            reject(error);\n        });\n    });\n}\nfunction collectBufferGeometries(merge, object, geometries) {\n    return __awaiter(this, void 0, void 0, function* () {\n        //console.log(\"collecting buffer geometries...\");\n        object.updateMatrix();\n        object.updateMatrixWorld(true);\n        //console.log(child.type);\n        if (object.type == \"Mesh\") {\n            const mesh = object;\n            const geometryUuid = mesh.geometry.uuid;\n            const geometry = mesh.geometry.clone();\n            if (object.userData.mergeObjectIndex === undefined) {\n                throw new Error(\"Merge object index of merging object is undefined.\");\n            }\n            geometry.mergeObjectIndex = object.userData.mergeObjectIndex;\n            if (geometry.type == \"BufferGeometry\") {\n                const bufferGeometry = geometry;\n                const material = mesh.material;\n                geometry.applyMatrix(mesh.matrixWorld);\n                if (!geometries.has(geometryUuid)) {\n                    geometries.set(geometryUuid, []);\n                }\n                geometries.get(geometryUuid).push(new GeometryData(bufferGeometry, material));\n            }\n        }\n        if (object.children && object.children.length > 0) {\n            yield collectChildBufferGeometries(merge, object.children, geometries);\n        }\n    });\n}\nfunction cloneObject3D(source) {\n    const target = cloneObject3DCore(source);\n    target.name = source.name;\n    target.up.copy(source.up);\n    target.position.copy(source.position);\n    target.quaternion.copy(source.quaternion);\n    target.scale.copy(source.scale);\n    target.matrix.copy(source.matrix);\n    target.matrixWorld.copy(source.matrixWorld);\n    target.matrixAutoUpdate = source.matrixAutoUpdate;\n    target.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n    target.layers.mask = source.layers.mask;\n    target.visible = source.visible;\n    target.castShadow = source.castShadow;\n    target.receiveShadow = source.receiveShadow;\n    target.frustumCulled = source.frustumCulled;\n    target.renderOrder = source.renderOrder;\n    target.userData = JSON.parse(JSON.stringify(source.userData));\n    for (let i = 0; i < source.children.length; i++) {\n        const child = source.children[i];\n        target.add(cloneObject3D(child));\n    }\n    return target;\n}\nexports.cloneObject3D = cloneObject3D;\nfunction cloneObject3DCore(source) {\n    if (source.type == \"Mesh\") {\n        const target = new three_1.Mesh(source.geometry, source.material);\n        three_1.Object3D.prototype.clone.call(source, target);\n        return target;\n    }\n    else {\n        return new source.constructor();\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/browser/three/merge_util.ts\n");

/***/ }),

/***/ "./src/browser/three/raycast.ts":
/*!**************************************!*\
  !*** ./src/browser/three/raycast.ts ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction raycast(objects, raycaster) {\n    const intersects = new Array();\n    raycastRecursive(objects, raycaster, intersects);\n    intersects.sort(ascSort);\n    return intersects;\n}\nexports.raycast = raycast;\nfunction raycastRecursive(objects, caster, intersects) {\n    for (const object of objects) {\n        object.raycast(caster, intersects);\n        if (object.children && object.children.length > 0) {\n            raycastRecursive(object.children, caster, intersects);\n        }\n    }\n}\nfunction ascSort(a, b) {\n    return a.distance - b.distance;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci90aHJlZS9yYXljYXN0LnRzPzEyYmUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFFQSxTQUFnQixPQUFPLENBQUMsT0FBd0IsRUFBRSxTQUFvQjtJQUNsRSxNQUFNLFVBQVUsR0FBRyxJQUFJLEtBQUssRUFBZ0IsQ0FBQztJQUM3QyxnQkFBZ0IsQ0FBQyxPQUFPLEVBQUUsU0FBUyxFQUFFLFVBQVUsQ0FBQyxDQUFDO0lBQ2pELFVBQVUsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDekIsT0FBTyxVQUFVLENBQUM7QUFDdEIsQ0FBQztBQUxELDBCQUtDO0FBRUQsU0FBUyxnQkFBZ0IsQ0FBQyxPQUF3QixFQUFFLE1BQWlCLEVBQUUsVUFBK0I7SUFDbEcsS0FBSyxNQUFNLE1BQU0sSUFBSSxPQUFPLEVBQUU7UUFDMUIsTUFBTSxDQUFDLE9BQU8sQ0FBQyxNQUFNLEVBQUUsVUFBVSxDQUFDLENBQUM7UUFDbkMsSUFBSSxNQUFNLENBQUMsUUFBUSxJQUFJLE1BQU0sQ0FBQyxRQUFRLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBRTtZQUMvQyxnQkFBZ0IsQ0FBQyxNQUFNLENBQUMsUUFBUSxFQUFFLE1BQU0sRUFBRSxVQUFVLENBQUMsQ0FBQztTQUN6RDtLQUNKO0FBQ0wsQ0FBQztBQUVELFNBQVMsT0FBTyxDQUFFLENBQWUsRUFBRSxDQUFlO0lBRTlDLE9BQU8sQ0FBQyxDQUFDLFFBQVEsR0FBRyxDQUFDLENBQUMsUUFBUSxDQUFDO0FBRW5DLENBQUMiLCJmaWxlIjoiLi9zcmMvYnJvd3Nlci90aHJlZS9yYXljYXN0LnRzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtJbnRlcnNlY3Rpb24sIE9iamVjdDNELCBSYXljYXN0ZXJ9IGZyb20gXCJ0aHJlZVwiO1xuXG5leHBvcnQgZnVuY3Rpb24gcmF5Y2FzdChvYmplY3RzOiBBcnJheTxPYmplY3QzRD4sIHJheWNhc3RlcjogUmF5Y2FzdGVyKSB7XG4gICAgY29uc3QgaW50ZXJzZWN0cyA9IG5ldyBBcnJheTxJbnRlcnNlY3Rpb24+KCk7XG4gICAgcmF5Y2FzdFJlY3Vyc2l2ZShvYmplY3RzLCByYXljYXN0ZXIsIGludGVyc2VjdHMpO1xuICAgIGludGVyc2VjdHMuc29ydChhc2NTb3J0KTtcbiAgICByZXR1cm4gaW50ZXJzZWN0cztcbn1cblxuZnVuY3Rpb24gcmF5Y2FzdFJlY3Vyc2l2ZShvYmplY3RzOiBBcnJheTxPYmplY3QzRD4sIGNhc3RlcjogUmF5Y2FzdGVyLCBpbnRlcnNlY3RzOiBBcnJheTxJbnRlcnNlY3Rpb24+KSB7XG4gICAgZm9yIChjb25zdCBvYmplY3Qgb2Ygb2JqZWN0cykge1xuICAgICAgICBvYmplY3QucmF5Y2FzdChjYXN0ZXIsIGludGVyc2VjdHMpO1xuICAgICAgICBpZiAob2JqZWN0LmNoaWxkcmVuICYmIG9iamVjdC5jaGlsZHJlbi5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICByYXljYXN0UmVjdXJzaXZlKG9iamVjdC5jaGlsZHJlbiwgY2FzdGVyLCBpbnRlcnNlY3RzKTtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuZnVuY3Rpb24gYXNjU29ydCggYTogSW50ZXJzZWN0aW9uLCBiOiBJbnRlcnNlY3Rpb24gKSB7XG5cbiAgICByZXR1cm4gYS5kaXN0YW5jZSAtIGIuZGlzdGFuY2U7XG5cbn0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/browser/three/raycast.ts\n");

/***/ }),

/***/ 0:
/*!**********************!*\
  !*** util (ignored) ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/* (ignored) *///# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vdXRpbCAoaWdub3JlZCk/YTkzMCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiIwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyogKGlnbm9yZWQpICovIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///0\n");

/***/ }),

/***/ 1:
/*!**********************!*\
  !*** util (ignored) ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/* (ignored) *///# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vdXRpbCAoaWdub3JlZCk/OGY0MSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiIxLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyogKGlnbm9yZWQpICovIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///1\n");

/***/ }),

/***/ "aframe":
/*!*************************!*\
  !*** external "AFRAME" ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = AFRAME;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJBRlJBTUVcIj9kZGYxIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6ImFmcmFtZS5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gQUZSQU1FOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///aframe\n");

/***/ }),

/***/ "three":
/*!************************!*\
  !*** external "THREE" ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = THREE;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJUSFJFRVwiP2ZjMDAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoidGhyZWUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IFRIUkVFOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///three\n");

/***/ })

/******/ });