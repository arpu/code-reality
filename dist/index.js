!function(n){var I={};function t(g){if(I[g])return I[g].exports;var B=I[g]={i:g,l:!1,exports:{}};return n[g].call(B.exports,B,B.exports,t),B.l=!0,B.exports}t.m=n,t.c=I,t.d=function(n,I,g){t.o(n,I)||Object.defineProperty(n,I,{enumerable:!0,get:g})},t.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},t.t=function(n,I){if(1&I&&(n=t(n)),8&I)return n;if(4&I&&"object"==typeof n&&n&&n.__esModule)return n;var g=Object.create(null);if(t.r(g),Object.defineProperty(g,"default",{enumerable:!0,value:n}),2&I&&"string"!=typeof n)for(var B in n)t.d(g,B,function(I){return n[I]}.bind(null,B));return g},t.n=function(n){var I=n&&n.__esModule?function(){return n.default}:function(){return n};return t.d(I,"a",I),I},t.o=function(n,I){return Object.prototype.hasOwnProperty.call(n,I)},t.p="",t(t.s=46)}([function(module,exports,__webpack_require__){"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nclass ComponentControllerDefinition {\r\n    constructor(componentName, schema, multiple, constructComponentController) {\r\n        this.componentName = componentName;\r\n        this.schema = schema;\r\n        this.multiple = multiple;\r\n        this.constructComponentController = constructComponentController;\r\n    }\r\n}\r\nexports.ComponentControllerDefinition = ComponentControllerDefinition;\r\nclass SystemControllerDefinition {\r\n    constructor(systemName, schema, constructSystemController) {\r\n        this.systemName = systemName;\r\n        this.schema = schema;\r\n        this.constructSystemController = constructSystemController;\r\n    }\r\n}\r\nexports.SystemControllerDefinition = SystemControllerDefinition;\r\nfunction registerSystemController(definition) {\r\n    if (typeof AFRAME !== \'undefined\') {\r\n        AFRAME.registerSystem(definition.systemName, {\r\n            schema: definition.schema,\r\n            init: function () {\r\n                this.controller = definition.constructSystemController(this, this.el, this.data);\r\n                console.log(definition.systemName + " system init");\r\n                this.controller.init();\r\n            },\r\n            tick: function (time, timeDelta) { this.controller.tick(time, timeDelta); },\r\n            pause: function () {\r\n                console.log(definition.systemName + " system pause");\r\n                this.controller.pause();\r\n            },\r\n            play: function () {\r\n                console.log(definition.systemName + " system play");\r\n                this.controller.play();\r\n            }\r\n        });\r\n    }\r\n}\r\nexports.registerSystemController = registerSystemController;\r\nfunction registerComponentController(definition) {\r\n    if (typeof AFRAME !== \'undefined\') {\r\n        AFRAME.registerComponent(definition.componentName, {\r\n            schema: definition.schema,\r\n            multiple: definition.multiple,\r\n            init: function () {\r\n                this.controller = definition.constructComponentController(this, this.el, this.data);\r\n                this.controller.init();\r\n            },\r\n            update: function (oldData) { this.controller.setData(this.data); this.controller.update(this.data, oldData); },\r\n            remove: function () { this.controller.remove(); },\r\n            tick: function (time, timeDelta) { this.controller.tick(time, timeDelta); },\r\n            pause: function () { this.controller.pause(); },\r\n            play: function () { this.controller.play(); }\r\n        });\r\n    }\r\n}\r\nexports.registerComponentController = registerComponentController;\r\nfunction getSystemController(scene, systemName) {\r\n    if (!scene) {\r\n        throw new Error("Scene is undefined.");\r\n    }\r\n    if (!scene.systems) {\r\n        throw new Error("Scene systems is undefined.");\r\n    }\r\n    const system = scene.systems[systemName];\r\n    if (!system) {\r\n        throw new Error("System is not registered to scene: " + system);\r\n    }\r\n    return system.controller;\r\n}\r\nexports.getSystemController = getSystemController;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///0\n')},function(module,exports,__webpack_require__){"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nconst AFrame_1 = __webpack_require__(0);\r\n/**\r\n * Abstract base class for component implementations.\r\n */\r\nclass AbstractComponentController {\r\n    constructor(component, entity, data) {\r\n        this.componentName = component.name;\r\n        this.entity = entity;\r\n        if (entity) {\r\n            this.scene = entity.sceneEl;\r\n        }\r\n        else {\r\n            // This is prototype\r\n            this.scene = undefined;\r\n        }\r\n        this.data = data;\r\n        this.component = component;\r\n        if (!component) {\r\n            // This is prototype not actual system instance.\r\n            this.interface = {};\r\n            return;\r\n        }\r\n        this.interface = AFrame_1.getSystemController(this.entity.sceneEl, "interface");\r\n    }\r\n    setData(data) {\r\n        this.data = data;\r\n    }\r\n    getSystemController(systemName) {\r\n        if (!this.entity.sceneEl) {\r\n            throw new Error("Scene is undefined.");\r\n        }\r\n        const system = this.entity.sceneEl.systems[systemName];\r\n        if (!system) {\r\n            throw new Error("System is not registered to scene: " + system);\r\n        }\r\n        return system.controller;\r\n    }\r\n    getComponentController(componentName) {\r\n        const component = this.entity.components[componentName];\r\n        if (!component) {\r\n            throw new Error("Component is not registered to entity: " + componentName);\r\n        }\r\n        return component.controller;\r\n    }\r\n    addEventListener(type, listener) {\r\n        this.entity.addEventListener(type, ((e) => {\r\n            listener(e.detail);\r\n        }));\r\n    }\r\n    dispatchEvent(eventType, detail) {\r\n        this.entity.dispatchEvent(new CustomEvent(eventType, { detail: detail }));\r\n    }\r\n}\r\nexports.AbstractComponentController = AbstractComponentController;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9jb21wb25lbnQvQWJzdHJhY3RDb21wb25lbnRDb250cm9sbGVyLnRzP2JmNmMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFJQSx3Q0FBOEM7QUFFOUM7O0dBRUc7QUFDSCxNQUFzQiwyQkFBMkI7SUFTN0MsWUFBWSxTQUFvQixFQUFFLE1BQWMsRUFBRSxJQUFTO1FBQ3ZELElBQUksQ0FBQyxhQUFhLEdBQUcsU0FBUyxDQUFDLElBQUksQ0FBQztRQUNwQyxJQUFJLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQztRQUNyQixJQUFJLE1BQU0sRUFBRTtZQUNSLElBQUksQ0FBQyxLQUFLLEdBQUcsTUFBTSxDQUFDLE9BQVEsQ0FBQztTQUNoQzthQUFNO1lBQ0gsb0JBQW9CO1lBQ3BCLElBQUksQ0FBQyxLQUFLLEdBQUcsU0FBZ0IsQ0FBQztTQUNqQztRQUNELElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO1FBQ2pCLElBQUksQ0FBQyxTQUFTLEdBQUcsU0FBUyxDQUFDO1FBRTNCLElBQUksQ0FBQyxTQUFTLEVBQUU7WUFDWixnREFBZ0Q7WUFDaEQsSUFBSSxDQUFDLFNBQVMsR0FBRyxFQUFTLENBQUM7WUFDM0IsT0FBTztTQUNWO1FBRUQsSUFBSSxDQUFDLFNBQVMsR0FBRyw0QkFBbUIsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLE9BQVMsRUFBRSxXQUFXLENBQUMsQ0FBQztJQUM3RSxDQUFDO0lBRUQsT0FBTyxDQUFDLElBQVM7UUFDYixJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztJQUNyQixDQUFDO0lBY0QsbUJBQW1CLENBQTZCLFVBQWtCO1FBQzlELElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sRUFBRTtZQUN0QixNQUFNLElBQUksS0FBSyxDQUFDLHFCQUFxQixDQUFDLENBQUM7U0FDMUM7UUFFRCxNQUFNLE1BQU0sR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsVUFBVSxDQUFDLENBQUM7UUFDdkQsSUFBSSxDQUFDLE1BQU0sRUFBRTtZQUNULE1BQU0sSUFBSSxLQUFLLENBQUMscUNBQXFDLEdBQUcsTUFBTSxDQUFDLENBQUM7U0FDbkU7UUFFRCxPQUFRLE1BQWMsQ0FBQyxVQUFVLENBQUM7SUFDdEMsQ0FBQztJQUVELHNCQUFzQixDQUFnQyxhQUFxQjtRQUN2RSxNQUFNLFNBQVMsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxhQUFhLENBQUMsQ0FBQztRQUN4RCxJQUFJLENBQUMsU0FBUyxFQUFFO1lBQ1osTUFBTSxJQUFJLEtBQUssQ0FBQyx5Q0FBeUMsR0FBRyxhQUFhLENBQUMsQ0FBQztTQUM5RTtRQUVELE9BQVEsU0FBaUIsQ0FBQyxVQUFVLENBQUM7SUFDekMsQ0FBQztJQUVELGdCQUFnQixDQUFDLElBQVksRUFBRSxRQUFpQztRQUM1RCxJQUFJLENBQUMsTUFBTSxDQUFDLGdCQUFnQixDQUFDLElBQUksRUFBRSxDQUFDLENBQUMsQ0FBYyxFQUFFLEVBQUU7WUFDbkQsUUFBUSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUN2QixDQUFDLENBQVEsQ0FBQyxDQUFDO0lBQ2YsQ0FBQztJQUVELGFBQWEsQ0FBQyxTQUFpQixFQUFFLE1BQVc7UUFDeEMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxhQUFhLENBQUMsSUFBSSxXQUFXLENBQUMsU0FBUyxFQUFFLEVBQUUsTUFBTSxFQUFFLE1BQU0sRUFBRSxDQUFFLENBQUMsQ0FBQztJQUMvRSxDQUFDO0NBQ0o7QUE3RUQsa0VBNkVDIiwiZmlsZSI6IjEuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NvbXBvbmVudENvbnRyb2xsZXJ9IGZyb20gXCIuL0NvbXBvbmVudENvbnRyb2xsZXJcIjtcclxuaW1wb3J0IHtDb21wb25lbnQsIEVudGl0eSwgU2NlbmV9IGZyb20gXCJhZnJhbWVcIjtcclxuaW1wb3J0IHtTeXN0ZW1Db250cm9sbGVyfSBmcm9tIFwiLi4vc3lzdGVtL1N5c3RlbUNvbnRyb2xsZXJcIjtcclxuaW1wb3J0IHtJbnRlcmZhY2VTeXN0ZW1Db250cm9sbGVyfSBmcm9tIFwiLi4vc3lzdGVtL2ludGVyZmFjZS9JbnRlcmZhY2VTeXN0ZW1Db250cm9sbGVyXCI7XHJcbmltcG9ydCB7Z2V0U3lzdGVtQ29udHJvbGxlcn0gZnJvbSBcIi4uL0FGcmFtZVwiO1xyXG5cclxuLyoqXHJcbiAqIEFic3RyYWN0IGJhc2UgY2xhc3MgZm9yIGNvbXBvbmVudCBpbXBsZW1lbnRhdGlvbnMuXHJcbiAqL1xyXG5leHBvcnQgYWJzdHJhY3QgY2xhc3MgQWJzdHJhY3RDb21wb25lbnRDb250cm9sbGVyIGltcGxlbWVudHMgQ29tcG9uZW50Q29udHJvbGxlciB7XHJcbiAgICByZWFkb25seSBjb21wb25lbnROYW1lOiBzdHJpbmc7XHJcbiAgICByZWFkb25seSBlbnRpdHk6IEVudGl0eTtcclxuICAgIHJlYWRvbmx5IHNjZW5lOiBTY2VuZTtcclxuICAgIGRhdGE6IGFueTtcclxuICAgIHJlYWRvbmx5IGNvbXBvbmVudDogQ29tcG9uZW50O1xyXG5cclxuICAgIHByb3RlY3RlZCBpbnRlcmZhY2U6IEludGVyZmFjZVN5c3RlbUNvbnRyb2xsZXI7XHJcblxyXG4gICAgY29uc3RydWN0b3IoY29tcG9uZW50OiBDb21wb25lbnQsIGVudGl0eTogRW50aXR5LCBkYXRhOiBhbnkpIHtcclxuICAgICAgICB0aGlzLmNvbXBvbmVudE5hbWUgPSBjb21wb25lbnQubmFtZTtcclxuICAgICAgICB0aGlzLmVudGl0eSA9IGVudGl0eTtcclxuICAgICAgICBpZiAoZW50aXR5KSB7XHJcbiAgICAgICAgICAgIHRoaXMuc2NlbmUgPSBlbnRpdHkuc2NlbmVFbCE7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgLy8gVGhpcyBpcyBwcm90b3R5cGVcclxuICAgICAgICAgICAgdGhpcy5zY2VuZSA9IHVuZGVmaW5lZCBhcyBhbnk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuZGF0YSA9IGRhdGE7XHJcbiAgICAgICAgdGhpcy5jb21wb25lbnQgPSBjb21wb25lbnQ7XHJcblxyXG4gICAgICAgIGlmICghY29tcG9uZW50KSB7XHJcbiAgICAgICAgICAgIC8vIFRoaXMgaXMgcHJvdG90eXBlIG5vdCBhY3R1YWwgc3lzdGVtIGluc3RhbmNlLlxyXG4gICAgICAgICAgICB0aGlzLmludGVyZmFjZSA9IHt9IGFzIGFueTtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgdGhpcy5pbnRlcmZhY2UgPSBnZXRTeXN0ZW1Db250cm9sbGVyKHRoaXMuZW50aXR5LnNjZW5lRWwhISwgXCJpbnRlcmZhY2VcIik7XHJcbiAgICB9XHJcblxyXG4gICAgc2V0RGF0YShkYXRhOiBhbnkpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLmRhdGEgPSBkYXRhO1xyXG4gICAgfVxyXG5cclxuICAgIGFic3RyYWN0IGluaXQoKTogdm9pZDtcclxuXHJcbiAgICBhYnN0cmFjdCB1cGRhdGUoZGF0YTogYW55LCBvbGREYXRhOiBhbnkpOiB2b2lkO1xyXG5cclxuICAgIGFic3RyYWN0IHJlbW92ZSgpOiB2b2lkO1xyXG5cclxuICAgIGFic3RyYWN0IHBhdXNlKCk6IHZvaWQ7XHJcblxyXG4gICAgYWJzdHJhY3QgcGxheSgpOiB2b2lkO1xyXG5cclxuICAgIGFic3RyYWN0IHRpY2sodGltZTogbnVtYmVyLCB0aW1lRGVsdGE6IG51bWJlcik6IHZvaWQ7XHJcblxyXG4gICAgZ2V0U3lzdGVtQ29udHJvbGxlcjxDIGV4dGVuZHMgU3lzdGVtQ29udHJvbGxlcj4oc3lzdGVtTmFtZTogc3RyaW5nKTogQyB7XHJcbiAgICAgICAgaWYgKCF0aGlzLmVudGl0eS5zY2VuZUVsKSB7XHJcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIlNjZW5lIGlzIHVuZGVmaW5lZC5cIik7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBjb25zdCBzeXN0ZW0gPSB0aGlzLmVudGl0eS5zY2VuZUVsLnN5c3RlbXNbc3lzdGVtTmFtZV07XHJcbiAgICAgICAgaWYgKCFzeXN0ZW0pIHtcclxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiU3lzdGVtIGlzIG5vdCByZWdpc3RlcmVkIHRvIHNjZW5lOiBcIiArIHN5c3RlbSk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICByZXR1cm4gKHN5c3RlbSBhcyBhbnkpLmNvbnRyb2xsZXI7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0Q29tcG9uZW50Q29udHJvbGxlcjxDIGV4dGVuZHMgQ29tcG9uZW50Q29udHJvbGxlcj4oY29tcG9uZW50TmFtZTogc3RyaW5nKTogQyB7XHJcbiAgICAgICAgY29uc3QgY29tcG9uZW50ID0gdGhpcy5lbnRpdHkuY29tcG9uZW50c1tjb21wb25lbnROYW1lXTtcclxuICAgICAgICBpZiAoIWNvbXBvbmVudCkge1xyXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJDb21wb25lbnQgaXMgbm90IHJlZ2lzdGVyZWQgdG8gZW50aXR5OiBcIiArIGNvbXBvbmVudE5hbWUpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcmV0dXJuIChjb21wb25lbnQgYXMgYW55KS5jb250cm9sbGVyO1xyXG4gICAgfVxyXG5cclxuICAgIGFkZEV2ZW50TGlzdGVuZXIodHlwZTogc3RyaW5nLCBsaXN0ZW5lcjogKChkZXRhaWw6IGFueSkgPT4gdm9pZCkpIHtcclxuICAgICAgICB0aGlzLmVudGl0eS5hZGRFdmVudExpc3RlbmVyKHR5cGUsICgoZTogQ3VzdG9tRXZlbnQpID0+IHtcclxuICAgICAgICAgICAgbGlzdGVuZXIoZS5kZXRhaWwpO1xyXG4gICAgICAgIH0pIGFzIGFueSk7XHJcbiAgICB9XHJcblxyXG4gICAgZGlzcGF0Y2hFdmVudChldmVudFR5cGU6IHN0cmluZywgZGV0YWlsOiBhbnkpIHtcclxuICAgICAgICB0aGlzLmVudGl0eS5kaXNwYXRjaEV2ZW50KG5ldyBDdXN0b21FdmVudChldmVudFR5cGUsIHsgZGV0YWlsOiBkZXRhaWwgfSApKTtcclxuICAgIH1cclxufSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///1\n')},function(module,exports){eval("module.exports = THREE;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJUSFJFRVwiP2ZjMDAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiMi5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gVEhSRUU7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///2\n")},function(module,exports,__webpack_require__){"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nvar Button;\r\n(function (Button) {\r\n    Button[Button["TRIGGER"] = 0] = "TRIGGER";\r\n    Button[Button["GRIP"] = 1] = "GRIP";\r\n    Button[Button["MENU"] = 2] = "MENU";\r\n    Button[Button["UP"] = 3] = "UP";\r\n    Button[Button["DOWN"] = 4] = "DOWN";\r\n    Button[Button["LEFT"] = 5] = "LEFT";\r\n    Button[Button["RIGHT"] = 6] = "RIGHT";\r\n})(Button = exports.Button || (exports.Button = {}));\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9zeXN0ZW0vaW50ZXJmYWNlL21vZGVsL0J1dHRvbi50cz9mNjQzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBWSxNQVFYO0FBUkQsV0FBWSxNQUFNO0lBQ2QseUNBQU87SUFDUCxtQ0FBSTtJQUNKLG1DQUFJO0lBQ0osK0JBQUU7SUFDRixtQ0FBSTtJQUNKLG1DQUFJO0lBQ0oscUNBQUs7QUFDVCxDQUFDLEVBUlcsTUFBTSxHQUFOLGNBQU0sS0FBTixjQUFNLFFBUWpCIiwiZmlsZSI6IjMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZW51bSBCdXR0b24ge1xyXG4gICAgVFJJR0dFUixcclxuICAgIEdSSVAsXHJcbiAgICBNRU5VLFxyXG4gICAgVVAsXHJcbiAgICBET1dOLFxyXG4gICAgTEVGVCxcclxuICAgIFJJR0hUXHJcbn0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///3\n')},function(module,exports,__webpack_require__){"use strict";eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n\n\n/*<replacement>*/\n\nvar pna = __webpack_require__(15);\n/*</replacement>*/\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    keys.push(key);\n  }return keys;\n};\n/*</replacement>*/\n\nmodule.exports = Duplex;\n\n/*<replacement>*/\nvar util = __webpack_require__(10);\nutil.inherits = __webpack_require__(7);\n/*</replacement>*/\n\nvar Readable = __webpack_require__(37);\nvar Writable = __webpack_require__(23);\n\nutil.inherits(Duplex, Readable);\n\n{\n  // avoid scope creep, the keys array can then be collected\n  var keys = objectKeys(Writable.prototype);\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false) this.readable = false;\n\n  if (options && options.writable === false) this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;\n\n  this.once('end', onend);\n}\n\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  pna.nextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});\n\nDuplex.prototype._destroy = function (err, cb) {\n  this.push(null);\n  this.end();\n\n  pna.nextTick(cb, err);\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhZGFibGUtc3RyZWFtL2xpYi9fc3RyZWFtX2R1cGxleC5qcz9iMTlhIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRWE7O0FBRWI7O0FBRUEsVUFBVSxtQkFBTyxDQUFDLEVBQXNCO0FBQ3hDOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTs7QUFFQTs7QUFFQTtBQUNBLFdBQVcsbUJBQU8sQ0FBQyxFQUFjO0FBQ2pDLGdCQUFnQixtQkFBTyxDQUFDLENBQVU7QUFDbEM7O0FBRUEsZUFBZSxtQkFBTyxDQUFDLEVBQW9CO0FBQzNDLGVBQWUsbUJBQU8sQ0FBQyxFQUFvQjs7QUFFM0M7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLGlCQUFpQjtBQUNsQztBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBOztBQUVBO0FBQ0EiLCJmaWxlIjoiNC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCBKb3llbnQsIEluYy4gYW5kIG90aGVyIE5vZGUgY29udHJpYnV0b3JzLlxuLy9cbi8vIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhXG4vLyBjb3B5IG9mIHRoaXMgc29mdHdhcmUgYW5kIGFzc29jaWF0ZWQgZG9jdW1lbnRhdGlvbiBmaWxlcyAodGhlXG4vLyBcIlNvZnR3YXJlXCIpLCB0byBkZWFsIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmdcbi8vIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCxcbi8vIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vciBzZWxsIGNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXRcbi8vIHBlcnNvbnMgdG8gd2hvbSB0aGUgU29mdHdhcmUgaXMgZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvIHRoZVxuLy8gZm9sbG93aW5nIGNvbmRpdGlvbnM6XG4vL1xuLy8gVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWRcbi8vIGluIGFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLlxuLy9cbi8vIFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCBcIkFTIElTXCIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1Ncbi8vIE9SIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0Zcbi8vIE1FUkNIQU5UQUJJTElUWSwgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gSU5cbi8vIE5PIEVWRU5UIFNIQUxMIFRIRSBBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLFxuLy8gREFNQUdFUyBPUiBPVEhFUiBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SXG4vLyBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSwgT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFXG4vLyBVU0UgT1IgT1RIRVIgREVBTElOR1MgSU4gVEhFIFNPRlRXQVJFLlxuXG4vLyBhIGR1cGxleCBzdHJlYW0gaXMganVzdCBhIHN0cmVhbSB0aGF0IGlzIGJvdGggcmVhZGFibGUgYW5kIHdyaXRhYmxlLlxuLy8gU2luY2UgSlMgZG9lc24ndCBoYXZlIG11bHRpcGxlIHByb3RvdHlwYWwgaW5oZXJpdGFuY2UsIHRoaXMgY2xhc3Ncbi8vIHByb3RvdHlwYWxseSBpbmhlcml0cyBmcm9tIFJlYWRhYmxlLCBhbmQgdGhlbiBwYXJhc2l0aWNhbGx5IGZyb21cbi8vIFdyaXRhYmxlLlxuXG4ndXNlIHN0cmljdCc7XG5cbi8qPHJlcGxhY2VtZW50PiovXG5cbnZhciBwbmEgPSByZXF1aXJlKCdwcm9jZXNzLW5leHRpY2stYXJncycpO1xuLyo8L3JlcGxhY2VtZW50PiovXG5cbi8qPHJlcGxhY2VtZW50PiovXG52YXIgb2JqZWN0S2V5cyA9IE9iamVjdC5rZXlzIHx8IGZ1bmN0aW9uIChvYmopIHtcbiAgdmFyIGtleXMgPSBbXTtcbiAgZm9yICh2YXIga2V5IGluIG9iaikge1xuICAgIGtleXMucHVzaChrZXkpO1xuICB9cmV0dXJuIGtleXM7XG59O1xuLyo8L3JlcGxhY2VtZW50PiovXG5cbm1vZHVsZS5leHBvcnRzID0gRHVwbGV4O1xuXG4vKjxyZXBsYWNlbWVudD4qL1xudmFyIHV0aWwgPSByZXF1aXJlKCdjb3JlLXV0aWwtaXMnKTtcbnV0aWwuaW5oZXJpdHMgPSByZXF1aXJlKCdpbmhlcml0cycpO1xuLyo8L3JlcGxhY2VtZW50PiovXG5cbnZhciBSZWFkYWJsZSA9IHJlcXVpcmUoJy4vX3N0cmVhbV9yZWFkYWJsZScpO1xudmFyIFdyaXRhYmxlID0gcmVxdWlyZSgnLi9fc3RyZWFtX3dyaXRhYmxlJyk7XG5cbnV0aWwuaW5oZXJpdHMoRHVwbGV4LCBSZWFkYWJsZSk7XG5cbntcbiAgLy8gYXZvaWQgc2NvcGUgY3JlZXAsIHRoZSBrZXlzIGFycmF5IGNhbiB0aGVuIGJlIGNvbGxlY3RlZFxuICB2YXIga2V5cyA9IG9iamVjdEtleXMoV3JpdGFibGUucHJvdG90eXBlKTtcbiAgZm9yICh2YXIgdiA9IDA7IHYgPCBrZXlzLmxlbmd0aDsgdisrKSB7XG4gICAgdmFyIG1ldGhvZCA9IGtleXNbdl07XG4gICAgaWYgKCFEdXBsZXgucHJvdG90eXBlW21ldGhvZF0pIER1cGxleC5wcm90b3R5cGVbbWV0aG9kXSA9IFdyaXRhYmxlLnByb3RvdHlwZVttZXRob2RdO1xuICB9XG59XG5cbmZ1bmN0aW9uIER1cGxleChvcHRpb25zKSB7XG4gIGlmICghKHRoaXMgaW5zdGFuY2VvZiBEdXBsZXgpKSByZXR1cm4gbmV3IER1cGxleChvcHRpb25zKTtcblxuICBSZWFkYWJsZS5jYWxsKHRoaXMsIG9wdGlvbnMpO1xuICBXcml0YWJsZS5jYWxsKHRoaXMsIG9wdGlvbnMpO1xuXG4gIGlmIChvcHRpb25zICYmIG9wdGlvbnMucmVhZGFibGUgPT09IGZhbHNlKSB0aGlzLnJlYWRhYmxlID0gZmFsc2U7XG5cbiAgaWYgKG9wdGlvbnMgJiYgb3B0aW9ucy53cml0YWJsZSA9PT0gZmFsc2UpIHRoaXMud3JpdGFibGUgPSBmYWxzZTtcblxuICB0aGlzLmFsbG93SGFsZk9wZW4gPSB0cnVlO1xuICBpZiAob3B0aW9ucyAmJiBvcHRpb25zLmFsbG93SGFsZk9wZW4gPT09IGZhbHNlKSB0aGlzLmFsbG93SGFsZk9wZW4gPSBmYWxzZTtcblxuICB0aGlzLm9uY2UoJ2VuZCcsIG9uZW5kKTtcbn1cblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KER1cGxleC5wcm90b3R5cGUsICd3cml0YWJsZUhpZ2hXYXRlck1hcmsnLCB7XG4gIC8vIG1ha2luZyBpdCBleHBsaWNpdCB0aGlzIHByb3BlcnR5IGlzIG5vdCBlbnVtZXJhYmxlXG4gIC8vIGJlY2F1c2Ugb3RoZXJ3aXNlIHNvbWUgcHJvdG90eXBlIG1hbmlwdWxhdGlvbiBpblxuICAvLyB1c2VybGFuZCB3aWxsIGZhaWxcbiAgZW51bWVyYWJsZTogZmFsc2UsXG4gIGdldDogZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiB0aGlzLl93cml0YWJsZVN0YXRlLmhpZ2hXYXRlck1hcms7XG4gIH1cbn0pO1xuXG4vLyB0aGUgbm8taGFsZi1vcGVuIGVuZm9yY2VyXG5mdW5jdGlvbiBvbmVuZCgpIHtcbiAgLy8gaWYgd2UgYWxsb3cgaGFsZi1vcGVuIHN0YXRlLCBvciBpZiB0aGUgd3JpdGFibGUgc2lkZSBlbmRlZCxcbiAgLy8gdGhlbiB3ZSdyZSBvay5cbiAgaWYgKHRoaXMuYWxsb3dIYWxmT3BlbiB8fCB0aGlzLl93cml0YWJsZVN0YXRlLmVuZGVkKSByZXR1cm47XG5cbiAgLy8gbm8gbW9yZSBkYXRhIGNhbiBiZSB3cml0dGVuLlxuICAvLyBCdXQgYWxsb3cgbW9yZSB3cml0ZXMgdG8gaGFwcGVuIGluIHRoaXMgdGljay5cbiAgcG5hLm5leHRUaWNrKG9uRW5kTlQsIHRoaXMpO1xufVxuXG5mdW5jdGlvbiBvbkVuZE5UKHNlbGYpIHtcbiAgc2VsZi5lbmQoKTtcbn1cblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KER1cGxleC5wcm90b3R5cGUsICdkZXN0cm95ZWQnLCB7XG4gIGdldDogZnVuY3Rpb24gKCkge1xuICAgIGlmICh0aGlzLl9yZWFkYWJsZVN0YXRlID09PSB1bmRlZmluZWQgfHwgdGhpcy5fd3JpdGFibGVTdGF0ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIHJldHVybiB0aGlzLl9yZWFkYWJsZVN0YXRlLmRlc3Ryb3llZCAmJiB0aGlzLl93cml0YWJsZVN0YXRlLmRlc3Ryb3llZDtcbiAgfSxcbiAgc2V0OiBmdW5jdGlvbiAodmFsdWUpIHtcbiAgICAvLyB3ZSBpZ25vcmUgdGhlIHZhbHVlIGlmIHRoZSBzdHJlYW1cbiAgICAvLyBoYXMgbm90IGJlZW4gaW5pdGlhbGl6ZWQgeWV0XG4gICAgaWYgKHRoaXMuX3JlYWRhYmxlU3RhdGUgPT09IHVuZGVmaW5lZCB8fCB0aGlzLl93cml0YWJsZVN0YXRlID09PSB1bmRlZmluZWQpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICAvLyBiYWNrd2FyZCBjb21wYXRpYmlsaXR5LCB0aGUgdXNlciBpcyBleHBsaWNpdGx5XG4gICAgLy8gbWFuYWdpbmcgZGVzdHJveWVkXG4gICAgdGhpcy5fcmVhZGFibGVTdGF0ZS5kZXN0cm95ZWQgPSB2YWx1ZTtcbiAgICB0aGlzLl93cml0YWJsZVN0YXRlLmRlc3Ryb3llZCA9IHZhbHVlO1xuICB9XG59KTtcblxuRHVwbGV4LnByb3RvdHlwZS5fZGVzdHJveSA9IGZ1bmN0aW9uIChlcnIsIGNiKSB7XG4gIHRoaXMucHVzaChudWxsKTtcbiAgdGhpcy5lbmQoKTtcblxuICBwbmEubmV4dFRpY2soY2IsIGVycik7XG59OyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///4\n")},function(module,exports,__webpack_require__){"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nvar Slot;\r\n(function (Slot) {\r\n    Slot[Slot["PRIMARY"] = 0] = "PRIMARY";\r\n    Slot[Slot["SECONDARY"] = 1] = "SECONDARY";\r\n    Slot[Slot["PRIMARY_SELECTOR"] = 2] = "PRIMARY_SELECTOR";\r\n    Slot[Slot["SECONDARY_SELECTOR"] = 3] = "SECONDARY_SELECTOR";\r\n    Slot[Slot["WALK"] = 4] = "WALK";\r\n})(Slot = exports.Slot || (exports.Slot = {}));\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9zeXN0ZW0vaW50ZXJmYWNlL21vZGVsL1Nsb3QudHM/Mjk2NyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLElBQVksSUFNWDtBQU5ELFdBQVksSUFBSTtJQUNaLHFDQUFPO0lBQ1AseUNBQVM7SUFDVCx1REFBZ0I7SUFDaEIsMkRBQWtCO0lBQ2xCLCtCQUFJO0FBQ1IsQ0FBQyxFQU5XLElBQUksR0FBSixZQUFJLEtBQUosWUFBSSxRQU1mIiwiZmlsZSI6IjUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZW51bSBTbG90IHtcclxuICAgIFBSSU1BUlksXHJcbiAgICBTRUNPTkRBUlksXHJcbiAgICBQUklNQVJZX1NFTEVDVE9SLFxyXG4gICAgU0VDT05EQVJZX1NFTEVDVE9SLFxyXG4gICAgV0FMS1xyXG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///5\n')},function(module,exports){eval('var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function("return this")() || (1, eval)("this");\r\n} catch (e) {\r\n\t// This works if the window reference is available\r\n\tif (typeof window === "object") g = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it\'s\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spL2J1aWxkaW4vZ2xvYmFsLmpzP2NkMDAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSw0Q0FBNEM7O0FBRTVDIiwiZmlsZSI6IjYuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZztcclxuXHJcbi8vIFRoaXMgd29ya3MgaW4gbm9uLXN0cmljdCBtb2RlXHJcbmcgPSAoZnVuY3Rpb24oKSB7XHJcblx0cmV0dXJuIHRoaXM7XHJcbn0pKCk7XHJcblxyXG50cnkge1xyXG5cdC8vIFRoaXMgd29ya3MgaWYgZXZhbCBpcyBhbGxvd2VkIChzZWUgQ1NQKVxyXG5cdGcgPSBnIHx8IEZ1bmN0aW9uKFwicmV0dXJuIHRoaXNcIikoKSB8fCAoMSwgZXZhbCkoXCJ0aGlzXCIpO1xyXG59IGNhdGNoIChlKSB7XHJcblx0Ly8gVGhpcyB3b3JrcyBpZiB0aGUgd2luZG93IHJlZmVyZW5jZSBpcyBhdmFpbGFibGVcclxuXHRpZiAodHlwZW9mIHdpbmRvdyA9PT0gXCJvYmplY3RcIikgZyA9IHdpbmRvdztcclxufVxyXG5cclxuLy8gZyBjYW4gc3RpbGwgYmUgdW5kZWZpbmVkLCBidXQgbm90aGluZyB0byBkbyBhYm91dCBpdC4uLlxyXG4vLyBXZSByZXR1cm4gdW5kZWZpbmVkLCBpbnN0ZWFkIG9mIG5vdGhpbmcgaGVyZSwgc28gaXQnc1xyXG4vLyBlYXNpZXIgdG8gaGFuZGxlIHRoaXMgY2FzZS4gaWYoIWdsb2JhbCkgeyAuLi59XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IGc7XHJcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///6\n')},function(module,exports){eval("if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaW5oZXJpdHMvaW5oZXJpdHNfYnJvd3Nlci5qcz8zZmI1Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjcuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpZiAodHlwZW9mIE9iamVjdC5jcmVhdGUgPT09ICdmdW5jdGlvbicpIHtcbiAgLy8gaW1wbGVtZW50YXRpb24gZnJvbSBzdGFuZGFyZCBub2RlLmpzICd1dGlsJyBtb2R1bGVcbiAgbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBpbmhlcml0cyhjdG9yLCBzdXBlckN0b3IpIHtcbiAgICBjdG9yLnN1cGVyXyA9IHN1cGVyQ3RvclxuICAgIGN0b3IucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckN0b3IucHJvdG90eXBlLCB7XG4gICAgICBjb25zdHJ1Y3Rvcjoge1xuICAgICAgICB2YWx1ZTogY3RvcixcbiAgICAgICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICAgIH1cbiAgICB9KTtcbiAgfTtcbn0gZWxzZSB7XG4gIC8vIG9sZCBzY2hvb2wgc2hpbSBmb3Igb2xkIGJyb3dzZXJzXG4gIG1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gaW5oZXJpdHMoY3Rvciwgc3VwZXJDdG9yKSB7XG4gICAgY3Rvci5zdXBlcl8gPSBzdXBlckN0b3JcbiAgICB2YXIgVGVtcEN0b3IgPSBmdW5jdGlvbiAoKSB7fVxuICAgIFRlbXBDdG9yLnByb3RvdHlwZSA9IHN1cGVyQ3Rvci5wcm90b3R5cGVcbiAgICBjdG9yLnByb3RvdHlwZSA9IG5ldyBUZW1wQ3RvcigpXG4gICAgY3Rvci5wcm90b3R5cGUuY29uc3RydWN0b3IgPSBjdG9yXG4gIH1cbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///7\n")},function(module,exports,__webpack_require__){"use strict";eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction createElement(html) {\r\n    const template = document.createElement('div');\r\n    template.innerHTML = html.trim();\r\n    return template.firstChild;\r\n}\r\nexports.createElement = createElement;\r\nfunction addEntityEventListener(entity, type, listener) {\r\n    entity.addEventListener(type, ((e) => {\r\n        listener(e.detail);\r\n    }));\r\n}\r\nexports.addEntityEventListener = addEntityEventListener;\r\nfunction addDocumentEventListener(type, listener) {\r\n    document.addEventListener(type, ((e) => {\r\n        listener(e.detail);\r\n    }));\r\n}\r\nexports.addDocumentEventListener = addDocumentEventListener;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci91dGlsLnRzPzc5ZTkiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFFQSxTQUFnQixhQUFhLENBQUMsSUFBWTtJQUN0QyxNQUFNLFFBQVEsR0FBRyxRQUFRLENBQUMsYUFBYSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQy9DLFFBQVEsQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDO0lBQ2pDLE9BQVEsUUFBZ0IsQ0FBQyxVQUFVLENBQUM7QUFDeEMsQ0FBQztBQUpELHNDQUlDO0FBRUQsU0FBZ0Isc0JBQXNCLENBQUMsTUFBYyxFQUFFLElBQVksRUFBRSxRQUFpQztJQUNsRyxNQUFNLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxFQUFFLENBQUMsQ0FBQyxDQUFjLEVBQUUsRUFBRTtRQUM5QyxRQUFRLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQ3ZCLENBQUMsQ0FBUSxDQUFDLENBQUM7QUFDZixDQUFDO0FBSkQsd0RBSUM7QUFFRCxTQUFnQix3QkFBd0IsQ0FBQyxJQUFZLEVBQUUsUUFBaUM7SUFDcEYsUUFBUSxDQUFDLGdCQUFnQixDQUFDLElBQUksRUFBRSxDQUFDLENBQUMsQ0FBYyxFQUFFLEVBQUU7UUFDaEQsUUFBUSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUN2QixDQUFDLENBQVEsQ0FBQyxDQUFDO0FBQ2YsQ0FBQztBQUpELDREQUlDIiwiZmlsZSI6IjguanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0VudGl0eX0gZnJvbSBcImFmcmFtZVwiO1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUVsZW1lbnQoaHRtbDogc3RyaW5nKSA6IEVsZW1lbnQge1xyXG4gICAgY29uc3QgdGVtcGxhdGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgIHRlbXBsYXRlLmlubmVySFRNTCA9IGh0bWwudHJpbSgpO1xyXG4gICAgcmV0dXJuICh0ZW1wbGF0ZSBhcyBhbnkpLmZpcnN0Q2hpbGQ7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBhZGRFbnRpdHlFdmVudExpc3RlbmVyKGVudGl0eTogRW50aXR5LCB0eXBlOiBzdHJpbmcsIGxpc3RlbmVyOiAoKGRldGFpbDogYW55KSA9PiB2b2lkKSkge1xyXG4gICAgZW50aXR5LmFkZEV2ZW50TGlzdGVuZXIodHlwZSwgKChlOiBDdXN0b21FdmVudCkgPT4ge1xyXG4gICAgICAgIGxpc3RlbmVyKGUuZGV0YWlsKTtcclxuICAgIH0pIGFzIGFueSk7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBhZGREb2N1bWVudEV2ZW50TGlzdGVuZXIodHlwZTogc3RyaW5nLCBsaXN0ZW5lcjogKChkZXRhaWw6IGFueSkgPT4gdm9pZCkpIHtcclxuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIodHlwZSwgKChlOiBDdXN0b21FdmVudCkgPT4ge1xyXG4gICAgICAgIGxpc3RlbmVyKGUuZGV0YWlsKTtcclxuICAgIH0pIGFzIGFueSk7XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///8\n")},function(module,exports,__webpack_require__){"use strict";eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nclass Events {\r\n}\r\nEvents.EVENT_ANIMATE_BEGIN = 'animate-begin';\r\nEvents.EVENT_ANIMATE_END = 'animate-end';\r\nEvents.EVENT_ANIMATION_FINISHED = 'animation-finished';\r\nEvents.EVENT_STATE_BEGIN = 'state-begin';\r\nEvents.EVENT_STATE_END = 'state-end';\r\nEvents.EVENT_MODEL_LOADED = 'model-loaded';\r\nexports.Events = Events;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9tb2RlbC9FdmVudHMudHM/MWMzOSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLE1BQWEsTUFBTTs7QUFFUiwwQkFBbUIsR0FBRyxlQUFlLENBQUM7QUFFdEMsd0JBQWlCLEdBQUcsYUFBYSxDQUFDO0FBRWxDLCtCQUF3QixHQUFHLG9CQUFvQixDQUFDO0FBRWhELHdCQUFpQixHQUFHLGFBQWEsQ0FBQztBQUVsQyxzQkFBZSxHQUFHLFdBQVcsQ0FBQztBQUU5Qix5QkFBa0IsR0FBRyxjQUFjLENBQUM7QUFaL0Msd0JBYUMiLCJmaWxlIjoiOS5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjbGFzcyBFdmVudHMge1xyXG5cclxuICAgIHN0YXRpYyBFVkVOVF9BTklNQVRFX0JFR0lOID0gJ2FuaW1hdGUtYmVnaW4nO1xyXG5cclxuICAgIHN0YXRpYyBFVkVOVF9BTklNQVRFX0VORCA9ICdhbmltYXRlLWVuZCc7XHJcblxyXG4gICAgc3RhdGljIEVWRU5UX0FOSU1BVElPTl9GSU5JU0hFRCA9ICdhbmltYXRpb24tZmluaXNoZWQnO1xyXG5cclxuICAgIHN0YXRpYyBFVkVOVF9TVEFURV9CRUdJTiA9ICdzdGF0ZS1iZWdpbic7XHJcblxyXG4gICAgc3RhdGljIEVWRU5UX1NUQVRFX0VORCA9ICdzdGF0ZS1lbmQnO1xyXG5cclxuICAgIHN0YXRpYyBFVkVOVF9NT0RFTF9MT0FERUQgPSAnbW9kZWwtbG9hZGVkJztcclxufSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///9\n")},function(module,exports,__webpack_require__){eval("/* WEBPACK VAR INJECTION */(function(Buffer) {// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\n\nfunction isArray(arg) {\n  if (Array.isArray) {\n    return Array.isArray(arg);\n  }\n  return objectToString(arg) === '[object Array]';\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = Buffer.isBuffer;\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(13).Buffer))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS11dGlsLWlzL2xpYi91dGlsLmpzPzNhN2MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0EiLCJmaWxlIjoiMTAuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgSm95ZW50LCBJbmMuIGFuZCBvdGhlciBOb2RlIGNvbnRyaWJ1dG9ycy5cbi8vXG4vLyBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYVxuLy8gY29weSBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZVxuLy8gXCJTb2Z0d2FyZVwiKSwgdG8gZGVhbCBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nXG4vLyB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0cyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsXG4vLyBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbCBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0XG4vLyBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGVcbi8vIGZvbGxvd2luZyBjb25kaXRpb25zOlxuLy9cbi8vIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkXG4vLyBpbiBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cbi8vXG4vLyBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTXG4vLyBPUiBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GXG4vLyBNRVJDSEFOVEFCSUxJVFksIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOXG4vLyBOTyBFVkVOVCBTSEFMTCBUSEUgQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSxcbi8vIERBTUFHRVMgT1IgT1RIRVIgTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUlxuLy8gT1RIRVJXSVNFLCBBUklTSU5HIEZST00sIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRVxuLy8gVVNFIE9SIE9USEVSIERFQUxJTkdTIElOIFRIRSBTT0ZUV0FSRS5cblxuLy8gTk9URTogVGhlc2UgdHlwZSBjaGVja2luZyBmdW5jdGlvbnMgaW50ZW50aW9uYWxseSBkb24ndCB1c2UgYGluc3RhbmNlb2ZgXG4vLyBiZWNhdXNlIGl0IGlzIGZyYWdpbGUgYW5kIGNhbiBiZSBlYXNpbHkgZmFrZWQgd2l0aCBgT2JqZWN0LmNyZWF0ZSgpYC5cblxuZnVuY3Rpb24gaXNBcnJheShhcmcpIHtcbiAgaWYgKEFycmF5LmlzQXJyYXkpIHtcbiAgICByZXR1cm4gQXJyYXkuaXNBcnJheShhcmcpO1xuICB9XG4gIHJldHVybiBvYmplY3RUb1N0cmluZyhhcmcpID09PSAnW29iamVjdCBBcnJheV0nO1xufVxuZXhwb3J0cy5pc0FycmF5ID0gaXNBcnJheTtcblxuZnVuY3Rpb24gaXNCb29sZWFuKGFyZykge1xuICByZXR1cm4gdHlwZW9mIGFyZyA9PT0gJ2Jvb2xlYW4nO1xufVxuZXhwb3J0cy5pc0Jvb2xlYW4gPSBpc0Jvb2xlYW47XG5cbmZ1bmN0aW9uIGlzTnVsbChhcmcpIHtcbiAgcmV0dXJuIGFyZyA9PT0gbnVsbDtcbn1cbmV4cG9ydHMuaXNOdWxsID0gaXNOdWxsO1xuXG5mdW5jdGlvbiBpc051bGxPclVuZGVmaW5lZChhcmcpIHtcbiAgcmV0dXJuIGFyZyA9PSBudWxsO1xufVxuZXhwb3J0cy5pc051bGxPclVuZGVmaW5lZCA9IGlzTnVsbE9yVW5kZWZpbmVkO1xuXG5mdW5jdGlvbiBpc051bWJlcihhcmcpIHtcbiAgcmV0dXJuIHR5cGVvZiBhcmcgPT09ICdudW1iZXInO1xufVxuZXhwb3J0cy5pc051bWJlciA9IGlzTnVtYmVyO1xuXG5mdW5jdGlvbiBpc1N0cmluZyhhcmcpIHtcbiAgcmV0dXJuIHR5cGVvZiBhcmcgPT09ICdzdHJpbmcnO1xufVxuZXhwb3J0cy5pc1N0cmluZyA9IGlzU3RyaW5nO1xuXG5mdW5jdGlvbiBpc1N5bWJvbChhcmcpIHtcbiAgcmV0dXJuIHR5cGVvZiBhcmcgPT09ICdzeW1ib2wnO1xufVxuZXhwb3J0cy5pc1N5bWJvbCA9IGlzU3ltYm9sO1xuXG5mdW5jdGlvbiBpc1VuZGVmaW5lZChhcmcpIHtcbiAgcmV0dXJuIGFyZyA9PT0gdm9pZCAwO1xufVxuZXhwb3J0cy5pc1VuZGVmaW5lZCA9IGlzVW5kZWZpbmVkO1xuXG5mdW5jdGlvbiBpc1JlZ0V4cChyZSkge1xuICByZXR1cm4gb2JqZWN0VG9TdHJpbmcocmUpID09PSAnW29iamVjdCBSZWdFeHBdJztcbn1cbmV4cG9ydHMuaXNSZWdFeHAgPSBpc1JlZ0V4cDtcblxuZnVuY3Rpb24gaXNPYmplY3QoYXJnKSB7XG4gIHJldHVybiB0eXBlb2YgYXJnID09PSAnb2JqZWN0JyAmJiBhcmcgIT09IG51bGw7XG59XG5leHBvcnRzLmlzT2JqZWN0ID0gaXNPYmplY3Q7XG5cbmZ1bmN0aW9uIGlzRGF0ZShkKSB7XG4gIHJldHVybiBvYmplY3RUb1N0cmluZyhkKSA9PT0gJ1tvYmplY3QgRGF0ZV0nO1xufVxuZXhwb3J0cy5pc0RhdGUgPSBpc0RhdGU7XG5cbmZ1bmN0aW9uIGlzRXJyb3IoZSkge1xuICByZXR1cm4gKG9iamVjdFRvU3RyaW5nKGUpID09PSAnW29iamVjdCBFcnJvcl0nIHx8IGUgaW5zdGFuY2VvZiBFcnJvcik7XG59XG5leHBvcnRzLmlzRXJyb3IgPSBpc0Vycm9yO1xuXG5mdW5jdGlvbiBpc0Z1bmN0aW9uKGFyZykge1xuICByZXR1cm4gdHlwZW9mIGFyZyA9PT0gJ2Z1bmN0aW9uJztcbn1cbmV4cG9ydHMuaXNGdW5jdGlvbiA9IGlzRnVuY3Rpb247XG5cbmZ1bmN0aW9uIGlzUHJpbWl0aXZlKGFyZykge1xuICByZXR1cm4gYXJnID09PSBudWxsIHx8XG4gICAgICAgICB0eXBlb2YgYXJnID09PSAnYm9vbGVhbicgfHxcbiAgICAgICAgIHR5cGVvZiBhcmcgPT09ICdudW1iZXInIHx8XG4gICAgICAgICB0eXBlb2YgYXJnID09PSAnc3RyaW5nJyB8fFxuICAgICAgICAgdHlwZW9mIGFyZyA9PT0gJ3N5bWJvbCcgfHwgIC8vIEVTNiBzeW1ib2xcbiAgICAgICAgIHR5cGVvZiBhcmcgPT09ICd1bmRlZmluZWQnO1xufVxuZXhwb3J0cy5pc1ByaW1pdGl2ZSA9IGlzUHJpbWl0aXZlO1xuXG5leHBvcnRzLmlzQnVmZmVyID0gQnVmZmVyLmlzQnVmZmVyO1xuXG5mdW5jdGlvbiBvYmplY3RUb1N0cmluZyhvKSB7XG4gIHJldHVybiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwobyk7XG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///10\n")},function(module,exports,__webpack_require__){"use strict";eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nclass Encode {\r\n    static login(loginRequestId, jwt, space, processor) {\r\n        return \"\" +\r\n            s(this.LOGIN) +\r\n            s(loginRequestId) +\r\n            se(jwt) +\r\n            s(space) +\r\n            s(processor);\r\n    }\r\n    static loginResponse(loginRequestId, error) {\r\n        return \"\" +\r\n            s(this.LOGIN_RESPONSE) +\r\n            s(loginRequestId) +\r\n            s(error);\r\n    }\r\n    static add(id, x, y, z, rx, ry, rz, rw, description, type) {\r\n        return \"\" +\r\n            s(this.ADD) +\r\n            s(id) +\r\n            d2(x) +\r\n            d2(y) +\r\n            d2(z) +\r\n            d2(rx) +\r\n            d2(ry) +\r\n            d2(rz) +\r\n            d2(rw) +\r\n            se(description) +\r\n            s(type);\r\n    }\r\n    static added(index, id, x, y, z, rx, ry, rz, rw, description, type) {\r\n        return \"\" +\r\n            s(this.ADDED) +\r\n            i(index) +\r\n            s(id) +\r\n            d2(x) +\r\n            d2(y) +\r\n            d2(z) +\r\n            d2(rx) +\r\n            d2(ry) +\r\n            d2(rz) +\r\n            d2(rw) +\r\n            se(description) +\r\n            s(type);\r\n    }\r\n    static update(id, x, y, z, rx, ry, rz, rw) {\r\n        return \"\" +\r\n            s(this.UPDATE) +\r\n            s(id) +\r\n            d2(x) +\r\n            d2(y) +\r\n            d2(z) +\r\n            d2(rx) +\r\n            d2(ry) +\r\n            d2(rz) +\r\n            d2(rw);\r\n    }\r\n    static updated(index, x, y, z, rx, ry, rz, rw) {\r\n        return \"\" +\r\n            s(this.UPDATED) +\r\n            i(index) +\r\n            d2(x) +\r\n            d2(y) +\r\n            d2(z) +\r\n            d2(rx) +\r\n            d2(ry) +\r\n            d2(rz) +\r\n            d2(rw);\r\n    }\r\n    static remove(id) {\r\n        return \"\" +\r\n            s(this.REMOVE) +\r\n            s(id);\r\n    }\r\n    static removed(index, id) {\r\n        return \"\" +\r\n            s(this.REMOVED) +\r\n            i(index) +\r\n            s(id);\r\n    }\r\n    static describe(id, description) {\r\n        return \"\" +\r\n            s(this.DESCRIBE) +\r\n            s(id) +\r\n            se(description);\r\n    }\r\n    static described(index, description) {\r\n        return \"\" +\r\n            s(this.DESCRIBED) +\r\n            i(index) +\r\n            se(description);\r\n    }\r\n    static act(id, action, description) {\r\n        return \"\" +\r\n            s(this.ACT) +\r\n            s(id) +\r\n            s(action) +\r\n            se(description);\r\n    }\r\n    static acted(index, action, description) {\r\n        return \"\" +\r\n            s(this.ACTED) +\r\n            i(index) +\r\n            s(action) +\r\n            se(description);\r\n    }\r\n    static notify(notification, description) {\r\n        return \"\" +\r\n            s(this.NOTIFY) +\r\n            s(notification) +\r\n            se(description);\r\n    }\r\n    static notified(notification, description) {\r\n        return \"\" +\r\n            s(this.NOTIFIED) +\r\n            s(notification) +\r\n            se(description);\r\n    }\r\n}\r\nEncode.SEPARATOR = '|';\r\nEncode.LOGIN = 'L';\r\nEncode.LOGIN_RESPONSE = 'l';\r\nEncode.ADD = 'A';\r\nEncode.ADDED = 'a';\r\nEncode.UPDATE = 'U';\r\nEncode.UPDATED = 'u';\r\nEncode.REMOVE = 'R';\r\nEncode.REMOVED = 'r';\r\nEncode.DESCRIBE = 'D';\r\nEncode.DESCRIBED = 'd';\r\nEncode.ACT = 'C';\r\nEncode.ACTED = 'c';\r\nEncode.NOTIFY = 'N';\r\nEncode.NOTIFIED = 'n';\r\nEncode.NOTIFICATION_STORED_ROOT_ENTITIES_CHANGED = 'srec';\r\nEncode.NOTIFICATION_STORED_CHILD_ENTITIES_CHANGED = 'scec';\r\nEncode.NOTIFICATION_STORED_ENTITIES_REMOVED = 'ser';\r\nEncode.OBJECT = 'o'; // Visible\r\nEncode.PROBE = 'p'; // Observing\r\nEncode.AVATAR = 'a'; // Visible and observing\r\nexports.Encode = Encode;\r\nfunction s(value) {\r\n    return value + Encode.SEPARATOR;\r\n}\r\nfunction se(value) {\r\n    return value.replace(\"\\\\\", \"\\\\\\\\1\").replace(Encode.SEPARATOR, \"\\\\\\\\2\") + Encode.SEPARATOR;\r\n}\r\nfunction i(value) {\r\n    return value + Encode.SEPARATOR;\r\n}\r\nfunction d1(value) {\r\n    return value.toFixed(1) + Encode.SEPARATOR;\r\n}\r\nfunction d2(value) {\r\n    return value.toFixed(2) + Encode.SEPARATOR;\r\n}\r\n//# sourceMappingURL=Encode.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhbGl0eS1zcGFjZS9saWIvc3JjL2NvbW1vbi9yZWFsaXR5L0VuY29kZS5qcz9kODc3Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQThDLGNBQWM7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0I7QUFDcEIsbUJBQW1CO0FBQ25CLG9CQUFvQjtBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjExLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XHJcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcclxuY2xhc3MgRW5jb2RlIHtcclxuICAgIHN0YXRpYyBsb2dpbihsb2dpblJlcXVlc3RJZCwgand0LCBzcGFjZSwgcHJvY2Vzc29yKSB7XHJcbiAgICAgICAgcmV0dXJuIFwiXCIgK1xyXG4gICAgICAgICAgICBzKHRoaXMuTE9HSU4pICtcclxuICAgICAgICAgICAgcyhsb2dpblJlcXVlc3RJZCkgK1xyXG4gICAgICAgICAgICBzZShqd3QpICtcclxuICAgICAgICAgICAgcyhzcGFjZSkgK1xyXG4gICAgICAgICAgICBzKHByb2Nlc3Nvcik7XHJcbiAgICB9XHJcbiAgICBzdGF0aWMgbG9naW5SZXNwb25zZShsb2dpblJlcXVlc3RJZCwgZXJyb3IpIHtcclxuICAgICAgICByZXR1cm4gXCJcIiArXHJcbiAgICAgICAgICAgIHModGhpcy5MT0dJTl9SRVNQT05TRSkgK1xyXG4gICAgICAgICAgICBzKGxvZ2luUmVxdWVzdElkKSArXHJcbiAgICAgICAgICAgIHMoZXJyb3IpO1xyXG4gICAgfVxyXG4gICAgc3RhdGljIGFkZChpZCwgeCwgeSwgeiwgcngsIHJ5LCByeiwgcncsIGRlc2NyaXB0aW9uLCB0eXBlKSB7XHJcbiAgICAgICAgcmV0dXJuIFwiXCIgK1xyXG4gICAgICAgICAgICBzKHRoaXMuQUREKSArXHJcbiAgICAgICAgICAgIHMoaWQpICtcclxuICAgICAgICAgICAgZDIoeCkgK1xyXG4gICAgICAgICAgICBkMih5KSArXHJcbiAgICAgICAgICAgIGQyKHopICtcclxuICAgICAgICAgICAgZDIocngpICtcclxuICAgICAgICAgICAgZDIocnkpICtcclxuICAgICAgICAgICAgZDIocnopICtcclxuICAgICAgICAgICAgZDIocncpICtcclxuICAgICAgICAgICAgc2UoZGVzY3JpcHRpb24pICtcclxuICAgICAgICAgICAgcyh0eXBlKTtcclxuICAgIH1cclxuICAgIHN0YXRpYyBhZGRlZChpbmRleCwgaWQsIHgsIHksIHosIHJ4LCByeSwgcnosIHJ3LCBkZXNjcmlwdGlvbiwgdHlwZSkge1xyXG4gICAgICAgIHJldHVybiBcIlwiICtcclxuICAgICAgICAgICAgcyh0aGlzLkFEREVEKSArXHJcbiAgICAgICAgICAgIGkoaW5kZXgpICtcclxuICAgICAgICAgICAgcyhpZCkgK1xyXG4gICAgICAgICAgICBkMih4KSArXHJcbiAgICAgICAgICAgIGQyKHkpICtcclxuICAgICAgICAgICAgZDIoeikgK1xyXG4gICAgICAgICAgICBkMihyeCkgK1xyXG4gICAgICAgICAgICBkMihyeSkgK1xyXG4gICAgICAgICAgICBkMihyeikgK1xyXG4gICAgICAgICAgICBkMihydykgK1xyXG4gICAgICAgICAgICBzZShkZXNjcmlwdGlvbikgK1xyXG4gICAgICAgICAgICBzKHR5cGUpO1xyXG4gICAgfVxyXG4gICAgc3RhdGljIHVwZGF0ZShpZCwgeCwgeSwgeiwgcngsIHJ5LCByeiwgcncpIHtcclxuICAgICAgICByZXR1cm4gXCJcIiArXHJcbiAgICAgICAgICAgIHModGhpcy5VUERBVEUpICtcclxuICAgICAgICAgICAgcyhpZCkgK1xyXG4gICAgICAgICAgICBkMih4KSArXHJcbiAgICAgICAgICAgIGQyKHkpICtcclxuICAgICAgICAgICAgZDIoeikgK1xyXG4gICAgICAgICAgICBkMihyeCkgK1xyXG4gICAgICAgICAgICBkMihyeSkgK1xyXG4gICAgICAgICAgICBkMihyeikgK1xyXG4gICAgICAgICAgICBkMihydyk7XHJcbiAgICB9XHJcbiAgICBzdGF0aWMgdXBkYXRlZChpbmRleCwgeCwgeSwgeiwgcngsIHJ5LCByeiwgcncpIHtcclxuICAgICAgICByZXR1cm4gXCJcIiArXHJcbiAgICAgICAgICAgIHModGhpcy5VUERBVEVEKSArXHJcbiAgICAgICAgICAgIGkoaW5kZXgpICtcclxuICAgICAgICAgICAgZDIoeCkgK1xyXG4gICAgICAgICAgICBkMih5KSArXHJcbiAgICAgICAgICAgIGQyKHopICtcclxuICAgICAgICAgICAgZDIocngpICtcclxuICAgICAgICAgICAgZDIocnkpICtcclxuICAgICAgICAgICAgZDIocnopICtcclxuICAgICAgICAgICAgZDIocncpO1xyXG4gICAgfVxyXG4gICAgc3RhdGljIHJlbW92ZShpZCkge1xyXG4gICAgICAgIHJldHVybiBcIlwiICtcclxuICAgICAgICAgICAgcyh0aGlzLlJFTU9WRSkgK1xyXG4gICAgICAgICAgICBzKGlkKTtcclxuICAgIH1cclxuICAgIHN0YXRpYyByZW1vdmVkKGluZGV4LCBpZCkge1xyXG4gICAgICAgIHJldHVybiBcIlwiICtcclxuICAgICAgICAgICAgcyh0aGlzLlJFTU9WRUQpICtcclxuICAgICAgICAgICAgaShpbmRleCkgK1xyXG4gICAgICAgICAgICBzKGlkKTtcclxuICAgIH1cclxuICAgIHN0YXRpYyBkZXNjcmliZShpZCwgZGVzY3JpcHRpb24pIHtcclxuICAgICAgICByZXR1cm4gXCJcIiArXHJcbiAgICAgICAgICAgIHModGhpcy5ERVNDUklCRSkgK1xyXG4gICAgICAgICAgICBzKGlkKSArXHJcbiAgICAgICAgICAgIHNlKGRlc2NyaXB0aW9uKTtcclxuICAgIH1cclxuICAgIHN0YXRpYyBkZXNjcmliZWQoaW5kZXgsIGRlc2NyaXB0aW9uKSB7XHJcbiAgICAgICAgcmV0dXJuIFwiXCIgK1xyXG4gICAgICAgICAgICBzKHRoaXMuREVTQ1JJQkVEKSArXHJcbiAgICAgICAgICAgIGkoaW5kZXgpICtcclxuICAgICAgICAgICAgc2UoZGVzY3JpcHRpb24pO1xyXG4gICAgfVxyXG4gICAgc3RhdGljIGFjdChpZCwgYWN0aW9uLCBkZXNjcmlwdGlvbikge1xyXG4gICAgICAgIHJldHVybiBcIlwiICtcclxuICAgICAgICAgICAgcyh0aGlzLkFDVCkgK1xyXG4gICAgICAgICAgICBzKGlkKSArXHJcbiAgICAgICAgICAgIHMoYWN0aW9uKSArXHJcbiAgICAgICAgICAgIHNlKGRlc2NyaXB0aW9uKTtcclxuICAgIH1cclxuICAgIHN0YXRpYyBhY3RlZChpbmRleCwgYWN0aW9uLCBkZXNjcmlwdGlvbikge1xyXG4gICAgICAgIHJldHVybiBcIlwiICtcclxuICAgICAgICAgICAgcyh0aGlzLkFDVEVEKSArXHJcbiAgICAgICAgICAgIGkoaW5kZXgpICtcclxuICAgICAgICAgICAgcyhhY3Rpb24pICtcclxuICAgICAgICAgICAgc2UoZGVzY3JpcHRpb24pO1xyXG4gICAgfVxyXG4gICAgc3RhdGljIG5vdGlmeShub3RpZmljYXRpb24sIGRlc2NyaXB0aW9uKSB7XHJcbiAgICAgICAgcmV0dXJuIFwiXCIgK1xyXG4gICAgICAgICAgICBzKHRoaXMuTk9USUZZKSArXHJcbiAgICAgICAgICAgIHMobm90aWZpY2F0aW9uKSArXHJcbiAgICAgICAgICAgIHNlKGRlc2NyaXB0aW9uKTtcclxuICAgIH1cclxuICAgIHN0YXRpYyBub3RpZmllZChub3RpZmljYXRpb24sIGRlc2NyaXB0aW9uKSB7XHJcbiAgICAgICAgcmV0dXJuIFwiXCIgK1xyXG4gICAgICAgICAgICBzKHRoaXMuTk9USUZJRUQpICtcclxuICAgICAgICAgICAgcyhub3RpZmljYXRpb24pICtcclxuICAgICAgICAgICAgc2UoZGVzY3JpcHRpb24pO1xyXG4gICAgfVxyXG59XHJcbkVuY29kZS5TRVBBUkFUT1IgPSAnfCc7XHJcbkVuY29kZS5MT0dJTiA9ICdMJztcclxuRW5jb2RlLkxPR0lOX1JFU1BPTlNFID0gJ2wnO1xyXG5FbmNvZGUuQUREID0gJ0EnO1xyXG5FbmNvZGUuQURERUQgPSAnYSc7XHJcbkVuY29kZS5VUERBVEUgPSAnVSc7XHJcbkVuY29kZS5VUERBVEVEID0gJ3UnO1xyXG5FbmNvZGUuUkVNT1ZFID0gJ1InO1xyXG5FbmNvZGUuUkVNT1ZFRCA9ICdyJztcclxuRW5jb2RlLkRFU0NSSUJFID0gJ0QnO1xyXG5FbmNvZGUuREVTQ1JJQkVEID0gJ2QnO1xyXG5FbmNvZGUuQUNUID0gJ0MnO1xyXG5FbmNvZGUuQUNURUQgPSAnYyc7XHJcbkVuY29kZS5OT1RJRlkgPSAnTic7XHJcbkVuY29kZS5OT1RJRklFRCA9ICduJztcclxuRW5jb2RlLk5PVElGSUNBVElPTl9TVE9SRURfUk9PVF9FTlRJVElFU19DSEFOR0VEID0gJ3NyZWMnO1xyXG5FbmNvZGUuTk9USUZJQ0FUSU9OX1NUT1JFRF9DSElMRF9FTlRJVElFU19DSEFOR0VEID0gJ3NjZWMnO1xyXG5FbmNvZGUuTk9USUZJQ0FUSU9OX1NUT1JFRF9FTlRJVElFU19SRU1PVkVEID0gJ3Nlcic7XHJcbkVuY29kZS5PQkpFQ1QgPSAnbyc7IC8vIFZpc2libGVcclxuRW5jb2RlLlBST0JFID0gJ3AnOyAvLyBPYnNlcnZpbmdcclxuRW5jb2RlLkFWQVRBUiA9ICdhJzsgLy8gVmlzaWJsZSBhbmQgb2JzZXJ2aW5nXHJcbmV4cG9ydHMuRW5jb2RlID0gRW5jb2RlO1xyXG5mdW5jdGlvbiBzKHZhbHVlKSB7XHJcbiAgICByZXR1cm4gdmFsdWUgKyBFbmNvZGUuU0VQQVJBVE9SO1xyXG59XHJcbmZ1bmN0aW9uIHNlKHZhbHVlKSB7XHJcbiAgICByZXR1cm4gdmFsdWUucmVwbGFjZShcIlxcXFxcIiwgXCJcXFxcXFxcXDFcIikucmVwbGFjZShFbmNvZGUuU0VQQVJBVE9SLCBcIlxcXFxcXFxcMlwiKSArIEVuY29kZS5TRVBBUkFUT1I7XHJcbn1cclxuZnVuY3Rpb24gaSh2YWx1ZSkge1xyXG4gICAgcmV0dXJuIHZhbHVlICsgRW5jb2RlLlNFUEFSQVRPUjtcclxufVxyXG5mdW5jdGlvbiBkMSh2YWx1ZSkge1xyXG4gICAgcmV0dXJuIHZhbHVlLnRvRml4ZWQoMSkgKyBFbmNvZGUuU0VQQVJBVE9SO1xyXG59XHJcbmZ1bmN0aW9uIGQyKHZhbHVlKSB7XHJcbiAgICByZXR1cm4gdmFsdWUudG9GaXhlZCgyKSArIEVuY29kZS5TRVBBUkFUT1I7XHJcbn1cclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9RW5jb2RlLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///11\n")},function(module,exports,__webpack_require__){eval("var v1 = __webpack_require__(57);\nvar v4 = __webpack_require__(58);\n\nvar uuid = v4;\nuuid.v1 = v1;\nuuid.v4 = v4;\n\nmodule.exports = uuid;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdXVpZC9pbmRleC5qcz8xMWMxIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLFNBQVMsbUJBQU8sQ0FBQyxFQUFNO0FBQ3ZCLFNBQVMsbUJBQU8sQ0FBQyxFQUFNOztBQUV2QjtBQUNBO0FBQ0E7O0FBRUEiLCJmaWxlIjoiMTIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgdjEgPSByZXF1aXJlKCcuL3YxJyk7XG52YXIgdjQgPSByZXF1aXJlKCcuL3Y0Jyk7XG5cbnZhciB1dWlkID0gdjQ7XG51dWlkLnYxID0gdjE7XG51dWlkLnY0ID0gdjQ7XG5cbm1vZHVsZS5leHBvcnRzID0gdXVpZDtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///12\n")},function(module,exports,__webpack_require__){"use strict";eval("/* WEBPACK VAR INJECTION */(function(global) {/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n\n\nvar base64 = __webpack_require__(64)\nvar ieee754 = __webpack_require__(65)\nvar isArray = __webpack_require__(36)\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(6)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///13\n")},function(module,exports){eval("// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///14\n")},function(module,exports,__webpack_require__){"use strict";eval("/* WEBPACK VAR INJECTION */(function(process) {\n\nif (!process.version ||\n    process.version.indexOf('v0.') === 0 ||\n    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {\n  module.exports = { nextTick: nextTick };\n} else {\n  module.exports = process\n}\n\nfunction nextTick(fn, arg1, arg2, arg3) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('\"callback\" argument must be a function');\n  }\n  var len = arguments.length;\n  var args, i;\n  switch (len) {\n  case 0:\n  case 1:\n    return process.nextTick(fn);\n  case 2:\n    return process.nextTick(function afterTickOne() {\n      fn.call(null, arg1);\n    });\n  case 3:\n    return process.nextTick(function afterTickTwo() {\n      fn.call(null, arg1, arg2);\n    });\n  case 4:\n    return process.nextTick(function afterTickThree() {\n      fn.call(null, arg1, arg2, arg3);\n    });\n  default:\n    args = new Array(len - 1);\n    i = 0;\n    while (i < args.length) {\n      args[i++] = arguments[i];\n    }\n    return process.nextTick(function afterTick() {\n      fn.apply(null, args);\n    });\n  }\n}\n\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(14)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcHJvY2Vzcy1uZXh0aWNrLWFyZ3MvaW5kZXguanM/OTY2ZCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSwrQ0FBYTs7QUFFYjtBQUNBO0FBQ0E7QUFDQSxvQkFBb0I7QUFDcEIsQ0FBQztBQUNEO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EiLCJmaWxlIjoiMTUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmlmICghcHJvY2Vzcy52ZXJzaW9uIHx8XG4gICAgcHJvY2Vzcy52ZXJzaW9uLmluZGV4T2YoJ3YwLicpID09PSAwIHx8XG4gICAgcHJvY2Vzcy52ZXJzaW9uLmluZGV4T2YoJ3YxLicpID09PSAwICYmIHByb2Nlc3MudmVyc2lvbi5pbmRleE9mKCd2MS44LicpICE9PSAwKSB7XG4gIG1vZHVsZS5leHBvcnRzID0geyBuZXh0VGljazogbmV4dFRpY2sgfTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcHJvY2Vzc1xufVxuXG5mdW5jdGlvbiBuZXh0VGljayhmbiwgYXJnMSwgYXJnMiwgYXJnMykge1xuICBpZiAodHlwZW9mIGZuICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignXCJjYWxsYmFja1wiIGFyZ3VtZW50IG11c3QgYmUgYSBmdW5jdGlvbicpO1xuICB9XG4gIHZhciBsZW4gPSBhcmd1bWVudHMubGVuZ3RoO1xuICB2YXIgYXJncywgaTtcbiAgc3dpdGNoIChsZW4pIHtcbiAgY2FzZSAwOlxuICBjYXNlIDE6XG4gICAgcmV0dXJuIHByb2Nlc3MubmV4dFRpY2soZm4pO1xuICBjYXNlIDI6XG4gICAgcmV0dXJuIHByb2Nlc3MubmV4dFRpY2soZnVuY3Rpb24gYWZ0ZXJUaWNrT25lKCkge1xuICAgICAgZm4uY2FsbChudWxsLCBhcmcxKTtcbiAgICB9KTtcbiAgY2FzZSAzOlxuICAgIHJldHVybiBwcm9jZXNzLm5leHRUaWNrKGZ1bmN0aW9uIGFmdGVyVGlja1R3bygpIHtcbiAgICAgIGZuLmNhbGwobnVsbCwgYXJnMSwgYXJnMik7XG4gICAgfSk7XG4gIGNhc2UgNDpcbiAgICByZXR1cm4gcHJvY2Vzcy5uZXh0VGljayhmdW5jdGlvbiBhZnRlclRpY2tUaHJlZSgpIHtcbiAgICAgIGZuLmNhbGwobnVsbCwgYXJnMSwgYXJnMiwgYXJnMyk7XG4gICAgfSk7XG4gIGRlZmF1bHQ6XG4gICAgYXJncyA9IG5ldyBBcnJheShsZW4gLSAxKTtcbiAgICBpID0gMDtcbiAgICB3aGlsZSAoaSA8IGFyZ3MubGVuZ3RoKSB7XG4gICAgICBhcmdzW2krK10gPSBhcmd1bWVudHNbaV07XG4gICAgfVxuICAgIHJldHVybiBwcm9jZXNzLm5leHRUaWNrKGZ1bmN0aW9uIGFmdGVyVGljaygpIHtcbiAgICAgIGZuLmFwcGx5KG51bGwsIGFyZ3MpO1xuICAgIH0pO1xuICB9XG59XG5cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///15\n")},function(module,exports,__webpack_require__){eval("/* eslint-disable node/no-deprecated-api */\nvar buffer = __webpack_require__(13)\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc2FmZS1idWZmZXIvaW5kZXguanM/ODcwNyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBLGFBQWEsbUJBQU8sQ0FBQyxFQUFRO0FBQzdCOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjE2LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgbm9kZS9uby1kZXByZWNhdGVkLWFwaSAqL1xudmFyIGJ1ZmZlciA9IHJlcXVpcmUoJ2J1ZmZlcicpXG52YXIgQnVmZmVyID0gYnVmZmVyLkJ1ZmZlclxuXG4vLyBhbHRlcm5hdGl2ZSB0byB1c2luZyBPYmplY3Qua2V5cyBmb3Igb2xkIGJyb3dzZXJzXG5mdW5jdGlvbiBjb3B5UHJvcHMgKHNyYywgZHN0KSB7XG4gIGZvciAodmFyIGtleSBpbiBzcmMpIHtcbiAgICBkc3Rba2V5XSA9IHNyY1trZXldXG4gIH1cbn1cbmlmIChCdWZmZXIuZnJvbSAmJiBCdWZmZXIuYWxsb2MgJiYgQnVmZmVyLmFsbG9jVW5zYWZlICYmIEJ1ZmZlci5hbGxvY1Vuc2FmZVNsb3cpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSBidWZmZXJcbn0gZWxzZSB7XG4gIC8vIENvcHkgcHJvcGVydGllcyBmcm9tIHJlcXVpcmUoJ2J1ZmZlcicpXG4gIGNvcHlQcm9wcyhidWZmZXIsIGV4cG9ydHMpXG4gIGV4cG9ydHMuQnVmZmVyID0gU2FmZUJ1ZmZlclxufVxuXG5mdW5jdGlvbiBTYWZlQnVmZmVyIChhcmcsIGVuY29kaW5nT3JPZmZzZXQsIGxlbmd0aCkge1xuICByZXR1cm4gQnVmZmVyKGFyZywgZW5jb2RpbmdPck9mZnNldCwgbGVuZ3RoKVxufVxuXG4vLyBDb3B5IHN0YXRpYyBtZXRob2RzIGZyb20gQnVmZmVyXG5jb3B5UHJvcHMoQnVmZmVyLCBTYWZlQnVmZmVyKVxuXG5TYWZlQnVmZmVyLmZyb20gPSBmdW5jdGlvbiAoYXJnLCBlbmNvZGluZ09yT2Zmc2V0LCBsZW5ndGgpIHtcbiAgaWYgKHR5cGVvZiBhcmcgPT09ICdudW1iZXInKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignQXJndW1lbnQgbXVzdCBub3QgYmUgYSBudW1iZXInKVxuICB9XG4gIHJldHVybiBCdWZmZXIoYXJnLCBlbmNvZGluZ09yT2Zmc2V0LCBsZW5ndGgpXG59XG5cblNhZmVCdWZmZXIuYWxsb2MgPSBmdW5jdGlvbiAoc2l6ZSwgZmlsbCwgZW5jb2RpbmcpIHtcbiAgaWYgKHR5cGVvZiBzaXplICE9PSAnbnVtYmVyJykge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0FyZ3VtZW50IG11c3QgYmUgYSBudW1iZXInKVxuICB9XG4gIHZhciBidWYgPSBCdWZmZXIoc2l6ZSlcbiAgaWYgKGZpbGwgIT09IHVuZGVmaW5lZCkge1xuICAgIGlmICh0eXBlb2YgZW5jb2RpbmcgPT09ICdzdHJpbmcnKSB7XG4gICAgICBidWYuZmlsbChmaWxsLCBlbmNvZGluZylcbiAgICB9IGVsc2Uge1xuICAgICAgYnVmLmZpbGwoZmlsbClcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgYnVmLmZpbGwoMClcbiAgfVxuICByZXR1cm4gYnVmXG59XG5cblNhZmVCdWZmZXIuYWxsb2NVbnNhZmUgPSBmdW5jdGlvbiAoc2l6ZSkge1xuICBpZiAodHlwZW9mIHNpemUgIT09ICdudW1iZXInKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignQXJndW1lbnQgbXVzdCBiZSBhIG51bWJlcicpXG4gIH1cbiAgcmV0dXJuIEJ1ZmZlcihzaXplKVxufVxuXG5TYWZlQnVmZmVyLmFsbG9jVW5zYWZlU2xvdyA9IGZ1bmN0aW9uIChzaXplKSB7XG4gIGlmICh0eXBlb2Ygc2l6ZSAhPT0gJ251bWJlcicpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdBcmd1bWVudCBtdXN0IGJlIGEgbnVtYmVyJylcbiAgfVxuICByZXR1cm4gYnVmZmVyLlNsb3dCdWZmZXIoc2l6ZSlcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///16\n")},function(module,exports,__webpack_require__){"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\n/**\r\n * Abstract base class for system controller implementations.\r\n */\r\nclass AbstractSystemController {\r\n    constructor(system, entity, data) {\r\n        this.systemName = system.name;\r\n        this.scene = entity;\r\n        this.data = data;\r\n        this.system = system;\r\n    }\r\n    getSystemController(systemName) {\r\n        const system = this.scene.systems[systemName];\r\n        if (!system) {\r\n            throw new Error("System is not registered to scene: " + system);\r\n        }\r\n        return system.controller;\r\n    }\r\n}\r\nexports.AbstractSystemController = AbstractSystemController;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9zeXN0ZW0vQWJzdHJhY3RTeXN0ZW1Db250cm9sbGVyLnRzPzc3NzEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFHQTs7R0FFRztBQUNILE1BQXNCLHdCQUF3QjtJQU0xQyxZQUFZLE1BQWMsRUFBRSxNQUFhLEVBQUUsSUFBUztRQUNoRCxJQUFJLENBQUMsVUFBVSxHQUFJLE1BQWMsQ0FBQyxJQUFJLENBQUM7UUFDdkMsSUFBSSxDQUFDLEtBQUssR0FBRyxNQUFNLENBQUM7UUFDcEIsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUM7UUFDakIsSUFBSSxDQUFDLE1BQU0sR0FBRyxNQUFNLENBQUM7SUFDekIsQ0FBQztJQVVELG1CQUFtQixDQUE2QixVQUFrQjtRQUM5RCxNQUFNLE1BQU0sR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxVQUFVLENBQUMsQ0FBQztRQUM5QyxJQUFJLENBQUMsTUFBTSxFQUFFO1lBQ1QsTUFBTSxJQUFJLEtBQUssQ0FBQyxxQ0FBcUMsR0FBRyxNQUFNLENBQUMsQ0FBQztTQUNuRTtRQUVELE9BQVEsTUFBYyxDQUFDLFVBQVUsQ0FBQztJQUN0QyxDQUFDO0NBQ0o7QUE3QkQsNERBNkJDIiwiZmlsZSI6IjE3LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtTeXN0ZW1Db250cm9sbGVyfSBmcm9tIFwiLi9TeXN0ZW1Db250cm9sbGVyXCI7XHJcbmltcG9ydCB7U2NlbmUsIFN5c3RlbX0gZnJvbSBcImFmcmFtZVwiO1xyXG5cclxuLyoqXHJcbiAqIEFic3RyYWN0IGJhc2UgY2xhc3MgZm9yIHN5c3RlbSBjb250cm9sbGVyIGltcGxlbWVudGF0aW9ucy5cclxuICovXHJcbmV4cG9ydCBhYnN0cmFjdCBjbGFzcyBBYnN0cmFjdFN5c3RlbUNvbnRyb2xsZXIgaW1wbGVtZW50cyBTeXN0ZW1Db250cm9sbGVyIHtcclxuICAgIHJlYWRvbmx5IHN5c3RlbU5hbWU6IHN0cmluZztcclxuICAgIHJlYWRvbmx5IHNjZW5lOiBTY2VuZTtcclxuICAgIGRhdGE6IGFueTtcclxuICAgIHJlYWRvbmx5IHN5c3RlbTogU3lzdGVtO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKHN5c3RlbTogU3lzdGVtLCBlbnRpdHk6IFNjZW5lLCBkYXRhOiBhbnkpIHtcclxuICAgICAgICB0aGlzLnN5c3RlbU5hbWUgPSAoc3lzdGVtIGFzIGFueSkubmFtZTtcclxuICAgICAgICB0aGlzLnNjZW5lID0gZW50aXR5O1xyXG4gICAgICAgIHRoaXMuZGF0YSA9IGRhdGE7XHJcbiAgICAgICAgdGhpcy5zeXN0ZW0gPSBzeXN0ZW07XHJcbiAgICB9XHJcblxyXG4gICAgYWJzdHJhY3QgaW5pdCgpOiB2b2lkO1xyXG5cclxuICAgIGFic3RyYWN0IHBhdXNlKCk6IHZvaWQ7XHJcblxyXG4gICAgYWJzdHJhY3QgcGxheSgpOiB2b2lkO1xyXG5cclxuICAgIGFic3RyYWN0IHRpY2sodGltZTogbnVtYmVyLCB0aW1lRGVsdGE6IG51bWJlcik6IHZvaWQ7XHJcblxyXG4gICAgZ2V0U3lzdGVtQ29udHJvbGxlcjxDIGV4dGVuZHMgU3lzdGVtQ29udHJvbGxlcj4oc3lzdGVtTmFtZTogc3RyaW5nKTogQyB7XHJcbiAgICAgICAgY29uc3Qgc3lzdGVtID0gdGhpcy5zY2VuZS5zeXN0ZW1zW3N5c3RlbU5hbWVdO1xyXG4gICAgICAgIGlmICghc3lzdGVtKSB7XHJcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIlN5c3RlbSBpcyBub3QgcmVnaXN0ZXJlZCB0byBzY2VuZTogXCIgKyBzeXN0ZW0pO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcmV0dXJuIChzeXN0ZW0gYXMgYW55KS5jb250cm9sbGVyO1xyXG4gICAgfVxyXG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///17\n')},function(module,exports,__webpack_require__){"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nvar DeviceSlot;\r\n(function (DeviceSlot) {\r\n    DeviceSlot[DeviceSlot["KEYBOARD_AND_MOUSE"] = 0] = "KEYBOARD_AND_MOUSE";\r\n    DeviceSlot[DeviceSlot["GAMEPAD"] = 1] = "GAMEPAD";\r\n    DeviceSlot[DeviceSlot["PRIMARY_HAND"] = 2] = "PRIMARY_HAND";\r\n    DeviceSlot[DeviceSlot["SECONDARY_HAND"] = 3] = "SECONDARY_HAND";\r\n})(DeviceSlot = exports.DeviceSlot || (exports.DeviceSlot = {}));\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9zeXN0ZW0vaW50ZXJmYWNlL21vZGVsL0RldmljZVNsb3QudHM/NzJhNCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLElBQVksVUFLWDtBQUxELFdBQVksVUFBVTtJQUNsQix1RUFBa0I7SUFDbEIsaURBQU87SUFDUCwyREFBWTtJQUNaLCtEQUFjO0FBQ2xCLENBQUMsRUFMVyxVQUFVLEdBQVYsa0JBQVUsS0FBVixrQkFBVSxRQUtyQiIsImZpbGUiOiIxOC5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBlbnVtIERldmljZVNsb3Qge1xyXG4gICAgS0VZQk9BUkRfQU5EX01PVVNFLFxyXG4gICAgR0FNRVBBRCxcclxuICAgIFBSSU1BUllfSEFORCxcclxuICAgIFNFQ09OREFSWV9IQU5EXHJcbn0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///18\n')},function(module,exports,__webpack_require__){"use strict";eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nclass States {\r\n}\r\nStates.STATE_MOVEMENT = 'movement';\r\nexports.States = States;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9tb2RlbC9TdGF0ZXMudHM/Mzc4OSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLE1BQWEsTUFBTTs7QUFDUixxQkFBYyxHQUFHLFVBQVUsQ0FBQztBQUR2Qyx3QkFFQyIsImZpbGUiOiIxOS5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjbGFzcyBTdGF0ZXMge1xyXG4gICAgc3RhdGljIFNUQVRFX01PVkVNRU5UID0gJ21vdmVtZW50JztcclxufSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///19\n")},function(module,exports,__webpack_require__){eval("/*jslint node:true */\r\n\r\nvar xml2js = __webpack_require__(35);\r\nvar xml2json = __webpack_require__(78);\r\nvar js2xml = __webpack_require__(41);\r\nvar json2xml = __webpack_require__(79);\r\n\r\nmodule.exports = {\r\n  xml2js: xml2js,\r\n  xml2json: xml2json,\r\n  js2xml: js2xml,\r\n  json2xml: json2xml\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMveG1sLWpzL2xpYi9pbmRleC5qcz9jNTFhIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBLGFBQWEsbUJBQU8sQ0FBQyxFQUFVO0FBQy9CLGVBQWUsbUJBQU8sQ0FBQyxFQUFZO0FBQ25DLGFBQWEsbUJBQU8sQ0FBQyxFQUFVO0FBQy9CLGVBQWUsbUJBQU8sQ0FBQyxFQUFZOztBQUVuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiMjAuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKmpzbGludCBub2RlOnRydWUgKi9cclxuXHJcbnZhciB4bWwyanMgPSByZXF1aXJlKCcuL3htbDJqcycpO1xyXG52YXIgeG1sMmpzb24gPSByZXF1aXJlKCcuL3htbDJqc29uJyk7XHJcbnZhciBqczJ4bWwgPSByZXF1aXJlKCcuL2pzMnhtbCcpO1xyXG52YXIganNvbjJ4bWwgPSByZXF1aXJlKCcuL2pzb24yeG1sJyk7XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IHtcclxuICB4bWwyanM6IHhtbDJqcyxcclxuICB4bWwyanNvbjogeG1sMmpzb24sXHJcbiAganMyeG1sOiBqczJ4bWwsXHJcbiAganNvbjJ4bWw6IGpzb24yeG1sXHJcbn07XHJcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///20\n")},function(module,exports){eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///21\n")},function(module,exports,__webpack_require__){eval("exports = module.exports = __webpack_require__(37);\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = __webpack_require__(23);\nexports.Duplex = __webpack_require__(4);\nexports.Transform = __webpack_require__(40);\nexports.PassThrough = __webpack_require__(73);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhZGFibGUtc3RyZWFtL3JlYWRhYmxlLWJyb3dzZXIuanM/ZTM3MiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSwyQkFBMkIsbUJBQU8sQ0FBQyxFQUEyQjtBQUM5RDtBQUNBO0FBQ0EsbUJBQW1CLG1CQUFPLENBQUMsRUFBMkI7QUFDdEQsaUJBQWlCLG1CQUFPLENBQUMsQ0FBeUI7QUFDbEQsb0JBQW9CLG1CQUFPLENBQUMsRUFBNEI7QUFDeEQsc0JBQXNCLG1CQUFPLENBQUMsRUFBOEIiLCJmaWxlIjoiMjIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2xpYi9fc3RyZWFtX3JlYWRhYmxlLmpzJyk7XG5leHBvcnRzLlN0cmVhbSA9IGV4cG9ydHM7XG5leHBvcnRzLlJlYWRhYmxlID0gZXhwb3J0cztcbmV4cG9ydHMuV3JpdGFibGUgPSByZXF1aXJlKCcuL2xpYi9fc3RyZWFtX3dyaXRhYmxlLmpzJyk7XG5leHBvcnRzLkR1cGxleCA9IHJlcXVpcmUoJy4vbGliL19zdHJlYW1fZHVwbGV4LmpzJyk7XG5leHBvcnRzLlRyYW5zZm9ybSA9IHJlcXVpcmUoJy4vbGliL19zdHJlYW1fdHJhbnNmb3JtLmpzJyk7XG5leHBvcnRzLlBhc3NUaHJvdWdoID0gcmVxdWlyZSgnLi9saWIvX3N0cmVhbV9wYXNzdGhyb3VnaC5qcycpO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///22\n")},function(module,exports,__webpack_require__){"use strict";eval("/* WEBPACK VAR INJECTION */(function(process, setImmediate, global) {// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n\n\n/*<replacement>*/\n\nvar pna = __webpack_require__(15);\n/*</replacement>*/\n\nmodule.exports = Writable;\n\n/* <replacement> */\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\nvar asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : pna.nextTick;\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n/*<replacement>*/\nvar util = __webpack_require__(10);\nutil.inherits = __webpack_require__(7);\n/*</replacement>*/\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: __webpack_require__(72)\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = __webpack_require__(38);\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = __webpack_require__(16).Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\nvar destroyImpl = __webpack_require__(39);\n\nutil.inherits(Writable, Stream);\n\nfunction nop() {}\n\nfunction WritableState(options, stream) {\n  Duplex = Duplex || __webpack_require__(4);\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  var writableHwm = options.writableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (writableHwm || writableHwm === 0)) this.highWaterMark = writableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // if _final has been called\n  this.finalCalled = false;\n\n  // drain event flag.\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function () {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})();\n\n// Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\nvar realHasInstance;\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function (object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function (object) {\n    return object instanceof this;\n  };\n}\n\nfunction Writable(options) {\n  Duplex = Duplex || __webpack_require__(4);\n\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n  if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {\n    return new Writable(options);\n  }\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n\n    if (typeof options.writev === 'function') this._writev = options.writev;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  this.emit('error', new Error('Cannot pipe, not readable'));\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  pna.nextTick(cb, er);\n}\n\n// Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n  var er = false;\n\n  if (chunk === null) {\n    er = new TypeError('May not write null values to stream');\n  } else if (typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  if (er) {\n    stream.emit('error', er);\n    pna.nextTick(cb, er);\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n\n  if (typeof cb !== 'function') cb = nop;\n\n  if (state.ended) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  var state = this._writableState;\n\n  state.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n\n    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\n\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    pna.nextTick(cb, er);\n    // this can emit finish, and it will always happen\n    // after error\n    pna.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n    // this can emit finish, but finish must\n    // always follow error\n    finishMaybe(stream, state);\n  }\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state);\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      /*<replacement>*/\n      asyncWrite(afterWrite, stream, state, finished, cb);\n      /*</replacement>*/\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n\n    var count = 0;\n    var allBuffers = true;\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n    buffer.allBuffers = allBuffers;\n\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new Error('_write() is not implemented'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending && !state.finished) endWritable(this, state, cb);\n};\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n    if (err) {\n      stream.emit('error', err);\n    }\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function') {\n      state.pendingcb++;\n      state.finalCalled = true;\n      pna.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    prefinish(stream, state);\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n    }\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) pna.nextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\n\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  }\n  if (state.corkedRequestsFree) {\n    state.corkedRequestsFree.next = corkReq;\n  } else {\n    state.corkedRequestsFree = corkReq;\n  }\n}\n\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  get: function () {\n    if (this._writableState === undefined) {\n      return false;\n    }\n    return this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._writableState.destroyed = value;\n  }\n});\n\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\nWritable.prototype._destroy = function (err, cb) {\n  this.end();\n  cb(err);\n};\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(14), __webpack_require__(70).setImmediate, __webpack_require__(6)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///23\n")},function(module,exports,__webpack_require__){"use strict";eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n/*<replacement>*/\n\nvar Buffer = __webpack_require__(16).Buffer;\n/*</replacement>*/\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd';\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd';\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd';\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd';\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///24\n")},function(module,exports,__webpack_require__){eval("var isArray = __webpack_require__(26).isArray;\r\n\r\nmodule.exports = {\r\n\r\n  copyOptions: function (options) {\r\n    var key, copy = {};\r\n    for (key in options) {\r\n      if (options.hasOwnProperty(key)) {\r\n        copy[key] = options[key];\r\n      }\r\n    }\r\n    return copy;\r\n  },\r\n\r\n  ensureFlagExists: function (item, options) {\r\n    if (!(item in options) || typeof options[item] !== 'boolean') {\r\n      options[item] = false;\r\n    }\r\n  },\r\n\r\n  ensureSpacesExists: function (options) {\r\n    if (!('spaces' in options) || (typeof options.spaces !== 'number' && typeof options.spaces !== 'string')) {\r\n      options.spaces = 0;\r\n    }\r\n  },\r\n\r\n  ensureAlwaysArrayExists: function (options) {\r\n    if (!('alwaysArray' in options) || (typeof options.alwaysArray !== 'boolean' && !isArray(options.alwaysArray))) {\r\n      options.alwaysArray = false;\r\n    }\r\n  },\r\n\r\n  ensureKeyExists: function (key, options) {\r\n    if (!(key + 'Key' in options) || typeof options[key + 'Key'] !== 'string') {\r\n      options[key + 'Key'] = options.compact ? '_' + key : key;\r\n    }\r\n  },\r\n\r\n  checkFnExists: function (key, options) {\r\n    return key + 'Fn' in options;\r\n  }\r\n\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMveG1sLWpzL2xpYi9vcHRpb25zLWhlbHBlci5qcz85NmMxIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGNBQWMsbUJBQU8sQ0FBQyxFQUFnQjs7QUFFdEM7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTs7QUFFQSIsImZpbGUiOiIyNS5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBpc0FycmF5ID0gcmVxdWlyZSgnLi9hcnJheS1oZWxwZXInKS5pc0FycmF5O1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSB7XHJcblxyXG4gIGNvcHlPcHRpb25zOiBmdW5jdGlvbiAob3B0aW9ucykge1xyXG4gICAgdmFyIGtleSwgY29weSA9IHt9O1xyXG4gICAgZm9yIChrZXkgaW4gb3B0aW9ucykge1xyXG4gICAgICBpZiAob3B0aW9ucy5oYXNPd25Qcm9wZXJ0eShrZXkpKSB7XHJcbiAgICAgICAgY29weVtrZXldID0gb3B0aW9uc1trZXldO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICByZXR1cm4gY29weTtcclxuICB9LFxyXG5cclxuICBlbnN1cmVGbGFnRXhpc3RzOiBmdW5jdGlvbiAoaXRlbSwgb3B0aW9ucykge1xyXG4gICAgaWYgKCEoaXRlbSBpbiBvcHRpb25zKSB8fCB0eXBlb2Ygb3B0aW9uc1tpdGVtXSAhPT0gJ2Jvb2xlYW4nKSB7XHJcbiAgICAgIG9wdGlvbnNbaXRlbV0gPSBmYWxzZTtcclxuICAgIH1cclxuICB9LFxyXG5cclxuICBlbnN1cmVTcGFjZXNFeGlzdHM6IGZ1bmN0aW9uIChvcHRpb25zKSB7XHJcbiAgICBpZiAoISgnc3BhY2VzJyBpbiBvcHRpb25zKSB8fCAodHlwZW9mIG9wdGlvbnMuc3BhY2VzICE9PSAnbnVtYmVyJyAmJiB0eXBlb2Ygb3B0aW9ucy5zcGFjZXMgIT09ICdzdHJpbmcnKSkge1xyXG4gICAgICBvcHRpb25zLnNwYWNlcyA9IDA7XHJcbiAgICB9XHJcbiAgfSxcclxuXHJcbiAgZW5zdXJlQWx3YXlzQXJyYXlFeGlzdHM6IGZ1bmN0aW9uIChvcHRpb25zKSB7XHJcbiAgICBpZiAoISgnYWx3YXlzQXJyYXknIGluIG9wdGlvbnMpIHx8ICh0eXBlb2Ygb3B0aW9ucy5hbHdheXNBcnJheSAhPT0gJ2Jvb2xlYW4nICYmICFpc0FycmF5KG9wdGlvbnMuYWx3YXlzQXJyYXkpKSkge1xyXG4gICAgICBvcHRpb25zLmFsd2F5c0FycmF5ID0gZmFsc2U7XHJcbiAgICB9XHJcbiAgfSxcclxuXHJcbiAgZW5zdXJlS2V5RXhpc3RzOiBmdW5jdGlvbiAoa2V5LCBvcHRpb25zKSB7XHJcbiAgICBpZiAoIShrZXkgKyAnS2V5JyBpbiBvcHRpb25zKSB8fCB0eXBlb2Ygb3B0aW9uc1trZXkgKyAnS2V5J10gIT09ICdzdHJpbmcnKSB7XHJcbiAgICAgIG9wdGlvbnNba2V5ICsgJ0tleSddID0gb3B0aW9ucy5jb21wYWN0ID8gJ18nICsga2V5IDoga2V5O1xyXG4gICAgfVxyXG4gIH0sXHJcblxyXG4gIGNoZWNrRm5FeGlzdHM6IGZ1bmN0aW9uIChrZXksIG9wdGlvbnMpIHtcclxuICAgIHJldHVybiBrZXkgKyAnRm4nIGluIG9wdGlvbnM7XHJcbiAgfVxyXG5cclxufTtcclxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///25\n")},function(module,exports){eval("module.exports = {\r\n\r\n  isArray: function(value) {\r\n    if (Array.isArray) {\r\n      return Array.isArray(value);\r\n    }\r\n    // fallback for older browsers like  IE 8\r\n    return Object.prototype.toString.call( value ) === '[object Array]';\r\n  }\r\n\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMveG1sLWpzL2xpYi9hcnJheS1oZWxwZXIuanM/OWIxMiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsImZpbGUiOiIyNi5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0ge1xyXG5cclxuICBpc0FycmF5OiBmdW5jdGlvbih2YWx1ZSkge1xyXG4gICAgaWYgKEFycmF5LmlzQXJyYXkpIHtcclxuICAgICAgcmV0dXJuIEFycmF5LmlzQXJyYXkodmFsdWUpO1xyXG4gICAgfVxyXG4gICAgLy8gZmFsbGJhY2sgZm9yIG9sZGVyIGJyb3dzZXJzIGxpa2UgIElFIDhcclxuICAgIHJldHVybiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoIHZhbHVlICkgPT09ICdbb2JqZWN0IEFycmF5XSc7XHJcbiAgfVxyXG5cclxufTtcclxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///26\n")},function(module,exports,__webpack_require__){"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nconst AbstractComponentController_1 = __webpack_require__(1);\r\nclass CompositeComponentController extends AbstractComponentController_1.AbstractComponentController {\r\n    constructor(component, entity, data) {\r\n        super(component, entity, data);\r\n        this.features = [];\r\n    }\r\n    init() {\r\n        //console.log(this.componentName + " init: " + JSON.stringify(this.data));\r\n        this.features.forEach(controller => {\r\n            controller.init();\r\n        });\r\n    }\r\n    update(data, oldData) {\r\n        //console.log(this.componentName + " update: " + JSON.stringify(this.data));\r\n        this.features.forEach(controller => {\r\n            controller.update(data, oldData);\r\n        });\r\n    }\r\n    remove() {\r\n        //console.log(this.componentName + " remove");\r\n        this.features.forEach(controller => {\r\n            controller.remove();\r\n        });\r\n    }\r\n    pause() {\r\n        //console.log(this.componentName + " pause");\r\n        this.features.forEach(controller => {\r\n            controller.pause();\r\n        });\r\n    }\r\n    play() {\r\n        //console.log(this.componentName + " play");\r\n        this.features.forEach(controller => {\r\n            controller.play();\r\n        });\r\n    }\r\n    tick(time, timeDelta) {\r\n        this.features.forEach(controller => {\r\n            controller.tick(time, timeDelta);\r\n        });\r\n    }\r\n    addFeature(feature) {\r\n        this.features.push(feature);\r\n    }\r\n}\r\nexports.CompositeComponentController = CompositeComponentController;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9jb21wb25lbnQvQ29tcG9zaXRlQ29tcG9uZW50Q29udHJvbGxlci50cz80YmJmIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBRUEsNkRBQTBFO0FBRTFFLE1BQWEsNEJBQTZCLFNBQVEseURBQTJCO0lBSXpFLFlBQVksU0FBb0IsRUFBRSxNQUFjLEVBQUUsSUFBUztRQUN2RCxLQUFLLENBQUMsU0FBUyxFQUFFLE1BQU0sRUFBRSxJQUFJLENBQUMsQ0FBQztRQUhuQyxhQUFRLEdBQTJCLEVBQUUsQ0FBQztJQUl0QyxDQUFDO0lBRUQsSUFBSTtRQUNBLDBFQUEwRTtRQUMxRSxJQUFJLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxVQUFVLENBQUMsRUFBRTtZQUMvQixVQUFVLENBQUMsSUFBSSxFQUFFLENBQUM7UUFDdEIsQ0FBQyxDQUFDLENBQUM7SUFFUCxDQUFDO0lBRUQsTUFBTSxDQUFDLElBQVMsRUFBRSxPQUFZO1FBQzFCLDRFQUE0RTtRQUM1RSxJQUFJLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxVQUFVLENBQUMsRUFBRTtZQUMvQixVQUFVLENBQUMsTUFBTSxDQUFDLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQztRQUNyQyxDQUFDLENBQUMsQ0FBQztJQUNQLENBQUM7SUFFRCxNQUFNO1FBQ0YsOENBQThDO1FBQzlDLElBQUksQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLFVBQVUsQ0FBQyxFQUFFO1lBQy9CLFVBQVUsQ0FBQyxNQUFNLEVBQUUsQ0FBQztRQUN4QixDQUFDLENBQUMsQ0FBQztJQUNQLENBQUM7SUFFRCxLQUFLO1FBQ0QsNkNBQTZDO1FBQzdDLElBQUksQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLFVBQVUsQ0FBQyxFQUFFO1lBQy9CLFVBQVUsQ0FBQyxLQUFLLEVBQUUsQ0FBQztRQUN2QixDQUFDLENBQUMsQ0FBQztJQUNQLENBQUM7SUFFRCxJQUFJO1FBQ0EsNENBQTRDO1FBQzVDLElBQUksQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLFVBQVUsQ0FBQyxFQUFFO1lBQy9CLFVBQVUsQ0FBQyxJQUFJLEVBQUUsQ0FBQztRQUN0QixDQUFDLENBQUMsQ0FBQztJQUNQLENBQUM7SUFFRCxJQUFJLENBQUMsSUFBWSxFQUFFLFNBQWlCO1FBQ2hDLElBQUksQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLFVBQVUsQ0FBQyxFQUFFO1lBQy9CLFVBQVUsQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLFNBQVMsQ0FBQyxDQUFDO1FBQ3JDLENBQUMsQ0FBQyxDQUFDO0lBQ1AsQ0FBQztJQUVELFVBQVUsQ0FBQyxPQUF3QjtRQUMvQixJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUNoQyxDQUFDO0NBRUo7QUF0REQsb0VBc0RDIiwiZmlsZSI6IjI3LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtBYnN0cmFjdEZlYXR1cmV9IGZyb20gXCIuLi9mZWF0dXJlL0Fic3RyYWN0RmVhdHVyZVwiO1xyXG5pbXBvcnQge0VudGl0eSwgQ29tcG9uZW50fSBmcm9tIFwiYWZyYW1lXCI7XHJcbmltcG9ydCB7QWJzdHJhY3RDb21wb25lbnRDb250cm9sbGVyfSBmcm9tIFwiLi9BYnN0cmFjdENvbXBvbmVudENvbnRyb2xsZXJcIjtcclxuXHJcbmV4cG9ydCBjbGFzcyBDb21wb3NpdGVDb21wb25lbnRDb250cm9sbGVyIGV4dGVuZHMgQWJzdHJhY3RDb21wb25lbnRDb250cm9sbGVyIHtcclxuXHJcbiAgICBmZWF0dXJlczogQXJyYXk8QWJzdHJhY3RGZWF0dXJlPiA9IFtdO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKGNvbXBvbmVudDogQ29tcG9uZW50LCBlbnRpdHk6IEVudGl0eSwgZGF0YTogYW55KSB7XHJcbiAgICAgICAgc3VwZXIoY29tcG9uZW50LCBlbnRpdHksIGRhdGEpO1xyXG4gICAgfVxyXG5cclxuICAgIGluaXQoKTogdm9pZCB7XHJcbiAgICAgICAgLy9jb25zb2xlLmxvZyh0aGlzLmNvbXBvbmVudE5hbWUgKyBcIiBpbml0OiBcIiArIEpTT04uc3RyaW5naWZ5KHRoaXMuZGF0YSkpO1xyXG4gICAgICAgIHRoaXMuZmVhdHVyZXMuZm9yRWFjaChjb250cm9sbGVyID0+IHtcclxuICAgICAgICAgICAgY29udHJvbGxlci5pbml0KCk7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgfVxyXG5cclxuICAgIHVwZGF0ZShkYXRhOiBhbnksIG9sZERhdGE6IGFueSk6IHZvaWQge1xyXG4gICAgICAgIC8vY29uc29sZS5sb2codGhpcy5jb21wb25lbnROYW1lICsgXCIgdXBkYXRlOiBcIiArIEpTT04uc3RyaW5naWZ5KHRoaXMuZGF0YSkpO1xyXG4gICAgICAgIHRoaXMuZmVhdHVyZXMuZm9yRWFjaChjb250cm9sbGVyID0+IHtcclxuICAgICAgICAgICAgY29udHJvbGxlci51cGRhdGUoZGF0YSwgb2xkRGF0YSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgcmVtb3ZlKCk6IHZvaWQge1xyXG4gICAgICAgIC8vY29uc29sZS5sb2codGhpcy5jb21wb25lbnROYW1lICsgXCIgcmVtb3ZlXCIpO1xyXG4gICAgICAgIHRoaXMuZmVhdHVyZXMuZm9yRWFjaChjb250cm9sbGVyID0+IHtcclxuICAgICAgICAgICAgY29udHJvbGxlci5yZW1vdmUoKTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICBwYXVzZSgpOiB2b2lkIHtcclxuICAgICAgICAvL2NvbnNvbGUubG9nKHRoaXMuY29tcG9uZW50TmFtZSArIFwiIHBhdXNlXCIpO1xyXG4gICAgICAgIHRoaXMuZmVhdHVyZXMuZm9yRWFjaChjb250cm9sbGVyID0+IHtcclxuICAgICAgICAgICAgY29udHJvbGxlci5wYXVzZSgpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIHBsYXkoKTogdm9pZCB7XHJcbiAgICAgICAgLy9jb25zb2xlLmxvZyh0aGlzLmNvbXBvbmVudE5hbWUgKyBcIiBwbGF5XCIpO1xyXG4gICAgICAgIHRoaXMuZmVhdHVyZXMuZm9yRWFjaChjb250cm9sbGVyID0+IHtcclxuICAgICAgICAgICAgY29udHJvbGxlci5wbGF5KCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgdGljayh0aW1lOiBudW1iZXIsIHRpbWVEZWx0YTogbnVtYmVyKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5mZWF0dXJlcy5mb3JFYWNoKGNvbnRyb2xsZXIgPT4ge1xyXG4gICAgICAgICAgICBjb250cm9sbGVyLnRpY2sodGltZSwgdGltZURlbHRhKTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICBhZGRGZWF0dXJlKGZlYXR1cmU6IEFic3RyYWN0RmVhdHVyZSkge1xyXG4gICAgICAgIHRoaXMuZmVhdHVyZXMucHVzaChmZWF0dXJlKTtcclxuICAgIH1cclxuXHJcbn1cclxuXHJcblxyXG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///27\n')},function(module,exports,__webpack_require__){"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nconst three_1 = __webpack_require__(2);\r\nconst AnimateEventDetail_1 = __webpack_require__(29);\r\nconst AnimationFinishedEventDetail_1 = __webpack_require__(51);\r\nconst Events_1 = __webpack_require__(9);\r\nconst AnimationLoopStyle_1 = __webpack_require__(30);\r\nconst AbstractFeature_1 = __webpack_require__(31);\r\nconst States_1 = __webpack_require__(19);\r\nclass AnimationFeature extends AbstractFeature_1.AbstractFeature {\r\n    constructor(controller, entity) {\r\n        super("animation-controller", controller, entity);\r\n        this.clips = new Map();\r\n        this.actions = new Map();\r\n        this.stateSystemController = controller.getSystemController("state");\r\n        this.movementState = this.stateSystemController.getState(this.entity, States_1.States.STATE_MOVEMENT);\r\n    }\r\n    init() {\r\n        this.addEventListener(Events_1.Events.EVENT_MODEL_LOADED, () => {\r\n            this.initAnimation();\r\n        });\r\n        this.addEventListener(Events_1.Events.EVENT_ANIMATE_BEGIN, (detail) => {\r\n            this.beginAnimation(detail.clipName, detail.style, detail.repetitions);\r\n        });\r\n        this.addEventListener(Events_1.Events.EVENT_ANIMATE_END, (detail) => {\r\n            this.endAnimation(detail.clipName);\r\n        });\r\n    }\r\n    update(data, oldData) {\r\n    }\r\n    remove() {\r\n    }\r\n    pause() {\r\n    }\r\n    play() {\r\n    }\r\n    tick(time, timeDelta) {\r\n        if (this.mixer) {\r\n            if (this.actions.has("walking")) {\r\n                const walkingAction = this.actions.get("walking");\r\n                const walkingAnimationNormalSpeed = 1.9; // 1 m/s\r\n                const entityActualSpeed = this.movementState.distanceDelta / this.movementState.timeDeltaSeconds;\r\n                const timeScale = this.movementState.facing * entityActualSpeed / walkingAnimationNormalSpeed;\r\n                walkingAction.setEffectiveTimeScale(timeScale);\r\n            }\r\n            this.mixer.update(timeDelta / 1000);\r\n        }\r\n    }\r\n    initAnimation() {\r\n        const mesh = this.entity.getObject3D(\'mesh\');\r\n        const clips = mesh.animations;\r\n        if (!clips) {\r\n            return;\r\n        }\r\n        if (clips.length == 0) {\r\n            return;\r\n        }\r\n        this.mixer = new three_1.AnimationMixer(mesh);\r\n        this.mixer.addEventListener(\'finished\', (event) => {\r\n            this.onAnimationFinished(event.action._clip.name);\r\n        });\r\n        this.clips.clear();\r\n        clips.forEach(clip => {\r\n            this.clips.set(clip.name.toLocaleLowerCase(), clip);\r\n        });\r\n        this.actions.clear();\r\n        this.dispatchEvent(Events_1.Events.EVENT_ANIMATE_BEGIN, new AnimateEventDetail_1.AnimationEventDetail("dance", AnimationLoopStyle_1.AnimationLoopStyle.LOOP_REPEAT, 0));\r\n    }\r\n    onAnimationFinished(clipName) {\r\n        this.dispatchEvent(Events_1.Events.EVENT_ANIMATION_FINISHED, new AnimationFinishedEventDetail_1.AnimationFinishedEventDetails(clipName));\r\n        this.actions.delete(clipName);\r\n    }\r\n    beginAnimation(clipName, style, repetitions) {\r\n        if (!this.mixer) {\r\n            return;\r\n        }\r\n        if (!this.clips.has(clipName)) {\r\n            return;\r\n        }\r\n        const clip = this.clips.get(clipName);\r\n        if (clip) {\r\n            const action = this.actions.has(clipName) ? this.actions.get(clipName) : this.mixer.clipAction(clip);\r\n            if (style == AnimationLoopStyle_1.AnimationLoopStyle.ONCE) {\r\n                action.setLoop(three_1.LoopOnce, repetitions);\r\n            }\r\n            else if (style == AnimationLoopStyle_1.AnimationLoopStyle.LOOP_REPEAT) {\r\n                if (repetitions > -1) {\r\n                    action.setLoop(three_1.LoopRepeat, repetitions);\r\n                }\r\n            }\r\n            else {\r\n                action.setLoop(three_1.LoopPingPong, repetitions);\r\n            }\r\n            action.reset();\r\n            action.fadeIn(0.25);\r\n            action.play();\r\n            this.actions.set(clipName, action);\r\n        }\r\n    }\r\n    endAnimation(clipName) {\r\n        if (!this.actions.has(clipName)) {\r\n            return;\r\n        }\r\n        const action = this.actions.get(clipName);\r\n        action.fadeOut(0.25);\r\n        this.dispatchEvent(Events_1.Events.EVENT_ANIMATION_FINISHED, new AnimationFinishedEventDetail_1.AnimationFinishedEventDetails(clipName));\r\n        setTimeout(() => {\r\n            if (this.actions.has(clipName) && this.actions.get(clipName).weight == 0) {\r\n                action.stop();\r\n            }\r\n        }, 1000);\r\n    }\r\n}\r\nexports.AnimationFeature = AnimationFeature;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///28\n')},function(module,exports,__webpack_require__){"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nclass AnimationEventDetail {\r\n    constructor(animation, style, repeats) {\r\n        this.clipName = animation;\r\n        this.style = style;\r\n        this.repetitions = repeats;\r\n    }\r\n}\r\nexports.AnimationEventDetail = AnimationEventDetail;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9tb2RlbC9BbmltYXRlRXZlbnREZXRhaWwudHM/YTQ2YyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUVBLE1BQWEsb0JBQW9CO0lBTTdCLFlBQVksU0FBaUIsRUFBRSxLQUF5QixFQUFFLE9BQWU7UUFDckUsSUFBSSxDQUFDLFFBQVEsR0FBRyxTQUFTLENBQUM7UUFDMUIsSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7UUFDbkIsSUFBSSxDQUFDLFdBQVcsR0FBRyxPQUFPLENBQUM7SUFDL0IsQ0FBQztDQUNKO0FBWEQsb0RBV0MiLCJmaWxlIjoiMjkuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0FuaW1hdGlvbkxvb3BTdHlsZX0gZnJvbSBcIi4uL2ZlYXR1cmUvYW5pbWF0aW9uL0FuaW1hdGlvbkxvb3BTdHlsZVwiO1xyXG5cclxuZXhwb3J0IGNsYXNzIEFuaW1hdGlvbkV2ZW50RGV0YWlsIHtcclxuXHJcbiAgICBjbGlwTmFtZTogc3RyaW5nO1xyXG4gICAgc3R5bGU6IEFuaW1hdGlvbkxvb3BTdHlsZTtcclxuICAgIHJlcGV0aXRpb25zOiBudW1iZXI7XHJcblxyXG4gICAgY29uc3RydWN0b3IoYW5pbWF0aW9uOiBzdHJpbmcsIHN0eWxlOiBBbmltYXRpb25Mb29wU3R5bGUsIHJlcGVhdHM6IG51bWJlcikge1xyXG4gICAgICAgIHRoaXMuY2xpcE5hbWUgPSBhbmltYXRpb247XHJcbiAgICAgICAgdGhpcy5zdHlsZSA9IHN0eWxlO1xyXG4gICAgICAgIHRoaXMucmVwZXRpdGlvbnMgPSByZXBlYXRzO1xyXG4gICAgfVxyXG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///29\n')},function(module,exports,__webpack_require__){"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nvar AnimationLoopStyle;\r\n(function (AnimationLoopStyle) {\r\n    AnimationLoopStyle[AnimationLoopStyle["ONCE"] = 0] = "ONCE";\r\n    AnimationLoopStyle[AnimationLoopStyle["LOOP_REPEAT"] = 1] = "LOOP_REPEAT";\r\n    AnimationLoopStyle[AnimationLoopStyle["PINGPONG"] = 2] = "PINGPONG";\r\n})(AnimationLoopStyle = exports.AnimationLoopStyle || (exports.AnimationLoopStyle = {}));\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9mZWF0dXJlL2FuaW1hdGlvbi9BbmltYXRpb25Mb29wU3R5bGUudHM/Y2MyMSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLElBQVksa0JBSVg7QUFKRCxXQUFZLGtCQUFrQjtJQUMxQiwyREFBSTtJQUNKLHlFQUFXO0lBQ1gsbUVBQVE7QUFDWixDQUFDLEVBSlcsa0JBQWtCLEdBQWxCLDBCQUFrQixLQUFsQiwwQkFBa0IsUUFJN0IiLCJmaWxlIjoiMzAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZW51bSBBbmltYXRpb25Mb29wU3R5bGUge1xyXG4gICAgT05DRSxcclxuICAgIExPT1BfUkVQRUFULFxyXG4gICAgUElOR1BPTkdcclxufSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///30\n')},function(module,exports,__webpack_require__){"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nclass AbstractFeature {\r\n    constructor(name, controller, entity) {\r\n        this.name = name;\r\n        this.entity = entity;\r\n        this.controller = controller;\r\n    }\r\n    addEventListener(type, listener) {\r\n        this.entity.addEventListener(type, ((e) => {\r\n            listener(e.detail);\r\n        }));\r\n    }\r\n    dispatchEvent(eventType, detail) {\r\n        this.entity.dispatchEvent(new CustomEvent(eventType, { detail: detail }));\r\n    }\r\n}\r\nexports.AbstractFeature = AbstractFeature;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9mZWF0dXJlL0Fic3RyYWN0RmVhdHVyZS50cz80ZjE4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBR0EsTUFBc0IsZUFBZTtJQUtqQyxZQUFZLElBQVksRUFBRSxVQUErQixFQUFFLE1BQWM7UUFDckUsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUM7UUFDakIsSUFBSSxDQUFDLE1BQU0sR0FBRyxNQUFNLENBQUM7UUFDckIsSUFBSSxDQUFDLFVBQVUsR0FBRyxVQUFVLENBQUM7SUFDakMsQ0FBQztJQWNELGdCQUFnQixDQUFDLElBQVksRUFBRSxRQUFpQztRQUM1RCxJQUFJLENBQUMsTUFBTSxDQUFDLGdCQUFnQixDQUFDLElBQUksRUFBRSxDQUFDLENBQUMsQ0FBYyxFQUFFLEVBQUU7WUFDbkQsUUFBUSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUN2QixDQUFDLENBQVEsQ0FBQyxDQUFDO0lBQ2YsQ0FBQztJQUVELGFBQWEsQ0FBQyxTQUFpQixFQUFFLE1BQVc7UUFDeEMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxhQUFhLENBQUMsSUFBSSxXQUFXLENBQUMsU0FBUyxFQUFFLEVBQUUsTUFBTSxFQUFFLE1BQU0sRUFBRSxDQUFFLENBQUMsQ0FBQztJQUMvRSxDQUFDO0NBQ0o7QUFoQ0QsMENBZ0NDIiwiZmlsZSI6IjMxLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtFbnRpdHl9IGZyb20gXCJhZnJhbWVcIjtcclxuaW1wb3J0IHtDb21wb25lbnRDb250cm9sbGVyfSBmcm9tIFwiLi4vY29tcG9uZW50L0NvbXBvbmVudENvbnRyb2xsZXJcIjtcclxuXHJcbmV4cG9ydCBhYnN0cmFjdCBjbGFzcyBBYnN0cmFjdEZlYXR1cmUge1xyXG4gICAgbmFtZTogc3RyaW5nO1xyXG4gICAgZW50aXR5OiBFbnRpdHk7XHJcbiAgICBjb250cm9sbGVyOiBDb21wb25lbnRDb250cm9sbGVyO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKG5hbWU6IHN0cmluZywgY29udHJvbGxlcjogQ29tcG9uZW50Q29udHJvbGxlciwgZW50aXR5OiBFbnRpdHkpIHtcclxuICAgICAgICB0aGlzLm5hbWUgPSBuYW1lO1xyXG4gICAgICAgIHRoaXMuZW50aXR5ID0gZW50aXR5O1xyXG4gICAgICAgIHRoaXMuY29udHJvbGxlciA9IGNvbnRyb2xsZXI7XHJcbiAgICB9XHJcblxyXG4gICAgYWJzdHJhY3QgaW5pdCgpOiB2b2lkO1xyXG5cclxuICAgIGFic3RyYWN0IHVwZGF0ZShkYXRhOiBhbnksIG9sZERhdGE6IGFueSk6IHZvaWQ7XHJcblxyXG4gICAgYWJzdHJhY3QgcmVtb3ZlKCk6IHZvaWQ7XHJcblxyXG4gICAgYWJzdHJhY3QgcGF1c2UoKTogdm9pZDtcclxuXHJcbiAgICBhYnN0cmFjdCBwbGF5KCk6IHZvaWQ7XHJcblxyXG4gICAgYWJzdHJhY3QgdGljayh0aW1lOiBudW1iZXIsIHRpbWVEZWx0YTogbnVtYmVyKTogdm9pZDtcclxuXHJcbiAgICBhZGRFdmVudExpc3RlbmVyKHR5cGU6IHN0cmluZywgbGlzdGVuZXI6ICgoZGV0YWlsOiBhbnkpID0+IHZvaWQpKSB7XHJcbiAgICAgICAgdGhpcy5lbnRpdHkuYWRkRXZlbnRMaXN0ZW5lcih0eXBlLCAoKGU6IEN1c3RvbUV2ZW50KSA9PiB7XHJcbiAgICAgICAgICAgIGxpc3RlbmVyKGUuZGV0YWlsKTtcclxuICAgICAgICB9KSBhcyBhbnkpO1xyXG4gICAgfVxyXG5cclxuICAgIGRpc3BhdGNoRXZlbnQoZXZlbnRUeXBlOiBzdHJpbmcsIGRldGFpbDogYW55KSB7XHJcbiAgICAgICAgdGhpcy5lbnRpdHkuZGlzcGF0Y2hFdmVudChuZXcgQ3VzdG9tRXZlbnQoZXZlbnRUeXBlLCB7IGRldGFpbDogZGV0YWlsIH0gKSk7XHJcbiAgICB9XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///31\n')},function(module,exports,__webpack_require__){"use strict";eval('\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nconst Encode_1 = __webpack_require__(11);\r\nconst StorageClient_1 = __webpack_require__(56);\r\nconst Decode_1 = __webpack_require__(43);\r\nconst parser_1 = __webpack_require__(81);\r\nconst xml_js_1 = __webpack_require__(20);\r\nconst uuid = __webpack_require__(12);\r\nclass RealityClient {\r\n    constructor(spaceName, region, url, apiUrl, assetUrl, idToken) {\r\n        this.ws = undefined;\r\n        this.connected = false;\r\n        this.newWebSocket = (url, protocol) => { return new WebSocket(url, protocol); };\r\n        // Events.\r\n        this.onClose = () => { };\r\n        this.onReceive = (message) => { };\r\n        this.onStoredRootEntityReceived = (sid, entityXml) => { };\r\n        this.onStoredChildEntityReceived = (parentSid, sid, entityXml) => { };\r\n        this.onStoredEntityRemoved = (sid) => { };\r\n        this.spaceName = spaceName;\r\n        this.region = region;\r\n        this.url = url;\r\n        this.apiUrl = apiUrl;\r\n        this.assetUrl = assetUrl;\r\n        this.idToken = idToken;\r\n        this.storageClient = new StorageClient_1.StorageClient(spaceName, region, apiUrl, assetUrl, idToken);\r\n    }\r\n    isConnected() {\r\n        return this.connected;\r\n    }\r\n    connect() {\r\n        if (this.connected) {\r\n            throw new Error("reality client - error already connected.");\r\n        }\r\n        this.connected = false;\r\n        return new Promise((resolve, reject) => {\r\n            try {\r\n                this.ws = this.newWebSocket(this.url, \'ds-v1.0\');\r\n                this.ws.onerror = (error) => {\r\n                    this.connected = false;\r\n                    console.warn("reality client - error in client ws connection", error);\r\n                    reject(error);\r\n                };\r\n                this.ws.onclose = () => {\r\n                    this.connected = false;\r\n                    this.onClose();\r\n                };\r\n                this.ws.onopen = () => __awaiter(this, void 0, void 0, function* () {\r\n                    yield this.send(Encode_1.Encode.login(uuid.v4().toString(), this.idToken, this.spaceName, this.region));\r\n                });\r\n                this.ws.onmessage = (message) => __awaiter(this, void 0, void 0, function* () {\r\n                    if (message.data.startsWith(Encode_1.Encode.LOGIN_RESPONSE + "|")) {\r\n                        const parts = message.data.split(Encode_1.Encode.SEPARATOR);\r\n                        const m = Decode_1.Decode.loginResponse(parts);\r\n                        const loginRequestId = m[0];\r\n                        const error = m[1];\r\n                        if (error) {\r\n                            console.warn("reality client - region login failed to " + this.spaceName + "/" + this.region + " login request ID: " + loginRequestId + " error: " + error);\r\n                            reject(new Error(error));\r\n                            return;\r\n                        }\r\n                        else {\r\n                            console.log("reality client - region login success to " + this.spaceName + "/" + this.region + " login request ID: " + loginRequestId);\r\n                            this.connected = true;\r\n                            resolve();\r\n                            yield this.loadStoredEntities();\r\n                            return;\r\n                        }\r\n                    }\r\n                    // Process storage notifications internally.\r\n                    if (message.data.startsWith(Encode_1.Encode.NOTIFIED + "|" + Encode_1.Encode.NOTIFICATION_STORED_ROOT_ENTITIES_CHANGED + "|") ||\r\n                        message.data.startsWith(Encode_1.Encode.NOTIFIED + "|" + Encode_1.Encode.NOTIFICATION_STORED_CHILD_ENTITIES_CHANGED + "|") ||\r\n                        message.data.startsWith(Encode_1.Encode.NOTIFIED + "|" + Encode_1.Encode.NOTIFICATION_STORED_ENTITIES_REMOVED + "|")) {\r\n                        if (yield this.handleActions(message.data)) {\r\n                            return;\r\n                        }\r\n                    }\r\n                    this.onReceive(message.data);\r\n                });\r\n            }\r\n            catch (error) {\r\n                console.warn("reality client - error in client ws connect", error);\r\n                reject(error);\r\n            }\r\n        });\r\n    }\r\n    close() {\r\n        if (typeof this.ws !== "undefined") {\r\n            this.ws.close();\r\n        }\r\n    }\r\n    send(message) {\r\n        this.ws.send(message);\r\n    }\r\n    add(id, x, y, z, rx, ry, rz, rw, description, type) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            yield this.send(Encode_1.Encode.add(id, x, y, z, rx, ry, rz, rw, description, type));\r\n        });\r\n    }\r\n    update(id, x, y, z, rx, ry, rz, rw) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            yield this.send(Encode_1.Encode.update(id, x, y, z, rx, ry, rz, rw));\r\n        });\r\n    }\r\n    remove(id) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            yield this.send(Encode_1.Encode.remove(id));\r\n        });\r\n    }\r\n    describe(id, description) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            yield this.send(Encode_1.Encode.describe(id, description));\r\n        });\r\n    }\r\n    act(id, action, description) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            yield this.send(Encode_1.Encode.act(id, action, description));\r\n        });\r\n    }\r\n    notify(notification, description) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            yield this.send(Encode_1.Encode.notify(notification, description));\r\n        });\r\n    }\r\n    storeEntities(entitiesXml) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const savedEntitiesXml = yield this.storageClient.saveRootEntities(entitiesXml);\r\n            const sids = parser_1.parseRootSids(savedEntitiesXml);\r\n            yield this.notify(Encode_1.Encode.NOTIFICATION_STORED_ROOT_ENTITIES_CHANGED, sids.toString());\r\n        });\r\n    }\r\n    storeChildEntities(parentSid, entitiesXml) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const savedEntitiesXml = yield this.storageClient.saveChildEntities(parentSid, entitiesXml);\r\n            const sids = parser_1.parseRootSids(savedEntitiesXml);\r\n            yield this.notify(Encode_1.Encode.NOTIFICATION_STORED_CHILD_ENTITIES_CHANGED, [parentSid].concat(sids).toString());\r\n        });\r\n    }\r\n    removeStoredEntities(sids) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            for (let sid of sids) {\r\n                yield this.storageClient.removeEntity(sid);\r\n            }\r\n            yield this.notify(Encode_1.Encode.NOTIFICATION_STORED_ENTITIES_REMOVED, sids.toString());\r\n        });\r\n    }\r\n    handleActions(message) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const parts = message.split(Encode_1.Encode.SEPARATOR);\r\n            const m = Decode_1.Decode.notified(parts);\r\n            const notification = m[0];\r\n            const description = m[1];\r\n            const sids = description.split(\',\');\r\n            if (notification == Encode_1.Encode.NOTIFICATION_STORED_ROOT_ENTITIES_CHANGED) {\r\n                yield this.handleStoredRootEntityChanged(sids);\r\n                return true;\r\n            }\r\n            if (notification == Encode_1.Encode.NOTIFICATION_STORED_CHILD_ENTITIES_CHANGED) {\r\n                yield this.handleStoredChildEntityChanged(sids[0], sids.splice(1));\r\n                return true;\r\n            }\r\n            if (notification == Encode_1.Encode.NOTIFICATION_STORED_ENTITIES_REMOVED) {\r\n                yield this.handleStoredEntityRemoved(sids);\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n    }\r\n    loadStoredEntities() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const entitiesXml = yield this.storageClient.getRootEntitiesFromCdn();\r\n            if (entitiesXml) {\r\n                const entities = parser_1.parseFragment(entitiesXml);\r\n                for (let element of entities.elements) {\r\n                    const sid = element.attributes.sid;\r\n                    this.onStoredRootEntityReceived(sid, xml_js_1.js2xml({ elements: [element] }));\r\n                }\r\n            }\r\n        });\r\n    }\r\n    handleStoredRootEntityChanged(sids) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            for (let sid of sids) {\r\n                const entityXml = yield this.storageClient.getEntity(sid);\r\n                if (entityXml) {\r\n                    const elements = xml_js_1.xml2js(entityXml).elements;\r\n                    const sid = elements[0].attributes.sid;\r\n                    this.onStoredRootEntityReceived(sid, entityXml);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    handleStoredChildEntityChanged(parentSid, sids) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            for (let sid of sids) {\r\n                const entityXml = yield this.storageClient.getEntity(sid);\r\n                if (entityXml) {\r\n                    const elements = xml_js_1.xml2js(entityXml).elements;\r\n                    const sid = elements[0].attributes.sid;\r\n                    this.onStoredChildEntityReceived(parentSid, sid, entityXml);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    handleStoredEntityRemoved(sids) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            for (let sid of sids) {\r\n                if (!(yield this.storageClient.getEntity(sid))) {\r\n                    this.onStoredEntityRemoved(sid);\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\nexports.RealityClient = RealityClient;\r\n//# sourceMappingURL=RealityClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///32\n')},function(module,exports){eval("// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n// implementation. Also, find the complete implementation of crypto on IE11.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdXVpZC9saWIvcm5nLWJyb3dzZXIuanM/ZTFmNCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsaUNBQWlDOztBQUVqQztBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0Esc0JBQXNCLFFBQVE7QUFDOUI7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSIsImZpbGUiOiIzMy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIFVuaXF1ZSBJRCBjcmVhdGlvbiByZXF1aXJlcyBhIGhpZ2ggcXVhbGl0eSByYW5kb20gIyBnZW5lcmF0b3IuICBJbiB0aGVcbi8vIGJyb3dzZXIgdGhpcyBpcyBhIGxpdHRsZSBjb21wbGljYXRlZCBkdWUgdG8gdW5rbm93biBxdWFsaXR5IG9mIE1hdGgucmFuZG9tKClcbi8vIGFuZCBpbmNvbnNpc3RlbnQgc3VwcG9ydCBmb3IgdGhlIGBjcnlwdG9gIEFQSS4gIFdlIGRvIHRoZSBiZXN0IHdlIGNhbiB2aWFcbi8vIGZlYXR1cmUtZGV0ZWN0aW9uXG5cbi8vIGdldFJhbmRvbVZhbHVlcyBuZWVkcyB0byBiZSBpbnZva2VkIGluIGEgY29udGV4dCB3aGVyZSBcInRoaXNcIiBpcyBhIENyeXB0b1xuLy8gaW1wbGVtZW50YXRpb24uIEFsc28sIGZpbmQgdGhlIGNvbXBsZXRlIGltcGxlbWVudGF0aW9uIG9mIGNyeXB0byBvbiBJRTExLlxudmFyIGdldFJhbmRvbVZhbHVlcyA9ICh0eXBlb2YoY3J5cHRvKSAhPSAndW5kZWZpbmVkJyAmJiBjcnlwdG8uZ2V0UmFuZG9tVmFsdWVzICYmIGNyeXB0by5nZXRSYW5kb21WYWx1ZXMuYmluZChjcnlwdG8pKSB8fFxuICAgICAgICAgICAgICAgICAgICAgICh0eXBlb2YobXNDcnlwdG8pICE9ICd1bmRlZmluZWQnICYmIHR5cGVvZiB3aW5kb3cubXNDcnlwdG8uZ2V0UmFuZG9tVmFsdWVzID09ICdmdW5jdGlvbicgJiYgbXNDcnlwdG8uZ2V0UmFuZG9tVmFsdWVzLmJpbmQobXNDcnlwdG8pKTtcblxuaWYgKGdldFJhbmRvbVZhbHVlcykge1xuICAvLyBXSEFUV0cgY3J5cHRvIFJORyAtIGh0dHA6Ly93aWtpLndoYXR3Zy5vcmcvd2lraS9DcnlwdG9cbiAgdmFyIHJuZHM4ID0gbmV3IFVpbnQ4QXJyYXkoMTYpOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXVuZGVmXG5cbiAgbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiB3aGF0d2dSTkcoKSB7XG4gICAgZ2V0UmFuZG9tVmFsdWVzKHJuZHM4KTtcbiAgICByZXR1cm4gcm5kczg7XG4gIH07XG59IGVsc2Uge1xuICAvLyBNYXRoLnJhbmRvbSgpLWJhc2VkIChSTkcpXG4gIC8vXG4gIC8vIElmIGFsbCBlbHNlIGZhaWxzLCB1c2UgTWF0aC5yYW5kb20oKS4gIEl0J3MgZmFzdCwgYnV0IGlzIG9mIHVuc3BlY2lmaWVkXG4gIC8vIHF1YWxpdHkuXG4gIHZhciBybmRzID0gbmV3IEFycmF5KDE2KTtcblxuICBtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIG1hdGhSTkcoKSB7XG4gICAgZm9yICh2YXIgaSA9IDAsIHI7IGkgPCAxNjsgaSsrKSB7XG4gICAgICBpZiAoKGkgJiAweDAzKSA9PT0gMCkgciA9IE1hdGgucmFuZG9tKCkgKiAweDEwMDAwMDAwMDtcbiAgICAgIHJuZHNbaV0gPSByID4+PiAoKGkgJiAweDAzKSA8PCAzKSAmIDB4ZmY7XG4gICAgfVxuXG4gICAgcmV0dXJuIHJuZHM7XG4gIH07XG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///33\n")},function(module,exports){eval("/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([bth[buf[i++]], bth[buf[i++]], \n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]]]).join('');\n}\n\nmodule.exports = bytesToUuid;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdXVpZC9saWIvYnl0ZXNUb1V1aWQuanM/MjM2NiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxTQUFTO0FBQ3hCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJmaWxlIjoiMzQuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvbnZlcnQgYXJyYXkgb2YgMTYgYnl0ZSB2YWx1ZXMgdG8gVVVJRCBzdHJpbmcgZm9ybWF0IG9mIHRoZSBmb3JtOlxuICogWFhYWFhYWFgtWFhYWC1YWFhYLVhYWFgtWFhYWFhYWFhYWFhYXG4gKi9cbnZhciBieXRlVG9IZXggPSBbXTtcbmZvciAodmFyIGkgPSAwOyBpIDwgMjU2OyArK2kpIHtcbiAgYnl0ZVRvSGV4W2ldID0gKGkgKyAweDEwMCkudG9TdHJpbmcoMTYpLnN1YnN0cigxKTtcbn1cblxuZnVuY3Rpb24gYnl0ZXNUb1V1aWQoYnVmLCBvZmZzZXQpIHtcbiAgdmFyIGkgPSBvZmZzZXQgfHwgMDtcbiAgdmFyIGJ0aCA9IGJ5dGVUb0hleDtcbiAgLy8gam9pbiB1c2VkIHRvIGZpeCBtZW1vcnkgaXNzdWUgY2F1c2VkIGJ5IGNvbmNhdGVuYXRpb246IGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTMxNzUjYzRcbiAgcmV0dXJuIChbYnRoW2J1ZltpKytdXSwgYnRoW2J1ZltpKytdXSwgXG5cdGJ0aFtidWZbaSsrXV0sIGJ0aFtidWZbaSsrXV0sICctJyxcblx0YnRoW2J1ZltpKytdXSwgYnRoW2J1ZltpKytdXSwgJy0nLFxuXHRidGhbYnVmW2krK11dLCBidGhbYnVmW2krK11dLCAnLScsXG5cdGJ0aFtidWZbaSsrXV0sIGJ0aFtidWZbaSsrXV0sICctJyxcblx0YnRoW2J1ZltpKytdXSwgYnRoW2J1ZltpKytdXSxcblx0YnRoW2J1ZltpKytdXSwgYnRoW2J1ZltpKytdXSxcblx0YnRoW2J1ZltpKytdXSwgYnRoW2J1ZltpKytdXV0pLmpvaW4oJycpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGJ5dGVzVG9VdWlkO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///34\n")},function(module,exports,__webpack_require__){eval("var sax = __webpack_require__(63);\r\nvar expat /*= require('node-expat');*/ = { on: function () { }, parse: function () { } };\r\nvar helper = __webpack_require__(25);\r\nvar isArray = __webpack_require__(26).isArray;\r\n\r\nvar options;\r\nvar pureJsParser = true;\r\nvar currentElement;\r\n\r\nfunction validateOptions(userOptions) {\r\n  options = helper.copyOptions(userOptions);\r\n  helper.ensureFlagExists('ignoreDeclaration', options);\r\n  helper.ensureFlagExists('ignoreInstruction', options);\r\n  helper.ensureFlagExists('ignoreAttributes', options);\r\n  helper.ensureFlagExists('ignoreText', options);\r\n  helper.ensureFlagExists('ignoreComment', options);\r\n  helper.ensureFlagExists('ignoreCdata', options);\r\n  helper.ensureFlagExists('ignoreDoctype', options);\r\n  helper.ensureFlagExists('compact', options);\r\n  helper.ensureFlagExists('alwaysChildren', options);\r\n  helper.ensureFlagExists('addParent', options);\r\n  helper.ensureFlagExists('trim', options);\r\n  helper.ensureFlagExists('nativeType', options);\r\n  helper.ensureFlagExists('nativeTypeAttributes', options);\r\n  helper.ensureFlagExists('sanitize', options);\r\n  helper.ensureFlagExists('instructionHasAttributes', options);\r\n  helper.ensureFlagExists('captureSpacesBetweenElements', options);\r\n  helper.ensureAlwaysArrayExists(options);\r\n  helper.ensureKeyExists('declaration', options);\r\n  helper.ensureKeyExists('instruction', options);\r\n  helper.ensureKeyExists('attributes', options);\r\n  helper.ensureKeyExists('text', options);\r\n  helper.ensureKeyExists('comment', options);\r\n  helper.ensureKeyExists('cdata', options);\r\n  helper.ensureKeyExists('doctype', options);\r\n  helper.ensureKeyExists('type', options);\r\n  helper.ensureKeyExists('name', options);\r\n  helper.ensureKeyExists('elements', options);\r\n  helper.ensureKeyExists('parent', options);\r\n  helper.checkFnExists('doctype', options);\r\n  helper.checkFnExists('instruction', options);\r\n  helper.checkFnExists('cdata', options);\r\n  helper.checkFnExists('comment', options);\r\n  helper.checkFnExists('text', options);\r\n  helper.checkFnExists('instructionName', options);\r\n  helper.checkFnExists('elementName', options);\r\n  helper.checkFnExists('attributeName', options);\r\n  helper.checkFnExists('attributeValue', options);\r\n  helper.checkFnExists('attributes', options);\r\n  return options;\r\n}\r\n\r\nfunction nativeType(value) {\r\n  var nValue = Number(value);\r\n  if (!isNaN(nValue)) {\r\n    return nValue;\r\n  }\r\n  var bValue = value.toLowerCase();\r\n  if (bValue === 'true') {\r\n    return true;\r\n  } else if (bValue === 'false') {\r\n    return false;\r\n  }\r\n  return value;\r\n}\r\n\r\nfunction addField(type, value) {\r\n  var key;\r\n  if (options.compact) {\r\n    if (\r\n      !currentElement[options[type + 'Key']] &&\r\n      (isArray(options.alwaysArray) ? options.alwaysArray.indexOf(options[type + 'Key']) !== -1 : options.alwaysArray)\r\n    ) {\r\n      currentElement[options[type + 'Key']] = [];\r\n    }\r\n    if (currentElement[options[type + 'Key']] && !isArray(currentElement[options[type + 'Key']])) {\r\n      currentElement[options[type + 'Key']] = [currentElement[options[type + 'Key']]];\r\n    }\r\n    if (type + 'Fn' in options && typeof value === 'string') {\r\n      value = options[type + 'Fn'](value, currentElement);\r\n    }\r\n    if (type === 'instruction' && ('instructionFn' in options || 'instructionNameFn' in options)) {\r\n      for (key in value) {\r\n        if (value.hasOwnProperty(key)) {\r\n          if ('instructionFn' in options) {\r\n            value[key] = options.instructionFn(value[key], key, currentElement);\r\n          } else {\r\n            var temp = value[key];\r\n            delete value[key];\r\n            value[options.instructionNameFn(key, temp, currentElement)] = temp;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (isArray(currentElement[options[type + 'Key']])) {\r\n      currentElement[options[type + 'Key']].push(value);\r\n    } else {\r\n      currentElement[options[type + 'Key']] = value;\r\n    }\r\n  } else {\r\n    if (!currentElement[options.elementsKey]) {\r\n      currentElement[options.elementsKey] = [];\r\n    }\r\n    var element = {};\r\n    element[options.typeKey] = type;\r\n    if (type === 'instruction') {\r\n      for (key in value) {\r\n        if (value.hasOwnProperty(key)) {\r\n          break;\r\n        }\r\n      }\r\n      element[options.nameKey] = 'instructionNameFn' in options ? options.instructionNameFn(key, value, currentElement) : key;\r\n      if (options.instructionHasAttributes) {\r\n        element[options.attributesKey] = value[key][options.attributesKey];\r\n        if ('instructionFn' in options) {\r\n          element[options.attributesKey] = options.instructionFn(element[options.attributesKey], key, currentElement);\r\n        }\r\n      } else {\r\n        if ('instructionFn' in options) {\r\n          value[key] = options.instructionFn(value[key], key, currentElement);\r\n        }\r\n        element[options.instructionKey] = value[key];\r\n      }\r\n    } else {\r\n      if (type + 'Fn' in options) {\r\n        value = options[type + 'Fn'](value, currentElement);\r\n      }\r\n      element[options[type + 'Key']] = value;\r\n    }\r\n    if (options.addParent) {\r\n      element[options.parentKey] = currentElement;\r\n    }\r\n    currentElement[options.elementsKey].push(element);\r\n  }\r\n}\r\n\r\nfunction manipulateAttributes(attributes) {\r\n  if ('attributesFn' in options && attributes) {\r\n    attributes = options.attributesFn(attributes, currentElement);\r\n  }\r\n  if ((options.trim || 'attributeValueFn' in options || 'attributeNameFn' in options || options.nativeTypeAttributes) && attributes) {\r\n    var key;\r\n    for (key in attributes) {\r\n      if (attributes.hasOwnProperty(key)) {\r\n        if (options.trim) attributes[key] = attributes[key].trim();\r\n        if (options.nativeTypeAttributes) {\r\n          attributes[key] = nativeType(attributes[key]);\r\n        }\r\n        if ('attributeValueFn' in options) attributes[key] = options.attributeValueFn(attributes[key], key, currentElement);\r\n        if ('attributeNameFn' in options) {\r\n          var temp = attributes[key];\r\n          delete attributes[key];\r\n          attributes[options.attributeNameFn(key, attributes[key], currentElement)] = temp;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return attributes;\r\n}\r\n\r\nfunction onInstruction(instruction) {\r\n  var attributes = {};\r\n  if (instruction.body && (instruction.name.toLowerCase() === 'xml' || options.instructionHasAttributes)) {\r\n    var attrsRegExp = /([\\w:-]+)\\s*=\\s*(?:\"([^\"]*)\"|'([^']*)'|(\\w+))\\s*/g;\r\n    var match;\r\n    while ((match = attrsRegExp.exec(instruction.body)) !== null) {\r\n      attributes[match[1]] = match[2] || match[3] || match[4];\r\n    }\r\n    attributes = manipulateAttributes(attributes);\r\n  }\r\n  if (instruction.name.toLowerCase() === 'xml') {\r\n    if (options.ignoreDeclaration) {\r\n      return;\r\n    }\r\n    currentElement[options.declarationKey] = {};\r\n    if (Object.keys(attributes).length) {\r\n      currentElement[options.declarationKey][options.attributesKey] = attributes;\r\n    }\r\n    if (options.addParent) {\r\n      currentElement[options.declarationKey][options.parentKey] = currentElement;\r\n    }\r\n  } else {\r\n    if (options.ignoreInstruction) {\r\n      return;\r\n    }\r\n    if (options.trim) {\r\n      instruction.body = instruction.body.trim();\r\n    }\r\n    var value = {};\r\n    if (options.instructionHasAttributes && Object.keys(attributes).length) {\r\n      value[instruction.name] = {};\r\n      value[instruction.name][options.attributesKey] = attributes;\r\n    } else {\r\n      value[instruction.name] = instruction.body;\r\n    }\r\n    addField('instruction', value);\r\n  }\r\n}\r\n\r\nfunction onStartElement(name, attributes) {\r\n  var element;\r\n  if (typeof name === 'object') {\r\n    attributes = name.attributes;\r\n    name = name.name;\r\n  }\r\n  attributes = manipulateAttributes(attributes);\r\n  if ('elementNameFn' in options) {\r\n    name = options.elementNameFn(name, currentElement);\r\n  }\r\n  if (options.compact) {\r\n    element = {};\r\n    if (!options.ignoreAttributes && attributes && Object.keys(attributes).length) {\r\n      element[options.attributesKey] = {};\r\n      var key;\r\n      for (key in attributes) {\r\n        if (attributes.hasOwnProperty(key)) {\r\n          element[options.attributesKey][key] = attributes[key];\r\n        }\r\n      }\r\n    }\r\n    if (\r\n      !(name in currentElement) &&\r\n      (isArray(options.alwaysArray) ? options.alwaysArray.indexOf(name) !== -1 : options.alwaysArray)\r\n    ) {\r\n      currentElement[name] = [];\r\n    }\r\n    if (currentElement[name] && !isArray(currentElement[name])) {\r\n      currentElement[name] = [currentElement[name]];\r\n    }\r\n    if (isArray(currentElement[name])) {\r\n      currentElement[name].push(element);\r\n    } else {\r\n      currentElement[name] = element;\r\n    }\r\n  } else {\r\n    if (!currentElement[options.elementsKey]) {\r\n      currentElement[options.elementsKey] = [];\r\n    }\r\n    element = {};\r\n    element[options.typeKey] = 'element';\r\n    element[options.nameKey] = name;\r\n    if (!options.ignoreAttributes && attributes && Object.keys(attributes).length) {\r\n      element[options.attributesKey] = attributes;\r\n    }\r\n    if (options.alwaysChildren) {\r\n      element[options.elementsKey] = [];\r\n    }\r\n    currentElement[options.elementsKey].push(element);\r\n  }\r\n  element[options.parentKey] = currentElement; // will be deleted in onEndElement() if !options.addParent\r\n  currentElement = element;\r\n}\r\n\r\nfunction onText(text) {\r\n  if (options.ignoreText) {\r\n    return;\r\n  }\r\n  if (!text.trim() && !options.captureSpacesBetweenElements) {\r\n    return;\r\n  }\r\n  if (options.trim) {\r\n    text = text.trim();\r\n  }\r\n  if (options.nativeType) {\r\n    text = nativeType(text);\r\n  }\r\n  if (options.sanitize) {\r\n    text = text.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\r\n  }\r\n  addField('text', text);\r\n}\r\n\r\nfunction onComment(comment) {\r\n  if (options.ignoreComment) {\r\n    return;\r\n  }\r\n  if (options.trim) {\r\n    comment = comment.trim();\r\n  }\r\n  addField('comment', comment);\r\n}\r\n\r\nfunction onEndElement(name) {\r\n  var parentElement = currentElement[options.parentKey];\r\n  if (!options.addParent) {\r\n    delete currentElement[options.parentKey];\r\n  }\r\n  currentElement = parentElement;\r\n}\r\n\r\nfunction onCdata(cdata) {\r\n  if (options.ignoreCdata) {\r\n    return;\r\n  }\r\n  if (options.trim) {\r\n    cdata = cdata.trim();\r\n  }\r\n  addField('cdata', cdata);\r\n}\r\n\r\nfunction onDoctype(doctype) {\r\n  if (options.ignoreDoctype) {\r\n    return;\r\n  }\r\n  doctype = doctype.replace(/^ /, '');\r\n  if (options.trim) {\r\n    doctype = doctype.trim();\r\n  }\r\n  addField('doctype', doctype);\r\n}\r\n\r\nfunction onError(error) {\r\n  error.note = error; //console.error(error);\r\n}\r\n\r\nmodule.exports = function (xml, userOptions) {\r\n\r\n  var parser = pureJsParser ? sax.parser(true, {}) : parser = new expat.Parser('UTF-8');\r\n  var result = {};\r\n  currentElement = result;\r\n\r\n  options = validateOptions(userOptions);\r\n\r\n  if (pureJsParser) {\r\n    parser.opt = {strictEntities: true};\r\n    parser.onopentag = onStartElement;\r\n    parser.ontext = onText;\r\n    parser.oncomment = onComment;\r\n    parser.onclosetag = onEndElement;\r\n    parser.onerror = onError;\r\n    parser.oncdata = onCdata;\r\n    parser.ondoctype = onDoctype;\r\n    parser.onprocessinginstruction = onInstruction;\r\n  } else {\r\n    parser.on('startElement', onStartElement);\r\n    parser.on('text', onText);\r\n    parser.on('comment', onComment);\r\n    parser.on('endElement', onEndElement);\r\n    parser.on('error', onError);\r\n    //parser.on('startCdata', onStartCdata);\r\n    //parser.on('endCdata', onEndCdata);\r\n    //parser.on('entityDecl', onEntityDecl);\r\n  }\r\n\r\n  if (pureJsParser) {\r\n    parser.write(xml).close();\r\n  } else {\r\n    if (!parser.parse(xml)) {\r\n      throw new Error('XML parsing error: ' + parser.getError());\r\n    }\r\n  }\r\n\r\n  if (result[options.elementsKey]) {\r\n    var temp = result[options.elementsKey];\r\n    delete result[options.elementsKey];\r\n    result[options.elementsKey] = temp;\r\n    delete result.text;\r\n  }\r\n\r\n  return result;\r\n\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///35\n")},function(module,exports){eval("var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaXNhcnJheS9pbmRleC5qcz9lM2RiIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGlCQUFpQjs7QUFFakI7QUFDQTtBQUNBIiwiZmlsZSI6IjM2LmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIHRvU3RyaW5nID0ge30udG9TdHJpbmc7XG5cbm1vZHVsZS5leHBvcnRzID0gQXJyYXkuaXNBcnJheSB8fCBmdW5jdGlvbiAoYXJyKSB7XG4gIHJldHVybiB0b1N0cmluZy5jYWxsKGFycikgPT0gJ1tvYmplY3QgQXJyYXldJztcbn07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///36\n")},function(module,exports,__webpack_require__){"use strict";eval("/* WEBPACK VAR INJECTION */(function(global, process) {// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n/*<replacement>*/\n\nvar pna = __webpack_require__(15);\n/*</replacement>*/\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar isArray = __webpack_require__(36);\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = __webpack_require__(21).EventEmitter;\n\nvar EElistenerCount = function (emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = __webpack_require__(38);\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = __webpack_require__(16).Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\n/*<replacement>*/\nvar util = __webpack_require__(10);\nutil.inherits = __webpack_require__(7);\n/*</replacement>*/\n\n/*<replacement>*/\nvar debugUtil = __webpack_require__(67);\nvar debug = void 0;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function () {};\n}\n/*</replacement>*/\n\nvar BufferList = __webpack_require__(68);\nvar destroyImpl = __webpack_require__(39);\nvar StringDecoder;\n\nutil.inherits(Readable, Stream);\n\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\n\nfunction ReadableState(options, stream) {\n  Duplex = Duplex || __webpack_require__(4);\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  var readableHwm = options.readableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (readableHwm || readableHwm === 0)) this.highWaterMark = readableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = __webpack_require__(24).StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  Duplex = Duplex || __webpack_require__(4);\n\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n\n  Stream.call(this);\n}\n\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n  }\n});\n\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function (err, cb) {\n  this.push(null);\n  cb(err);\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\n\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  var state = stream._readableState;\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n    if (er) {\n      stream.emit('error', er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n\n      if (addToFront) {\n        if (state.endEmitted) stream.emit('error', new Error('stream.unshift() after end event'));else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        stream.emit('error', new Error('stream.push() after EOF'));\n      } else {\n        state.reading = false;\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n    }\n  }\n\n  return needMoreData(state);\n}\n\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    stream.emit('data', chunk);\n    stream.read(0);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n\n    if (state.needReadable) emitReadable(stream);\n  }\n  maybeReadMore(stream, state);\n}\n\nfunction chunkInvalid(state, chunk) {\n  var er;\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);\n}\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = __webpack_require__(24).StringDecoder;\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n  return this;\n};\n\n// Don't raise the hwm > 8MB\nvar MAX_HWM = 0x800000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = true;\n    n = 0;\n  } else {\n    state.length -= n;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n\n  return ret;\n};\n\nfunction onEofChunk(stream, state) {\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // emit 'readable' now to make sure it gets picked up.\n  emitReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    if (state.sync) pna.nextTick(emitReadable_, stream);else emitReadable_(stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  debug('emit readable');\n  stream.emit('readable');\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    pna.nextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;else len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  this.emit('error', new Error('_read() is not implemented'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) pna.nextTick(endFn);else src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  // If the user pushes more data while we're writing to dest then we'll end up\n  // in ondata again. However, we only want to increase awaitDrain once because\n  // dest will only emit one 'drain' event for the multiple writes.\n  // => Introduce a guard on increasing awaitDrain.\n  var increasedAwaitDrain = false;\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    increasedAwaitDrain = false;\n    var ret = dest.write(chunk);\n    if (false === ret && !increasedAwaitDrain) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', src._readableState.awaitDrain);\n        src._readableState.awaitDrain++;\n        increasedAwaitDrain = true;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function () {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = { hasUnpiped: false };\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++) {\n      dests[i].emit('unpipe', this, unpipeInfo);\n    }return this;\n  }\n\n  // try to find the right one.\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this, unpipeInfo);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n\n  if (ev === 'data') {\n    // Start flowing on next tick if stream isn't explicitly paused\n    if (this._readableState.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    var state = this._readableState;\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.emittedReadable = false;\n      if (!state.reading) {\n        pna.nextTick(nReadingNextTick, this);\n      } else if (state.length) {\n        emitReadable(this);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    state.flowing = true;\n    resume(this, state);\n  }\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    pna.nextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  if (!state.reading) {\n    debug('resume read 0');\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  state.awaitDrain = 0;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (false !== this._readableState.flowing) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null) {}\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n\n  var state = this._readableState;\n  var paused = false;\n\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n\n    _this.push(null);\n  });\n\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = _this.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function (method) {\n        return function () {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  }\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  this._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return this;\n};\n\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._readableState.highWaterMark;\n  }\n});\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = fromListPartial(n, state.buffer, state.decoder);\n  }\n\n  return ret;\n}\n\n// Extracts only enough buffered data to satisfy the amount requested.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromListPartial(n, list, hasStrings) {\n  var ret;\n  if (n < list.head.data.length) {\n    // slice is the same for buffers and strings\n    ret = list.head.data.slice(0, n);\n    list.head.data = list.head.data.slice(n);\n  } else if (n === list.head.data.length) {\n    // first chunk is a perfect match\n    ret = list.shift();\n  } else {\n    // result spans more than one buffer\n    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);\n  }\n  return ret;\n}\n\n// Copies a specified amount of characters from the list of buffered data\n// chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBufferString(n, list) {\n  var p = list.head;\n  var c = 1;\n  var ret = p.data;\n  n -= ret.length;\n  while (p = p.next) {\n    var str = p.data;\n    var nb = n > str.length ? str.length : n;\n    if (nb === str.length) ret += str;else ret += str.slice(0, n);\n    n -= nb;\n    if (n === 0) {\n      if (nb === str.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = str.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\n// Copies a specified amount of bytes from the list of buffered data chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBuffer(n, list) {\n  var ret = Buffer.allocUnsafe(n);\n  var p = list.head;\n  var c = 1;\n  p.data.copy(ret);\n  n -= p.data.length;\n  while (p = p.next) {\n    var buf = p.data;\n    var nb = n > buf.length ? buf.length : n;\n    buf.copy(ret, ret.length - n, 0, nb);\n    n -= nb;\n    if (n === 0) {\n      if (nb === buf.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = buf.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0) throw new Error('\"endReadable()\" called on non-empty stream');\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    pna.nextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n  }\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(6), __webpack_require__(14)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///37\n")},function(module,exports,__webpack_require__){eval("module.exports = __webpack_require__(21).EventEmitter;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhZGFibGUtc3RyZWFtL2xpYi9pbnRlcm5hbC9zdHJlYW1zL3N0cmVhbS1icm93c2VyLmpzPzQyOWIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsaUJBQWlCLG1CQUFPLENBQUMsRUFBUSIsImZpbGUiOiIzOC5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnZXZlbnRzJykuRXZlbnRFbWl0dGVyO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///38\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\n/*<replacement>*/\n\nvar pna = __webpack_require__(15);\n/*</replacement>*/\n\n// undocumented cb() API, needed for core, not for public API\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err && (!this._writableState || !this._writableState.errorEmitted)) {\n      pna.nextTick(emitErrorNT, this, err);\n    }\n    return this;\n  }\n\n  // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  }\n\n  // if this is a duplex stream mark the writable part as destroyed as well\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      pna.nextTick(emitErrorNT, _this, err);\n      if (_this._writableState) {\n        _this._writableState.errorEmitted = true;\n      }\n    } else if (cb) {\n      cb(err);\n    }\n  });\n\n  return this;\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhZGFibGUtc3RyZWFtL2xpYi9pbnRlcm5hbC9zdHJlYW1zL2Rlc3Ryb3kuanM/NDY4MSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjs7QUFFQSxVQUFVLG1CQUFPLENBQUMsRUFBc0I7QUFDeEM7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjM5LmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG4vKjxyZXBsYWNlbWVudD4qL1xuXG52YXIgcG5hID0gcmVxdWlyZSgncHJvY2Vzcy1uZXh0aWNrLWFyZ3MnKTtcbi8qPC9yZXBsYWNlbWVudD4qL1xuXG4vLyB1bmRvY3VtZW50ZWQgY2IoKSBBUEksIG5lZWRlZCBmb3IgY29yZSwgbm90IGZvciBwdWJsaWMgQVBJXG5mdW5jdGlvbiBkZXN0cm95KGVyciwgY2IpIHtcbiAgdmFyIF90aGlzID0gdGhpcztcblxuICB2YXIgcmVhZGFibGVEZXN0cm95ZWQgPSB0aGlzLl9yZWFkYWJsZVN0YXRlICYmIHRoaXMuX3JlYWRhYmxlU3RhdGUuZGVzdHJveWVkO1xuICB2YXIgd3JpdGFibGVEZXN0cm95ZWQgPSB0aGlzLl93cml0YWJsZVN0YXRlICYmIHRoaXMuX3dyaXRhYmxlU3RhdGUuZGVzdHJveWVkO1xuXG4gIGlmIChyZWFkYWJsZURlc3Ryb3llZCB8fCB3cml0YWJsZURlc3Ryb3llZCkge1xuICAgIGlmIChjYikge1xuICAgICAgY2IoZXJyKTtcbiAgICB9IGVsc2UgaWYgKGVyciAmJiAoIXRoaXMuX3dyaXRhYmxlU3RhdGUgfHwgIXRoaXMuX3dyaXRhYmxlU3RhdGUuZXJyb3JFbWl0dGVkKSkge1xuICAgICAgcG5hLm5leHRUaWNrKGVtaXRFcnJvck5ULCB0aGlzLCBlcnIpO1xuICAgIH1cbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG4gIC8vIHdlIHNldCBkZXN0cm95ZWQgdG8gdHJ1ZSBiZWZvcmUgZmlyaW5nIGVycm9yIGNhbGxiYWNrcyBpbiBvcmRlclxuICAvLyB0byBtYWtlIGl0IHJlLWVudHJhbmNlIHNhZmUgaW4gY2FzZSBkZXN0cm95KCkgaXMgY2FsbGVkIHdpdGhpbiBjYWxsYmFja3NcblxuICBpZiAodGhpcy5fcmVhZGFibGVTdGF0ZSkge1xuICAgIHRoaXMuX3JlYWRhYmxlU3RhdGUuZGVzdHJveWVkID0gdHJ1ZTtcbiAgfVxuXG4gIC8vIGlmIHRoaXMgaXMgYSBkdXBsZXggc3RyZWFtIG1hcmsgdGhlIHdyaXRhYmxlIHBhcnQgYXMgZGVzdHJveWVkIGFzIHdlbGxcbiAgaWYgKHRoaXMuX3dyaXRhYmxlU3RhdGUpIHtcbiAgICB0aGlzLl93cml0YWJsZVN0YXRlLmRlc3Ryb3llZCA9IHRydWU7XG4gIH1cblxuICB0aGlzLl9kZXN0cm95KGVyciB8fCBudWxsLCBmdW5jdGlvbiAoZXJyKSB7XG4gICAgaWYgKCFjYiAmJiBlcnIpIHtcbiAgICAgIHBuYS5uZXh0VGljayhlbWl0RXJyb3JOVCwgX3RoaXMsIGVycik7XG4gICAgICBpZiAoX3RoaXMuX3dyaXRhYmxlU3RhdGUpIHtcbiAgICAgICAgX3RoaXMuX3dyaXRhYmxlU3RhdGUuZXJyb3JFbWl0dGVkID0gdHJ1ZTtcbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKGNiKSB7XG4gICAgICBjYihlcnIpO1xuICAgIH1cbiAgfSk7XG5cbiAgcmV0dXJuIHRoaXM7XG59XG5cbmZ1bmN0aW9uIHVuZGVzdHJveSgpIHtcbiAgaWYgKHRoaXMuX3JlYWRhYmxlU3RhdGUpIHtcbiAgICB0aGlzLl9yZWFkYWJsZVN0YXRlLmRlc3Ryb3llZCA9IGZhbHNlO1xuICAgIHRoaXMuX3JlYWRhYmxlU3RhdGUucmVhZGluZyA9IGZhbHNlO1xuICAgIHRoaXMuX3JlYWRhYmxlU3RhdGUuZW5kZWQgPSBmYWxzZTtcbiAgICB0aGlzLl9yZWFkYWJsZVN0YXRlLmVuZEVtaXR0ZWQgPSBmYWxzZTtcbiAgfVxuXG4gIGlmICh0aGlzLl93cml0YWJsZVN0YXRlKSB7XG4gICAgdGhpcy5fd3JpdGFibGVTdGF0ZS5kZXN0cm95ZWQgPSBmYWxzZTtcbiAgICB0aGlzLl93cml0YWJsZVN0YXRlLmVuZGVkID0gZmFsc2U7XG4gICAgdGhpcy5fd3JpdGFibGVTdGF0ZS5lbmRpbmcgPSBmYWxzZTtcbiAgICB0aGlzLl93cml0YWJsZVN0YXRlLmZpbmlzaGVkID0gZmFsc2U7XG4gICAgdGhpcy5fd3JpdGFibGVTdGF0ZS5lcnJvckVtaXR0ZWQgPSBmYWxzZTtcbiAgfVxufVxuXG5mdW5jdGlvbiBlbWl0RXJyb3JOVChzZWxmLCBlcnIpIHtcbiAgc2VsZi5lbWl0KCdlcnJvcicsIGVycik7XG59XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBkZXN0cm95OiBkZXN0cm95LFxuICB1bmRlc3Ryb3k6IHVuZGVzdHJveVxufTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///39\n")},function(module,exports,__webpack_require__){"use strict";eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n\n\nmodule.exports = Transform;\n\nvar Duplex = __webpack_require__(4);\n\n/*<replacement>*/\nvar util = __webpack_require__(10);\nutil.inherits = __webpack_require__(7);\n/*</replacement>*/\n\nutil.inherits(Transform, Duplex);\n\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n\n  var cb = ts.writecb;\n\n  if (!cb) {\n    return this.emit('error', new Error('write callback called multiple times'));\n  }\n\n  ts.writechunk = null;\n  ts.writecb = null;\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    this.push(data);\n\n  cb(er);\n\n  var rs = this._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\n\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n\n  Duplex.call(this, options);\n\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  };\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  // When the writable side finishes, then flush out anything remaining.\n  this.on('prefinish', prefinish);\n}\n\nfunction prefinish() {\n  var _this = this;\n\n  if (typeof this._flush === 'function') {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  throw new Error('_transform() is not implemented');\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nTransform.prototype._destroy = function (err, cb) {\n  var _this2 = this;\n\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n    _this2.emit('close');\n  });\n};\n\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    stream.push(data);\n\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  if (stream._writableState.length) throw new Error('Calling transform done when ws.length != 0');\n\n  if (stream._transformState.transforming) throw new Error('Calling transform done when still transforming');\n\n  return stream.push(null);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///40\n")},function(module,exports,__webpack_require__){eval("var helper = __webpack_require__(25);\nvar isArray = __webpack_require__(26).isArray;\n\nvar currentElement, currentElementName;\n\nfunction validateOptions(userOptions) {\n  var options = helper.copyOptions(userOptions);\n  helper.ensureFlagExists('ignoreDeclaration', options);\n  helper.ensureFlagExists('ignoreInstruction', options);\n  helper.ensureFlagExists('ignoreAttributes', options);\n  helper.ensureFlagExists('ignoreText', options);\n  helper.ensureFlagExists('ignoreComment', options);\n  helper.ensureFlagExists('ignoreCdata', options);\n  helper.ensureFlagExists('ignoreDoctype', options);\n  helper.ensureFlagExists('compact', options);\n  helper.ensureFlagExists('indentText', options);\n  helper.ensureFlagExists('indentCdata', options);\n  helper.ensureFlagExists('indentAttributes', options);\n  helper.ensureFlagExists('indentInstruction', options);\n  helper.ensureFlagExists('fullTagEmptyElement', options);\n  helper.ensureFlagExists('noQuotesForNativeAttributes', options);\n  helper.ensureSpacesExists(options);\n  if (typeof options.spaces === 'number') {\n    options.spaces = Array(options.spaces + 1).join(' ');\n  }\n  helper.ensureKeyExists('declaration', options);\n  helper.ensureKeyExists('instruction', options);\n  helper.ensureKeyExists('attributes', options);\n  helper.ensureKeyExists('text', options);\n  helper.ensureKeyExists('comment', options);\n  helper.ensureKeyExists('cdata', options);\n  helper.ensureKeyExists('doctype', options);\n  helper.ensureKeyExists('type', options);\n  helper.ensureKeyExists('name', options);\n  helper.ensureKeyExists('elements', options);\n  helper.checkFnExists('doctype', options);\n  helper.checkFnExists('instruction', options);\n  helper.checkFnExists('cdata', options);\n  helper.checkFnExists('comment', options);\n  helper.checkFnExists('text', options);\n  helper.checkFnExists('instructionName', options);\n  helper.checkFnExists('elementName', options);\n  helper.checkFnExists('attributeName', options);\n  helper.checkFnExists('attributeValue', options);\n  helper.checkFnExists('attributes', options);\n  helper.checkFnExists('fullTagEmptyElement', options);\n  return options;\n}\n\nfunction writeIndentation(options, depth, firstLine) {\n  return (!firstLine && options.spaces ? '\\n' : '') + Array(depth + 1).join(options.spaces);\n}\n\nfunction writeAttributes(attributes, options, depth) {\n  if (options.ignoreAttributes) {\n    return '';\n  }\n  if ('attributesFn' in options) {\n    attributes = options.attributesFn(attributes, currentElementName, currentElement);\n  }\n  var key, attr, attrName, quote, result = [];\n  for (key in attributes) {\n    if (attributes.hasOwnProperty(key) && attributes[key] !== null && attributes[key] !== undefined) {\n      quote = options.noQuotesForNativeAttributes && typeof attributes[key] !== 'string' ? '' : '\"';\n      attr = '' + attributes[key]; // ensure number and boolean are converted to String\n      attr = attr.replace(/\"/g, '&quot;');\n      attrName = 'attributeNameFn' in options ? options.attributeNameFn(key, attr, currentElementName, currentElement) : key;\n      result.push((options.spaces && options.indentAttributes? writeIndentation(options, depth+1, false) : ' '));\n      result.push(attrName + '=' + quote + ('attributeValueFn' in options ? options.attributeValueFn(attr, key, currentElementName, currentElement) : attr) + quote);\n    }\n  }\n  if (attributes && Object.keys(attributes).length && options.spaces && options.indentAttributes) {\n    result.push(writeIndentation(options, depth, false));\n  }\n  return result.join('');\n}\n\nfunction writeDeclaration(declaration, options, depth) {\n  currentElement = declaration;\n  currentElementName = 'xml';\n  return options.ignoreDeclaration ? '' :  '<?' + 'xml' + writeAttributes(declaration[options.attributesKey], options, depth) + '?>';\n}\n\nfunction writeInstruction(instruction, options, depth) {\n  if (options.ignoreInstruction) {\n    return '';\n  }\n  var key;\n  for (key in instruction) {\n    if (instruction.hasOwnProperty(key)) {\n      break;\n    }\n  }\n  var instructionName = 'instructionNameFn' in options ? options.instructionNameFn(key, instruction[key], currentElementName, currentElement) : key;\n  if (typeof instruction[key] === 'object') {\n    currentElement = instruction;\n    currentElementName = instructionName;\n    return '<?' + instructionName + writeAttributes(instruction[key][options.attributesKey], options, depth) + '?>';\n  } else {\n    var instructionValue = instruction[key] ? instruction[key] : '';\n    if ('instructionFn' in options) instructionValue = options.instructionFn(instructionValue, key, currentElementName, currentElement);\n    return '<?' + instructionName + (instructionValue ? ' ' + instructionValue : '') + '?>';\n  }\n}\n\nfunction writeComment(comment, options) {\n  return options.ignoreComment ? '' : '\x3c!--' + ('commentFn' in options ? options.commentFn(comment, currentElementName, currentElement) : comment) + '--\x3e';\n}\n\nfunction writeCdata(cdata, options) {\n  return options.ignoreCdata ? '' : '<![CDATA[' + ('cdataFn' in options ? options.cdataFn(cdata, currentElementName, currentElement) : cdata) + ']]>';\n}\n\nfunction writeDoctype(doctype, options) {\n  return options.ignoreDoctype ? '' : '<!DOCTYPE ' + ('doctypeFn' in options ? options.doctypeFn(doctype, currentElementName, currentElement) : doctype) + '>';\n}\n\nfunction writeText(text, options) {\n  if (options.ignoreText) return '';\n  text = '' + text; // ensure Number and Boolean are converted to String\n  text = text.replace(/&amp;/g, '&'); // desanitize to avoid double sanitization\n  text = text.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n  return 'textFn' in options ? options.textFn(text, currentElementName, currentElement) : text;\n}\n\nfunction hasContent(element, options) {\n  var i;\n  if (element.elements && element.elements.length) {\n    for (i = 0; i < element.elements.length; ++i) {\n      switch (element.elements[i][options.typeKey]) {\n      case 'text':\n        if (options.indentText) {\n          return true;\n        }\n        break; // skip to next key\n      case 'cdata':\n        if (options.indentCdata) {\n          return true;\n        }\n        break; // skip to next key\n      case 'instruction':\n        if (options.indentInstruction) {\n          return true;\n        }\n        break; // skip to next key\n      case 'doctype':\n      case 'comment':\n      case 'element':\n        return true;\n      default:\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nfunction writeElement(element, options, depth) {\n  currentElement = element;\n  currentElementName = element.name;\n  var xml = [], elementName = 'elementNameFn' in options ? options.elementNameFn(element.name, element) : element.name;\n  xml.push('<' + elementName);\n  if (element[options.attributesKey]) {\n    xml.push(writeAttributes(element[options.attributesKey], options, depth));\n  }\n  var withClosingTag = element[options.elementsKey] && element[options.elementsKey].length || element[options.attributesKey] && element[options.attributesKey]['xml:space'] === 'preserve';\n  if (!withClosingTag) {\n    if ('fullTagEmptyElementFn' in options) {\n      withClosingTag = options.fullTagEmptyElementFn(element.name, element);\n    } else {\n      withClosingTag = options.fullTagEmptyElement;\n    }\n  }\n  if (withClosingTag) {\n    xml.push('>');\n    if (element[options.elementsKey] && element[options.elementsKey].length) {\n      xml.push(writeElements(element[options.elementsKey], options, depth + 1));\n      currentElement = element;\n      currentElementName = element.name;\n    }\n    xml.push(options.spaces && hasContent(element, options) ? '\\n' + Array(depth + 1).join(options.spaces) : '');\n    xml.push('</' + elementName + '>');\n  } else {\n    xml.push('/>');\n  }\n  return xml.join('');\n}\n\nfunction writeElements(elements, options, depth, firstLine) {\n  return elements.reduce(function (xml, element) {\n    var indent = writeIndentation(options, depth, firstLine && !xml);\n    switch (element.type) {\n    case 'element': return xml + indent + writeElement(element, options, depth);\n    case 'comment': return xml + indent + writeComment(element[options.commentKey], options);\n    case 'doctype': return xml + indent + writeDoctype(element[options.doctypeKey], options);\n    case 'cdata': return xml + (options.indentCdata ? indent : '') + writeCdata(element[options.cdataKey], options);\n    case 'text': return xml + (options.indentText ? indent : '') + writeText(element[options.textKey], options);\n    case 'instruction':\n      var instruction = {};\n      instruction[element[options.nameKey]] = element[options.attributesKey] ? element : element[options.instructionKey];\n      return xml + (options.indentInstruction ? indent : '') + writeInstruction(instruction, options, depth);\n    }\n  }, '');\n}\n\nfunction hasContentCompact(element, options, anyContent) {\n  var key;\n  for (key in element) {\n    if (element.hasOwnProperty(key)) {\n      switch (key) {\n      case options.parentKey:\n      case options.attributesKey:\n        break; // skip to next key\n      case options.textKey:\n        if (options.indentText || anyContent) {\n          return true;\n        }\n        break; // skip to next key\n      case options.cdataKey:\n        if (options.indentCdata || anyContent) {\n          return true;\n        }\n        break; // skip to next key\n      case options.instructionKey:\n        if (options.indentInstruction || anyContent) {\n          return true;\n        }\n        break; // skip to next key\n      case options.doctypeKey:\n      case options.commentKey:\n        return true;\n      default:\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nfunction writeElementCompact(element, name, options, depth, indent) {\n  currentElement = element;\n  currentElementName = name;\n  var elementName = 'elementNameFn' in options ? options.elementNameFn(name, element) : name;\n  if (typeof element === 'undefined' || element === null || element === '') {\n    return 'fullTagEmptyElementFn' in options && options.fullTagEmptyElementFn(name, element) || options.fullTagEmptyElement ? '<' + elementName + '></' + elementName + '>' : '<' + elementName + '/>';\n  }\n  var xml = [];\n  if (name) {\n    xml.push('<' + elementName);\n    if (typeof element !== 'object') {\n      xml.push('>' + writeText(element,options) + '</' + elementName + '>');\n      return xml.join('');\n    }\n    if (element[options.attributesKey]) {\n      xml.push(writeAttributes(element[options.attributesKey], options, depth));\n    }\n    var withClosingTag = hasContentCompact(element, options, true) || element[options.attributesKey] && element[options.attributesKey]['xml:space'] === 'preserve';\n    if (!withClosingTag) {\n      if ('fullTagEmptyElementFn' in options) {\n        withClosingTag = options.fullTagEmptyElementFn(name, element);\n      } else {\n        withClosingTag = options.fullTagEmptyElement;\n      }\n    }\n    if (withClosingTag) {\n      xml.push('>');\n    } else {\n      xml.push('/>');\n      return xml.join('');\n    }\n  }\n  xml.push(writeElementsCompact(element, options, depth + 1, false));\n  currentElement = element;\n  currentElementName = name;\n  if (name) {\n    xml.push((indent ? writeIndentation(options, depth, false) : '') + '</' + elementName + '>');\n  }\n  return xml.join('');\n}\n\nfunction writeElementsCompact(element, options, depth, firstLine) {\n  var i, key, nodes, xml = [];\n  for (key in element) {\n    if (element.hasOwnProperty(key)) {\n      nodes = isArray(element[key]) ? element[key] : [element[key]];\n      for (i = 0; i < nodes.length; ++i) {\n        switch (key) {\n        case options.declarationKey: xml.push(writeDeclaration(nodes[i], options, depth)); break;\n        case options.instructionKey: xml.push((options.indentInstruction ? writeIndentation(options, depth, firstLine) : '') + writeInstruction(nodes[i], options, depth)); break;\n        case options.attributesKey: case options.parentKey: break; // skip\n        case options.textKey: xml.push((options.indentText ? writeIndentation(options, depth, firstLine) : '') + writeText(nodes[i], options)); break;\n        case options.cdataKey: xml.push((options.indentCdata ? writeIndentation(options, depth, firstLine) : '') + writeCdata(nodes[i], options)); break;\n        case options.doctypeKey: xml.push(writeIndentation(options, depth, firstLine) + writeDoctype(nodes[i], options)); break;\n        case options.commentKey: xml.push(writeIndentation(options, depth, firstLine) + writeComment(nodes[i], options)); break;\n        default: xml.push(writeIndentation(options, depth, firstLine) + writeElementCompact(nodes[i], key, options, depth, hasContentCompact(nodes[i], options)));\n        }\n        firstLine = firstLine && !xml.length;\n      }\n    }\n  }\n  return xml.join('');\n}\n\nmodule.exports = function (js, options) {\n  options = validateOptions(options);\n  var xml = [];\n  currentElement = js;\n  currentElementName = '_root_';\n  if (options.compact) {\n    xml.push(writeElementsCompact(js, options, 0, true));\n  } else {\n    if (js[options.declarationKey]) {\n      xml.push(writeDeclaration(js[options.declarationKey], options, 0));\n    }\n    if (js[options.elementsKey] && js[options.elementsKey].length) {\n      xml.push(writeElements(js[options.elementsKey], options, 0, !xml.length));\n    }\n  }\n  return xml.join('');\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///41\n")},function(module,exports,__webpack_require__){"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nclass Fragment {\r\n    constructor(container, rootElement, entities) {\r\n        this.container = container;\r\n        this.rootElement = rootElement;\r\n        this.elements = entities;\r\n    }\r\n}\r\nexports.Fragment = Fragment;\r\n//# sourceMappingURL=Fragment.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhbGl0eS1zcGFjZS9saWIvc3JjL25vZGUvc3RvcmFnZS9tb2RlbC9GcmFnbWVudC5qcz8wNjgxIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQThDLGNBQWM7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjQyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XHJcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcclxuY2xhc3MgRnJhZ21lbnQge1xyXG4gICAgY29uc3RydWN0b3IoY29udGFpbmVyLCByb290RWxlbWVudCwgZW50aXRpZXMpIHtcclxuICAgICAgICB0aGlzLmNvbnRhaW5lciA9IGNvbnRhaW5lcjtcclxuICAgICAgICB0aGlzLnJvb3RFbGVtZW50ID0gcm9vdEVsZW1lbnQ7XHJcbiAgICAgICAgdGhpcy5lbGVtZW50cyA9IGVudGl0aWVzO1xyXG4gICAgfVxyXG59XHJcbmV4cG9ydHMuRnJhZ21lbnQgPSBGcmFnbWVudDtcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9RnJhZ21lbnQuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///42\n')},function(module,exports,__webpack_require__){"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nconst Encode_1 = __webpack_require__(11);\r\nclass Decode {\r\n    static login(parts) {\r\n        return [\r\n            parts[1],\r\n            Decode.decodeString(parts[2]),\r\n            parts[3],\r\n            parts[4]\r\n        ];\r\n    }\r\n    static loginResponse(parts) {\r\n        return [\r\n            parts[1],\r\n            parts[2]\r\n        ];\r\n    }\r\n    static add(parts) {\r\n        return [\r\n            parts[1],\r\n            parseFloat(parts[2]),\r\n            parseFloat(parts[3]),\r\n            parseFloat(parts[4]),\r\n            parseFloat(parts[5]),\r\n            parseFloat(parts[6]),\r\n            parseFloat(parts[7]),\r\n            parseFloat(parts[8]),\r\n            parts[9],\r\n            parts[10]\r\n        ];\r\n    }\r\n    static added(parts) {\r\n        return [\r\n            parseInt(parts[1]),\r\n            parts[2],\r\n            parseFloat(parts[3]),\r\n            parseFloat(parts[4]),\r\n            parseFloat(parts[5]),\r\n            parseFloat(parts[6]),\r\n            parseFloat(parts[7]),\r\n            parseFloat(parts[8]),\r\n            parseFloat(parts[9]),\r\n            parts[10],\r\n            parts[11]\r\n        ];\r\n    }\r\n    static update(parts) {\r\n        return [\r\n            parts[1],\r\n            parseFloat(parts[2]),\r\n            parseFloat(parts[3]),\r\n            parseFloat(parts[4]),\r\n            parseFloat(parts[5]),\r\n            parseFloat(parts[6]),\r\n            parseFloat(parts[7]),\r\n            parseFloat(parts[8])\r\n        ];\r\n    }\r\n    static updated(parts) {\r\n        return [\r\n            parseInt(parts[1]),\r\n            parseFloat(parts[2]),\r\n            parseFloat(parts[3]),\r\n            parseFloat(parts[4]),\r\n            parseFloat(parts[5]),\r\n            parseFloat(parts[6]),\r\n            parseFloat(parts[7]),\r\n            parseFloat(parts[8])\r\n        ];\r\n    }\r\n    static remove(parts) {\r\n        return [\r\n            parts[1],\r\n        ];\r\n    }\r\n    static removed(parts) {\r\n        return [\r\n            parseInt(parts[1]),\r\n            parts[2]\r\n        ];\r\n    }\r\n    static describe(parts) {\r\n        return [\r\n            parts[1],\r\n            parts[2],\r\n        ];\r\n    }\r\n    static described(parts) {\r\n        return [\r\n            parseInt(parts[1]),\r\n            parts[2]\r\n        ];\r\n    }\r\n    static act(parts) {\r\n        return [\r\n            parts[1],\r\n            parts[2],\r\n            parts[3]\r\n        ];\r\n    }\r\n    static acted(parts) {\r\n        return [\r\n            parseInt(parts[1]),\r\n            parts[2],\r\n            parts[3]\r\n        ];\r\n    }\r\n    static notify(parts) {\r\n        return [\r\n            parts[1],\r\n            parts[2]\r\n        ];\r\n    }\r\n    static notified(parts) {\r\n        return [\r\n            parts[1],\r\n            parts[2]\r\n        ];\r\n    }\r\n    static decodeString(value) {\r\n        if (value.indexOf(\'\\\\\') != -1) {\r\n            return value.replace("\\\\\\\\1", "\\\\").replace("\\\\\\\\2", Encode_1.Encode.SEPARATOR);\r\n        }\r\n        else {\r\n            return value;\r\n        }\r\n    }\r\n}\r\nexports.Decode = Decode;\r\n//# sourceMappingURL=Decode.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhbGl0eS1zcGFjZS9saWIvc3JjL2NvbW1vbi9yZWFsaXR5L0RlY29kZS5qcz9hYTNkIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQThDLGNBQWM7QUFDNUQsaUJBQWlCLG1CQUFPLENBQUMsRUFBVTtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjQzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XHJcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcclxuY29uc3QgRW5jb2RlXzEgPSByZXF1aXJlKFwiLi9FbmNvZGVcIik7XHJcbmNsYXNzIERlY29kZSB7XHJcbiAgICBzdGF0aWMgbG9naW4ocGFydHMpIHtcclxuICAgICAgICByZXR1cm4gW1xyXG4gICAgICAgICAgICBwYXJ0c1sxXSxcclxuICAgICAgICAgICAgRGVjb2RlLmRlY29kZVN0cmluZyhwYXJ0c1syXSksXHJcbiAgICAgICAgICAgIHBhcnRzWzNdLFxyXG4gICAgICAgICAgICBwYXJ0c1s0XVxyXG4gICAgICAgIF07XHJcbiAgICB9XHJcbiAgICBzdGF0aWMgbG9naW5SZXNwb25zZShwYXJ0cykge1xyXG4gICAgICAgIHJldHVybiBbXHJcbiAgICAgICAgICAgIHBhcnRzWzFdLFxyXG4gICAgICAgICAgICBwYXJ0c1syXVxyXG4gICAgICAgIF07XHJcbiAgICB9XHJcbiAgICBzdGF0aWMgYWRkKHBhcnRzKSB7XHJcbiAgICAgICAgcmV0dXJuIFtcclxuICAgICAgICAgICAgcGFydHNbMV0sXHJcbiAgICAgICAgICAgIHBhcnNlRmxvYXQocGFydHNbMl0pLFxyXG4gICAgICAgICAgICBwYXJzZUZsb2F0KHBhcnRzWzNdKSxcclxuICAgICAgICAgICAgcGFyc2VGbG9hdChwYXJ0c1s0XSksXHJcbiAgICAgICAgICAgIHBhcnNlRmxvYXQocGFydHNbNV0pLFxyXG4gICAgICAgICAgICBwYXJzZUZsb2F0KHBhcnRzWzZdKSxcclxuICAgICAgICAgICAgcGFyc2VGbG9hdChwYXJ0c1s3XSksXHJcbiAgICAgICAgICAgIHBhcnNlRmxvYXQocGFydHNbOF0pLFxyXG4gICAgICAgICAgICBwYXJ0c1s5XSxcclxuICAgICAgICAgICAgcGFydHNbMTBdXHJcbiAgICAgICAgXTtcclxuICAgIH1cclxuICAgIHN0YXRpYyBhZGRlZChwYXJ0cykge1xyXG4gICAgICAgIHJldHVybiBbXHJcbiAgICAgICAgICAgIHBhcnNlSW50KHBhcnRzWzFdKSxcclxuICAgICAgICAgICAgcGFydHNbMl0sXHJcbiAgICAgICAgICAgIHBhcnNlRmxvYXQocGFydHNbM10pLFxyXG4gICAgICAgICAgICBwYXJzZUZsb2F0KHBhcnRzWzRdKSxcclxuICAgICAgICAgICAgcGFyc2VGbG9hdChwYXJ0c1s1XSksXHJcbiAgICAgICAgICAgIHBhcnNlRmxvYXQocGFydHNbNl0pLFxyXG4gICAgICAgICAgICBwYXJzZUZsb2F0KHBhcnRzWzddKSxcclxuICAgICAgICAgICAgcGFyc2VGbG9hdChwYXJ0c1s4XSksXHJcbiAgICAgICAgICAgIHBhcnNlRmxvYXQocGFydHNbOV0pLFxyXG4gICAgICAgICAgICBwYXJ0c1sxMF0sXHJcbiAgICAgICAgICAgIHBhcnRzWzExXVxyXG4gICAgICAgIF07XHJcbiAgICB9XHJcbiAgICBzdGF0aWMgdXBkYXRlKHBhcnRzKSB7XHJcbiAgICAgICAgcmV0dXJuIFtcclxuICAgICAgICAgICAgcGFydHNbMV0sXHJcbiAgICAgICAgICAgIHBhcnNlRmxvYXQocGFydHNbMl0pLFxyXG4gICAgICAgICAgICBwYXJzZUZsb2F0KHBhcnRzWzNdKSxcclxuICAgICAgICAgICAgcGFyc2VGbG9hdChwYXJ0c1s0XSksXHJcbiAgICAgICAgICAgIHBhcnNlRmxvYXQocGFydHNbNV0pLFxyXG4gICAgICAgICAgICBwYXJzZUZsb2F0KHBhcnRzWzZdKSxcclxuICAgICAgICAgICAgcGFyc2VGbG9hdChwYXJ0c1s3XSksXHJcbiAgICAgICAgICAgIHBhcnNlRmxvYXQocGFydHNbOF0pXHJcbiAgICAgICAgXTtcclxuICAgIH1cclxuICAgIHN0YXRpYyB1cGRhdGVkKHBhcnRzKSB7XHJcbiAgICAgICAgcmV0dXJuIFtcclxuICAgICAgICAgICAgcGFyc2VJbnQocGFydHNbMV0pLFxyXG4gICAgICAgICAgICBwYXJzZUZsb2F0KHBhcnRzWzJdKSxcclxuICAgICAgICAgICAgcGFyc2VGbG9hdChwYXJ0c1szXSksXHJcbiAgICAgICAgICAgIHBhcnNlRmxvYXQocGFydHNbNF0pLFxyXG4gICAgICAgICAgICBwYXJzZUZsb2F0KHBhcnRzWzVdKSxcclxuICAgICAgICAgICAgcGFyc2VGbG9hdChwYXJ0c1s2XSksXHJcbiAgICAgICAgICAgIHBhcnNlRmxvYXQocGFydHNbN10pLFxyXG4gICAgICAgICAgICBwYXJzZUZsb2F0KHBhcnRzWzhdKVxyXG4gICAgICAgIF07XHJcbiAgICB9XHJcbiAgICBzdGF0aWMgcmVtb3ZlKHBhcnRzKSB7XHJcbiAgICAgICAgcmV0dXJuIFtcclxuICAgICAgICAgICAgcGFydHNbMV0sXHJcbiAgICAgICAgXTtcclxuICAgIH1cclxuICAgIHN0YXRpYyByZW1vdmVkKHBhcnRzKSB7XHJcbiAgICAgICAgcmV0dXJuIFtcclxuICAgICAgICAgICAgcGFyc2VJbnQocGFydHNbMV0pLFxyXG4gICAgICAgICAgICBwYXJ0c1syXVxyXG4gICAgICAgIF07XHJcbiAgICB9XHJcbiAgICBzdGF0aWMgZGVzY3JpYmUocGFydHMpIHtcclxuICAgICAgICByZXR1cm4gW1xyXG4gICAgICAgICAgICBwYXJ0c1sxXSxcclxuICAgICAgICAgICAgcGFydHNbMl0sXHJcbiAgICAgICAgXTtcclxuICAgIH1cclxuICAgIHN0YXRpYyBkZXNjcmliZWQocGFydHMpIHtcclxuICAgICAgICByZXR1cm4gW1xyXG4gICAgICAgICAgICBwYXJzZUludChwYXJ0c1sxXSksXHJcbiAgICAgICAgICAgIHBhcnRzWzJdXHJcbiAgICAgICAgXTtcclxuICAgIH1cclxuICAgIHN0YXRpYyBhY3QocGFydHMpIHtcclxuICAgICAgICByZXR1cm4gW1xyXG4gICAgICAgICAgICBwYXJ0c1sxXSxcclxuICAgICAgICAgICAgcGFydHNbMl0sXHJcbiAgICAgICAgICAgIHBhcnRzWzNdXHJcbiAgICAgICAgXTtcclxuICAgIH1cclxuICAgIHN0YXRpYyBhY3RlZChwYXJ0cykge1xyXG4gICAgICAgIHJldHVybiBbXHJcbiAgICAgICAgICAgIHBhcnNlSW50KHBhcnRzWzFdKSxcclxuICAgICAgICAgICAgcGFydHNbMl0sXHJcbiAgICAgICAgICAgIHBhcnRzWzNdXHJcbiAgICAgICAgXTtcclxuICAgIH1cclxuICAgIHN0YXRpYyBub3RpZnkocGFydHMpIHtcclxuICAgICAgICByZXR1cm4gW1xyXG4gICAgICAgICAgICBwYXJ0c1sxXSxcclxuICAgICAgICAgICAgcGFydHNbMl1cclxuICAgICAgICBdO1xyXG4gICAgfVxyXG4gICAgc3RhdGljIG5vdGlmaWVkKHBhcnRzKSB7XHJcbiAgICAgICAgcmV0dXJuIFtcclxuICAgICAgICAgICAgcGFydHNbMV0sXHJcbiAgICAgICAgICAgIHBhcnRzWzJdXHJcbiAgICAgICAgXTtcclxuICAgIH1cclxuICAgIHN0YXRpYyBkZWNvZGVTdHJpbmcodmFsdWUpIHtcclxuICAgICAgICBpZiAodmFsdWUuaW5kZXhPZignXFxcXCcpICE9IC0xKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB2YWx1ZS5yZXBsYWNlKFwiXFxcXFxcXFwxXCIsIFwiXFxcXFwiKS5yZXBsYWNlKFwiXFxcXFxcXFwyXCIsIEVuY29kZV8xLkVuY29kZS5TRVBBUkFUT1IpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgcmV0dXJuIHZhbHVlO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5leHBvcnRzLkRlY29kZSA9IERlY29kZTtcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9RGVjb2RlLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///43\n')},function(module,exports,__webpack_require__){"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nclass EntityStateEventDetail {\r\n    constructor(state) {\r\n        this.state = state;\r\n    }\r\n}\r\nexports.EntityStateEventDetail = EntityStateEventDetail;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9tb2RlbC9FbnRpdHlTdGF0ZUV2ZW50RGV0YWlsLnRzP2ZmMTciXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxNQUFhLHNCQUFzQjtJQUUvQixZQUFZLEtBQWE7UUFDckIsSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7SUFDdkIsQ0FBQztDQUNKO0FBTEQsd0RBS0MiLCJmaWxlIjoiNDQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY2xhc3MgRW50aXR5U3RhdGVFdmVudERldGFpbCB7XHJcbiAgICBzdGF0ZTogc3RyaW5nO1xyXG4gICAgY29uc3RydWN0b3Ioc3RhdGU6IHN0cmluZykge1xyXG4gICAgICAgIHRoaXMuc3RhdGUgPSBzdGF0ZTtcclxuICAgIH1cclxufSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///44\n')},function(module,exports,__webpack_require__){"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nconst AbstractComponentController_1 = __webpack_require__(1);\r\nconst three_1 = __webpack_require__(2);\r\nconst Button_1 = __webpack_require__(3);\r\nconst AFrame_1 = __webpack_require__(0);\r\nclass PointerTool extends AbstractComponentController_1.AbstractComponentController {\r\n    constructor(component, entity, data) {\r\n        super(component, entity, data);\r\n        this.pointerMaterial = new three_1.LineBasicMaterial({ color: 0xffffff, transparent: true, opacity: 0.5 });\r\n        this.pressed = new Set();\r\n        this.time = 0;\r\n        this.pointerLine = this.constructPointerLine();\r\n        this.pointerCursor = this.constructPointerCursor();\r\n        this.pointerDevicePosition = new three_1.Vector3(0, 0, 0);\r\n        this.pointerDirection = new three_1.Vector3(0, 0, 0);\r\n        this.raycaster = new three_1.Raycaster();\r\n        this.interface.registerTool(this);\r\n    }\r\n    init() {\r\n        console.log(this.componentName + " init");\r\n    }\r\n    update(data, oldData) { }\r\n    remove() { }\r\n    pause() { }\r\n    play() { }\r\n    tick(time, timeDelta) {\r\n        if (this.pointerDevice) {\r\n            this.pointerTick(time, timeDelta);\r\n        }\r\n    }\r\n    buttonDown(device, toolSlot, button) {\r\n        if (!this.pressed.has(button)) {\r\n            if (button == Button_1.Button.TRIGGER && !this.pointerDevice) {\r\n                this.pointerOn(device);\r\n            }\r\n            this.pressed.add(button);\r\n        }\r\n    }\r\n    buttonUp(device, toolSlot, button) {\r\n        if (this.pressed.has(button)) {\r\n            if (button == Button_1.Button.TRIGGER && this.pointerDevice) {\r\n                this.pointerOff(device);\r\n            }\r\n            this.pressed.delete(button);\r\n        }\r\n    }\r\n    stickTwist(device, toolSlot, stick, x, y) {\r\n    }\r\n    constructPointerLine() {\r\n        var geometry = new three_1.Geometry();\r\n        geometry.vertices.push(new three_1.Vector3(0, 0, -100), new three_1.Vector3(0, 0, 0));\r\n        return new three_1.Line(geometry, this.pointerMaterial);\r\n    }\r\n    constructPointerCursor() {\r\n        return new three_1.Mesh(new three_1.SphereGeometry(0.2, 32, 32), this.pointerMaterial);\r\n    }\r\n    pointerOn(device) {\r\n        device.entity.object3D.add(this.pointerLine);\r\n        this.pointerDevice = device;\r\n    }\r\n    pointerOff(device) {\r\n        if (this.cursorPosition) {\r\n            this.removeCursor();\r\n        }\r\n        device.entity.object3D.remove(this.pointerLine);\r\n        this.pointerDevice = undefined;\r\n    }\r\n    pointerTick(time, timeDelta) {\r\n        this.pointerDevice.entity.object3D.getWorldDirection(this.pointerDirection);\r\n        this.pointerDirection.multiplyScalar(-1);\r\n        this.pointerDevice.entity.object3D.getWorldPosition(this.pointerDevicePosition);\r\n        this.raycaster.near = 0;\r\n        this.raycaster.far = 100;\r\n        this.raycaster.set(this.pointerDevicePosition, this.pointerDirection);\r\n        const intersects = this.raycaster.intersectObjects(this.interface.getCollidables(), true);\r\n        if (intersects.length > 0) {\r\n            if (intersects[0].object === this.pointerCursor) {\r\n                intersects.splice(0, 1);\r\n            }\r\n        }\r\n        if (intersects.length > 0) {\r\n            const intersectionPoint = intersects[0].point;\r\n            //console.log(JSON.stringify(intersects[0]));\r\n            this.pointerCursor.position.copy(intersectionPoint);\r\n            if (!this.cursorPosition) {\r\n                this.addCursor(intersects[0].object);\r\n            }\r\n            this.cursorPosition = intersectionPoint;\r\n            this.pointedFaceIndex = intersects[0].faceIndex;\r\n        }\r\n        else {\r\n            if (this.cursorPosition) {\r\n                this.removeCursor();\r\n            }\r\n        }\r\n    }\r\n    addCursor(object) {\r\n        this.scene.object3D.add(this.pointerCursor);\r\n        this.pointedObject = object;\r\n        console.log("add pointer cursor.");\r\n    }\r\n    removeCursor() {\r\n        this.scene.object3D.remove(this.pointerCursor);\r\n        console.log("remove pointer cursor.");\r\n        this.pointedObject = undefined;\r\n        this.pointedFaceIndex = undefined;\r\n        this.cursorPosition = undefined;\r\n    }\r\n}\r\nPointerTool.DEFINITION = new AFrame_1.ComponentControllerDefinition("pointer-tool", {}, false, (component, entity, data) => new PointerTool(component, entity, data));\r\nexports.PointerTool = PointerTool;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///45\n')},function(module,exports,__webpack_require__){"use strict";eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst AFrame_1 = __webpack_require__(0);\r\nconst LabelController_1 = __webpack_require__(47);\r\nconst IdentityController_1 = __webpack_require__(48);\r\nconst KeyboardAndMouseDevice_1 = __webpack_require__(49);\r\nconst AnimatorController_1 = __webpack_require__(50);\r\nconst AvatarController_1 = __webpack_require__(52);\r\nconst SpaceSystemController_1 = __webpack_require__(54);\r\nconst StateSystemController_1 = __webpack_require__(90);\r\nconst States_1 = __webpack_require__(19);\r\nconst MovementState_1 = __webpack_require__(91);\r\nconst InterfaceSystemController_1 = __webpack_require__(92);\r\nconst InterfaceController_1 = __webpack_require__(93);\r\nconst WalkTool_1 = __webpack_require__(94);\r\nconst PrimaryControllerDevice_1 = __webpack_require__(96);\r\nconst ExampleController_1 = __webpack_require__(97);\r\nconst ExampleSystemController_1 = __webpack_require__(98);\r\nconst AddObjectTool_1 = __webpack_require__(99);\r\nconst CollidableController_1 = __webpack_require__(101);\r\nconst QuaternionController_1 = __webpack_require__(102);\r\nconst TeleportTool_1 = __webpack_require__(103);\r\nconst ToolSelectorTool_1 = __webpack_require__(104);\r\nAFrame_1.registerSystemController(ExampleSystemController_1.ExampleSystemController.DEFINITION);\r\nAFrame_1.registerSystemController(InterfaceSystemController_1.InterfaceSystemController.DEFINITION);\r\nAFrame_1.registerSystemController(StateSystemController_1.StateSystemController.DEFINITION);\r\nAFrame_1.registerSystemController(SpaceSystemController_1.SpaceSystemController.DEFINITION);\r\nAFrame_1.registerComponentController(InterfaceController_1.InterfaceController.DEFINITION);\r\nAFrame_1.registerComponentController(ToolSelectorTool_1.ToolSelectorTool.DEFINITION);\r\nAFrame_1.registerComponentController(AddObjectTool_1.AddObjectTool.DEFINITION);\r\nAFrame_1.registerComponentController(WalkTool_1.WalkTool.DEFINITION);\r\nAFrame_1.registerComponentController(TeleportTool_1.TeleportTool.DEFINITION);\r\nAFrame_1.registerComponentController(PrimaryControllerDevice_1.PrimaryControllerDevice.DEFINITION);\r\nAFrame_1.registerComponentController(KeyboardAndMouseDevice_1.KeyboardAndMouseDevice.DEFINITION);\r\nAFrame_1.registerComponentController(ExampleController_1.ExampleController.DEFINITION);\r\nAFrame_1.registerComponentController(CollidableController_1.CollidableController.DEFINITION);\r\nAFrame_1.registerComponentController(AnimatorController_1.AnimatorController.DEFINITION);\r\nAFrame_1.registerComponentController(AvatarController_1.AvatarController.DEFINITION);\r\nAFrame_1.registerComponentController(IdentityController_1.IdentityController.DEFINITION);\r\nAFrame_1.registerComponentController(LabelController_1.LabelController.DEFINITION);\r\nAFrame_1.registerComponentController(QuaternionController_1.QuaternionController.DEFINITION);\r\nStateSystemController_1.registerStateFactory(States_1.States.STATE_MOVEMENT, () => { return new MovementState_1.MovementState(); });\r\n// Set terrain function.\r\nwindow.TINY_TERRAIN.heightFunctions.set('custom', (x, y) => {\r\n    const d = Math.sqrt(x * x + y * y);\r\n    return 20 + 20 * (-1 + 1 / (1 + d * d / 500));\r\n});\r\n// Fix facebook bug adding hash to url\r\nif (window.location.hash && window.location.hash == '#_=_') {\r\n    history.pushState(\"\", document.title, window.location.pathname + window.location.search);\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9pbmRleC50cz83ZDRjIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsd0NBQStFO0FBQy9FLGtEQUFrRTtBQUNsRSxxREFBMkU7QUFDM0UseURBQXdGO0FBQ3hGLHFEQUE0RTtBQUM1RSxtREFBcUU7QUFDckUsd0RBQTJFO0FBQzNFLHdEQUFpRztBQUNqRyx5Q0FBc0M7QUFDdEMsZ0RBQW9EO0FBQ3BELDREQUF1RjtBQUN2RixzREFBMkU7QUFDM0UsMkNBQTBEO0FBQzFELDBEQUEwRjtBQUMxRixvREFBZ0U7QUFDaEUsMERBQXlFO0FBQ3pFLGdEQUFvRTtBQUNwRSx3REFBaUY7QUFDakYsd0RBQWlGO0FBQ2pGLGdEQUFrRTtBQUNsRSxvREFBMEU7QUFFMUUsaUNBQXdCLENBQUMsaURBQXVCLENBQUMsVUFBVSxDQUFDLENBQUM7QUFDN0QsaUNBQXdCLENBQUMscURBQXlCLENBQUMsVUFBVSxDQUFDLENBQUM7QUFDL0QsaUNBQXdCLENBQUMsNkNBQXFCLENBQUMsVUFBVSxDQUFDLENBQUM7QUFDM0QsaUNBQXdCLENBQUMsNkNBQXFCLENBQUMsVUFBVSxDQUFDLENBQUM7QUFFM0Qsb0NBQTJCLENBQUMseUNBQW1CLENBQUMsVUFBVSxDQUFDLENBQUM7QUFDNUQsb0NBQTJCLENBQUMsbUNBQWdCLENBQUMsVUFBVSxDQUFDLENBQUM7QUFFekQsb0NBQTJCLENBQUMsNkJBQWEsQ0FBQyxVQUFVLENBQUMsQ0FBQztBQUN0RCxvQ0FBMkIsQ0FBQyxtQkFBUSxDQUFDLFVBQVUsQ0FBQyxDQUFDO0FBQ2pELG9DQUEyQixDQUFDLDJCQUFZLENBQUMsVUFBVSxDQUFDLENBQUM7QUFFckQsb0NBQTJCLENBQUMsaURBQXVCLENBQUMsVUFBVSxDQUFDLENBQUM7QUFDaEUsb0NBQTJCLENBQUMsK0NBQXNCLENBQUMsVUFBVSxDQUFDLENBQUM7QUFFL0Qsb0NBQTJCLENBQUMscUNBQWlCLENBQUMsVUFBVSxDQUFDLENBQUM7QUFDMUQsb0NBQTJCLENBQUMsMkNBQW9CLENBQUMsVUFBVSxDQUFDLENBQUM7QUFDN0Qsb0NBQTJCLENBQUMsdUNBQWtCLENBQUMsVUFBVSxDQUFDLENBQUM7QUFDM0Qsb0NBQTJCLENBQUMsbUNBQWdCLENBQUMsVUFBVSxDQUFDLENBQUM7QUFDekQsb0NBQTJCLENBQUMsdUNBQWtCLENBQUMsVUFBVSxDQUFDLENBQUM7QUFDM0Qsb0NBQTJCLENBQUMsaUNBQWUsQ0FBQyxVQUFVLENBQUMsQ0FBQztBQUN4RCxvQ0FBMkIsQ0FBQywyQ0FBb0IsQ0FBQyxVQUFVLENBQUMsQ0FBQztBQUU3RCw0Q0FBb0IsQ0FBQyxlQUFNLENBQUMsY0FBYyxFQUFFLEdBQUcsRUFBRSxHQUFHLE9BQU8sSUFBSSw2QkFBYSxFQUFFLEVBQUMsQ0FBQyxDQUFDLENBQUM7QUFFbEYsd0JBQXdCO0FBQ3ZCLE1BQWMsQ0FBQyxZQUFZLENBQUMsZUFBZSxDQUFDLEdBQUcsQ0FBQyxRQUFRLEVBQUUsQ0FBQyxDQUFTLEVBQUUsQ0FBUyxFQUFFLEVBQUU7SUFDaEYsTUFBTSxDQUFDLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLEdBQUMsQ0FBQyxHQUFHLENBQUMsR0FBQyxDQUFDLENBQUMsQ0FBQztJQUMvQixPQUFPLEVBQUUsR0FBRyxFQUFFLEdBQUcsQ0FBRSxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsR0FBRyxHQUFHLENBQUMsQ0FBQyxDQUFDO0FBQ25ELENBQUMsQ0FBQyxDQUFDO0FBRUgsc0NBQXNDO0FBQ3RDLElBQUksTUFBTSxDQUFDLFFBQVEsQ0FBQyxJQUFJLElBQUksTUFBTSxDQUFDLFFBQVEsQ0FBQyxJQUFJLElBQUksTUFBTSxFQUFFO0lBQ3hELE9BQU8sQ0FBQyxTQUFTLENBQUMsRUFBRSxFQUFFLFFBQVEsQ0FBQyxLQUFLLEVBQUUsTUFBTSxDQUFDLFFBQVEsQ0FBQyxRQUFRLEdBQUcsTUFBTSxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsQ0FBQztDQUM1RiIsImZpbGUiOiI0Ni5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7cmVnaXN0ZXJDb21wb25lbnRDb250cm9sbGVyLCByZWdpc3RlclN5c3RlbUNvbnRyb2xsZXJ9IGZyb20gXCIuL0FGcmFtZVwiO1xyXG5pbXBvcnQge0xhYmVsQ29udHJvbGxlcn0gZnJvbSBcIi4vY29tcG9uZW50L2xhYmVsL0xhYmVsQ29udHJvbGxlclwiO1xyXG5pbXBvcnQge0lkZW50aXR5Q29udHJvbGxlcn0gZnJvbSBcIi4vY29tcG9uZW50L2lkZW50aXR5L0lkZW50aXR5Q29udHJvbGxlclwiO1xyXG5pbXBvcnQge0tleWJvYXJkQW5kTW91c2VEZXZpY2V9IGZyb20gXCIuL3N5c3RlbS9pbnRlcmZhY2UvZGV2aWNlL0tleWJvYXJkQW5kTW91c2VEZXZpY2VcIjtcclxuaW1wb3J0IHtBbmltYXRvckNvbnRyb2xsZXJ9IGZyb20gXCIuL2NvbXBvbmVudC9hbmltYXRpb24vQW5pbWF0b3JDb250cm9sbGVyXCI7XHJcbmltcG9ydCB7QXZhdGFyQ29udHJvbGxlcn0gZnJvbSBcIi4vY29tcG9uZW50L2F2YXRhci9BdmF0YXJDb250cm9sbGVyXCI7XHJcbmltcG9ydCB7U3BhY2VTeXN0ZW1Db250cm9sbGVyfSBmcm9tIFwiLi9zeXN0ZW0vc3BhY2UvU3BhY2VTeXN0ZW1Db250cm9sbGVyXCI7XHJcbmltcG9ydCB7cmVnaXN0ZXJTdGF0ZUZhY3RvcnksIFN0YXRlU3lzdGVtQ29udHJvbGxlcn0gZnJvbSBcIi4vc3lzdGVtL3N0YXRlL1N0YXRlU3lzdGVtQ29udHJvbGxlclwiO1xyXG5pbXBvcnQge1N0YXRlc30gZnJvbSBcIi4vbW9kZWwvU3RhdGVzXCI7XHJcbmltcG9ydCB7TW92ZW1lbnRTdGF0ZX0gZnJvbSBcIi4vbW9kZWwvTW92ZW1lbnRTdGF0ZVwiO1xyXG5pbXBvcnQge0ludGVyZmFjZVN5c3RlbUNvbnRyb2xsZXJ9IGZyb20gXCIuL3N5c3RlbS9pbnRlcmZhY2UvSW50ZXJmYWNlU3lzdGVtQ29udHJvbGxlclwiO1xyXG5pbXBvcnQge0ludGVyZmFjZUNvbnRyb2xsZXJ9IGZyb20gXCIuL3N5c3RlbS9pbnRlcmZhY2UvSW50ZXJmYWNlQ29udHJvbGxlclwiO1xyXG5pbXBvcnQge1dhbGtUb29sfSBmcm9tIFwiLi9zeXN0ZW0vaW50ZXJmYWNlL3Rvb2wvV2Fsa1Rvb2xcIjtcclxuaW1wb3J0IHtQcmltYXJ5Q29udHJvbGxlckRldmljZX0gZnJvbSBcIi4vc3lzdGVtL2ludGVyZmFjZS9kZXZpY2UvUHJpbWFyeUNvbnRyb2xsZXJEZXZpY2VcIjtcclxuaW1wb3J0IHtFeGFtcGxlQ29udHJvbGxlcn0gZnJvbSBcIi4vY29tcG9uZW50L0V4YW1wbGVDb250cm9sbGVyXCI7XHJcbmltcG9ydCB7RXhhbXBsZVN5c3RlbUNvbnRyb2xsZXJ9IGZyb20gXCIuL3N5c3RlbS9FeGFtcGxlU3lzdGVtQ29udHJvbGxlclwiO1xyXG5pbXBvcnQge0FkZE9iamVjdFRvb2x9IGZyb20gXCIuL3N5c3RlbS9pbnRlcmZhY2UvdG9vbC9BZGRPYmplY3RUb29sXCI7XHJcbmltcG9ydCB7Q29sbGlkYWJsZUNvbnRyb2xsZXJ9IGZyb20gXCIuL2NvbXBvbmVudC9jb2xsaWRhYmxlL0NvbGxpZGFibGVDb250cm9sbGVyXCI7XHJcbmltcG9ydCB7UXVhdGVybmlvbkNvbnRyb2xsZXJ9IGZyb20gXCIuL2NvbXBvbmVudC9xdWF0ZXJuaW9uL1F1YXRlcm5pb25Db250cm9sbGVyXCI7XHJcbmltcG9ydCB7VGVsZXBvcnRUb29sfSBmcm9tIFwiLi9zeXN0ZW0vaW50ZXJmYWNlL3Rvb2wvVGVsZXBvcnRUb29sXCI7XHJcbmltcG9ydCB7VG9vbFNlbGVjdG9yVG9vbH0gZnJvbSBcIi4vc3lzdGVtL2ludGVyZmFjZS90b29sL1Rvb2xTZWxlY3RvclRvb2xcIjtcclxuXHJcbnJlZ2lzdGVyU3lzdGVtQ29udHJvbGxlcihFeGFtcGxlU3lzdGVtQ29udHJvbGxlci5ERUZJTklUSU9OKTtcclxucmVnaXN0ZXJTeXN0ZW1Db250cm9sbGVyKEludGVyZmFjZVN5c3RlbUNvbnRyb2xsZXIuREVGSU5JVElPTik7XHJcbnJlZ2lzdGVyU3lzdGVtQ29udHJvbGxlcihTdGF0ZVN5c3RlbUNvbnRyb2xsZXIuREVGSU5JVElPTik7XHJcbnJlZ2lzdGVyU3lzdGVtQ29udHJvbGxlcihTcGFjZVN5c3RlbUNvbnRyb2xsZXIuREVGSU5JVElPTik7XHJcblxyXG5yZWdpc3RlckNvbXBvbmVudENvbnRyb2xsZXIoSW50ZXJmYWNlQ29udHJvbGxlci5ERUZJTklUSU9OKTtcclxucmVnaXN0ZXJDb21wb25lbnRDb250cm9sbGVyKFRvb2xTZWxlY3RvclRvb2wuREVGSU5JVElPTik7XHJcblxyXG5yZWdpc3RlckNvbXBvbmVudENvbnRyb2xsZXIoQWRkT2JqZWN0VG9vbC5ERUZJTklUSU9OKTtcclxucmVnaXN0ZXJDb21wb25lbnRDb250cm9sbGVyKFdhbGtUb29sLkRFRklOSVRJT04pO1xyXG5yZWdpc3RlckNvbXBvbmVudENvbnRyb2xsZXIoVGVsZXBvcnRUb29sLkRFRklOSVRJT04pO1xyXG5cclxucmVnaXN0ZXJDb21wb25lbnRDb250cm9sbGVyKFByaW1hcnlDb250cm9sbGVyRGV2aWNlLkRFRklOSVRJT04pO1xyXG5yZWdpc3RlckNvbXBvbmVudENvbnRyb2xsZXIoS2V5Ym9hcmRBbmRNb3VzZURldmljZS5ERUZJTklUSU9OKTtcclxuXHJcbnJlZ2lzdGVyQ29tcG9uZW50Q29udHJvbGxlcihFeGFtcGxlQ29udHJvbGxlci5ERUZJTklUSU9OKTtcclxucmVnaXN0ZXJDb21wb25lbnRDb250cm9sbGVyKENvbGxpZGFibGVDb250cm9sbGVyLkRFRklOSVRJT04pO1xyXG5yZWdpc3RlckNvbXBvbmVudENvbnRyb2xsZXIoQW5pbWF0b3JDb250cm9sbGVyLkRFRklOSVRJT04pO1xyXG5yZWdpc3RlckNvbXBvbmVudENvbnRyb2xsZXIoQXZhdGFyQ29udHJvbGxlci5ERUZJTklUSU9OKTtcclxucmVnaXN0ZXJDb21wb25lbnRDb250cm9sbGVyKElkZW50aXR5Q29udHJvbGxlci5ERUZJTklUSU9OKTtcclxucmVnaXN0ZXJDb21wb25lbnRDb250cm9sbGVyKExhYmVsQ29udHJvbGxlci5ERUZJTklUSU9OKTtcclxucmVnaXN0ZXJDb21wb25lbnRDb250cm9sbGVyKFF1YXRlcm5pb25Db250cm9sbGVyLkRFRklOSVRJT04pO1xyXG5cclxucmVnaXN0ZXJTdGF0ZUZhY3RvcnkoU3RhdGVzLlNUQVRFX01PVkVNRU5ULCAoKSA9PiB7IHJldHVybiBuZXcgTW92ZW1lbnRTdGF0ZSgpIH0pO1xyXG5cclxuLy8gU2V0IHRlcnJhaW4gZnVuY3Rpb24uXHJcbih3aW5kb3cgYXMgYW55KS5USU5ZX1RFUlJBSU4uaGVpZ2h0RnVuY3Rpb25zLnNldCgnY3VzdG9tJywgKHg6IG51bWJlciwgeTogbnVtYmVyKSA9PiB7XHJcbiAgICBjb25zdCBkID0gTWF0aC5zcXJ0KHgqeCArIHkqeSk7XHJcbiAgICByZXR1cm4gMjAgKyAyMCAqICggLTEgKyAxIC8gKDEgKyBkICogZCAvIDUwMCkpO1xyXG59KTtcclxuXHJcbi8vIEZpeCBmYWNlYm9vayBidWcgYWRkaW5nIGhhc2ggdG8gdXJsXHJcbmlmICh3aW5kb3cubG9jYXRpb24uaGFzaCAmJiB3aW5kb3cubG9jYXRpb24uaGFzaCA9PSAnI189XycpIHtcclxuICAgIGhpc3RvcnkucHVzaFN0YXRlKFwiXCIsIGRvY3VtZW50LnRpdGxlLCB3aW5kb3cubG9jYXRpb24ucGF0aG5hbWUgKyB3aW5kb3cubG9jYXRpb24uc2VhcmNoKTtcclxufSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///46\n")},function(module,exports,__webpack_require__){"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nconst AFrame_1 = __webpack_require__(0);\r\nconst AbstractComponentController_1 = __webpack_require__(1);\r\nclass LabelController extends AbstractComponentController_1.AbstractComponentController {\r\n    constructor(component, entity, data) {\r\n        super(component, entity, data);\r\n    }\r\n    init() {\r\n        //console.log(this.componentName + " init: " + JSON.stringify(this.data));\r\n        const text = this.data[\'text\'];\r\n        const x = 0;\r\n        const y = this.data[\'height\'];\r\n        const z = 0;\r\n        this.labelElement = document.createElement(\'a-text\');\r\n        this.labelElement.setAttribute("value", text);\r\n        this.labelElement.setAttribute("color", "#FFFFFF");\r\n        this.labelElement.setAttribute("opacity", "0.5");\r\n        this.labelElement.setAttribute("resizer", "");\r\n        this.labelElement.setAttribute("billboard", "");\r\n        this.labelElement.setAttribute("align", "center");\r\n        this.labelElement.setAttribute("font", "kelsonsans");\r\n        this.labelElement.setAttribute("scale", "0.5 0.5");\r\n        this.labelElement.setAttribute("wrap-count", "30");\r\n        this.labelElement.setAttribute("position", x.toFixed(2) + " " + y.toFixed(2) + " " + z.toFixed(2));\r\n        this.entity.appendChild(this.labelElement);\r\n    }\r\n    update(data, oldData) {\r\n        //console.log(this.componentName + " update: " + JSON.stringify(this.data));\r\n    }\r\n    remove() {\r\n        //console.log(this.componentName + " remove");\r\n    }\r\n    pause() {\r\n        //console.log(this.componentName + " pause");\r\n    }\r\n    play() {\r\n        //console.log(this.componentName + " play");\r\n    }\r\n    tick(time, timeDelta) {\r\n    }\r\n}\r\nLabelController.DEFINITION = new AFrame_1.ComponentControllerDefinition("label", {\r\n    text: { type: \'string\', default: \'?\' },\r\n    height: { type: \'number\', default: 1.2 }\r\n}, false, (component, entity, data) => new LabelController(component, entity, data));\r\nexports.LabelController = LabelController;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9jb21wb25lbnQvbGFiZWwvTGFiZWxDb250cm9sbGVyLnRzPzIzMjQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSx3Q0FBMkQ7QUFFM0QsNkRBQTJFO0FBRTNFLE1BQWEsZUFBZ0IsU0FBUSx5REFBMkI7SUFZNUQsWUFBWSxTQUFvQixFQUFFLE1BQWMsRUFBRSxJQUFTO1FBQ3ZELEtBQUssQ0FBQyxTQUFTLEVBQUUsTUFBTSxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQ25DLENBQUM7SUFFRCxJQUFJO1FBQ0EsMEVBQTBFO1FBRTFFLE1BQU0sSUFBSSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDL0IsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ1osTUFBTSxDQUFDLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUM5QixNQUFNLENBQUMsR0FBRyxDQUFDLENBQUM7UUFFWixJQUFJLENBQUMsWUFBWSxHQUFHLFFBQVEsQ0FBQyxhQUFhLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDckQsSUFBSSxDQUFDLFlBQVksQ0FBQyxZQUFZLENBQUMsT0FBTyxFQUFFLElBQUksQ0FBQyxDQUFDO1FBQzlDLElBQUksQ0FBQyxZQUFZLENBQUMsWUFBWSxDQUFDLE9BQU8sRUFBRSxTQUFTLENBQUMsQ0FBQztRQUNuRCxJQUFJLENBQUMsWUFBWSxDQUFDLFlBQVksQ0FBQyxTQUFTLEVBQUUsS0FBSyxDQUFDLENBQUM7UUFDakQsSUFBSSxDQUFDLFlBQVksQ0FBQyxZQUFZLENBQUMsU0FBUyxFQUFFLEVBQUUsQ0FBQyxDQUFDO1FBQzlDLElBQUksQ0FBQyxZQUFZLENBQUMsWUFBWSxDQUFDLFdBQVcsRUFBRSxFQUFFLENBQUMsQ0FBQztRQUNoRCxJQUFJLENBQUMsWUFBWSxDQUFDLFlBQVksQ0FBQyxPQUFPLEVBQUUsUUFBUSxDQUFDLENBQUM7UUFDbEQsSUFBSSxDQUFDLFlBQVksQ0FBQyxZQUFZLENBQUMsTUFBTSxFQUFFLFlBQVksQ0FBQyxDQUFDO1FBQ3JELElBQUksQ0FBQyxZQUFZLENBQUMsWUFBWSxDQUFDLE9BQU8sRUFBRSxTQUFTLENBQUMsQ0FBQztRQUNuRCxJQUFJLENBQUMsWUFBWSxDQUFDLFlBQVksQ0FBQyxZQUFZLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFDbkQsSUFBSSxDQUFDLFlBQVksQ0FBQyxZQUFZLENBQUMsVUFBVSxFQUFFLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLEdBQUcsR0FBRyxHQUFHLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLEdBQUcsR0FBRyxHQUFHLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUNuRyxJQUFJLENBQUMsTUFBUSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUM7SUFDakQsQ0FBQztJQUVELE1BQU0sQ0FBQyxJQUFTLEVBQUUsT0FBWTtRQUMxQiw0RUFBNEU7SUFDaEYsQ0FBQztJQUVELE1BQU07UUFDRiw4Q0FBOEM7SUFDbEQsQ0FBQztJQUVELEtBQUs7UUFDRCw2Q0FBNkM7SUFDakQsQ0FBQztJQUVELElBQUk7UUFDQSw0Q0FBNEM7SUFDaEQsQ0FBQztJQUVELElBQUksQ0FBQyxJQUFZLEVBQUUsU0FBaUI7SUFDcEMsQ0FBQzs7QUFyRGEsMEJBQVUsR0FBRyxJQUFJLHNDQUE2QixDQUN4RCxPQUFPLEVBQUU7SUFDTCxJQUFJLEVBQUUsRUFBQyxJQUFJLEVBQUUsUUFBUSxFQUFFLE9BQU8sRUFBRSxHQUFHLEVBQUM7SUFDcEMsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLFFBQVEsRUFBRSxPQUFPLEVBQUUsR0FBRyxFQUFDO0NBQ3pDLEVBQUUsS0FBSyxFQUNSLENBQUMsU0FBb0IsRUFBRSxNQUFjLEVBQUUsSUFBUyxFQUFFLEVBQUUsQ0FBQyxJQUFJLGVBQWUsQ0FBQyxTQUFTLEVBQUUsTUFBTSxFQUFFLElBQUksQ0FBQyxDQUNwRyxDQUFDO0FBUk4sMENBeURDIiwiZmlsZSI6IjQ3LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDb21wb25lbnRDb250cm9sbGVyRGVmaW5pdGlvbn0gZnJvbSBcIi4uLy4uL0FGcmFtZVwiO1xyXG5pbXBvcnQge0NvbXBvbmVudCwgRW50aXR5fSBmcm9tIFwiYWZyYW1lXCI7XHJcbmltcG9ydCB7QWJzdHJhY3RDb21wb25lbnRDb250cm9sbGVyfSBmcm9tIFwiLi4vQWJzdHJhY3RDb21wb25lbnRDb250cm9sbGVyXCI7XHJcblxyXG5leHBvcnQgY2xhc3MgTGFiZWxDb250cm9sbGVyIGV4dGVuZHMgQWJzdHJhY3RDb21wb25lbnRDb250cm9sbGVyIHtcclxuXHJcbiAgICBwdWJsaWMgc3RhdGljIERFRklOSVRJT04gPSBuZXcgQ29tcG9uZW50Q29udHJvbGxlckRlZmluaXRpb24oXHJcbiAgICAgICAgXCJsYWJlbFwiLCB7XHJcbiAgICAgICAgICAgIHRleHQ6IHt0eXBlOiAnc3RyaW5nJywgZGVmYXVsdDogJz8nfSxcclxuICAgICAgICAgICAgaGVpZ2h0OiB7dHlwZTogJ251bWJlcicsIGRlZmF1bHQ6IDEuMn1cclxuICAgICAgICB9LCBmYWxzZSxcclxuICAgICAgICAoY29tcG9uZW50OiBDb21wb25lbnQsIGVudGl0eTogRW50aXR5LCBkYXRhOiBhbnkpID0+IG5ldyBMYWJlbENvbnRyb2xsZXIoY29tcG9uZW50LCBlbnRpdHksIGRhdGEpXHJcbiAgICApO1xyXG5cclxuICAgIGxhYmVsRWxlbWVudDogRWxlbWVudCB8IHVuZGVmaW5lZDtcclxuXHJcbiAgICBjb25zdHJ1Y3Rvcihjb21wb25lbnQ6IENvbXBvbmVudCwgZW50aXR5OiBFbnRpdHksIGRhdGE6IGFueSkge1xyXG4gICAgICAgIHN1cGVyKGNvbXBvbmVudCwgZW50aXR5LCBkYXRhKTtcclxuICAgIH1cclxuXHJcbiAgICBpbml0KCk6IHZvaWQge1xyXG4gICAgICAgIC8vY29uc29sZS5sb2codGhpcy5jb21wb25lbnROYW1lICsgXCIgaW5pdDogXCIgKyBKU09OLnN0cmluZ2lmeSh0aGlzLmRhdGEpKTtcclxuXHJcbiAgICAgICAgY29uc3QgdGV4dCA9IHRoaXMuZGF0YVsndGV4dCddO1xyXG4gICAgICAgIGNvbnN0IHggPSAwO1xyXG4gICAgICAgIGNvbnN0IHkgPSB0aGlzLmRhdGFbJ2hlaWdodCddO1xyXG4gICAgICAgIGNvbnN0IHogPSAwO1xyXG5cclxuICAgICAgICB0aGlzLmxhYmVsRWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2EtdGV4dCcpO1xyXG4gICAgICAgIHRoaXMubGFiZWxFbGVtZW50LnNldEF0dHJpYnV0ZShcInZhbHVlXCIsIHRleHQpO1xyXG4gICAgICAgIHRoaXMubGFiZWxFbGVtZW50LnNldEF0dHJpYnV0ZShcImNvbG9yXCIsIFwiI0ZGRkZGRlwiKTtcclxuICAgICAgICB0aGlzLmxhYmVsRWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJvcGFjaXR5XCIsIFwiMC41XCIpO1xyXG4gICAgICAgIHRoaXMubGFiZWxFbGVtZW50LnNldEF0dHJpYnV0ZShcInJlc2l6ZXJcIiwgXCJcIik7XHJcbiAgICAgICAgdGhpcy5sYWJlbEVsZW1lbnQuc2V0QXR0cmlidXRlKFwiYmlsbGJvYXJkXCIsIFwiXCIpO1xyXG4gICAgICAgIHRoaXMubGFiZWxFbGVtZW50LnNldEF0dHJpYnV0ZShcImFsaWduXCIsIFwiY2VudGVyXCIpO1xyXG4gICAgICAgIHRoaXMubGFiZWxFbGVtZW50LnNldEF0dHJpYnV0ZShcImZvbnRcIiwgXCJrZWxzb25zYW5zXCIpO1xyXG4gICAgICAgIHRoaXMubGFiZWxFbGVtZW50LnNldEF0dHJpYnV0ZShcInNjYWxlXCIsIFwiMC41IDAuNVwiKTtcclxuICAgICAgICB0aGlzLmxhYmVsRWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJ3cmFwLWNvdW50XCIsIFwiMzBcIik7XHJcbiAgICAgICAgdGhpcy5sYWJlbEVsZW1lbnQuc2V0QXR0cmlidXRlKFwicG9zaXRpb25cIiwgeC50b0ZpeGVkKDIpICsgXCIgXCIgKyB5LnRvRml4ZWQoMikgKyBcIiBcIiArIHoudG9GaXhlZCgyKSk7XHJcbiAgICAgICAgdGhpcy5lbnRpdHkhIS5hcHBlbmRDaGlsZCh0aGlzLmxhYmVsRWxlbWVudCk7XHJcbiAgICB9XHJcblxyXG4gICAgdXBkYXRlKGRhdGE6IGFueSwgb2xkRGF0YTogYW55KTogdm9pZCB7XHJcbiAgICAgICAgLy9jb25zb2xlLmxvZyh0aGlzLmNvbXBvbmVudE5hbWUgKyBcIiB1cGRhdGU6IFwiICsgSlNPTi5zdHJpbmdpZnkodGhpcy5kYXRhKSk7XHJcbiAgICB9XHJcblxyXG4gICAgcmVtb3ZlKCk6IHZvaWQge1xyXG4gICAgICAgIC8vY29uc29sZS5sb2codGhpcy5jb21wb25lbnROYW1lICsgXCIgcmVtb3ZlXCIpO1xyXG4gICAgfVxyXG5cclxuICAgIHBhdXNlKCk6IHZvaWQge1xyXG4gICAgICAgIC8vY29uc29sZS5sb2codGhpcy5jb21wb25lbnROYW1lICsgXCIgcGF1c2VcIik7XHJcbiAgICB9XHJcblxyXG4gICAgcGxheSgpOiB2b2lkIHtcclxuICAgICAgICAvL2NvbnNvbGUubG9nKHRoaXMuY29tcG9uZW50TmFtZSArIFwiIHBsYXlcIik7XHJcbiAgICB9XHJcblxyXG4gICAgdGljayh0aW1lOiBudW1iZXIsIHRpbWVEZWx0YTogbnVtYmVyKTogdm9pZCB7XHJcbiAgICB9XHJcblxyXG59XHJcblxyXG5cclxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///47\n')},function(module,exports,__webpack_require__){"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nconst AFrame_1 = __webpack_require__(0);\r\nconst AbstractComponentController_1 = __webpack_require__(1);\r\nclass IdentityController extends AbstractComponentController_1.AbstractComponentController {\r\n    constructor(component, entity, data) {\r\n        super(component, entity, data);\r\n    }\r\n    init() {\r\n        //console.log(this.componentName + " init");\r\n        fetch(\'/api/users/current\')\r\n            .then((response) => {\r\n            response.json().then((data) => {\r\n                //console.log(data);\r\n                this.entity.setAttribute("label", "text:" + data.name + "; height:1.2;");\r\n            });\r\n        }).catch((err) => {\r\n            console.error(err);\r\n        });\r\n    }\r\n    update(data, oldData) {\r\n        //console.log(this.componentName + " update");\r\n    }\r\n    remove() {\r\n        //console.log(this.componentName + " remove");\r\n    }\r\n    pause() {\r\n        //console.log(this.componentName + " pause");\r\n    }\r\n    play() {\r\n        //console.log(this.componentName + " play");\r\n    }\r\n    tick(time, timeDelta) {\r\n    }\r\n}\r\nIdentityController.DEFINITION = new AFrame_1.ComponentControllerDefinition("identity", {}, false, (component, entity, data) => new IdentityController(component, entity, data));\r\nexports.IdentityController = IdentityController;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9jb21wb25lbnQvaWRlbnRpdHkvSWRlbnRpdHlDb250cm9sbGVyLnRzPzcxMTgiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSx3Q0FBMkQ7QUFFM0QsNkRBQTJFO0FBRTNFLE1BQWEsa0JBQW1CLFNBQVEseURBQTJCO0lBTy9ELFlBQVksU0FBb0IsRUFBRSxNQUFjLEVBQUUsSUFBUztRQUN2RCxLQUFLLENBQUMsU0FBUyxFQUFFLE1BQU0sRUFBRSxJQUFJLENBQUMsQ0FBQztJQUNuQyxDQUFDO0lBRUQsSUFBSTtRQUNBLDRDQUE0QztRQUM1QyxLQUFLLENBQUMsb0JBQW9CLENBQUM7YUFDMUIsSUFBSSxDQUFDLENBQUMsUUFBUSxFQUFFLEVBQUU7WUFDZixRQUFRLENBQUMsSUFBSSxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsSUFBSSxFQUFFLEVBQUU7Z0JBQzFCLG9CQUFvQjtnQkFDcEIsSUFBSSxDQUFDLE1BQVEsQ0FBQyxZQUFZLENBQUMsT0FBTyxFQUFFLE9BQU8sR0FBRyxJQUFJLENBQUMsSUFBSSxHQUFHLGVBQWUsQ0FBQyxDQUFDO1lBQy9FLENBQUMsQ0FBQyxDQUFDO1FBQ1AsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsR0FBRyxFQUFFLEVBQUU7WUFDYixPQUFPLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ3ZCLENBQUMsQ0FBQyxDQUFDO0lBQ1AsQ0FBQztJQUVELE1BQU0sQ0FBQyxJQUFTLEVBQUUsT0FBWTtRQUMxQiw4Q0FBOEM7SUFDbEQsQ0FBQztJQUVELE1BQU07UUFDRiw4Q0FBOEM7SUFDbEQsQ0FBQztJQUVELEtBQUs7UUFDRCw2Q0FBNkM7SUFDakQsQ0FBQztJQUVELElBQUk7UUFDQSw0Q0FBNEM7SUFDaEQsQ0FBQztJQUVELElBQUksQ0FBQyxJQUFZLEVBQUUsU0FBaUI7SUFDcEMsQ0FBQzs7QUF2Q2EsNkJBQVUsR0FBRyxJQUFJLHNDQUE2QixDQUN4RCxVQUFVLEVBQUUsRUFBRSxFQUFFLEtBQUssRUFDckIsQ0FBQyxTQUFvQixFQUFFLE1BQWMsRUFBRSxJQUFTLEVBQUUsRUFBRSxDQUFDLElBQUksa0JBQWtCLENBQUMsU0FBUyxFQUFFLE1BQU0sRUFBRSxJQUFJLENBQUMsQ0FDdkcsQ0FBQztBQUxOLGdEQTBDQyIsImZpbGUiOiI0OC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q29tcG9uZW50Q29udHJvbGxlckRlZmluaXRpb259IGZyb20gXCIuLi8uLi9BRnJhbWVcIjtcclxuaW1wb3J0IHtDb21wb25lbnQsIEVudGl0eX0gZnJvbSBcImFmcmFtZVwiO1xyXG5pbXBvcnQge0Fic3RyYWN0Q29tcG9uZW50Q29udHJvbGxlcn0gZnJvbSBcIi4uL0Fic3RyYWN0Q29tcG9uZW50Q29udHJvbGxlclwiO1xyXG5cclxuZXhwb3J0IGNsYXNzIElkZW50aXR5Q29udHJvbGxlciBleHRlbmRzIEFic3RyYWN0Q29tcG9uZW50Q29udHJvbGxlciB7XHJcblxyXG4gICAgcHVibGljIHN0YXRpYyBERUZJTklUSU9OID0gbmV3IENvbXBvbmVudENvbnRyb2xsZXJEZWZpbml0aW9uKFxyXG4gICAgICAgIFwiaWRlbnRpdHlcIiwge30sIGZhbHNlLFxyXG4gICAgICAgIChjb21wb25lbnQ6IENvbXBvbmVudCwgZW50aXR5OiBFbnRpdHksIGRhdGE6IGFueSkgPT4gbmV3IElkZW50aXR5Q29udHJvbGxlcihjb21wb25lbnQsIGVudGl0eSwgZGF0YSlcclxuICAgICk7XHJcblxyXG4gICAgY29uc3RydWN0b3IoY29tcG9uZW50OiBDb21wb25lbnQsIGVudGl0eTogRW50aXR5LCBkYXRhOiBhbnkpIHtcclxuICAgICAgICBzdXBlcihjb21wb25lbnQsIGVudGl0eSwgZGF0YSk7XHJcbiAgICB9XHJcblxyXG4gICAgaW5pdCgpOiB2b2lkIHtcclxuICAgICAgICAvL2NvbnNvbGUubG9nKHRoaXMuY29tcG9uZW50TmFtZSArIFwiIGluaXRcIik7XHJcbiAgICAgICAgZmV0Y2goJy9hcGkvdXNlcnMvY3VycmVudCcpXHJcbiAgICAgICAgLnRoZW4oKHJlc3BvbnNlKSA9PiB7XHJcbiAgICAgICAgICAgIHJlc3BvbnNlLmpzb24oKS50aGVuKChkYXRhKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAvL2NvbnNvbGUubG9nKGRhdGEpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5lbnRpdHkhIS5zZXRBdHRyaWJ1dGUoXCJsYWJlbFwiLCBcInRleHQ6XCIgKyBkYXRhLm5hbWUgKyBcIjsgaGVpZ2h0OjEuMjtcIik7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH0pLmNhdGNoKChlcnIpID0+IHtcclxuICAgICAgICAgICAgY29uc29sZS5lcnJvcihlcnIpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIHVwZGF0ZShkYXRhOiBhbnksIG9sZERhdGE6IGFueSk6IHZvaWQge1xyXG4gICAgICAgIC8vY29uc29sZS5sb2codGhpcy5jb21wb25lbnROYW1lICsgXCIgdXBkYXRlXCIpO1xyXG4gICAgfVxyXG5cclxuICAgIHJlbW92ZSgpOiB2b2lkIHtcclxuICAgICAgICAvL2NvbnNvbGUubG9nKHRoaXMuY29tcG9uZW50TmFtZSArIFwiIHJlbW92ZVwiKTtcclxuICAgIH1cclxuXHJcbiAgICBwYXVzZSgpOiB2b2lkIHtcclxuICAgICAgICAvL2NvbnNvbGUubG9nKHRoaXMuY29tcG9uZW50TmFtZSArIFwiIHBhdXNlXCIpO1xyXG4gICAgfVxyXG5cclxuICAgIHBsYXkoKTogdm9pZCB7XHJcbiAgICAgICAgLy9jb25zb2xlLmxvZyh0aGlzLmNvbXBvbmVudE5hbWUgKyBcIiBwbGF5XCIpO1xyXG4gICAgfVxyXG5cclxuICAgIHRpY2sodGltZTogbnVtYmVyLCB0aW1lRGVsdGE6IG51bWJlcik6IHZvaWQge1xyXG4gICAgfVxyXG59XHJcblxyXG5cclxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///48\n')},function(module,exports,__webpack_require__){"use strict";eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst AbstractComponentController_1 = __webpack_require__(1);\r\nconst DeviceSlot_1 = __webpack_require__(18);\r\nconst Slot_1 = __webpack_require__(5);\r\nconst Button_1 = __webpack_require__(3);\r\nconst AFrame_1 = __webpack_require__(0);\r\nconst util_1 = __webpack_require__(8);\r\nclass KeyboardAndMouseDevice extends AbstractComponentController_1.AbstractComponentController {\r\n    constructor(component, entity, data) {\r\n        super(component, entity, data);\r\n        this.movementForwardKey = 'w';\r\n        this.movementBackwardKey = 's';\r\n        this.movementLeftKey = 'a';\r\n        this.movementRightKey = 'd';\r\n        this.jumpKey = ' ';\r\n        this.rightKey = 'ArrowRight';\r\n        this.leftKey = 'ArrowLeft';\r\n        this.upKey = 'ArrowUp';\r\n        this.downKey = 'ArrowDown';\r\n        this.pointerLock = false;\r\n        this.interface.setDevice(DeviceSlot_1.DeviceSlot.KEYBOARD_AND_MOUSE, this);\r\n    }\r\n    init() {\r\n        console.log(this.componentName + \" init\");\r\n        util_1.addDocumentEventListener(\"pointerlockchange\", (detail) => {\r\n            this.pointerLock = document.pointerLockElement != null;\r\n        });\r\n        window.addEventListener('keydown', (e) => {\r\n            this.onKeyDown(e.key);\r\n        });\r\n        window.addEventListener('keyup', (e) => {\r\n            this.onKeyUp(e.key);\r\n        });\r\n        this.entity.sceneEl.addEventListener('mousedown', (e) => {\r\n            if (!this.pointerLock) {\r\n                return;\r\n            }\r\n            if (e.button == 0) {\r\n                this.interface.buttonDown(this, Slot_1.Slot.PRIMARY, Button_1.Button.TRIGGER);\r\n            }\r\n            if (e.button == 1) {\r\n                this.interface.buttonDown(this, Slot_1.Slot.PRIMARY, Button_1.Button.MENU);\r\n            }\r\n            if (e.button == 2) {\r\n                this.interface.buttonDown(this, Slot_1.Slot.PRIMARY, Button_1.Button.GRIP);\r\n            }\r\n        });\r\n        this.entity.sceneEl.addEventListener('mouseup', (e) => {\r\n            if (!this.pointerLock) {\r\n                return;\r\n            }\r\n            if (e.button == 0) {\r\n                this.interface.buttonUp(this, Slot_1.Slot.PRIMARY, Button_1.Button.TRIGGER);\r\n            }\r\n            if (e.button == 1) {\r\n                this.interface.buttonUp(this, Slot_1.Slot.PRIMARY, Button_1.Button.MENU);\r\n            }\r\n            if (e.button == 2) {\r\n                this.interface.buttonUp(this, Slot_1.Slot.PRIMARY, Button_1.Button.GRIP);\r\n            }\r\n        });\r\n        /*(this.entity.sceneEl!! as any).addEventListener('click', (e: MouseEvent) => {\r\n            console.log('mouse click ' + e.button);\r\n        });\r\n\r\n        (this.entity.sceneEl!! as any).addEventListener('wheel', (e: WheelEvent) => {\r\n            console.log('wheel: x=' + e.deltaX + ', y=' + e.deltaY + ', z=' + e.deltaZ);\r\n        });*/\r\n    }\r\n    update(data, oldData) {\r\n    }\r\n    remove() {\r\n    }\r\n    pause() {\r\n    }\r\n    play() {\r\n    }\r\n    tick(time, timeDelta) {\r\n    }\r\n    onKeyDown(key) {\r\n        if (key == this.movementForwardKey) {\r\n            this.interface.buttonDown(this, Slot_1.Slot.WALK, Button_1.Button.UP);\r\n        }\r\n        if (key == this.movementBackwardKey) {\r\n            this.interface.buttonDown(this, Slot_1.Slot.WALK, Button_1.Button.DOWN);\r\n        }\r\n        if (key == this.movementLeftKey) {\r\n            this.interface.buttonDown(this, Slot_1.Slot.WALK, Button_1.Button.LEFT);\r\n        }\r\n        if (key == this.movementRightKey) {\r\n            this.interface.buttonDown(this, Slot_1.Slot.WALK, Button_1.Button.RIGHT);\r\n        }\r\n        if (key == this.jumpKey) {\r\n            this.interface.buttonDown(this, Slot_1.Slot.WALK, Button_1.Button.TRIGGER);\r\n        }\r\n        if (key == this.upKey) {\r\n            this.interface.buttonDown(this, Slot_1.Slot.PRIMARY_SELECTOR, Button_1.Button.UP);\r\n        }\r\n        if (key == this.downKey) {\r\n            this.interface.buttonDown(this, Slot_1.Slot.PRIMARY_SELECTOR, Button_1.Button.DOWN);\r\n        }\r\n        if (key == this.rightKey) {\r\n            this.interface.buttonDown(this, Slot_1.Slot.PRIMARY_SELECTOR, Button_1.Button.RIGHT);\r\n        }\r\n        if (key == this.leftKey) {\r\n            this.interface.buttonDown(this, Slot_1.Slot.PRIMARY_SELECTOR, Button_1.Button.LEFT);\r\n        }\r\n    }\r\n    onKeyUp(key) {\r\n        if (key == this.movementForwardKey) {\r\n            this.interface.buttonUp(this, Slot_1.Slot.WALK, Button_1.Button.UP);\r\n        }\r\n        if (key == this.movementBackwardKey) {\r\n            this.interface.buttonUp(this, Slot_1.Slot.WALK, Button_1.Button.DOWN);\r\n        }\r\n        if (key == this.movementLeftKey) {\r\n            this.interface.buttonUp(this, Slot_1.Slot.WALK, Button_1.Button.LEFT);\r\n        }\r\n        if (key == this.movementRightKey) {\r\n            this.interface.buttonUp(this, Slot_1.Slot.WALK, Button_1.Button.RIGHT);\r\n        }\r\n        if (key == this.jumpKey) {\r\n            this.interface.buttonUp(this, Slot_1.Slot.WALK, Button_1.Button.TRIGGER);\r\n        }\r\n        if (key == this.upKey) {\r\n            this.interface.buttonUp(this, Slot_1.Slot.PRIMARY_SELECTOR, Button_1.Button.UP);\r\n        }\r\n        if (key == this.downKey) {\r\n            this.interface.buttonUp(this, Slot_1.Slot.PRIMARY_SELECTOR, Button_1.Button.DOWN);\r\n        }\r\n        if (key == this.rightKey) {\r\n            this.interface.buttonUp(this, Slot_1.Slot.PRIMARY_SELECTOR, Button_1.Button.RIGHT);\r\n        }\r\n        if (key == this.leftKey) {\r\n            this.interface.buttonUp(this, Slot_1.Slot.PRIMARY_SELECTOR, Button_1.Button.LEFT);\r\n        }\r\n    }\r\n}\r\nKeyboardAndMouseDevice.DEFINITION = new AFrame_1.ComponentControllerDefinition(\"keyboard-and-mouse\", {}, false, (component, entity, data) => new KeyboardAndMouseDevice(component, entity, data));\r\nexports.KeyboardAndMouseDevice = KeyboardAndMouseDevice;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///49\n")},function(module,exports,__webpack_require__){"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nconst CompositeComponentController_1 = __webpack_require__(27);\r\nconst AnimationFeature_1 = __webpack_require__(28);\r\nconst AFrame_1 = __webpack_require__(0);\r\nclass AnimatorController extends CompositeComponentController_1.CompositeComponentController {\r\n    constructor(component, entity, data) {\r\n        super(component, entity, data);\r\n    }\r\n    init() {\r\n        this.addFeature(new AnimationFeature_1.AnimationFeature(this, this.entity));\r\n        super.init();\r\n    }\r\n}\r\nAnimatorController.DEFINITION = new AFrame_1.ComponentControllerDefinition("animator", {}, false, (component, entity, data) => new AnimatorController(component, entity, data));\r\nexports.AnimatorController = AnimatorController;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9jb21wb25lbnQvYW5pbWF0aW9uL0FuaW1hdG9yQ29udHJvbGxlci50cz82ZmYwIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsK0RBQTZFO0FBQzdFLG1EQUEwRTtBQUUxRSx3Q0FBMkQ7QUFFM0QsTUFBYSxrQkFBbUIsU0FBUSwyREFBNEI7SUFPaEUsWUFBWSxTQUFvQixFQUFFLE1BQWMsRUFBRSxJQUFTO1FBQ3ZELEtBQUssQ0FBQyxTQUFTLEVBQUUsTUFBTSxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQ25DLENBQUM7SUFFRCxJQUFJO1FBQ0EsSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLG1DQUFnQixDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsTUFBUSxDQUFDLENBQUMsQ0FBQztRQUMzRCxLQUFLLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDakIsQ0FBQzs7QUFaYSw2QkFBVSxHQUFHLElBQUksc0NBQTZCLENBQ3hELFVBQVUsRUFBRSxFQUFFLEVBQUUsS0FBSyxFQUNyQixDQUFDLFNBQW9CLEVBQUUsTUFBYyxFQUFFLElBQVMsRUFBRSxFQUFFLENBQUMsSUFBSSxrQkFBa0IsQ0FBQyxTQUFTLEVBQUUsTUFBTSxFQUFFLElBQUksQ0FBQyxDQUN2RyxDQUFDO0FBTE4sZ0RBZ0JDIiwiZmlsZSI6IjUwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDb21wb3NpdGVDb21wb25lbnRDb250cm9sbGVyfSBmcm9tIFwiLi4vQ29tcG9zaXRlQ29tcG9uZW50Q29udHJvbGxlclwiO1xyXG5pbXBvcnQge0FuaW1hdGlvbkZlYXR1cmV9IGZyb20gXCIuLi8uLi9mZWF0dXJlL2FuaW1hdGlvbi9BbmltYXRpb25GZWF0dXJlXCI7XHJcbmltcG9ydCB7Q29tcG9uZW50LCBFbnRpdHl9IGZyb20gXCJhZnJhbWVcIjtcclxuaW1wb3J0IHtDb21wb25lbnRDb250cm9sbGVyRGVmaW5pdGlvbn0gZnJvbSBcIi4uLy4uL0FGcmFtZVwiO1xyXG5cclxuZXhwb3J0IGNsYXNzIEFuaW1hdG9yQ29udHJvbGxlciBleHRlbmRzIENvbXBvc2l0ZUNvbXBvbmVudENvbnRyb2xsZXIge1xyXG5cclxuICAgIHB1YmxpYyBzdGF0aWMgREVGSU5JVElPTiA9IG5ldyBDb21wb25lbnRDb250cm9sbGVyRGVmaW5pdGlvbihcclxuICAgICAgICBcImFuaW1hdG9yXCIsIHt9LCBmYWxzZSxcclxuICAgICAgICAoY29tcG9uZW50OiBDb21wb25lbnQsIGVudGl0eTogRW50aXR5LCBkYXRhOiBhbnkpID0+IG5ldyBBbmltYXRvckNvbnRyb2xsZXIoY29tcG9uZW50LCBlbnRpdHksIGRhdGEpXHJcbiAgICApO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKGNvbXBvbmVudDogQ29tcG9uZW50LCBlbnRpdHk6IEVudGl0eSwgZGF0YTogYW55KSB7XHJcbiAgICAgICAgc3VwZXIoY29tcG9uZW50LCBlbnRpdHksIGRhdGEpO1xyXG4gICAgfVxyXG5cclxuICAgIGluaXQoKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5hZGRGZWF0dXJlKG5ldyBBbmltYXRpb25GZWF0dXJlKHRoaXMsIHRoaXMuZW50aXR5ISEpKTtcclxuICAgICAgICBzdXBlci5pbml0KCk7XHJcbiAgICB9XHJcblxyXG59XHJcblxyXG5cclxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///50\n')},function(module,exports,__webpack_require__){"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nclass AnimationFinishedEventDetails {\r\n    constructor(clip) {\r\n        this.clipName = clip;\r\n    }\r\n}\r\nexports.AnimationFinishedEventDetails = AnimationFinishedEventDetails;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9tb2RlbC9BbmltYXRpb25GaW5pc2hlZEV2ZW50RGV0YWlsLnRzPzhjN2UiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxNQUFhLDZCQUE2QjtJQUl0QyxZQUFZLElBQVk7UUFDcEIsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUM7SUFDekIsQ0FBQztDQUNKO0FBUEQsc0VBT0MiLCJmaWxlIjoiNTEuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY2xhc3MgQW5pbWF0aW9uRmluaXNoZWRFdmVudERldGFpbHMge1xyXG5cclxuICAgIGNsaXBOYW1lOiBzdHJpbmc7XHJcblxyXG4gICAgY29uc3RydWN0b3IoY2xpcDogc3RyaW5nKSB7XHJcbiAgICAgICAgdGhpcy5jbGlwTmFtZSA9IGNsaXA7XHJcbiAgICB9XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///51\n')},function(module,exports,__webpack_require__){"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nconst CompositeComponentController_1 = __webpack_require__(27);\r\nconst AnimationFeature_1 = __webpack_require__(28);\r\nconst ExpressionFeature_1 = __webpack_require__(53);\r\nconst AFrame_1 = __webpack_require__(0);\r\nclass AvatarController extends CompositeComponentController_1.CompositeComponentController {\r\n    constructor(component, entity, data) {\r\n        super(component, entity, data);\r\n    }\r\n    init() {\r\n        this.addFeature(new ExpressionFeature_1.ExpressionFeature(this, this.entity));\r\n        this.addFeature(new AnimationFeature_1.AnimationFeature(this, this.entity));\r\n        super.init();\r\n    }\r\n    tick(time, timeDelta) {\r\n        super.tick(time, timeDelta);\r\n    }\r\n}\r\nAvatarController.DEFINITION = new AFrame_1.ComponentControllerDefinition("avatar", {}, false, (component, entity, data) => new AvatarController(component, entity, data));\r\nexports.AvatarController = AvatarController;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9jb21wb25lbnQvYXZhdGFyL0F2YXRhckNvbnRyb2xsZXIudHM/YjhkZiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtEQUE2RTtBQUM3RSxtREFBMEU7QUFDMUUsb0RBQTRFO0FBRTVFLHdDQUEyRDtBQUUzRCxNQUFhLGdCQUFpQixTQUFRLDJEQUE0QjtJQU85RCxZQUFZLFNBQW9CLEVBQUUsTUFBYyxFQUFFLElBQVM7UUFDdkQsS0FBSyxDQUFDLFNBQVMsRUFBRSxNQUFNLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDbkMsQ0FBQztJQUVELElBQUk7UUFDQSxJQUFJLENBQUMsVUFBVSxDQUFDLElBQUkscUNBQWlCLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxNQUFRLENBQUMsQ0FBQyxDQUFDO1FBQzVELElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxtQ0FBZ0IsQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLE1BQVEsQ0FBQyxDQUFDLENBQUM7UUFDM0QsS0FBSyxDQUFDLElBQUksRUFBRSxDQUFDO0lBQ2pCLENBQUM7SUFFRCxJQUFJLENBQUMsSUFBWSxFQUFFLFNBQWlCO1FBQ2hDLEtBQUssQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLFNBQVMsQ0FBQyxDQUFDO0lBQ2hDLENBQUM7O0FBakJhLDJCQUFVLEdBQUcsSUFBSSxzQ0FBNkIsQ0FDeEQsUUFBUSxFQUFFLEVBQUUsRUFBRSxLQUFLLEVBQ25CLENBQUMsU0FBb0IsRUFBRSxNQUFjLEVBQUUsSUFBUyxFQUFFLEVBQUUsQ0FBQyxJQUFJLGdCQUFnQixDQUFDLFNBQVMsRUFBRSxNQUFNLEVBQUUsSUFBSSxDQUFDLENBQ3JHLENBQUM7QUFMTiw0Q0FxQkMiLCJmaWxlIjoiNTIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NvbXBvc2l0ZUNvbXBvbmVudENvbnRyb2xsZXJ9IGZyb20gXCIuLi9Db21wb3NpdGVDb21wb25lbnRDb250cm9sbGVyXCI7XHJcbmltcG9ydCB7QW5pbWF0aW9uRmVhdHVyZX0gZnJvbSBcIi4uLy4uL2ZlYXR1cmUvYW5pbWF0aW9uL0FuaW1hdGlvbkZlYXR1cmVcIjtcclxuaW1wb3J0IHtFeHByZXNzaW9uRmVhdHVyZX0gZnJvbSBcIi4uLy4uL2ZlYXR1cmUvYW5pbWF0aW9uL0V4cHJlc3Npb25GZWF0dXJlXCI7XHJcbmltcG9ydCB7Q29tcG9uZW50LCBFbnRpdHl9IGZyb20gXCJhZnJhbWVcIjtcclxuaW1wb3J0IHtDb21wb25lbnRDb250cm9sbGVyRGVmaW5pdGlvbn0gZnJvbSBcIi4uLy4uL0FGcmFtZVwiO1xyXG5cclxuZXhwb3J0IGNsYXNzIEF2YXRhckNvbnRyb2xsZXIgZXh0ZW5kcyBDb21wb3NpdGVDb21wb25lbnRDb250cm9sbGVyIHtcclxuXHJcbiAgICBwdWJsaWMgc3RhdGljIERFRklOSVRJT04gPSBuZXcgQ29tcG9uZW50Q29udHJvbGxlckRlZmluaXRpb24oXHJcbiAgICAgICAgXCJhdmF0YXJcIiwge30sIGZhbHNlLFxyXG4gICAgICAgIChjb21wb25lbnQ6IENvbXBvbmVudCwgZW50aXR5OiBFbnRpdHksIGRhdGE6IGFueSkgPT4gbmV3IEF2YXRhckNvbnRyb2xsZXIoY29tcG9uZW50LCBlbnRpdHksIGRhdGEpXHJcbiAgICApO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKGNvbXBvbmVudDogQ29tcG9uZW50LCBlbnRpdHk6IEVudGl0eSwgZGF0YTogYW55KSB7XHJcbiAgICAgICAgc3VwZXIoY29tcG9uZW50LCBlbnRpdHksIGRhdGEpO1xyXG4gICAgfVxyXG5cclxuICAgIGluaXQoKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5hZGRGZWF0dXJlKG5ldyBFeHByZXNzaW9uRmVhdHVyZSh0aGlzLCB0aGlzLmVudGl0eSEhKSk7XHJcbiAgICAgICAgdGhpcy5hZGRGZWF0dXJlKG5ldyBBbmltYXRpb25GZWF0dXJlKHRoaXMsIHRoaXMuZW50aXR5ISEpKTtcclxuICAgICAgICBzdXBlci5pbml0KCk7XHJcbiAgICB9XHJcblxyXG4gICAgdGljayh0aW1lOiBudW1iZXIsIHRpbWVEZWx0YTogbnVtYmVyKTogdm9pZCB7XHJcbiAgICAgICAgc3VwZXIudGljayh0aW1lLCB0aW1lRGVsdGEpO1xyXG4gICAgfVxyXG5cclxufVxyXG5cclxuXHJcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///52\n')},function(module,exports,__webpack_require__){"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nconst AnimateEventDetail_1 = __webpack_require__(29);\r\nconst Events_1 = __webpack_require__(9);\r\nconst AnimationLoopStyle_1 = __webpack_require__(30);\r\nconst AbstractFeature_1 = __webpack_require__(31);\r\nclass ExpressionFeature extends AbstractFeature_1.AbstractFeature {\r\n    constructor(controller, entity) {\r\n        super("expression-controller", controller, entity);\r\n        this.expressions = new Set();\r\n    }\r\n    init() {\r\n        /*this.addEventListener(Events.EVENT_STATE_BEGIN, (detail: EntityStateEventDetail) => {\r\n            if (detail.state === "forward" ||\r\n                detail.state === "backward" ||\r\n                detail.state === "left" ||\r\n                detail.state === "right") {\r\n                this.dispatchEvent(Events.EVENT_ANIMATE_BEGIN, new AnimationEventDetail("walking", AnimationLoopStyle.LOOP_REPEAT, 10));\r\n                this.expressions.add("walking");\r\n            }\r\n        });\r\n        this.addEventListener(Events.EVENT_STATE_END, (detail: EntityStateEventDetail) => {\r\n            if (detail.state === "forward" ||\r\n                detail.state === "backward" ||\r\n                detail.state === "left" ||\r\n                detail.state === "right") {\r\n                this.dispatchEvent(Events.EVENT_ANIMATE_END, new AnimationEventDetail("walking", AnimationLoopStyle.LOOP_REPEAT, 10));\r\n            }\r\n        });*/\r\n        this.addEventListener(Events_1.Events.EVENT_STATE_BEGIN, (detail) => {\r\n            if (detail.state === "moving") {\r\n                this.dispatchEvent(Events_1.Events.EVENT_ANIMATE_BEGIN, new AnimateEventDetail_1.AnimationEventDetail("walking", AnimationLoopStyle_1.AnimationLoopStyle.LOOP_REPEAT, -1));\r\n            }\r\n        });\r\n        this.addEventListener(Events_1.Events.EVENT_STATE_END, (detail) => {\r\n            if (detail.state === "moving") {\r\n                this.dispatchEvent(Events_1.Events.EVENT_ANIMATE_END, new AnimateEventDetail_1.AnimationEventDetail("walking", AnimationLoopStyle_1.AnimationLoopStyle.LOOP_REPEAT, 10));\r\n            }\r\n        });\r\n    }\r\n    update(data, oldData) {\r\n    }\r\n    remove() {\r\n    }\r\n    pause() {\r\n    }\r\n    play() {\r\n    }\r\n    tick(time, timeDelta) {\r\n    }\r\n}\r\nexports.ExpressionFeature = ExpressionFeature;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9mZWF0dXJlL2FuaW1hdGlvbi9FeHByZXNzaW9uRmVhdHVyZS50cz9kMDQ4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBRUEscURBQW9FO0FBR3BFLHdDQUEwQztBQUMxQyxxREFBd0Q7QUFFeEQsa0RBQW1EO0FBR25ELE1BQWEsaUJBQWtCLFNBQVEsaUNBQWU7SUFJbEQsWUFBWSxVQUErQixFQUFFLE1BQWM7UUFDdkQsS0FBSyxDQUFDLHVCQUF1QixFQUFFLFVBQVUsRUFBRSxNQUFNLENBQUMsQ0FBQztRQUh2RCxnQkFBVyxHQUFnQixJQUFJLEdBQUcsRUFBRSxDQUFDO0lBSXJDLENBQUM7SUFFRCxJQUFJO1FBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7YUFnQks7UUFDTCxJQUFJLENBQUMsZ0JBQWdCLENBQUMsZUFBTSxDQUFDLGlCQUFpQixFQUFFLENBQUMsTUFBOEIsRUFBRSxFQUFFO1lBQy9FLElBQUksTUFBTSxDQUFDLEtBQUssS0FBSyxRQUFRLEVBQUU7Z0JBQzNCLElBQUksQ0FBQyxhQUFhLENBQUMsZUFBTSxDQUFDLG1CQUFtQixFQUFFLElBQUkseUNBQW9CLENBQUMsU0FBUyxFQUFFLHVDQUFrQixDQUFDLFdBQVcsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7YUFDM0g7UUFDTCxDQUFDLENBQUMsQ0FBQztRQUNILElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxlQUFNLENBQUMsZUFBZSxFQUFFLENBQUMsTUFBOEIsRUFBRSxFQUFFO1lBQzdFLElBQUksTUFBTSxDQUFDLEtBQUssS0FBSyxRQUFRLEVBQUU7Z0JBQzNCLElBQUksQ0FBQyxhQUFhLENBQUMsZUFBTSxDQUFDLGlCQUFpQixFQUFFLElBQUkseUNBQW9CLENBQUMsU0FBUyxFQUFFLHVDQUFrQixDQUFDLFdBQVcsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDO2FBQ3pIO1FBQ0wsQ0FBQyxDQUFDLENBQUM7SUFDUCxDQUFDO0lBRUQsTUFBTSxDQUFDLElBQVMsRUFBRSxPQUFZO0lBQzlCLENBQUM7SUFFRCxNQUFNO0lBQ04sQ0FBQztJQUVELEtBQUs7SUFDTCxDQUFDO0lBRUQsSUFBSTtJQUNKLENBQUM7SUFFRCxJQUFJLENBQUMsSUFBWSxFQUFFLFNBQWlCO0lBQ3BDLENBQUM7Q0FDSjtBQXBERCw4Q0FvREMiLCJmaWxlIjoiNTMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NvbXBvbmVudENvbnRyb2xsZXJ9IGZyb20gXCIuLi8uLi9jb21wb25lbnQvQ29tcG9uZW50Q29udHJvbGxlclwiO1xyXG5pbXBvcnQge0FuaW1hdGlvbkFjdGlvbiwgQW5pbWF0aW9uQ2xpcCwgQW5pbWF0aW9uTWl4ZXIsIEV2ZW50LCBMb29wT25jZSwgTG9vcFBpbmdQb25nLCBMb29wUmVwZWF0fSBmcm9tIFwidGhyZWVcIjtcclxuaW1wb3J0IHtBbmltYXRpb25FdmVudERldGFpbH0gZnJvbSBcIi4uLy4uL21vZGVsL0FuaW1hdGVFdmVudERldGFpbFwiO1xyXG5pbXBvcnQge0FuaW1hdGlvbkVuZEV2ZW50RGV0YWlsfSBmcm9tIFwiLi4vLi4vbW9kZWwvQW5pbWF0ZUVuZEV2ZW50RGV0YWlsXCI7XHJcbmltcG9ydCB7QW5pbWF0aW9uRmluaXNoZWRFdmVudERldGFpbHN9IGZyb20gXCIuLi8uLi9tb2RlbC9BbmltYXRpb25GaW5pc2hlZEV2ZW50RGV0YWlsXCI7XHJcbmltcG9ydCB7RXZlbnRzfSBmcm9tIFwiLi4vLi4vbW9kZWwvRXZlbnRzXCI7XHJcbmltcG9ydCB7QW5pbWF0aW9uTG9vcFN0eWxlfSBmcm9tIFwiLi9BbmltYXRpb25Mb29wU3R5bGVcIjtcclxuaW1wb3J0IHtFbnRpdHl9IGZyb20gXCJhZnJhbWVcIjtcclxuaW1wb3J0IHtBYnN0cmFjdEZlYXR1cmV9IGZyb20gXCIuLi9BYnN0cmFjdEZlYXR1cmVcIjtcclxuaW1wb3J0IHtFbnRpdHlTdGF0ZUV2ZW50RGV0YWlsfSBmcm9tIFwiLi4vLi4vbW9kZWwvRW50aXR5U3RhdGVFdmVudERldGFpbFwiO1xyXG5cclxuZXhwb3J0IGNsYXNzIEV4cHJlc3Npb25GZWF0dXJlIGV4dGVuZHMgQWJzdHJhY3RGZWF0dXJlIHtcclxuXHJcbiAgICBleHByZXNzaW9uczogU2V0PHN0cmluZz4gPSBuZXcgU2V0KCk7XHJcblxyXG4gICAgY29uc3RydWN0b3IoY29udHJvbGxlcjogQ29tcG9uZW50Q29udHJvbGxlciwgZW50aXR5OiBFbnRpdHkpIHtcclxuICAgICAgICBzdXBlcihcImV4cHJlc3Npb24tY29udHJvbGxlclwiLCBjb250cm9sbGVyLCBlbnRpdHkpO1xyXG4gICAgfVxyXG5cclxuICAgIGluaXQoKTogdm9pZCB7XHJcbiAgICAgICAgLyp0aGlzLmFkZEV2ZW50TGlzdGVuZXIoRXZlbnRzLkVWRU5UX1NUQVRFX0JFR0lOLCAoZGV0YWlsOiBFbnRpdHlTdGF0ZUV2ZW50RGV0YWlsKSA9PiB7XHJcbiAgICAgICAgICAgIGlmIChkZXRhaWwuc3RhdGUgPT09IFwiZm9yd2FyZFwiIHx8XHJcbiAgICAgICAgICAgICAgICBkZXRhaWwuc3RhdGUgPT09IFwiYmFja3dhcmRcIiB8fFxyXG4gICAgICAgICAgICAgICAgZGV0YWlsLnN0YXRlID09PSBcImxlZnRcIiB8fFxyXG4gICAgICAgICAgICAgICAgZGV0YWlsLnN0YXRlID09PSBcInJpZ2h0XCIpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuZGlzcGF0Y2hFdmVudChFdmVudHMuRVZFTlRfQU5JTUFURV9CRUdJTiwgbmV3IEFuaW1hdGlvbkV2ZW50RGV0YWlsKFwid2Fsa2luZ1wiLCBBbmltYXRpb25Mb29wU3R5bGUuTE9PUF9SRVBFQVQsIDEwKSk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmV4cHJlc3Npb25zLmFkZChcIndhbGtpbmdcIik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgICAgICB0aGlzLmFkZEV2ZW50TGlzdGVuZXIoRXZlbnRzLkVWRU5UX1NUQVRFX0VORCwgKGRldGFpbDogRW50aXR5U3RhdGVFdmVudERldGFpbCkgPT4ge1xyXG4gICAgICAgICAgICBpZiAoZGV0YWlsLnN0YXRlID09PSBcImZvcndhcmRcIiB8fFxyXG4gICAgICAgICAgICAgICAgZGV0YWlsLnN0YXRlID09PSBcImJhY2t3YXJkXCIgfHxcclxuICAgICAgICAgICAgICAgIGRldGFpbC5zdGF0ZSA9PT0gXCJsZWZ0XCIgfHxcclxuICAgICAgICAgICAgICAgIGRldGFpbC5zdGF0ZSA9PT0gXCJyaWdodFwiKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmRpc3BhdGNoRXZlbnQoRXZlbnRzLkVWRU5UX0FOSU1BVEVfRU5ELCBuZXcgQW5pbWF0aW9uRXZlbnREZXRhaWwoXCJ3YWxraW5nXCIsIEFuaW1hdGlvbkxvb3BTdHlsZS5MT09QX1JFUEVBVCwgMTApKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pOyovXHJcbiAgICAgICAgdGhpcy5hZGRFdmVudExpc3RlbmVyKEV2ZW50cy5FVkVOVF9TVEFURV9CRUdJTiwgKGRldGFpbDogRW50aXR5U3RhdGVFdmVudERldGFpbCkgPT4ge1xyXG4gICAgICAgICAgICBpZiAoZGV0YWlsLnN0YXRlID09PSBcIm1vdmluZ1wiKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmRpc3BhdGNoRXZlbnQoRXZlbnRzLkVWRU5UX0FOSU1BVEVfQkVHSU4sIG5ldyBBbmltYXRpb25FdmVudERldGFpbChcIndhbGtpbmdcIiwgQW5pbWF0aW9uTG9vcFN0eWxlLkxPT1BfUkVQRUFULCAtMSkpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgdGhpcy5hZGRFdmVudExpc3RlbmVyKEV2ZW50cy5FVkVOVF9TVEFURV9FTkQsIChkZXRhaWw6IEVudGl0eVN0YXRlRXZlbnREZXRhaWwpID0+IHtcclxuICAgICAgICAgICAgaWYgKGRldGFpbC5zdGF0ZSA9PT0gXCJtb3ZpbmdcIikge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5kaXNwYXRjaEV2ZW50KEV2ZW50cy5FVkVOVF9BTklNQVRFX0VORCwgbmV3IEFuaW1hdGlvbkV2ZW50RGV0YWlsKFwid2Fsa2luZ1wiLCBBbmltYXRpb25Mb29wU3R5bGUuTE9PUF9SRVBFQVQsIDEwKSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICB1cGRhdGUoZGF0YTogYW55LCBvbGREYXRhOiBhbnkpOiB2b2lkIHtcclxuICAgIH1cclxuXHJcbiAgICByZW1vdmUoKTogdm9pZCB7XHJcbiAgICB9XHJcblxyXG4gICAgcGF1c2UoKTogdm9pZCB7XHJcbiAgICB9XHJcblxyXG4gICAgcGxheSgpOiB2b2lkIHtcclxuICAgIH1cclxuXHJcbiAgICB0aWNrKHRpbWU6IG51bWJlciwgdGltZURlbHRhOiBudW1iZXIpOiB2b2lkIHtcclxuICAgIH1cclxufVxyXG5cclxuXHJcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///53\n')},function(module,exports,__webpack_require__){"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nconst reality_space_1 = __webpack_require__(55);\r\nconst uuid = __webpack_require__(12);\r\nconst three_1 = __webpack_require__(2);\r\nconst Events_1 = __webpack_require__(9);\r\nconst DynamicSpace_1 = __webpack_require__(86);\r\nconst StaticSpace_1 = __webpack_require__(89);\r\nconst AbstractSystemController_1 = __webpack_require__(17);\r\nconst AFrame_1 = __webpack_require__(0);\r\nclass SpaceSystemController extends AbstractSystemController_1.AbstractSystemController {\r\n    constructor(system, scene, data) {\r\n        super(system, scene, data);\r\n        this.clusterUrl = undefined;\r\n        this.avatarId = uuid.v4();\r\n        this.playerElement = null;\r\n        this.cameraElement = null;\r\n        this.playerObject = undefined;\r\n        this.client = undefined;\r\n        this.dynamicSpace = undefined;\r\n        this.staticSpace = undefined;\r\n        this.lastRefresh = 0;\r\n        this.yAxisPositive = new three_1.Vector3(0, 1, 0);\r\n        this.xzPlane = new three_1.Plane(this.yAxisPositive);\r\n        this.cameraDirection = new three_1.Vector3(0, 0, 0);\r\n        this.xzDirection = new three_1.Vector3(0, 0, 0);\r\n        this.directionMatrix = new three_1.Matrix4();\r\n        this.directionQuaternion = new three_1.Quaternion();\r\n        this.dynamicSpace = new DynamicSpace_1.DynamicSpace(this.scene, this.avatarId);\r\n        this.staticSpace = new StaticSpace_1.StaticSpace(this.scene);\r\n        this.clusterUrl = this.data;\r\n        fetch(\'/api/users/current/id-token\')\r\n            .then((response) => {\r\n            response.text().then((data) => {\r\n                //console.log(data);\r\n                this.idToken = data;\r\n            });\r\n        }).catch((err) => {\r\n            console.error(err);\r\n        });\r\n    }\r\n    init() {\r\n    }\r\n    pause() {\r\n        if (this.client) {\r\n            this.client.close();\r\n            this.client = undefined;\r\n        }\r\n    }\r\n    play() {\r\n    }\r\n    tick(time, timeDelta) {\r\n        if (!this.client) {\r\n            this.setupClient();\r\n        }\r\n        else {\r\n            this.dynamicSpace.simulate(timeDelta / 1000);\r\n            if (time - this.lastRefresh > 150) {\r\n                if (this.playerObject && this.cameraObject) {\r\n                    if (this.client.clusterConfiguration) {\r\n                        this.cameraObject.getWorldDirection(this.cameraDirection);\r\n                        //this.cameraDirection.multiplyScalar(-1);\r\n                        this.xzPlane.projectPoint(this.cameraDirection, this.xzDirection);\r\n                        this.xzDirection.normalize();\r\n                        this.directionMatrix.lookAt(new three_1.Vector3(0, 0, 0), this.xzDirection, this.yAxisPositive);\r\n                        this.directionQuaternion.setFromRotationMatrix(this.directionMatrix);\r\n                        this.client.refresh(this.playerObject.position.x, this.playerObject.position.y, this.playerObject.position.z, this.directionQuaternion.x, this.directionQuaternion.y, this.directionQuaternion.z, this.directionQuaternion.w);\r\n                    }\r\n                }\r\n                this.lastRefresh = time;\r\n            }\r\n        }\r\n    }\r\n    setupClient() {\r\n        if (!this.clusterUrl || !this.idToken) {\r\n            return;\r\n        }\r\n        this.playerElement = document.querySelector("[interface]");\r\n        this.cameraElement = this.playerElement.querySelector(\'[camera]\');\r\n        if (!this.playerElement) {\r\n            console.log("dataspace - did not find player element in dom.");\r\n        }\r\n        else {\r\n            this.playerElement.addEventListener(Events_1.Events.EVENT_STATE_BEGIN, ((e) => {\r\n                if (this.client && this.client.clusterConfiguration) {\r\n                    //console.log(e.detail);\r\n                    this.client.act(this.avatarId, Events_1.Events.EVENT_STATE_BEGIN, e.detail.state);\r\n                }\r\n            }));\r\n            this.playerElement.addEventListener(Events_1.Events.EVENT_STATE_END, ((e) => {\r\n                if (this.client && this.client.clusterConfiguration) {\r\n                    //console.log(e.detail);\r\n                    this.client.act(this.avatarId, Events_1.Events.EVENT_STATE_END, e.detail.state);\r\n                }\r\n            }));\r\n        }\r\n        if (!this.cameraElement) {\r\n            console.log("dataspace - did not find camera element in dom.");\r\n        }\r\n        console.log(this.systemName + " setting up client...");\r\n        if (this.playerElement && this.cameraElement) {\r\n            if (!this.playerObject || !this.cameraObject) {\r\n                this.playerObject = this.playerElement.object3D;\r\n                if (this.cameraElement) {\r\n                    this.cameraObject = this.cameraElement.object3D;\r\n                }\r\n                if (!this.playerObject) {\r\n                    console.log("No player object.");\r\n                }\r\n                if (!this.cameraObject) {\r\n                    console.log("No camera object.");\r\n                }\r\n            }\r\n        }\r\n        if (this.playerObject && this.cameraObject) {\r\n            this.client = new reality_space_1.ClusterClient(this.clusterUrl, "default", this.avatarId, this.playerObject.position.x, this.playerObject.position.y, this.playerObject.position.z, this.cameraObject.quaternion.x, this.cameraObject.quaternion.y, this.cameraObject.quaternion.z, this.cameraObject.quaternion.w, \'<a-entity gltf-model="#robot" scale="0.3 0.3 0.3" avatar=""></a-entity>\', this.idToken);\r\n            this.client.onReceive = (region, type, message) => {\r\n                //console.log(message);\r\n                if (type === reality_space_1.Encode.ADDED) {\r\n                    const m = reality_space_1.Decode.added(message);\r\n                    this.dynamicSpace.added(region, m[0], m[1], m[2], m[3], m[4], m[5], m[6], m[7], m[8], m[9]);\r\n                }\r\n                if (type === reality_space_1.Encode.UPDATED) {\r\n                    const m = reality_space_1.Decode.updated(message);\r\n                    this.dynamicSpace.updated(region, m[0], m[1], m[2], m[3], m[4], m[5], m[6], m[7]);\r\n                }\r\n                if (type === reality_space_1.Encode.REMOVED) {\r\n                    const m = reality_space_1.Decode.removed(message);\r\n                    this.dynamicSpace.removed(region, m[0], m[1]);\r\n                }\r\n                if (type === reality_space_1.Encode.DESCRIBED) {\r\n                    const m = reality_space_1.Decode.described(message);\r\n                    this.dynamicSpace.described(region, m[0], m[1]);\r\n                }\r\n                if (type === reality_space_1.Encode.ACTED) {\r\n                    const m = reality_space_1.Decode.acted(message);\r\n                    this.dynamicSpace.acted(region, m[0], m[1], m[2]);\r\n                }\r\n            };\r\n            this.client.onStoredRootEntityReceived = (region, sid, entityXml) => {\r\n                this.staticSpace.setRootEntity(region, sid, entityXml);\r\n            };\r\n            this.client.onStoredChildEntityReceived = (region, parentSid, sid, entityXml) => {\r\n                this.staticSpace.setChildEntity(region, parentSid, sid, entityXml);\r\n            };\r\n            this.client.onStoredEntityRemoved = (region, sid) => {\r\n                this.staticSpace.removeEntity(region, sid);\r\n            };\r\n            this.client.onConnect = (region) => {\r\n                console.log("dataspace - connected: " + region);\r\n                this.dynamicSpace.connected(region);\r\n                this.staticSpace.connected(region);\r\n            };\r\n            this.client.onDisconnect = (region) => {\r\n                console.log("dataspace - disconnected: " + region);\r\n                this.dynamicSpace.disconnected(region);\r\n                this.staticSpace.disconnected(region);\r\n            };\r\n            this.client.connect().catch((error) => {\r\n                console.warn("dataspace - cluster client connect error.", error);\r\n                this.client = undefined;\r\n            });\r\n        }\r\n    }\r\n}\r\nSpaceSystemController.DEFINITION = new AFrame_1.SystemControllerDefinition("space", { type: \'string\', default: \'?\' }, (system, scene, data) => new SpaceSystemController(system, scene, data));\r\nexports.SpaceSystemController = SpaceSystemController;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///54\n')},function(module,exports,__webpack_require__){"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nvar RealityClient_1 = __webpack_require__(32);\r\nexports.RealityClient = RealityClient_1.RealityClient;\r\nvar ClusterClient_1 = __webpack_require__(82);\r\nexports.ClusterClient = ClusterClient_1.ClusterClient;\r\nvar Encode_1 = __webpack_require__(11);\r\nexports.Encode = Encode_1.Encode;\r\nvar Decode_1 = __webpack_require__(43);\r\nexports.Decode = Decode_1.Decode;\r\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhbGl0eS1zcGFjZS9saWIvc3JjL2luZGV4LmpzPzczMTMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBOEMsY0FBYztBQUM1RCxzQkFBc0IsbUJBQU8sQ0FBQyxFQUFnQztBQUM5RDtBQUNBLHNCQUFzQixtQkFBTyxDQUFDLEVBQWdDO0FBQzlEO0FBQ0EsZUFBZSxtQkFBTyxDQUFDLEVBQXlCO0FBQ2hEO0FBQ0EsZUFBZSxtQkFBTyxDQUFDLEVBQXlCO0FBQ2hEO0FBQ0EiLCJmaWxlIjoiNTUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcclxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xyXG52YXIgUmVhbGl0eUNsaWVudF8xID0gcmVxdWlyZShcIi4vY29tbW9uL3JlYWxpdHkvUmVhbGl0eUNsaWVudFwiKTtcclxuZXhwb3J0cy5SZWFsaXR5Q2xpZW50ID0gUmVhbGl0eUNsaWVudF8xLlJlYWxpdHlDbGllbnQ7XHJcbnZhciBDbHVzdGVyQ2xpZW50XzEgPSByZXF1aXJlKFwiLi9jb21tb24vcmVhbGl0eS9DbHVzdGVyQ2xpZW50XCIpO1xyXG5leHBvcnRzLkNsdXN0ZXJDbGllbnQgPSBDbHVzdGVyQ2xpZW50XzEuQ2x1c3RlckNsaWVudDtcclxudmFyIEVuY29kZV8xID0gcmVxdWlyZShcIi4vY29tbW9uL3JlYWxpdHkvRW5jb2RlXCIpO1xyXG5leHBvcnRzLkVuY29kZSA9IEVuY29kZV8xLkVuY29kZTtcclxudmFyIERlY29kZV8xID0gcmVxdWlyZShcIi4vY29tbW9uL3JlYWxpdHkvRGVjb2RlXCIpO1xyXG5leHBvcnRzLkRlY29kZSA9IERlY29kZV8xLkRlY29kZTtcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///55\n')},function(module,exports,__webpack_require__){"use strict";eval('\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nconst uuid = __webpack_require__(12);\r\nconst GroupMember_1 = __webpack_require__(59);\r\nconst GroupPrivilege_1 = __webpack_require__(60);\r\nconst UserPrivilege_1 = __webpack_require__(61);\r\nconst DocumentController_1 = __webpack_require__(62);\r\nclass StorageClient {\r\n    constructor(spaceName, region, storageUrl, cdnUrl, idToken) {\r\n        this.spaceName = spaceName;\r\n        this.region = region;\r\n        this.storageUrl = storageUrl;\r\n        this.cdnUrl = cdnUrl;\r\n        this.idToken = idToken;\r\n    }\r\n    getRootEntitiesFromCdn() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const entitiesXmlUrl = this.cdnUrl + "spaces/" + this.spaceName + "/regions/" + this.region + "/entities.xml";\r\n            const response = (yield fetch(entitiesXmlUrl, {\r\n                method: "GET",\r\n                headers: { "Authorization": "Bearer " + this.idToken, "Request-ID": uuid.v4() }\r\n            }));\r\n            if (response.status != 200) {\r\n                console.log("Error loading stored entities from assets " + entitiesXmlUrl + " : " + response.status.toString());\r\n                return DocumentController_1.DocumentController.EMPTY_FRAGMENT;\r\n            }\r\n            return yield response.text();\r\n        });\r\n    }\r\n    getRootEntities() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return this.getText(yield this.request("GET", "/entities", [200]));\r\n        });\r\n    }\r\n    ;\r\n    getEntity(sid) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return this.getText(yield this.request("GET", "/entities/" + sid, [200, 404]));\r\n        });\r\n    }\r\n    saveRootEntities(fragmentXml) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return this.getText(yield this.requestWithTextBody("POST", "/entities", fragmentXml, [200]));\r\n        });\r\n    }\r\n    saveChildEntities(parentSid, fragmentXml) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return this.getText(yield this.requestWithTextBody("POST", "/entities/" + parentSid + "/entities", fragmentXml, [200]));\r\n        });\r\n    }\r\n    removeEntity(sid) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            yield this.request("DELETE", "/entities/" + sid, [200]);\r\n        });\r\n    }\r\n    getUsers() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return this.parse(yield this.request("GET", "/users", [200]));\r\n        });\r\n    }\r\n    ;\r\n    getUser(id) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return this.parseOptional(yield this.request("GET", "/users/" + id, [200, 404]));\r\n        });\r\n    }\r\n    addUser(user) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return this.parse(yield this.requestWithBody("POST", "/users", user, [200]));\r\n        });\r\n    }\r\n    updateUser(user) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return this.parse(yield this.requestWithBody("PUT", "/users/" + user.id, user, [200]));\r\n        });\r\n    }\r\n    removeUser(id) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            yield this.request("DELETE", "/users/" + id, [200]);\r\n        });\r\n    }\r\n    getGroups() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return this.parse(yield this.request("GET", "/groups", [200]));\r\n        });\r\n    }\r\n    ;\r\n    getGroup(name) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return this.parseOptional(yield this.request("GET", "/groups/" + name, [200, 404]));\r\n        });\r\n    }\r\n    addGroup(group) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return this.parse(yield this.requestWithBody("POST", "/groups", group, [200]));\r\n        });\r\n    }\r\n    removeGroup(name) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            yield this.request("DELETE", "/groups/" + name, [200]);\r\n        });\r\n    }\r\n    addGroupMember(groupName, userId) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return this.parse(yield this.requestWithBody("POST", "/groups/" + groupName + "/members", new GroupMember_1.GroupMember(groupName, userId), [200]));\r\n        });\r\n    }\r\n    removeGroupMember(groupName, userId) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            yield this.request("DELETE", "/groups/" + groupName + "/members/" + userId, [200]);\r\n        });\r\n    }\r\n    getUserPrivileges(userId) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return this.parse(yield this.request("GET", "/users/" + userId + "/privileges", [200]));\r\n        });\r\n    }\r\n    getGroupPrivileges(name) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return this.parse(yield this.request("GET", "/groups/" + name + "/privileges", [200]));\r\n        });\r\n    }\r\n    setUserPrivilege(userId, sid, type) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return this.parse(yield this.requestWithBody("POST", "/users/" + userId + "/privileges", new UserPrivilege_1.UserPrivilege(type, userId, sid), [200]));\r\n        });\r\n    }\r\n    setGroupPrivilege(groupName, sid, type) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return this.parse(yield this.requestWithBody("POST", "/groups/" + groupName + "/privileges", new GroupPrivilege_1.GroupPrivilege(type, groupName, sid), [200]));\r\n        });\r\n    }\r\n    removeUserPrivilege(userId, sid) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            yield this.request("DELETE", "/users/" + userId + "/privileges/" + sid, [200]);\r\n        });\r\n    }\r\n    removeGroupPrivilege(groupName, sid) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            yield this.request("DELETE", "/groups/" + groupName + "/privileges/" + sid, [200]);\r\n        });\r\n    }\r\n    request(method, path, successStatuses) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const response = (yield fetch(this.storageUrl + "spaces/" + this.spaceName + "/regions/" + this.region + path, {\r\n                method: method,\r\n                headers: { "Authorization": "Bearer " + this.idToken, "Request-ID": uuid.v4() }\r\n            }));\r\n            if (successStatuses.indexOf(response.status) == -1) {\r\n                throw new Error(response.status.toString());\r\n            }\r\n            return response;\r\n        });\r\n    }\r\n    requestWithBody(method, path, body, successStatuses) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const response = (yield fetch(this.storageUrl + "spaces/" + this.spaceName + "/regions/" + this.region + path, {\r\n                method: method,\r\n                headers: { "Authorization": "Bearer " + this.idToken, "Request-ID": uuid.v4() },\r\n                body: JSON.stringify(body)\r\n            }));\r\n            if (successStatuses.indexOf(response.status) == -1) {\r\n                throw new Error(response.status.toString());\r\n            }\r\n            return response;\r\n        });\r\n    }\r\n    requestWithTextBody(method, path, body, successStatuses) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const response = (yield fetch(this.storageUrl + "spaces/" + this.spaceName + "/regions/" + this.region + path, {\r\n                method: method,\r\n                headers: { "Authorization": "Bearer " + this.idToken, "Request-ID": uuid.v4() },\r\n                body: body\r\n            }));\r\n            if (successStatuses.indexOf(response.status) == -1) {\r\n                throw new Error(response.status.toString());\r\n            }\r\n            return response;\r\n        });\r\n    }\r\n    parse(response) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return yield response.json();\r\n        });\r\n    }\r\n    parseOptional(response) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (response.status == 404) {\r\n                return undefined;\r\n            }\r\n            else {\r\n                return yield response.json();\r\n            }\r\n        });\r\n    }\r\n    getText(response) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return yield response.text();\r\n        });\r\n    }\r\n}\r\nexports.StorageClient = StorageClient;\r\n//# sourceMappingURL=StorageClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///56\n')},function(module,exports,__webpack_require__){eval("var rng = __webpack_require__(33);\nvar bytesToUuid = __webpack_require__(34);\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\nvar _clockseq;\n\n// Previous uuid creation time\nvar _lastMSecs = 0;\nvar _lastNSecs = 0;\n\n// See https://github.com/broofa/node-uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n  if (node == null || clockseq == null) {\n    var seedBytes = rng();\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [\n        seedBytes[0] | 0x01,\n        seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]\n      ];\n    }\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  }\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : bytesToUuid(b);\n}\n\nmodule.exports = v1;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdXVpZC92MS5qcz9jNDM3Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLFVBQVUsbUJBQU8sQ0FBQyxFQUFXO0FBQzdCLGtCQUFrQixtQkFBTyxDQUFDLEVBQW1COztBQUU3QztBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsbUNBQW1DO0FBQ25DOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBLGlCQUFpQixPQUFPO0FBQ3hCO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSIsImZpbGUiOiI1Ny5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBybmcgPSByZXF1aXJlKCcuL2xpYi9ybmcnKTtcbnZhciBieXRlc1RvVXVpZCA9IHJlcXVpcmUoJy4vbGliL2J5dGVzVG9VdWlkJyk7XG5cbi8vICoqYHYxKClgIC0gR2VuZXJhdGUgdGltZS1iYXNlZCBVVUlEKipcbi8vXG4vLyBJbnNwaXJlZCBieSBodHRwczovL2dpdGh1Yi5jb20vTGlvc0svVVVJRC5qc1xuLy8gYW5kIGh0dHA6Ly9kb2NzLnB5dGhvbi5vcmcvbGlicmFyeS91dWlkLmh0bWxcblxudmFyIF9ub2RlSWQ7XG52YXIgX2Nsb2Nrc2VxO1xuXG4vLyBQcmV2aW91cyB1dWlkIGNyZWF0aW9uIHRpbWVcbnZhciBfbGFzdE1TZWNzID0gMDtcbnZhciBfbGFzdE5TZWNzID0gMDtcblxuLy8gU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9icm9vZmEvbm9kZS11dWlkIGZvciBBUEkgZGV0YWlsc1xuZnVuY3Rpb24gdjEob3B0aW9ucywgYnVmLCBvZmZzZXQpIHtcbiAgdmFyIGkgPSBidWYgJiYgb2Zmc2V0IHx8IDA7XG4gIHZhciBiID0gYnVmIHx8IFtdO1xuXG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICB2YXIgbm9kZSA9IG9wdGlvbnMubm9kZSB8fCBfbm9kZUlkO1xuICB2YXIgY2xvY2tzZXEgPSBvcHRpb25zLmNsb2Nrc2VxICE9PSB1bmRlZmluZWQgPyBvcHRpb25zLmNsb2Nrc2VxIDogX2Nsb2Nrc2VxO1xuXG4gIC8vIG5vZGUgYW5kIGNsb2Nrc2VxIG5lZWQgdG8gYmUgaW5pdGlhbGl6ZWQgdG8gcmFuZG9tIHZhbHVlcyBpZiB0aGV5J3JlIG5vdFxuICAvLyBzcGVjaWZpZWQuICBXZSBkbyB0aGlzIGxhemlseSB0byBtaW5pbWl6ZSBpc3N1ZXMgcmVsYXRlZCB0byBpbnN1ZmZpY2llbnRcbiAgLy8gc3lzdGVtIGVudHJvcHkuICBTZWUgIzE4OVxuICBpZiAobm9kZSA9PSBudWxsIHx8IGNsb2Nrc2VxID09IG51bGwpIHtcbiAgICB2YXIgc2VlZEJ5dGVzID0gcm5nKCk7XG4gICAgaWYgKG5vZGUgPT0gbnVsbCkge1xuICAgICAgLy8gUGVyIDQuNSwgY3JlYXRlIGFuZCA0OC1iaXQgbm9kZSBpZCwgKDQ3IHJhbmRvbSBiaXRzICsgbXVsdGljYXN0IGJpdCA9IDEpXG4gICAgICBub2RlID0gX25vZGVJZCA9IFtcbiAgICAgICAgc2VlZEJ5dGVzWzBdIHwgMHgwMSxcbiAgICAgICAgc2VlZEJ5dGVzWzFdLCBzZWVkQnl0ZXNbMl0sIHNlZWRCeXRlc1szXSwgc2VlZEJ5dGVzWzRdLCBzZWVkQnl0ZXNbNV1cbiAgICAgIF07XG4gICAgfVxuICAgIGlmIChjbG9ja3NlcSA9PSBudWxsKSB7XG4gICAgICAvLyBQZXIgNC4yLjIsIHJhbmRvbWl6ZSAoMTQgYml0KSBjbG9ja3NlcVxuICAgICAgY2xvY2tzZXEgPSBfY2xvY2tzZXEgPSAoc2VlZEJ5dGVzWzZdIDw8IDggfCBzZWVkQnl0ZXNbN10pICYgMHgzZmZmO1xuICAgIH1cbiAgfVxuXG4gIC8vIFVVSUQgdGltZXN0YW1wcyBhcmUgMTAwIG5hbm8tc2Vjb25kIHVuaXRzIHNpbmNlIHRoZSBHcmVnb3JpYW4gZXBvY2gsXG4gIC8vICgxNTgyLTEwLTE1IDAwOjAwKS4gIEpTTnVtYmVycyBhcmVuJ3QgcHJlY2lzZSBlbm91Z2ggZm9yIHRoaXMsIHNvXG4gIC8vIHRpbWUgaXMgaGFuZGxlZCBpbnRlcm5hbGx5IGFzICdtc2VjcycgKGludGVnZXIgbWlsbGlzZWNvbmRzKSBhbmQgJ25zZWNzJ1xuICAvLyAoMTAwLW5hbm9zZWNvbmRzIG9mZnNldCBmcm9tIG1zZWNzKSBzaW5jZSB1bml4IGVwb2NoLCAxOTcwLTAxLTAxIDAwOjAwLlxuICB2YXIgbXNlY3MgPSBvcHRpb25zLm1zZWNzICE9PSB1bmRlZmluZWQgPyBvcHRpb25zLm1zZWNzIDogbmV3IERhdGUoKS5nZXRUaW1lKCk7XG5cbiAgLy8gUGVyIDQuMi4xLjIsIHVzZSBjb3VudCBvZiB1dWlkJ3MgZ2VuZXJhdGVkIGR1cmluZyB0aGUgY3VycmVudCBjbG9ja1xuICAvLyBjeWNsZSB0byBzaW11bGF0ZSBoaWdoZXIgcmVzb2x1dGlvbiBjbG9ja1xuICB2YXIgbnNlY3MgPSBvcHRpb25zLm5zZWNzICE9PSB1bmRlZmluZWQgPyBvcHRpb25zLm5zZWNzIDogX2xhc3ROU2VjcyArIDE7XG5cbiAgLy8gVGltZSBzaW5jZSBsYXN0IHV1aWQgY3JlYXRpb24gKGluIG1zZWNzKVxuICB2YXIgZHQgPSAobXNlY3MgLSBfbGFzdE1TZWNzKSArIChuc2VjcyAtIF9sYXN0TlNlY3MpLzEwMDAwO1xuXG4gIC8vIFBlciA0LjIuMS4yLCBCdW1wIGNsb2Nrc2VxIG9uIGNsb2NrIHJlZ3Jlc3Npb25cbiAgaWYgKGR0IDwgMCAmJiBvcHRpb25zLmNsb2Nrc2VxID09PSB1bmRlZmluZWQpIHtcbiAgICBjbG9ja3NlcSA9IGNsb2Nrc2VxICsgMSAmIDB4M2ZmZjtcbiAgfVxuXG4gIC8vIFJlc2V0IG5zZWNzIGlmIGNsb2NrIHJlZ3Jlc3NlcyAobmV3IGNsb2Nrc2VxKSBvciB3ZSd2ZSBtb3ZlZCBvbnRvIGEgbmV3XG4gIC8vIHRpbWUgaW50ZXJ2YWxcbiAgaWYgKChkdCA8IDAgfHwgbXNlY3MgPiBfbGFzdE1TZWNzKSAmJiBvcHRpb25zLm5zZWNzID09PSB1bmRlZmluZWQpIHtcbiAgICBuc2VjcyA9IDA7XG4gIH1cblxuICAvLyBQZXIgNC4yLjEuMiBUaHJvdyBlcnJvciBpZiB0b28gbWFueSB1dWlkcyBhcmUgcmVxdWVzdGVkXG4gIGlmIChuc2VjcyA+PSAxMDAwMCkge1xuICAgIHRocm93IG5ldyBFcnJvcigndXVpZC52MSgpOiBDYW5cXCd0IGNyZWF0ZSBtb3JlIHRoYW4gMTBNIHV1aWRzL3NlYycpO1xuICB9XG5cbiAgX2xhc3RNU2VjcyA9IG1zZWNzO1xuICBfbGFzdE5TZWNzID0gbnNlY3M7XG4gIF9jbG9ja3NlcSA9IGNsb2Nrc2VxO1xuXG4gIC8vIFBlciA0LjEuNCAtIENvbnZlcnQgZnJvbSB1bml4IGVwb2NoIHRvIEdyZWdvcmlhbiBlcG9jaFxuICBtc2VjcyArPSAxMjIxOTI5MjgwMDAwMDtcblxuICAvLyBgdGltZV9sb3dgXG4gIHZhciB0bCA9ICgobXNlY3MgJiAweGZmZmZmZmYpICogMTAwMDAgKyBuc2VjcykgJSAweDEwMDAwMDAwMDtcbiAgYltpKytdID0gdGwgPj4+IDI0ICYgMHhmZjtcbiAgYltpKytdID0gdGwgPj4+IDE2ICYgMHhmZjtcbiAgYltpKytdID0gdGwgPj4+IDggJiAweGZmO1xuICBiW2krK10gPSB0bCAmIDB4ZmY7XG5cbiAgLy8gYHRpbWVfbWlkYFxuICB2YXIgdG1oID0gKG1zZWNzIC8gMHgxMDAwMDAwMDAgKiAxMDAwMCkgJiAweGZmZmZmZmY7XG4gIGJbaSsrXSA9IHRtaCA+Pj4gOCAmIDB4ZmY7XG4gIGJbaSsrXSA9IHRtaCAmIDB4ZmY7XG5cbiAgLy8gYHRpbWVfaGlnaF9hbmRfdmVyc2lvbmBcbiAgYltpKytdID0gdG1oID4+PiAyNCAmIDB4ZiB8IDB4MTA7IC8vIGluY2x1ZGUgdmVyc2lvblxuICBiW2krK10gPSB0bWggPj4+IDE2ICYgMHhmZjtcblxuICAvLyBgY2xvY2tfc2VxX2hpX2FuZF9yZXNlcnZlZGAgKFBlciA0LjIuMiAtIGluY2x1ZGUgdmFyaWFudClcbiAgYltpKytdID0gY2xvY2tzZXEgPj4+IDggfCAweDgwO1xuXG4gIC8vIGBjbG9ja19zZXFfbG93YFxuICBiW2krK10gPSBjbG9ja3NlcSAmIDB4ZmY7XG5cbiAgLy8gYG5vZGVgXG4gIGZvciAodmFyIG4gPSAwOyBuIDwgNjsgKytuKSB7XG4gICAgYltpICsgbl0gPSBub2RlW25dO1xuICB9XG5cbiAgcmV0dXJuIGJ1ZiA/IGJ1ZiA6IGJ5dGVzVG9VdWlkKGIpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHYxO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///57\n")},function(module,exports,__webpack_require__){eval("var rng = __webpack_require__(33);\nvar bytesToUuid = __webpack_require__(34);\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdXVpZC92NC5qcz9jNjRlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLFVBQVUsbUJBQU8sQ0FBQyxFQUFXO0FBQzdCLGtCQUFrQixtQkFBTyxDQUFDLEVBQW1COztBQUU3QztBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxvQkFBb0IsU0FBUztBQUM3QjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSIsImZpbGUiOiI1OC5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBybmcgPSByZXF1aXJlKCcuL2xpYi9ybmcnKTtcbnZhciBieXRlc1RvVXVpZCA9IHJlcXVpcmUoJy4vbGliL2J5dGVzVG9VdWlkJyk7XG5cbmZ1bmN0aW9uIHY0KG9wdGlvbnMsIGJ1Ziwgb2Zmc2V0KSB7XG4gIHZhciBpID0gYnVmICYmIG9mZnNldCB8fCAwO1xuXG4gIGlmICh0eXBlb2Yob3B0aW9ucykgPT0gJ3N0cmluZycpIHtcbiAgICBidWYgPSBvcHRpb25zID09PSAnYmluYXJ5JyA/IG5ldyBBcnJheSgxNikgOiBudWxsO1xuICAgIG9wdGlvbnMgPSBudWxsO1xuICB9XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuXG4gIHZhciBybmRzID0gb3B0aW9ucy5yYW5kb20gfHwgKG9wdGlvbnMucm5nIHx8IHJuZykoKTtcblxuICAvLyBQZXIgNC40LCBzZXQgYml0cyBmb3IgdmVyc2lvbiBhbmQgYGNsb2NrX3NlcV9oaV9hbmRfcmVzZXJ2ZWRgXG4gIHJuZHNbNl0gPSAocm5kc1s2XSAmIDB4MGYpIHwgMHg0MDtcbiAgcm5kc1s4XSA9IChybmRzWzhdICYgMHgzZikgfCAweDgwO1xuXG4gIC8vIENvcHkgYnl0ZXMgdG8gYnVmZmVyLCBpZiBwcm92aWRlZFxuICBpZiAoYnVmKSB7XG4gICAgZm9yICh2YXIgaWkgPSAwOyBpaSA8IDE2OyArK2lpKSB7XG4gICAgICBidWZbaSArIGlpXSA9IHJuZHNbaWldO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBidWYgfHwgYnl0ZXNUb1V1aWQocm5kcyk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gdjQ7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///58\n")},function(module,exports,__webpack_require__){"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nclass GroupMember {\r\n    constructor(groupName, userId) {\r\n        this.groupName = groupName;\r\n        this.userId = userId;\r\n    }\r\n}\r\nexports.GroupMember = GroupMember;\r\n//# sourceMappingURL=GroupMember.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhbGl0eS1zcGFjZS9saWIvc3JjL2NvbW1vbi9yZWFsaXR5L2FwaS9Hcm91cE1lbWJlci5qcz9hNmUxIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQThDLGNBQWM7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiI1OS5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xyXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XHJcbmNsYXNzIEdyb3VwTWVtYmVyIHtcclxuICAgIGNvbnN0cnVjdG9yKGdyb3VwTmFtZSwgdXNlcklkKSB7XHJcbiAgICAgICAgdGhpcy5ncm91cE5hbWUgPSBncm91cE5hbWU7XHJcbiAgICAgICAgdGhpcy51c2VySWQgPSB1c2VySWQ7XHJcbiAgICB9XHJcbn1cclxuZXhwb3J0cy5Hcm91cE1lbWJlciA9IEdyb3VwTWVtYmVyO1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1Hcm91cE1lbWJlci5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///59\n')},function(module,exports,__webpack_require__){"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nclass GroupPrivilege {\r\n    constructor(type, name, sid) {\r\n        this.type = type;\r\n        this.name = name;\r\n        this.sid = sid;\r\n    }\r\n}\r\nexports.GroupPrivilege = GroupPrivilege;\r\n//# sourceMappingURL=GroupPrivilege.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhbGl0eS1zcGFjZS9saWIvc3JjL2NvbW1vbi9yZWFsaXR5L2FwaS9Hcm91cFByaXZpbGVnZS5qcz9jZmRjIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQThDLGNBQWM7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjYwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XHJcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcclxuY2xhc3MgR3JvdXBQcml2aWxlZ2Uge1xyXG4gICAgY29uc3RydWN0b3IodHlwZSwgbmFtZSwgc2lkKSB7XHJcbiAgICAgICAgdGhpcy50eXBlID0gdHlwZTtcclxuICAgICAgICB0aGlzLm5hbWUgPSBuYW1lO1xyXG4gICAgICAgIHRoaXMuc2lkID0gc2lkO1xyXG4gICAgfVxyXG59XHJcbmV4cG9ydHMuR3JvdXBQcml2aWxlZ2UgPSBHcm91cFByaXZpbGVnZTtcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9R3JvdXBQcml2aWxlZ2UuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///60\n')},function(module,exports,__webpack_require__){"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nclass UserPrivilege {\r\n    constructor(type, userId, sid) {\r\n        this.type = type;\r\n        this.userId = userId;\r\n        this.sid = sid;\r\n    }\r\n}\r\nexports.UserPrivilege = UserPrivilege;\r\n//# sourceMappingURL=UserPrivilege.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhbGl0eS1zcGFjZS9saWIvc3JjL2NvbW1vbi9yZWFsaXR5L2FwaS9Vc2VyUHJpdmlsZWdlLmpzPzAwY2YiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBOEMsY0FBYztBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiNjEuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcclxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xyXG5jbGFzcyBVc2VyUHJpdmlsZWdlIHtcclxuICAgIGNvbnN0cnVjdG9yKHR5cGUsIHVzZXJJZCwgc2lkKSB7XHJcbiAgICAgICAgdGhpcy50eXBlID0gdHlwZTtcclxuICAgICAgICB0aGlzLnVzZXJJZCA9IHVzZXJJZDtcclxuICAgICAgICB0aGlzLnNpZCA9IHNpZDtcclxuICAgIH1cclxufVxyXG5leHBvcnRzLlVzZXJQcml2aWxlZ2UgPSBVc2VyUHJpdmlsZWdlO1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1Vc2VyUHJpdmlsZWdlLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///61\n')},function(module,exports,__webpack_require__){"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nconst xml_js_1 = __webpack_require__(20);\r\nconst Fragment_1 = __webpack_require__(42);\r\nconst uuid = __webpack_require__(12);\r\nconst FragmentElement_1 = __webpack_require__(80);\r\nclass DocumentController {\r\n    constructor(sanitizer) {\r\n        this.elements = new Map();\r\n        this.sanitizer = sanitizer;\r\n        this.document = this.parse(DocumentController.EMPTY_FRAGMENT);\r\n    }\r\n    clear() {\r\n        this.elements.clear();\r\n        this.document = this.parse(DocumentController.EMPTY_FRAGMENT);\r\n        console.log("reality server - document controller cleared.");\r\n    }\r\n    putRootElements(fragmentXml) {\r\n        if (!fragmentXml) {\r\n            throw new Error("Fragment can not be empty.");\r\n        }\r\n        const fragment = this.parse(fragmentXml);\r\n        if (fragment.rootElement.name != DocumentController.FRAGMENT_ROOT_ELEMENT) {\r\n            throw Error("Invalid root element name: " + fragment.rootElement.name);\r\n        }\r\n        const elements = fragment.elements;\r\n        elements.forEach(e => {\r\n            this.saveElement(this.document.rootElement, e, true);\r\n        });\r\n        return xml_js_1.js2xml(fragment.container);\r\n    }\r\n    putChildElements(parentSid, fragmentXml) {\r\n        if (!parentSid) {\r\n            throw new Error("Parent sid is undefined.");\r\n        }\r\n        if (!this.elements.has(parentSid)) {\r\n            throw new Error("Parent element does not exist.");\r\n        }\r\n        if (!fragmentXml) {\r\n            throw new Error("Fragment can not be empty.");\r\n        }\r\n        const parentElement = this.elements.get(parentSid);\r\n        const fragment = this.parse(fragmentXml);\r\n        if (fragment.rootElement.name != DocumentController.FRAGMENT_ROOT_ELEMENT) {\r\n            throw Error("Invalid root element name: " + fragment.rootElement.name);\r\n        }\r\n        const elements = fragment.elements;\r\n        //this.saveElements(elements);\r\n        elements.forEach(e => {\r\n            this.saveElement(parentElement.element, e, true);\r\n        });\r\n        return xml_js_1.js2xml(fragment.container);\r\n    }\r\n    remove(sid) {\r\n        if (!sid) {\r\n            throw new Error("Element sid is undefined.");\r\n        }\r\n        if (!this.elements.has(sid)) {\r\n            throw new Error("Element does not exist.");\r\n        }\r\n        const element = this.elements.get(sid);\r\n        this.removeElement(element.element);\r\n    }\r\n    getDocument() {\r\n        return xml_js_1.js2xml(this.document.container);\r\n    }\r\n    hasElement(sid) {\r\n        return this.elements.has(sid);\r\n    }\r\n    getElement(sid) {\r\n        if (!sid) {\r\n            throw new Error("Element sid is undefined.");\r\n        }\r\n        if (!this.elements.has(sid)) {\r\n            throw new Error("Element does not exist.");\r\n        }\r\n        const element = this.elements.get(sid);\r\n        return xml_js_1.js2xml({ elements: [element.element] });\r\n    }\r\n    serialize() {\r\n        return xml_js_1.js2xml(this.document.container);\r\n    }\r\n    deserialize(documentXml) {\r\n        this.document = this.parse(documentXml);\r\n        this.elements.clear();\r\n        this.document.elements.forEach(entity => {\r\n            this.elements.set(entity.attributes.sid, new FragmentElement_1.FragmentElement(this.document.rootElement, entity));\r\n        });\r\n    }\r\n    saveElement(parent, element, addToParent) {\r\n        if (!element.attributes) {\r\n            element.attributes = {};\r\n        }\r\n        if (!element.attributes.sid) {\r\n            element.attributes.sid = uuid.v4().toString();\r\n        }\r\n        const sid = element.attributes.sid;\r\n        if (this.elements.has(sid)) {\r\n            const existingElement = this.elements.get(sid);\r\n            existingElement.parent.elements.splice(existingElement.parent.elements.indexOf(existingElement.element), 1);\r\n            existingElement.parent.elements.push(element);\r\n        }\r\n        else {\r\n            // Only top elements need to be explicitely added as children are already part of tree\r\n            if (addToParent) {\r\n                if (!parent.elements) {\r\n                    parent.elements = [];\r\n                }\r\n                parent.elements.push(element);\r\n            }\r\n        }\r\n        this.elements.set(sid, new FragmentElement_1.FragmentElement(parent, element));\r\n        if (element.elements) {\r\n            // Recursively save children.\r\n            element.elements.forEach(child => this.saveElement(element, child, false));\r\n        }\r\n    }\r\n    removeElement(element) {\r\n        if (element.attributes && element.attributes.sid) {\r\n            const sid = element.attributes.sid;\r\n            //console.log("Removed: " + sid);\r\n            if (this.elements.has(sid)) {\r\n                const existingElement = this.elements.get(sid);\r\n                existingElement.parent.elements.splice(existingElement.parent.elements.indexOf(existingElement.element), 1);\r\n                this.elements.delete(sid);\r\n            }\r\n        }\r\n        if (element.elements) {\r\n            // Recursively remove children.\r\n            element.elements.forEach(child => this.removeElement(child));\r\n        }\r\n    }\r\n    parse(xml) {\r\n        let container = xml_js_1.xml2js(xml);\r\n        this.sanitizer.sanitizeElements(container.elements);\r\n        let rootElement = container.elements[0];\r\n        if (!rootElement.elements) {\r\n            rootElement.elements = [];\r\n        }\r\n        let entities = rootElement.elements;\r\n        return new Fragment_1.Fragment(container, rootElement, entities);\r\n    }\r\n}\r\nDocumentController.FRAGMENT_ROOT_ELEMENT = "a-entities";\r\nDocumentController.EMPTY_FRAGMENT = \'<\' + DocumentController.FRAGMENT_ROOT_ELEMENT + \'/>\';\r\nexports.DocumentController = DocumentController;\r\n//# sourceMappingURL=DocumentController.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///62\n')},function(module,exports,__webpack_require__){eval("/* WEBPACK VAR INJECTION */(function(Buffer) {;(function (sax) { // wrapper for non-node envs\n  sax.parser = function (strict, opt) { return new SAXParser(strict, opt) }\n  sax.SAXParser = SAXParser\n  sax.SAXStream = SAXStream\n  sax.createStream = createStream\n\n  // When we pass the MAX_BUFFER_LENGTH position, start checking for buffer overruns.\n  // When we check, schedule the next check for MAX_BUFFER_LENGTH - (max(buffer lengths)),\n  // since that's the earliest that a buffer overrun could occur.  This way, checks are\n  // as rare as required, but as often as necessary to ensure never crossing this bound.\n  // Furthermore, buffers are only tested at most once per write(), so passing a very\n  // large string into write() might have undesirable effects, but this is manageable by\n  // the caller, so it is assumed to be safe.  Thus, a call to write() may, in the extreme\n  // edge case, result in creating at most one complete copy of the string passed in.\n  // Set to Infinity to have unlimited buffers.\n  sax.MAX_BUFFER_LENGTH = 64 * 1024\n\n  var buffers = [\n    'comment', 'sgmlDecl', 'textNode', 'tagName', 'doctype',\n    'procInstName', 'procInstBody', 'entity', 'attribName',\n    'attribValue', 'cdata', 'script'\n  ]\n\n  sax.EVENTS = [\n    'text',\n    'processinginstruction',\n    'sgmldeclaration',\n    'doctype',\n    'comment',\n    'opentagstart',\n    'attribute',\n    'opentag',\n    'closetag',\n    'opencdata',\n    'cdata',\n    'closecdata',\n    'error',\n    'end',\n    'ready',\n    'script',\n    'opennamespace',\n    'closenamespace'\n  ]\n\n  function SAXParser (strict, opt) {\n    if (!(this instanceof SAXParser)) {\n      return new SAXParser(strict, opt)\n    }\n\n    var parser = this\n    clearBuffers(parser)\n    parser.q = parser.c = ''\n    parser.bufferCheckPosition = sax.MAX_BUFFER_LENGTH\n    parser.opt = opt || {}\n    parser.opt.lowercase = parser.opt.lowercase || parser.opt.lowercasetags\n    parser.looseCase = parser.opt.lowercase ? 'toLowerCase' : 'toUpperCase'\n    parser.tags = []\n    parser.closed = parser.closedRoot = parser.sawRoot = false\n    parser.tag = parser.error = null\n    parser.strict = !!strict\n    parser.noscript = !!(strict || parser.opt.noscript)\n    parser.state = S.BEGIN\n    parser.strictEntities = parser.opt.strictEntities\n    parser.ENTITIES = parser.strictEntities ? Object.create(sax.XML_ENTITIES) : Object.create(sax.ENTITIES)\n    parser.attribList = []\n\n    // namespaces form a prototype chain.\n    // it always points at the current tag,\n    // which protos to its parent tag.\n    if (parser.opt.xmlns) {\n      parser.ns = Object.create(rootNS)\n    }\n\n    // mostly just for error reporting\n    parser.trackPosition = parser.opt.position !== false\n    if (parser.trackPosition) {\n      parser.position = parser.line = parser.column = 0\n    }\n    emit(parser, 'onready')\n  }\n\n  if (!Object.create) {\n    Object.create = function (o) {\n      function F () {}\n      F.prototype = o\n      var newf = new F()\n      return newf\n    }\n  }\n\n  if (!Object.keys) {\n    Object.keys = function (o) {\n      var a = []\n      for (var i in o) if (o.hasOwnProperty(i)) a.push(i)\n      return a\n    }\n  }\n\n  function checkBufferLength (parser) {\n    var maxAllowed = Math.max(sax.MAX_BUFFER_LENGTH, 10)\n    var maxActual = 0\n    for (var i = 0, l = buffers.length; i < l; i++) {\n      var len = parser[buffers[i]].length\n      if (len > maxAllowed) {\n        // Text/cdata nodes can get big, and since they're buffered,\n        // we can get here under normal conditions.\n        // Avoid issues by emitting the text node now,\n        // so at least it won't get any bigger.\n        switch (buffers[i]) {\n          case 'textNode':\n            closeText(parser)\n            break\n\n          case 'cdata':\n            emitNode(parser, 'oncdata', parser.cdata)\n            parser.cdata = ''\n            break\n\n          case 'script':\n            emitNode(parser, 'onscript', parser.script)\n            parser.script = ''\n            break\n\n          default:\n            error(parser, 'Max buffer length exceeded: ' + buffers[i])\n        }\n      }\n      maxActual = Math.max(maxActual, len)\n    }\n    // schedule the next check for the earliest possible buffer overrun.\n    var m = sax.MAX_BUFFER_LENGTH - maxActual\n    parser.bufferCheckPosition = m + parser.position\n  }\n\n  function clearBuffers (parser) {\n    for (var i = 0, l = buffers.length; i < l; i++) {\n      parser[buffers[i]] = ''\n    }\n  }\n\n  function flushBuffers (parser) {\n    closeText(parser)\n    if (parser.cdata !== '') {\n      emitNode(parser, 'oncdata', parser.cdata)\n      parser.cdata = ''\n    }\n    if (parser.script !== '') {\n      emitNode(parser, 'onscript', parser.script)\n      parser.script = ''\n    }\n  }\n\n  SAXParser.prototype = {\n    end: function () { end(this) },\n    write: write,\n    resume: function () { this.error = null; return this },\n    close: function () { return this.write(null) },\n    flush: function () { flushBuffers(this) }\n  }\n\n  var Stream\n  try {\n    Stream = __webpack_require__(66).Stream\n  } catch (ex) {\n    Stream = function () {}\n  }\n\n  var streamWraps = sax.EVENTS.filter(function (ev) {\n    return ev !== 'error' && ev !== 'end'\n  })\n\n  function createStream (strict, opt) {\n    return new SAXStream(strict, opt)\n  }\n\n  function SAXStream (strict, opt) {\n    if (!(this instanceof SAXStream)) {\n      return new SAXStream(strict, opt)\n    }\n\n    Stream.apply(this)\n\n    this._parser = new SAXParser(strict, opt)\n    this.writable = true\n    this.readable = true\n\n    var me = this\n\n    this._parser.onend = function () {\n      me.emit('end')\n    }\n\n    this._parser.onerror = function (er) {\n      me.emit('error', er)\n\n      // if didn't throw, then means error was handled.\n      // go ahead and clear error, so we can write again.\n      me._parser.error = null\n    }\n\n    this._decoder = null\n\n    streamWraps.forEach(function (ev) {\n      Object.defineProperty(me, 'on' + ev, {\n        get: function () {\n          return me._parser['on' + ev]\n        },\n        set: function (h) {\n          if (!h) {\n            me.removeAllListeners(ev)\n            me._parser['on' + ev] = h\n            return h\n          }\n          me.on(ev, h)\n        },\n        enumerable: true,\n        configurable: false\n      })\n    })\n  }\n\n  SAXStream.prototype = Object.create(Stream.prototype, {\n    constructor: {\n      value: SAXStream\n    }\n  })\n\n  SAXStream.prototype.write = function (data) {\n    if (typeof Buffer === 'function' &&\n      typeof Buffer.isBuffer === 'function' &&\n      Buffer.isBuffer(data)) {\n      if (!this._decoder) {\n        var SD = __webpack_require__(24).StringDecoder\n        this._decoder = new SD('utf8')\n      }\n      data = this._decoder.write(data)\n    }\n\n    this._parser.write(data.toString())\n    this.emit('data', data)\n    return true\n  }\n\n  SAXStream.prototype.end = function (chunk) {\n    if (chunk && chunk.length) {\n      this.write(chunk)\n    }\n    this._parser.end()\n    return true\n  }\n\n  SAXStream.prototype.on = function (ev, handler) {\n    var me = this\n    if (!me._parser['on' + ev] && streamWraps.indexOf(ev) !== -1) {\n      me._parser['on' + ev] = function () {\n        var args = arguments.length === 1 ? [arguments[0]] : Array.apply(null, arguments)\n        args.splice(0, 0, ev)\n        me.emit.apply(me, args)\n      }\n    }\n\n    return Stream.prototype.on.call(me, ev, handler)\n  }\n\n  // this really needs to be replaced with character classes.\n  // XML allows all manner of ridiculous numbers and digits.\n  var CDATA = '[CDATA['\n  var DOCTYPE = 'DOCTYPE'\n  var XML_NAMESPACE = 'http://www.w3.org/XML/1998/namespace'\n  var XMLNS_NAMESPACE = 'http://www.w3.org/2000/xmlns/'\n  var rootNS = { xml: XML_NAMESPACE, xmlns: XMLNS_NAMESPACE }\n\n  // http://www.w3.org/TR/REC-xml/#NT-NameStartChar\n  // This implementation works on strings, a single character at a time\n  // as such, it cannot ever support astral-plane characters (10000-EFFFF)\n  // without a significant breaking change to either this  parser, or the\n  // JavaScript language.  Implementation of an emoji-capable xml parser\n  // is left as an exercise for the reader.\n  var nameStart = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/\n\n  var nameBody = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040.\\d-]/\n\n  var entityStart = /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/\n  var entityBody = /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040.\\d-]/\n\n  function isWhitespace (c) {\n    return c === ' ' || c === '\\n' || c === '\\r' || c === '\\t'\n  }\n\n  function isQuote (c) {\n    return c === '\"' || c === '\\''\n  }\n\n  function isAttribEnd (c) {\n    return c === '>' || isWhitespace(c)\n  }\n\n  function isMatch (regex, c) {\n    return regex.test(c)\n  }\n\n  function notMatch (regex, c) {\n    return !isMatch(regex, c)\n  }\n\n  var S = 0\n  sax.STATE = {\n    BEGIN: S++, // leading byte order mark or whitespace\n    BEGIN_WHITESPACE: S++, // leading whitespace\n    TEXT: S++, // general stuff\n    TEXT_ENTITY: S++, // &amp and such.\n    OPEN_WAKA: S++, // <\n    SGML_DECL: S++, // <!BLARG\n    SGML_DECL_QUOTED: S++, // <!BLARG foo \"bar\n    DOCTYPE: S++, // <!DOCTYPE\n    DOCTYPE_QUOTED: S++, // <!DOCTYPE \"//blah\n    DOCTYPE_DTD: S++, // <!DOCTYPE \"//blah\" [ ...\n    DOCTYPE_DTD_QUOTED: S++, // <!DOCTYPE \"//blah\" [ \"foo\n    COMMENT_STARTING: S++, // <!-\n    COMMENT: S++, // \x3c!--\n    COMMENT_ENDING: S++, // \x3c!-- blah -\n    COMMENT_ENDED: S++, // \x3c!-- blah --\n    CDATA: S++, // <![CDATA[ something\n    CDATA_ENDING: S++, // ]\n    CDATA_ENDING_2: S++, // ]]\n    PROC_INST: S++, // <?hi\n    PROC_INST_BODY: S++, // <?hi there\n    PROC_INST_ENDING: S++, // <?hi \"there\" ?\n    OPEN_TAG: S++, // <strong\n    OPEN_TAG_SLASH: S++, // <strong /\n    ATTRIB: S++, // <a\n    ATTRIB_NAME: S++, // <a foo\n    ATTRIB_NAME_SAW_WHITE: S++, // <a foo _\n    ATTRIB_VALUE: S++, // <a foo=\n    ATTRIB_VALUE_QUOTED: S++, // <a foo=\"bar\n    ATTRIB_VALUE_CLOSED: S++, // <a foo=\"bar\"\n    ATTRIB_VALUE_UNQUOTED: S++, // <a foo=bar\n    ATTRIB_VALUE_ENTITY_Q: S++, // <foo bar=\"&quot;\"\n    ATTRIB_VALUE_ENTITY_U: S++, // <foo bar=&quot\n    CLOSE_TAG: S++, // </a\n    CLOSE_TAG_SAW_WHITE: S++, // </a   >\n    SCRIPT: S++, // <script> ...\n    SCRIPT_ENDING: S++ // <script> ... <\n  }\n\n  sax.XML_ENTITIES = {\n    'amp': '&',\n    'gt': '>',\n    'lt': '<',\n    'quot': '\"',\n    'apos': \"'\"\n  }\n\n  sax.ENTITIES = {\n    'amp': '&',\n    'gt': '>',\n    'lt': '<',\n    'quot': '\"',\n    'apos': \"'\",\n    'AElig': 198,\n    'Aacute': 193,\n    'Acirc': 194,\n    'Agrave': 192,\n    'Aring': 197,\n    'Atilde': 195,\n    'Auml': 196,\n    'Ccedil': 199,\n    'ETH': 208,\n    'Eacute': 201,\n    'Ecirc': 202,\n    'Egrave': 200,\n    'Euml': 203,\n    'Iacute': 205,\n    'Icirc': 206,\n    'Igrave': 204,\n    'Iuml': 207,\n    'Ntilde': 209,\n    'Oacute': 211,\n    'Ocirc': 212,\n    'Ograve': 210,\n    'Oslash': 216,\n    'Otilde': 213,\n    'Ouml': 214,\n    'THORN': 222,\n    'Uacute': 218,\n    'Ucirc': 219,\n    'Ugrave': 217,\n    'Uuml': 220,\n    'Yacute': 221,\n    'aacute': 225,\n    'acirc': 226,\n    'aelig': 230,\n    'agrave': 224,\n    'aring': 229,\n    'atilde': 227,\n    'auml': 228,\n    'ccedil': 231,\n    'eacute': 233,\n    'ecirc': 234,\n    'egrave': 232,\n    'eth': 240,\n    'euml': 235,\n    'iacute': 237,\n    'icirc': 238,\n    'igrave': 236,\n    'iuml': 239,\n    'ntilde': 241,\n    'oacute': 243,\n    'ocirc': 244,\n    'ograve': 242,\n    'oslash': 248,\n    'otilde': 245,\n    'ouml': 246,\n    'szlig': 223,\n    'thorn': 254,\n    'uacute': 250,\n    'ucirc': 251,\n    'ugrave': 249,\n    'uuml': 252,\n    'yacute': 253,\n    'yuml': 255,\n    'copy': 169,\n    'reg': 174,\n    'nbsp': 160,\n    'iexcl': 161,\n    'cent': 162,\n    'pound': 163,\n    'curren': 164,\n    'yen': 165,\n    'brvbar': 166,\n    'sect': 167,\n    'uml': 168,\n    'ordf': 170,\n    'laquo': 171,\n    'not': 172,\n    'shy': 173,\n    'macr': 175,\n    'deg': 176,\n    'plusmn': 177,\n    'sup1': 185,\n    'sup2': 178,\n    'sup3': 179,\n    'acute': 180,\n    'micro': 181,\n    'para': 182,\n    'middot': 183,\n    'cedil': 184,\n    'ordm': 186,\n    'raquo': 187,\n    'frac14': 188,\n    'frac12': 189,\n    'frac34': 190,\n    'iquest': 191,\n    'times': 215,\n    'divide': 247,\n    'OElig': 338,\n    'oelig': 339,\n    'Scaron': 352,\n    'scaron': 353,\n    'Yuml': 376,\n    'fnof': 402,\n    'circ': 710,\n    'tilde': 732,\n    'Alpha': 913,\n    'Beta': 914,\n    'Gamma': 915,\n    'Delta': 916,\n    'Epsilon': 917,\n    'Zeta': 918,\n    'Eta': 919,\n    'Theta': 920,\n    'Iota': 921,\n    'Kappa': 922,\n    'Lambda': 923,\n    'Mu': 924,\n    'Nu': 925,\n    'Xi': 926,\n    'Omicron': 927,\n    'Pi': 928,\n    'Rho': 929,\n    'Sigma': 931,\n    'Tau': 932,\n    'Upsilon': 933,\n    'Phi': 934,\n    'Chi': 935,\n    'Psi': 936,\n    'Omega': 937,\n    'alpha': 945,\n    'beta': 946,\n    'gamma': 947,\n    'delta': 948,\n    'epsilon': 949,\n    'zeta': 950,\n    'eta': 951,\n    'theta': 952,\n    'iota': 953,\n    'kappa': 954,\n    'lambda': 955,\n    'mu': 956,\n    'nu': 957,\n    'xi': 958,\n    'omicron': 959,\n    'pi': 960,\n    'rho': 961,\n    'sigmaf': 962,\n    'sigma': 963,\n    'tau': 964,\n    'upsilon': 965,\n    'phi': 966,\n    'chi': 967,\n    'psi': 968,\n    'omega': 969,\n    'thetasym': 977,\n    'upsih': 978,\n    'piv': 982,\n    'ensp': 8194,\n    'emsp': 8195,\n    'thinsp': 8201,\n    'zwnj': 8204,\n    'zwj': 8205,\n    'lrm': 8206,\n    'rlm': 8207,\n    'ndash': 8211,\n    'mdash': 8212,\n    'lsquo': 8216,\n    'rsquo': 8217,\n    'sbquo': 8218,\n    'ldquo': 8220,\n    'rdquo': 8221,\n    'bdquo': 8222,\n    'dagger': 8224,\n    'Dagger': 8225,\n    'bull': 8226,\n    'hellip': 8230,\n    'permil': 8240,\n    'prime': 8242,\n    'Prime': 8243,\n    'lsaquo': 8249,\n    'rsaquo': 8250,\n    'oline': 8254,\n    'frasl': 8260,\n    'euro': 8364,\n    'image': 8465,\n    'weierp': 8472,\n    'real': 8476,\n    'trade': 8482,\n    'alefsym': 8501,\n    'larr': 8592,\n    'uarr': 8593,\n    'rarr': 8594,\n    'darr': 8595,\n    'harr': 8596,\n    'crarr': 8629,\n    'lArr': 8656,\n    'uArr': 8657,\n    'rArr': 8658,\n    'dArr': 8659,\n    'hArr': 8660,\n    'forall': 8704,\n    'part': 8706,\n    'exist': 8707,\n    'empty': 8709,\n    'nabla': 8711,\n    'isin': 8712,\n    'notin': 8713,\n    'ni': 8715,\n    'prod': 8719,\n    'sum': 8721,\n    'minus': 8722,\n    'lowast': 8727,\n    'radic': 8730,\n    'prop': 8733,\n    'infin': 8734,\n    'ang': 8736,\n    'and': 8743,\n    'or': 8744,\n    'cap': 8745,\n    'cup': 8746,\n    'int': 8747,\n    'there4': 8756,\n    'sim': 8764,\n    'cong': 8773,\n    'asymp': 8776,\n    'ne': 8800,\n    'equiv': 8801,\n    'le': 8804,\n    'ge': 8805,\n    'sub': 8834,\n    'sup': 8835,\n    'nsub': 8836,\n    'sube': 8838,\n    'supe': 8839,\n    'oplus': 8853,\n    'otimes': 8855,\n    'perp': 8869,\n    'sdot': 8901,\n    'lceil': 8968,\n    'rceil': 8969,\n    'lfloor': 8970,\n    'rfloor': 8971,\n    'lang': 9001,\n    'rang': 9002,\n    'loz': 9674,\n    'spades': 9824,\n    'clubs': 9827,\n    'hearts': 9829,\n    'diams': 9830\n  }\n\n  Object.keys(sax.ENTITIES).forEach(function (key) {\n    var e = sax.ENTITIES[key]\n    var s = typeof e === 'number' ? String.fromCharCode(e) : e\n    sax.ENTITIES[key] = s\n  })\n\n  for (var s in sax.STATE) {\n    sax.STATE[sax.STATE[s]] = s\n  }\n\n  // shorthand\n  S = sax.STATE\n\n  function emit (parser, event, data) {\n    parser[event] && parser[event](data)\n  }\n\n  function emitNode (parser, nodeType, data) {\n    if (parser.textNode) closeText(parser)\n    emit(parser, nodeType, data)\n  }\n\n  function closeText (parser) {\n    parser.textNode = textopts(parser.opt, parser.textNode)\n    if (parser.textNode) emit(parser, 'ontext', parser.textNode)\n    parser.textNode = ''\n  }\n\n  function textopts (opt, text) {\n    if (opt.trim) text = text.trim()\n    if (opt.normalize) text = text.replace(/\\s+/g, ' ')\n    return text\n  }\n\n  function error (parser, er) {\n    closeText(parser)\n    if (parser.trackPosition) {\n      er += '\\nLine: ' + parser.line +\n        '\\nColumn: ' + parser.column +\n        '\\nChar: ' + parser.c\n    }\n    er = new Error(er)\n    parser.error = er\n    emit(parser, 'onerror', er)\n    return parser\n  }\n\n  function end (parser) {\n    if (parser.sawRoot && !parser.closedRoot) strictFail(parser, 'Unclosed root tag')\n    if ((parser.state !== S.BEGIN) &&\n      (parser.state !== S.BEGIN_WHITESPACE) &&\n      (parser.state !== S.TEXT)) {\n      error(parser, 'Unexpected end')\n    }\n    closeText(parser)\n    parser.c = ''\n    parser.closed = true\n    emit(parser, 'onend')\n    SAXParser.call(parser, parser.strict, parser.opt)\n    return parser\n  }\n\n  function strictFail (parser, message) {\n    if (typeof parser !== 'object' || !(parser instanceof SAXParser)) {\n      throw new Error('bad call to strictFail')\n    }\n    if (parser.strict) {\n      error(parser, message)\n    }\n  }\n\n  function newTag (parser) {\n    if (!parser.strict) parser.tagName = parser.tagName[parser.looseCase]()\n    var parent = parser.tags[parser.tags.length - 1] || parser\n    var tag = parser.tag = { name: parser.tagName, attributes: {} }\n\n    // will be overridden if tag contails an xmlns=\"foo\" or xmlns:foo=\"bar\"\n    if (parser.opt.xmlns) {\n      tag.ns = parent.ns\n    }\n    parser.attribList.length = 0\n    emitNode(parser, 'onopentagstart', tag)\n  }\n\n  function qname (name, attribute) {\n    var i = name.indexOf(':')\n    var qualName = i < 0 ? [ '', name ] : name.split(':')\n    var prefix = qualName[0]\n    var local = qualName[1]\n\n    // <x \"xmlns\"=\"http://foo\">\n    if (attribute && name === 'xmlns') {\n      prefix = 'xmlns'\n      local = ''\n    }\n\n    return { prefix: prefix, local: local }\n  }\n\n  function attrib (parser) {\n    if (!parser.strict) {\n      parser.attribName = parser.attribName[parser.looseCase]()\n    }\n\n    if (parser.attribList.indexOf(parser.attribName) !== -1 ||\n      parser.tag.attributes.hasOwnProperty(parser.attribName)) {\n      parser.attribName = parser.attribValue = ''\n      return\n    }\n\n    if (parser.opt.xmlns) {\n      var qn = qname(parser.attribName, true)\n      var prefix = qn.prefix\n      var local = qn.local\n\n      if (prefix === 'xmlns') {\n        // namespace binding attribute. push the binding into scope\n        if (local === 'xml' && parser.attribValue !== XML_NAMESPACE) {\n          strictFail(parser,\n            'xml: prefix must be bound to ' + XML_NAMESPACE + '\\n' +\n            'Actual: ' + parser.attribValue)\n        } else if (local === 'xmlns' && parser.attribValue !== XMLNS_NAMESPACE) {\n          strictFail(parser,\n            'xmlns: prefix must be bound to ' + XMLNS_NAMESPACE + '\\n' +\n            'Actual: ' + parser.attribValue)\n        } else {\n          var tag = parser.tag\n          var parent = parser.tags[parser.tags.length - 1] || parser\n          if (tag.ns === parent.ns) {\n            tag.ns = Object.create(parent.ns)\n          }\n          tag.ns[local] = parser.attribValue\n        }\n      }\n\n      // defer onattribute events until all attributes have been seen\n      // so any new bindings can take effect. preserve attribute order\n      // so deferred events can be emitted in document order\n      parser.attribList.push([parser.attribName, parser.attribValue])\n    } else {\n      // in non-xmlns mode, we can emit the event right away\n      parser.tag.attributes[parser.attribName] = parser.attribValue\n      emitNode(parser, 'onattribute', {\n        name: parser.attribName,\n        value: parser.attribValue\n      })\n    }\n\n    parser.attribName = parser.attribValue = ''\n  }\n\n  function openTag (parser, selfClosing) {\n    if (parser.opt.xmlns) {\n      // emit namespace binding events\n      var tag = parser.tag\n\n      // add namespace info to tag\n      var qn = qname(parser.tagName)\n      tag.prefix = qn.prefix\n      tag.local = qn.local\n      tag.uri = tag.ns[qn.prefix] || ''\n\n      if (tag.prefix && !tag.uri) {\n        strictFail(parser, 'Unbound namespace prefix: ' +\n          JSON.stringify(parser.tagName))\n        tag.uri = qn.prefix\n      }\n\n      var parent = parser.tags[parser.tags.length - 1] || parser\n      if (tag.ns && parent.ns !== tag.ns) {\n        Object.keys(tag.ns).forEach(function (p) {\n          emitNode(parser, 'onopennamespace', {\n            prefix: p,\n            uri: tag.ns[p]\n          })\n        })\n      }\n\n      // handle deferred onattribute events\n      // Note: do not apply default ns to attributes:\n      //   http://www.w3.org/TR/REC-xml-names/#defaulting\n      for (var i = 0, l = parser.attribList.length; i < l; i++) {\n        var nv = parser.attribList[i]\n        var name = nv[0]\n        var value = nv[1]\n        var qualName = qname(name, true)\n        var prefix = qualName.prefix\n        var local = qualName.local\n        var uri = prefix === '' ? '' : (tag.ns[prefix] || '')\n        var a = {\n          name: name,\n          value: value,\n          prefix: prefix,\n          local: local,\n          uri: uri\n        }\n\n        // if there's any attributes with an undefined namespace,\n        // then fail on them now.\n        if (prefix && prefix !== 'xmlns' && !uri) {\n          strictFail(parser, 'Unbound namespace prefix: ' +\n            JSON.stringify(prefix))\n          a.uri = prefix\n        }\n        parser.tag.attributes[name] = a\n        emitNode(parser, 'onattribute', a)\n      }\n      parser.attribList.length = 0\n    }\n\n    parser.tag.isSelfClosing = !!selfClosing\n\n    // process the tag\n    parser.sawRoot = true\n    parser.tags.push(parser.tag)\n    emitNode(parser, 'onopentag', parser.tag)\n    if (!selfClosing) {\n      // special case for <script> in non-strict mode.\n      if (!parser.noscript && parser.tagName.toLowerCase() === 'script') {\n        parser.state = S.SCRIPT\n      } else {\n        parser.state = S.TEXT\n      }\n      parser.tag = null\n      parser.tagName = ''\n    }\n    parser.attribName = parser.attribValue = ''\n    parser.attribList.length = 0\n  }\n\n  function closeTag (parser) {\n    if (!parser.tagName) {\n      strictFail(parser, 'Weird empty close tag.')\n      parser.textNode += '</>'\n      parser.state = S.TEXT\n      return\n    }\n\n    if (parser.script) {\n      if (parser.tagName !== 'script') {\n        parser.script += '</' + parser.tagName + '>'\n        parser.tagName = ''\n        parser.state = S.SCRIPT\n        return\n      }\n      emitNode(parser, 'onscript', parser.script)\n      parser.script = ''\n    }\n\n    // first make sure that the closing tag actually exists.\n    // <a><b></c></b></a> will close everything, otherwise.\n    var t = parser.tags.length\n    var tagName = parser.tagName\n    if (!parser.strict) {\n      tagName = tagName[parser.looseCase]()\n    }\n    var closeTo = tagName\n    while (t--) {\n      var close = parser.tags[t]\n      if (close.name !== closeTo) {\n        // fail the first time in strict mode\n        strictFail(parser, 'Unexpected close tag')\n      } else {\n        break\n      }\n    }\n\n    // didn't find it.  we already failed for strict, so just abort.\n    if (t < 0) {\n      strictFail(parser, 'Unmatched closing tag: ' + parser.tagName)\n      parser.textNode += '</' + parser.tagName + '>'\n      parser.state = S.TEXT\n      return\n    }\n    parser.tagName = tagName\n    var s = parser.tags.length\n    while (s-- > t) {\n      var tag = parser.tag = parser.tags.pop()\n      parser.tagName = parser.tag.name\n      emitNode(parser, 'onclosetag', parser.tagName)\n\n      var x = {}\n      for (var i in tag.ns) {\n        x[i] = tag.ns[i]\n      }\n\n      var parent = parser.tags[parser.tags.length - 1] || parser\n      if (parser.opt.xmlns && tag.ns !== parent.ns) {\n        // remove namespace bindings introduced by tag\n        Object.keys(tag.ns).forEach(function (p) {\n          var n = tag.ns[p]\n          emitNode(parser, 'onclosenamespace', { prefix: p, uri: n })\n        })\n      }\n    }\n    if (t === 0) parser.closedRoot = true\n    parser.tagName = parser.attribValue = parser.attribName = ''\n    parser.attribList.length = 0\n    parser.state = S.TEXT\n  }\n\n  function parseEntity (parser) {\n    var entity = parser.entity\n    var entityLC = entity.toLowerCase()\n    var num\n    var numStr = ''\n\n    if (parser.ENTITIES[entity]) {\n      return parser.ENTITIES[entity]\n    }\n    if (parser.ENTITIES[entityLC]) {\n      return parser.ENTITIES[entityLC]\n    }\n    entity = entityLC\n    if (entity.charAt(0) === '#') {\n      if (entity.charAt(1) === 'x') {\n        entity = entity.slice(2)\n        num = parseInt(entity, 16)\n        numStr = num.toString(16)\n      } else {\n        entity = entity.slice(1)\n        num = parseInt(entity, 10)\n        numStr = num.toString(10)\n      }\n    }\n    entity = entity.replace(/^0+/, '')\n    if (isNaN(num) || numStr.toLowerCase() !== entity) {\n      strictFail(parser, 'Invalid character entity')\n      return '&' + parser.entity + ';'\n    }\n\n    return String.fromCodePoint(num)\n  }\n\n  function beginWhiteSpace (parser, c) {\n    if (c === '<') {\n      parser.state = S.OPEN_WAKA\n      parser.startTagPosition = parser.position\n    } else if (!isWhitespace(c)) {\n      // have to process this as a text node.\n      // weird, but happens.\n      strictFail(parser, 'Non-whitespace before first tag.')\n      parser.textNode = c\n      parser.state = S.TEXT\n    }\n  }\n\n  function charAt (chunk, i) {\n    var result = ''\n    if (i < chunk.length) {\n      result = chunk.charAt(i)\n    }\n    return result\n  }\n\n  function write (chunk) {\n    var parser = this\n    if (this.error) {\n      throw this.error\n    }\n    if (parser.closed) {\n      return error(parser,\n        'Cannot write after close. Assign an onready handler.')\n    }\n    if (chunk === null) {\n      return end(parser)\n    }\n    if (typeof chunk === 'object') {\n      chunk = chunk.toString()\n    }\n    var i = 0\n    var c = ''\n    while (true) {\n      c = charAt(chunk, i++)\n      parser.c = c\n\n      if (!c) {\n        break\n      }\n\n      if (parser.trackPosition) {\n        parser.position++\n        if (c === '\\n') {\n          parser.line++\n          parser.column = 0\n        } else {\n          parser.column++\n        }\n      }\n\n      switch (parser.state) {\n        case S.BEGIN:\n          parser.state = S.BEGIN_WHITESPACE\n          if (c === '\\uFEFF') {\n            continue\n          }\n          beginWhiteSpace(parser, c)\n          continue\n\n        case S.BEGIN_WHITESPACE:\n          beginWhiteSpace(parser, c)\n          continue\n\n        case S.TEXT:\n          if (parser.sawRoot && !parser.closedRoot) {\n            var starti = i - 1\n            while (c && c !== '<' && c !== '&') {\n              c = charAt(chunk, i++)\n              if (c && parser.trackPosition) {\n                parser.position++\n                if (c === '\\n') {\n                  parser.line++\n                  parser.column = 0\n                } else {\n                  parser.column++\n                }\n              }\n            }\n            parser.textNode += chunk.substring(starti, i - 1)\n          }\n          if (c === '<' && !(parser.sawRoot && parser.closedRoot && !parser.strict)) {\n            parser.state = S.OPEN_WAKA\n            parser.startTagPosition = parser.position\n          } else {\n            if (!isWhitespace(c) && (!parser.sawRoot || parser.closedRoot)) {\n              strictFail(parser, 'Text data outside of root node.')\n            }\n            if (c === '&') {\n              parser.state = S.TEXT_ENTITY\n            } else {\n              parser.textNode += c\n            }\n          }\n          continue\n\n        case S.SCRIPT:\n          // only non-strict\n          if (c === '<') {\n            parser.state = S.SCRIPT_ENDING\n          } else {\n            parser.script += c\n          }\n          continue\n\n        case S.SCRIPT_ENDING:\n          if (c === '/') {\n            parser.state = S.CLOSE_TAG\n          } else {\n            parser.script += '<' + c\n            parser.state = S.SCRIPT\n          }\n          continue\n\n        case S.OPEN_WAKA:\n          // either a /, ?, !, or text is coming next.\n          if (c === '!') {\n            parser.state = S.SGML_DECL\n            parser.sgmlDecl = ''\n          } else if (isWhitespace(c)) {\n            // wait for it...\n          } else if (isMatch(nameStart, c)) {\n            parser.state = S.OPEN_TAG\n            parser.tagName = c\n          } else if (c === '/') {\n            parser.state = S.CLOSE_TAG\n            parser.tagName = ''\n          } else if (c === '?') {\n            parser.state = S.PROC_INST\n            parser.procInstName = parser.procInstBody = ''\n          } else {\n            strictFail(parser, 'Unencoded <')\n            // if there was some whitespace, then add that in.\n            if (parser.startTagPosition + 1 < parser.position) {\n              var pad = parser.position - parser.startTagPosition\n              c = new Array(pad).join(' ') + c\n            }\n            parser.textNode += '<' + c\n            parser.state = S.TEXT\n          }\n          continue\n\n        case S.SGML_DECL:\n          if ((parser.sgmlDecl + c).toUpperCase() === CDATA) {\n            emitNode(parser, 'onopencdata')\n            parser.state = S.CDATA\n            parser.sgmlDecl = ''\n            parser.cdata = ''\n          } else if (parser.sgmlDecl + c === '--') {\n            parser.state = S.COMMENT\n            parser.comment = ''\n            parser.sgmlDecl = ''\n          } else if ((parser.sgmlDecl + c).toUpperCase() === DOCTYPE) {\n            parser.state = S.DOCTYPE\n            if (parser.doctype || parser.sawRoot) {\n              strictFail(parser,\n                'Inappropriately located doctype declaration')\n            }\n            parser.doctype = ''\n            parser.sgmlDecl = ''\n          } else if (c === '>') {\n            emitNode(parser, 'onsgmldeclaration', parser.sgmlDecl)\n            parser.sgmlDecl = ''\n            parser.state = S.TEXT\n          } else if (isQuote(c)) {\n            parser.state = S.SGML_DECL_QUOTED\n            parser.sgmlDecl += c\n          } else {\n            parser.sgmlDecl += c\n          }\n          continue\n\n        case S.SGML_DECL_QUOTED:\n          if (c === parser.q) {\n            parser.state = S.SGML_DECL\n            parser.q = ''\n          }\n          parser.sgmlDecl += c\n          continue\n\n        case S.DOCTYPE:\n          if (c === '>') {\n            parser.state = S.TEXT\n            emitNode(parser, 'ondoctype', parser.doctype)\n            parser.doctype = true // just remember that we saw it.\n          } else {\n            parser.doctype += c\n            if (c === '[') {\n              parser.state = S.DOCTYPE_DTD\n            } else if (isQuote(c)) {\n              parser.state = S.DOCTYPE_QUOTED\n              parser.q = c\n            }\n          }\n          continue\n\n        case S.DOCTYPE_QUOTED:\n          parser.doctype += c\n          if (c === parser.q) {\n            parser.q = ''\n            parser.state = S.DOCTYPE\n          }\n          continue\n\n        case S.DOCTYPE_DTD:\n          parser.doctype += c\n          if (c === ']') {\n            parser.state = S.DOCTYPE\n          } else if (isQuote(c)) {\n            parser.state = S.DOCTYPE_DTD_QUOTED\n            parser.q = c\n          }\n          continue\n\n        case S.DOCTYPE_DTD_QUOTED:\n          parser.doctype += c\n          if (c === parser.q) {\n            parser.state = S.DOCTYPE_DTD\n            parser.q = ''\n          }\n          continue\n\n        case S.COMMENT:\n          if (c === '-') {\n            parser.state = S.COMMENT_ENDING\n          } else {\n            parser.comment += c\n          }\n          continue\n\n        case S.COMMENT_ENDING:\n          if (c === '-') {\n            parser.state = S.COMMENT_ENDED\n            parser.comment = textopts(parser.opt, parser.comment)\n            if (parser.comment) {\n              emitNode(parser, 'oncomment', parser.comment)\n            }\n            parser.comment = ''\n          } else {\n            parser.comment += '-' + c\n            parser.state = S.COMMENT\n          }\n          continue\n\n        case S.COMMENT_ENDED:\n          if (c !== '>') {\n            strictFail(parser, 'Malformed comment')\n            // allow \x3c!-- blah -- bloo --\x3e in non-strict mode,\n            // which is a comment of \" blah -- bloo \"\n            parser.comment += '--' + c\n            parser.state = S.COMMENT\n          } else {\n            parser.state = S.TEXT\n          }\n          continue\n\n        case S.CDATA:\n          if (c === ']') {\n            parser.state = S.CDATA_ENDING\n          } else {\n            parser.cdata += c\n          }\n          continue\n\n        case S.CDATA_ENDING:\n          if (c === ']') {\n            parser.state = S.CDATA_ENDING_2\n          } else {\n            parser.cdata += ']' + c\n            parser.state = S.CDATA\n          }\n          continue\n\n        case S.CDATA_ENDING_2:\n          if (c === '>') {\n            if (parser.cdata) {\n              emitNode(parser, 'oncdata', parser.cdata)\n            }\n            emitNode(parser, 'onclosecdata')\n            parser.cdata = ''\n            parser.state = S.TEXT\n          } else if (c === ']') {\n            parser.cdata += ']'\n          } else {\n            parser.cdata += ']]' + c\n            parser.state = S.CDATA\n          }\n          continue\n\n        case S.PROC_INST:\n          if (c === '?') {\n            parser.state = S.PROC_INST_ENDING\n          } else if (isWhitespace(c)) {\n            parser.state = S.PROC_INST_BODY\n          } else {\n            parser.procInstName += c\n          }\n          continue\n\n        case S.PROC_INST_BODY:\n          if (!parser.procInstBody && isWhitespace(c)) {\n            continue\n          } else if (c === '?') {\n            parser.state = S.PROC_INST_ENDING\n          } else {\n            parser.procInstBody += c\n          }\n          continue\n\n        case S.PROC_INST_ENDING:\n          if (c === '>') {\n            emitNode(parser, 'onprocessinginstruction', {\n              name: parser.procInstName,\n              body: parser.procInstBody\n            })\n            parser.procInstName = parser.procInstBody = ''\n            parser.state = S.TEXT\n          } else {\n            parser.procInstBody += '?' + c\n            parser.state = S.PROC_INST_BODY\n          }\n          continue\n\n        case S.OPEN_TAG:\n          if (isMatch(nameBody, c)) {\n            parser.tagName += c\n          } else {\n            newTag(parser)\n            if (c === '>') {\n              openTag(parser)\n            } else if (c === '/') {\n              parser.state = S.OPEN_TAG_SLASH\n            } else {\n              if (!isWhitespace(c)) {\n                strictFail(parser, 'Invalid character in tag name')\n              }\n              parser.state = S.ATTRIB\n            }\n          }\n          continue\n\n        case S.OPEN_TAG_SLASH:\n          if (c === '>') {\n            openTag(parser, true)\n            closeTag(parser)\n          } else {\n            strictFail(parser, 'Forward-slash in opening tag not followed by >')\n            parser.state = S.ATTRIB\n          }\n          continue\n\n        case S.ATTRIB:\n          // haven't read the attribute name yet.\n          if (isWhitespace(c)) {\n            continue\n          } else if (c === '>') {\n            openTag(parser)\n          } else if (c === '/') {\n            parser.state = S.OPEN_TAG_SLASH\n          } else if (isMatch(nameStart, c)) {\n            parser.attribName = c\n            parser.attribValue = ''\n            parser.state = S.ATTRIB_NAME\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_NAME:\n          if (c === '=') {\n            parser.state = S.ATTRIB_VALUE\n          } else if (c === '>') {\n            strictFail(parser, 'Attribute without value')\n            parser.attribValue = parser.attribName\n            attrib(parser)\n            openTag(parser)\n          } else if (isWhitespace(c)) {\n            parser.state = S.ATTRIB_NAME_SAW_WHITE\n          } else if (isMatch(nameBody, c)) {\n            parser.attribName += c\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_NAME_SAW_WHITE:\n          if (c === '=') {\n            parser.state = S.ATTRIB_VALUE\n          } else if (isWhitespace(c)) {\n            continue\n          } else {\n            strictFail(parser, 'Attribute without value')\n            parser.tag.attributes[parser.attribName] = ''\n            parser.attribValue = ''\n            emitNode(parser, 'onattribute', {\n              name: parser.attribName,\n              value: ''\n            })\n            parser.attribName = ''\n            if (c === '>') {\n              openTag(parser)\n            } else if (isMatch(nameStart, c)) {\n              parser.attribName = c\n              parser.state = S.ATTRIB_NAME\n            } else {\n              strictFail(parser, 'Invalid attribute name')\n              parser.state = S.ATTRIB\n            }\n          }\n          continue\n\n        case S.ATTRIB_VALUE:\n          if (isWhitespace(c)) {\n            continue\n          } else if (isQuote(c)) {\n            parser.q = c\n            parser.state = S.ATTRIB_VALUE_QUOTED\n          } else {\n            strictFail(parser, 'Unquoted attribute value')\n            parser.state = S.ATTRIB_VALUE_UNQUOTED\n            parser.attribValue = c\n          }\n          continue\n\n        case S.ATTRIB_VALUE_QUOTED:\n          if (c !== parser.q) {\n            if (c === '&') {\n              parser.state = S.ATTRIB_VALUE_ENTITY_Q\n            } else {\n              parser.attribValue += c\n            }\n            continue\n          }\n          attrib(parser)\n          parser.q = ''\n          parser.state = S.ATTRIB_VALUE_CLOSED\n          continue\n\n        case S.ATTRIB_VALUE_CLOSED:\n          if (isWhitespace(c)) {\n            parser.state = S.ATTRIB\n          } else if (c === '>') {\n            openTag(parser)\n          } else if (c === '/') {\n            parser.state = S.OPEN_TAG_SLASH\n          } else if (isMatch(nameStart, c)) {\n            strictFail(parser, 'No whitespace between attributes')\n            parser.attribName = c\n            parser.attribValue = ''\n            parser.state = S.ATTRIB_NAME\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_VALUE_UNQUOTED:\n          if (!isAttribEnd(c)) {\n            if (c === '&') {\n              parser.state = S.ATTRIB_VALUE_ENTITY_U\n            } else {\n              parser.attribValue += c\n            }\n            continue\n          }\n          attrib(parser)\n          if (c === '>') {\n            openTag(parser)\n          } else {\n            parser.state = S.ATTRIB\n          }\n          continue\n\n        case S.CLOSE_TAG:\n          if (!parser.tagName) {\n            if (isWhitespace(c)) {\n              continue\n            } else if (notMatch(nameStart, c)) {\n              if (parser.script) {\n                parser.script += '</' + c\n                parser.state = S.SCRIPT\n              } else {\n                strictFail(parser, 'Invalid tagname in closing tag.')\n              }\n            } else {\n              parser.tagName = c\n            }\n          } else if (c === '>') {\n            closeTag(parser)\n          } else if (isMatch(nameBody, c)) {\n            parser.tagName += c\n          } else if (parser.script) {\n            parser.script += '</' + parser.tagName\n            parser.tagName = ''\n            parser.state = S.SCRIPT\n          } else {\n            if (!isWhitespace(c)) {\n              strictFail(parser, 'Invalid tagname in closing tag')\n            }\n            parser.state = S.CLOSE_TAG_SAW_WHITE\n          }\n          continue\n\n        case S.CLOSE_TAG_SAW_WHITE:\n          if (isWhitespace(c)) {\n            continue\n          }\n          if (c === '>') {\n            closeTag(parser)\n          } else {\n            strictFail(parser, 'Invalid characters in closing tag')\n          }\n          continue\n\n        case S.TEXT_ENTITY:\n        case S.ATTRIB_VALUE_ENTITY_Q:\n        case S.ATTRIB_VALUE_ENTITY_U:\n          var returnState\n          var buffer\n          switch (parser.state) {\n            case S.TEXT_ENTITY:\n              returnState = S.TEXT\n              buffer = 'textNode'\n              break\n\n            case S.ATTRIB_VALUE_ENTITY_Q:\n              returnState = S.ATTRIB_VALUE_QUOTED\n              buffer = 'attribValue'\n              break\n\n            case S.ATTRIB_VALUE_ENTITY_U:\n              returnState = S.ATTRIB_VALUE_UNQUOTED\n              buffer = 'attribValue'\n              break\n          }\n\n          if (c === ';') {\n            parser[buffer] += parseEntity(parser)\n            parser.entity = ''\n            parser.state = returnState\n          } else if (isMatch(parser.entity.length ? entityBody : entityStart, c)) {\n            parser.entity += c\n          } else {\n            strictFail(parser, 'Invalid character in entity name')\n            parser[buffer] += '&' + parser.entity + c\n            parser.entity = ''\n            parser.state = returnState\n          }\n\n          continue\n\n        default:\n          throw new Error(parser, 'Unknown state: ' + parser.state)\n      }\n    } // while\n\n    if (parser.position >= parser.bufferCheckPosition) {\n      checkBufferLength(parser)\n    }\n    return parser\n  }\n\n  /*! http://mths.be/fromcodepoint v0.1.0 by @mathias */\n  /* istanbul ignore next */\n  if (!String.fromCodePoint) {\n    (function () {\n      var stringFromCharCode = String.fromCharCode\n      var floor = Math.floor\n      var fromCodePoint = function () {\n        var MAX_SIZE = 0x4000\n        var codeUnits = []\n        var highSurrogate\n        var lowSurrogate\n        var index = -1\n        var length = arguments.length\n        if (!length) {\n          return ''\n        }\n        var result = ''\n        while (++index < length) {\n          var codePoint = Number(arguments[index])\n          if (\n            !isFinite(codePoint) || // `NaN`, `+Infinity`, or `-Infinity`\n            codePoint < 0 || // not a valid Unicode code point\n            codePoint > 0x10FFFF || // not a valid Unicode code point\n            floor(codePoint) !== codePoint // not an integer\n          ) {\n            throw RangeError('Invalid code point: ' + codePoint)\n          }\n          if (codePoint <= 0xFFFF) { // BMP code point\n            codeUnits.push(codePoint)\n          } else { // Astral code point; split in surrogate halves\n            // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n            codePoint -= 0x10000\n            highSurrogate = (codePoint >> 10) + 0xD800\n            lowSurrogate = (codePoint % 0x400) + 0xDC00\n            codeUnits.push(highSurrogate, lowSurrogate)\n          }\n          if (index + 1 === length || codeUnits.length > MAX_SIZE) {\n            result += stringFromCharCode.apply(null, codeUnits)\n            codeUnits.length = 0\n          }\n        }\n        return result\n      }\n      /* istanbul ignore next */\n      if (Object.defineProperty) {\n        Object.defineProperty(String, 'fromCodePoint', {\n          value: fromCodePoint,\n          configurable: true,\n          writable: true\n        })\n      } else {\n        String.fromCodePoint = fromCodePoint\n      }\n    }())\n  }\n})( false ? undefined : exports)\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(13).Buffer))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///63\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYmFzZTY0LWpzL2luZGV4LmpzPzFmYjUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQVk7O0FBRVo7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGtDQUFrQyxTQUFTO0FBQzNDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxpQkFBaUIsU0FBUztBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLFNBQVM7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSwwQ0FBMEMsVUFBVTtBQUNwRDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSIsImZpbGUiOiI2NC5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5leHBvcnRzLmJ5dGVMZW5ndGggPSBieXRlTGVuZ3RoXG5leHBvcnRzLnRvQnl0ZUFycmF5ID0gdG9CeXRlQXJyYXlcbmV4cG9ydHMuZnJvbUJ5dGVBcnJheSA9IGZyb21CeXRlQXJyYXlcblxudmFyIGxvb2t1cCA9IFtdXG52YXIgcmV2TG9va3VwID0gW11cbnZhciBBcnIgPSB0eXBlb2YgVWludDhBcnJheSAhPT0gJ3VuZGVmaW5lZCcgPyBVaW50OEFycmF5IDogQXJyYXlcblxudmFyIGNvZGUgPSAnQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVphYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ejAxMjM0NTY3ODkrLydcbmZvciAodmFyIGkgPSAwLCBsZW4gPSBjb2RlLmxlbmd0aDsgaSA8IGxlbjsgKytpKSB7XG4gIGxvb2t1cFtpXSA9IGNvZGVbaV1cbiAgcmV2TG9va3VwW2NvZGUuY2hhckNvZGVBdChpKV0gPSBpXG59XG5cbi8vIFN1cHBvcnQgZGVjb2RpbmcgVVJMLXNhZmUgYmFzZTY0IHN0cmluZ3MsIGFzIE5vZGUuanMgZG9lcy5cbi8vIFNlZTogaHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvQmFzZTY0I1VSTF9hcHBsaWNhdGlvbnNcbnJldkxvb2t1cFsnLScuY2hhckNvZGVBdCgwKV0gPSA2MlxucmV2TG9va3VwWydfJy5jaGFyQ29kZUF0KDApXSA9IDYzXG5cbmZ1bmN0aW9uIGdldExlbnMgKGI2NCkge1xuICB2YXIgbGVuID0gYjY0Lmxlbmd0aFxuXG4gIGlmIChsZW4gJSA0ID4gMCkge1xuICAgIHRocm93IG5ldyBFcnJvcignSW52YWxpZCBzdHJpbmcuIExlbmd0aCBtdXN0IGJlIGEgbXVsdGlwbGUgb2YgNCcpXG4gIH1cblxuICAvLyBUcmltIG9mZiBleHRyYSBieXRlcyBhZnRlciBwbGFjZWhvbGRlciBieXRlcyBhcmUgZm91bmRcbiAgLy8gU2VlOiBodHRwczovL2dpdGh1Yi5jb20vYmVhdGdhbW1pdC9iYXNlNjQtanMvaXNzdWVzLzQyXG4gIHZhciB2YWxpZExlbiA9IGI2NC5pbmRleE9mKCc9JylcbiAgaWYgKHZhbGlkTGVuID09PSAtMSkgdmFsaWRMZW4gPSBsZW5cblxuICB2YXIgcGxhY2VIb2xkZXJzTGVuID0gdmFsaWRMZW4gPT09IGxlblxuICAgID8gMFxuICAgIDogNCAtICh2YWxpZExlbiAlIDQpXG5cbiAgcmV0dXJuIFt2YWxpZExlbiwgcGxhY2VIb2xkZXJzTGVuXVxufVxuXG4vLyBiYXNlNjQgaXMgNC8zICsgdXAgdG8gdHdvIGNoYXJhY3RlcnMgb2YgdGhlIG9yaWdpbmFsIGRhdGFcbmZ1bmN0aW9uIGJ5dGVMZW5ndGggKGI2NCkge1xuICB2YXIgbGVucyA9IGdldExlbnMoYjY0KVxuICB2YXIgdmFsaWRMZW4gPSBsZW5zWzBdXG4gIHZhciBwbGFjZUhvbGRlcnNMZW4gPSBsZW5zWzFdXG4gIHJldHVybiAoKHZhbGlkTGVuICsgcGxhY2VIb2xkZXJzTGVuKSAqIDMgLyA0KSAtIHBsYWNlSG9sZGVyc0xlblxufVxuXG5mdW5jdGlvbiBfYnl0ZUxlbmd0aCAoYjY0LCB2YWxpZExlbiwgcGxhY2VIb2xkZXJzTGVuKSB7XG4gIHJldHVybiAoKHZhbGlkTGVuICsgcGxhY2VIb2xkZXJzTGVuKSAqIDMgLyA0KSAtIHBsYWNlSG9sZGVyc0xlblxufVxuXG5mdW5jdGlvbiB0b0J5dGVBcnJheSAoYjY0KSB7XG4gIHZhciB0bXBcbiAgdmFyIGxlbnMgPSBnZXRMZW5zKGI2NClcbiAgdmFyIHZhbGlkTGVuID0gbGVuc1swXVxuICB2YXIgcGxhY2VIb2xkZXJzTGVuID0gbGVuc1sxXVxuXG4gIHZhciBhcnIgPSBuZXcgQXJyKF9ieXRlTGVuZ3RoKGI2NCwgdmFsaWRMZW4sIHBsYWNlSG9sZGVyc0xlbikpXG5cbiAgdmFyIGN1ckJ5dGUgPSAwXG5cbiAgLy8gaWYgdGhlcmUgYXJlIHBsYWNlaG9sZGVycywgb25seSBnZXQgdXAgdG8gdGhlIGxhc3QgY29tcGxldGUgNCBjaGFyc1xuICB2YXIgbGVuID0gcGxhY2VIb2xkZXJzTGVuID4gMFxuICAgID8gdmFsaWRMZW4gLSA0XG4gICAgOiB2YWxpZExlblxuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuOyBpICs9IDQpIHtcbiAgICB0bXAgPVxuICAgICAgKHJldkxvb2t1cFtiNjQuY2hhckNvZGVBdChpKV0gPDwgMTgpIHxcbiAgICAgIChyZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSArIDEpXSA8PCAxMikgfFxuICAgICAgKHJldkxvb2t1cFtiNjQuY2hhckNvZGVBdChpICsgMildIDw8IDYpIHxcbiAgICAgIHJldkxvb2t1cFtiNjQuY2hhckNvZGVBdChpICsgMyldXG4gICAgYXJyW2N1ckJ5dGUrK10gPSAodG1wID4+IDE2KSAmIDB4RkZcbiAgICBhcnJbY3VyQnl0ZSsrXSA9ICh0bXAgPj4gOCkgJiAweEZGXG4gICAgYXJyW2N1ckJ5dGUrK10gPSB0bXAgJiAweEZGXG4gIH1cblxuICBpZiAocGxhY2VIb2xkZXJzTGVuID09PSAyKSB7XG4gICAgdG1wID1cbiAgICAgIChyZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSldIDw8IDIpIHxcbiAgICAgIChyZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSArIDEpXSA+PiA0KVxuICAgIGFycltjdXJCeXRlKytdID0gdG1wICYgMHhGRlxuICB9XG5cbiAgaWYgKHBsYWNlSG9sZGVyc0xlbiA9PT0gMSkge1xuICAgIHRtcCA9XG4gICAgICAocmV2TG9va3VwW2I2NC5jaGFyQ29kZUF0KGkpXSA8PCAxMCkgfFxuICAgICAgKHJldkxvb2t1cFtiNjQuY2hhckNvZGVBdChpICsgMSldIDw8IDQpIHxcbiAgICAgIChyZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSArIDIpXSA+PiAyKVxuICAgIGFycltjdXJCeXRlKytdID0gKHRtcCA+PiA4KSAmIDB4RkZcbiAgICBhcnJbY3VyQnl0ZSsrXSA9IHRtcCAmIDB4RkZcbiAgfVxuXG4gIHJldHVybiBhcnJcbn1cblxuZnVuY3Rpb24gdHJpcGxldFRvQmFzZTY0IChudW0pIHtcbiAgcmV0dXJuIGxvb2t1cFtudW0gPj4gMTggJiAweDNGXSArXG4gICAgbG9va3VwW251bSA+PiAxMiAmIDB4M0ZdICtcbiAgICBsb29rdXBbbnVtID4+IDYgJiAweDNGXSArXG4gICAgbG9va3VwW251bSAmIDB4M0ZdXG59XG5cbmZ1bmN0aW9uIGVuY29kZUNodW5rICh1aW50OCwgc3RhcnQsIGVuZCkge1xuICB2YXIgdG1wXG4gIHZhciBvdXRwdXQgPSBbXVxuICBmb3IgKHZhciBpID0gc3RhcnQ7IGkgPCBlbmQ7IGkgKz0gMykge1xuICAgIHRtcCA9XG4gICAgICAoKHVpbnQ4W2ldIDw8IDE2KSAmIDB4RkYwMDAwKSArXG4gICAgICAoKHVpbnQ4W2kgKyAxXSA8PCA4KSAmIDB4RkYwMCkgK1xuICAgICAgKHVpbnQ4W2kgKyAyXSAmIDB4RkYpXG4gICAgb3V0cHV0LnB1c2godHJpcGxldFRvQmFzZTY0KHRtcCkpXG4gIH1cbiAgcmV0dXJuIG91dHB1dC5qb2luKCcnKVxufVxuXG5mdW5jdGlvbiBmcm9tQnl0ZUFycmF5ICh1aW50OCkge1xuICB2YXIgdG1wXG4gIHZhciBsZW4gPSB1aW50OC5sZW5ndGhcbiAgdmFyIGV4dHJhQnl0ZXMgPSBsZW4gJSAzIC8vIGlmIHdlIGhhdmUgMSBieXRlIGxlZnQsIHBhZCAyIGJ5dGVzXG4gIHZhciBwYXJ0cyA9IFtdXG4gIHZhciBtYXhDaHVua0xlbmd0aCA9IDE2MzgzIC8vIG11c3QgYmUgbXVsdGlwbGUgb2YgM1xuXG4gIC8vIGdvIHRocm91Z2ggdGhlIGFycmF5IGV2ZXJ5IHRocmVlIGJ5dGVzLCB3ZSdsbCBkZWFsIHdpdGggdHJhaWxpbmcgc3R1ZmYgbGF0ZXJcbiAgZm9yICh2YXIgaSA9IDAsIGxlbjIgPSBsZW4gLSBleHRyYUJ5dGVzOyBpIDwgbGVuMjsgaSArPSBtYXhDaHVua0xlbmd0aCkge1xuICAgIHBhcnRzLnB1c2goZW5jb2RlQ2h1bmsoXG4gICAgICB1aW50OCwgaSwgKGkgKyBtYXhDaHVua0xlbmd0aCkgPiBsZW4yID8gbGVuMiA6IChpICsgbWF4Q2h1bmtMZW5ndGgpXG4gICAgKSlcbiAgfVxuXG4gIC8vIHBhZCB0aGUgZW5kIHdpdGggemVyb3MsIGJ1dCBtYWtlIHN1cmUgdG8gbm90IGZvcmdldCB0aGUgZXh0cmEgYnl0ZXNcbiAgaWYgKGV4dHJhQnl0ZXMgPT09IDEpIHtcbiAgICB0bXAgPSB1aW50OFtsZW4gLSAxXVxuICAgIHBhcnRzLnB1c2goXG4gICAgICBsb29rdXBbdG1wID4+IDJdICtcbiAgICAgIGxvb2t1cFsodG1wIDw8IDQpICYgMHgzRl0gK1xuICAgICAgJz09J1xuICAgIClcbiAgfSBlbHNlIGlmIChleHRyYUJ5dGVzID09PSAyKSB7XG4gICAgdG1wID0gKHVpbnQ4W2xlbiAtIDJdIDw8IDgpICsgdWludDhbbGVuIC0gMV1cbiAgICBwYXJ0cy5wdXNoKFxuICAgICAgbG9va3VwW3RtcCA+PiAxMF0gK1xuICAgICAgbG9va3VwWyh0bXAgPj4gNCkgJiAweDNGXSArXG4gICAgICBsb29rdXBbKHRtcCA8PCAyKSAmIDB4M0ZdICtcbiAgICAgICc9J1xuICAgIClcbiAgfVxuXG4gIHJldHVybiBwYXJ0cy5qb2luKCcnKVxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///64\n")},function(module,exports){eval("exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaWVlZTc1NC9pbmRleC5qcz85MTUyIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLFdBQVc7O0FBRW5CO0FBQ0E7QUFDQTtBQUNBLFFBQVEsV0FBVzs7QUFFbkI7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBOztBQUVBLFFBQVEsV0FBVzs7QUFFbkI7QUFDQTtBQUNBLFFBQVEsVUFBVTs7QUFFbEI7QUFDQSIsImZpbGUiOiI2NS5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydHMucmVhZCA9IGZ1bmN0aW9uIChidWZmZXIsIG9mZnNldCwgaXNMRSwgbUxlbiwgbkJ5dGVzKSB7XG4gIHZhciBlLCBtXG4gIHZhciBlTGVuID0gKG5CeXRlcyAqIDgpIC0gbUxlbiAtIDFcbiAgdmFyIGVNYXggPSAoMSA8PCBlTGVuKSAtIDFcbiAgdmFyIGVCaWFzID0gZU1heCA+PiAxXG4gIHZhciBuQml0cyA9IC03XG4gIHZhciBpID0gaXNMRSA/IChuQnl0ZXMgLSAxKSA6IDBcbiAgdmFyIGQgPSBpc0xFID8gLTEgOiAxXG4gIHZhciBzID0gYnVmZmVyW29mZnNldCArIGldXG5cbiAgaSArPSBkXG5cbiAgZSA9IHMgJiAoKDEgPDwgKC1uQml0cykpIC0gMSlcbiAgcyA+Pj0gKC1uQml0cylcbiAgbkJpdHMgKz0gZUxlblxuICBmb3IgKDsgbkJpdHMgPiAwOyBlID0gKGUgKiAyNTYpICsgYnVmZmVyW29mZnNldCArIGldLCBpICs9IGQsIG5CaXRzIC09IDgpIHt9XG5cbiAgbSA9IGUgJiAoKDEgPDwgKC1uQml0cykpIC0gMSlcbiAgZSA+Pj0gKC1uQml0cylcbiAgbkJpdHMgKz0gbUxlblxuICBmb3IgKDsgbkJpdHMgPiAwOyBtID0gKG0gKiAyNTYpICsgYnVmZmVyW29mZnNldCArIGldLCBpICs9IGQsIG5CaXRzIC09IDgpIHt9XG5cbiAgaWYgKGUgPT09IDApIHtcbiAgICBlID0gMSAtIGVCaWFzXG4gIH0gZWxzZSBpZiAoZSA9PT0gZU1heCkge1xuICAgIHJldHVybiBtID8gTmFOIDogKChzID8gLTEgOiAxKSAqIEluZmluaXR5KVxuICB9IGVsc2Uge1xuICAgIG0gPSBtICsgTWF0aC5wb3coMiwgbUxlbilcbiAgICBlID0gZSAtIGVCaWFzXG4gIH1cbiAgcmV0dXJuIChzID8gLTEgOiAxKSAqIG0gKiBNYXRoLnBvdygyLCBlIC0gbUxlbilcbn1cblxuZXhwb3J0cy53cml0ZSA9IGZ1bmN0aW9uIChidWZmZXIsIHZhbHVlLCBvZmZzZXQsIGlzTEUsIG1MZW4sIG5CeXRlcykge1xuICB2YXIgZSwgbSwgY1xuICB2YXIgZUxlbiA9IChuQnl0ZXMgKiA4KSAtIG1MZW4gLSAxXG4gIHZhciBlTWF4ID0gKDEgPDwgZUxlbikgLSAxXG4gIHZhciBlQmlhcyA9IGVNYXggPj4gMVxuICB2YXIgcnQgPSAobUxlbiA9PT0gMjMgPyBNYXRoLnBvdygyLCAtMjQpIC0gTWF0aC5wb3coMiwgLTc3KSA6IDApXG4gIHZhciBpID0gaXNMRSA/IDAgOiAobkJ5dGVzIC0gMSlcbiAgdmFyIGQgPSBpc0xFID8gMSA6IC0xXG4gIHZhciBzID0gdmFsdWUgPCAwIHx8ICh2YWx1ZSA9PT0gMCAmJiAxIC8gdmFsdWUgPCAwKSA/IDEgOiAwXG5cbiAgdmFsdWUgPSBNYXRoLmFicyh2YWx1ZSlcblxuICBpZiAoaXNOYU4odmFsdWUpIHx8IHZhbHVlID09PSBJbmZpbml0eSkge1xuICAgIG0gPSBpc05hTih2YWx1ZSkgPyAxIDogMFxuICAgIGUgPSBlTWF4XG4gIH0gZWxzZSB7XG4gICAgZSA9IE1hdGguZmxvb3IoTWF0aC5sb2codmFsdWUpIC8gTWF0aC5MTjIpXG4gICAgaWYgKHZhbHVlICogKGMgPSBNYXRoLnBvdygyLCAtZSkpIDwgMSkge1xuICAgICAgZS0tXG4gICAgICBjICo9IDJcbiAgICB9XG4gICAgaWYgKGUgKyBlQmlhcyA+PSAxKSB7XG4gICAgICB2YWx1ZSArPSBydCAvIGNcbiAgICB9IGVsc2Uge1xuICAgICAgdmFsdWUgKz0gcnQgKiBNYXRoLnBvdygyLCAxIC0gZUJpYXMpXG4gICAgfVxuICAgIGlmICh2YWx1ZSAqIGMgPj0gMikge1xuICAgICAgZSsrXG4gICAgICBjIC89IDJcbiAgICB9XG5cbiAgICBpZiAoZSArIGVCaWFzID49IGVNYXgpIHtcbiAgICAgIG0gPSAwXG4gICAgICBlID0gZU1heFxuICAgIH0gZWxzZSBpZiAoZSArIGVCaWFzID49IDEpIHtcbiAgICAgIG0gPSAoKHZhbHVlICogYykgLSAxKSAqIE1hdGgucG93KDIsIG1MZW4pXG4gICAgICBlID0gZSArIGVCaWFzXG4gICAgfSBlbHNlIHtcbiAgICAgIG0gPSB2YWx1ZSAqIE1hdGgucG93KDIsIGVCaWFzIC0gMSkgKiBNYXRoLnBvdygyLCBtTGVuKVxuICAgICAgZSA9IDBcbiAgICB9XG4gIH1cblxuICBmb3IgKDsgbUxlbiA+PSA4OyBidWZmZXJbb2Zmc2V0ICsgaV0gPSBtICYgMHhmZiwgaSArPSBkLCBtIC89IDI1NiwgbUxlbiAtPSA4KSB7fVxuXG4gIGUgPSAoZSA8PCBtTGVuKSB8IG1cbiAgZUxlbiArPSBtTGVuXG4gIGZvciAoOyBlTGVuID4gMDsgYnVmZmVyW29mZnNldCArIGldID0gZSAmIDB4ZmYsIGkgKz0gZCwgZSAvPSAyNTYsIGVMZW4gLT0gOCkge31cblxuICBidWZmZXJbb2Zmc2V0ICsgaSAtIGRdIHw9IHMgKiAxMjhcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///65\n")},function(module,exports,__webpack_require__){eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = Stream;\n\nvar EE = __webpack_require__(21).EventEmitter;\nvar inherits = __webpack_require__(7);\n\ninherits(Stream, EE);\nStream.Readable = __webpack_require__(22);\nStream.Writable = __webpack_require__(74);\nStream.Duplex = __webpack_require__(75);\nStream.Transform = __webpack_require__(76);\nStream.PassThrough = __webpack_require__(77);\n\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream;\n\n\n\n// old-style streams.  Note that the pipe method (the only relevant\n// part of this class) is overridden in the Readable class.\n\nfunction Stream() {\n  EE.call(this);\n}\n\nStream.prototype.pipe = function(dest, options) {\n  var source = this;\n\n  function ondata(chunk) {\n    if (dest.writable) {\n      if (false === dest.write(chunk) && source.pause) {\n        source.pause();\n      }\n    }\n  }\n\n  source.on('data', ondata);\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume();\n    }\n  }\n\n  dest.on('drain', ondrain);\n\n  // If the 'end' option is not supplied, dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end', onend);\n    source.on('close', onclose);\n  }\n\n  var didOnEnd = false;\n  function onend() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    dest.end();\n  }\n\n\n  function onclose() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    if (typeof dest.destroy === 'function') dest.destroy();\n  }\n\n  // don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup();\n    if (EE.listenerCount(this, 'error') === 0) {\n      throw er; // Unhandled stream error in pipe.\n    }\n  }\n\n  source.on('error', onerror);\n  dest.on('error', onerror);\n\n  // remove all the event listeners that were added.\n  function cleanup() {\n    source.removeListener('data', ondata);\n    dest.removeListener('drain', ondrain);\n\n    source.removeListener('end', onend);\n    source.removeListener('close', onclose);\n\n    source.removeListener('error', onerror);\n    dest.removeListener('error', onerror);\n\n    source.removeListener('end', cleanup);\n    source.removeListener('close', cleanup);\n\n    dest.removeListener('close', cleanup);\n  }\n\n  source.on('end', cleanup);\n  source.on('close', cleanup);\n\n  dest.on('close', cleanup);\n\n  dest.emit('pipe', source);\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc3RyZWFtLWJyb3dzZXJpZnkvaW5kZXguanM/ZDQ4NSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBLFNBQVMsbUJBQU8sQ0FBQyxFQUFRO0FBQ3pCLGVBQWUsbUJBQU8sQ0FBQyxDQUFVOztBQUVqQztBQUNBLGtCQUFrQixtQkFBTyxDQUFDLEVBQTZCO0FBQ3ZELGtCQUFrQixtQkFBTyxDQUFDLEVBQTZCO0FBQ3ZELGdCQUFnQixtQkFBTyxDQUFDLEVBQTJCO0FBQ25ELG1CQUFtQixtQkFBTyxDQUFDLEVBQThCO0FBQ3pELHFCQUFxQixtQkFBTyxDQUFDLEVBQWdDOztBQUU3RDtBQUNBOzs7O0FBSUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7QUFDQSIsImZpbGUiOiI2Ni5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCBKb3llbnQsIEluYy4gYW5kIG90aGVyIE5vZGUgY29udHJpYnV0b3JzLlxuLy9cbi8vIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhXG4vLyBjb3B5IG9mIHRoaXMgc29mdHdhcmUgYW5kIGFzc29jaWF0ZWQgZG9jdW1lbnRhdGlvbiBmaWxlcyAodGhlXG4vLyBcIlNvZnR3YXJlXCIpLCB0byBkZWFsIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmdcbi8vIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCxcbi8vIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vciBzZWxsIGNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXRcbi8vIHBlcnNvbnMgdG8gd2hvbSB0aGUgU29mdHdhcmUgaXMgZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvIHRoZVxuLy8gZm9sbG93aW5nIGNvbmRpdGlvbnM6XG4vL1xuLy8gVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWRcbi8vIGluIGFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLlxuLy9cbi8vIFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCBcIkFTIElTXCIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1Ncbi8vIE9SIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0Zcbi8vIE1FUkNIQU5UQUJJTElUWSwgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gSU5cbi8vIE5PIEVWRU5UIFNIQUxMIFRIRSBBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLFxuLy8gREFNQUdFUyBPUiBPVEhFUiBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SXG4vLyBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSwgT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFXG4vLyBVU0UgT1IgT1RIRVIgREVBTElOR1MgSU4gVEhFIFNPRlRXQVJFLlxuXG5tb2R1bGUuZXhwb3J0cyA9IFN0cmVhbTtcblxudmFyIEVFID0gcmVxdWlyZSgnZXZlbnRzJykuRXZlbnRFbWl0dGVyO1xudmFyIGluaGVyaXRzID0gcmVxdWlyZSgnaW5oZXJpdHMnKTtcblxuaW5oZXJpdHMoU3RyZWFtLCBFRSk7XG5TdHJlYW0uUmVhZGFibGUgPSByZXF1aXJlKCdyZWFkYWJsZS1zdHJlYW0vcmVhZGFibGUuanMnKTtcblN0cmVhbS5Xcml0YWJsZSA9IHJlcXVpcmUoJ3JlYWRhYmxlLXN0cmVhbS93cml0YWJsZS5qcycpO1xuU3RyZWFtLkR1cGxleCA9IHJlcXVpcmUoJ3JlYWRhYmxlLXN0cmVhbS9kdXBsZXguanMnKTtcblN0cmVhbS5UcmFuc2Zvcm0gPSByZXF1aXJlKCdyZWFkYWJsZS1zdHJlYW0vdHJhbnNmb3JtLmpzJyk7XG5TdHJlYW0uUGFzc1Rocm91Z2ggPSByZXF1aXJlKCdyZWFkYWJsZS1zdHJlYW0vcGFzc3Rocm91Z2guanMnKTtcblxuLy8gQmFja3dhcmRzLWNvbXBhdCB3aXRoIG5vZGUgMC40LnhcblN0cmVhbS5TdHJlYW0gPSBTdHJlYW07XG5cblxuXG4vLyBvbGQtc3R5bGUgc3RyZWFtcy4gIE5vdGUgdGhhdCB0aGUgcGlwZSBtZXRob2QgKHRoZSBvbmx5IHJlbGV2YW50XG4vLyBwYXJ0IG9mIHRoaXMgY2xhc3MpIGlzIG92ZXJyaWRkZW4gaW4gdGhlIFJlYWRhYmxlIGNsYXNzLlxuXG5mdW5jdGlvbiBTdHJlYW0oKSB7XG4gIEVFLmNhbGwodGhpcyk7XG59XG5cblN0cmVhbS5wcm90b3R5cGUucGlwZSA9IGZ1bmN0aW9uKGRlc3QsIG9wdGlvbnMpIHtcbiAgdmFyIHNvdXJjZSA9IHRoaXM7XG5cbiAgZnVuY3Rpb24gb25kYXRhKGNodW5rKSB7XG4gICAgaWYgKGRlc3Qud3JpdGFibGUpIHtcbiAgICAgIGlmIChmYWxzZSA9PT0gZGVzdC53cml0ZShjaHVuaykgJiYgc291cmNlLnBhdXNlKSB7XG4gICAgICAgIHNvdXJjZS5wYXVzZSgpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHNvdXJjZS5vbignZGF0YScsIG9uZGF0YSk7XG5cbiAgZnVuY3Rpb24gb25kcmFpbigpIHtcbiAgICBpZiAoc291cmNlLnJlYWRhYmxlICYmIHNvdXJjZS5yZXN1bWUpIHtcbiAgICAgIHNvdXJjZS5yZXN1bWUoKTtcbiAgICB9XG4gIH1cblxuICBkZXN0Lm9uKCdkcmFpbicsIG9uZHJhaW4pO1xuXG4gIC8vIElmIHRoZSAnZW5kJyBvcHRpb24gaXMgbm90IHN1cHBsaWVkLCBkZXN0LmVuZCgpIHdpbGwgYmUgY2FsbGVkIHdoZW5cbiAgLy8gc291cmNlIGdldHMgdGhlICdlbmQnIG9yICdjbG9zZScgZXZlbnRzLiAgT25seSBkZXN0LmVuZCgpIG9uY2UuXG4gIGlmICghZGVzdC5faXNTdGRpbyAmJiAoIW9wdGlvbnMgfHwgb3B0aW9ucy5lbmQgIT09IGZhbHNlKSkge1xuICAgIHNvdXJjZS5vbignZW5kJywgb25lbmQpO1xuICAgIHNvdXJjZS5vbignY2xvc2UnLCBvbmNsb3NlKTtcbiAgfVxuXG4gIHZhciBkaWRPbkVuZCA9IGZhbHNlO1xuICBmdW5jdGlvbiBvbmVuZCgpIHtcbiAgICBpZiAoZGlkT25FbmQpIHJldHVybjtcbiAgICBkaWRPbkVuZCA9IHRydWU7XG5cbiAgICBkZXN0LmVuZCgpO1xuICB9XG5cblxuICBmdW5jdGlvbiBvbmNsb3NlKCkge1xuICAgIGlmIChkaWRPbkVuZCkgcmV0dXJuO1xuICAgIGRpZE9uRW5kID0gdHJ1ZTtcblxuICAgIGlmICh0eXBlb2YgZGVzdC5kZXN0cm95ID09PSAnZnVuY3Rpb24nKSBkZXN0LmRlc3Ryb3koKTtcbiAgfVxuXG4gIC8vIGRvbid0IGxlYXZlIGRhbmdsaW5nIHBpcGVzIHdoZW4gdGhlcmUgYXJlIGVycm9ycy5cbiAgZnVuY3Rpb24gb25lcnJvcihlcikge1xuICAgIGNsZWFudXAoKTtcbiAgICBpZiAoRUUubGlzdGVuZXJDb3VudCh0aGlzLCAnZXJyb3InKSA9PT0gMCkge1xuICAgICAgdGhyb3cgZXI7IC8vIFVuaGFuZGxlZCBzdHJlYW0gZXJyb3IgaW4gcGlwZS5cbiAgICB9XG4gIH1cblxuICBzb3VyY2Uub24oJ2Vycm9yJywgb25lcnJvcik7XG4gIGRlc3Qub24oJ2Vycm9yJywgb25lcnJvcik7XG5cbiAgLy8gcmVtb3ZlIGFsbCB0aGUgZXZlbnQgbGlzdGVuZXJzIHRoYXQgd2VyZSBhZGRlZC5cbiAgZnVuY3Rpb24gY2xlYW51cCgpIHtcbiAgICBzb3VyY2UucmVtb3ZlTGlzdGVuZXIoJ2RhdGEnLCBvbmRhdGEpO1xuICAgIGRlc3QucmVtb3ZlTGlzdGVuZXIoJ2RyYWluJywgb25kcmFpbik7XG5cbiAgICBzb3VyY2UucmVtb3ZlTGlzdGVuZXIoJ2VuZCcsIG9uZW5kKTtcbiAgICBzb3VyY2UucmVtb3ZlTGlzdGVuZXIoJ2Nsb3NlJywgb25jbG9zZSk7XG5cbiAgICBzb3VyY2UucmVtb3ZlTGlzdGVuZXIoJ2Vycm9yJywgb25lcnJvcik7XG4gICAgZGVzdC5yZW1vdmVMaXN0ZW5lcignZXJyb3InLCBvbmVycm9yKTtcblxuICAgIHNvdXJjZS5yZW1vdmVMaXN0ZW5lcignZW5kJywgY2xlYW51cCk7XG4gICAgc291cmNlLnJlbW92ZUxpc3RlbmVyKCdjbG9zZScsIGNsZWFudXApO1xuXG4gICAgZGVzdC5yZW1vdmVMaXN0ZW5lcignY2xvc2UnLCBjbGVhbnVwKTtcbiAgfVxuXG4gIHNvdXJjZS5vbignZW5kJywgY2xlYW51cCk7XG4gIHNvdXJjZS5vbignY2xvc2UnLCBjbGVhbnVwKTtcblxuICBkZXN0Lm9uKCdjbG9zZScsIGNsZWFudXApO1xuXG4gIGRlc3QuZW1pdCgncGlwZScsIHNvdXJjZSk7XG5cbiAgLy8gQWxsb3cgZm9yIHVuaXgtbGlrZSB1c2FnZTogQS5waXBlKEIpLnBpcGUoQylcbiAgcmV0dXJuIGRlc3Q7XG59O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///66\n")},function(module,exports){eval("/* (ignored) *///# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vdXRpbCAoaWdub3JlZCk/MjlkNCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiI2Ny5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIChpZ25vcmVkKSAqLyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///67\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Buffer = __webpack_require__(16).Buffer;\nvar util = __webpack_require__(69);\n\nfunction copyBuffer(src, target, offset) {\n  src.copy(target, offset);\n}\n\nmodule.exports = function () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  BufferList.prototype.push = function push(v) {\n    var entry = { data: v, next: null };\n    if (this.length > 0) this.tail.next = entry;else this.head = entry;\n    this.tail = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.unshift = function unshift(v) {\n    var entry = { data: v, next: this.head };\n    if (this.length === 0) this.tail = entry;\n    this.head = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.shift = function shift() {\n    if (this.length === 0) return;\n    var ret = this.head.data;\n    if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n    --this.length;\n    return ret;\n  };\n\n  BufferList.prototype.clear = function clear() {\n    this.head = this.tail = null;\n    this.length = 0;\n  };\n\n  BufferList.prototype.join = function join(s) {\n    if (this.length === 0) return '';\n    var p = this.head;\n    var ret = '' + p.data;\n    while (p = p.next) {\n      ret += s + p.data;\n    }return ret;\n  };\n\n  BufferList.prototype.concat = function concat(n) {\n    if (this.length === 0) return Buffer.alloc(0);\n    if (this.length === 1) return this.head.data;\n    var ret = Buffer.allocUnsafe(n >>> 0);\n    var p = this.head;\n    var i = 0;\n    while (p) {\n      copyBuffer(p.data, ret, i);\n      i += p.data.length;\n      p = p.next;\n    }\n    return ret;\n  };\n\n  return BufferList;\n}();\n\nif (util && util.inspect && util.inspect.custom) {\n  module.exports.prototype[util.inspect.custom] = function () {\n    var obj = util.inspect({ length: this.length });\n    return this.constructor.name + ' ' + obj;\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhZGFibGUtc3RyZWFtL2xpYi9pbnRlcm5hbC9zdHJlYW1zL0J1ZmZlckxpc3QuanM/NWUxYSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixpREFBaUQsMENBQTBDLDBEQUEwRCxFQUFFOztBQUV2SixhQUFhLG1CQUFPLENBQUMsRUFBYTtBQUNsQyxXQUFXLG1CQUFPLENBQUMsRUFBTTs7QUFFekI7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGlCQUFpQjtBQUNqQixnREFBZ0Q7QUFDaEQ7QUFDQTtBQUNBOztBQUVBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLHdEQUF3RDtBQUN4RDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0EsNEJBQTRCLHNCQUFzQjtBQUNsRDtBQUNBO0FBQ0EiLCJmaWxlIjoiNjguanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbnZhciBCdWZmZXIgPSByZXF1aXJlKCdzYWZlLWJ1ZmZlcicpLkJ1ZmZlcjtcbnZhciB1dGlsID0gcmVxdWlyZSgndXRpbCcpO1xuXG5mdW5jdGlvbiBjb3B5QnVmZmVyKHNyYywgdGFyZ2V0LCBvZmZzZXQpIHtcbiAgc3JjLmNvcHkodGFyZ2V0LCBvZmZzZXQpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICgpIHtcbiAgZnVuY3Rpb24gQnVmZmVyTGlzdCgpIHtcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgQnVmZmVyTGlzdCk7XG5cbiAgICB0aGlzLmhlYWQgPSBudWxsO1xuICAgIHRoaXMudGFpbCA9IG51bGw7XG4gICAgdGhpcy5sZW5ndGggPSAwO1xuICB9XG5cbiAgQnVmZmVyTGlzdC5wcm90b3R5cGUucHVzaCA9IGZ1bmN0aW9uIHB1c2godikge1xuICAgIHZhciBlbnRyeSA9IHsgZGF0YTogdiwgbmV4dDogbnVsbCB9O1xuICAgIGlmICh0aGlzLmxlbmd0aCA+IDApIHRoaXMudGFpbC5uZXh0ID0gZW50cnk7ZWxzZSB0aGlzLmhlYWQgPSBlbnRyeTtcbiAgICB0aGlzLnRhaWwgPSBlbnRyeTtcbiAgICArK3RoaXMubGVuZ3RoO1xuICB9O1xuXG4gIEJ1ZmZlckxpc3QucHJvdG90eXBlLnVuc2hpZnQgPSBmdW5jdGlvbiB1bnNoaWZ0KHYpIHtcbiAgICB2YXIgZW50cnkgPSB7IGRhdGE6IHYsIG5leHQ6IHRoaXMuaGVhZCB9O1xuICAgIGlmICh0aGlzLmxlbmd0aCA9PT0gMCkgdGhpcy50YWlsID0gZW50cnk7XG4gICAgdGhpcy5oZWFkID0gZW50cnk7XG4gICAgKyt0aGlzLmxlbmd0aDtcbiAgfTtcblxuICBCdWZmZXJMaXN0LnByb3RvdHlwZS5zaGlmdCA9IGZ1bmN0aW9uIHNoaWZ0KCkge1xuICAgIGlmICh0aGlzLmxlbmd0aCA9PT0gMCkgcmV0dXJuO1xuICAgIHZhciByZXQgPSB0aGlzLmhlYWQuZGF0YTtcbiAgICBpZiAodGhpcy5sZW5ndGggPT09IDEpIHRoaXMuaGVhZCA9IHRoaXMudGFpbCA9IG51bGw7ZWxzZSB0aGlzLmhlYWQgPSB0aGlzLmhlYWQubmV4dDtcbiAgICAtLXRoaXMubGVuZ3RoO1xuICAgIHJldHVybiByZXQ7XG4gIH07XG5cbiAgQnVmZmVyTGlzdC5wcm90b3R5cGUuY2xlYXIgPSBmdW5jdGlvbiBjbGVhcigpIHtcbiAgICB0aGlzLmhlYWQgPSB0aGlzLnRhaWwgPSBudWxsO1xuICAgIHRoaXMubGVuZ3RoID0gMDtcbiAgfTtcblxuICBCdWZmZXJMaXN0LnByb3RvdHlwZS5qb2luID0gZnVuY3Rpb24gam9pbihzKSB7XG4gICAgaWYgKHRoaXMubGVuZ3RoID09PSAwKSByZXR1cm4gJyc7XG4gICAgdmFyIHAgPSB0aGlzLmhlYWQ7XG4gICAgdmFyIHJldCA9ICcnICsgcC5kYXRhO1xuICAgIHdoaWxlIChwID0gcC5uZXh0KSB7XG4gICAgICByZXQgKz0gcyArIHAuZGF0YTtcbiAgICB9cmV0dXJuIHJldDtcbiAgfTtcblxuICBCdWZmZXJMaXN0LnByb3RvdHlwZS5jb25jYXQgPSBmdW5jdGlvbiBjb25jYXQobikge1xuICAgIGlmICh0aGlzLmxlbmd0aCA9PT0gMCkgcmV0dXJuIEJ1ZmZlci5hbGxvYygwKTtcbiAgICBpZiAodGhpcy5sZW5ndGggPT09IDEpIHJldHVybiB0aGlzLmhlYWQuZGF0YTtcbiAgICB2YXIgcmV0ID0gQnVmZmVyLmFsbG9jVW5zYWZlKG4gPj4+IDApO1xuICAgIHZhciBwID0gdGhpcy5oZWFkO1xuICAgIHZhciBpID0gMDtcbiAgICB3aGlsZSAocCkge1xuICAgICAgY29weUJ1ZmZlcihwLmRhdGEsIHJldCwgaSk7XG4gICAgICBpICs9IHAuZGF0YS5sZW5ndGg7XG4gICAgICBwID0gcC5uZXh0O1xuICAgIH1cbiAgICByZXR1cm4gcmV0O1xuICB9O1xuXG4gIHJldHVybiBCdWZmZXJMaXN0O1xufSgpO1xuXG5pZiAodXRpbCAmJiB1dGlsLmluc3BlY3QgJiYgdXRpbC5pbnNwZWN0LmN1c3RvbSkge1xuICBtb2R1bGUuZXhwb3J0cy5wcm90b3R5cGVbdXRpbC5pbnNwZWN0LmN1c3RvbV0gPSBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIG9iaiA9IHV0aWwuaW5zcGVjdCh7IGxlbmd0aDogdGhpcy5sZW5ndGggfSk7XG4gICAgcmV0dXJuIHRoaXMuY29uc3RydWN0b3IubmFtZSArICcgJyArIG9iajtcbiAgfTtcbn0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///68\n")},function(module,exports){eval("/* (ignored) *///# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vdXRpbCAoaWdub3JlZCk/MmRlMCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiI2OS5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIChpZ25vcmVkKSAqLyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///69\n")},function(module,exports,__webpack_require__){eval('/* WEBPACK VAR INJECTION */(function(global) {var scope = (typeof global !== "undefined" && global) ||\n            (typeof self !== "undefined" && self) ||\n            window;\nvar apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(scope, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\n__webpack_require__(71);\n// On some exotic environments, it\'s not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== "undefined" && self.setImmediate) ||\n                       (typeof global !== "undefined" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== "undefined" && self.clearImmediate) ||\n                         (typeof global !== "undefined" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(6)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbm9kZS1saWJzLWJyb3dzZXIvbm9kZV9tb2R1bGVzL3RpbWVycy1icm93c2VyaWZ5L21haW4uanM/MDlmYyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBO0FBQ0EsbUJBQU8sQ0FBQyxFQUFjO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiI3MC5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBzY29wZSA9ICh0eXBlb2YgZ2xvYmFsICE9PSBcInVuZGVmaW5lZFwiICYmIGdsb2JhbCkgfHxcbiAgICAgICAgICAgICh0eXBlb2Ygc2VsZiAhPT0gXCJ1bmRlZmluZWRcIiAmJiBzZWxmKSB8fFxuICAgICAgICAgICAgd2luZG93O1xudmFyIGFwcGx5ID0gRnVuY3Rpb24ucHJvdG90eXBlLmFwcGx5O1xuXG4vLyBET00gQVBJcywgZm9yIGNvbXBsZXRlbmVzc1xuXG5leHBvcnRzLnNldFRpbWVvdXQgPSBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIG5ldyBUaW1lb3V0KGFwcGx5LmNhbGwoc2V0VGltZW91dCwgc2NvcGUsIGFyZ3VtZW50cyksIGNsZWFyVGltZW91dCk7XG59O1xuZXhwb3J0cy5zZXRJbnRlcnZhbCA9IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gbmV3IFRpbWVvdXQoYXBwbHkuY2FsbChzZXRJbnRlcnZhbCwgc2NvcGUsIGFyZ3VtZW50cyksIGNsZWFySW50ZXJ2YWwpO1xufTtcbmV4cG9ydHMuY2xlYXJUaW1lb3V0ID1cbmV4cG9ydHMuY2xlYXJJbnRlcnZhbCA9IGZ1bmN0aW9uKHRpbWVvdXQpIHtcbiAgaWYgKHRpbWVvdXQpIHtcbiAgICB0aW1lb3V0LmNsb3NlKCk7XG4gIH1cbn07XG5cbmZ1bmN0aW9uIFRpbWVvdXQoaWQsIGNsZWFyRm4pIHtcbiAgdGhpcy5faWQgPSBpZDtcbiAgdGhpcy5fY2xlYXJGbiA9IGNsZWFyRm47XG59XG5UaW1lb3V0LnByb3RvdHlwZS51bnJlZiA9IFRpbWVvdXQucHJvdG90eXBlLnJlZiA9IGZ1bmN0aW9uKCkge307XG5UaW1lb3V0LnByb3RvdHlwZS5jbG9zZSA9IGZ1bmN0aW9uKCkge1xuICB0aGlzLl9jbGVhckZuLmNhbGwoc2NvcGUsIHRoaXMuX2lkKTtcbn07XG5cbi8vIERvZXMgbm90IHN0YXJ0IHRoZSB0aW1lLCBqdXN0IHNldHMgdXAgdGhlIG1lbWJlcnMgbmVlZGVkLlxuZXhwb3J0cy5lbnJvbGwgPSBmdW5jdGlvbihpdGVtLCBtc2Vjcykge1xuICBjbGVhclRpbWVvdXQoaXRlbS5faWRsZVRpbWVvdXRJZCk7XG4gIGl0ZW0uX2lkbGVUaW1lb3V0ID0gbXNlY3M7XG59O1xuXG5leHBvcnRzLnVuZW5yb2xsID0gZnVuY3Rpb24oaXRlbSkge1xuICBjbGVhclRpbWVvdXQoaXRlbS5faWRsZVRpbWVvdXRJZCk7XG4gIGl0ZW0uX2lkbGVUaW1lb3V0ID0gLTE7XG59O1xuXG5leHBvcnRzLl91bnJlZkFjdGl2ZSA9IGV4cG9ydHMuYWN0aXZlID0gZnVuY3Rpb24oaXRlbSkge1xuICBjbGVhclRpbWVvdXQoaXRlbS5faWRsZVRpbWVvdXRJZCk7XG5cbiAgdmFyIG1zZWNzID0gaXRlbS5faWRsZVRpbWVvdXQ7XG4gIGlmIChtc2VjcyA+PSAwKSB7XG4gICAgaXRlbS5faWRsZVRpbWVvdXRJZCA9IHNldFRpbWVvdXQoZnVuY3Rpb24gb25UaW1lb3V0KCkge1xuICAgICAgaWYgKGl0ZW0uX29uVGltZW91dClcbiAgICAgICAgaXRlbS5fb25UaW1lb3V0KCk7XG4gICAgfSwgbXNlY3MpO1xuICB9XG59O1xuXG4vLyBzZXRpbW1lZGlhdGUgYXR0YWNoZXMgaXRzZWxmIHRvIHRoZSBnbG9iYWwgb2JqZWN0XG5yZXF1aXJlKFwic2V0aW1tZWRpYXRlXCIpO1xuLy8gT24gc29tZSBleG90aWMgZW52aXJvbm1lbnRzLCBpdCdzIG5vdCBjbGVhciB3aGljaCBvYmplY3QgYHNldGltbWVkaWF0ZWAgd2FzXG4vLyBhYmxlIHRvIGluc3RhbGwgb250by4gIFNlYXJjaCBlYWNoIHBvc3NpYmlsaXR5IGluIHRoZSBzYW1lIG9yZGVyIGFzIHRoZVxuLy8gYHNldGltbWVkaWF0ZWAgbGlicmFyeS5cbmV4cG9ydHMuc2V0SW1tZWRpYXRlID0gKHR5cGVvZiBzZWxmICE9PSBcInVuZGVmaW5lZFwiICYmIHNlbGYuc2V0SW1tZWRpYXRlKSB8fFxuICAgICAgICAgICAgICAgICAgICAgICAodHlwZW9mIGdsb2JhbCAhPT0gXCJ1bmRlZmluZWRcIiAmJiBnbG9iYWwuc2V0SW1tZWRpYXRlKSB8fFxuICAgICAgICAgICAgICAgICAgICAgICAodGhpcyAmJiB0aGlzLnNldEltbWVkaWF0ZSk7XG5leHBvcnRzLmNsZWFySW1tZWRpYXRlID0gKHR5cGVvZiBzZWxmICE9PSBcInVuZGVmaW5lZFwiICYmIHNlbGYuY2xlYXJJbW1lZGlhdGUpIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICAgKHR5cGVvZiBnbG9iYWwgIT09IFwidW5kZWZpbmVkXCIgJiYgZ2xvYmFsLmNsZWFySW1tZWRpYXRlKSB8fFxuICAgICAgICAgICAgICAgICAgICAgICAgICh0aGlzICYmIHRoaXMuY2xlYXJJbW1lZGlhdGUpO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///70\n')},function(module,exports,__webpack_require__){eval('/* WEBPACK VAR INJECTION */(function(global, process) {(function (global, undefined) {\n    "use strict";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== "function") {\n        callback = new Function("" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: "Wait until any invocations of this algorithm started before this one have completed."\n        // So if we\'re currently running a task, we\'ll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // "too much recursion" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can\'t be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage("", "*");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = "setImmediate$" + Math.random() + "$";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === "string" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener("message", onGlobalMessage, false);\n        } else {\n            global.attachEvent("onmessage", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, "*");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it\'s been called.\n            var script = doc.createElement("script");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don\'t get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === "[object process]") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && "onreadystatechange" in doc.createElement("script")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === "undefined" ? typeof global === "undefined" ? this : global : self));\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(6), __webpack_require__(14)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///71\n')},function(module,exports,__webpack_require__){eval("/* WEBPACK VAR INJECTION */(function(global) {\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(6)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdXRpbC1kZXByZWNhdGUvYnJvd3Nlci5qcz9iN2QxIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxTQUFTO0FBQ3BCLFdBQVcsT0FBTztBQUNsQixhQUFhLFNBQVM7QUFDdEI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixhQUFhO0FBQ2I7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiNzIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbi8qKlxuICogTW9kdWxlIGV4cG9ydHMuXG4gKi9cblxubW9kdWxlLmV4cG9ydHMgPSBkZXByZWNhdGU7XG5cbi8qKlxuICogTWFyayB0aGF0IGEgbWV0aG9kIHNob3VsZCBub3QgYmUgdXNlZC5cbiAqIFJldHVybnMgYSBtb2RpZmllZCBmdW5jdGlvbiB3aGljaCB3YXJucyBvbmNlIGJ5IGRlZmF1bHQuXG4gKlxuICogSWYgYGxvY2FsU3RvcmFnZS5ub0RlcHJlY2F0aW9uID0gdHJ1ZWAgaXMgc2V0LCB0aGVuIGl0IGlzIGEgbm8tb3AuXG4gKlxuICogSWYgYGxvY2FsU3RvcmFnZS50aHJvd0RlcHJlY2F0aW9uID0gdHJ1ZWAgaXMgc2V0LCB0aGVuIGRlcHJlY2F0ZWQgZnVuY3Rpb25zXG4gKiB3aWxsIHRocm93IGFuIEVycm9yIHdoZW4gaW52b2tlZC5cbiAqXG4gKiBJZiBgbG9jYWxTdG9yYWdlLnRyYWNlRGVwcmVjYXRpb24gPSB0cnVlYCBpcyBzZXQsIHRoZW4gZGVwcmVjYXRlZCBmdW5jdGlvbnNcbiAqIHdpbGwgaW52b2tlIGBjb25zb2xlLnRyYWNlKClgIGluc3RlYWQgb2YgYGNvbnNvbGUuZXJyb3IoKWAuXG4gKlxuICogQHBhcmFtIHtGdW5jdGlvbn0gZm4gLSB0aGUgZnVuY3Rpb24gdG8gZGVwcmVjYXRlXG4gKiBAcGFyYW0ge1N0cmluZ30gbXNnIC0gdGhlIHN0cmluZyB0byBwcmludCB0byB0aGUgY29uc29sZSB3aGVuIGBmbmAgaXMgaW52b2tlZFxuICogQHJldHVybnMge0Z1bmN0aW9ufSBhIG5ldyBcImRlcHJlY2F0ZWRcIiB2ZXJzaW9uIG9mIGBmbmBcbiAqIEBhcGkgcHVibGljXG4gKi9cblxuZnVuY3Rpb24gZGVwcmVjYXRlIChmbiwgbXNnKSB7XG4gIGlmIChjb25maWcoJ25vRGVwcmVjYXRpb24nKSkge1xuICAgIHJldHVybiBmbjtcbiAgfVxuXG4gIHZhciB3YXJuZWQgPSBmYWxzZTtcbiAgZnVuY3Rpb24gZGVwcmVjYXRlZCgpIHtcbiAgICBpZiAoIXdhcm5lZCkge1xuICAgICAgaWYgKGNvbmZpZygndGhyb3dEZXByZWNhdGlvbicpKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihtc2cpO1xuICAgICAgfSBlbHNlIGlmIChjb25maWcoJ3RyYWNlRGVwcmVjYXRpb24nKSkge1xuICAgICAgICBjb25zb2xlLnRyYWNlKG1zZyk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBjb25zb2xlLndhcm4obXNnKTtcbiAgICAgIH1cbiAgICAgIHdhcm5lZCA9IHRydWU7XG4gICAgfVxuICAgIHJldHVybiBmbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICB9XG5cbiAgcmV0dXJuIGRlcHJlY2F0ZWQ7XG59XG5cbi8qKlxuICogQ2hlY2tzIGBsb2NhbFN0b3JhZ2VgIGZvciBib29sZWFuIHZhbHVlcyBmb3IgdGhlIGdpdmVuIGBuYW1lYC5cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gbmFtZVxuICogQHJldHVybnMge0Jvb2xlYW59XG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiBjb25maWcgKG5hbWUpIHtcbiAgLy8gYWNjZXNzaW5nIGdsb2JhbC5sb2NhbFN0b3JhZ2UgY2FuIHRyaWdnZXIgYSBET01FeGNlcHRpb24gaW4gc2FuZGJveGVkIGlmcmFtZXNcbiAgdHJ5IHtcbiAgICBpZiAoIWdsb2JhbC5sb2NhbFN0b3JhZ2UpIHJldHVybiBmYWxzZTtcbiAgfSBjYXRjaCAoXykge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICB2YXIgdmFsID0gZ2xvYmFsLmxvY2FsU3RvcmFnZVtuYW1lXTtcbiAgaWYgKG51bGwgPT0gdmFsKSByZXR1cm4gZmFsc2U7XG4gIHJldHVybiBTdHJpbmcodmFsKS50b0xvd2VyQ2FzZSgpID09PSAndHJ1ZSc7XG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///72\n")},function(module,exports,__webpack_require__){"use strict";eval('// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n\n\nmodule.exports = PassThrough;\n\nvar Transform = __webpack_require__(40);\n\n/*<replacement>*/\nvar util = __webpack_require__(10);\nutil.inherits = __webpack_require__(7);\n/*</replacement>*/\n\nutil.inherits(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhZGFibGUtc3RyZWFtL2xpYi9fc3RyZWFtX3Bhc3N0aHJvdWdoLmpzPzc4MGYiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRWE7O0FBRWI7O0FBRUEsZ0JBQWdCLG1CQUFPLENBQUMsRUFBcUI7O0FBRTdDO0FBQ0EsV0FBVyxtQkFBTyxDQUFDLEVBQWM7QUFDakMsZ0JBQWdCLG1CQUFPLENBQUMsQ0FBVTtBQUNsQzs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBIiwiZmlsZSI6IjczLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IEpveWVudCwgSW5jLiBhbmQgb3RoZXIgTm9kZSBjb250cmlidXRvcnMuXG4vL1xuLy8gUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGFcbi8vIGNvcHkgb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGVcbi8vIFwiU29mdHdhcmVcIiksIHRvIGRlYWwgaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZ1xuLy8gd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHMgdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLFxuLy8gZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGwgY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdFxuLy8gcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpcyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlXG4vLyBmb2xsb3dpbmcgY29uZGl0aW9uczpcbi8vXG4vLyBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZFxuLy8gaW4gYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuXG4vL1xuLy8gVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIFwiQVMgSVNcIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTU1xuLy8gT1IgSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRlxuLy8gTUVSQ0hBTlRBQklMSVRZLCBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiBJTlxuLy8gTk8gRVZFTlQgU0hBTEwgVEhFIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sXG4vLyBEQU1BR0VTIE9SIE9USEVSIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1Jcbi8vIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLCBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEVcbi8vIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTiBUSEUgU09GVFdBUkUuXG5cbi8vIGEgcGFzc3Rocm91Z2ggc3RyZWFtLlxuLy8gYmFzaWNhbGx5IGp1c3QgdGhlIG1vc3QgbWluaW1hbCBzb3J0IG9mIFRyYW5zZm9ybSBzdHJlYW0uXG4vLyBFdmVyeSB3cml0dGVuIGNodW5rIGdldHMgb3V0cHV0IGFzLWlzLlxuXG4ndXNlIHN0cmljdCc7XG5cbm1vZHVsZS5leHBvcnRzID0gUGFzc1Rocm91Z2g7XG5cbnZhciBUcmFuc2Zvcm0gPSByZXF1aXJlKCcuL19zdHJlYW1fdHJhbnNmb3JtJyk7XG5cbi8qPHJlcGxhY2VtZW50PiovXG52YXIgdXRpbCA9IHJlcXVpcmUoJ2NvcmUtdXRpbC1pcycpO1xudXRpbC5pbmhlcml0cyA9IHJlcXVpcmUoJ2luaGVyaXRzJyk7XG4vKjwvcmVwbGFjZW1lbnQ+Ki9cblxudXRpbC5pbmhlcml0cyhQYXNzVGhyb3VnaCwgVHJhbnNmb3JtKTtcblxuZnVuY3Rpb24gUGFzc1Rocm91Z2gob3B0aW9ucykge1xuICBpZiAoISh0aGlzIGluc3RhbmNlb2YgUGFzc1Rocm91Z2gpKSByZXR1cm4gbmV3IFBhc3NUaHJvdWdoKG9wdGlvbnMpO1xuXG4gIFRyYW5zZm9ybS5jYWxsKHRoaXMsIG9wdGlvbnMpO1xufVxuXG5QYXNzVGhyb3VnaC5wcm90b3R5cGUuX3RyYW5zZm9ybSA9IGZ1bmN0aW9uIChjaHVuaywgZW5jb2RpbmcsIGNiKSB7XG4gIGNiKG51bGwsIGNodW5rKTtcbn07Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///73\n')},function(module,exports,__webpack_require__){eval("module.exports = __webpack_require__(23);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhZGFibGUtc3RyZWFtL3dyaXRhYmxlLWJyb3dzZXIuanM/MmM2MyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxpQkFBaUIsbUJBQU8sQ0FBQyxFQUEyQiIsImZpbGUiOiI3NC5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9saWIvX3N0cmVhbV93cml0YWJsZS5qcycpO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///74\n")},function(module,exports,__webpack_require__){eval("module.exports = __webpack_require__(4);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhZGFibGUtc3RyZWFtL2R1cGxleC1icm93c2VyLmpzPzA5NjAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsaUJBQWlCLG1CQUFPLENBQUMsQ0FBeUIiLCJmaWxlIjoiNzUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vbGliL19zdHJlYW1fZHVwbGV4LmpzJyk7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///75\n")},function(module,exports,__webpack_require__){eval("module.exports = __webpack_require__(22).Transform\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhZGFibGUtc3RyZWFtL3RyYW5zZm9ybS5qcz9kMTdiIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGlCQUFpQixtQkFBTyxDQUFDLEVBQVkiLCJmaWxlIjoiNzYuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vcmVhZGFibGUnKS5UcmFuc2Zvcm1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///76\n")},function(module,exports,__webpack_require__){eval("module.exports = __webpack_require__(22).PassThrough\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhZGFibGUtc3RyZWFtL3Bhc3N0aHJvdWdoLmpzP2MyYWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsaUJBQWlCLG1CQUFPLENBQUMsRUFBWSIsImZpbGUiOiI3Ny5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9yZWFkYWJsZScpLlBhc3NUaHJvdWdoXG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///77\n")},function(module,exports,__webpack_require__){eval("var helper = __webpack_require__(25);\r\nvar xml2js = __webpack_require__(35);\r\n\r\nfunction validateOptions (userOptions) {\r\n  var options = helper.copyOptions(userOptions);\r\n  helper.ensureSpacesExists(options);\r\n  return options;\r\n}\r\n\r\nmodule.exports = function(xml, userOptions) {\r\n  var options, js, json, parentKey;\r\n  options = validateOptions(userOptions);\r\n  js = xml2js(xml, options);\r\n  parentKey = 'compact' in options && options.compact ? '_parent' : 'parent';\r\n  // parentKey = ptions.compact ? '_parent' : 'parent'; // consider this\r\n  if ('addParent' in options && options.addParent) {\r\n    json = JSON.stringify(js, function (k, v) { return k === parentKey? '_' : v; }, options.spaces);\r\n  } else {\r\n    json = JSON.stringify(js, null, options.spaces);\r\n  }\r\n  return json.replace(/\\u2028/g, '\\\\u2028').replace(/\\u2029/g, '\\\\u2029');\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMveG1sLWpzL2xpYi94bWwyanNvbi5qcz8wNzhhIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGFBQWEsbUJBQU8sQ0FBQyxFQUFrQjtBQUN2QyxhQUFhLG1CQUFPLENBQUMsRUFBVTs7QUFFL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdURBQXVEO0FBQ3ZEO0FBQ0EsK0NBQStDLGlDQUFpQyxFQUFFO0FBQ2xGLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiI3OC5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBoZWxwZXIgPSByZXF1aXJlKCcuL29wdGlvbnMtaGVscGVyJyk7XHJcbnZhciB4bWwyanMgPSByZXF1aXJlKCcuL3htbDJqcycpO1xyXG5cclxuZnVuY3Rpb24gdmFsaWRhdGVPcHRpb25zICh1c2VyT3B0aW9ucykge1xyXG4gIHZhciBvcHRpb25zID0gaGVscGVyLmNvcHlPcHRpb25zKHVzZXJPcHRpb25zKTtcclxuICBoZWxwZXIuZW5zdXJlU3BhY2VzRXhpc3RzKG9wdGlvbnMpO1xyXG4gIHJldHVybiBvcHRpb25zO1xyXG59XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKHhtbCwgdXNlck9wdGlvbnMpIHtcclxuICB2YXIgb3B0aW9ucywganMsIGpzb24sIHBhcmVudEtleTtcclxuICBvcHRpb25zID0gdmFsaWRhdGVPcHRpb25zKHVzZXJPcHRpb25zKTtcclxuICBqcyA9IHhtbDJqcyh4bWwsIG9wdGlvbnMpO1xyXG4gIHBhcmVudEtleSA9ICdjb21wYWN0JyBpbiBvcHRpb25zICYmIG9wdGlvbnMuY29tcGFjdCA/ICdfcGFyZW50JyA6ICdwYXJlbnQnO1xyXG4gIC8vIHBhcmVudEtleSA9IHB0aW9ucy5jb21wYWN0ID8gJ19wYXJlbnQnIDogJ3BhcmVudCc7IC8vIGNvbnNpZGVyIHRoaXNcclxuICBpZiAoJ2FkZFBhcmVudCcgaW4gb3B0aW9ucyAmJiBvcHRpb25zLmFkZFBhcmVudCkge1xyXG4gICAganNvbiA9IEpTT04uc3RyaW5naWZ5KGpzLCBmdW5jdGlvbiAoaywgdikgeyByZXR1cm4gayA9PT0gcGFyZW50S2V5PyAnXycgOiB2OyB9LCBvcHRpb25zLnNwYWNlcyk7XHJcbiAgfSBlbHNlIHtcclxuICAgIGpzb24gPSBKU09OLnN0cmluZ2lmeShqcywgbnVsbCwgb3B0aW9ucy5zcGFjZXMpO1xyXG4gIH1cclxuICByZXR1cm4ganNvbi5yZXBsYWNlKC9cXHUyMDI4L2csICdcXFxcdTIwMjgnKS5yZXBsYWNlKC9cXHUyMDI5L2csICdcXFxcdTIwMjknKTtcclxufTtcclxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///78\n")},function(module,exports,__webpack_require__){eval("/* WEBPACK VAR INJECTION */(function(Buffer) {var js2xml = __webpack_require__(41);\r\n\r\nmodule.exports = function (json, options) {\r\n  if (json instanceof Buffer) {\r\n    json = json.toString();\r\n  }\r\n  var js = null;\r\n  if (typeof (json) === 'string') {\r\n    try {\r\n      js = JSON.parse(json);\r\n    } catch (e) {\r\n      throw new Error('The JSON structure is invalid');\r\n    }\r\n  } else {\r\n    js = json;\r\n  }\r\n  return js2xml(js, options);\r\n};\r\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(13).Buffer))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMveG1sLWpzL2xpYi9qc29uMnhtbC5qcz80OTNiIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLDJEQUFhLG1CQUFPLENBQUMsRUFBYTs7QUFFbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ijc5LmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGpzMnhtbCA9IHJlcXVpcmUoJy4vanMyeG1sLmpzJyk7XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChqc29uLCBvcHRpb25zKSB7XHJcbiAgaWYgKGpzb24gaW5zdGFuY2VvZiBCdWZmZXIpIHtcclxuICAgIGpzb24gPSBqc29uLnRvU3RyaW5nKCk7XHJcbiAgfVxyXG4gIHZhciBqcyA9IG51bGw7XHJcbiAgaWYgKHR5cGVvZiAoanNvbikgPT09ICdzdHJpbmcnKSB7XHJcbiAgICB0cnkge1xyXG4gICAgICBqcyA9IEpTT04ucGFyc2UoanNvbik7XHJcbiAgICB9IGNhdGNoIChlKSB7XHJcbiAgICAgIHRocm93IG5ldyBFcnJvcignVGhlIEpTT04gc3RydWN0dXJlIGlzIGludmFsaWQnKTtcclxuICAgIH1cclxuICB9IGVsc2Uge1xyXG4gICAganMgPSBqc29uO1xyXG4gIH1cclxuICByZXR1cm4ganMyeG1sKGpzLCBvcHRpb25zKTtcclxufTtcclxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///79\n")},function(module,exports,__webpack_require__){"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nclass FragmentElement {\r\n    constructor(parent, element) {\r\n        this.parent = parent;\r\n        this.element = element;\r\n    }\r\n}\r\nexports.FragmentElement = FragmentElement;\r\n//# sourceMappingURL=FragmentElement.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhbGl0eS1zcGFjZS9saWIvc3JjL25vZGUvc3RvcmFnZS9tb2RlbC9GcmFnbWVudEVsZW1lbnQuanM/ZTBkZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE4QyxjQUFjO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiODAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcclxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xyXG5jbGFzcyBGcmFnbWVudEVsZW1lbnQge1xyXG4gICAgY29uc3RydWN0b3IocGFyZW50LCBlbGVtZW50KSB7XHJcbiAgICAgICAgdGhpcy5wYXJlbnQgPSBwYXJlbnQ7XHJcbiAgICAgICAgdGhpcy5lbGVtZW50ID0gZWxlbWVudDtcclxuICAgIH1cclxufVxyXG5leHBvcnRzLkZyYWdtZW50RWxlbWVudCA9IEZyYWdtZW50RWxlbWVudDtcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9RnJhZ21lbnRFbGVtZW50LmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///80\n')},function(module,exports,__webpack_require__){"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nconst Fragment_1 = __webpack_require__(42);\r\nconst xml_js_1 = __webpack_require__(20);\r\nfunction parseFragment(fragmentXml) {\r\n    let container = xml_js_1.xml2js(fragmentXml);\r\n    let rootElement = container.elements[0];\r\n    if (!rootElement.elements) {\r\n        rootElement.elements = [];\r\n    }\r\n    let entities = rootElement.elements;\r\n    return new Fragment_1.Fragment(container, rootElement, entities);\r\n}\r\nexports.parseFragment = parseFragment;\r\nfunction parseRootSids(entitiesXml) {\r\n    let container = xml_js_1.xml2js(entitiesXml);\r\n    let rootElement = container.elements[0];\r\n    if (!rootElement.elements) {\r\n        rootElement.elements = [];\r\n    }\r\n    let entities = rootElement.elements;\r\n    return entities.map(entity => entity.attributes.sid);\r\n}\r\nexports.parseRootSids = parseRootSids;\r\n//# sourceMappingURL=parser.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhbGl0eS1zcGFjZS9saWIvc3JjL25vZGUvdXRpbC9wYXJzZXIuanM/ZDVkMCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE4QyxjQUFjO0FBQzVELG1CQUFtQixtQkFBTyxDQUFDLEVBQTJCO0FBQ3RELGlCQUFpQixtQkFBTyxDQUFDLEVBQVE7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjgxLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XHJcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcclxuY29uc3QgRnJhZ21lbnRfMSA9IHJlcXVpcmUoXCIuLi9zdG9yYWdlL21vZGVsL0ZyYWdtZW50XCIpO1xyXG5jb25zdCB4bWxfanNfMSA9IHJlcXVpcmUoXCJ4bWwtanNcIik7XHJcbmZ1bmN0aW9uIHBhcnNlRnJhZ21lbnQoZnJhZ21lbnRYbWwpIHtcclxuICAgIGxldCBjb250YWluZXIgPSB4bWxfanNfMS54bWwyanMoZnJhZ21lbnRYbWwpO1xyXG4gICAgbGV0IHJvb3RFbGVtZW50ID0gY29udGFpbmVyLmVsZW1lbnRzWzBdO1xyXG4gICAgaWYgKCFyb290RWxlbWVudC5lbGVtZW50cykge1xyXG4gICAgICAgIHJvb3RFbGVtZW50LmVsZW1lbnRzID0gW107XHJcbiAgICB9XHJcbiAgICBsZXQgZW50aXRpZXMgPSByb290RWxlbWVudC5lbGVtZW50cztcclxuICAgIHJldHVybiBuZXcgRnJhZ21lbnRfMS5GcmFnbWVudChjb250YWluZXIsIHJvb3RFbGVtZW50LCBlbnRpdGllcyk7XHJcbn1cclxuZXhwb3J0cy5wYXJzZUZyYWdtZW50ID0gcGFyc2VGcmFnbWVudDtcclxuZnVuY3Rpb24gcGFyc2VSb290U2lkcyhlbnRpdGllc1htbCkge1xyXG4gICAgbGV0IGNvbnRhaW5lciA9IHhtbF9qc18xLnhtbDJqcyhlbnRpdGllc1htbCk7XHJcbiAgICBsZXQgcm9vdEVsZW1lbnQgPSBjb250YWluZXIuZWxlbWVudHNbMF07XHJcbiAgICBpZiAoIXJvb3RFbGVtZW50LmVsZW1lbnRzKSB7XHJcbiAgICAgICAgcm9vdEVsZW1lbnQuZWxlbWVudHMgPSBbXTtcclxuICAgIH1cclxuICAgIGxldCBlbnRpdGllcyA9IHJvb3RFbGVtZW50LmVsZW1lbnRzO1xyXG4gICAgcmV0dXJuIGVudGl0aWVzLm1hcChlbnRpdHkgPT4gZW50aXR5LmF0dHJpYnV0ZXMuc2lkKTtcclxufVxyXG5leHBvcnRzLnBhcnNlUm9vdFNpZHMgPSBwYXJzZVJvb3RTaWRzO1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1wYXJzZXIuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///81\n')},function(module,exports,__webpack_require__){"use strict";eval('\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nconst Configuration_1 = __webpack_require__(83);\r\nconst RealityClient_1 = __webpack_require__(32);\r\nconst Encode_1 = __webpack_require__(11);\r\nclass ClusterClient {\r\n    constructor(clusterConfigurationUrl, spaceName, avatarId, x, y, z, rx, ry, rz, rw, avatarDescription, idToken) {\r\n        this.primaryRegion = undefined;\r\n        this.clients = new Map();\r\n        this.newWebSocket = (url, protocol) => { return new WebSocket(url, protocol); };\r\n        this.onConnect = (region) => { };\r\n        this.onDisconnect = (region) => { };\r\n        this.onReceive = (region, type, message) => { };\r\n        this.onStoredRootEntityReceived = (region, sid, entityXml) => { };\r\n        this.onStoredChildEntityReceived = (region, parentSid, sid, entityXml) => { };\r\n        this.onStoredEntityRemoved = (region, sid) => { };\r\n        this.clusterConfigurationUrl = clusterConfigurationUrl;\r\n        this.spaceName = spaceName;\r\n        this.idToken = idToken;\r\n        this.avatarId = avatarId;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n        this.rx = rx;\r\n        this.ry = ry;\r\n        this.rz = rz;\r\n        this.rw = rw;\r\n        this.avatarDescription = avatarDescription;\r\n    }\r\n    connect() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            // Close outdated clients.\r\n            this.clients.forEach(client => {\r\n                client.close();\r\n            });\r\n            this.clients.clear();\r\n            this.clusterConfiguration = yield Configuration_1.getClusterConfiguration(this.clusterConfigurationUrl);\r\n            console.log("cluster client - connect: " + this.clusterConfigurationUrl);\r\n            yield this.refresh(this.x, this.y, this.z, this.rx, this.ry, this.rz, this.rw);\r\n        });\r\n    }\r\n    close() {\r\n        console.log("cluster client - closing.");\r\n        this.clients.forEach(client => {\r\n            this.closeClient(client);\r\n        });\r\n        this.clients.clear();\r\n    }\r\n    refresh(x, y, z, rx, ry, rz, rw) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!this.clusterConfiguration) {\r\n                return;\r\n            }\r\n            this.x = x;\r\n            this.y = y;\r\n            this.z = z;\r\n            this.rx = rx;\r\n            this.ry = ry;\r\n            this.rz = rz;\r\n            this.rw = rw;\r\n            const regions = this.getRegions(x, y, z);\r\n            if (regions.length === 0) {\r\n                this.primaryRegion = undefined;\r\n            }\r\n            else {\r\n                if (this.primaryRegion !== regions[0].region) {\r\n                    if (this.primaryRegion && this.clients.has(this.primaryRegion)) {\r\n                        console.log("cluster client - switching primary region...");\r\n                        this.closeClient(this.clients.get(this.primaryRegion));\r\n                        console.log("cluster client - disconnected old primary region: " + this.primaryRegion);\r\n                    }\r\n                    if (this.clients.has(regions[0].region)) {\r\n                        this.closeClient(this.clients.get(regions[0].region));\r\n                        console.log("cluster client - disconnected secondary region as it is promoted to primary region: " + regions[0].region);\r\n                    }\r\n                    this.primaryRegion = regions[0].region;\r\n                    console.log("cluster client - new primary region set to: " + regions[0].region);\r\n                }\r\n            }\r\n            for (let region of regions) {\r\n                if (!this.clients.has(region.region)) {\r\n                    let client = new RealityClient_1.RealityClient(this.spaceName, region.region, region.processorUrl, region.storageUrl, region.cdnUrl, this.idToken);\r\n                    this.clients.set(region.region, client);\r\n                    client.newWebSocket = this.newWebSocket;\r\n                    client.onClose = () => {\r\n                        console.log(\'cluster client - region disconnected: \' + client.region);\r\n                        if (this.primaryRegion === client.region) {\r\n                            this.onDisconnect(client.region);\r\n                        }\r\n                        if (this.clients.get(region.region) === client) {\r\n                            this.clients.delete(region.region);\r\n                        }\r\n                    };\r\n                    client.onReceive = (message) => {\r\n                        const parts = message.split(Encode_1.Encode.SEPARATOR);\r\n                        this.onReceive(client.region, parts[0], parts);\r\n                    };\r\n                    client.onStoredRootEntityReceived = (sid, entityXml) => {\r\n                        this.onStoredRootEntityReceived(client.region, sid, entityXml);\r\n                    };\r\n                    client.onStoredChildEntityReceived = (parentSid, sid, entityXml) => {\r\n                        this.onStoredChildEntityReceived(client.region, parentSid, sid, entityXml);\r\n                    };\r\n                    client.onStoredEntityRemoved = (sid) => {\r\n                        this.onStoredEntityRemoved(client.region, sid);\r\n                    };\r\n                    try {\r\n                        yield client.connect();\r\n                        this.onConnect(client.region);\r\n                    }\r\n                    catch (error) {\r\n                        console.log("cluster client - error connecting to region.");\r\n                        continue;\r\n                    }\r\n                    // Add clients for regions which are in range and not connected yet.\r\n                    if (client.region === this.primaryRegion) {\r\n                        // Add avatar\r\n                        console.log("cluster client - connected to primary region: " + client.region);\r\n                        yield client.add(this.avatarId, x, y, z, rx, ry, rz, rw, this.avatarDescription, Encode_1.Encode.AVATAR);\r\n                    }\r\n                    else {\r\n                        // Add probe\r\n                        console.log("cluster client - connected to secondary region: " + client.region);\r\n                        yield client.add(this.avatarId, x, y, z, rx, ry, rz, rw, "", Encode_1.Encode.PROBE);\r\n                    }\r\n                }\r\n                else {\r\n                    // Update avatars and probes for regions in range..\r\n                    if (this.clients.get(region.region).isConnected()) {\r\n                        yield this.clients.get(region.region).update(this.avatarId, x, y, z, rx, ry, rz, rw);\r\n                    }\r\n                }\r\n            }\r\n            // Close clients for regions which are not in range.\r\n            this.clients.forEach((client) => {\r\n                for (let region of regions) {\r\n                    if (region.region === client.region) {\r\n                        return;\r\n                    }\r\n                }\r\n                console.log("cluster client - closing client to region not in range: " + client.region);\r\n                this.closeClient(client);\r\n            });\r\n        });\r\n    }\r\n    closeClient(client) {\r\n        this.clients.delete(client.region);\r\n        client.close();\r\n        this.onDisconnect(client.region);\r\n    }\r\n    getClient() {\r\n        if (!this.primaryRegion) {\r\n            return undefined;\r\n        }\r\n        return this.clients.get(this.primaryRegion);\r\n    }\r\n    isConnected() {\r\n        return this.primaryRegion !== undefined && this.clients.has(this.primaryRegion) && this.clients.get(this.primaryRegion).isConnected();\r\n    }\r\n    add(id, x, y, z, rx, ry, rz, rw, description) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (this.isConnected()) {\r\n                yield this.getClient().add(id, x, y, z, rx, ry, rz, rw, description, Encode_1.Encode.OBJECT);\r\n            }\r\n        });\r\n    }\r\n    update(id, x, y, z, rx, ry, rz, rw) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (this.isConnected()) {\r\n                yield this.getClient().update(id, x, y, z, rx, ry, rz, rw);\r\n            }\r\n        });\r\n    }\r\n    remove(id) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (this.isConnected()) {\r\n                yield this.getClient().remove(id);\r\n            }\r\n        });\r\n    }\r\n    describe(id, description) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (this.isConnected()) {\r\n                yield this.getClient().describe(id, description);\r\n            }\r\n        });\r\n    }\r\n    act(id, action, description) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (this.isConnected()) {\r\n                yield this.getClient().act(id, action, description);\r\n            }\r\n        });\r\n    }\r\n    storeEntities(region, entitiesXml) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (this.clients.has(region)) {\r\n                yield this.clients.get(region).storeEntities(entitiesXml);\r\n            }\r\n            else {\r\n                throw new Error("Region not connected: " + region);\r\n            }\r\n        });\r\n    }\r\n    storeChildEntities(region, parentSid, entitiesXml) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (this.clients.has(region)) {\r\n                yield this.clients.get(region).storeChildEntities(parentSid, entitiesXml);\r\n            }\r\n            else {\r\n                throw new Error("Region not connected: " + region);\r\n            }\r\n        });\r\n    }\r\n    removeStoredEntities(region, sids) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (this.clients.has(region)) {\r\n                yield this.clients.get(region).removeStoredEntities(sids);\r\n            }\r\n            else {\r\n                throw new Error("Region not connected: " + region);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Gets regions with closest region as first.\r\n     * @param x the connection avatar x coordinate\r\n     * @param y the connection avatar y coordinate\r\n     * @param z the connection avatar z coordinate\r\n     * @return array of RegionConfigurations with closest region as first.\r\n     */\r\n    getRegions(x, y, z) {\r\n        const regions = Array();\r\n        let lastD2 = Number.MAX_SAFE_INTEGER;\r\n        for (let region of this.clusterConfiguration.regions) {\r\n            if (x >= region.x - region.edge / 2 && x <= region.x + region.edge / 2 &&\r\n                y >= region.y - region.edge / 2 && y <= region.y + region.edge / 2 &&\r\n                z >= region.z - region.edge / 2 && z <= region.z + region.edge / 2) {\r\n                const d2 = Math.pow(x - region.x, 2) + Math.pow(y - region.y, 2) + Math.pow(z - region.z, 2);\r\n                if (d2 < lastD2) {\r\n                    regions.unshift(region);\r\n                }\r\n                else {\r\n                    regions.push(region);\r\n                }\r\n                lastD2 = d2;\r\n            }\r\n        }\r\n        return regions;\r\n    }\r\n}\r\nexports.ClusterClient = ClusterClient;\r\n//# sourceMappingURL=ClusterClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///82\n')},function(module,exports,__webpack_require__){"use strict";eval('\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\n__webpack_require__(84);\r\nclass ClusterConfiguration {\r\n    constructor() {\r\n        this.name = "";\r\n        this.description = "";\r\n        this.edge = 1000;\r\n        this.step = 100;\r\n        this.range = 200;\r\n        this.maxSpaces = 10;\r\n        this.processorUrl = "";\r\n        this.storageUrl = "";\r\n        this.cdnUrl = "";\r\n        this.spaces = new Array();\r\n        this.sanitizer = new SanitizerConfiguration();\r\n        this.regions = new Array();\r\n        this.idTokenIssuers = new Array();\r\n    }\r\n}\r\nexports.ClusterConfiguration = ClusterConfiguration;\r\nclass RegionConfiguration {\r\n    constructor() {\r\n        this.region = "";\r\n        this.processorUrl = "";\r\n        this.storageUrl = "";\r\n        this.cdnUrl = "";\r\n        this.spaces = new Array();\r\n        this.maxSpaces = 0;\r\n        this.edge = 0;\r\n        this.step = 0;\r\n        this.range = 0;\r\n        this.x = 0;\r\n        this.y = 0;\r\n        this.z = 0;\r\n    }\r\n}\r\nexports.RegionConfiguration = RegionConfiguration;\r\nclass SanitizerConfiguration {\r\n    constructor() {\r\n        this.allowedElements = "";\r\n        this.allowedAttributes = "";\r\n        this.allowedAttributeValueRegex = "";\r\n    }\r\n}\r\nexports.SanitizerConfiguration = SanitizerConfiguration;\r\nclass StorageConfiguration {\r\n    constructor(url, regions, spaces, maxSpaces) {\r\n        this.spaces = new Array();\r\n        this.url = url;\r\n        this.regions = regions;\r\n        this.spaces = spaces;\r\n        this.maxSpaces = maxSpaces;\r\n    }\r\n}\r\nexports.StorageConfiguration = StorageConfiguration;\r\nclass IdTokenIssuer {\r\n    constructor(issuer, publicKey) {\r\n        this.issuer = "";\r\n        this.publicKey = "";\r\n        this.issuer = issuer;\r\n        this.publicKey = publicKey;\r\n    }\r\n}\r\nexports.IdTokenIssuer = IdTokenIssuer;\r\nfunction getClusterConfiguration(url) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        return yield fetchConfiguration(url);\r\n    });\r\n}\r\nexports.getClusterConfiguration = getClusterConfiguration;\r\nfunction fetchConfiguration(url) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const response = yield fetch(url);\r\n        if (response.status >= 400) {\r\n            throw new Error("Bad response from server");\r\n        }\r\n        const responseText = yield (response.text());\r\n        const clusterConfiguration = JSON.parse(responseText);\r\n        clusterConfiguration.regions.forEach((processor) => {\r\n            processor.region = processor.region && processor.region.length > 0 ? processor.region : processor.x + "-" + processor.y + "-" + processor.z;\r\n            processor.processorUrl = processor.processorUrl && processor.processorUrl.length > 0 ? processor.processorUrl : clusterConfiguration.processorUrl;\r\n            processor.storageUrl = processor.storageUrl && processor.storageUrl.length > 0 ? processor.storageUrl : clusterConfiguration.storageUrl;\r\n            processor.cdnUrl = processor.cdnUrl && processor.cdnUrl.length > 0 ? processor.cdnUrl : clusterConfiguration.cdnUrl;\r\n            processor.spaces = processor.spaces && processor.spaces.length > 0 ? processor.spaces : clusterConfiguration.spaces;\r\n            processor.maxSpaces = processor.maxSpaces ? processor.maxSpaces : clusterConfiguration.maxSpaces;\r\n            processor.edge = processor.edge ? processor.edge : clusterConfiguration.edge;\r\n            processor.step = processor.step ? processor.step : clusterConfiguration.step;\r\n            processor.range = processor.range ? processor.range : clusterConfiguration.range;\r\n        });\r\n        return clusterConfiguration;\r\n    });\r\n}\r\nexports.fetchConfiguration = fetchConfiguration;\r\n/**\r\n * Gets regions processor is responsible for.\r\n * @param clusterConfiguration the cluster configuration.\r\n * @param processorUrl the processor URL\r\n */\r\nfunction getRegionConfigurations(clusterConfiguration, processorUrl) {\r\n    const normalizedServerUrl = processorUrl.trim().toLocaleLowerCase();\r\n    const processorConfigs = new Map();\r\n    for (let processor of clusterConfiguration.regions) {\r\n        const normalizedServerUrlCandidate = processor.processorUrl.trim().toLowerCase();\r\n        if (normalizedServerUrl == normalizedServerUrlCandidate) {\r\n            processorConfigs.set(processor.region, processor);\r\n        }\r\n    }\r\n    ;\r\n    return processorConfigs;\r\n}\r\nexports.getRegionConfigurations = getRegionConfigurations;\r\n/**\r\n * Gets storage configuration.\r\n * @param clusterConfiguration the cluster configuration\r\n * @param storageUrl the storage URL\r\n */\r\nfunction getStorageConfiguration(clusterConfiguration, storageUrl) {\r\n    const matchingServerNames = clusterConfiguration.regions.filter(s => {\r\n        const processorStorageUrl = s.storageUrl && s.storageUrl.length > 0 ? s.storageUrl : clusterConfiguration.storageUrl;\r\n        return processorStorageUrl.trim().toLocaleLowerCase() == storageUrl.trim().toLocaleLowerCase();\r\n    }).map(s => s.region);\r\n    return new StorageConfiguration(storageUrl, matchingServerNames, clusterConfiguration.spaces, clusterConfiguration.maxSpaces);\r\n}\r\nexports.getStorageConfiguration = getStorageConfiguration;\r\nfunction findItTokenIssuerConfiguration(clusterConfiguration, issuer) {\r\n    for (let idTokenIssuer of clusterConfiguration.idTokenIssuers) {\r\n        if (idTokenIssuer.issuer === issuer) {\r\n            return idTokenIssuer;\r\n        }\r\n    }\r\n    return null;\r\n}\r\nexports.findItTokenIssuerConfiguration = findItTokenIssuerConfiguration;\r\n//# sourceMappingURL=Configuration.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///83\n')},function(module,exports,__webpack_require__){eval("// the whatwg-fetch polyfill installs the fetch() function\n// on the global object (window or self)\n//\n// Return that as the export for use in Webpack, Browserify etc.\n__webpack_require__(85);\nmodule.exports = self.fetch.bind(self);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaXNvbW9ycGhpYy1mZXRjaC9mZXRjaC1ucG0tYnJvd3NlcmlmeS5qcz8yZTk0Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQU8sQ0FBQyxFQUFjO0FBQ3RCIiwiZmlsZSI6Ijg0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gdGhlIHdoYXR3Zy1mZXRjaCBwb2x5ZmlsbCBpbnN0YWxscyB0aGUgZmV0Y2goKSBmdW5jdGlvblxuLy8gb24gdGhlIGdsb2JhbCBvYmplY3QgKHdpbmRvdyBvciBzZWxmKVxuLy9cbi8vIFJldHVybiB0aGF0IGFzIHRoZSBleHBvcnQgZm9yIHVzZSBpbiBXZWJwYWNrLCBCcm93c2VyaWZ5IGV0Yy5cbnJlcXVpcmUoJ3doYXR3Zy1mZXRjaCcpO1xubW9kdWxlLmV4cG9ydHMgPSBzZWxmLmZldGNoLmJpbmQoc2VsZik7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///84\n")},function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Headers\", function() { return Headers; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Request\", function() { return Request; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Response\", function() { return Response; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DOMException\", function() { return DOMException; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"fetch\", function() { return fetch; });\nvar support = {\n  searchParams: 'URLSearchParams' in self,\n  iterable: 'Symbol' in self && 'iterator' in Symbol,\n  blob:\n    'FileReader' in self &&\n    'Blob' in self &&\n    (function() {\n      try {\n        new Blob()\n        return true\n      } catch (e) {\n        return false\n      }\n    })(),\n  formData: 'FormData' in self,\n  arrayBuffer: 'ArrayBuffer' in self\n}\n\nfunction isDataView(obj) {\n  return obj && DataView.prototype.isPrototypeOf(obj)\n}\n\nif (support.arrayBuffer) {\n  var viewClasses = [\n    '[object Int8Array]',\n    '[object Uint8Array]',\n    '[object Uint8ClampedArray]',\n    '[object Int16Array]',\n    '[object Uint16Array]',\n    '[object Int32Array]',\n    '[object Uint32Array]',\n    '[object Float32Array]',\n    '[object Float64Array]'\n  ]\n\n  var isArrayBufferView =\n    ArrayBuffer.isView ||\n    function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n}\n\nfunction normalizeName(name) {\n  if (typeof name !== 'string') {\n    name = String(name)\n  }\n  if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n    throw new TypeError('Invalid character in header field name')\n  }\n  return name.toLowerCase()\n}\n\nfunction normalizeValue(value) {\n  if (typeof value !== 'string') {\n    value = String(value)\n  }\n  return value\n}\n\n// Build a destructive iterator for the value list\nfunction iteratorFor(items) {\n  var iterator = {\n    next: function() {\n      var value = items.shift()\n      return {done: value === undefined, value: value}\n    }\n  }\n\n  if (support.iterable) {\n    iterator[Symbol.iterator] = function() {\n      return iterator\n    }\n  }\n\n  return iterator\n}\n\nfunction Headers(headers) {\n  this.map = {}\n\n  if (headers instanceof Headers) {\n    headers.forEach(function(value, name) {\n      this.append(name, value)\n    }, this)\n  } else if (Array.isArray(headers)) {\n    headers.forEach(function(header) {\n      this.append(header[0], header[1])\n    }, this)\n  } else if (headers) {\n    Object.getOwnPropertyNames(headers).forEach(function(name) {\n      this.append(name, headers[name])\n    }, this)\n  }\n}\n\nHeaders.prototype.append = function(name, value) {\n  name = normalizeName(name)\n  value = normalizeValue(value)\n  var oldValue = this.map[name]\n  this.map[name] = oldValue ? oldValue + ', ' + value : value\n}\n\nHeaders.prototype['delete'] = function(name) {\n  delete this.map[normalizeName(name)]\n}\n\nHeaders.prototype.get = function(name) {\n  name = normalizeName(name)\n  return this.has(name) ? this.map[name] : null\n}\n\nHeaders.prototype.has = function(name) {\n  return this.map.hasOwnProperty(normalizeName(name))\n}\n\nHeaders.prototype.set = function(name, value) {\n  this.map[normalizeName(name)] = normalizeValue(value)\n}\n\nHeaders.prototype.forEach = function(callback, thisArg) {\n  for (var name in this.map) {\n    if (this.map.hasOwnProperty(name)) {\n      callback.call(thisArg, this.map[name], name, this)\n    }\n  }\n}\n\nHeaders.prototype.keys = function() {\n  var items = []\n  this.forEach(function(value, name) {\n    items.push(name)\n  })\n  return iteratorFor(items)\n}\n\nHeaders.prototype.values = function() {\n  var items = []\n  this.forEach(function(value) {\n    items.push(value)\n  })\n  return iteratorFor(items)\n}\n\nHeaders.prototype.entries = function() {\n  var items = []\n  this.forEach(function(value, name) {\n    items.push([name, value])\n  })\n  return iteratorFor(items)\n}\n\nif (support.iterable) {\n  Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n}\n\nfunction consumed(body) {\n  if (body.bodyUsed) {\n    return Promise.reject(new TypeError('Already read'))\n  }\n  body.bodyUsed = true\n}\n\nfunction fileReaderReady(reader) {\n  return new Promise(function(resolve, reject) {\n    reader.onload = function() {\n      resolve(reader.result)\n    }\n    reader.onerror = function() {\n      reject(reader.error)\n    }\n  })\n}\n\nfunction readBlobAsArrayBuffer(blob) {\n  var reader = new FileReader()\n  var promise = fileReaderReady(reader)\n  reader.readAsArrayBuffer(blob)\n  return promise\n}\n\nfunction readBlobAsText(blob) {\n  var reader = new FileReader()\n  var promise = fileReaderReady(reader)\n  reader.readAsText(blob)\n  return promise\n}\n\nfunction readArrayBufferAsText(buf) {\n  var view = new Uint8Array(buf)\n  var chars = new Array(view.length)\n\n  for (var i = 0; i < view.length; i++) {\n    chars[i] = String.fromCharCode(view[i])\n  }\n  return chars.join('')\n}\n\nfunction bufferClone(buf) {\n  if (buf.slice) {\n    return buf.slice(0)\n  } else {\n    var view = new Uint8Array(buf.byteLength)\n    view.set(new Uint8Array(buf))\n    return view.buffer\n  }\n}\n\nfunction Body() {\n  this.bodyUsed = false\n\n  this._initBody = function(body) {\n    this._bodyInit = body\n    if (!body) {\n      this._bodyText = ''\n    } else if (typeof body === 'string') {\n      this._bodyText = body\n    } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n      this._bodyBlob = body\n    } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n      this._bodyFormData = body\n    } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n      this._bodyText = body.toString()\n    } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n      this._bodyArrayBuffer = bufferClone(body.buffer)\n      // IE 10-11 can't handle a DataView body.\n      this._bodyInit = new Blob([this._bodyArrayBuffer])\n    } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n      this._bodyArrayBuffer = bufferClone(body)\n    } else {\n      this._bodyText = body = Object.prototype.toString.call(body)\n    }\n\n    if (!this.headers.get('content-type')) {\n      if (typeof body === 'string') {\n        this.headers.set('content-type', 'text/plain;charset=UTF-8')\n      } else if (this._bodyBlob && this._bodyBlob.type) {\n        this.headers.set('content-type', this._bodyBlob.type)\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n      }\n    }\n  }\n\n  if (support.blob) {\n    this.blob = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return Promise.resolve(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as blob')\n      } else {\n        return Promise.resolve(new Blob([this._bodyText]))\n      }\n    }\n\n    this.arrayBuffer = function() {\n      if (this._bodyArrayBuffer) {\n        return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n      } else {\n        return this.blob().then(readBlobAsArrayBuffer)\n      }\n    }\n  }\n\n  this.text = function() {\n    var rejected = consumed(this)\n    if (rejected) {\n      return rejected\n    }\n\n    if (this._bodyBlob) {\n      return readBlobAsText(this._bodyBlob)\n    } else if (this._bodyArrayBuffer) {\n      return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n    } else if (this._bodyFormData) {\n      throw new Error('could not read FormData body as text')\n    } else {\n      return Promise.resolve(this._bodyText)\n    }\n  }\n\n  if (support.formData) {\n    this.formData = function() {\n      return this.text().then(decode)\n    }\n  }\n\n  this.json = function() {\n    return this.text().then(JSON.parse)\n  }\n\n  return this\n}\n\n// HTTP methods whose capitalization should be normalized\nvar methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\nfunction normalizeMethod(method) {\n  var upcased = method.toUpperCase()\n  return methods.indexOf(upcased) > -1 ? upcased : method\n}\n\nfunction Request(input, options) {\n  options = options || {}\n  var body = options.body\n\n  if (input instanceof Request) {\n    if (input.bodyUsed) {\n      throw new TypeError('Already read')\n    }\n    this.url = input.url\n    this.credentials = input.credentials\n    if (!options.headers) {\n      this.headers = new Headers(input.headers)\n    }\n    this.method = input.method\n    this.mode = input.mode\n    this.signal = input.signal\n    if (!body && input._bodyInit != null) {\n      body = input._bodyInit\n      input.bodyUsed = true\n    }\n  } else {\n    this.url = String(input)\n  }\n\n  this.credentials = options.credentials || this.credentials || 'same-origin'\n  if (options.headers || !this.headers) {\n    this.headers = new Headers(options.headers)\n  }\n  this.method = normalizeMethod(options.method || this.method || 'GET')\n  this.mode = options.mode || this.mode || null\n  this.signal = options.signal || this.signal\n  this.referrer = null\n\n  if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n    throw new TypeError('Body not allowed for GET or HEAD requests')\n  }\n  this._initBody(body)\n}\n\nRequest.prototype.clone = function() {\n  return new Request(this, {body: this._bodyInit})\n}\n\nfunction decode(body) {\n  var form = new FormData()\n  body\n    .trim()\n    .split('&')\n    .forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n  return form\n}\n\nfunction parseHeaders(rawHeaders) {\n  var headers = new Headers()\n  // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n  // https://tools.ietf.org/html/rfc7230#section-3.2\n  var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ')\n  preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n    var parts = line.split(':')\n    var key = parts.shift().trim()\n    if (key) {\n      var value = parts.join(':').trim()\n      headers.append(key, value)\n    }\n  })\n  return headers\n}\n\nBody.call(Request.prototype)\n\nfunction Response(bodyInit, options) {\n  if (!options) {\n    options = {}\n  }\n\n  this.type = 'default'\n  this.status = options.status === undefined ? 200 : options.status\n  this.ok = this.status >= 200 && this.status < 300\n  this.statusText = 'statusText' in options ? options.statusText : 'OK'\n  this.headers = new Headers(options.headers)\n  this.url = options.url || ''\n  this._initBody(bodyInit)\n}\n\nBody.call(Response.prototype)\n\nResponse.prototype.clone = function() {\n  return new Response(this._bodyInit, {\n    status: this.status,\n    statusText: this.statusText,\n    headers: new Headers(this.headers),\n    url: this.url\n  })\n}\n\nResponse.error = function() {\n  var response = new Response(null, {status: 0, statusText: ''})\n  response.type = 'error'\n  return response\n}\n\nvar redirectStatuses = [301, 302, 303, 307, 308]\n\nResponse.redirect = function(url, status) {\n  if (redirectStatuses.indexOf(status) === -1) {\n    throw new RangeError('Invalid status code')\n  }\n\n  return new Response(null, {status: status, headers: {location: url}})\n}\n\nvar DOMException = self.DOMException\ntry {\n  new DOMException()\n} catch (err) {\n  DOMException = function(message, name) {\n    this.message = message\n    this.name = name\n    var error = Error(message)\n    this.stack = error.stack\n  }\n  DOMException.prototype = Object.create(Error.prototype)\n  DOMException.prototype.constructor = DOMException\n}\n\nfunction fetch(input, init) {\n  return new Promise(function(resolve, reject) {\n    var request = new Request(input, init)\n\n    if (request.signal && request.signal.aborted) {\n      return reject(new DOMException('Aborted', 'AbortError'))\n    }\n\n    var xhr = new XMLHttpRequest()\n\n    function abortXhr() {\n      xhr.abort()\n    }\n\n    xhr.onload = function() {\n      var options = {\n        status: xhr.status,\n        statusText: xhr.statusText,\n        headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n      }\n      options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n      var body = 'response' in xhr ? xhr.response : xhr.responseText\n      resolve(new Response(body, options))\n    }\n\n    xhr.onerror = function() {\n      reject(new TypeError('Network request failed'))\n    }\n\n    xhr.ontimeout = function() {\n      reject(new TypeError('Network request failed'))\n    }\n\n    xhr.onabort = function() {\n      reject(new DOMException('Aborted', 'AbortError'))\n    }\n\n    xhr.open(request.method, request.url, true)\n\n    if (request.credentials === 'include') {\n      xhr.withCredentials = true\n    } else if (request.credentials === 'omit') {\n      xhr.withCredentials = false\n    }\n\n    if ('responseType' in xhr && support.blob) {\n      xhr.responseType = 'blob'\n    }\n\n    request.headers.forEach(function(value, name) {\n      xhr.setRequestHeader(name, value)\n    })\n\n    if (request.signal) {\n      request.signal.addEventListener('abort', abortXhr)\n\n      xhr.onreadystatechange = function() {\n        // DONE (success or failure)\n        if (xhr.readyState === 4) {\n          request.signal.removeEventListener('abort', abortXhr)\n        }\n      }\n    }\n\n    xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n  })\n}\n\nfetch.polyfill = true\n\nif (!self.fetch) {\n  self.fetch = fetch\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///85\n")},function(module,exports,__webpack_require__){"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nconst Actuator_1 = __webpack_require__(87);\r\nconst AFrame_1 = __webpack_require__(0);\r\nclass DynamicSpace {\r\n    constructor(scene, avatarId) {\r\n        this.avatarIndex = -1;\r\n        this.actuatorsMap = new Map();\r\n        this.avatarId = avatarId;\r\n        this.scene = scene;\r\n    }\r\n    connected(region) {\r\n        this.actuatorsMap.set(region, new Map());\r\n    }\r\n    disconnected(region) {\r\n        if (!this.actuatorsMap.has(region)) {\r\n            return;\r\n        }\r\n        this.actuatorsMap.get(region).forEach((value, key) => {\r\n            value.removed();\r\n        });\r\n        this.actuatorsMap.delete(region);\r\n    }\r\n    added(region, index, id, x, y, z, rx, ry, rz, rw, description) {\r\n        if (id === this.avatarId) {\r\n            this.avatarIndex = index;\r\n            console.log("dataspace - observed own avatar add:" + y);\r\n            return;\r\n        }\r\n        const actuators = this.actuatorsMap.get(region);\r\n        if (!actuators) {\r\n            return;\r\n        }\r\n        const actuator = new Actuator_1.Actuator(this.scene, region, id, description);\r\n        actuators.set(index, actuator);\r\n        actuator.added(x, y, z, rx, ry, rz, rw);\r\n    }\r\n    updated(region, index, x, y, z, rx, ry, rz, rw) {\r\n        if (index === this.avatarIndex) {\r\n            //console.log("dataspace - observed own avatar update.");\r\n            return;\r\n        }\r\n        const actuators = this.actuatorsMap.get(region);\r\n        if (!actuators) {\r\n            return;\r\n        }\r\n        const actuator = actuators.get(index);\r\n        if (!actuator) {\r\n            return;\r\n        }\r\n        actuator.updated(x, y, z, rx, ry, rz, rw);\r\n    }\r\n    removed(region, index, id) {\r\n        if (index == this.avatarIndex) {\r\n            console.log("dataspace - observed own avatar remove.");\r\n            return;\r\n        }\r\n        const actuators = this.actuatorsMap.get(region);\r\n        if (!actuators) {\r\n            return;\r\n        }\r\n        const actuator = actuators.get(index);\r\n        if (!actuator) {\r\n            return;\r\n        }\r\n        actuator.removed();\r\n        AFrame_1.getSystemController(this.scene, "state").removeStates(actuator.entity);\r\n    }\r\n    described(region, index, description) {\r\n        if (index == this.avatarIndex) {\r\n            return;\r\n        }\r\n        const actuators = this.actuatorsMap.get(region);\r\n        if (!actuators) {\r\n            return;\r\n        }\r\n        const actuator = actuators.get(index);\r\n        if (!actuator) {\r\n            return;\r\n        }\r\n        actuator.described(description);\r\n    }\r\n    acted(region, index, action, description) {\r\n        if (index == this.avatarIndex) {\r\n            return;\r\n        }\r\n        const actuators = this.actuatorsMap.get(region);\r\n        if (!actuators) {\r\n            return;\r\n        }\r\n        const actuator = actuators.get(index);\r\n        if (!actuator) {\r\n            return;\r\n        }\r\n        actuator.acted(action, description);\r\n    }\r\n    simulate(t) {\r\n        this.actuatorsMap.forEach(((actuators) => {\r\n            actuators.forEach((actuator => {\r\n                actuator.simulate(t);\r\n            }));\r\n        }));\r\n    }\r\n}\r\nexports.DynamicSpace = DynamicSpace;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///86\n')},function(module,exports,__webpack_require__){"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nconst util_1 = __webpack_require__(8);\r\nconst three_1 = __webpack_require__(2);\r\nconst Spring_1 = __webpack_require__(88);\r\nconst Events_1 = __webpack_require__(9);\r\nconst EntityStateEventDetail_1 = __webpack_require__(44);\r\nconst AFrame_1 = __webpack_require__(0);\r\nconst States_1 = __webpack_require__(19);\r\nclass Actuator {\r\n    constructor(scene, serverUrl, id, description) {\r\n        this.springOne = new Spring_1.Spring();\r\n        this.springTwo = new Spring_1.Spring();\r\n        this.lastPosition = new three_1.Vector3();\r\n        this.facingDirection = new three_1.Vector3(0, 0, -1);\r\n        this.targetOrientation = new three_1.Quaternion();\r\n        this.currentOrientation = new three_1.Quaternion();\r\n        this.lastUpdateTime = 0;\r\n        this.averageUpdateInterval = 0.200;\r\n        this.moving = false;\r\n        this.turning = false;\r\n        this.firstSimulate = true;\r\n        this.scene = scene;\r\n        this.serverUrl = serverUrl;\r\n        this.id = id;\r\n        this.description = description;\r\n        this.entity = util_1.createElement(description);\r\n        this.entity.setAttribute("did", id);\r\n        this.entity.setAttribute("server", serverUrl);\r\n        this.springOne.relaxationTime = 0.2;\r\n        this.springTwo.relaxationTime = 0.2;\r\n        this.stateSystemController = AFrame_1.getSystemController(this.scene, "state");\r\n        this.movementState = this.stateSystemController.getState(this.entity, States_1.States.STATE_MOVEMENT);\r\n    }\r\n    added(x, y, z, rx, ry, rz, rw) {\r\n        this.scene.appendChild(this.entity);\r\n        this.springOne.currentPosition.x = x;\r\n        this.springOne.currentPosition.y = y;\r\n        this.springOne.currentPosition.z = z;\r\n        this.springOne.targetPosition.x = x;\r\n        this.springOne.targetPosition.y = y;\r\n        this.springOne.targetPosition.z = z;\r\n        this.springOne.currentOrientation.x = rx;\r\n        this.springOne.currentOrientation.y = ry;\r\n        this.springOne.currentOrientation.z = rz;\r\n        this.springOne.currentOrientation.w = rw;\r\n        this.springOne.targetOrientation.x = rx;\r\n        this.springOne.targetOrientation.y = ry;\r\n        this.springOne.targetOrientation.z = rz;\r\n        this.springOne.targetOrientation.w = rw;\r\n        this.springTwo.currentPosition.x = x;\r\n        this.springTwo.currentPosition.y = y;\r\n        this.springTwo.currentPosition.z = z;\r\n        this.springTwo.targetPosition.x = x;\r\n        this.springTwo.targetPosition.y = y;\r\n        this.springTwo.targetPosition.z = z;\r\n        this.springTwo.currentOrientation.x = rx;\r\n        this.springTwo.currentOrientation.y = ry;\r\n        this.springTwo.currentOrientation.z = rz;\r\n        this.springTwo.currentOrientation.w = rw;\r\n        this.springTwo.targetOrientation.x = rx;\r\n        this.springTwo.targetOrientation.y = ry;\r\n        this.springTwo.targetOrientation.z = rz;\r\n        this.springTwo.targetOrientation.w = rw;\r\n        this.lastPosition.x = this.springTwo.currentPosition.x;\r\n        this.lastPosition.y = this.springTwo.currentPosition.y;\r\n        this.lastPosition.z = this.springTwo.currentPosition.z;\r\n        //this.moving = true;\r\n        //this.turning = true;\r\n        //this.entity.dispatchEvent(new CustomEvent(Events.EVENT_STATE_BEGIN, {detail: new EntityStateEventDetail("moving")}));\r\n        //console.log(this.entity.tagName + ":" + "start moving");\r\n        /*this.entity.object3D.position.x = this.springTwo.currentPosition.x;\r\n        this.entity.object3D.position.y = this.springTwo.currentPosition.y;\r\n        this.entity.object3D.position.z = this.springTwo.currentPosition.z;\r\n        this.entity.object3D.rotation.setFromQuaternion(this.springTwo.currentOrientation);\r\n\r\n        if (this.entity.tagName != "A-DODECAHEDRON") {\r\n            console.log(this.entity.tagName + ":" + JSON.stringify(this.entity.object3D.position));\r\n        }*/\r\n        //this.moving = true;\r\n        //this.entity.dispatchEvent(new CustomEvent(Events.EVENT_STATE_BEGIN, {detail: new EntityStateEventDetail("moving")}));\r\n        //console.log("start moving");\r\n        //this.simulate(1);\r\n    }\r\n    updated(x, y, z, rx, ry, rz, rw) {\r\n        const time = new Date().getTime() / 1000.0;\r\n        if (this.lastUpdateTime != 0) {\r\n            this.averageUpdateInterval = (this.averageUpdateInterval * 9 + (time - this.lastUpdateTime)) / 10;\r\n            this.springOne.relaxationTime = 2 * this.averageUpdateInterval;\r\n            this.springTwo.relaxationTime = 2 * this.averageUpdateInterval;\r\n        }\r\n        this.lastUpdateTime = time;\r\n        //this.entity.setAttribute("position", x + " " + y + " " + z);\r\n        this.springOne.targetPosition.x = x;\r\n        this.springOne.targetPosition.y = y;\r\n        this.springOne.targetPosition.z = z;\r\n        this.springOne.targetOrientation.x = rx;\r\n        this.springOne.targetOrientation.y = ry;\r\n        this.springOne.targetOrientation.z = rz;\r\n        this.springOne.targetOrientation.w = rw;\r\n        if (!this.moving) {\r\n            this.checkIfMoving();\r\n        }\r\n    }\r\n    removed() {\r\n        this.scene.removeChild(this.entity);\r\n    }\r\n    described(description) {\r\n        this.description = description;\r\n    }\r\n    acted(action, description) {\r\n        //console.log(action + ":" + description);\r\n        if (action === \'state-begin\') {\r\n            this.entity.dispatchEvent(new CustomEvent(Events_1.Events.EVENT_STATE_BEGIN, { detail: new EntityStateEventDetail_1.EntityStateEventDetail(description) }));\r\n        }\r\n        if (action === \'state-end\') {\r\n            this.entity.dispatchEvent(new CustomEvent(Events_1.Events.EVENT_STATE_END, { detail: new EntityStateEventDetail_1.EntityStateEventDetail(description) }));\r\n        }\r\n    }\r\n    simulate(t) {\r\n        if (this.moving || this.turning || this.firstSimulate) {\r\n            this.firstSimulate = false;\r\n            this.lastPosition.x = this.springTwo.currentPosition.x;\r\n            this.lastPosition.y = this.springTwo.currentPosition.y;\r\n            this.lastPosition.z = this.springTwo.currentPosition.z;\r\n            this.springOne.simulate(t);\r\n            this.springTwo.targetPosition.x = this.springOne.currentPosition.x;\r\n            this.springTwo.targetPosition.y = this.springOne.currentPosition.y;\r\n            this.springTwo.targetPosition.z = this.springOne.currentPosition.z;\r\n            this.springTwo.targetOrientation.x = this.springOne.currentOrientation.x;\r\n            this.springTwo.targetOrientation.y = this.springOne.currentOrientation.y;\r\n            this.springTwo.targetOrientation.z = this.springOne.currentOrientation.z;\r\n            this.springTwo.targetOrientation.w = this.springOne.currentOrientation.w;\r\n            this.springTwo.simulate(t);\r\n            if (this.entity.object3D) {\r\n                // Update location only after 3d presentation is ready.\r\n                this.entity.object3D.position.x = this.springTwo.currentPosition.x;\r\n                this.entity.object3D.position.y = this.springTwo.currentPosition.y;\r\n                this.entity.object3D.position.z = this.springTwo.currentPosition.z;\r\n                /*if (this.entity.tagName != "A-DODECAHEDRON") {\r\n                    console.log(this.entity.tagName + ":" + t + ":" + JSON.stringify(this.entity.object3D.position));\r\n                }*/\r\n                this.entity.object3D.rotation.setFromQuaternion(this.springTwo.currentOrientation);\r\n                this.movementState.distanceDelta = Math.abs(this.lastPosition.distanceTo(this.springTwo.currentPosition));\r\n                this.movementState.timeDeltaSeconds = t;\r\n                const movementDirection = this.lastPosition.sub(this.springTwo.currentPosition);\r\n                this.facingDirection.x = 0;\r\n                this.facingDirection.y = 0;\r\n                this.facingDirection.z = -1;\r\n                this.facingDirection = this.facingDirection.applyQuaternion(this.entity.object3D.quaternion);\r\n                this.movementState.facing = movementDirection.angleTo(this.facingDirection) < Math.PI / 2 ? 1 : -1;\r\n            }\r\n            this.checkIfMoving();\r\n        }\r\n    }\r\n    checkIfMoving() {\r\n        const positionDelta = this.springOne.targetPosition.distanceTo(this.springTwo.currentPosition);\r\n        this.targetOrientation.x = this.springOne.targetOrientation.x;\r\n        this.targetOrientation.y = this.springOne.targetOrientation.y;\r\n        this.targetOrientation.z = this.springOne.targetOrientation.z;\r\n        this.targetOrientation.w = this.springOne.targetOrientation.w;\r\n        this.currentOrientation.x = this.springTwo.currentOrientation.x;\r\n        this.currentOrientation.y = this.springTwo.currentOrientation.y;\r\n        this.currentOrientation.z = this.springTwo.currentOrientation.z;\r\n        this.currentOrientation.w = this.springTwo.currentOrientation.w;\r\n        const dot = this.targetOrientation.dot(this.currentOrientation);\r\n        const orientationDelta = Math.acos(2 * dot * dot - 1);\r\n        //console.log(orientationDelta);\r\n        //const orientationDelta = ((this.springOne.targetOrientation) as any).angleTo(this.springTwo.currentOrientation) as number;\r\n        const moving = positionDelta > 0.1;\r\n        const turning = orientationDelta > 0.2;\r\n        //console.log(positionDelta);\r\n        if (!this.moving && moving) {\r\n            this.entity.dispatchEvent(new CustomEvent(Events_1.Events.EVENT_STATE_BEGIN, { detail: new EntityStateEventDetail_1.EntityStateEventDetail("moving") }));\r\n            //console.log(this.entity.tagName + ":" + "start moving");\r\n        }\r\n        if (this.moving && !moving) {\r\n            this.entity.dispatchEvent(new CustomEvent(Events_1.Events.EVENT_STATE_END, { detail: new EntityStateEventDetail_1.EntityStateEventDetail("moving") }));\r\n            //console.log(this.entity.tagName + ":" + "end moving");\r\n        }\r\n        this.moving = moving;\r\n        this.turning = turning;\r\n    }\r\n}\r\nexports.Actuator = Actuator;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///87\n')},function(module,exports,__webpack_require__){"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nconst three_1 = __webpack_require__(2);\r\nclass Spring {\r\n    constructor() {\r\n        this.relaxationTime = 0.45;\r\n        this.currentPosition = new three_1.Vector3();\r\n        this.targetPosition = new three_1.Vector3();\r\n        this.temporary = new three_1.Vector3();\r\n        this.currentOrientation = new three_1.Quaternion();\r\n        this.targetOrientation = new three_1.Quaternion();\r\n    }\r\n    simulate(t) {\r\n        if (t > 0.04) {\r\n            t = 0.04;\r\n        }\r\n        // Calculate distance between current position and target position.\r\n        const totalDistance = this.currentPosition.distanceTo(this.targetPosition);\r\n        let v = Math.pow(totalDistance / this.relaxationTime, 2);\r\n        if (v < 0.3) {\r\n            v = 0.3;\r\n        }\r\n        let s = v * t;\r\n        if (s > totalDistance * 0.5) {\r\n            s = totalDistance * 0.5;\r\n        }\r\n        // Calculate normalized direction vector between current position and target position.\r\n        this.temporary.copy(this.targetPosition);\r\n        this.temporary.sub(this.currentPosition).normalize();\r\n        // Calculate delta vector.\r\n        this.temporary.multiplyScalar(s);\r\n        // Add delta to current position-\r\n        this.currentPosition.add(this.temporary);\r\n        // Interpolate orientation change\r\n        this.currentOrientation.slerp(this.targetOrientation, t / this.relaxationTime);\r\n        this.currentOrientation.normalize();\r\n    }\r\n}\r\nexports.Spring = Spring;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9zeXN0ZW0vc3BhY2UvU3ByaW5nLnRzPzcwOTciXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSx1Q0FBMEM7QUFFMUMsTUFBYSxNQUFNO0lBQW5CO1FBR0ksbUJBQWMsR0FBVyxJQUFJLENBQUM7UUFDOUIsb0JBQWUsR0FBWSxJQUFJLGVBQU8sRUFBRSxDQUFDO1FBQ3pDLG1CQUFjLEdBQVksSUFBSSxlQUFPLEVBQUUsQ0FBQztRQUN4QyxjQUFTLEdBQVksSUFBSSxlQUFPLEVBQUUsQ0FBQztRQUVuQyx1QkFBa0IsR0FBZSxJQUFJLGtCQUFVLEVBQUUsQ0FBQztRQUNsRCxzQkFBaUIsR0FBZSxJQUFJLGtCQUFVLEVBQUUsQ0FBQztJQW1DckQsQ0FBQztJQWhDRyxRQUFRLENBQUMsQ0FBUztRQUNkLElBQUksQ0FBQyxHQUFHLElBQUksRUFBRTtZQUNWLENBQUMsR0FBRyxJQUFJLENBQUM7U0FDWjtRQUVELG1FQUFtRTtRQUNuRSxNQUFNLGFBQWEsR0FBRyxJQUFJLENBQUMsZUFBZSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDLENBQUM7UUFDM0UsSUFBSSxDQUFDLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxhQUFhLEdBQUcsSUFBSSxDQUFDLGNBQWMsRUFBRSxDQUFDLENBQUMsQ0FBQztRQUN6RCxJQUFJLENBQUMsR0FBRyxHQUFHLEVBQUU7WUFDVCxDQUFDLEdBQUcsR0FBRyxDQUFDO1NBQ1g7UUFDRCxJQUFJLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ2QsSUFBSSxDQUFDLEdBQUcsYUFBYSxHQUFHLEdBQUcsRUFBRTtZQUN6QixDQUFDLEdBQUcsYUFBYSxHQUFHLEdBQUcsQ0FBQztTQUMzQjtRQUVELHNGQUFzRjtRQUN0RixJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDLENBQUM7UUFDekMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLGVBQWUsQ0FBQyxDQUFDLFNBQVMsRUFBRSxDQUFDO1FBRXJELDBCQUEwQjtRQUMxQixJQUFJLENBQUMsU0FBUyxDQUFDLGNBQWMsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUVqQyxpQ0FBaUM7UUFDakMsSUFBSSxDQUFDLGVBQWUsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBRXpDLGlDQUFpQztRQUNqQyxJQUFJLENBQUMsa0JBQWtCLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxpQkFBaUIsRUFBRSxDQUFDLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FBQyxDQUFDO1FBQy9FLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxTQUFTLEVBQUUsQ0FBQztJQUV4QyxDQUFDO0NBRUo7QUE1Q0Qsd0JBNENDIiwiZmlsZSI6Ijg4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtRdWF0ZXJuaW9uLCBWZWN0b3IzfSBmcm9tIFwidGhyZWVcIjtcclxuXHJcbmV4cG9ydCBjbGFzcyBTcHJpbmcge1xyXG5cclxuXHJcbiAgICByZWxheGF0aW9uVGltZTogbnVtYmVyID0gMC40NTtcclxuICAgIGN1cnJlbnRQb3NpdGlvbjogVmVjdG9yMyA9IG5ldyBWZWN0b3IzKCk7XHJcbiAgICB0YXJnZXRQb3NpdGlvbjogVmVjdG9yMyA9IG5ldyBWZWN0b3IzKCk7XHJcbiAgICB0ZW1wb3Jhcnk6IFZlY3RvcjMgPSBuZXcgVmVjdG9yMygpO1xyXG5cclxuICAgIGN1cnJlbnRPcmllbnRhdGlvbjogUXVhdGVybmlvbiA9IG5ldyBRdWF0ZXJuaW9uKCk7XHJcbiAgICB0YXJnZXRPcmllbnRhdGlvbjogUXVhdGVybmlvbiA9IG5ldyBRdWF0ZXJuaW9uKCk7XHJcblxyXG5cclxuICAgIHNpbXVsYXRlKHQ6IG51bWJlcikge1xyXG4gICAgICAgIGlmICh0ID4gMC4wNCkge1xyXG4gICAgICAgICAgICB0ID0gMC4wNDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC8vIENhbGN1bGF0ZSBkaXN0YW5jZSBiZXR3ZWVuIGN1cnJlbnQgcG9zaXRpb24gYW5kIHRhcmdldCBwb3NpdGlvbi5cclxuICAgICAgICBjb25zdCB0b3RhbERpc3RhbmNlID0gdGhpcy5jdXJyZW50UG9zaXRpb24uZGlzdGFuY2VUbyh0aGlzLnRhcmdldFBvc2l0aW9uKTtcclxuICAgICAgICBsZXQgdiA9IE1hdGgucG93KHRvdGFsRGlzdGFuY2UgLyB0aGlzLnJlbGF4YXRpb25UaW1lLCAyKTtcclxuICAgICAgICBpZiAodiA8IDAuMykge1xyXG4gICAgICAgICAgICB2ID0gMC4zO1xyXG4gICAgICAgIH1cclxuICAgICAgICBsZXQgcyA9IHYgKiB0O1xyXG4gICAgICAgIGlmIChzID4gdG90YWxEaXN0YW5jZSAqIDAuNSkge1xyXG4gICAgICAgICAgICBzID0gdG90YWxEaXN0YW5jZSAqIDAuNTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC8vIENhbGN1bGF0ZSBub3JtYWxpemVkIGRpcmVjdGlvbiB2ZWN0b3IgYmV0d2VlbiBjdXJyZW50IHBvc2l0aW9uIGFuZCB0YXJnZXQgcG9zaXRpb24uXHJcbiAgICAgICAgdGhpcy50ZW1wb3JhcnkuY29weSh0aGlzLnRhcmdldFBvc2l0aW9uKTtcclxuICAgICAgICB0aGlzLnRlbXBvcmFyeS5zdWIodGhpcy5jdXJyZW50UG9zaXRpb24pLm5vcm1hbGl6ZSgpO1xyXG5cclxuICAgICAgICAvLyBDYWxjdWxhdGUgZGVsdGEgdmVjdG9yLlxyXG4gICAgICAgIHRoaXMudGVtcG9yYXJ5Lm11bHRpcGx5U2NhbGFyKHMpO1xyXG5cclxuICAgICAgICAvLyBBZGQgZGVsdGEgdG8gY3VycmVudCBwb3NpdGlvbi1cclxuICAgICAgICB0aGlzLmN1cnJlbnRQb3NpdGlvbi5hZGQodGhpcy50ZW1wb3JhcnkpO1xyXG5cclxuICAgICAgICAvLyBJbnRlcnBvbGF0ZSBvcmllbnRhdGlvbiBjaGFuZ2VcclxuICAgICAgICB0aGlzLmN1cnJlbnRPcmllbnRhdGlvbi5zbGVycCh0aGlzLnRhcmdldE9yaWVudGF0aW9uLCB0IC8gdGhpcy5yZWxheGF0aW9uVGltZSk7XHJcbiAgICAgICAgdGhpcy5jdXJyZW50T3JpZW50YXRpb24ubm9ybWFsaXplKCk7XHJcblxyXG4gICAgfVxyXG5cclxufSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///88\n')},function(module,exports,__webpack_require__){"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nconst util_1 = __webpack_require__(8);\r\nconst AFrame_1 = __webpack_require__(0);\r\nclass StaticSpace {\r\n    constructor(scene) {\r\n        this.scene = scene;\r\n    }\r\n    connected(serverUrl) {\r\n    }\r\n    disconnected(serverUrl) {\r\n        const elements = document.querySelectorAll(\'[server="\' + serverUrl + \']\');\r\n        elements.forEach(element => {\r\n            if (element.parentElement) {\r\n                element.parentElement.removeChild(element);\r\n            }\r\n        });\r\n    }\r\n    setRootEntity(serverUrl, sid, entityXml) {\r\n        console.log("Set root entity " + serverUrl + "/" + sid + ": " + entityXml);\r\n        const existingElement = this.getElement(sid);\r\n        if (existingElement) {\r\n            // Remove old element as it is being replaced.\r\n            this.scene.removeChild(existingElement);\r\n        }\r\n        const newElement = util_1.createElement(entityXml);\r\n        newElement.setAttribute("server", serverUrl);\r\n        this.scene.appendChild(newElement);\r\n    }\r\n    setChildEntity(serverUrl, parentSid, sid, entityXml) {\r\n        console.log("Set child entity " + serverUrl + "/" + parentSid + "/" + sid + ": " + entityXml);\r\n        const parentElement = this.getElement(parentSid);\r\n        if (parentElement === undefined) {\r\n            console.log("Parent element not found sid: " + sid);\r\n            return;\r\n        }\r\n        const oldElement = this.getElement(sid);\r\n        if (oldElement) {\r\n            // Remove old element as it is being replaced.\r\n            parentElement.removeChild(oldElement);\r\n        }\r\n        const newElement = util_1.createElement(entityXml);\r\n        newElement.setAttribute("server", serverUrl);\r\n        parentElement.appendChild(newElement);\r\n    }\r\n    removeEntity(serverUrl, sid) {\r\n        console.log("Removed entity " + serverUrl + "/" + sid);\r\n        const element = this.getElement(sid);\r\n        if (element === undefined) {\r\n            console.log("Element to be removed not found sid: " + sid);\r\n            return;\r\n        }\r\n        if (element.parentElement) {\r\n            element.parentElement.removeChild(element);\r\n        }\r\n        AFrame_1.getSystemController(this.scene, "state").removeStates(element);\r\n    }\r\n    getElement(sid) {\r\n        const elements = document.querySelectorAll(\'[sid="\' + sid + \']\');\r\n        if (!elements || elements.length == 0) {\r\n            return undefined;\r\n        }\r\n        if (elements.length == 2) {\r\n            console.log("More than one element found with sid: " + sid);\r\n            return undefined;\r\n        }\r\n        return elements.item(0);\r\n    }\r\n}\r\nexports.StaticSpace = StaticSpace;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9zeXN0ZW0vc3BhY2UvU3RhdGljU3BhY2UudHM/MTdkZCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUNBLHNDQUF5QztBQUV6Qyx3Q0FBaUQ7QUFFakQsTUFBYSxXQUFXO0lBSXBCLFlBQVksS0FBWTtRQUNwQixJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztJQUN2QixDQUFDO0lBRUQsU0FBUyxDQUFDLFNBQWlCO0lBRTNCLENBQUM7SUFFRCxZQUFZLENBQUMsU0FBaUI7UUFDMUIsTUFBTSxRQUFRLEdBQUcsUUFBUSxDQUFDLGdCQUFnQixDQUFDLFdBQVcsR0FBRyxTQUFTLEdBQUcsR0FBRyxDQUFDLENBQUM7UUFDMUUsUUFBUSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsRUFBRTtZQUN2QixJQUFJLE9BQU8sQ0FBQyxhQUFhLEVBQUU7Z0JBQ3ZCLE9BQU8sQ0FBQyxhQUFhLENBQUMsV0FBVyxDQUFDLE9BQU8sQ0FBQyxDQUFDO2FBQzlDO1FBQ0wsQ0FBQyxDQUFDO0lBQ04sQ0FBQztJQUVELGFBQWEsQ0FBQyxTQUFpQixFQUFFLEdBQVcsRUFBRSxTQUFpQjtRQUMzRCxPQUFPLENBQUMsR0FBRyxDQUFDLGtCQUFrQixHQUFHLFNBQVMsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLElBQUksR0FBRyxTQUFTLENBQUMsQ0FBQztRQUMzRSxNQUFNLGVBQWUsR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQzdDLElBQUksZUFBZSxFQUFFO1lBQ2pCLDhDQUE4QztZQUM5QyxJQUFJLENBQUMsS0FBSyxDQUFDLFdBQVcsQ0FBQyxlQUFlLENBQUMsQ0FBQztTQUMzQztRQUVELE1BQU0sVUFBVSxHQUFHLG9CQUFhLENBQUMsU0FBUyxDQUFDLENBQUM7UUFDNUMsVUFBVSxDQUFDLFlBQVksQ0FBQyxRQUFRLEVBQUUsU0FBUyxDQUFDLENBQUM7UUFDN0MsSUFBSSxDQUFDLEtBQUssQ0FBQyxXQUFXLENBQUMsVUFBVSxDQUFDLENBQUM7SUFDdkMsQ0FBQztJQUVELGNBQWMsQ0FBQyxTQUFpQixFQUFFLFNBQWlCLEVBQUUsR0FBVyxFQUFFLFNBQWlCO1FBQy9FLE9BQU8sQ0FBQyxHQUFHLENBQUMsbUJBQW1CLEdBQUcsU0FBUyxHQUFHLEdBQUcsR0FBRyxTQUFTLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxJQUFJLEdBQUcsU0FBUyxDQUFDLENBQUM7UUFDOUYsTUFBTSxhQUFhLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxTQUFTLENBQUMsQ0FBQztRQUNqRCxJQUFJLGFBQWEsS0FBSyxTQUFTLEVBQUU7WUFDN0IsT0FBTyxDQUFDLEdBQUcsQ0FBQyxnQ0FBZ0MsR0FBRyxHQUFHLENBQUMsQ0FBQztZQUNwRCxPQUFPO1NBQ1Y7UUFDRCxNQUFNLFVBQVUsR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ3hDLElBQUksVUFBVSxFQUFFO1lBQ1osOENBQThDO1lBQzlDLGFBQWUsQ0FBQyxXQUFXLENBQUMsVUFBVSxDQUFDLENBQUM7U0FDM0M7UUFFRCxNQUFNLFVBQVUsR0FBRyxvQkFBYSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBQzVDLFVBQVUsQ0FBQyxZQUFZLENBQUMsUUFBUSxFQUFFLFNBQVMsQ0FBQyxDQUFDO1FBQzdDLGFBQWEsQ0FBQyxXQUFXLENBQUMsVUFBVSxDQUFDLENBQUM7SUFDMUMsQ0FBQztJQUVELFlBQVksQ0FBQyxTQUFpQixFQUFFLEdBQVc7UUFDdkMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxpQkFBaUIsR0FBRyxTQUFTLEdBQUcsR0FBRyxHQUFHLEdBQUcsQ0FBQyxDQUFDO1FBQ3ZELE1BQU0sT0FBTyxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDckMsSUFBSSxPQUFPLEtBQUssU0FBUyxFQUFFO1lBQ3ZCLE9BQU8sQ0FBQyxHQUFHLENBQUMsdUNBQXVDLEdBQUcsR0FBRyxDQUFDLENBQUM7WUFDM0QsT0FBTztTQUNWO1FBQ0QsSUFBSSxPQUFPLENBQUMsYUFBYSxFQUFFO1lBQ3ZCLE9BQU8sQ0FBQyxhQUFhLENBQUMsV0FBVyxDQUFDLE9BQU8sQ0FBQyxDQUFDO1NBQzlDO1FBQ0EsNEJBQW1CLENBQUMsSUFBSSxDQUFDLEtBQUssRUFBRSxPQUFPLENBQTJCLENBQUMsWUFBWSxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQzlGLENBQUM7SUFFRCxVQUFVLENBQUMsR0FBVztRQUNsQixNQUFNLFFBQVEsR0FBRyxRQUFRLENBQUMsZ0JBQWdCLENBQUMsUUFBUSxHQUFHLEdBQUcsR0FBRyxHQUFHLENBQUMsQ0FBQztRQUNqRSxJQUFJLENBQUMsUUFBUSxJQUFJLFFBQVEsQ0FBQyxNQUFNLElBQUksQ0FBQyxFQUFFO1lBQ25DLE9BQU8sU0FBUyxDQUFDO1NBQ3BCO1FBQ0QsSUFBSSxRQUFRLENBQUMsTUFBTSxJQUFJLENBQUMsRUFBRTtZQUN0QixPQUFPLENBQUMsR0FBRyxDQUFDLHdDQUF3QyxHQUFHLEdBQUcsQ0FBQyxDQUFDO1lBQzVELE9BQU8sU0FBUyxDQUFDO1NBQ3BCO1FBQ0QsT0FBTyxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBVyxDQUFDO0lBQ3RDLENBQUM7Q0FHSjtBQTlFRCxrQ0E4RUMiLCJmaWxlIjoiODkuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0VudGl0eSwgU2NlbmV9IGZyb20gXCJhZnJhbWVcIjtcclxuaW1wb3J0IHtjcmVhdGVFbGVtZW50fSBmcm9tIFwiLi4vLi4vdXRpbFwiO1xyXG5pbXBvcnQge1N0YXRlU3lzdGVtQ29udHJvbGxlcn0gZnJvbSBcIi4uL3N0YXRlL1N0YXRlU3lzdGVtQ29udHJvbGxlclwiO1xyXG5pbXBvcnQge2dldFN5c3RlbUNvbnRyb2xsZXJ9IGZyb20gXCIuLi8uLi9BRnJhbWVcIjtcclxuXHJcbmV4cG9ydCBjbGFzcyBTdGF0aWNTcGFjZSB7XHJcblxyXG4gICAgc2NlbmU6IFNjZW5lO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKHNjZW5lOiBTY2VuZSkge1xyXG4gICAgICAgIHRoaXMuc2NlbmUgPSBzY2VuZTtcclxuICAgIH1cclxuXHJcbiAgICBjb25uZWN0ZWQoc2VydmVyVXJsOiBzdHJpbmcpIHtcclxuXHJcbiAgICB9XHJcblxyXG4gICAgZGlzY29ubmVjdGVkKHNlcnZlclVybDogc3RyaW5nKSB7XHJcbiAgICAgICAgY29uc3QgZWxlbWVudHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCdbc2VydmVyPVwiJyArIHNlcnZlclVybCArICddJyk7XHJcbiAgICAgICAgZWxlbWVudHMuZm9yRWFjaChlbGVtZW50ID0+IHtcclxuICAgICAgICAgICAgaWYgKGVsZW1lbnQucGFyZW50RWxlbWVudCkge1xyXG4gICAgICAgICAgICAgICAgZWxlbWVudC5wYXJlbnRFbGVtZW50LnJlbW92ZUNoaWxkKGVsZW1lbnQpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSlcclxuICAgIH1cclxuXHJcbiAgICBzZXRSb290RW50aXR5KHNlcnZlclVybDogc3RyaW5nLCBzaWQ6IHN0cmluZywgZW50aXR5WG1sOiBzdHJpbmcpIHtcclxuICAgICAgICBjb25zb2xlLmxvZyhcIlNldCByb290IGVudGl0eSBcIiArIHNlcnZlclVybCArIFwiL1wiICsgc2lkICsgXCI6IFwiICsgZW50aXR5WG1sKTtcclxuICAgICAgICBjb25zdCBleGlzdGluZ0VsZW1lbnQgPSB0aGlzLmdldEVsZW1lbnQoc2lkKTtcclxuICAgICAgICBpZiAoZXhpc3RpbmdFbGVtZW50KSB7XHJcbiAgICAgICAgICAgIC8vIFJlbW92ZSBvbGQgZWxlbWVudCBhcyBpdCBpcyBiZWluZyByZXBsYWNlZC5cclxuICAgICAgICAgICAgdGhpcy5zY2VuZS5yZW1vdmVDaGlsZChleGlzdGluZ0VsZW1lbnQpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgY29uc3QgbmV3RWxlbWVudCA9IGNyZWF0ZUVsZW1lbnQoZW50aXR5WG1sKTtcclxuICAgICAgICBuZXdFbGVtZW50LnNldEF0dHJpYnV0ZShcInNlcnZlclwiLCBzZXJ2ZXJVcmwpO1xyXG4gICAgICAgIHRoaXMuc2NlbmUuYXBwZW5kQ2hpbGQobmV3RWxlbWVudCk7XHJcbiAgICB9XHJcblxyXG4gICAgc2V0Q2hpbGRFbnRpdHkoc2VydmVyVXJsOiBzdHJpbmcsIHBhcmVudFNpZDogc3RyaW5nLCBzaWQ6IHN0cmluZywgZW50aXR5WG1sOiBzdHJpbmcpIHtcclxuICAgICAgICBjb25zb2xlLmxvZyhcIlNldCBjaGlsZCBlbnRpdHkgXCIgKyBzZXJ2ZXJVcmwgKyBcIi9cIiArIHBhcmVudFNpZCArIFwiL1wiICsgc2lkICsgXCI6IFwiICsgZW50aXR5WG1sKTtcclxuICAgICAgICBjb25zdCBwYXJlbnRFbGVtZW50ID0gdGhpcy5nZXRFbGVtZW50KHBhcmVudFNpZCk7XHJcbiAgICAgICAgaWYgKHBhcmVudEVsZW1lbnQgPT09IHVuZGVmaW5lZCkge1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcIlBhcmVudCBlbGVtZW50IG5vdCBmb3VuZCBzaWQ6IFwiICsgc2lkKTtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuICAgICAgICBjb25zdCBvbGRFbGVtZW50ID0gdGhpcy5nZXRFbGVtZW50KHNpZCk7XHJcbiAgICAgICAgaWYgKG9sZEVsZW1lbnQpIHtcclxuICAgICAgICAgICAgLy8gUmVtb3ZlIG9sZCBlbGVtZW50IGFzIGl0IGlzIGJlaW5nIHJlcGxhY2VkLlxyXG4gICAgICAgICAgICBwYXJlbnRFbGVtZW50ISEucmVtb3ZlQ2hpbGQob2xkRWxlbWVudCk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBjb25zdCBuZXdFbGVtZW50ID0gY3JlYXRlRWxlbWVudChlbnRpdHlYbWwpO1xyXG4gICAgICAgIG5ld0VsZW1lbnQuc2V0QXR0cmlidXRlKFwic2VydmVyXCIsIHNlcnZlclVybCk7XHJcbiAgICAgICAgcGFyZW50RWxlbWVudC5hcHBlbmRDaGlsZChuZXdFbGVtZW50KTtcclxuICAgIH1cclxuXHJcbiAgICByZW1vdmVFbnRpdHkoc2VydmVyVXJsOiBzdHJpbmcsIHNpZDogc3RyaW5nKSB7XHJcbiAgICAgICAgY29uc29sZS5sb2coXCJSZW1vdmVkIGVudGl0eSBcIiArIHNlcnZlclVybCArIFwiL1wiICsgc2lkKTtcclxuICAgICAgICBjb25zdCBlbGVtZW50ID0gdGhpcy5nZXRFbGVtZW50KHNpZCk7XHJcbiAgICAgICAgaWYgKGVsZW1lbnQgPT09IHVuZGVmaW5lZCkge1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcIkVsZW1lbnQgdG8gYmUgcmVtb3ZlZCBub3QgZm91bmQgc2lkOiBcIiArIHNpZCk7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKGVsZW1lbnQucGFyZW50RWxlbWVudCkge1xyXG4gICAgICAgICAgICBlbGVtZW50LnBhcmVudEVsZW1lbnQucmVtb3ZlQ2hpbGQoZWxlbWVudCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIChnZXRTeXN0ZW1Db250cm9sbGVyKHRoaXMuc2NlbmUsIFwic3RhdGVcIikgYXMgU3RhdGVTeXN0ZW1Db250cm9sbGVyKS5yZW1vdmVTdGF0ZXMoZWxlbWVudCk7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0RWxlbWVudChzaWQ6IHN0cmluZykgOiBFbnRpdHkgfCB1bmRlZmluZWQge1xyXG4gICAgICAgIGNvbnN0IGVsZW1lbnRzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnW3NpZD1cIicgKyBzaWQgKyAnXScpO1xyXG4gICAgICAgIGlmICghZWxlbWVudHMgfHwgZWxlbWVudHMubGVuZ3RoID09IDApIHtcclxuICAgICAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKGVsZW1lbnRzLmxlbmd0aCA9PSAyKSB7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiTW9yZSB0aGFuIG9uZSBlbGVtZW50IGZvdW5kIHdpdGggc2lkOiBcIiArIHNpZCk7XHJcbiAgICAgICAgICAgIHJldHVybiB1bmRlZmluZWQ7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBlbGVtZW50cy5pdGVtKDApIGFzIEVudGl0eTtcclxuICAgIH1cclxuXHJcblxyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///89\n')},function(module,exports,__webpack_require__){"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nconst AbstractSystemController_1 = __webpack_require__(17);\r\nconst AFrame_1 = __webpack_require__(0);\r\nconst factories = new Map();\r\nfunction registerStateFactory(state, factory) {\r\n    factories.set(state, factory);\r\n}\r\nexports.registerStateFactory = registerStateFactory;\r\nclass StateSystemController extends AbstractSystemController_1.AbstractSystemController {\r\n    constructor(system, scene, data) {\r\n        super(system, scene, data);\r\n        this.states = new Map();\r\n    }\r\n    init() {\r\n    }\r\n    pause() {\r\n    }\r\n    play() {\r\n    }\r\n    tick(time, timeDelta) {\r\n    }\r\n    getState(entity, state) {\r\n        if (!factories.has(state)) {\r\n            throw new Error("Unknown state type: " + state);\r\n        }\r\n        if (!this.states.has(entity)) {\r\n            this.states.set(entity, new Map());\r\n        }\r\n        const entityStates = this.states.get(entity);\r\n        if (!entityStates.has(state)) {\r\n            entityStates.set(state, factories.get(state)());\r\n            console.log(entity.tagName + " added state: " + state);\r\n        }\r\n        return entityStates.get(state);\r\n    }\r\n    removeStates(entity) {\r\n        this.states.delete(entity);\r\n        console.log(entity.tagName + " removed states.");\r\n    }\r\n    removeState(entity, state) {\r\n        if (this.states.has(entity)) {\r\n            this.states.get(entity).delete(state);\r\n        }\r\n        console.log(entity.tagName + " removed state: " + state);\r\n    }\r\n}\r\nStateSystemController.DEFINITION = new AFrame_1.SystemControllerDefinition("state", {}, (system, scene, data) => new StateSystemController(system, scene, data));\r\nexports.StateSystemController = StateSystemController;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9zeXN0ZW0vc3RhdGUvU3RhdGVTeXN0ZW1Db250cm9sbGVyLnRzP2IzNjIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFDQSwyREFBcUU7QUFDckUsd0NBQXdEO0FBRXhELE1BQU0sU0FBUyxHQUEyQixJQUFJLEdBQUcsRUFBRSxDQUFDO0FBRXBELFNBQWdCLG9CQUFvQixDQUFJLEtBQWEsRUFBRSxPQUFnQjtJQUNuRSxTQUFTLENBQUMsR0FBRyxDQUFDLEtBQUssRUFBRSxPQUFPLENBQUMsQ0FBQztBQUNsQyxDQUFDO0FBRkQsb0RBRUM7QUFHRCxNQUFhLHFCQUFzQixTQUFRLG1EQUF3QjtJQVMvRCxZQUFZLE1BQWMsRUFBRSxLQUFZLEVBQUUsSUFBUztRQUMvQyxLQUFLLENBQUMsTUFBTSxFQUFFLEtBQUssRUFBRSxJQUFJLENBQUMsQ0FBQztRQUh2QixXQUFNLEdBQWtDLElBQUksR0FBRyxFQUFFLENBQUM7SUFJMUQsQ0FBQztJQUVELElBQUk7SUFDSixDQUFDO0lBRUQsS0FBSztJQUNMLENBQUM7SUFFRCxJQUFJO0lBQ0osQ0FBQztJQUVELElBQUksQ0FBQyxJQUFZLEVBQUUsU0FBaUI7SUFDcEMsQ0FBQztJQUVELFFBQVEsQ0FBSSxNQUFjLEVBQUUsS0FBYTtRQUNyQyxJQUFJLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsRUFBRTtZQUN2QixNQUFNLElBQUksS0FBSyxDQUFDLHNCQUFzQixHQUFHLEtBQUssQ0FBQyxDQUFDO1NBQ25EO1FBQ0QsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxFQUFFO1lBQzFCLElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLE1BQU0sRUFBRSxJQUFJLEdBQUcsRUFBRSxDQUFDLENBQUM7U0FDdEM7UUFDRCxNQUFNLFlBQVksR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUcsQ0FBQztRQUMvQyxJQUFJLENBQUMsWUFBWSxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsRUFBRTtZQUMxQixZQUFZLENBQUMsR0FBRyxDQUFDLEtBQUssRUFBRSxTQUFTLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBRyxFQUFFLENBQUMsQ0FBQztZQUNsRCxPQUFPLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxPQUFPLEdBQUcsZ0JBQWdCLEdBQUcsS0FBSyxDQUFDLENBQUM7U0FDMUQ7UUFDRCxPQUFPLFlBQVksQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFHLENBQUM7SUFDckMsQ0FBQztJQUVELFlBQVksQ0FBQyxNQUFjO1FBQ3ZCLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzNCLE9BQU8sQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLE9BQU8sR0FBRyxrQkFBa0IsQ0FBQyxDQUFDO0lBQ3JELENBQUM7SUFFRCxXQUFXLENBQUMsTUFBYyxFQUFFLEtBQWE7UUFDckMsSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsRUFBRTtZQUN6QixJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUcsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUM7U0FDM0M7UUFDRCxPQUFPLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxPQUFPLEdBQUcsa0JBQWtCLEdBQUcsS0FBSyxDQUFDLENBQUM7SUFDN0QsQ0FBQzs7QUFoRGEsZ0NBQVUsR0FBRyxJQUFJLG1DQUEwQixDQUNyRCxPQUFPLEVBQUUsRUFBRSxFQUNYLENBQUMsTUFBYyxFQUFFLEtBQVksRUFBRSxJQUFTLEVBQUUsRUFBRSxDQUFDLElBQUkscUJBQXFCLENBQUMsTUFBTSxFQUFFLEtBQUssRUFBRSxJQUFJLENBQUMsQ0FDOUYsQ0FBQztBQUxOLHNEQW9EQyIsImZpbGUiOiI5MC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q29tcG9uZW50LCBFbnRpdHksIFNjZW5lLCBTeXN0ZW19IGZyb20gXCJhZnJhbWVcIjtcclxuaW1wb3J0IHtBYnN0cmFjdFN5c3RlbUNvbnRyb2xsZXJ9IGZyb20gXCIuLi9BYnN0cmFjdFN5c3RlbUNvbnRyb2xsZXJcIjtcclxuaW1wb3J0IHtTeXN0ZW1Db250cm9sbGVyRGVmaW5pdGlvbn0gZnJvbSBcIi4uLy4uL0FGcmFtZVwiO1xyXG5cclxuY29uc3QgZmFjdG9yaWVzOiBNYXA8c3RyaW5nLCAoKSA9PiBhbnk+ID0gbmV3IE1hcCgpO1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHJlZ2lzdGVyU3RhdGVGYWN0b3J5PFQ+KHN0YXRlOiBzdHJpbmcsIGZhY3Rvcnk6ICgpID0+IFQpIHtcclxuICAgIGZhY3Rvcmllcy5zZXQoc3RhdGUsIGZhY3RvcnkpO1xyXG59XHJcblxyXG5cclxuZXhwb3J0IGNsYXNzIFN0YXRlU3lzdGVtQ29udHJvbGxlciBleHRlbmRzIEFic3RyYWN0U3lzdGVtQ29udHJvbGxlciB7XHJcblxyXG4gICAgcHVibGljIHN0YXRpYyBERUZJTklUSU9OID0gbmV3IFN5c3RlbUNvbnRyb2xsZXJEZWZpbml0aW9uKFxyXG4gICAgICAgIFwic3RhdGVcIiwge30sXHJcbiAgICAgICAgKHN5c3RlbTogU3lzdGVtLCBzY2VuZTogU2NlbmUsIGRhdGE6IGFueSkgPT4gbmV3IFN0YXRlU3lzdGVtQ29udHJvbGxlcihzeXN0ZW0sIHNjZW5lLCBkYXRhKVxyXG4gICAgKTtcclxuXHJcbiAgICBwcml2YXRlIHN0YXRlczogTWFwPEVudGl0eSwgTWFwPHN0cmluZywgYW55Pj4gPSBuZXcgTWFwKCk7XHJcblxyXG4gICAgY29uc3RydWN0b3Ioc3lzdGVtOiBTeXN0ZW0sIHNjZW5lOiBTY2VuZSwgZGF0YTogYW55KSB7XHJcbiAgICAgICAgc3VwZXIoc3lzdGVtLCBzY2VuZSwgZGF0YSk7XHJcbiAgICB9XHJcblxyXG4gICAgaW5pdCgpOiB2b2lkIHtcclxuICAgIH1cclxuXHJcbiAgICBwYXVzZSgpOiB2b2lkIHtcclxuICAgIH1cclxuXHJcbiAgICBwbGF5KCk6IHZvaWQge1xyXG4gICAgfVxyXG5cclxuICAgIHRpY2sodGltZTogbnVtYmVyLCB0aW1lRGVsdGE6IG51bWJlcik6IHZvaWQge1xyXG4gICAgfVxyXG5cclxuICAgIGdldFN0YXRlPFQ+KGVudGl0eTogRW50aXR5LCBzdGF0ZTogc3RyaW5nKTogVCB7XHJcbiAgICAgICAgaWYgKCFmYWN0b3JpZXMuaGFzKHN0YXRlKSkge1xyXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJVbmtub3duIHN0YXRlIHR5cGU6IFwiICsgc3RhdGUpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoIXRoaXMuc3RhdGVzLmhhcyhlbnRpdHkpKSB7XHJcbiAgICAgICAgICAgIHRoaXMuc3RhdGVzLnNldChlbnRpdHksIG5ldyBNYXAoKSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNvbnN0IGVudGl0eVN0YXRlcyA9IHRoaXMuc3RhdGVzLmdldChlbnRpdHkpISE7XHJcbiAgICAgICAgaWYgKCFlbnRpdHlTdGF0ZXMuaGFzKHN0YXRlKSkge1xyXG4gICAgICAgICAgICBlbnRpdHlTdGF0ZXMuc2V0KHN0YXRlLCBmYWN0b3JpZXMuZ2V0KHN0YXRlKSEhKCkpO1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhlbnRpdHkudGFnTmFtZSArIFwiIGFkZGVkIHN0YXRlOiBcIiArIHN0YXRlKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIGVudGl0eVN0YXRlcy5nZXQoc3RhdGUpISE7XHJcbiAgICB9XHJcblxyXG4gICAgcmVtb3ZlU3RhdGVzKGVudGl0eTogRW50aXR5KTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5zdGF0ZXMuZGVsZXRlKGVudGl0eSk7XHJcbiAgICAgICAgY29uc29sZS5sb2coZW50aXR5LnRhZ05hbWUgKyBcIiByZW1vdmVkIHN0YXRlcy5cIik7XHJcbiAgICB9XHJcblxyXG4gICAgcmVtb3ZlU3RhdGUoZW50aXR5OiBFbnRpdHksIHN0YXRlOiBzdHJpbmcpOiB2b2lkIHtcclxuICAgICAgICBpZiAodGhpcy5zdGF0ZXMuaGFzKGVudGl0eSkpIHtcclxuICAgICAgICAgICAgdGhpcy5zdGF0ZXMuZ2V0KGVudGl0eSkhIS5kZWxldGUoc3RhdGUpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBjb25zb2xlLmxvZyhlbnRpdHkudGFnTmFtZSArIFwiIHJlbW92ZWQgc3RhdGU6IFwiICsgc3RhdGUpO1xyXG4gICAgfVxyXG5cclxufVxyXG5cclxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///90\n')},function(module,exports,__webpack_require__){"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nclass MovementState {\r\n    constructor() {\r\n        this.distanceDelta = 0;\r\n        this.timeDeltaSeconds = 0;\r\n        this.facing = 0;\r\n    }\r\n}\r\nexports.MovementState = MovementState;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9tb2RlbC9Nb3ZlbWVudFN0YXRlLnRzPzk3MzYiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxNQUFhLGFBQWE7SUFBMUI7UUFDSSxrQkFBYSxHQUFXLENBQUMsQ0FBQztRQUMxQixxQkFBZ0IsR0FBVyxDQUFDLENBQUM7UUFDN0IsV0FBTSxHQUFXLENBQUMsQ0FBQztJQUN2QixDQUFDO0NBQUE7QUFKRCxzQ0FJQyIsImZpbGUiOiI5MS5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjbGFzcyBNb3ZlbWVudFN0YXRlIHtcclxuICAgIGRpc3RhbmNlRGVsdGE6IG51bWJlciA9IDA7XHJcbiAgICB0aW1lRGVsdGFTZWNvbmRzOiBudW1iZXIgPSAwO1xyXG4gICAgZmFjaW5nOiBudW1iZXIgPSAwO1xyXG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///91\n')},function(module,exports,__webpack_require__){"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nconst AbstractSystemController_1 = __webpack_require__(17);\r\nconst DeviceSlot_1 = __webpack_require__(18);\r\nconst Slot_1 = __webpack_require__(5);\r\nconst AFrame_1 = __webpack_require__(0);\r\nclass InterfaceSystemController extends AbstractSystemController_1.AbstractSystemController {\r\n    constructor(system, scene, data) {\r\n        super(system, scene, data);\r\n        this.collidables = new Array();\r\n        this.devices = new Map();\r\n        this.tools = new Map();\r\n        this.toolNames = new Array();\r\n        this.slots = new Map();\r\n        this.slotListeners = new Map();\r\n        this.interfaceEntity = this.scene.querySelector(\'[interface]\');\r\n        if (this.interfaceEntity) {\r\n            console.info("interface entity set.");\r\n        }\r\n        else {\r\n            throw new Error("interface entity not found.");\r\n        }\r\n        this.cameraEntity = this.interfaceEntity.querySelector(\'[camera]\');\r\n        if (this.cameraEntity) {\r\n            console.info("interface camera entity set.");\r\n        }\r\n        else {\r\n            throw new Error("interface camera entity not found.");\r\n        }\r\n    }\r\n    init() {\r\n    }\r\n    pause() {\r\n    }\r\n    play() {\r\n    }\r\n    tick(time, timeDelta) {\r\n    }\r\n    getCollidables() {\r\n        return this.collidables;\r\n    }\r\n    addCollidable(object) {\r\n        this.collidables.push(object);\r\n    }\r\n    removeCollidable(object) {\r\n        const index = this.collidables.indexOf(object, 0);\r\n        if (index > -1) {\r\n            this.collidables.splice(index, 1);\r\n        }\r\n    }\r\n    setInterfaceController(interfaceController) {\r\n        this.interfaceController = interfaceController;\r\n    }\r\n    setDevice(slot, device) {\r\n        if (this.devices.has(slot)) {\r\n            console.log("interface already has controls at: " + DeviceSlot_1.DeviceSlot[slot]);\r\n        }\r\n        else {\r\n            this.devices.set(slot, device);\r\n            console.log("interface controls " + device.componentName + " set at: " + DeviceSlot_1.DeviceSlot[slot]);\r\n        }\r\n    }\r\n    getDevice(slot) {\r\n        return this.devices.get(slot);\r\n    }\r\n    registerTool(tool) {\r\n        if (!this.tools.has(tool.componentName)) {\r\n            console.log("interface tool \'" + tool.componentName + "\' registered.");\r\n            this.tools.set(tool.componentName, tool);\r\n            this.toolNames.push(tool.componentName);\r\n        }\r\n    }\r\n    registerSlotListener(slot, slotListener) {\r\n        if (!this.slotListeners.has(slot)) {\r\n            this.slotListeners.set(slot, new Array());\r\n        }\r\n        this.slotListeners.get(slot).push(slotListener);\r\n        // Notify slot listener of slotted tool if tool already slotted.\r\n        const slottedTool = this.getToolAtSlot(Slot_1.Slot.PRIMARY);\r\n        if (slottedTool) {\r\n            slotListener.onToolSlotted(Slot_1.Slot.PRIMARY, slottedTool.componentName);\r\n        }\r\n    }\r\n    getTool(name) {\r\n        if (this.tools.has(name)) {\r\n            return this.tools.get(name);\r\n        }\r\n        else {\r\n            throw new Error("Tool \'" + name + "\' not registered.");\r\n        }\r\n    }\r\n    slotTool(slot, tool) {\r\n        this.slots.set(slot, tool);\r\n        console.log("interface tool " + tool.componentName + " set at: " + Slot_1.Slot[slot]);\r\n        if (this.slotListeners.has(slot)) {\r\n            this.slotListeners.get(slot).forEach((slotListener) => {\r\n                slotListener.onToolSlotted(slot, tool.componentName);\r\n            });\r\n        }\r\n    }\r\n    getToolAtSlot(slot) {\r\n        return this.slots.get(slot);\r\n    }\r\n    buttonUp(device, slot, button) {\r\n        if (this.slots.has(slot)) {\r\n            this.slots.get(slot).buttonUp(device, slot, button);\r\n        }\r\n    }\r\n    buttonDown(device, slot, button) {\r\n        if (this.slots.has(slot)) {\r\n            this.slots.get(slot).buttonDown(device, slot, button);\r\n        }\r\n    }\r\n    stickTwist(device, slot, stick, x, y) {\r\n        if (this.slots.has(slot)) {\r\n            this.slots.get(slot).stickTwist(device, slot, stick, x, y);\r\n        }\r\n    }\r\n    slotNextTool(slot) {\r\n        if (this.slots.has(slot)) {\r\n            const tool = this.slots.get(slot);\r\n            const toolIndex = this.toolNames.indexOf(tool.componentName);\r\n            const nextToolIndex = (toolIndex == this.toolNames.length - 1) ? 0 : toolIndex + 1;\r\n            console.log("tool index: " + toolIndex + " next tool index: " + nextToolIndex + " lenght: " + this.toolNames.length);\r\n            console.log(this.toolNames);\r\n            const nextToolName = this.toolNames[nextToolIndex];\r\n            const nextTool = this.getTool(nextToolName);\r\n            this.slotTool(slot, nextTool);\r\n        }\r\n    }\r\n    slotPreviousTool(slot) {\r\n        if (this.slots.has(slot)) {\r\n            const tool = this.slots.get(slot);\r\n            const toolIndex = this.toolNames.indexOf(tool.componentName);\r\n            const previousToolIndex = (toolIndex == 0) ? this.toolNames.length - 1 : toolIndex - 1;\r\n            const previousToolName = this.toolNames[previousToolIndex];\r\n            const previousTool = this.getTool(previousToolName);\r\n            this.slotTool(slot, previousTool);\r\n        }\r\n    }\r\n}\r\nInterfaceSystemController.DEFINITION = new AFrame_1.SystemControllerDefinition("interface", {}, (system, scene, data) => new InterfaceSystemController(system, scene, data));\r\nexports.InterfaceSystemController = InterfaceSystemController;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///92\n')},function(module,exports,__webpack_require__){"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nconst AbstractComponentController_1 = __webpack_require__(1);\r\nconst AFrame_1 = __webpack_require__(0);\r\nclass InterfaceController extends AbstractComponentController_1.AbstractComponentController {\r\n    constructor(component, entity, data) {\r\n        super(component, entity, data);\r\n        console.log(this.componentName + " init: " + JSON.stringify(this.data));\r\n        this.interface.setInterfaceController(this);\r\n    }\r\n    init() {\r\n    }\r\n    update(data, oldData) {\r\n        console.log(this.componentName + " update: " + JSON.stringify(this.data));\r\n    }\r\n    remove() {\r\n        console.log(this.componentName + " remove");\r\n    }\r\n    pause() {\r\n        console.log(this.componentName + " pause");\r\n    }\r\n    play() {\r\n        console.log(this.componentName + " play");\r\n    }\r\n    tick(time, timeDelta) {\r\n    }\r\n}\r\nInterfaceController.DEFINITION = new AFrame_1.ComponentControllerDefinition("interface", {}, false, (component, entity, data) => new InterfaceController(component, entity, data));\r\nexports.InterfaceController = InterfaceController;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9zeXN0ZW0vaW50ZXJmYWNlL0ludGVyZmFjZUNvbnRyb2xsZXIudHM/ZmViNiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUNBLDZEQUF3RjtBQUN4Rix3Q0FBMkQ7QUFFM0QsTUFBYSxtQkFBb0IsU0FBUSx5REFBMkI7SUFPaEUsWUFBWSxTQUFvQixFQUFFLE1BQWMsRUFBRSxJQUFTO1FBQ3ZELEtBQUssQ0FBQyxTQUFTLEVBQUUsTUFBTSxFQUFFLElBQUksQ0FBQyxDQUFDO1FBQy9CLE9BQU8sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLGFBQWEsR0FBRyxTQUFTLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztRQUN4RSxJQUFJLENBQUMsU0FBUyxDQUFDLHNCQUFzQixDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ2hELENBQUM7SUFFRCxJQUFJO0lBQ0osQ0FBQztJQUVELE1BQU0sQ0FBQyxJQUFTLEVBQUUsT0FBWTtRQUMxQixPQUFPLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxhQUFhLEdBQUcsV0FBVyxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7SUFDOUUsQ0FBQztJQUVELE1BQU07UUFDRixPQUFPLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxhQUFhLEdBQUcsU0FBUyxDQUFDLENBQUM7SUFDaEQsQ0FBQztJQUVELEtBQUs7UUFDRCxPQUFPLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxhQUFhLEdBQUcsUUFBUSxDQUFDLENBQUM7SUFDL0MsQ0FBQztJQUVELElBQUk7UUFDQSxPQUFPLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxhQUFhLEdBQUcsT0FBTyxDQUFDLENBQUM7SUFDOUMsQ0FBQztJQUVELElBQUksQ0FBQyxJQUFZLEVBQUUsU0FBaUI7SUFDcEMsQ0FBQzs7QUEvQmEsOEJBQVUsR0FBRyxJQUFJLHNDQUE2QixDQUN4RCxXQUFXLEVBQUUsRUFBRSxFQUFFLEtBQUssRUFDdEIsQ0FBQyxTQUFvQixFQUFFLE1BQWMsRUFBRSxJQUFTLEVBQUUsRUFBRSxDQUFDLElBQUksbUJBQW1CLENBQUMsU0FBUyxFQUFFLE1BQU0sRUFBRSxJQUFJLENBQUMsQ0FDeEcsQ0FBQztBQUxOLGtEQW1DQyIsImZpbGUiOiI5My5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q29tcG9uZW50LCBFbnRpdHl9IGZyb20gXCJhZnJhbWVcIjtcclxuaW1wb3J0IHtBYnN0cmFjdENvbXBvbmVudENvbnRyb2xsZXJ9IGZyb20gXCIuLi8uLi9jb21wb25lbnQvQWJzdHJhY3RDb21wb25lbnRDb250cm9sbGVyXCI7XHJcbmltcG9ydCB7Q29tcG9uZW50Q29udHJvbGxlckRlZmluaXRpb259IGZyb20gXCIuLi8uLi9BRnJhbWVcIjtcclxuXHJcbmV4cG9ydCBjbGFzcyBJbnRlcmZhY2VDb250cm9sbGVyIGV4dGVuZHMgQWJzdHJhY3RDb21wb25lbnRDb250cm9sbGVyIHtcclxuXHJcbiAgICBwdWJsaWMgc3RhdGljIERFRklOSVRJT04gPSBuZXcgQ29tcG9uZW50Q29udHJvbGxlckRlZmluaXRpb24oXHJcbiAgICAgICAgXCJpbnRlcmZhY2VcIiwge30sIGZhbHNlLFxyXG4gICAgICAgIChjb21wb25lbnQ6IENvbXBvbmVudCwgZW50aXR5OiBFbnRpdHksIGRhdGE6IGFueSkgPT4gbmV3IEludGVyZmFjZUNvbnRyb2xsZXIoY29tcG9uZW50LCBlbnRpdHksIGRhdGEpXHJcbiAgICApO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKGNvbXBvbmVudDogQ29tcG9uZW50LCBlbnRpdHk6IEVudGl0eSwgZGF0YTogYW55KSB7XHJcbiAgICAgICAgc3VwZXIoY29tcG9uZW50LCBlbnRpdHksIGRhdGEpO1xyXG4gICAgICAgIGNvbnNvbGUubG9nKHRoaXMuY29tcG9uZW50TmFtZSArIFwiIGluaXQ6IFwiICsgSlNPTi5zdHJpbmdpZnkodGhpcy5kYXRhKSk7XHJcbiAgICAgICAgdGhpcy5pbnRlcmZhY2Uuc2V0SW50ZXJmYWNlQ29udHJvbGxlcih0aGlzKTtcclxuICAgIH1cclxuXHJcbiAgICBpbml0KCk6IHZvaWQge1xyXG4gICAgfVxyXG5cclxuICAgIHVwZGF0ZShkYXRhOiBhbnksIG9sZERhdGE6IGFueSk6IHZvaWQge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKHRoaXMuY29tcG9uZW50TmFtZSArIFwiIHVwZGF0ZTogXCIgKyBKU09OLnN0cmluZ2lmeSh0aGlzLmRhdGEpKTtcclxuICAgIH1cclxuXHJcbiAgICByZW1vdmUoKTogdm9pZCB7XHJcbiAgICAgICAgY29uc29sZS5sb2codGhpcy5jb21wb25lbnROYW1lICsgXCIgcmVtb3ZlXCIpO1xyXG4gICAgfVxyXG5cclxuICAgIHBhdXNlKCk6IHZvaWQge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKHRoaXMuY29tcG9uZW50TmFtZSArIFwiIHBhdXNlXCIpO1xyXG4gICAgfVxyXG5cclxuICAgIHBsYXkoKTogdm9pZCB7XHJcbiAgICAgICAgY29uc29sZS5sb2codGhpcy5jb21wb25lbnROYW1lICsgXCIgcGxheVwiKTtcclxuICAgIH1cclxuXHJcbiAgICB0aWNrKHRpbWU6IG51bWJlciwgdGltZURlbHRhOiBudW1iZXIpOiB2b2lkIHtcclxuICAgIH1cclxuXHJcbn1cclxuXHJcblxyXG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///93\n')},function(module,exports,__webpack_require__){"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nconst AbstractComponentController_1 = __webpack_require__(1);\r\nconst three_1 = __webpack_require__(2);\r\nconst EntityStateEventDetail_1 = __webpack_require__(44);\r\nconst Events_1 = __webpack_require__(9);\r\nconst Slot_1 = __webpack_require__(5);\r\nconst Button_1 = __webpack_require__(3);\r\nconst Stick_1 = __webpack_require__(95);\r\nconst AFrame_1 = __webpack_require__(0);\r\nclass WalkTool extends AbstractComponentController_1.AbstractComponentController {\r\n    constructor(component, entity, data) {\r\n        super(component, entity, data);\r\n        this.movementSpeed = 0;\r\n        this.rotationSpeed = 0;\r\n        this.height = 0;\r\n        this.width = 0;\r\n        this.jumpStartSpeed = 0;\r\n        this.minY = 0;\r\n        this.forwardKey = Button_1.Button.UP;\r\n        this.backwardKey = Button_1.Button.DOWN;\r\n        this.leftKey = Button_1.Button.LEFT;\r\n        this.rightKey = Button_1.Button.RIGHT;\r\n        this.jumpKey = Button_1.Button.TRIGGER;\r\n        this.yAxisPositive = new three_1.Vector3(0, 1, 0);\r\n        this.yAxisNegative = new three_1.Vector3(0, -1, 0);\r\n        this.xzPlane = new three_1.Plane(this.yAxisPositive);\r\n        this.jumping = false;\r\n        this.airborne = false;\r\n        this.time = 0;\r\n        this.yVelocity = 0;\r\n        this.pressed = new Map();\r\n        this.centerOfMassPosition = new three_1.Vector3(0, 0, 0);\r\n        this.stickTranslation = new three_1.Vector3(0, 0, 0);\r\n        this.stickRotation = new three_1.Vector3(0, 0, 0);\r\n        this.cameraDirection = new three_1.Vector3(0, 0, 0);\r\n        this.xzCameraDirection = new three_1.Vector3(0, 0, 0);\r\n        this.xDirection = new three_1.Vector3(0, 0, 0);\r\n        this.zDirection = new three_1.Vector3(0, 0, 0);\r\n        this.direction = new three_1.Vector3(0, 0, 0);\r\n        this.interface.registerTool(this);\r\n        this.interface.slotTool(Slot_1.Slot.WALK, this);\r\n    }\r\n    init() {\r\n        console.log(this.componentName + " init");\r\n        // Configuration\r\n        this.movementSpeed = this.data.movementSpeed;\r\n        this.rotationSpeed = this.data.rotationSpeed;\r\n        this.minY = this.data.minY;\r\n        this.height = this.data.height;\r\n        this.width = this.data.width;\r\n        this.jumpStartSpeed = this.data.jumpStartSpeed;\r\n        // Utility objects\r\n        this.raycaster = new three_1.Raycaster();\r\n        // Constants\r\n        this.yAxisPositive = new three_1.Vector3(0, 1, 0);\r\n        this.yAxisNegative = new three_1.Vector3(0, -1, 0);\r\n        this.xzPlane = new three_1.Plane(this.yAxisPositive);\r\n        // State booleans\r\n        this.jumping = false;\r\n        this.airborne = false;\r\n        // State variables\r\n        this.time = 0;\r\n        this.yVelocity = 0;\r\n        this.cameraDirection = new three_1.Vector3(0, 0, 0);\r\n        this.xzCameraDirection = new three_1.Vector3(0, 0, 0);\r\n        this.xDirection = new three_1.Vector3(0, 0, 0);\r\n        this.zDirection = new three_1.Vector3(0, 0, 0);\r\n    }\r\n    setJumping(state) {\r\n        if (this.jumping !== state) {\r\n            this.jumping = state;\r\n            this.entityStateChange("jumping", this.jumping);\r\n        }\r\n    }\r\n    setAirborne(state) {\r\n        if (this.airborne !== state) {\r\n            this.airborne = state;\r\n            this.entityStateChange("airborne", this.airborne);\r\n        }\r\n    }\r\n    entityStateChange(state, enabled) {\r\n        if (enabled) {\r\n            this.interface.interfaceEntity.dispatchEvent(new CustomEvent(Events_1.Events.EVENT_STATE_BEGIN, { detail: new EntityStateEventDetail_1.EntityStateEventDetail(state) }));\r\n        }\r\n        else {\r\n            this.interface.interfaceEntity.dispatchEvent(new CustomEvent(Events_1.Events.EVENT_STATE_END, { detail: new EntityStateEventDetail_1.EntityStateEventDetail(state) }));\r\n        }\r\n    }\r\n    update(data, oldData) { }\r\n    remove() { }\r\n    pause() { }\r\n    play() {\r\n        // Reused vector variables.\r\n        this.setCenterOfMassFromInterfaceEntity();\r\n    }\r\n    setCenterOfMassFromInterfaceEntity() {\r\n        this.centerOfMassPosition = new three_1.Vector3(0, 0, 0); // Center of mass for collision checks\r\n        this.centerOfMassPosition.x = this.interface.interfaceEntity.object3D.position.x;\r\n        this.centerOfMassPosition.y = this.interface.interfaceEntity.object3D.position.y + this.height / 2;\r\n        this.centerOfMassPosition.z = this.interface.interfaceEntity.object3D.position.z;\r\n    }\r\n    tick(time, timeDelta) {\r\n        this.time = time;\r\n        if (timeDelta > 40) {\r\n            timeDelta = 40;\r\n        }\r\n        let collidables = this.interface.getCollidables();\r\n        this.updateXZ(timeDelta, collidables);\r\n        this.updateY(timeDelta, collidables);\r\n        if (this.stickRotation.x != 0 || this.stickRotation.y != 0 || this.stickRotation.z != 0) {\r\n            let delta = this.rotationSpeed * timeDelta / 1000.0;\r\n            this.interface.interfaceEntity.object3D.rotation.y -= this.stickRotation.y * delta;\r\n        }\r\n    }\r\n    buttonDown(device, toolSlot, button) {\r\n        if (!this.pressed.has(button)) {\r\n            if (button == this.backwardKey) {\r\n                this.entityStateChange("backward", true);\r\n                this.stickTranslation.x = -1;\r\n            }\r\n            if (button == this.forwardKey) {\r\n                this.entityStateChange("forward", true);\r\n                this.stickTranslation.x = 1;\r\n            }\r\n            if (button == this.leftKey) {\r\n                this.entityStateChange("left", true);\r\n                this.stickTranslation.z = -1;\r\n            }\r\n            if (button == this.rightKey) {\r\n                this.entityStateChange("right", true);\r\n                this.stickTranslation.z = 1;\r\n            }\r\n        }\r\n        this.pressed.set(button, this.time);\r\n    }\r\n    buttonUp(device, toolSlot, button) {\r\n        if (this.pressed.has(button)) {\r\n            if (button == this.backwardKey) {\r\n                this.entityStateChange("backward", false);\r\n                this.stickTranslation.x = 0;\r\n            }\r\n            if (button == this.forwardKey) {\r\n                this.entityStateChange("forward", false);\r\n                this.stickTranslation.x = 0;\r\n            }\r\n            if (button == this.leftKey) {\r\n                this.entityStateChange("left", false);\r\n                this.stickTranslation.z = 0;\r\n            }\r\n            if (button == this.rightKey) {\r\n                this.entityStateChange("right", false);\r\n                this.stickTranslation.z = 0;\r\n            }\r\n            this.pressed.delete(button);\r\n        }\r\n    }\r\n    stickTwist(device, toolSlot, stick, x, y) {\r\n        if (stick == Stick_1.Stick.PRIMARY) {\r\n            this.stickTranslation.x = 1.5 * x;\r\n            this.stickTranslation.z = 1.5 * y;\r\n        }\r\n        if (stick == Stick_1.Stick.SECONDARY) {\r\n            this.stickRotation.x = 1.0 * x;\r\n            this.stickRotation.y = 1.0 * y;\r\n        }\r\n    }\r\n    updateXZ(timeDelta, collidables) {\r\n        let position = this.interface.interfaceEntity.object3D.position;\r\n        if (this.stickTranslation.x != 0 || this.stickTranslation.z != 0) {\r\n            let delta = this.movementSpeed * timeDelta / 1000.0;\r\n            this.computeXZDirectionFromCamera();\r\n            this.centerOfMassPosition.x = this.interface.interfaceEntity.object3D.position.x;\r\n            this.centerOfMassPosition.z = this.interface.interfaceEntity.object3D.position.z;\r\n            this.xDirection.copy(this.xzCameraDirection);\r\n            this.zDirection.copy(this.xzCameraDirection);\r\n            this.zDirection.cross(this.yAxisPositive);\r\n            this.xDirection.multiplyScalar(this.stickTranslation.x * delta);\r\n            this.zDirection.multiplyScalar(this.stickTranslation.z * delta);\r\n            this.direction.copy(this.xDirection);\r\n            this.direction.add(this.zDirection);\r\n            if (!this.testCollision(this.direction, collidables)) {\r\n                position.x += this.direction.x;\r\n                position.z += this.direction.z;\r\n            }\r\n        }\r\n    }\r\n    updateY(timeDelta, collidables) {\r\n        let position = this.interface.interfaceEntity.object3D.position;\r\n        var distanceToNearestBelow = this.findDistanceToNearest(this.yAxisNegative, collidables);\r\n        if (this.pressed.has(this.jumpKey) && !this.jumping && !this.airborne) {\r\n            this.setJumping(true);\r\n            this.yVelocity = this.jumpStartSpeed;\r\n        }\r\n        let freeDropDelta = this.yVelocity * timeDelta / 1000.0;\r\n        let delta;\r\n        if (distanceToNearestBelow && !this.jumping) {\r\n            let distanceFromBottom = distanceToNearestBelow - this.height / 2;\r\n            if (Math.abs(freeDropDelta) > Math.abs(distanceFromBottom) || Math.abs(distanceFromBottom) < 0.1) {\r\n                delta = -distanceFromBottom;\r\n                this.setAirborne(false);\r\n            }\r\n            else {\r\n                if (distanceFromBottom && distanceFromBottom < 0) {\r\n                    delta = -freeDropDelta;\r\n                }\r\n                else {\r\n                    delta = freeDropDelta;\r\n                }\r\n                this.setAirborne(true);\r\n            }\r\n        }\r\n        else {\r\n            delta = freeDropDelta;\r\n            this.setAirborne(true);\r\n        }\r\n        if (this.airborne) {\r\n            this.yVelocity -= 9.81 * timeDelta / 1000.0;\r\n        }\r\n        else {\r\n            this.yVelocity = 0;\r\n        }\r\n        if (this.yVelocity < 0) {\r\n            this.setJumping(false);\r\n        }\r\n        this.centerOfMassPosition.y = this.centerOfMassPosition.y + delta;\r\n        if (this.centerOfMassPosition.y - this.height / 2 < this.minY) {\r\n            this.centerOfMassPosition.y = this.minY + this.height / 2;\r\n        }\r\n        position.y = this.centerOfMassPosition.y - this.height / 2;\r\n    }\r\n    computeXZDirectionFromCamera() {\r\n        this.interface.cameraEntity.object3D.getWorldDirection(this.cameraDirection);\r\n        this.cameraDirection.multiplyScalar(-1);\r\n        this.xzPlane.projectPoint(this.cameraDirection, this.xzCameraDirection);\r\n        this.xzCameraDirection.normalize();\r\n    }\r\n    findDistanceToNearest(rayDirection, objects) {\r\n        this.raycaster.near = 0;\r\n        this.raycaster.far = this.height;\r\n        this.raycaster.set(this.centerOfMassPosition, rayDirection);\r\n        var intersects = this.raycaster.intersectObjects(objects, true);\r\n        if (intersects.length > 0) {\r\n            return intersects[0].distance;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    testCollision(direction, objects) {\r\n        let distanceToNearestAhead = this.findDistanceToNearest(direction, objects);\r\n        let collisionAhead = distanceToNearestAhead && distanceToNearestAhead < this.width / 2;\r\n        return collisionAhead;\r\n    }\r\n}\r\nWalkTool.DEFINITION = new AFrame_1.ComponentControllerDefinition("walk-tool", {\r\n    movementSpeed: { type: \'number\', default: 2 },\r\n    rotationSpeed: { type: \'number\', default: 1 },\r\n    height: { type: \'number\', default: 2 },\r\n    width: { type: \'number\', default: 0.5 },\r\n    jumpStartSpeed: { type: \'number\', default: 5.0 },\r\n    minY: { type: \'number\', default: -1 }\r\n}, false, (component, entity, data) => new WalkTool(component, entity, data));\r\nexports.WalkTool = WalkTool;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///94\n')},function(module,exports,__webpack_require__){"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nvar Stick;\r\n(function (Stick) {\r\n    Stick[Stick["PRIMARY"] = 0] = "PRIMARY";\r\n    Stick[Stick["SECONDARY"] = 1] = "SECONDARY";\r\n})(Stick = exports.Stick || (exports.Stick = {}));\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9zeXN0ZW0vaW50ZXJmYWNlL21vZGVsL1N0aWNrLnRzPzAxMzAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFZLEtBR1g7QUFIRCxXQUFZLEtBQUs7SUFDYix1Q0FBTztJQUNQLDJDQUFTO0FBQ2IsQ0FBQyxFQUhXLEtBQUssR0FBTCxhQUFLLEtBQUwsYUFBSyxRQUdoQiIsImZpbGUiOiI5NS5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBlbnVtIFN0aWNrIHtcclxuICAgIFBSSU1BUlksXHJcbiAgICBTRUNPTkRBUllcclxufSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///95\n')},function(module,exports,__webpack_require__){"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nconst AbstractComponentController_1 = __webpack_require__(1);\r\nconst DeviceSlot_1 = __webpack_require__(18);\r\nconst Slot_1 = __webpack_require__(5);\r\nconst Button_1 = __webpack_require__(3);\r\nconst AFrame_1 = __webpack_require__(0);\r\nclass PrimaryControllerDevice extends AbstractComponentController_1.AbstractComponentController {\r\n    constructor(component, entity, data) {\r\n        super(component, entity, data);\r\n        this.controllerName = "";\r\n    }\r\n    init() {\r\n        console.log(this.componentName + " init");\r\n        this.interface.setDevice(DeviceSlot_1.DeviceSlot.PRIMARY_HAND, this);\r\n        this.addEventListener("controllerconnected", (detail) => {\r\n            this.controllerName = detail.name;\r\n            console.log("controllerconnected " + this.controllerName);\r\n        });\r\n        this.addEventListener("controllerdisconnected", (detail) => {\r\n            console.log("controllerdisconnected " + this.controllerName);\r\n        });\r\n        this.addEventListener("triggerup", (detail) => {\r\n            this.interface.buttonUp(this, Slot_1.Slot.PRIMARY, Button_1.Button.TRIGGER);\r\n            console.log("triggerup " + detail);\r\n        });\r\n        this.addEventListener("triggerdown", (detail) => {\r\n            this.interface.buttonDown(this, Slot_1.Slot.PRIMARY, Button_1.Button.TRIGGER);\r\n            console.log("triggerdown " + detail);\r\n        });\r\n        this.addEventListener("gripup", (detail) => {\r\n            this.interface.buttonUp(this, Slot_1.Slot.PRIMARY, Button_1.Button.GRIP);\r\n            console.log("gripup " + detail);\r\n        });\r\n        this.addEventListener("gripdown", (detail) => {\r\n            this.interface.buttonDown(this, Slot_1.Slot.PRIMARY, Button_1.Button.GRIP);\r\n            console.log("gripdown " + detail);\r\n        });\r\n        this.addEventListener("menuup", (detail) => {\r\n            this.interface.buttonUp(this, Slot_1.Slot.PRIMARY, Button_1.Button.MENU);\r\n            console.log("menuup " + detail);\r\n        });\r\n        this.addEventListener("menudown", (detail) => {\r\n            this.interface.buttonDown(this, Slot_1.Slot.PRIMARY, Button_1.Button.MENU);\r\n            console.log("menudown " + detail);\r\n        });\r\n        this.addEventListener("trackpaddown", (detail) => {\r\n            console.log("trackpaddown " + detail);\r\n            if (this.axis) {\r\n                const button = this.getStickButton(this.axis[0], this.axis[1]);\r\n                this.interface.buttonDown(this, Slot_1.Slot.PRIMARY_SELECTOR, button);\r\n                this.lastStickButton = button;\r\n                console.log("button down: " + Button_1.Button[button]);\r\n            }\r\n        });\r\n        this.addEventListener("trackpadup", (detail) => {\r\n            console.log("trackpadup " + detail);\r\n            if (this.axis) {\r\n                if (this.lastStickButton) {\r\n                    const button = this.lastStickButton;\r\n                    this.interface.buttonUp(this, Slot_1.Slot.PRIMARY_SELECTOR, button);\r\n                    console.log("button up: " + Button_1.Button[button]);\r\n                }\r\n            }\r\n        });\r\n        this.addEventListener("axismove", (detail) => {\r\n            const axis = detail.axis;\r\n            this.axis = Object.assign([], axis);\r\n            if (this.controllerName === "oculus-go-controls") {\r\n                this.axis[1] = -1 * this.axis[1];\r\n            }\r\n            //console.log(this.toolSlot + " axismove " + axis);\r\n            //this.interface.stickTwist(this, Slot.PRIMARY, Stick.PRIMARY, this.axis[1], this.axis[0]);\r\n        });\r\n    }\r\n    getStickButton(x, y) {\r\n        var angle = Math.atan2(y, x) * 180 / Math.PI;\r\n        if (angle >= -45 && angle < 45) {\r\n            return Button_1.Button.RIGHT;\r\n        }\r\n        else if (angle >= 45 && angle < 135) {\r\n            return Button_1.Button.UP;\r\n        }\r\n        else if (angle >= 135 || angle <= -135) {\r\n            return Button_1.Button.LEFT;\r\n        }\r\n        else {\r\n            return Button_1.Button.DOWN;\r\n        }\r\n    }\r\n    update(data, oldData) {\r\n    }\r\n    remove() {\r\n    }\r\n    pause() {\r\n    }\r\n    play() {\r\n    }\r\n    tick(time, timeDelta) {\r\n    }\r\n}\r\nPrimaryControllerDevice.DEFINITION = new AFrame_1.ComponentControllerDefinition("primary-controller", {}, false, (component, entity, data) => new PrimaryControllerDevice(component, entity, data));\r\nexports.PrimaryControllerDevice = PrimaryControllerDevice;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///96\n')},function(module,exports,__webpack_require__){"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nconst AbstractComponentController_1 = __webpack_require__(1);\r\nconst AFrame_1 = __webpack_require__(0);\r\nclass ExampleController extends AbstractComponentController_1.AbstractComponentController {\r\n    constructor(component, entity, data) {\r\n        super(component, entity, data);\r\n    }\r\n    init() {\r\n        console.log(this.componentName + " init: " + JSON.stringify(this.data));\r\n    }\r\n    update(data, oldData) {\r\n        //console.log(this.componentName + " update: " + JSON.stringify(this.data));\r\n    }\r\n    remove() {\r\n        //console.log(this.componentName + " remove");\r\n    }\r\n    pause() {\r\n        //console.log(this.componentName + " pause");\r\n    }\r\n    play() {\r\n        //console.log(this.componentName + " play");\r\n    }\r\n    tick(time, timeDelta) {\r\n    }\r\n}\r\nExampleController.DEFINITION = new AFrame_1.ComponentControllerDefinition("example", {}, false, (component, entity, data) => new ExampleController(component, entity, data));\r\nexports.ExampleController = ExampleController;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9jb21wb25lbnQvRXhhbXBsZUNvbnRyb2xsZXIudHM/NDI5NyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUNBLDZEQUEwRTtBQUMxRSx3Q0FBd0Q7QUFFeEQsTUFBYSxpQkFBa0IsU0FBUSx5REFBMkI7SUFTOUQsWUFBWSxTQUFvQixFQUFFLE1BQWMsRUFBRSxJQUFTO1FBQ3ZELEtBQUssQ0FBQyxTQUFTLEVBQUUsTUFBTSxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQ25DLENBQUM7SUFFRCxJQUFJO1FBQ0EsT0FBTyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsYUFBYSxHQUFHLFNBQVMsR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO0lBQzVFLENBQUM7SUFFRCxNQUFNLENBQUMsSUFBUyxFQUFFLE9BQVk7UUFDMUIsNEVBQTRFO0lBQ2hGLENBQUM7SUFFRCxNQUFNO1FBQ0YsOENBQThDO0lBQ2xELENBQUM7SUFFRCxLQUFLO1FBQ0QsNkNBQTZDO0lBQ2pELENBQUM7SUFFRCxJQUFJO1FBQ0EsNENBQTRDO0lBQ2hELENBQUM7SUFFRCxJQUFJLENBQUMsSUFBWSxFQUFFLFNBQWlCO0lBQ3BDLENBQUM7O0FBaENhLDRCQUFVLEdBQUcsSUFBSSxzQ0FBNkIsQ0FDeEQsU0FBUyxFQUNULEVBQUUsRUFDRixLQUFLLEVBQ0wsQ0FBQyxTQUFvQixFQUFFLE1BQWMsRUFBRSxJQUFTLEVBQUUsRUFBRSxDQUFDLElBQUksaUJBQWlCLENBQUMsU0FBUyxFQUFFLE1BQU0sRUFBRSxJQUFJLENBQUMsQ0FDdEcsQ0FBQztBQVBOLDhDQW9DQyIsImZpbGUiOiI5Ny5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q29tcG9uZW50LCBFbnRpdHl9IGZyb20gXCJhZnJhbWVcIjtcclxuaW1wb3J0IHtBYnN0cmFjdENvbXBvbmVudENvbnRyb2xsZXJ9IGZyb20gXCIuL0Fic3RyYWN0Q29tcG9uZW50Q29udHJvbGxlclwiO1xyXG5pbXBvcnQge0NvbXBvbmVudENvbnRyb2xsZXJEZWZpbml0aW9ufSBmcm9tIFwiLi4vQUZyYW1lXCI7XHJcblxyXG5leHBvcnQgY2xhc3MgRXhhbXBsZUNvbnRyb2xsZXIgZXh0ZW5kcyBBYnN0cmFjdENvbXBvbmVudENvbnRyb2xsZXIge1xyXG5cclxuICAgIHB1YmxpYyBzdGF0aWMgREVGSU5JVElPTiA9IG5ldyBDb21wb25lbnRDb250cm9sbGVyRGVmaW5pdGlvbihcclxuICAgICAgICBcImV4YW1wbGVcIixcclxuICAgICAgICB7fSxcclxuICAgICAgICBmYWxzZSxcclxuICAgICAgICAoY29tcG9uZW50OiBDb21wb25lbnQsIGVudGl0eTogRW50aXR5LCBkYXRhOiBhbnkpID0+IG5ldyBFeGFtcGxlQ29udHJvbGxlcihjb21wb25lbnQsIGVudGl0eSwgZGF0YSlcclxuICAgICk7XHJcblxyXG4gICAgY29uc3RydWN0b3IoY29tcG9uZW50OiBDb21wb25lbnQsIGVudGl0eTogRW50aXR5LCBkYXRhOiBhbnkpIHtcclxuICAgICAgICBzdXBlcihjb21wb25lbnQsIGVudGl0eSwgZGF0YSk7XHJcbiAgICB9XHJcblxyXG4gICAgaW5pdCgpOiB2b2lkIHtcclxuICAgICAgICBjb25zb2xlLmxvZyh0aGlzLmNvbXBvbmVudE5hbWUgKyBcIiBpbml0OiBcIiArIEpTT04uc3RyaW5naWZ5KHRoaXMuZGF0YSkpO1xyXG4gICAgfVxyXG5cclxuICAgIHVwZGF0ZShkYXRhOiBhbnksIG9sZERhdGE6IGFueSk6IHZvaWQge1xyXG4gICAgICAgIC8vY29uc29sZS5sb2codGhpcy5jb21wb25lbnROYW1lICsgXCIgdXBkYXRlOiBcIiArIEpTT04uc3RyaW5naWZ5KHRoaXMuZGF0YSkpO1xyXG4gICAgfVxyXG5cclxuICAgIHJlbW92ZSgpOiB2b2lkIHtcclxuICAgICAgICAvL2NvbnNvbGUubG9nKHRoaXMuY29tcG9uZW50TmFtZSArIFwiIHJlbW92ZVwiKTtcclxuICAgIH1cclxuXHJcbiAgICBwYXVzZSgpOiB2b2lkIHtcclxuICAgICAgICAvL2NvbnNvbGUubG9nKHRoaXMuY29tcG9uZW50TmFtZSArIFwiIHBhdXNlXCIpO1xyXG4gICAgfVxyXG5cclxuICAgIHBsYXkoKTogdm9pZCB7XHJcbiAgICAgICAgLy9jb25zb2xlLmxvZyh0aGlzLmNvbXBvbmVudE5hbWUgKyBcIiBwbGF5XCIpO1xyXG4gICAgfVxyXG5cclxuICAgIHRpY2sodGltZTogbnVtYmVyLCB0aW1lRGVsdGE6IG51bWJlcik6IHZvaWQge1xyXG4gICAgfVxyXG5cclxufVxyXG5cclxuXHJcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///97\n')},function(module,exports,__webpack_require__){"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nconst AbstractSystemController_1 = __webpack_require__(17);\r\nconst AFrame_1 = __webpack_require__(0);\r\nclass ExampleSystemController extends AbstractSystemController_1.AbstractSystemController {\r\n    constructor(system, scene, data) {\r\n        super(system, scene, data);\r\n    }\r\n    init() {\r\n    }\r\n    pause() {\r\n    }\r\n    play() {\r\n    }\r\n    tick(time, timeDelta) {\r\n    }\r\n}\r\nExampleSystemController.DEFINITION = new AFrame_1.SystemControllerDefinition("example", {}, (system, scene, data) => new ExampleSystemController(system, scene, data));\r\nexports.ExampleSystemController = ExampleSystemController;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9zeXN0ZW0vRXhhbXBsZVN5c3RlbUNvbnRyb2xsZXIudHM/ZTVjNCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUNBLDJEQUFvRTtBQUNwRSx3Q0FBcUQ7QUFFckQsTUFBYSx1QkFBd0IsU0FBUSxtREFBd0I7SUFRakUsWUFBWSxNQUFjLEVBQUUsS0FBWSxFQUFFLElBQVM7UUFDL0MsS0FBSyxDQUFDLE1BQU0sRUFBRSxLQUFLLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDL0IsQ0FBQztJQUVELElBQUk7SUFDSixDQUFDO0lBRUQsS0FBSztJQUNMLENBQUM7SUFFRCxJQUFJO0lBQ0osQ0FBQztJQUVELElBQUksQ0FBQyxJQUFZLEVBQUUsU0FBaUI7SUFDcEMsQ0FBQzs7QUFwQmEsa0NBQVUsR0FBRyxJQUFJLG1DQUEwQixDQUNyRCxTQUFTLEVBQ1QsRUFBRSxFQUNGLENBQUMsTUFBYyxFQUFFLEtBQVksRUFBRSxJQUFTLEVBQUUsRUFBRSxDQUFDLElBQUksdUJBQXVCLENBQUMsTUFBTSxFQUFFLEtBQUssRUFBRSxJQUFJLENBQUMsQ0FDaEcsQ0FBQztBQU5OLDBEQXdCQyIsImZpbGUiOiI5OC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7U2NlbmUsIFN5c3RlbX0gZnJvbSBcImFmcmFtZVwiO1xyXG5pbXBvcnQge0Fic3RyYWN0U3lzdGVtQ29udHJvbGxlcn0gZnJvbSBcIi4vQWJzdHJhY3RTeXN0ZW1Db250cm9sbGVyXCI7XHJcbmltcG9ydCB7U3lzdGVtQ29udHJvbGxlckRlZmluaXRpb259IGZyb20gXCIuLi9BRnJhbWVcIjtcclxuXHJcbmV4cG9ydCBjbGFzcyBFeGFtcGxlU3lzdGVtQ29udHJvbGxlciBleHRlbmRzIEFic3RyYWN0U3lzdGVtQ29udHJvbGxlciB7XHJcblxyXG4gICAgcHVibGljIHN0YXRpYyBERUZJTklUSU9OID0gbmV3IFN5c3RlbUNvbnRyb2xsZXJEZWZpbml0aW9uKFxyXG4gICAgICAgIFwiZXhhbXBsZVwiLFxyXG4gICAgICAgIHt9LFxyXG4gICAgICAgIChzeXN0ZW06IFN5c3RlbSwgc2NlbmU6IFNjZW5lLCBkYXRhOiBhbnkpID0+IG5ldyBFeGFtcGxlU3lzdGVtQ29udHJvbGxlcihzeXN0ZW0sIHNjZW5lLCBkYXRhKVxyXG4gICAgKTtcclxuXHJcbiAgICBjb25zdHJ1Y3RvcihzeXN0ZW06IFN5c3RlbSwgc2NlbmU6IFNjZW5lLCBkYXRhOiBhbnkpIHtcclxuICAgICAgICBzdXBlcihzeXN0ZW0sIHNjZW5lLCBkYXRhKTtcclxuICAgIH1cclxuXHJcbiAgICBpbml0KCk6IHZvaWQge1xyXG4gICAgfVxyXG5cclxuICAgIHBhdXNlKCk6IHZvaWQge1xyXG4gICAgfVxyXG5cclxuICAgIHBsYXkoKTogdm9pZCB7XHJcbiAgICB9XHJcblxyXG4gICAgdGljayh0aW1lOiBudW1iZXIsIHRpbWVEZWx0YTogbnVtYmVyKTogdm9pZCB7XHJcbiAgICB9XHJcblxyXG59XHJcblxyXG5cclxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///98\n')},function(module,exports,__webpack_require__){"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nconst three_1 = __webpack_require__(2);\r\nconst Button_1 = __webpack_require__(3);\r\nconst AFrame_1 = __webpack_require__(0);\r\nconst util_1 = __webpack_require__(8);\r\nconst PointerTool_1 = __webpack_require__(45);\r\nconst math_1 = __webpack_require__(100);\r\nclass AddObjectTool extends PointerTool_1.PointerTool {\r\n    constructor(component, entity, data) {\r\n        super(component, entity, data);\r\n        this.entityTemplateScale = 1;\r\n        this.entityTemplate = \'<a-entity gltf-model="#cube" collidable/>\';\r\n        this.raycaster = new three_1.Raycaster();\r\n    }\r\n    init() {\r\n        console.log(this.componentName + " init");\r\n        super.init();\r\n    }\r\n    tick(time, timeDelta) {\r\n        super.tick(time, timeDelta);\r\n    }\r\n    buttonDown(device, toolSlot, button) {\r\n        if (!this.pressed.has(button)) {\r\n        }\r\n        super.buttonDown(device, toolSlot, button);\r\n    }\r\n    buttonUp(device, toolSlot, button) {\r\n        if (this.pressed.has(button)) {\r\n            if (button == Button_1.Button.TRIGGER) {\r\n                this.addEntity(device);\r\n            }\r\n        }\r\n        super.buttonUp(device, toolSlot, button);\r\n    }\r\n    addEntity(device) {\r\n        console.log("add object");\r\n        const gridStep = 1;\r\n        const pointedObject = this.pointedObject;\r\n        const pointerPosition = this.cursorPosition;\r\n        //const pointedFaceIndex = this.pointedFaceIndex;\r\n        if (pointedObject && pointerPosition) {\r\n            const pointedObjectPosition = pointedObject.position.clone();\r\n            pointedObject.getWorldPosition(pointedObjectPosition);\r\n            console.log("pointed object position" + JSON.stringify(pointedObjectPosition));\r\n            console.log("pointer position" + JSON.stringify(pointerPosition));\r\n            const newPosition = pointerPosition.clone();\r\n            console.log("pointed position" + newPosition);\r\n            newPosition.sub(pointedObjectPosition);\r\n            console.log("vector from object position to pointer: " + JSON.stringify(newPosition));\r\n            newPosition.normalize();\r\n            console.log("dormalized direction: " + JSON.stringify(newPosition));\r\n            newPosition.multiplyScalar(gridStep);\r\n            console.log("vector from object position to new position: " + JSON.stringify(newPosition));\r\n            newPosition.add(pointedObjectPosition);\r\n            console.log("new position: " + JSON.stringify(newPosition));\r\n            const snappedPosition = math_1.snapVector3ToAxisAlignedGrid(newPosition, gridStep);\r\n            console.log("snapper new position: " + JSON.stringify(snappedPosition));\r\n            const newHeldEntity = util_1.createElement(this.entityTemplate);\r\n            //const position = pointerPosition;\r\n            newHeldEntity.setAttribute("scale", this.entityTemplateScale + " " + this.entityTemplateScale + " " + this.entityTemplateScale);\r\n            newHeldEntity.setAttribute("position", snappedPosition.x + " " + snappedPosition.y + " " + snappedPosition.z);\r\n            this.scene.appendChild(newHeldEntity);\r\n        }\r\n    }\r\n}\r\nAddObjectTool.DEFINITION = new AFrame_1.ComponentControllerDefinition("add-object-tool", {}, false, (component, entity, data) => new AddObjectTool(component, entity, data));\r\nexports.AddObjectTool = AddObjectTool;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///99\n')},function(module,exports,__webpack_require__){"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nconst three_1 = __webpack_require__(2);\r\n/**\r\n * Snaps vector to axis aligned grid.\r\n * @param vector the vector\r\n * @param step the grid step\r\n */\r\nfunction snapVector3ToAxisAlignedGrid(vector, step) {\r\n    const snappedPosition = new three_1.Vector3();\r\n    snappedPosition.x = snapNumberToAxisAlignedGrid(vector.x, step);\r\n    snappedPosition.y = snapNumberToAxisAlignedGrid(vector.y, step);\r\n    snappedPosition.z = snapNumberToAxisAlignedGrid(vector.z, step);\r\n    return snappedPosition;\r\n}\r\nexports.snapVector3ToAxisAlignedGrid = snapVector3ToAxisAlignedGrid;\r\n/**\r\n * Snap number to grid.\r\n * @param number the number\r\n * @param step the grid step\r\n */\r\nfunction snapNumberToAxisAlignedGrid(number, step) {\r\n    return Math.round(number / step) * step;\r\n}\r\nexports.snapNumberToAxisAlignedGrid = snapNumberToAxisAlignedGrid;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9tYXRoL21hdGgudHM/NWNkMCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHVDQUE4QjtBQUU5Qjs7OztHQUlHO0FBQ0gsU0FBZ0IsNEJBQTRCLENBQUMsTUFBZSxFQUFFLElBQVk7SUFDdEUsTUFBTSxlQUFlLEdBQUcsSUFBSSxlQUFPLEVBQUUsQ0FBQztJQUN0QyxlQUFlLENBQUMsQ0FBQyxHQUFHLDJCQUEyQixDQUFDLE1BQU0sQ0FBQyxDQUFDLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDaEUsZUFBZSxDQUFDLENBQUMsR0FBRywyQkFBMkIsQ0FBQyxNQUFNLENBQUMsQ0FBQyxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQ2hFLGVBQWUsQ0FBQyxDQUFDLEdBQUcsMkJBQTJCLENBQUMsTUFBTSxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQztJQUNoRSxPQUFPLGVBQWUsQ0FBQztBQUMzQixDQUFDO0FBTkQsb0VBTUM7QUFHRDs7OztHQUlHO0FBQ0gsU0FBZ0IsMkJBQTJCLENBQUMsTUFBYyxFQUFFLElBQVk7SUFDcEUsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUMsR0FBRyxJQUFJLENBQUM7QUFDNUMsQ0FBQztBQUZELGtFQUVDIiwiZmlsZSI6IjEwMC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7VmVjdG9yM30gZnJvbSBcInRocmVlXCI7XHJcblxyXG4vKipcclxuICogU25hcHMgdmVjdG9yIHRvIGF4aXMgYWxpZ25lZCBncmlkLlxyXG4gKiBAcGFyYW0gdmVjdG9yIHRoZSB2ZWN0b3JcclxuICogQHBhcmFtIHN0ZXAgdGhlIGdyaWQgc3RlcFxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIHNuYXBWZWN0b3IzVG9BeGlzQWxpZ25lZEdyaWQodmVjdG9yOiBWZWN0b3IzLCBzdGVwOiBudW1iZXIpOiBWZWN0b3IzIHtcclxuICAgIGNvbnN0IHNuYXBwZWRQb3NpdGlvbiA9IG5ldyBWZWN0b3IzKCk7XHJcbiAgICBzbmFwcGVkUG9zaXRpb24ueCA9IHNuYXBOdW1iZXJUb0F4aXNBbGlnbmVkR3JpZCh2ZWN0b3IueCwgc3RlcCk7XHJcbiAgICBzbmFwcGVkUG9zaXRpb24ueSA9IHNuYXBOdW1iZXJUb0F4aXNBbGlnbmVkR3JpZCh2ZWN0b3IueSwgc3RlcCk7XHJcbiAgICBzbmFwcGVkUG9zaXRpb24ueiA9IHNuYXBOdW1iZXJUb0F4aXNBbGlnbmVkR3JpZCh2ZWN0b3Iueiwgc3RlcCk7XHJcbiAgICByZXR1cm4gc25hcHBlZFBvc2l0aW9uO1xyXG59XHJcblxyXG5cclxuLyoqXHJcbiAqIFNuYXAgbnVtYmVyIHRvIGdyaWQuXHJcbiAqIEBwYXJhbSBudW1iZXIgdGhlIG51bWJlclxyXG4gKiBAcGFyYW0gc3RlcCB0aGUgZ3JpZCBzdGVwXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gc25hcE51bWJlclRvQXhpc0FsaWduZWRHcmlkKG51bWJlcjogbnVtYmVyLCBzdGVwOiBudW1iZXIpOiBudW1iZXIge1xyXG4gICAgcmV0dXJuIE1hdGgucm91bmQobnVtYmVyIC8gc3RlcCkgKiBzdGVwO1xyXG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///100\n')},function(module,exports,__webpack_require__){"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nconst AbstractComponentController_1 = __webpack_require__(1);\r\nconst AFrame_1 = __webpack_require__(0);\r\nclass CollidableController extends AbstractComponentController_1.AbstractComponentController {\r\n    constructor(component, entity, data) {\r\n        super(component, entity, data);\r\n    }\r\n    init() {\r\n        console.log(this.componentName + " init: " + JSON.stringify(this.data));\r\n        this.interface.addCollidable(this.entity.object3D);\r\n    }\r\n    update(data, oldData) {\r\n        //console.log(this.componentName + " update: " + JSON.stringify(this.data));\r\n    }\r\n    remove() {\r\n        //console.log(this.componentName + " remove");\r\n        this.interface.removeCollidable(this.entity.object3D);\r\n    }\r\n    pause() {\r\n        //console.log(this.componentName + " pause");\r\n    }\r\n    play() {\r\n        //console.log(this.componentName + " play");\r\n    }\r\n    tick(time, timeDelta) {\r\n    }\r\n}\r\nCollidableController.DEFINITION = new AFrame_1.ComponentControllerDefinition("collidable", {}, false, (component, entity, data) => new CollidableController(component, entity, data));\r\nexports.CollidableController = CollidableController;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9jb21wb25lbnQvY29sbGlkYWJsZS9Db2xsaWRhYmxlQ29udHJvbGxlci50cz8yNmQyIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQ0EsNkRBQTJFO0FBQzNFLHdDQUEyRDtBQUUzRCxNQUFhLG9CQUFxQixTQUFRLHlEQUEyQjtJQVNqRSxZQUFZLFNBQW9CLEVBQUUsTUFBYyxFQUFFLElBQVM7UUFDdkQsS0FBSyxDQUFDLFNBQVMsRUFBRSxNQUFNLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDbkMsQ0FBQztJQUVELElBQUk7UUFDQSxPQUFPLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxhQUFhLEdBQUcsU0FBUyxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7UUFDeEUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUN2RCxDQUFDO0lBRUQsTUFBTSxDQUFDLElBQVMsRUFBRSxPQUFZO1FBQzFCLDRFQUE0RTtJQUNoRixDQUFDO0lBRUQsTUFBTTtRQUNGLDhDQUE4QztRQUM5QyxJQUFJLENBQUMsU0FBUyxDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDMUQsQ0FBQztJQUVELEtBQUs7UUFDRCw2Q0FBNkM7SUFDakQsQ0FBQztJQUVELElBQUk7UUFDQSw0Q0FBNEM7SUFDaEQsQ0FBQztJQUVELElBQUksQ0FBQyxJQUFZLEVBQUUsU0FBaUI7SUFDcEMsQ0FBQzs7QUFsQ2EsK0JBQVUsR0FBRyxJQUFJLHNDQUE2QixDQUN4RCxZQUFZLEVBQ1osRUFBRSxFQUNGLEtBQUssRUFDTCxDQUFDLFNBQW9CLEVBQUUsTUFBYyxFQUFFLElBQVMsRUFBRSxFQUFFLENBQUMsSUFBSSxvQkFBb0IsQ0FBQyxTQUFTLEVBQUUsTUFBTSxFQUFFLElBQUksQ0FBQyxDQUN6RyxDQUFDO0FBUE4sb0RBc0NDIiwiZmlsZSI6IjEwMS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q29tcG9uZW50LCBFbnRpdHl9IGZyb20gXCJhZnJhbWVcIjtcclxuaW1wb3J0IHtBYnN0cmFjdENvbXBvbmVudENvbnRyb2xsZXJ9IGZyb20gXCIuLi9BYnN0cmFjdENvbXBvbmVudENvbnRyb2xsZXJcIjtcclxuaW1wb3J0IHtDb21wb25lbnRDb250cm9sbGVyRGVmaW5pdGlvbn0gZnJvbSBcIi4uLy4uL0FGcmFtZVwiO1xyXG5cclxuZXhwb3J0IGNsYXNzIENvbGxpZGFibGVDb250cm9sbGVyIGV4dGVuZHMgQWJzdHJhY3RDb21wb25lbnRDb250cm9sbGVyIHtcclxuXHJcbiAgICBwdWJsaWMgc3RhdGljIERFRklOSVRJT04gPSBuZXcgQ29tcG9uZW50Q29udHJvbGxlckRlZmluaXRpb24oXHJcbiAgICAgICAgXCJjb2xsaWRhYmxlXCIsXHJcbiAgICAgICAge30sXHJcbiAgICAgICAgZmFsc2UsXHJcbiAgICAgICAgKGNvbXBvbmVudDogQ29tcG9uZW50LCBlbnRpdHk6IEVudGl0eSwgZGF0YTogYW55KSA9PiBuZXcgQ29sbGlkYWJsZUNvbnRyb2xsZXIoY29tcG9uZW50LCBlbnRpdHksIGRhdGEpXHJcbiAgICApO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKGNvbXBvbmVudDogQ29tcG9uZW50LCBlbnRpdHk6IEVudGl0eSwgZGF0YTogYW55KSB7XHJcbiAgICAgICAgc3VwZXIoY29tcG9uZW50LCBlbnRpdHksIGRhdGEpO1xyXG4gICAgfVxyXG5cclxuICAgIGluaXQoKTogdm9pZCB7XHJcbiAgICAgICAgY29uc29sZS5sb2codGhpcy5jb21wb25lbnROYW1lICsgXCIgaW5pdDogXCIgKyBKU09OLnN0cmluZ2lmeSh0aGlzLmRhdGEpKTtcclxuICAgICAgICB0aGlzLmludGVyZmFjZS5hZGRDb2xsaWRhYmxlKHRoaXMuZW50aXR5Lm9iamVjdDNEKTtcclxuICAgIH1cclxuXHJcbiAgICB1cGRhdGUoZGF0YTogYW55LCBvbGREYXRhOiBhbnkpOiB2b2lkIHtcclxuICAgICAgICAvL2NvbnNvbGUubG9nKHRoaXMuY29tcG9uZW50TmFtZSArIFwiIHVwZGF0ZTogXCIgKyBKU09OLnN0cmluZ2lmeSh0aGlzLmRhdGEpKTtcclxuICAgIH1cclxuXHJcbiAgICByZW1vdmUoKTogdm9pZCB7XHJcbiAgICAgICAgLy9jb25zb2xlLmxvZyh0aGlzLmNvbXBvbmVudE5hbWUgKyBcIiByZW1vdmVcIik7XHJcbiAgICAgICAgdGhpcy5pbnRlcmZhY2UucmVtb3ZlQ29sbGlkYWJsZSh0aGlzLmVudGl0eS5vYmplY3QzRCk7XHJcbiAgICB9XHJcblxyXG4gICAgcGF1c2UoKTogdm9pZCB7XHJcbiAgICAgICAgLy9jb25zb2xlLmxvZyh0aGlzLmNvbXBvbmVudE5hbWUgKyBcIiBwYXVzZVwiKTtcclxuICAgIH1cclxuXHJcbiAgICBwbGF5KCk6IHZvaWQge1xyXG4gICAgICAgIC8vY29uc29sZS5sb2codGhpcy5jb21wb25lbnROYW1lICsgXCIgcGxheVwiKTtcclxuICAgIH1cclxuXHJcbiAgICB0aWNrKHRpbWU6IG51bWJlciwgdGltZURlbHRhOiBudW1iZXIpOiB2b2lkIHtcclxuICAgIH1cclxuXHJcbn1cclxuXHJcblxyXG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///101\n')},function(module,exports,__webpack_require__){"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nconst AFrame_1 = __webpack_require__(0);\r\nconst AbstractComponentController_1 = __webpack_require__(1);\r\nclass QuaternionController extends AbstractComponentController_1.AbstractComponentController {\r\n    constructor(component, entity, data) {\r\n        super(component, entity, data);\r\n    }\r\n    init() {\r\n        console.log(this.componentName + " init: " + JSON.stringify(this.data));\r\n        const x = this.data.x;\r\n        const y = this.data.y;\r\n        const z = this.data.z;\r\n        const w = this.data.w;\r\n        this.entity.object3D.quaternion.x = x;\r\n        this.entity.object3D.quaternion.y = y;\r\n        this.entity.object3D.quaternion.z = z;\r\n        this.entity.object3D.quaternion.w = w;\r\n    }\r\n    update(data, oldData) {\r\n        const x = data.x;\r\n        const y = data.y;\r\n        const z = data.z;\r\n        const w = data.w;\r\n        this.entity.object3D.quaternion.x = x;\r\n        this.entity.object3D.quaternion.y = y;\r\n        this.entity.object3D.quaternion.z = z;\r\n        this.entity.object3D.quaternion.w = w;\r\n    }\r\n    remove() {\r\n        //console.log(this.componentName + " remove");\r\n    }\r\n    pause() {\r\n        //console.log(this.componentName + " pause");\r\n    }\r\n    play() {\r\n        //console.log(this.componentName + " play");\r\n    }\r\n    tick(time, timeDelta) {\r\n    }\r\n}\r\nQuaternionController.DEFINITION = new AFrame_1.ComponentControllerDefinition("quaternion", {\r\n    type: \'vec4\'\r\n}, false, (component, entity, data) => new QuaternionController(component, entity, data));\r\nexports.QuaternionController = QuaternionController;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9jb21wb25lbnQvcXVhdGVybmlvbi9RdWF0ZXJuaW9uQ29udHJvbGxlci50cz82ZjE1Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsd0NBQTJEO0FBRTNELDZEQUEyRTtBQUUzRSxNQUFhLG9CQUFxQixTQUFRLHlEQUEyQjtJQVdqRSxZQUFZLFNBQW9CLEVBQUUsTUFBYyxFQUFFLElBQVM7UUFDdkQsS0FBSyxDQUFDLFNBQVMsRUFBRSxNQUFNLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDbkMsQ0FBQztJQUVELElBQUk7UUFDQSxPQUFPLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxhQUFhLEdBQUcsU0FBUyxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7UUFFeEUsTUFBTSxDQUFDLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7UUFDdEIsTUFBTSxDQUFDLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7UUFDdEIsTUFBTSxDQUFDLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7UUFDdEIsTUFBTSxDQUFDLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7UUFFdEIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsVUFBVSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDdEMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsVUFBVSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDdEMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsVUFBVSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDdEMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsVUFBVSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7SUFFMUMsQ0FBQztJQUVELE1BQU0sQ0FBQyxJQUFTLEVBQUUsT0FBWTtRQUMxQixNQUFNLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQyxDQUFDO1FBQ2pCLE1BQU0sQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDLENBQUM7UUFDakIsTUFBTSxDQUFDLEdBQUcsSUFBSSxDQUFDLENBQUMsQ0FBQztRQUNqQixNQUFNLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQyxDQUFDO1FBRWpCLElBQUksQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLFVBQVUsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ3RDLElBQUksQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLFVBQVUsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ3RDLElBQUksQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLFVBQVUsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ3RDLElBQUksQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLFVBQVUsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQzFDLENBQUM7SUFFRCxNQUFNO1FBQ0YsOENBQThDO0lBQ2xELENBQUM7SUFFRCxLQUFLO1FBQ0QsNkNBQTZDO0lBQ2pELENBQUM7SUFFRCxJQUFJO1FBQ0EsNENBQTRDO0lBQ2hELENBQUM7SUFFRCxJQUFJLENBQUMsSUFBWSxFQUFFLFNBQWlCO0lBQ3BDLENBQUM7O0FBckRhLCtCQUFVLEdBQUcsSUFBSSxzQ0FBNkIsQ0FDeEQsWUFBWSxFQUFFO0lBQ1YsSUFBSSxFQUFFLE1BQU07Q0FDZixFQUFFLEtBQUssRUFDUixDQUFDLFNBQW9CLEVBQUUsTUFBYyxFQUFFLElBQVMsRUFBRSxFQUFFLENBQUMsSUFBSSxvQkFBb0IsQ0FBQyxTQUFTLEVBQUUsTUFBTSxFQUFFLElBQUksQ0FBQyxDQUN6RyxDQUFDO0FBUE4sb0RBeURDIiwiZmlsZSI6IjEwMi5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q29tcG9uZW50Q29udHJvbGxlckRlZmluaXRpb259IGZyb20gXCIuLi8uLi9BRnJhbWVcIjtcclxuaW1wb3J0IHtDb21wb25lbnQsIEVudGl0eX0gZnJvbSBcImFmcmFtZVwiO1xyXG5pbXBvcnQge0Fic3RyYWN0Q29tcG9uZW50Q29udHJvbGxlcn0gZnJvbSBcIi4uL0Fic3RyYWN0Q29tcG9uZW50Q29udHJvbGxlclwiO1xyXG5cclxuZXhwb3J0IGNsYXNzIFF1YXRlcm5pb25Db250cm9sbGVyIGV4dGVuZHMgQWJzdHJhY3RDb21wb25lbnRDb250cm9sbGVyIHtcclxuXHJcbiAgICBwdWJsaWMgc3RhdGljIERFRklOSVRJT04gPSBuZXcgQ29tcG9uZW50Q29udHJvbGxlckRlZmluaXRpb24oXHJcbiAgICAgICAgXCJxdWF0ZXJuaW9uXCIsIHtcclxuICAgICAgICAgICAgdHlwZTogJ3ZlYzQnXHJcbiAgICAgICAgfSwgZmFsc2UsXHJcbiAgICAgICAgKGNvbXBvbmVudDogQ29tcG9uZW50LCBlbnRpdHk6IEVudGl0eSwgZGF0YTogYW55KSA9PiBuZXcgUXVhdGVybmlvbkNvbnRyb2xsZXIoY29tcG9uZW50LCBlbnRpdHksIGRhdGEpXHJcbiAgICApO1xyXG5cclxuICAgIGxhYmVsRWxlbWVudDogRWxlbWVudCB8IHVuZGVmaW5lZDtcclxuXHJcbiAgICBjb25zdHJ1Y3Rvcihjb21wb25lbnQ6IENvbXBvbmVudCwgZW50aXR5OiBFbnRpdHksIGRhdGE6IGFueSkge1xyXG4gICAgICAgIHN1cGVyKGNvbXBvbmVudCwgZW50aXR5LCBkYXRhKTtcclxuICAgIH1cclxuXHJcbiAgICBpbml0KCk6IHZvaWQge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKHRoaXMuY29tcG9uZW50TmFtZSArIFwiIGluaXQ6IFwiICsgSlNPTi5zdHJpbmdpZnkodGhpcy5kYXRhKSk7XHJcblxyXG4gICAgICAgIGNvbnN0IHggPSB0aGlzLmRhdGEueDtcclxuICAgICAgICBjb25zdCB5ID0gdGhpcy5kYXRhLnk7XHJcbiAgICAgICAgY29uc3QgeiA9IHRoaXMuZGF0YS56O1xyXG4gICAgICAgIGNvbnN0IHcgPSB0aGlzLmRhdGEudztcclxuXHJcbiAgICAgICAgdGhpcy5lbnRpdHkub2JqZWN0M0QucXVhdGVybmlvbi54ID0geDtcclxuICAgICAgICB0aGlzLmVudGl0eS5vYmplY3QzRC5xdWF0ZXJuaW9uLnkgPSB5O1xyXG4gICAgICAgIHRoaXMuZW50aXR5Lm9iamVjdDNELnF1YXRlcm5pb24ueiA9IHo7XHJcbiAgICAgICAgdGhpcy5lbnRpdHkub2JqZWN0M0QucXVhdGVybmlvbi53ID0gdztcclxuXHJcbiAgICB9XHJcblxyXG4gICAgdXBkYXRlKGRhdGE6IGFueSwgb2xkRGF0YTogYW55KTogdm9pZCB7XHJcbiAgICAgICAgY29uc3QgeCA9IGRhdGEueDtcclxuICAgICAgICBjb25zdCB5ID0gZGF0YS55O1xyXG4gICAgICAgIGNvbnN0IHogPSBkYXRhLno7XHJcbiAgICAgICAgY29uc3QgdyA9IGRhdGEudztcclxuXHJcbiAgICAgICAgdGhpcy5lbnRpdHkub2JqZWN0M0QucXVhdGVybmlvbi54ID0geDtcclxuICAgICAgICB0aGlzLmVudGl0eS5vYmplY3QzRC5xdWF0ZXJuaW9uLnkgPSB5O1xyXG4gICAgICAgIHRoaXMuZW50aXR5Lm9iamVjdDNELnF1YXRlcm5pb24ueiA9IHo7XHJcbiAgICAgICAgdGhpcy5lbnRpdHkub2JqZWN0M0QucXVhdGVybmlvbi53ID0gdztcclxuICAgIH1cclxuXHJcbiAgICByZW1vdmUoKTogdm9pZCB7XHJcbiAgICAgICAgLy9jb25zb2xlLmxvZyh0aGlzLmNvbXBvbmVudE5hbWUgKyBcIiByZW1vdmVcIik7XHJcbiAgICB9XHJcblxyXG4gICAgcGF1c2UoKTogdm9pZCB7XHJcbiAgICAgICAgLy9jb25zb2xlLmxvZyh0aGlzLmNvbXBvbmVudE5hbWUgKyBcIiBwYXVzZVwiKTtcclxuICAgIH1cclxuXHJcbiAgICBwbGF5KCk6IHZvaWQge1xyXG4gICAgICAgIC8vY29uc29sZS5sb2codGhpcy5jb21wb25lbnROYW1lICsgXCIgcGxheVwiKTtcclxuICAgIH1cclxuXHJcbiAgICB0aWNrKHRpbWU6IG51bWJlciwgdGltZURlbHRhOiBudW1iZXIpOiB2b2lkIHtcclxuICAgIH1cclxuXHJcbn1cclxuXHJcblxyXG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///102\n')},function(module,exports,__webpack_require__){"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nconst three_1 = __webpack_require__(2);\r\nconst Slot_1 = __webpack_require__(5);\r\nconst Button_1 = __webpack_require__(3);\r\nconst AFrame_1 = __webpack_require__(0);\r\nconst PointerTool_1 = __webpack_require__(45);\r\nclass TeleportTool extends PointerTool_1.PointerTool {\r\n    constructor(component, entity, data) {\r\n        super(component, entity, data);\r\n        //this.interface.setTool(ToolSlot.PRIMARY, this);\r\n        this.raycaster = new three_1.Raycaster();\r\n        this.interface.registerTool(this);\r\n        this.interface.slotTool(Slot_1.Slot.PRIMARY, this);\r\n    }\r\n    init() {\r\n        console.log(this.componentName + " init");\r\n        super.init();\r\n    }\r\n    tick(time, timeDelta) {\r\n        super.tick(time, timeDelta);\r\n    }\r\n    buttonDown(device, toolSlot, button) {\r\n        if (!this.pressed.has(button)) {\r\n        }\r\n        super.buttonDown(device, toolSlot, button);\r\n    }\r\n    buttonUp(device, toolSlot, button) {\r\n        if (this.pressed.has(button)) {\r\n            if (button == Button_1.Button.TRIGGER) {\r\n                if (this.cursorPosition) {\r\n                    const movementTool = this.interface.getToolAtSlot(Slot_1.Slot.WALK);\r\n                    this.interface.interfaceEntity.object3D.position.x = this.cursorPosition.x;\r\n                    this.interface.interfaceEntity.object3D.position.y = this.cursorPosition.y;\r\n                    this.interface.interfaceEntity.object3D.position.z = this.cursorPosition.z;\r\n                    movementTool.setCenterOfMassFromInterfaceEntity();\r\n                }\r\n            }\r\n        }\r\n        super.buttonUp(device, toolSlot, button);\r\n    }\r\n}\r\nTeleportTool.DEFINITION = new AFrame_1.ComponentControllerDefinition("teleport-tool", {}, false, (component, entity, data) => new TeleportTool(component, entity, data));\r\nexports.TeleportTool = TeleportTool;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9zeXN0ZW0vaW50ZXJmYWNlL3Rvb2wvVGVsZXBvcnRUb29sLnRzP2EzYjUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSx1Q0FBZ0M7QUFHaEMsc0NBQW1DO0FBQ25DLHdDQUF1QztBQUN2Qyx3Q0FBOEQ7QUFDOUQsOENBQTBDO0FBRzFDLE1BQWEsWUFBYSxTQUFRLHlCQUFXO0lBTXpDLFlBQVksU0FBb0IsRUFBRSxNQUFjLEVBQUUsSUFBUztRQUN2RCxLQUFLLENBQUMsU0FBUyxFQUFFLE1BQU0sRUFBRSxJQUFJLENBQUMsQ0FBQztRQUMvQixpREFBaUQ7UUFDakQsSUFBSSxDQUFDLFNBQVMsR0FBRyxJQUFJLGlCQUFTLEVBQUUsQ0FBQztRQUNqQyxJQUFJLENBQUMsU0FBUyxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNsQyxJQUFJLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQyxXQUFJLENBQUMsT0FBTyxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQ2hELENBQUM7SUFFRCxJQUFJO1FBQ0EsT0FBTyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsYUFBYSxHQUFHLE9BQU8sQ0FBQyxDQUFDO1FBQzFDLEtBQUssQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUNqQixDQUFDO0lBRUQsSUFBSSxDQUFDLElBQVksRUFBRSxTQUFpQjtRQUNoQyxLQUFLLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxTQUFTLENBQUMsQ0FBQztJQUNoQyxDQUFDO0lBRUQsVUFBVSxDQUFDLE1BQWMsRUFBRSxRQUFjLEVBQUUsTUFBYztRQUNyRCxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLEVBQUU7U0FFOUI7UUFDRCxLQUFLLENBQUMsVUFBVSxDQUFDLE1BQU0sRUFBRSxRQUFRLEVBQUUsTUFBTSxDQUFDLENBQUM7SUFDL0MsQ0FBQztJQUVELFFBQVEsQ0FBQyxNQUFjLEVBQUUsUUFBYyxFQUFFLE1BQWM7UUFDbkQsSUFBSSxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsRUFBRTtZQUMxQixJQUFJLE1BQU0sSUFBSSxlQUFNLENBQUMsT0FBTyxFQUFFO2dCQUMxQixJQUFJLElBQUksQ0FBQyxjQUFjLEVBQUU7b0JBQ3JCLE1BQU0sWUFBWSxHQUFhLElBQUksQ0FBQyxTQUFTLENBQUMsYUFBYSxDQUFDLFdBQUksQ0FBQyxJQUFJLENBQWEsQ0FBQztvQkFDbkYsSUFBSSxDQUFDLFNBQVMsQ0FBQyxlQUFlLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FBQyxDQUFDLENBQUM7b0JBQzNFLElBQUksQ0FBQyxTQUFTLENBQUMsZUFBZSxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxjQUFjLENBQUMsQ0FBQyxDQUFDO29CQUMzRSxJQUFJLENBQUMsU0FBUyxDQUFDLGVBQWUsQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsY0FBYyxDQUFDLENBQUMsQ0FBQztvQkFDM0UsWUFBWSxDQUFDLGtDQUFrQyxFQUFFLENBQUM7aUJBQ3JEO2FBQ0o7U0FDSjtRQUNELEtBQUssQ0FBQyxRQUFRLENBQUMsTUFBTSxFQUFFLFFBQVEsRUFBRSxNQUFNLENBQUMsQ0FBQztJQUM3QyxDQUFDOztBQXpDYSx1QkFBVSxHQUFHLElBQUksc0NBQTZCLENBQ3hELGVBQWUsRUFBRSxFQUFFLEVBQUUsS0FBSyxFQUFFLENBQUMsU0FBb0IsRUFBRSxNQUFjLEVBQUUsSUFBUyxFQUFFLEVBQUUsQ0FBQyxJQUFJLFlBQVksQ0FBQyxTQUFTLEVBQUUsTUFBTSxFQUFFLElBQUksQ0FBQyxDQUM3SCxDQUFDO0FBSk4sb0NBNkNDIiwiZmlsZSI6IjEwMy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7UmF5Y2FzdGVyfSBmcm9tIFwidGhyZWVcIjtcclxuaW1wb3J0IHtDb21wb25lbnQsIEVudGl0eX0gZnJvbSBcImFmcmFtZVwiO1xyXG5pbXBvcnQge0RldmljZX0gZnJvbSBcIi4uL0RldmljZVwiO1xyXG5pbXBvcnQge1Nsb3R9IGZyb20gXCIuLi9tb2RlbC9TbG90XCI7XHJcbmltcG9ydCB7QnV0dG9ufSBmcm9tIFwiLi4vbW9kZWwvQnV0dG9uXCI7XHJcbmltcG9ydCB7Q29tcG9uZW50Q29udHJvbGxlckRlZmluaXRpb259IGZyb20gXCIuLi8uLi8uLi9BRnJhbWVcIjtcclxuaW1wb3J0IHtQb2ludGVyVG9vbH0gZnJvbSBcIi4vUG9pbnRlclRvb2xcIjtcclxuaW1wb3J0IHtXYWxrVG9vbH0gZnJvbSBcIi4vV2Fsa1Rvb2xcIjtcclxuXHJcbmV4cG9ydCBjbGFzcyBUZWxlcG9ydFRvb2wgZXh0ZW5kcyBQb2ludGVyVG9vbCB7XHJcblxyXG4gICAgcHVibGljIHN0YXRpYyBERUZJTklUSU9OID0gbmV3IENvbXBvbmVudENvbnRyb2xsZXJEZWZpbml0aW9uKFxyXG4gICAgICAgIFwidGVsZXBvcnQtdG9vbFwiLCB7fSwgZmFsc2UsIChjb21wb25lbnQ6IENvbXBvbmVudCwgZW50aXR5OiBFbnRpdHksIGRhdGE6IGFueSkgPT4gbmV3IFRlbGVwb3J0VG9vbChjb21wb25lbnQsIGVudGl0eSwgZGF0YSlcclxuICAgICk7XHJcblxyXG4gICAgY29uc3RydWN0b3IoY29tcG9uZW50OiBDb21wb25lbnQsIGVudGl0eTogRW50aXR5LCBkYXRhOiBhbnkpIHtcclxuICAgICAgICBzdXBlcihjb21wb25lbnQsIGVudGl0eSwgZGF0YSk7XHJcbiAgICAgICAgLy90aGlzLmludGVyZmFjZS5zZXRUb29sKFRvb2xTbG90LlBSSU1BUlksIHRoaXMpO1xyXG4gICAgICAgIHRoaXMucmF5Y2FzdGVyID0gbmV3IFJheWNhc3RlcigpO1xyXG4gICAgICAgIHRoaXMuaW50ZXJmYWNlLnJlZ2lzdGVyVG9vbCh0aGlzKTtcclxuICAgICAgICB0aGlzLmludGVyZmFjZS5zbG90VG9vbChTbG90LlBSSU1BUlksIHRoaXMpO1xyXG4gICAgfVxyXG5cclxuICAgIGluaXQoKTogdm9pZCB7XHJcbiAgICAgICAgY29uc29sZS5sb2codGhpcy5jb21wb25lbnROYW1lICsgXCIgaW5pdFwiKTtcclxuICAgICAgICBzdXBlci5pbml0KCk7XHJcbiAgICB9XHJcblxyXG4gICAgdGljayh0aW1lOiBudW1iZXIsIHRpbWVEZWx0YTogbnVtYmVyKTogdm9pZCB7XHJcbiAgICAgICAgc3VwZXIudGljayh0aW1lLCB0aW1lRGVsdGEpO1xyXG4gICAgfVxyXG5cclxuICAgIGJ1dHRvbkRvd24oZGV2aWNlOiBEZXZpY2UsIHRvb2xTbG90OiBTbG90LCBidXR0b246IEJ1dHRvbik6IHZvaWQge1xyXG4gICAgICAgIGlmICghdGhpcy5wcmVzc2VkLmhhcyhidXR0b24pKSB7XHJcblxyXG4gICAgICAgIH1cclxuICAgICAgICBzdXBlci5idXR0b25Eb3duKGRldmljZSwgdG9vbFNsb3QsIGJ1dHRvbik7XHJcbiAgICB9XHJcblxyXG4gICAgYnV0dG9uVXAoZGV2aWNlOiBEZXZpY2UsIHRvb2xTbG90OiBTbG90LCBidXR0b246IEJ1dHRvbik6IHZvaWQge1xyXG4gICAgICAgIGlmICh0aGlzLnByZXNzZWQuaGFzKGJ1dHRvbikpIHtcclxuICAgICAgICAgICAgaWYgKGJ1dHRvbiA9PSBCdXR0b24uVFJJR0dFUikge1xyXG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuY3Vyc29yUG9zaXRpb24pIHtcclxuICAgICAgICAgICAgICAgICAgICBjb25zdCBtb3ZlbWVudFRvb2w6IFdhbGtUb29sID0gdGhpcy5pbnRlcmZhY2UuZ2V0VG9vbEF0U2xvdChTbG90LldBTEspIGFzIFdhbGtUb29sO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuaW50ZXJmYWNlLmludGVyZmFjZUVudGl0eS5vYmplY3QzRC5wb3NpdGlvbi54ID0gdGhpcy5jdXJzb3JQb3NpdGlvbi54O1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuaW50ZXJmYWNlLmludGVyZmFjZUVudGl0eS5vYmplY3QzRC5wb3NpdGlvbi55ID0gdGhpcy5jdXJzb3JQb3NpdGlvbi55O1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuaW50ZXJmYWNlLmludGVyZmFjZUVudGl0eS5vYmplY3QzRC5wb3NpdGlvbi56ID0gdGhpcy5jdXJzb3JQb3NpdGlvbi56O1xyXG4gICAgICAgICAgICAgICAgICAgIG1vdmVtZW50VG9vbC5zZXRDZW50ZXJPZk1hc3NGcm9tSW50ZXJmYWNlRW50aXR5KCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgc3VwZXIuYnV0dG9uVXAoZGV2aWNlLCB0b29sU2xvdCwgYnV0dG9uKTtcclxuICAgIH1cclxuXHJcbn1cclxuXHJcblxyXG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///103\n')},function(module,exports,__webpack_require__){"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nconst AbstractComponentController_1 = __webpack_require__(1);\r\nconst AFrame_1 = __webpack_require__(0);\r\nconst util_1 = __webpack_require__(8);\r\nconst Button_1 = __webpack_require__(3);\r\nconst Slot_1 = __webpack_require__(5);\r\nclass ToolSelectorTool extends AbstractComponentController_1.AbstractComponentController {\r\n    constructor(component, entity, data) {\r\n        super(component, entity, data);\r\n        this.toolSymbolEntities = new Map();\r\n        console.log(this.componentName + " init: " + JSON.stringify(this.data));\r\n        this.interface.slotTool(Slot_1.Slot.PRIMARY_SELECTOR, this);\r\n    }\r\n    init() {\r\n        this.interface.registerSlotListener(Slot_1.Slot.PRIMARY, this);\r\n        util_1.addEntityEventListener(this.scene, "enter-vr", (detail) => {\r\n            const toolSelectorObject = this.entity.object3D;\r\n            const vrModePlaceholderObject = document.getElementById("tool-selector-vr-placeholder");\r\n            const desktopModePlaceholderObject = document.getElementById("tool-selector-desktop-placeholder");\r\n            if (vrModePlaceholderObject && desktopModePlaceholderObject) {\r\n                desktopModePlaceholderObject.object3D.remove(toolSelectorObject);\r\n                vrModePlaceholderObject.object3D.add(toolSelectorObject);\r\n            }\r\n            else {\r\n                console.warn("tool-selector placeholders not found.");\r\n            }\r\n        });\r\n        util_1.addEntityEventListener(this.scene, "exit-vr", (detail) => {\r\n            const toolSelectorObject = this.entity.object3D;\r\n            const vrModePlaceholderObject = document.getElementById("tool-selector-vr-placeholder");\r\n            const desktopModePlaceholderObject = document.getElementById("tool-selector-desktop-placeholder");\r\n            if (vrModePlaceholderObject && desktopModePlaceholderObject) {\r\n                vrModePlaceholderObject.object3D.remove(toolSelectorObject);\r\n                desktopModePlaceholderObject.object3D.add(toolSelectorObject);\r\n            }\r\n            else {\r\n                console.warn("tool-selector placeholders not found.");\r\n            }\r\n        });\r\n    }\r\n    update(data, oldData) {\r\n        console.log(this.componentName + " update: " + JSON.stringify(this.data));\r\n    }\r\n    remove() {\r\n        console.log(this.componentName + " remove");\r\n    }\r\n    pause() {\r\n        console.log(this.componentName + " pause");\r\n    }\r\n    play() {\r\n        console.log(this.componentName + " play");\r\n    }\r\n    tick(time, timeDelta) {\r\n    }\r\n    buttonDown(device, toolSlot, button) {\r\n    }\r\n    buttonUp(device, toolSlot, button) {\r\n        if (button === Button_1.Button.LEFT) {\r\n            this.interface.slotPreviousTool(Slot_1.Slot.PRIMARY);\r\n        }\r\n        if (button === Button_1.Button.RIGHT) {\r\n            this.interface.slotNextTool(Slot_1.Slot.PRIMARY);\r\n        }\r\n    }\r\n    stickTwist(device, toolSlot, stick, x, y) {\r\n    }\r\n    onToolSlotted(slot, toolName) {\r\n        if (!this.toolSymbolEntities.has(toolName)) {\r\n            const toolSymbolEntity = util_1.createElement(\'<a-entity gltf-model="#\' + toolName + \'" visible="false"></a-entity>\');\r\n            this.entity.appendChild(toolSymbolEntity);\r\n            this.toolSymbolEntities.set(toolName, toolSymbolEntity);\r\n        }\r\n        if (this.currentToolName) {\r\n            this.toolSymbolEntities.get(this.currentToolName).setAttribute("visible", false);\r\n        }\r\n        this.toolSymbolEntities.get(toolName).setAttribute("visible", true);\r\n        this.currentToolName = toolName;\r\n    }\r\n}\r\nToolSelectorTool.DEFINITION = new AFrame_1.ComponentControllerDefinition("tool-selector-tool", {}, false, (component, entity, data) => new ToolSelectorTool(component, entity, data));\r\nexports.ToolSelectorTool = ToolSelectorTool;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///104\n')}]);